{
    "0.1.0": {
        "info": {
            "author": "Maximilian N\u00f6the",
            "author_email": "maximilian.noethe@tu-dortmund.de",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Scientific/Engineering :: Image Recognition"
            ],
            "description": "# pyquirc\n\nPython and C++ bindings for the [quirc](https://github.com/dlbeer/quirc) library, created using [pybind11](https://github.com/pybind/pybind11).\n\n## Example\n\n```python\n# we read images using pillow, numpy arrays do also work\nfrom PIL import Image, ImageOps\nimport quirc\n\nimg = Image.open(\"resources/helloworld.png\")\n\n# we need to convert to 8-bit grayscale for quirc\nimg = ImageOps.grayscale(img)\n\n# Images must either have `tobytes()`, `width` and `height` like PIL images\n# or support the 2d buffer protocal, both with data type uint8 (8-Bit Grayscale)\ndecoded_codes = quirc.decode(img)\n\nprint(f'Found {len(decoded_codes)} qr code(s) in the image')\n\nfor data in decoded_codes:\n    print(data)\n```\n\nOutput:\n```\nFound 1 qr code(s) in the image\nData(payload=b'Hello, World!', version=1, data_type=DataType.BYTE, eci=ECI.UNDEFINED, ecc_level=ECCLevel.M, mask=5)\n```\n\n\n## On the Command Line\n\nThis package also installs the tool `pyquirc_decode`, which will\nuse `pillow` as above and decode the QR code in the given image.\n\nThe payloads of each decoded qr code will be printed to stdout, one per line:\n\n```\n$ pyquirc_decode resources/helloworld.png -v\nINFO Found 1 qr code in image\nINFO --- Payload 1 ---\nHello, World!\n```\n\nThe log messages come on stderr, so piping the the output will only pipe\nthe payloads, not the log output.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyquirc",
            "package_url": "https://pypi.org/project/pyquirc/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyquirc/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pyquirc/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Python bindings for quirc, via pybind11",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15974264,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c72cc183f8a9f8a34d3fec6187077a74",
                    "sha256": "8b2da9f01e994e1935599eada3efc3e204f98ad3c55d57a9f764013884d14711"
                },
                "downloads": -1,
                "filename": "pyquirc-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "c72cc183f8a9f8a34d3fec6187077a74",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 4698,
                "upload_time": "2022-12-02T20:51:21",
                "upload_time_iso_8601": "2022-12-02T20:51:21.281937Z",
                "url": "https://files.pythonhosted.org/packages/29/19/b866b782cb8cb9617819095ac627c85ce761f28d2a340e95f11755582f66/pyquirc-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}