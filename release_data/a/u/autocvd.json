{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# autocvd - Automatically set `CUDA_VISIBLE_DEVICES`\n\nAre you working on a shared system with multiple NVIDIA GPUs and tired of manually setting `CUDA_VISIBLE_DEVICES` every time you run a program? Then, *autocvd* might be the right tool for you!\n\nBasic usage is as simple as:\n```\n$ eval $(autocvd) your_awesome_program\n```\n*autocvd* will identify a free GPU and set `CUDA_VISIBLE_DEVICES` accordingly. If no GPU is free, it will wait until one becomes available. This behavior can be customized (see [Usage](#usage)).\n\n## Features\n- no dependencies\n- can be used from command line and code\n- no code changes required (if used from the command line)\n\n## Requirements\n*autocvd* uses [`nvidia-smi`](https://developer.nvidia.com/nvidia-system-management-interface) to query GPU utilization.\nMake sure that it is installed and callable.\n\n## Installation\n```bash\npip install autocvd\n```\n## Usage\n### Command Line\n```\n$ autocvd -h\nusage: autocvd [-h] [-n NUM_GPUS] [-l] [-t TIMEOUT] [-i INTERVAL] [-s]\n\nSelect GPUs based on their utilization. To set the environment variables CUDA_VISIBLE_DEVICES and CUDA_DEVICE_ORDER for a single command run 'eval $(autocvd <args>) <command>'. To\nsource them into the current shell environment run '. <(autocvd -s <args>)'.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -n NUM_GPUS, --num-gpus NUM_GPUS\n                        Number of required GPUs. Defaults to 1.\n  -l, --least-used      Instead of waiting for free GPUs, use least used. Defaults to False.\n  -t TIMEOUT, --timeout TIMEOUT\n                        Timeout for waiting in seconds. Defaults to None.\n  -i INTERVAL, --interval INTERVAL\n                        Interval to query GPU status in seconds. Defaults to 30.\n  -s, --source          Add 'export' statements to output such that environment can be sourced.\n```\n\n### Code\n```python\nfrom autocvd import autocvd\n\n\nautocvd()\n```\n\n```python\ndef autocvd(\n    num_gpus: int = 1,\n    least_used: bool = False,\n    timeout: Optional[int] = None,\n    interval: int = 30,\n    set_env: bool = True,\n    verbose: bool = True,\n) -> List[int]:\n    \"\"\"Select GPUs based on their utilization.\n\n    Args:\n        num_gpus: Number of required GPUs. Defaults to 1.\n        least_used: Instead of waiting for free GPUs, use least used.\n            Defaults to False.\n        timeout: Timeout for waiting in seconds. Defaults to None.\n        interval: Interval to query GPU status in seconds. Defaults to 30.\n        set_env: Set environment variables according to selected GPUs.\n            Defaults to True.\n        verbose: Print additional information. Defaults to True.\n\n    Raises:\n        ValueError: If arguments are invalid.\n        TimeoutError: If GPUs could not be acquired after `timeout` seconds.\n\n    Returns:\n        A list containing the selected GPUs.\n    \"\"\"\n```\n\n## Notes\n- Settings `CUDA_DEVICE_ORDER=PCI_BUS_ID` is required to ensure that the ordering of CUDA devices is the same for `nvidia-smi` and other programs.\n\n## Similar Projects\n- [cuthon](https://github.com/awni/cuthon)\n- [setGPU](https://github.com/bamos/setGPU)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autocvd",
            "package_url": "https://pypi.org/project/autocvd/",
            "platform": null,
            "project_url": "https://pypi.org/project/autocvd/",
            "project_urls": {
                "Bug Tracker": "https://github.com/jonasricker/autocvd/issues",
                "Homepage": "https://github.com/jonasricker/autocvd"
            },
            "release_url": "https://pypi.org/project/autocvd/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15838298,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "04959efce6d9e85b6604f45360cfe383",
                    "sha256": "fce71b7e71a1c527142262fcf4e57ce99d3c2b32909df1420551041efef7fde7"
                },
                "downloads": -1,
                "filename": "autocvd-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "04959efce6d9e85b6604f45360cfe383",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 5846,
                "upload_time": "2022-11-21T10:02:08",
                "upload_time_iso_8601": "2022-11-21T10:02:08.260780Z",
                "url": "https://files.pythonhosted.org/packages/ac/60/1966c188aefa5618a65d2ba3f48d741b9c626b19c61f82288fdd8eb164a7/autocvd-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "26ff83e616936c2c952c50308d7d613d",
                    "sha256": "cb722b489fd6b4dc36386520ea3981f7f98ed32d187ec9cb466012d04952d5c0"
                },
                "downloads": -1,
                "filename": "autocvd-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "26ff83e616936c2c952c50308d7d613d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5124,
                "upload_time": "2022-11-21T10:02:09",
                "upload_time_iso_8601": "2022-11-21T10:02:09.465298Z",
                "url": "https://files.pythonhosted.org/packages/39/9d/444d7256acd99774115f691146ea57154eb1bd5257d937b681c6fd74be2b/autocvd-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}