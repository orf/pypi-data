{
    "0.2.0": {
        "info": {
            "author": "Bartosz Mikulski",
            "author_email": "mail@mikulskibartosz.name",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "## Summary\n\nThe goal of this project is to implement a data validation library for PySpark. The library should detect the incorrect structure of the data, unexpected values in columns, and anomalies in the data.\n\n## How to install\n\nTHERE IS NO PACKAGE YET!!!\n\n## How to use\n\n```\nfrom checkengine.validate_df import ValidateSparkDataFrame\n\nresult = ValidateSparkDataFrame(spark_session, spark_data_frame) \\\n        .is_not_null(\"column_name\") \\\n        .are_not_null([\"column_name_2\", \"column_name_3\"]) \\\n        .is_min(\"numeric_column\", 10) \\\n        .is_max(\"numeric_column\", 20) \\\n        .is_unique(\"column_name\") \\\n        .are_unique([\"column_name_2\", \"column_name_3\"]) \\\n        .is_between(\"numeric_column_2\", 10, 15) \\\n        .has_length_between(\"text_column\", 0, 10) \\\n        .mean_column_value(\"numeric_column\", 10, 20) \\\n        .median_column_value(\"numeric_column\", 5, 15) \\\n        .text_matches_regex(\"text_column\", \"^[a-z]{3,10}$\") \\\n        .one_of(\"text_column\", [\"value_a\", \"value_b\"]) \\\n        .one_of(\"numeric_column\", [123, 456]) \\\n        .execute()\n\nresult.correct_data #rows that passed the validation\nresult.erroneous_data #rows rejected during the validation\nresults.errors a summary of validation errors (three fields: column_name, constraint_name, number_of_errors)\n```\n\n## How to build\n\n1. Install the Poetry build tool.\n\n2. Run the following commands:\n\n```\ncd check-engine-lib\npoetry build\n```\n\n## How to test locally\n\n### Run all tests\n\n```\ncd check-engine-lib\npoetry run pytest tests/\n```\n\n### Run a single test file\n\n```\ncd check-engine-lib\npoetry run pytest tests/test_between_integer.py\n```\n\n### Run a single test method\n\n```\ncd check-engine-lib\npoetry run pytest tests/test_between_integer.py -k 'test_should_return_df_without_changes_if_all_are_between'\n```\n\n## How to test in Docker\n\n```\ndocker build -t check-engine-test check-engine-lib/. && docker run check-engine-test\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mikulskibartosz/check-engine",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "checkengine",
            "package_url": "https://pypi.org/project/checkengine/",
            "platform": "",
            "project_url": "https://pypi.org/project/checkengine/",
            "project_urls": {
                "Homepage": "https://github.com/mikulskibartosz/check-engine",
                "Repository": "https://github.com/mikulskibartosz/check-engine"
            },
            "release_url": "https://pypi.org/project/checkengine/0.2.0/",
            "requires_dist": [
                "pyspark (==3.0.3)"
            ],
            "requires_python": ">=3.8,<4.0",
            "summary": "Data-quality checks for PySpark",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10908855,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6287a4ecf8bd48daeae1bd70e5b61b1b",
                    "sha256": "281ef83d928fb3ae262b9be714253aa7250d857f2a1946627c382c367ab51f1e"
                },
                "downloads": -1,
                "filename": "checkengine-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6287a4ecf8bd48daeae1bd70e5b61b1b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 9683,
                "upload_time": "2021-07-14T15:42:46",
                "upload_time_iso_8601": "2021-07-14T15:42:46.868062Z",
                "url": "https://files.pythonhosted.org/packages/30/0d/95d650a334f33ef8da0c1f6ffefdaf312f44c6da2a927ff147f44fa26bac/checkengine-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e5319fb0a9cfacc721cc1bfb924951c8",
                    "sha256": "7d3d0563f1998b910d51a366e3dbcedcfef52e5fb7b30caab1407f4daf85a4c0"
                },
                "downloads": -1,
                "filename": "checkengine-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e5319fb0a9cfacc721cc1bfb924951c8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 6733,
                "upload_time": "2021-07-14T15:42:48",
                "upload_time_iso_8601": "2021-07-14T15:42:48.436825Z",
                "url": "https://files.pythonhosted.org/packages/07/30/014e8d5ed1f1a6c6f8f3defc13b117c77a5c4d41c92c0f841f7f55b241d1/checkengine-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}