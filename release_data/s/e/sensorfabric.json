{
    "0.1.2": {
        "info": {
            "author": "Shravan Aras",
            "author_email": "shravanaras@arizona.edu",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Python Package for Sensor Fabric\n\nWelcome to the python package for SensorFabric. \n\n## What is SensorFabric?\n\nSensorFabric is an initiative by University of Arizona's Center of Bioinformatics and Biostatistics (CB2)\nto create homogenous layer for accessing, storing and processing sensor data.\n\n## How to install it?\n\nYou can install the sensorfabric python library using `pip` as follows\n```\npip install sensorfabric\n```\n\n## Getting Started\n\nSensorFabric has several different modules. We try to give a basic overview here.\n\n### Athena Module\nThe Athena module abstracts query execution and caching, by returning results from AWS Athena\nas Pandas dataframes. </br>\n**To run this locally you must have aws credentials configured using `aws configure`**\n\n```\nfrom sensorfabric.athena import athena\nimport pandas as pd\n\n# Create an object.\ndb = athena(database='MyExampleDatabase')\n\n# Execute a query by performing a blocking operation.\nframe = db.execQuery('SELECT \"participantId\" FROM \"fitbit_hr\" LIMIT 5')\n# Print out the pandas frame.\nprint(frame.head())\n\n# Queries can also be run async (callbacks are currently not supported)\nexecutionId = db.startQueryExec('SELECT \"participantId\" FROM \"fitbit_hr\" LIMIT 5')\n# Returns immidately, with the query execution ID. \n\n# Do some important work here\n\nframe = db.queryResults(executionId)\n# Returns the query result as a dataframe\nprint(frame.head()) \n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/UArizonaCB2/sensorfabric-py.git",
            "keywords": "sensors sensorfabric",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "sensorfabric",
            "package_url": "https://pypi.org/project/sensorfabric/",
            "platform": null,
            "project_url": "https://pypi.org/project/sensorfabric/",
            "project_urls": {
                "Homepage": "https://github.com/UArizonaCB2/sensorfabric-py.git"
            },
            "release_url": "https://pypi.org/project/sensorfabric/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3",
            "summary": "Python library for UA Sensor Fabric",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15936774,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8727edbcacbb9fedc80b5d2ea910fc82",
                    "sha256": "b215103d79d4a0f0f6cf912151821636753b734402c381b02a1cfd26af76e77b"
                },
                "downloads": -1,
                "filename": "sensorfabric-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "8727edbcacbb9fedc80b5d2ea910fc82",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 4769,
                "upload_time": "2022-11-30T02:45:19",
                "upload_time_iso_8601": "2022-11-30T02:45:19.447393Z",
                "url": "https://files.pythonhosted.org/packages/b6/7f/6eeda59125109a5a4d946c15641f96bcf94761c40a9a7fd1b2b3e0c6dfe9/sensorfabric-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}