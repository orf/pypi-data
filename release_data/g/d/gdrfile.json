{
    "0.0.1": {
        "info": {
            "author": "Gleb Mazur",
            "author_email": "mazur.gleb2010@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# \u0413\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u0444\u0430\u0439\u043b\u043e\u0432 \u0434\u043b\u044f django rest \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f #\n\nGdrfile - \u0433\u0435\u043d\u0435\u0440\u0430\u0442\u043e\u0440 \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430 \u043e\u0441\u043d\u043e\u0432\u0443 \u0431\u0435\u0440\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u0438 \n\u0438\u0437 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a \u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u0430\u043c \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f: \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f, \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u044b,\n\u0442\u0435\u0441\u0442\u044b, \u0430\u0434\u043c\u0438\u043d-\u043f\u0430\u043d\u0435\u043b\u044c, init \u0444\u0430\u0439\u043b\u044b, \u0440\u043e\u0443\u0442\u0435\u0440.\n\n# \u041a\u0430\u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c # \n\nPip:\n\n```bash\npip install gdrfile\n  ```\n\nPoetry:\n\n```bash\npoetry add gdrfile\n ```\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 #\n\n\u0414\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 django \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443:\n\n```bash\ngdrfile -pm=path/to/folder/models -pa=path.to.api -an=app_name\n ```\n\n\u0414\u043b\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0438 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432:\n\n```bash\ngdrfile -clear\n ```\n\n\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u0438\u043c\u0435\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 **\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435** \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b.\n\n1. **-pm** - \u041f\u0443\u0442\u044c \u0434\u043e \u043f\u0430\u043f\u043a\u0438 models \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\n   \u041f\u0440\u0438\u043c\u0435\u0440: server/apps/name_app/models\n2. **-pa** - \u041f\u0443\u0442\u044c \u0434\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440: server.apps.name_app\n   \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0445 \u0438\u043c\u043f\u043e\u0440\u0442\u043e\u0432\n3. **-an** - \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440: app_name\n\n**\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435** \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b:\n\n1. **-pmc** - \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043a\u0440\u043e\u043c\u0435 \u043e\u0442 models.Model \u0438\nBaseModel. \u041f\u0440\u0438\u043c\u0435\u0440: BaseModel, MPTTModel\n\u0438 \u0434\u0440. \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u0438 ';' \u0438 ','.\n2. **-mf** - \u041f\u043e\u043b\u044f \u0432 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0437 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u043f\u0430\u043a\u0435\u0442\u043e\u0432. \u0414\u043b\u044f \u0438\u0445 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e\n\u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043d\u0438\u0445.\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0432\n\u043c\u043e\u0434\u0435\u043b\u0438, \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0432 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0435 \u0438 \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0432 \u0442\u0435\u0441\u0442\u0430\u0445.\n\u041f\u0440\u0438\u043c\u0435\u0440: PhoneField, CharField(), fake.number();\n\u0414\u043b\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u043b\u044f \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c ',', \u0430 \u0432 \u043a\u043e\u043d\u0446\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c ';'\n3. **-r** - \u0424\u043b\u0430\u0433 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u0430\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \n(\u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 django-rules). \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e False.\n\n\u0427\u0442\u043e\u0431\u044b \u043d\u0435 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0432 \u0440\u0443\u0447\u043d\u0443\u044e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0443\u0442\u044c \u0434\u043e\n.env \u0444\u0430\u0439\u043b\u0430.\n\n```bash\n$ gdrfile -env=settings/config\n```\n\n\u0412 .env \u0444\u0430\u0439\u043b\u0435 \u0442\u0430\u043a\u0436\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0440\u0438 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435:\n\n```yaml\n# \u041f\u0443\u0442\u044c \u0434\u043e \u043f\u0430\u043f\u043a\u0438 models \u0438\u0437 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438.\nGDRFILE_PATH_TO_MODELS=server/apps/app_name/models\n\n# \u041f\u0443\u0442\u044c \u0434\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\nGDRFILE_PATH_TO_API=server.apps.app_name\n\n# \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\nGDRFILE_APP_NAME=app_name\n\n# \u0422\u0438\u043f\u044b \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0438\u0437 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a.\n# \u041f\u0435\u0440\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0435\u0439.\n# \u0412\u0442\u043e\u0440\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0432 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0435.\n# \u0422\u0440\u0435\u0442\u044c\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 - \u0442\u0438\u043f \u043f\u043e\u043b\u044f \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432 \u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0435 faker.\nGDRFILE_MODEL_FIELDS=TreeForeignKey, None, fake.pyint();\n\n# \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u043c\u043e\u0434\u0435\u043b\u0435\u0439, \u043a\u0440\u043e\u043c\u0435 models.Model \u0438 BaseModel\nGDRFILE_PARENT_MODEL_CLASS=MPTTModel, ExampleModel\n\n# \u0424\u043b\u0430\u0433 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0444\u0430\u0439\u043b\u043e\u0432 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043f\u0440\u0430\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0430\nGDRFILE_RULES=False\n```\n\n\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0430 \u0438\u0437 \u043c\u043e\u0434\u0435\u043b\u0435\u0439:\n\n```\n{{path_to_app}} - \u043f\u0443\u0442\u044c \u0434\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n{{app_name}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n{{AppName}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 \u0432\u0435\u0440\u0431\u043b\u0431\u044e\u0436\u0435\u043c \u0441\u0442\u0438\u043b\u0435\n{{app-name}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 '-'\n{{MainClass}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0432 \u0432\u0435\u0440\u0431\u043b\u0431\u044e\u0436\u0435\u043c \u0441\u0442\u0438\u043b\u0435\n{{main_class}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 '_'\n{{mainclass}} - \u0441\u043b\u0438\u0442\u043d\u043e\u0435 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c\u0438 \u0431\u0443\u043a\u0432\u0430\u043c\u0438 \n{{main-class}} - \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 '-'\n{{docs}} - \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043c\u043e\u0434\u0435\u043b\u0438\n{{list_main_fields}} - \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438\nfields_django_model - \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u0442\u0438\u043f\u0430\u043c\u0438, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0430\u043c\u0438 \u0432 \u043c\u043e\u0434\u0435\u043b\u0435\nfields_for_serializers - \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u0442\u0438\u043f\u0430\u043c\u0438 \u0434\u043b\u044f \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\nfields_for_conftest - \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 \u0441 \u0442\u0438\u043f\u0430\u043c\u0438 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\n```\n\n\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0444\u0430\u0439\u043b\u043e\u0432 \u0434\u043b\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438. \n\u0414\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0430\u043f\u043a\u0443 sample \n\u0441\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439:\n\n```\nsample\n  \u251c\u2500\u2500 conftest\n  \u2502    \u251c\u2500\u2500 conftest_factory.py\n  \u2502    \u251c\u2500\u2500 conftest_fixture.py\n  \u2502    \u2514\u2500\u2500 conftest_import.py\n  \u251c\u2500\u2500 example_admin.py\n  \u251c\u2500\u2500 example_init_serializer.py\n  \u251c\u2500\u2500 example_init_view.py\n  \u251c\u2500\u2500 example_routers.py\n  \u251c\u2500\u2500 example_rules.py\n  \u251c\u2500\u2500 example_serializers.py\n  \u251c\u2500\u2500 example_tests.py\n  \u251c\u2500\u2500 example_views.py\n  \u2514\u2500\u2500 example_views_this_rules.py\n```\n\n# \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432\n\n\n##### \u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440:\n```python\nfrom rest_framework import serializers\n\nfrom server.apps.mobile_provision.models import Account\n\n\nclass AccountSerializer(serializers.ModelSerializer):\n    \"\"\"\u0410\u043a\u043a\u0430\u0443\u043d\u0442.\"\"\"\n\n    class Meta(object):\n        model = Account\n        fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n\n\nclass AccountSerializer(serializers.Serializer):\n    \"\"\"\u0410\u043a\u043a\u0430\u0443\u043d\u0442.\"\"\"\n\n        user = serializers.None(__change_me__)\n        photo = serializers.ImageField()\n        birth_date = serializers.DateField()\n        passport_series = serializers.CharField()\n        passport_number = serializers.CharField()\n```\n\n##### \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043a\u0430\u043a \u0441 \u043f\u0440\u0430\u0432\u0430\u043c\u0438, \u0442\u0430\u043a \u0438 \u0431\u0435\u0437 \u043f\u0440\u0430\u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0430)\n```python\nfrom rest_framework.viewsets import ModelViewSet\n\nfrom server.apps.mobile_provision.api.serializers import AccountSerializer\nfrom server.apps.mobile_provision.models import Account\n\n\nclass AccountViewSet(ModelViewSet):\n    \"\"\"\u0410\u043a\u043a\u0430\u0443\u043d\u0442.\"\"\"\n\n    queryset = Account.objects.all()\n    serializer_class = AccountSerializer\n    ordering_fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n    search_fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n\n\nfrom rest_framework_extensions.mixins import NestedViewSetMixin\nfrom rest_framework.viewsets import ModelViewSet\nfrom rules.contrib.rest_framework import AutoPermissionViewSetMixin\n\nfrom server.apps.mobile_provision.api.serializers import AccountSerializer\nfrom server.apps.mobile_provision.models import Account\n\nclass AccountViewSet(\n    NestedViewSetMixin,\n    AutoPermissionViewSetMixin,\n    ModelViewSet,\n):\n    \"\"\"\u0410\u043a\u043a\u0430\u0443\u043d\u0442.\"\"\"\n\n    queryset = Account.objects.all()\n    serializer_class = AccountSerializer\n    ordering_fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n    search_fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n    permission_type_map = {\n        **AutoPermissionViewSetMixin.permission_type_map,\n        'list': 'list',\n        'metadata': None,\n    }\n```\n\n##### \u041f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430\n```python\nimport rules\nfrom rules.predicates import is_authenticated\n\n\nrules.add_perm('mobile_provision.view_account', is_authenticated)\nrules.add_perm('mobile_provision.add_account', is_authenticated)\nrules.add_perm('mobile_provision.change_account', is_authenticated)\nrules.add_perm('mobile_provision.delete_account', is_authenticated)\nrules.add_perm('mobile_provision.list_account', is_authenticated)\n```\n\n##### \u0422\u0435\u0441\u0442\u044b\n```python\nimport pytest\nfrom faker import Faker\nfrom rest_framework import status\nfrom rest_framework.reverse import reverse\n\nfake = Faker()\n\n\n@pytest.mark.django_db()\ndef test_account_format(\n    api_client,\n    account,\n    account_format,\n):\n    \"\"\"\u0424\u043e\u0440\u043c\u0430\u0442 Account.\"\"\"\n    url = reverse(\n        'api:mobile-provision:account-detail',\n        [account.pk],\n    )\n\n    json_response = api_client.get(url).json()\n\n    assert json_response == account_format(account)\n\n\n@pytest.mark.django_db()\ndef test_account_post(\n    api_client,\n):\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 Account.\"\"\"\n    url = reverse('api:mobile-provision:account-list')\n    json_response = api_client.post(\n        url,\n        data={},\n        format='json',\n    )\n\n    assert json_response.status_code == status.HTTP_201_CREATED\n\n\n@pytest.mark.django_db()\ndef test_account_delete(\n    api_client,\n    account,\n):\n    \"\"\"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 Account.\"\"\"\n    url = reverse(\n        'api:mobile-provision:account-detail',\n        [account.pk],\n    )\n\n    json_response = api_client.delete(url)\n\n    assert json_response.status_code == status.HTTP_204_NO_CONTENT\n\n\n@pytest.mark.django_db()\ndef test_account_change(\n    api_client,\n    account,\n):\n    \"\"\"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 Account.\"\"\"\n    url = reverse(\n        'api:mobile-provision:account-detail',\n        [account.pk],\n    )\n\n    json_response = api_client.put(\n        url,\n        data={},\n        format='json',\n    )\n\n    assert json_response.status_code == status.HTTP_200_OK\n```\n\n##### \u0410\u0434\u043c\u0438\u043d\u043a\u0430\n```python\nfrom django.contrib import admin\nfrom server.apps.mobile_provision.model import Account\n\n\n@admin.register(Account)\nclass ConfigurableAdmin(admin.ModelAdmin[Account]):\n    \"\"\"\u0410\u043a\u043a\u0430\u0443\u043d\u0442.\"\"\"\n\n    list_filter = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n    search_fields = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n    list_display = ['user', 'photo', 'birth_date', 'passport_series', 'passport_number']\n```\n\n##### \u0424\u0430\u0439\u043b conftest \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u043e\u0432\n```python\nimport pytest\nfrom factory import LazyAttribute, SubFactory\nfrom factory.django import DjangoModelFactory\nfrom faker import Faker\nfrom pytest_factoryboy import register\nfrom rest_framework.fields import DateTimeField\nfrom rest_framework.test import APIClient\n\nfrom server.apps.mobile_provision.models import Account\n\nfake = Faker()\n\n\nclass AccountFactory(DjangoModelFactory):\n    \"\"\"\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f Account.\"\"\"\n\n    class Meta(object):\n        model = Account\n\n    user = factory.SubFactory(__change_me__)\n    photo = factory.LazyAttribute(lambda account: fake.file_name())\n    birth_date = factory.LazyAttribute(lambda account: fake.date_between())\n    passport_series = factory.LazyAttribute(lambda account: fake.paragraph())\n    passport_number = factory.LazyAttribute(lambda account: fake.paragraph())\n\n\nregister(Account)\n\n\n@pytest.fixture\ndef account_format():\n    \"\"\"\u0424\u043e\u0440\u043c\u0430\u0442 Account.\"\"\"\n    def _account_format(account: Account):\n        return {\n            'id': account.pk,\n            'user': account.user,\n            'photo': account.photo,\n            'birth_date': account.birth_date,\n            'passport_series': account.passport_series,\n            'passport_number': account.passport_number,\n        }\n    return _account_format\n```\n\n##### \u0424\u0430\u0439\u043b init \u0432 \u043f\u0430\u043f\u043a\u0435 \u0441 \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0442\u043e\u0440\u0430\u043c\u0438. \u0410\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0439 \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0439\n```python\nfrom server.apps.app_name.api.serializer.measure_recommendation import AccountSerializer\n\n__all__ = [\n    'AccountSerializer',\n]\n```\n\n##### \u0424\u0430\u0439\u043b router\n```python\nfrom django.utils.translation import gettext_lazy as _\nfrom drf_nova_router.api_router import ApiRouter\nfrom rest_framework.routers import APIRootView\n\nfrom server.apps.app_name.api.views import AccountViewSet\n\n\nclass AppNameAPIRootView(APIRootView):\n    \"\"\"\u041a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 view \u0434\u043b\u044f app.\"\"\"\n\n    __doc__ = _('\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 AppName')\n    name = _('app_name')\n\n\nrouter = ApiRouter()\n\nrouter.APIRootView = AppNameAPIRootView\nrouter.register('accounts', AccountViewSet, 'accounts')\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/BigBread57/gdrfile",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gdrfile",
            "package_url": "https://pypi.org/project/gdrfile/",
            "platform": null,
            "project_url": "https://pypi.org/project/gdrfile/",
            "project_urls": {
                "Homepage": "https://github.com/BigBread57/gdrfile",
                "Repository": "https://github.com/BigBread57/gdrfile"
            },
            "release_url": "https://pypi.org/project/gdrfile/0.0.1/",
            "requires_dist": [
                "poetry-core (>=1.0.8,<2.0.0)",
                "python-dotenv (>=0.20.0,<0.21.0)"
            ],
            "requires_python": ">=3.7,<4",
            "summary": "Generate file for django rest framework.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14626251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9bfd5eca8db88d2abce84150ecdbec09",
                    "sha256": "765d853e985b08432161a336b92bdc44f9d5466f106afc5489d9f058d7eba593"
                },
                "downloads": -1,
                "filename": "gdrfile-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9bfd5eca8db88d2abce84150ecdbec09",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4",
                "size": 34072,
                "upload_time": "2022-08-02T11:10:01",
                "upload_time_iso_8601": "2022-08-02T11:10:01.393364Z",
                "url": "https://files.pythonhosted.org/packages/fd/40/7c25d685ec5a3c35c5a95ece1e725ee82f948b3332bad5481fadeb562eec/gdrfile-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2cdeff75df8e41ae2bd9012baf1296fb",
                    "sha256": "e05e6dd9682d73e826a0533e44edc64f5b9d5ccf59ba8f9af00c3c30ba5916f2"
                },
                "downloads": -1,
                "filename": "gdrfile-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2cdeff75df8e41ae2bd9012baf1296fb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4",
                "size": 23567,
                "upload_time": "2022-08-02T11:10:04",
                "upload_time_iso_8601": "2022-08-02T11:10:04.445706Z",
                "url": "https://files.pythonhosted.org/packages/4b/96/77b8482a64c6cd0ff45e1b66ee8adc83adb8578be059a8874ee627bc7bde/gdrfile-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}