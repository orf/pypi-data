{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/tandav/bisect_find_first_bad",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bisect-find-first-bad",
            "package_url": "https://pypi.org/project/bisect-find-first-bad/",
            "platform": null,
            "project_url": "https://pypi.org/project/bisect-find-first-bad/",
            "project_urls": {
                "Homepage": "https://github.com/tandav/bisect_find_first_bad"
            },
            "release_url": "https://pypi.org/project/bisect-find-first-bad/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "tool like `git bisect run` but checks arbitrary options and not uses git to switch versions",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15871139,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "33e0a3384c6b2f0b72f37034e0b5d5f6",
                    "sha256": "5d2d66c94ad86b38d43c15c63f68f6abe3d3f2ff8e5aa596aba07690225be036"
                },
                "downloads": -1,
                "filename": "bisect_find_first_bad-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "33e0a3384c6b2f0b72f37034e0b5d5f6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2733,
                "upload_time": "2022-06-03T11:02:48",
                "upload_time_iso_8601": "2022-06-03T11:02:48.121622Z",
                "url": "https://files.pythonhosted.org/packages/f1/9d/be58943decfea1d7de60c9d448188f0f38d6858fff67da4215e383f076d9/bisect_find_first_bad-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/tandav/bisect_find_first_bad",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bisect-find-first-bad",
            "package_url": "https://pypi.org/project/bisect-find-first-bad/",
            "platform": null,
            "project_url": "https://pypi.org/project/bisect-find-first-bad/",
            "project_urls": {
                "Homepage": "https://github.com/tandav/bisect_find_first_bad"
            },
            "release_url": "https://pypi.org/project/bisect-find-first-bad/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "tool like `git bisect run` but checks arbitrary options and not uses git to switch versions",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15871139,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "84497b047c7a606ee12e824e05aa1d2d",
                    "sha256": "ef4b2970e66b6d855a860c82b6d4efe79edd9b0670a46eababd89a2d7aad4fcf"
                },
                "downloads": -1,
                "filename": "bisect_find_first_bad-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "84497b047c7a606ee12e824e05aa1d2d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2762,
                "upload_time": "2022-06-03T11:19:46",
                "upload_time_iso_8601": "2022-06-03T11:19:46.322342Z",
                "url": "https://files.pythonhosted.org/packages/a2/71/ff7e3ed7e1945590b2a5164b181758f828bccd357eb36f345ddca20d2131/bisect_find_first_bad-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Alexander Rodionov",
            "author_email": "tandav@tandav.me",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# bisect_find_first_bad\n[`git bisect run`](https://git-scm.com/docs/git-bisect#_bisect_run) can only search through commits.\nThis search don't use git to switch versions. You can check arbitrary options for `is_bad`.\n\n## install\n```\npip install bisect-find-first-bad\n```\n\n\n## usage\nyou should subclass from `BisectFindFirstBad` and implement 1 method `is_bad` or `is_good`.\nThis method should return `True/False` which indicates is option good or bad.\nWhen instantiating your class you should provide a sequence of options to check. They should be sorted by `is_bad`. Left side of options are good options and on the right are bad ones.\n\n\n## simple example\n```py\nfrom bisect_find_first_bad import BisectFindFirstBad\n\nclass FirstGreaterThan3(BisectFindFirstBad):\n    def is_bad(self, op) -> bool:\n        return op > 3\n\n# or you can use is_good:\nclass FirstGreaterThan3(BisectFindFirstBad):\n    def is_good(self, op) -> bool:\n        return op <= 3\n\nfirst_greater_than_3 = FirstGreaterThan3(options = (1, 2, 3, 4, 5, 6))\n```\n\n```py\n>>> first_greater_than_3.is_bad(2)\nFalse\n\n>>> first_greater_than_3.is_bad(5)\nTrue\n\n>>> first_greater_than_3()\n4 start\n4: BAD\n2 start\n2: GOOD\n3 start\n3: GOOD\n====================================================================================================\nfirst bad option is: 4\n4\n```\n\n\n## more complex example - find first bad version of poetry dependency\n```py\nimport subprocess\nfrom bisect_find_first_bad import BisectFindFirstBad\n\nclass FirstBadDependencyVersion(BisectFindFirstBad):\n    def is_bad(self, op) -> bool:\n        # kinda setup\n        subprocess.check_call(f'git checkout HEAD -- poetry.lock pyproject.toml && poetry add \"my_library=={op}\"', shell=True)\n\n        # check is_bad\n        return bool(subprocess.run('make test', shell=True).returncode)\n\nfirst_bad_dependency_version = FirstBadDependencyVersion(options='''\\\nv0.0.1\nv0.0.2\nv0.0.3\nv0.1.0\nv0.1.1\nv0.1.2\nv0.2.0\nv0.2.1\n'''.splitlines())\n```\n\n```py\n>>> first_bad_dependency_version()\nv0.1.1 start\nv0.1.1: GOOD\nv0.2.0 start\nv0.2.0: BAD\nv0.1.2 start\nv0.1.2: BAD\n====================================================================================================\nfirst bad option is: v0.1.2\n'v0.1.2'\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/tandav/bisect_find_first_bad",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bisect-find-first-bad",
            "package_url": "https://pypi.org/project/bisect-find-first-bad/",
            "platform": null,
            "project_url": "https://pypi.org/project/bisect-find-first-bad/",
            "project_urls": {
                "Homepage": "https://github.com/tandav/bisect_find_first_bad"
            },
            "release_url": "https://pypi.org/project/bisect-find-first-bad/0.0.3/",
            "requires_dist": [
                "bumpver ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest ; extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "tool like `git bisect run` but checks arbitrary options and not uses git to switch versions",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15871139,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b703ca56ebb5985c2c0af84f3f291765",
                    "sha256": "1355ea94eee66e89dace56832ba15cf5ddf3d8d71d4aee2ff3146e17e3d0f66c"
                },
                "downloads": -1,
                "filename": "bisect_find_first_bad-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b703ca56ebb5985c2c0af84f3f291765",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 3420,
                "upload_time": "2022-11-23T20:25:13",
                "upload_time_iso_8601": "2022-11-23T20:25:13.009926Z",
                "url": "https://files.pythonhosted.org/packages/ec/d9/e6ba0924fdf6d6de5b5e7fc93e6d597dcc41362235cfc34bef090b45fa48/bisect_find_first_bad-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "561e89ce88256156dc150234d68b1870",
                    "sha256": "8dff034516850f22fecbcaca2d6dc1526f46fa65387908d5febf04249dbfa0ac"
                },
                "downloads": -1,
                "filename": "bisect_find_first_bad-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "561e89ce88256156dc150234d68b1870",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 3590,
                "upload_time": "2022-11-23T20:25:14",
                "upload_time_iso_8601": "2022-11-23T20:25:14.180953Z",
                "url": "https://files.pythonhosted.org/packages/31/83/2f68ca887da3fb58f66b9922e806549da0efbf2ada3ca9c05fe0682add9b/bisect_find_first_bad-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}