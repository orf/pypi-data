{
    "1.2.0": {
        "info": {
            "author": "Victor Azzam",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "Intended Audience :: Information Technology",
                "License :: OSI Approved :: MIT License",
                "Operating System :: MacOS",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# demal\n\n[![PyPI](https://img.shields.io/pypi/v/demal?logo=git&style=flat)](https://pypi.python.org/pypi/torrentstream)\n\nMAL (Meta Attack Language) to JSON decoding library and command-line tool.\n\n## Info\n\n**Author:** Victor Azzam\n\n**License:** MIT\n\n**Latest version:** `1.2.0`\n\n**Requires:** Python 3.8 or later\n\n**Batteries included:** Tests and examples are provided in this repository.\n\n## Usage\n\n### Install\n```shell\n~ git clone https://github.com/victorazzam/demal\n~ cd demal && pip install .\n```\n\n### Uninstall\n```shell\n~ pip uninstall demal\n```\n\n### General usage\n![usage.jpg](usage.jpg)\n\n### Convert `file.mal` to `file.mal.json`\n```shell\n~ demal file.mal\n```\n\n### Convert `file.mal` to `output.json`\n```shell\n~ demal file.mal output.json\n```\n\n### Convert `file.mal` and print it out\n```shell\n~ demal file.mal -\n```\n\n### Read from standard input, convert, and print it out\n```shell\n~ cat file.mal | demal - -\n```\n\n### Read from standard input, convert, and write to `out.json`\n```shell\n~ cat file.mal | demal - out.json\n```\n\n### Convert several files and view them interactively\n```shell\n~ cat file1.mal file2.mal | demal - - | less\n```\n\n### Display debugging information while converting\n```shell\n~ demal test1.mal debug\nparse got: '#id: \"tmp\"'\nparse got: '#version: \"0.0.0\"'\nparse got: 'category C1 {'\nparse_category got: '}'\nparse got: 'category C2'\nparse_header got: 'user info: \"info\"'\nparse_header got: '{'\nparse_category got: 'asset A1 {'\nparse_asset got: '& At1'\nparse_asset got: '| At2'\n# output truncated\n```\n\n### Use it as a Python module\n```py\nfrom demal import MalParser\nmal = MalParser('threat-model.mal')\nmal.debug = True\nmal.parse() # displays debugging messages due to the previous line\n# output suppressed\n\nmal.dump(out='parsed.json', pretty=True) # beautify and save to parsed.json\nprint(mal) # pretty-prints the json object\n{\n  \"associations\": {\n    \"Connection\": {\n      \"asset_l\": \"Server\",\n      \"asset_l\": \"Client\",\n# output truncated\n```\n\n#### Merge multiple instances by addition (also multiplication and bitwise-or)\nCheck `tests/test-lib.py`:\n\n```py\nfrom demal import MalParser\n\nprint('Parsing two test files and combining their results.')\nm1, m2 = MalParser('test1.mal'), MalParser('test2.mal')\nm1.parse() ; m2.parse()\n\nprint('First:', m1['version'])\n# First: 1.0.0\n\nprint('Second:', m2['version'])\n# Second: 0.0.0\n\nm = m1 + m2 # combine category/association items, same as \"include\"\nprint('Combined:', m['version'])\n# Combined: 0.0.0\n\nprint('\\nModifying a single variable.')\nv = {'version': '1.3.3.7'}\nm += v\nprint('New version:', m['version'])\n# New version: 1.3.3.7\n\nprint('\\nChanging inner dictionary data.')\nvar = m['categories']['System']['assets']['Host']['attributes']['guessedPassword']['probability']\nprint('Before:', var)\n# Before: Exponential(0.02)\n\nvar = 'abc' # directly modify data\nprint('After:', var)\n# After: abc\n\nprint('\\nListing all assets with dot notation: category.asset')\nprint('m1:', list(m1))\nprint('m2:', list(m2))\nprint('m (m1+m2):', list(m))\n# m1: ['System.Host', 'System.Network', 'System.Password', 'System.User']\n# m2: ['C2.A1', 'C2.A2', 'C2.A3', 'C2.A4', 'C2.A5', 'C2.A6', 'C3.A1', 'C4.A1', 'C5.distribution']\n# m (m1+m2): ['System.Host', 'System.Network', 'System.Password', 'System.User', 'C2.A1', 'C2.A2', 'C2.A3', 'C2.A4', 'C2.A5', 'C2.A6', 'C3.A1', 'C4.A1', 'C5.distribution']\n```\n\n## Output\nThis program produces the following approximate output:\n\n```py\n{\n  \"associations\": {\n\t\"Association\": {\n\t  \"asset_l\": \"left_asset\",\n\t  \"asset_r\": \"right_asset\",\n\t  \"field_l\": \"left_field\",\n\t  \"field_r\": \"right_field\",\n\t  \"meta\": {\n\t\t\"key\": \"value\"\n\t\t# ...\n\t  },\n\t  \"mult_l\": \"left_multiplier\",\n\t  \"mult_r\": \"right_multiplier\"\n\t} # ...\n  },\n  \"categories\": {\n\t\"Category1\": {\n\t  \"assets\": {\n\t\t\"Asset1\": {\n\t\t  \"abstract\": false,\n\t\t  \"attributes\": {\n\t\t\t\"access\": {\n\t\t\t  \"cia\": null,\n\t\t\t  \"meta\": {},\n\t\t\t  \"probability\": \"Exponential(0.02)\", # etc, or simply null\n\t\t\t  \"tags\": [],\n\t\t\t  \"type\": \"and\"\n\t\t\t},\n\t\t\t\"authenticate\": {\n\t\t\t  \"cia\": null,\n\t\t\t  \"leads_to\": {\n\t\t\t\t\"0\": \"access\",\n\t\t\t\t\"a\": \"b \\\\/ c \" # result of: let a = ...\n\t\t\t  },\n\t\t\t  \"meta\": {},\n\t\t\t  \"probability\": null,\n\t\t\t  \"tags\": [\n\t\t\t\t\"hidden\",\n\t\t\t\t\"debug\",\n\t\t\t\t\"trace\"\n\t\t\t  ],\n\t\t\t  \"type\": \"or\"\n\t\t\t} # ...\n\t\t  },\n\t\t  \"extends\": null,\n\t\t  \"meta\": {}\n\t\t} # ...\n\t  },\n\t  \"meta\": {}\n\t}\n  },\n  \"id\": \"org.name.project\",\n  \"version\": \"1.0.0\"\n}\n```\n\n## Limitations\n - [X] ~Multi-line comments should be avoided.~\n - [ ] Quotation marks must not be escaped.\n - [ ] Expects clean spec-compliant code.\n\n## Resources\n - **Example:** [exampleLang/src/main/mal/exampleLang.mal](https://github.com/mal-lang/exampleLang/blob/master/src/main/mal/exampleLang.mal)\n - **Spec:** [malcompiler/wiki/MAL-language-specification](https://github.com/mal-lang/malcompiler/wiki/MAL-language-specification)\n - **Syntax:** [mal-documentation/wiki/MAL-Syntax](https://github.com/mal-lang/mal-documentation/wiki/MAL-Syntax)\n - **Reference:** [malcompiler-lib/src/main/java/org/mal_lang/compiler/lib/Lexer.java](https://github.com/mal-lang/malcompiler/blob/master/malcompiler-lib/src/main/java/org/mal_lang/compiler/lib/Lexer.java)\n - **Guide:** [https://nse.digital/...](https://nse.digital/pages/guides/Creating%20threat%20models/MAL.html)\n - **MAL author video:** [https://play.kth.se/...](https://play.kth.se/media/t/0_ckc2056q)\n - **Project page:** [https://www.kth.se/...](https://www.kth.se/cs/nse/research/software-systems-architecture-and-security/projects/mal-the-meta-attack-language-1.922174)\n - **Research paper:** [https://dl.acm.org/doi/10.1145/3230833.3232799](https://dl.acm.org/doi/10.1145/3230833.3232799)\n - **Official MAL to JSON converter:** [mal2json](https://github.com/mal-lang/mal2json)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/victorazzam/demal/releases",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/victorazzam/demal",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "demal",
            "package_url": "https://pypi.org/project/demal/",
            "platform": null,
            "project_url": "https://pypi.org/project/demal/",
            "project_urls": {
                "Download": "https://github.com/victorazzam/demal/releases",
                "Homepage": "https://github.com/victorazzam/demal"
            },
            "release_url": "https://pypi.org/project/demal/1.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "MAL (Meta Attack Language) to JSON decoding library and command-line tool.",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15839325,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1bbbad69a9552a2881b474bc5d3e5c28",
                    "sha256": "98fe139cd9bf953b02867ea795ab5763bcc12d397051669bac517fd878e9b6d3"
                },
                "downloads": -1,
                "filename": "demal-1.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1bbbad69a9552a2881b474bc5d3e5c28",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 9303,
                "upload_time": "2022-11-21T12:06:16",
                "upload_time_iso_8601": "2022-11-21T12:06:16.697852Z",
                "url": "https://files.pythonhosted.org/packages/83/d0/474a98b55437b312af350dd55a5e1cbabc6a8d04bb635a3c00fdce87bb80/demal-1.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b0b198f8fd32214564519fe0246c74a1",
                    "sha256": "4a8b5b651a3c0c8e439ef3ab84470499dc63ef3b5c768bfab31e3febe8ae9c4b"
                },
                "downloads": -1,
                "filename": "demal-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b0b198f8fd32214564519fe0246c74a1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 9055,
                "upload_time": "2022-11-21T12:06:18",
                "upload_time_iso_8601": "2022-11-21T12:06:18.317256Z",
                "url": "https://files.pythonhosted.org/packages/79/1a/2ab3f863ec4c2641f60ba5401322171bd8f505f93bb456e585993f8b60ab/demal-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}