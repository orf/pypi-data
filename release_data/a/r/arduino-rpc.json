{
    "1.6.post16": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post16/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post16",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "774bee1a418963020aaa8e96db7da142",
                    "sha256": "e709f70e1b877273e97a7a1e63b590fc4dde68a8f9e918ec95dd16774346ad36"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post16.zip",
                "has_sig": false,
                "md5_digest": "774bee1a418963020aaa8e96db7da142",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19951,
                "upload_time": "2015-09-15T16:14:14",
                "upload_time_iso_8601": "2015-09-15T16:14:14.720330Z",
                "url": "https://files.pythonhosted.org/packages/d4/d6/ae816c441df9c332535651ca0fae1e32991b68eec046f74b219f690dfdc4/arduino-rpc-1.6.post16.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.post17": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post17/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post17",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fd4a3b323d0a1a423d5061efbeceb1b8",
                    "sha256": "607455ec09f0c80f5e6a946fab3feb841d7e3d1d30438e02ab547488dc2b0345"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post17.tar.gz",
                "has_sig": false,
                "md5_digest": "fd4a3b323d0a1a423d5061efbeceb1b8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 55755,
                "upload_time": "2015-09-21T18:17:45",
                "upload_time_iso_8601": "2015-09-21T18:17:45.514228Z",
                "url": "https://files.pythonhosted.org/packages/cf/34/0086459d29bf52e7f669d4678ee781a107e2c699282cc82f6075cabda008/arduino-rpc-1.6.post17.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.post18": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post18/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post18",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c43964da3092f41c20001185fe7db10",
                    "sha256": "ddce1aa4fb9bdf4608113f377ae3249fc57bea3fc441b9eb5e740d184219755b"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post18.zip",
                "has_sig": false,
                "md5_digest": "8c43964da3092f41c20001185fe7db10",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19942,
                "upload_time": "2015-09-24T16:45:06",
                "upload_time_iso_8601": "2015-09-24T16:45:06.629048Z",
                "url": "https://files.pythonhosted.org/packages/14/8d/f56993dba1ead04ce31e41484f298f881039b84178ad8c5187893ab3d340/arduino-rpc-1.6.post18.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.post19": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post19/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post19",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8335a09a0d612eff8296bcc8eebad1ad",
                    "sha256": "f35b4b48493d3732fd88d93691f2556b4be0f320b0b5843805479a58ac003ba3"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post19.zip",
                "has_sig": false,
                "md5_digest": "8335a09a0d612eff8296bcc8eebad1ad",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 20376,
                "upload_time": "2015-09-29T18:26:17",
                "upload_time_iso_8601": "2015-09-29T18:26:17.988919Z",
                "url": "https://files.pythonhosted.org/packages/1e/18/4c666f119f6c16dd31302fd870b6db4dbf03972e05f84afd4e974fa2c26d/arduino-rpc-1.6.post19.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.post20": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post20/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post20",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ce6b4e3d82e114da85c1039f4b0659ec",
                    "sha256": "5299a356b6f674d24f28f45a3ca67f3769d21891d4018299a00ad176eeee6476"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post20.zip",
                "has_sig": false,
                "md5_digest": "ce6b4e3d82e114da85c1039f4b0659ec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 20377,
                "upload_time": "2015-09-29T20:41:06",
                "upload_time_iso_8601": "2015-09-29T20:41:06.469361Z",
                "url": "https://files.pythonhosted.org/packages/10/48/0021d37d6d6812a65179b19a8f1c9c4748d292878adb2aa11025ccf978de/arduino-rpc-1.6.post20.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.post21": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.6.post21/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Arduino RPC node packaged as Python package.",
            "version": "1.6.post21",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6c00091fb1efe8fbdf95ce7e149b5b55",
                    "sha256": "a2118e24dbe9dba7bee08b05a326a0b5a1d7aa2feb72e13fa7786edf106d7f42"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.6.post21.zip",
                "has_sig": false,
                "md5_digest": "6c00091fb1efe8fbdf95ce7e149b5b55",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19978,
                "upload_time": "2015-10-07T16:07:50",
                "upload_time_iso_8601": "2015-10-07T16:07:50.005457Z",
                "url": "https://files.pythonhosted.org/packages/2f/c2/a67bb40d851eddd979450870b12fb0891a657b05f7269fb2daf57c15410a/arduino-rpc-1.6.post21.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post10": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post10/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d241e349a3bc4d01247148705c7a1b16",
                    "sha256": "34ef936c2a44b811bf7729ca3e242525578ea20f7ed01691f8c075a34cc3a5ca"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post10.zip",
                "has_sig": false,
                "md5_digest": "d241e349a3bc4d01247148705c7a1b16",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 70069,
                "upload_time": "2015-10-14T19:38:44",
                "upload_time_iso_8601": "2015-10-14T19:38:44.339560Z",
                "url": "https://files.pythonhosted.org/packages/4d/82/a8e2ad711022f1bcfbd4c9c9ff8b8e0798dde5a9e3267354e8de27848651/arduino-rpc-1.7.post10.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post13": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post13/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post13",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c8b03e0143166df151beece0d59f51ab",
                    "sha256": "da740933efc4c9e9ac0baf867689c9bd6dd47db562381ccc8e0e92136968162f"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post13.zip",
                "has_sig": false,
                "md5_digest": "c8b03e0143166df151beece0d59f51ab",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 71138,
                "upload_time": "2015-11-11T15:49:40",
                "upload_time_iso_8601": "2015-11-11T15:49:40.303247Z",
                "url": "https://files.pythonhosted.org/packages/4c/4c/c48175f4a92571ab6b7320f6b7c8e49f1202f0c929706cb88dc23afc5552/arduino-rpc-1.7.post13.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post14": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post14/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post14",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e6596ed0652dd03170b993fbb5c36e8c",
                    "sha256": "823114f388b19e549ebde9ee5e8994947f275fbd6daa0a5871c905a2838970d8"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post14.zip",
                "has_sig": false,
                "md5_digest": "e6596ed0652dd03170b993fbb5c36e8c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 71059,
                "upload_time": "2015-11-11T15:56:26",
                "upload_time_iso_8601": "2015-11-11T15:56:26.400077Z",
                "url": "https://files.pythonhosted.org/packages/3d/f8/268c76dcd069bcd5f39c05d990c1045a777e9d946a80b3fb3be1f88799eb/arduino-rpc-1.7.post14.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post16": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post16/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post16",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4dbbc0171d8e8acdd013ab499a319e3d",
                    "sha256": "78f3c32ab858cc526c9747bb74b769b50c31aca05b9551e86cbcda4267058a0c"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post16.zip",
                "has_sig": false,
                "md5_digest": "4dbbc0171d8e8acdd013ab499a319e3d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69550,
                "upload_time": "2015-12-15T12:46:14",
                "upload_time_iso_8601": "2015-12-15T12:46:14.830382Z",
                "url": "https://files.pythonhosted.org/packages/24/bc/52e8595e21b0f639c03231c63f22135c96fa2cc5ce1acdb1bb176274a7ac/arduino-rpc-1.7.post16.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post17": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post17/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post17",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bf6f7160e76666a071218ae13b72fedb",
                    "sha256": "23578cc6d4424f97f209935ec949859fee0f4cb5ae3ee4470fc79a3ee6dc1d83"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post17.zip",
                "has_sig": false,
                "md5_digest": "bf6f7160e76666a071218ae13b72fedb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 72326,
                "upload_time": "2015-12-15T17:29:54",
                "upload_time_iso_8601": "2015-12-15T17:29:54.745726Z",
                "url": "https://files.pythonhosted.org/packages/51/ea/3f0db546a200136bc16c966b97a8577980a31ecef5ca9335fbc54e7eea01/arduino-rpc-1.7.post17.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post18": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post18/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post18",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d990b9486b4dce74dde3e5cdeb256dd9",
                    "sha256": "c4855b6742e2e35a55681ffd1021d8b7b8c0b38ad761abcdf76b585c3c777965"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post18.zip",
                "has_sig": false,
                "md5_digest": "d990b9486b4dce74dde3e5cdeb256dd9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 70670,
                "upload_time": "2016-01-11T21:44:29",
                "upload_time_iso_8601": "2016-01-11T21:44:29.588654Z",
                "url": "https://files.pythonhosted.org/packages/04/ab/935fd483e55f02e017e30f6adc10e4a25a04dea851e2b1a68daff5413622/arduino-rpc-1.7.post18.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post19": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post19/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post19",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "37903e5d9f4516637ad50874893e1859",
                    "sha256": "16af359deec42d134c588cd4a2c3d7da84605135a47c78adca9d1feb82e722b5"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post19.zip",
                "has_sig": false,
                "md5_digest": "37903e5d9f4516637ad50874893e1859",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 72865,
                "upload_time": "2016-04-26T12:12:25",
                "upload_time_iso_8601": "2016-04-26T12:12:25.831459Z",
                "url": "https://files.pythonhosted.org/packages/7b/b2/355f5fe43fabaeb0e07e26d85ff520f9bfbe5c847ea106e440c0240476b8/arduino-rpc-1.7.post19.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post2": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "204cea9107508504faf31982b073640b",
                    "sha256": "0174dd7d61c19a2ced3c9443888236191c82a0bdb32c7ecf9b763f3d0ba0fff9"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post2.zip",
                "has_sig": false,
                "md5_digest": "204cea9107508504faf31982b073640b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69577,
                "upload_time": "2015-10-13T15:38:52",
                "upload_time_iso_8601": "2015-10-13T15:38:52.207789Z",
                "url": "https://files.pythonhosted.org/packages/9d/e8/83f129eb732957515ede25205a01820acd8d083fb911b8041dddeef79fc3/arduino-rpc-1.7.post2.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post20": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post20/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post20",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3f8bc79fa69daa4917fcc333f5a9237b",
                    "sha256": "d0d2e09aacbb46c158a32bd96fcfd74c6ae977225db7f653fc33fec308d6c697"
                },
                "downloads": -1,
                "filename": "arduino_rpc-1.7.post20-py2-none-any.whl",
                "has_sig": false,
                "md5_digest": "3f8bc79fa69daa4917fcc333f5a9237b",
                "packagetype": "bdist_wheel",
                "python_version": "2.7",
                "requires_python": null,
                "size": 30982,
                "upload_time": "2016-08-11T19:24:48",
                "upload_time_iso_8601": "2016-08-11T19:24:48.235756Z",
                "url": "https://files.pythonhosted.org/packages/89/1e/eba1efab8ca68bcf4bf31ef93451fd268015deb2c129a963f1ab999cb9b5/arduino_rpc-1.7.post20-py2-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post22": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": "",
            "license": "GPLv2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post22/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).",
            "version": "1.7.post22",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5100349dc2bed5678d0473441f52a5d0",
                    "sha256": "bca5b2782a1d80193937f090b9fe4b81ffb4ceb12530bfbd07898b5b009b80ab"
                },
                "downloads": -1,
                "filename": "arduino_rpc-1.7.post22-py2-none-any.whl",
                "has_sig": false,
                "md5_digest": "5100349dc2bed5678d0473441f52a5d0",
                "packagetype": "bdist_wheel",
                "python_version": "2.7",
                "requires_python": null,
                "size": 34250,
                "upload_time": "2016-12-08T19:02:00",
                "upload_time_iso_8601": "2016-12-08T19:02:00.591128Z",
                "url": "https://files.pythonhosted.org/packages/10/a9/e4318273d9e79a66b580093ecb400f7a47ff77dfb754723a316a408f2a2f/arduino_rpc-1.7.post22-py2-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post23": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": "",
            "license": "GPLv2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post23/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).",
            "version": "1.7.post23",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "665d112e311e42ba57b020bf2a419106",
                    "sha256": "c0a7068198420eacfc149a67b03a69604f97232a7b8dc9dc91cfce740aec0157"
                },
                "downloads": -1,
                "filename": "arduino_rpc-1.7.post23-py2-none-any.whl",
                "has_sig": false,
                "md5_digest": "665d112e311e42ba57b020bf2a419106",
                "packagetype": "bdist_wheel",
                "python_version": "2.7",
                "requires_python": null,
                "size": 34249,
                "upload_time": "2016-12-08T19:03:22",
                "upload_time_iso_8601": "2016-12-08T19:03:22.310539Z",
                "url": "https://files.pythonhosted.org/packages/43/40/a0f73765b01f6c7f2f78a507095763f48b9f81eacb67f7489787babbbee8/arduino_rpc-1.7.post23-py2-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post3": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "345e01e46b6b1969fefd18067ab40c9a",
                    "sha256": "16cf70c4f3109c198af4ae3935cc6f6ff8a73c216f8846ad0441c6979812ec69"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post3.zip",
                "has_sig": false,
                "md5_digest": "345e01e46b6b1969fefd18067ab40c9a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69575,
                "upload_time": "2015-10-13T15:43:50",
                "upload_time_iso_8601": "2015-10-13T15:43:50.751424Z",
                "url": "https://files.pythonhosted.org/packages/2b/e8/26007c3ed4ed0f38de491addc1dbce935f3b23aa3ce0f24c56034352c859/arduino-rpc-1.7.post3.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post4": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "42f35769d5bbcce66c731fa39d875305",
                    "sha256": "cdf38a1ba9003be868215029934ff590f1e55de3aa0f9654c899a64b8f25d2e3"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post4.zip",
                "has_sig": false,
                "md5_digest": "42f35769d5bbcce66c731fa39d875305",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69594,
                "upload_time": "2015-10-13T16:26:46",
                "upload_time_iso_8601": "2015-10-13T16:26:46.269962Z",
                "url": "https://files.pythonhosted.org/packages/69/b4/30ca9815f7e76a8ca6263490808e2e44d5a337349ed75a1079bb4c9ad5f8/arduino-rpc-1.7.post4.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post5": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post5/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3a1cd3aca0e06aa74f394238714b083a",
                    "sha256": "bb9060110ebf6c1554b2f47a12167dec7baa1e3cfb5b6ad732a8a23f95d535a5"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post5.zip",
                "has_sig": false,
                "md5_digest": "3a1cd3aca0e06aa74f394238714b083a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69924,
                "upload_time": "2015-10-14T16:19:12",
                "upload_time_iso_8601": "2015-10-14T16:19:12.095859Z",
                "url": "https://files.pythonhosted.org/packages/c0/fa/ab52374ad92f414ef23c4f68697afe471617c422203557cd5362b577aaff/arduino-rpc-1.7.post5.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post6": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post6/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "38222f9a2a7fc92b4d6c84feee89f2d8",
                    "sha256": "2f9736583fc359549096d3f553a2b418dd61ada99e38dfc46ce72a709635b092"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post6.zip",
                "has_sig": false,
                "md5_digest": "38222f9a2a7fc92b4d6c84feee89f2d8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69948,
                "upload_time": "2015-10-14T16:57:54",
                "upload_time_iso_8601": "2015-10-14T16:57:54.647418Z",
                "url": "https://files.pythonhosted.org/packages/0a/f7/b2cfa096ce32b45d8d5f3ad74efd5dbc2bc0e4b2920e4bb6d73474a870c1/arduino-rpc-1.7.post6.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post7": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post7/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "057a9272ab6f5445c54a301bbf461682",
                    "sha256": "2497f14137d791e663326e94cdbc355f95c92fb0b35d979f08c57486ec605f31"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post7.zip",
                "has_sig": false,
                "md5_digest": "057a9272ab6f5445c54a301bbf461682",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69950,
                "upload_time": "2015-10-14T17:04:09",
                "upload_time_iso_8601": "2015-10-14T17:04:09.686697Z",
                "url": "https://files.pythonhosted.org/packages/83/64/7c2933e4a74807e980084e21acc3e19f4898a543fde434bf9fd53ac296e8/arduino-rpc-1.7.post7.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post8": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post8/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b0fe8f5dc79303f354d7b77ddd30c696",
                    "sha256": "2484d095384138e5c4ab31fb3ceeeec912bb84a4ee8979a1325c656c9fb6cadb"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post8.zip",
                "has_sig": false,
                "md5_digest": "b0fe8f5dc79303f354d7b77ddd30c696",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69948,
                "upload_time": "2015-10-14T17:27:21",
                "upload_time_iso_8601": "2015-10-14T17:27:21.227609Z",
                "url": "https://files.pythonhosted.org/packages/2c/7a/e0eadfd35b86baaf056c8dcf66936d69c564799d1820c2964d8ceb6c0b57/arduino-rpc-1.7.post8.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.post9": {
        "info": {
            "author": "Christian Fobel",
            "author_email": "christian@fobel.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# arduino_rpc #\r\n\r\nThis package provides code generation for memory-efficient\r\nremote-procedure-calls between a host CPU (Python) and a device (C++) (e.g.,\r\nArduino).\r\n\r\nThe main features of this package include:\r\n\r\n - Extract method signatures from user-defined C++ class.\r\n - Assign a unique *\"command code\"* to each method.\r\n - Generate a `CommandProcessor<T>` C++ class, which calls appropriate method\r\n   on instance of user type provided the corresponding serialized command\r\n   array.\r\n - Generate a `Proxy` Python class to call methods on remote device by\r\n   serializing Python method call as command request and decoding command\r\n   response from device as Python type(s).\r\n\r\n\r\n# What is this? #\r\n\r\nMuch of the effort of coding our own Arduino projects was dedicated:\r\n\r\n - To defining and writing protocols.\r\n - Writing host code to interface with these project-specific protocols.\r\n\r\nThere are a few problems with this:\r\n\r\n - Lots of duplicated effort, redefining protocols for every project, or at\r\n   best, copying and pasting and modifying to suit.\r\n - Brittle code, since any change on the device protocol API required the host\r\n   code to be updated separately to match.\r\n - More time spent on just getting signals to/from the device than spent on the\r\n   real problem at hand.\r\n\r\n\r\n## What do we propose? ##\r\n\r\nInstead of writing the protocol for every project, we want to abstract the\r\ncommunication to and from the device as far away as possible from the actual\r\ninterface connection _(e.g., serial, I2C, etc.)_.  The goal is to expose\r\nfunctions from the device to _a)_ other devices _(e.g., over I2C)_, and _b)_ to\r\nthe host computer, without having to care about where the requested function\r\ncall is coming from.\r\n\r\nTo accomplish this we employ automatic code-generation to scan a set of\r\nuser-defined functions that should be exposed and create code to call the\r\nfunctions through:\r\n\r\n - Serial interface.\r\n - I2C.\r\n\r\nFurthermore, we also get Python code to run on the host side to connect to the\r\ndevice over serial, or to devices on the I2C bus by forwarding requests through\r\na device connected via serial.\r\n\r\nVoila!  No more writing protocols!  Just add methods to your class in your\r\nArduino sketch, and the protocol will be auto-generated based on the function\r\nsignatures.\r\n\r\n\r\n# Extract method signatures #\r\n\r\nThe code generation mechanism in the `arduino_rpc` package assumes a single,\r\nuser-defined C++ class type.  Within the `arduino_rpc` code, the user-defined\r\nclass is referred to as the `Node` class (though the class can be named\r\nanything).\r\n\r\n## `arduino_rpc.get_multilevel_method_sig_frame` function ##\r\n\r\nGiven one or more C++ header paths, each with a corresponding C++ class name,\r\nthe `get_multilevel_method_sig_frame` function returns a `pandas.DataFrame`\r\nwith one row per method argument.\r\n\r\nFor example, consider the following class:\r\n\r\n    // Node.hpp\r\n    #include <stdint.h>\r\n\r\n    class Node {\r\n    public:\r\n      uint8_t add(uint8_t a, uint8_t b) { return a + b; }\r\n      uint8_t subtract(uint8_t a, uint8_t b) { return a - b; }\r\n    };\r\n\r\nA call to `get_multilevel_method_sig_frame('Node.hpp', 'Node')` would return a\r\n`pandas.DataFrame` containing information about the signatures for methods\r\n`add` and `subtract`.\r\n\r\n### Inheritance ###\r\n\r\nInheritance is also supported by the `get_multilevel_method_sig_frame`.\r\n\r\nFor example, consider the following headers:\r\n\r\n    // A.hpp\r\n    #include <stdint.h>\r\n\r\n    class A {\r\n    public:\r\n      virtual uint8_t add(uint8_t a, uint8_t b) { return 0; }\r\n      virtual uint8_t divide(uint8_t a, uint8_t b) { return a / b; }\r\n    };\r\n\r\n    // B.hpp\r\n    #include <stdint.h>\r\n\r\n    class B {\r\n    public:\r\n      virtual uint8_t multiply(uint8_t a, uint8_t b) { return a * b; }\r\n    };\r\n\r\n    // Node.hpp\r\n    #include <stdint.h>\r\n    #include \"A.hpp\"\r\n    #include \"B.hpp\"\r\n\r\n    class Node : public A, public B {\r\n    public:\r\n      uint8_t add(uint8_t a, uint8_t b) { return a + b; }\r\n      uint8_t subtract(uint8_t a, uint8_t b) { return a - b; }\r\n    };\r\n\r\nThe following call to:\r\n\r\n    get_multilevel_method_sig_frame(['A.hpp', 'B.hpp', 'Node.hpp'],  # headers\r\n                                    ['A', 'B', 'Node'])  # class names\r\n\r\nwould return a `pandas.DataFrame` containing information about the signatures\r\nfor methods `A::divide`, `B::multiply`, `Node::add`, and `Node::subtract`.\r\nNote that `Node::add` overrides `A::add`.\r\n\r\n### Template class support ###\r\n\r\nNote that template classes are also supported.  For example, the class defined as:\r\n\r\n   class ClassName<typename Parameter1, typename Parameter2> {...};\r\n\r\nis referenced in the frame with the `class_name` of\r\n`ClassName<Parameter1, Parameter2>`.\r\n\r\n### Known limitations ###\r\n\r\n - Base classes and corresponding C++ header paths must be specified explicitly.\r\n - Order of C++ header paths and class names in\r\n   `get_multilevel_method_sig_frame` arguments must match inheritance order.\r\n - Overloaded methods (i.e., same method name with different number of\r\n   arguments) are currently not supported.\r\n\r\n\r\n# Code generation #\r\n\r\nThe `arduino_rpc` package includes functions to serialize/deserialize commands,\r\nwhere each command corresponds to a method signature extracted as described in\r\nthe *\"Extract method signatures\"* section above.\r\n\r\nGiven a list of method signatures (see *\"Extract method signatures\"*), the\r\nbasic idea is:\r\n\r\n - Assign a unique *\"command code\"* to each method.\r\n - Generate a Python class with one method per command.\r\n - Generate a C++ class that wraps an instance of the user-defined C++ class,\r\n   and calls a method on the wrapped instance based on a \"command code\".\r\n\r\n## Command flow ##\r\n\r\nEach call to a method of a Python `Proxy` instance triggers a remote procedure\r\ncall (RPC) to the corresponding method on the wrapped user class instance on\r\nthe device.\r\n\r\nFor example:\r\n\r\n       Python (Proxy)                 C++ (CommandProcessor)\r\n       ==============                 ======================\r\n\r\n       proxy.add(a, b)\r\n\r\n        encode(\"add\",     encoded\r\n               a, b)  ->  command ->  result = wrapper.process_command(array,\r\n                           array                                       buffer)\r\n\r\n                          encoded\r\n        decode(result) <-  result <-  encode(result)\r\n                           array\r\n        return result\r\n\r\n## Python ##\r\n\r\nGenerate a `Proxy` Python class with one method for each \"command\".  Each\r\nmethod performs the following operations:\r\n\r\n - Serialize method arguments and command code to command array.\r\n - Send serialized command to remote device.\r\n - Decode device response into Python types.\r\n - Return decoded result.\r\n\r\n### Usage ###\r\n\r\nFor example, consider the `Node` class from the inheritance example above.  The\r\nfollowing code would write the Python `Proxy` class to the path specified by\r\n`output_path`.\r\n\r\n    from arduino_rpc.code_gen import write_code\r\n    from arduino_rpc.rpc_data_frame import get_python_code\r\n\r\n    write_code(['A.hpp', 'B.hpp', 'Node.hpp'],  # headers\r\n               ['A', 'B', 'Node'],  # class names\r\n               output_path,  # output filename\r\n               get_python_code,  # function to map to method signatures frame\r\n               *['-I%s' % include_path])  # path containing headers\r\n\r\n## C++ ##\r\n\r\nGenerate a `CommandProcessor<Node>` C++ class with the following method:\r\n\r\n    UInt8Array process_command(UInt8Array request_arr, UInt8Array buffer)\r\n\r\n - `process_command` arguments:\r\n     * `request_arr`: Serialized command request structure array.\r\n     * `buffer`: Buffer array (available for writing output).\r\n - `CommandProcessor<Node>` is constructed with reference to instance of object\r\n   of type `Node`.\r\n - The `process_command` method decodes the command and arguments from the\r\n   `request_arr` and calls the corresponding method on the `Node` instance\r\n   (passing in the decoded arguments).  The return value of the method is\r\n   written to the output `buffer` array.\r\n\r\n### Usage ###\r\n\r\nFor example, consider the `Node` class from the inheritance example above.  The\r\nfollowing code would write the C++ `CommandProcessor` wrapper class header to\r\nthe path specified by `output_path`.\r\n\r\n    from arduino_rpc.code_gen import write_code\r\n    from arduino_rpc.rpc_data_frame import get_c_header_code\r\n\r\n    write_code(['A.hpp', 'B.hpp', 'Node.hpp'],  # headers\r\n               ['A', 'B', 'Node'],  # class names\r\n               output_path,  # output filename\r\n               get_c_header_code,  # function to map to method signatures frame\r\n               *['-I%s' % include_path])  # path containing headers\r\n\r\n\r\n# Projects using `arduino_rpc` #\r\n\r\n - base-node-rpc: Base classes for Arduino RPC node/device.\r\n     * A memory-efficient set of base classes providing an API to most of the\r\n       Arduino API, including EEPROM access, raw I2C\r\n       master-write/slave-request, etc.\r\n     * Support for processing RPC command requests through either serial or I2C\r\n       interface.\r\n     * For more info see [here][1].\r\n\r\n\r\n# Author #\r\n\r\nCopyright 2015 Christian Fobel <christian@fobel.net>\r\n\r\n\r\n[1]: https://github.com/wheeler-microfluidics/base_node_rpc\r\n",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/wheeler-microfluidics/arduino_rpc.git",
            "keywords": null,
            "license": "GPLv2",
            "maintainer": null,
            "maintainer_email": null,
            "name": "arduino-rpc",
            "package_url": "https://pypi.org/project/arduino-rpc/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/arduino-rpc/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/wheeler-microfluidics/arduino_rpc.git"
            },
            "release_url": "https://pypi.org/project/arduino-rpc/1.7.post9/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Code generation for memory-efficient remote-procedure-calls between a host CPU (Python) and a device (C++) (e.g., Arduino).\nThe main features of this package include: 1) Extract method signatures from user-defined C++ class, 2) Assign a unique *\"command code\"* to each method, 3) Generate a `CommandProcessor<T>` C++ class, which calls appropriate method on instance of user type provided the corresponding serialized command array, and 4) Generate a `Proxy` Python class to call methods on remote device by serializing Python method call as command request and decoding command response from device as Python type(s).",
            "version": "1.7.post9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2507380,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "762a6cde9aea3bb26bf78a7c3aac5dab",
                    "sha256": "5cce937ddf4246a99279a47db293125a9836990dfa9abe329024bd769edfb72e"
                },
                "downloads": -1,
                "filename": "arduino-rpc-1.7.post9.zip",
                "has_sig": false,
                "md5_digest": "762a6cde9aea3bb26bf78a7c3aac5dab",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 69938,
                "upload_time": "2015-10-14T18:24:28",
                "upload_time_iso_8601": "2015-10-14T18:24:28.392565Z",
                "url": "https://files.pythonhosted.org/packages/a5/ba/3c41852a29c9c2d93a65e060048edad2d154cae756f945fdec7d84263c5b/arduino-rpc-1.7.post9.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}