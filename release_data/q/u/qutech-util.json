{
    "2022.7": {
        "info": {
            "author": "Quantum Technology Group, RWTH Aachen University",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Physics",
                "Topic :: Utilities"
            ],
            "description": "# qutil\nLong term goal is to gather utility functions here. It is not meant as a lightweight package. If you just want to use it you can install it via\n```\npip install git+https://git.rwth-aachen.de/qutech/qutil.git\n```\nHowever, this package profits from everybody's work so please make a development install and contribute your changes. You can do this via\n```\npip install -e git+https://git.rwth-aachen.de/qutech/qutil.git#egg=qutil\n```\nThis will download the source code (i.e. clone the git repository) into a subdirectory of the `./src` argument and link the files into your environment instead of copying them. If you are on windows you can use [SourceTree](https://www.sourcetreeapp.com/) which is a nice GUI for git.\nYou can specify the source code directory with the `--src` argument (which needs to be BEFORE `-e`):\n```\npip install --src some_directory/my_python_source -e git+https://git.rwth-aachen.de/qutech/qutil.git#egg=qutil\n```\nIf you have already downloaded/cloned the package yourself you can use `python setup.py develop` or `python -m pip install . -e`.\n\n## qutil.plotting\n`cycle_plots` helps you cycling through many plots with the arrow keys (there are probably much better functions for this out there)\n`plot_2d_dataframe` helps you plot 2d data frames with numeric indices\n`get_rwth_color_cycle` and the predefined `rwth_color_cycle` are cycler instances with the official RWTH corporate design colors:\n\n![cycler example](./doc/source/_static/cycles.png)\n\n## qutil.matlab\nIn this module there are functions that are helpful for reading `.mat` files, especially those created with special measure.\nIf you simply want to open a random `.mat` file you can use `hdf5storage.loadmat`.\n\nLoading matlab files with \"newer\" MATLAB classes like `table` requires connecting (and starting) MATLAB instance.\nThe function `load_special_measure_with_matlab_engine` can load most special measure scans by utilizing the MATLAB engine interface. To use it you require a \"sufficiently new\" version of MATLAB and then navigate to `C:\\Program Files\\MATLAB\\$VERSION\\extern\\engines\\python` and call `python setup.py install`. \n\n## qutil.const\nThis module defines all the constants you could wish for as well as functions to convert temperatures (`convert_temperature`) or between wavelengths and frequencies (`lambda2nu`, `nu2lambda`). For an overview, see the module docstring.\n\n## qutil.linalg\nThis module provides several handy linear algebra functions. While some are implemented elsewhere, the implementation here is typically speedier for large arrays. For example, `pauli_expm` exploits the fact that a matrix exponential of Pauli matrices can be written as a cosine times the identity matrix plus a sine times the Paulis to speed up the calculation.\n\nFor an overview of the included functions, see the module docstring.\n\n## qutil.ui\nThis module collects UI helpers, such as a progress bar for loops that can be used like so:\n```python\nfor i in qutil.ui.progressbar(range(n)):\n    do_something()\n```\n\n## qutil.qi\nIn this module there are some quantities and functions related to quantum information, like the Pauli matrices in different data types.\n\n## qutil.random\nHere we collect functions for random numbers like `random_hermitian` to generate random Hermitian matrices.\n\n## qutil.itertools\nThis module contains a everything from `itertools`, `more_itertools` and custom functions.\n\n## qutil.caching\nHere you find decorators, functions and classes that help you implement caching like `file_cache` and `lru_cache`. This is helpful if you need to call computationally expensive functions with the same arguments repeatedly.\n\n## qutil.io\nUser input related functions like `query_yes_no` or a `CsvLogger` interface (for reading use pandas.read_csv).\n\n## qutil.parallel\nFunctions and classes related to parallel execution i.e. multi-threading, multi-processing and asyncio.\nThere is a class for periodic callbacks from another thread `ThreadedPeriodicCallback`.\n\n## qutil.hardware\nThis package contains little scripts to talk to various hardware devices. For example reading the leak tester via serial interface.\n\n## qutil.qcodes\nFunctions to convert from and to qcodes data sets. Currently only\nfrom `pandas.DataFrame` to `qcodes.data.data_set.DataSet`\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "qutech-util",
            "package_url": "https://pypi.org/project/qutech-util/",
            "platform": null,
            "project_url": "https://pypi.org/project/qutech-util/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/qutech-util/2022.7/",
            "requires_dist": [
                "numpy",
                "hdf5storage",
                "pandas",
                "more-itertools",
                "matplotlib",
                "tqdm ; extra == 'all'",
                "ipynbname ; extra == 'all'",
                "qcodes ; extra == 'all'",
                "ezdxf ; extra == 'all'",
                "tqdm ; extra == 'fancy_progressbar'",
                "ipynbname ; extra == 'fancy_progressbar'",
                "ezdxf ; extra == 'gl'",
                "qcodes ; extra == 'qcodes'"
            ],
            "requires_python": ">=3.7",
            "summary": "Utility package of the Quantum Technology group of RWTH Aachen",
            "version": "2022.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14482250,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "367938b0677e4be5303cf0a74661d29b",
                    "sha256": "c32706ade3273791634f4c9488b445120c78d868f52c90335593720279926c96"
                },
                "downloads": -1,
                "filename": "qutech_util-2022.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "367938b0677e4be5303cf0a74661d29b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 50501,
                "upload_time": "2022-07-19T13:32:36",
                "upload_time_iso_8601": "2022-07-19T13:32:36.823386Z",
                "url": "https://files.pythonhosted.org/packages/0d/14/79e2dff214e8552076bed57c72abf1340b13db991febbca804bbc4a9036e/qutech_util-2022.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "82bd87a46c188d54fdd23ac07cb4e2d7",
                    "sha256": "e71128c0c24df8129445989d9506f7bd8b2501a7e7e90b0b31dce2c0668da020"
                },
                "downloads": -1,
                "filename": "qutech-util-2022.7.tar.gz",
                "has_sig": false,
                "md5_digest": "82bd87a46c188d54fdd23ac07cb4e2d7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 45901,
                "upload_time": "2022-07-19T13:32:39",
                "upload_time_iso_8601": "2022-07-19T13:32:39.529282Z",
                "url": "https://files.pythonhosted.org/packages/5a/74/8fca8e2bdbfb9ffc658d0d4cd4f08025588b406ba20a00173760d2029ae3/qutech-util-2022.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}