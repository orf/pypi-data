{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "Nicole Gay <nicole.r.gay@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# HashTable\n\nThis simple package provides a custom implementation of a hash table in Python,\ncreated by following [this tutorial](https://realpython.com/python-hash-table/) written by Bartosz Zaczy\u0144ski. \nThe `HashTable` class replicates many methods from Python dictionaries, including\n`HashTable.clear()` and `HashTable.update()`.  \n\n## Installation \n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install `HashTable`.\n\n```bash\npython3 -m pip install hashtable-nicolerg\n```\n\n## Usage \n\n```python\nfrom hashtable_nicolerg.hashtable import HashTable\n\n# Create an instance of HashTable with initial size 10\n# and loading factor threshold 0.5, meaning the HashTable\n# will be resized to have 2x capacity whenever the number of \n# key-value pairs is at least half the current capacity\nhash_table = HashTable(capacity=10, load_factor_threshold=0.5)\n\nhash_table[\"blue\"] = \"sea\"              # Add key-value pair \"blue\":\"sea\"\nhash_table[\"list\"] = [1,2,3]            # Add key-value pair with a mutable value \nlen(hash_table)                         # Return number of key-value pairs\nhash_table.capacity                     # Return current capacity\nhash_table.load_factor                  # Return current load factor\nhash_table.keys                         # Return set of keys\nhash_table.values                       # Return list of values \nhash_table.pairs                        # Return list of key-value pairs\ndel hash_table[\"list\"]                  # Delete key-value pair for specified key\nhash_table.update({\"blue\":\"0000FF\"})    # Update value for key \"blue\" using a dictionary\nhash_table[\"blue\"]                      # Return value for key \"blue\"\nhash_table.clear()                      # Remove all key-value pairs \n```\n\n## Motivation \n\nDeveloping this package reinforced knowledge in the following areas:  \n* Python classes, including dunder methods  \n* Hash table implementation, including handling hash collisions  \n* Testing, including TDD, unit tests, and `pytest`  \n* Developing Python packages  \n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hashtable-nicolerg",
            "package_url": "https://pypi.org/project/hashtable-nicolerg/",
            "platform": null,
            "project_url": "https://pypi.org/project/hashtable-nicolerg/",
            "project_urls": {
                "Guiding Tutorial": "https://realpython.com/python-hash-table",
                "Source Code": "https://github.com/nicolerg/python-hashtable"
            },
            "release_url": "https://pypi.org/project/hashtable-nicolerg/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "An exercise to learn about hash tables, unit tests, TDD, and Python packages",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15874589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6dc83e19914155db8b74f79eae9ca008",
                    "sha256": "1de17cecd9dbf8e51bc0ce378a6b0d9f6b7a4641956afd2bac3a39de58772ff7"
                },
                "downloads": -1,
                "filename": "hashtable_nicolerg-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6dc83e19914155db8b74f79eae9ca008",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 4125,
                "upload_time": "2022-11-24T03:08:36",
                "upload_time_iso_8601": "2022-11-24T03:08:36.142855Z",
                "url": "https://files.pythonhosted.org/packages/84/b9/3c5960f37700b3c5de1fa2e746d615f552804999d62d14d861f297c6a78f/hashtable_nicolerg-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "594fa9ce9b391bcf6e77f38bf6a8affa",
                    "sha256": "439770c5535e806eae30fc759390045ffa5b2c4a0779399ebd0758c053a4ca24"
                },
                "downloads": -1,
                "filename": "hashtable_nicolerg-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "594fa9ce9b391bcf6e77f38bf6a8affa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 6418,
                "upload_time": "2022-11-24T03:08:37",
                "upload_time_iso_8601": "2022-11-24T03:08:37.732962Z",
                "url": "https://files.pythonhosted.org/packages/7e/dc/125bad6b436b194f2aa2a29738ce2f17a5bc7a9444615b70007fb6ab1664/hashtable_nicolerg-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}