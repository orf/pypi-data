{
    "0.1.0": {
        "info": {
            "author": "Sen Yang",
            "author_email": "yangsen@smail.nju.edu.cn",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pydec",
            "package_url": "https://pypi.org/project/pydec/",
            "platform": null,
            "project_url": "https://pypi.org/project/pydec/",
            "project_urls": {
                "Homepage": "https://github.com/"
            },
            "release_url": "https://pypi.org/project/pydec/0.1.0/",
            "requires_dist": [
                "torch (>=1.11.0)",
                "numpy"
            ],
            "requires_python": ">=3.7.0",
            "summary": "Linear decomposition toolkit for neural network based on pytorch.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15866440,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f08ebee63e08cb4986ffb7ee94572791",
                    "sha256": "0be6c40356ce98d9e48e79a96ca4de4084068aca9e1e68ce6826f27e657ce44d"
                },
                "downloads": -1,
                "filename": "pydec-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f08ebee63e08cb4986ffb7ee94572791",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7.0",
                "size": 25932,
                "upload_time": "2022-10-27T16:16:28",
                "upload_time_iso_8601": "2022-10-27T16:16:28.686415Z",
                "url": "https://files.pythonhosted.org/packages/02/23/10a436156838c5341d500534f3ef6f267fb5e29666ad0709341772e3ea24/pydec-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9a0779d91ec2215fc350316a7d739988",
                    "sha256": "1a11b015ad9ae1657f85ec97459ed1f55011bc12fe2dafc387d9ab3b4edc80de"
                },
                "downloads": -1,
                "filename": "pydec-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9a0779d91ec2215fc350316a7d739988",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7.0",
                "size": 29704,
                "upload_time": "2022-10-27T16:16:30",
                "upload_time_iso_8601": "2022-10-27T16:16:30.563456Z",
                "url": "https://files.pythonhosted.org/packages/76/f6/436b4683a7df0f7755488fcc0e917133d271c1179b90655d9a0ee15195b8/pydec-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Sen Yang",
            "author_email": "yangsen@smail.nju.edu.cn",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "\n[![PyPI](https://img.shields.io/pypi/v/pydec)](https://pypi.org/project/pydec/)\n[![Test](https://github.com/DoubleVII/pydec/actions/workflows/python-package-conda.yml/badge.svg?branch=master)](https://github.com/DoubleVII/pydec/actions/workflows/python-package-conda.yml)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/DoubleVII/pydec/pages%20build%20and%20deployment?label=docs)](https://doublevii.github.io/pydec/)\n![Coverage badge](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/DoubleVII/pydec/python-coverage-comment-action-data/endpoint.json)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\n\n<h1 align=\"center\" style=\"font-size:60px\">\n  PyDec\n</h1>\n\nPyDec is a linear decomposition toolkit for neural network based on [PyTorch](https://pytorch.org/), which can decompose the tensor in the forward process into given components with a small amount of code. The result of decomposition can be applied to tasks such as attribution analysis.\n\n### Features:\n* Fast. Compute decomposition in foward process and benefit from GPU acceleration.\n* Real-time. Outputs attribution along with the model output results.\n* Applicable to networks such as Transformer, CNN and RNN.\n\n# Examples\n## Attribution\nContribution Heat maps of the Roberta model (fine-tuned on SST-2). Warm colors indicate high\ncontribution while cool colors indicate low contribution. The outputs of the model were positive, negative and positive, but the latter two samples did not match the labels.\n\n<div align=\"center\">\n<img src=\"./docs/assets/img/pydec_demo1.png\" width=\"70%\">\n</div>\n\n## Data flow visualization\n\n![demo2](./docs/assets/img/pydec_demo2_1.gif)\n\n![demo2](./docs/assets/img/pydec_demo2_2.gif)\n\n# Requirements and Installation\n* [PyTorch](https://pytorch.org/) version >= 1.11.0\n* Python version >= 3.7\n* To install PyDec and develop locally:\n\n``` bash\ngit clone https://github.com/DoubleVII/pydec\ncd pydec\npip install --editable ./\n```\n\n* To install the latest stable release:\n``` bash\npip install pydec\n```\n\n# Getting Started\n\n## Example: deompose a tiny network\n\nSuppose a simple feedforward neural network containing two input tensors and outputting one tensor.\n```python\nclass NN(nn.Module):\n    def __init__(self) -> None:...\n\n    def forward(self, x1:Tensor, x2:Tensor) -> Tensor:\n        x1 = self.linear1(x1)\n        x1 = self.relu(x1)\n\n        x2 = self.linear2(x2)\n        x2 = self.relu(x2)\n\n        out = self.linear3(x1+x2)\n        return out\n```\nIn order to keep track of the components of inputs x1 and x2 in each hidden tensor, simply initialize the corresponding compositions and apply the same operation for them.\n```python\nclass NN(nn.Module):\n    def __init__(self) -> None:...\n\n    def forward(self, x1: Tensor, x2: Tensor) -> Tensor:\n        x1 = self.linear1(x1)\n        x1 = self.relu(x1)\n\n        x2 = self.linear2(x2)\n        x2 = self.relu(x2)\n\n        out = self.linear3(x1 + x2)\n\n        import pydec\n        from pydec import Composition\n        # Initialize composition\n        c1 = Composition(x1.size(), component_num=2).to(x1)\n        c1[0] = x1 # Assign x1 to the first component of c1.\n\n        c2 = Composition(x2.size(), component_num=2).to(x2)\n        c2[1] = x2 # Assign x2 to the second component of c2.\n\n        # Apply the same operation for composition\n        c1 = pydec.nn.functional.linear(\n            c1, weight=self.linear1.weight, bias=self.linear1.bias\n        )\n        c1 = pydec.nn.functional.relu(c1)\n\n        c2 = pydec.nn.functional.linear(\n            c2, weight=self.linear2.weight, bias=self.linear2.bias\n        )\n        c2 = pydec.nn.functional.relu(c2)\n        \n        c_out = pydec.nn.functional.linear3(\n            c1 + c2, weight=self.linear3.weight, bias=self.linear3.bias\n        )\n        return out, c_out\n```\n\nIn the above example, each composition consists of two components whose sum is always equal to the corresponding tensor being decomposed, e.g., $x_1=c_1[0]+c_1[1]$ and $out=c_{out}[0]+c_{out}[1]$. Usually, you can think of $c_{out}[i]$ as the contribution of $x_i$ to the tensor $out$.\n\n# Documentation\n\nThe [full documentation](https://doublevii.github.io/pydec/) contains examples of implementations on realistic models, tutorials, notes and Python API.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/DoubleVII/pydec/",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pydec",
            "package_url": "https://pypi.org/project/pydec/",
            "platform": null,
            "project_url": "https://pypi.org/project/pydec/",
            "project_urls": {
                "Homepage": "https://github.com/DoubleVII/pydec/"
            },
            "release_url": "https://pypi.org/project/pydec/0.1.1/",
            "requires_dist": [
                "torch (>=1.11.0)",
                "numpy"
            ],
            "requires_python": ">=3.7.0",
            "summary": "Linear decomposition toolkit for neural network based on pytorch.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15866440,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c1f4c886aa58ec48250a25df5494a61",
                    "sha256": "8be60fef2b9a288f686833df01498d8c2f73cfa36cfc23972138ac36f4aacd52"
                },
                "downloads": -1,
                "filename": "pydec-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9c1f4c886aa58ec48250a25df5494a61",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7.0",
                "size": 23164,
                "upload_time": "2022-11-23T12:31:54",
                "upload_time_iso_8601": "2022-11-23T12:31:54.177467Z",
                "url": "https://files.pythonhosted.org/packages/f7/0e/522ca840c072be407df084d7eec90878998e31dd7d9f690347723dad591e/pydec-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9cb38cbdb102b08c016568d8e134f008",
                    "sha256": "7120a146d74572107a4fc93836fda66e42da56cbe001d5e8510e37c01e24d0bc"
                },
                "downloads": -1,
                "filename": "pydec-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9cb38cbdb102b08c016568d8e134f008",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7.0",
                "size": 22764,
                "upload_time": "2022-11-23T12:31:55",
                "upload_time_iso_8601": "2022-11-23T12:31:55.725512Z",
                "url": "https://files.pythonhosted.org/packages/b5/93/9f78682cb69b7d3a535d1a713d650f721d7bae5ea398696b3ede58daf14d/pydec-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}