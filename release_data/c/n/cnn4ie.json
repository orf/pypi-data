{
    "0.1.0": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3440ca5a86fecad4b9373e7aef6f42d7",
                    "sha256": "b46c1c85610b04bfa4a45fd38fc537c7c94062bca6e2aba066f72fe158aa7abe"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3440ca5a86fecad4b9373e7aef6f42d7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 22650,
                "upload_time": "2021-06-19T03:33:10",
                "upload_time_iso_8601": "2021-06-19T03:33:10.682228Z",
                "url": "https://files.pythonhosted.org/packages/b3/94/f0a0e6d1cd603be4fc9466b456645254e72756b6f63c2c97e3a3f58d94c8/CNN4IE-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "151b5dfec0f4ad50d1e5a059a69ab3ac",
                    "sha256": "e133041fa4732353a3d28141e2c05edbf38ee20ece3d0ae63703550992083b03"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "151b5dfec0f4ad50d1e5a059a69ab3ac",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23051,
                "upload_time": "2021-07-10T08:01:33",
                "upload_time_iso_8601": "2021-07-10T08:01:33.714420Z",
                "url": "https://files.pythonhosted.org/packages/db/b2/45ff0d8740b4e25f3adc430f35a8b59613fd35dad9456992b1607dcc20e4/CNN4IE-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2f37321898cd3f80f5694d80ecb41b5c",
                    "sha256": "77f9fb0226002012ee99f32e2198316855ffbca697f68d2cbefcf014d0dd9b3a"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2f37321898cd3f80f5694d80ecb41b5c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 31193,
                "upload_time": "2021-10-01T01:49:04",
                "upload_time_iso_8601": "2021-10-01T01:49:04.961650Z",
                "url": "https://files.pythonhosted.org/packages/fe/a6/1c8b3dbf5d3b62e182ec47c1c61edabf4a696e96d244a95e46d6a42d5ac6/CNN4IE-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.3/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a20c68c4673566fc185339527bc47231",
                    "sha256": "971ba815e9431f98a7e3d8a96a09131a22069ca7e5c1b97e267677f32e183c86"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a20c68c4673566fc185339527bc47231",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 50215,
                "upload_time": "2021-10-09T14:08:20",
                "upload_time_iso_8601": "2021-10-09T14:08:20.998131Z",
                "url": "https://files.pythonhosted.org/packages/ab/a9/bde17b776cb3ba2d2a4e0e9b3f3d2d4b7fd948628a97ec488b02feee72e3/CNN4IE-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.4/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6204d613ce09313f86f5c02ee6739c9d",
                    "sha256": "991cf6440128e25d22f2759b7a3eec011d442a1bdc12ed38c2c14ff35d6e6a63"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6204d613ce09313f86f5c02ee6739c9d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 69918,
                "upload_time": "2021-10-11T12:24:07",
                "upload_time_iso_8601": "2021-10-11T12:24:07.916761Z",
                "url": "https://files.pythonhosted.org/packages/11/58/b6b098a53bd988f606d5769c2fa931b85e69f3ea151e0bee0f40c194833a/CNN4IE-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.5": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.5/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "75958a4c679ec93d9a32e053626bbb3d",
                    "sha256": "52f180d0f1359fcfe5f5880f75766bfce4af154c092b078d856d4c69c2c5158a"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "75958a4c679ec93d9a32e053626bbb3d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 79463,
                "upload_time": "2021-10-12T11:44:14",
                "upload_time_iso_8601": "2021-10-12T11:44:14.764886Z",
                "url": "https://files.pythonhosted.org/packages/0b/65/dc17e4d500ad9ab1e669364c88f078a42b2275044d9fdee17ab1cc31c740/CNN4IE-0.1.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.6": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.6/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4a4935bac1750a02d9416c4e71e576f3",
                    "sha256": "2763184c8f06496965fabb5d59c5404d1b238feaa4d5200e022febab26ef0712"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4a4935bac1750a02d9416c4e71e576f3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 88650,
                "upload_time": "2021-10-12T14:14:13",
                "upload_time_iso_8601": "2021-10-12T14:14:13.473195Z",
                "url": "https://files.pythonhosted.org/packages/41/5d/1f28ba8d21b2abec3d1968666b6db403166ecb402a58548265509ddb6600/CNN4IE-0.1.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.7": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.7/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7a9c2afe9bec79c0fe74a43e837f5cf",
                    "sha256": "68ff335f6e708224578d379fa643dbf6f2ca77646348df1f839750c44c3c1f66"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d7a9c2afe9bec79c0fe74a43e837f5cf",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 106828,
                "upload_time": "2021-10-13T11:27:33",
                "upload_time_iso_8601": "2021-10-13T11:27:33.828882Z",
                "url": "https://files.pythonhosted.org/packages/e9/e6/64dd7b9601b1fb37186dd7d4bfef555a9e887031f57ee831920efca632f1/CNN4IE-0.1.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.8": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.8/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5e77b1b16ff5b4506644395035d97786",
                    "sha256": "16481124865b639c5ad3510402498b9c69711c354bef7f25260f6b568296a1a0"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5e77b1b16ff5b4506644395035d97786",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 115736,
                "upload_time": "2021-10-14T11:32:02",
                "upload_time_iso_8601": "2021-10-14T11:32:02.684073Z",
                "url": "https://files.pythonhosted.org/packages/61/4e/056007d3aaf8776470db924914dda05810c456e57b0022bdd05700b81afb/CNN4IE-0.1.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.9": {
        "info": {
            "author": "ShiYan",
            "author_email": "2229029156@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description": "# CNN4IE\n\n\u4e2d\u6587\u4fe1\u606f\u62bd\u53d6\u5de5\u5177\u3002\u4f7f\u7528CNN\u7684\u4e0d\u540c\u53d8\u4f53\u8fdb\u884c\u4fe1\u606f\u62bd\u53d6\uff0c\u4ee5\u540e\u4f1a\u6301\u7eed\u52a0\u5165\u4e0d\u540c\u6a21\u578b\u3002\u8be5\u9879\u76ee\u4f7f\u7528pytorch\uff0cpython\u5f00\u53d1\u3002\n\n**CNN4IE**\u5c06\u5404\u79cd\u6539\u8fdb\u7248\u672c\u7684conv\u8fdb\u884c\u6539\u52a8\u7528\u4e8e\u4e2d\u6587\u4fe1\u606f\u62bd\u53d6\u3002\n\n**Guide**\n\n- [Intro](#Intro)\n- [Model](#Model)\n- [Evaluate](#Evaluate)\n- [Install](#install)\n- [Dataset](#Dataset)\n- [Todo](#Todo)\n- [Cite](#Cite)\n- [Reference](#reference)\n\n## Intro\n\n\u76ee\u524d\u4e3b\u8981\u5b9e\u73b0\u4e2d\u6587\u5b9e\u4f53\u62bd\u53d6\uff1a\n\n\u8bad\u7ec3\u6837\u672c\u4ee5B\u3001I\u3001O\u5f62\u5f0f\u8fdb\u884c\u6807\u6ce8\u3002\n\n## Model\n### \u6a21\u578b\n\u6a21\u578b\u91cc\u9762\u7684conv\u5757\u90e8\u5206\u4e3b\u8981\u6765\u81ea\u540e\u9762\u7684paper\u4e2d\u7684\u90e8\u5206\u6a21\u5757\u3002\n* 1.MultiLayerResCNN(cnn4ie/mlrescnn)\uff1a\u591a\u5c42\u6b8b\u5deeCNN(+CRF)\uff0c [Convolutional Sequence to Sequence Learning](https://arxiv.org/abs/1705.03122) \u3002\n* 2.MultiLayerResDSCNN(cnn4ie/dscnn)\uff1a\u591a\u5c42\u6df1\u5ea6\u53ef\u5206\u79bbdepthwise_separable_convolutionCNN(+CRF)\uff0c [Xception: Deep Learning with Depthwise Separable Convolutions](https://arxiv.org/pdf/1610.02357.pdf) \u3002\n* 3.MultiLayerAugmentedCNN(cnn4ie/attention_augmented_cnn)\uff1a\u591a\u5c42\u6ce8\u610f\u529b\u589e\u5f3aCNN(+CRF)\uff0c [Attention Augmented Convolutional Networks](https://arxiv.org/pdf/1904.09925.pdf) \u3002\n* 4.MultiLayerLambdaCNN(cnn4ie/lambda_cnn)\uff1a\u591a\u5c42LambdaCNN(+CRF)\uff0c [LambdaNetworks: Modeling long-range Interactions without Attention](https://openreview.net/forum?id=xTJEN-ggl1b) \u3002\n* 5.MultiLayerResLWCNN(cnn4ie/lcnn)\uff1a\u591a\u5c42\u8f7b\u91cfLightweightCNN(+CRF)\uff0c [Pay Less Attention with Lightweight and Dynamic Convolutions](https://arxiv.org/pdf/1901.10430.pdf) \u3002\n* 6.MultiLayerResDYCNN(cnn4ie/dcnn)\uff1a\u591a\u5c42\u52a8\u6001DynamicCNN(+CRF)\uff0c [Pay Less Attention with Lightweight and Dynamic Convolutions](https://arxiv.org/pdf/1901.10430.pdf) \u3002\n* 7.MultiLayerStdAttnCNN(cnn4ie/stand_alone_self_attention_cnn)\uff1a\u591a\u5c42\u72ec\u7acb\u81ea\u6ce8\u610f\u529bstand_alone_self_attention_CNN(+CRF)\uff0c[Stand-Alone Self-Attention in Vision Models](https://arxiv.org/pdf/1906.05909.pdf) \u3002\n* 8.MultiLayerCSAttCNN(cnn4ie/channel_spatial_attention_cnn)\uff0c\u591a\u5c42\u8054\u5408\u901a\u9053\u548c\u7a7a\u95f4\u6ce8\u610f\u529bchannel_spatial_attention_CNN(+CRF)\uff0c[CBAM: Convolutional Block Attention Module](https://arxiv.org/pdf/1807.06521.pdf) \u3002\n* 9.MultiLayerSACNN(cnn4ie/self_attention_cnn)\uff0c\u591a\u5c42self-attention_CNN(+CRF)\uff0c[Self-Attention Generative Adversarial Networks](https://arxiv.org/pdf/1805.08318.pdf) \u3002\n* 10.MultiLayerGroupMixedCNN(cnn4ie/mixed_depthwise_cnn)\uff0c\u591a\u5c42mixed_depthwise_CNN(+CRF)\uff0c[MixConv: Mixed Depthwise Convolutional Kernels](https://arxiv.org/pdf/1907.09595.pdf) \u3002\n* 11.MultiLayerMultiCNN(cnn4ie/multi_cnn)\uff0c\u591a\u5c42multiconv_CNN(+CRF)\uff0c[Character-Level Translation with Self-attention](https://arxiv.org/pdf/2004.14788.pdf) \u3002\n* 12.MultiLayerMixedAttCNN(cnn4ie/mixed_attention_cnn)\uff0c\u591a\u5c42\u6df7\u5408(\u5168\u5c40\u548c\u5c40\u90e8attention)mixed_attention_cnn\uff0c[ConvBERT: Improving BERT with Span-based Dynamic Convolution](https://arxiv.org/pdf/2008.02496.pdf) \u3002\n\n#### Usage\n- \u76f8\u5173\u53c2\u6570\u7684\u914d\u7f6econfig\u89c1\u6bcf\u4e2a\u6a21\u578b\u6587\u4ef6\u5939\u4e2d\u7684config.cfg\u6587\u4ef6\uff0c\u8bad\u7ec3\u548c\u9884\u6d4b\u65f6\u4f1a\u52a0\u8f7d\u6b64\u6587\u4ef6\u3002\n\n- \u8bad\u7ec3\u53ca\u9884\u6d4b(\u652f\u6301\u52a0\u8f7d\u9884\u8bad\u7ec3\u7684embedding\u5411\u91cf)\n\n     ##### 1.MultiLayerResCNN(cnn4ie/mlrescnn)\n     \n     (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.mlrescnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 199 | Time: 0m 4s\n\tTrain Loss: 228.545 | Train PPL: 1.802960293422957e+99\n\t Val. Loss: 433.577 |  Val. PPL: 1.9966207577208172e+188\n\t Val. report:               precision    recall  f1-score   support\n\n           1       1.00      1.00      1.00      4539\n           2       0.98      0.99      0.99      4926\n           3       0.90      0.83      0.86       166\n           4       0.74      0.98      0.84        52\n           5       0.94      0.77      0.84       120\n           6       0.76      0.97      0.85        39\n           7       0.82      0.87      0.85        54\n           8       0.93      0.74      0.82        68\n           9       0.95      0.77      0.85        26\n          10       1.00      0.80      0.89        10\n\n    accuracy                           0.98     10000\n    macro avg       0.90      0.87      0.88     10000\n    weighted avg       0.99      0.98      0.98     10000\n    ```\n      \n    (2).\u9884\u6d4b\n\n    ```\n    from cnn4ie.mlrescnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config_cfg')\n    result = predict.predict('\u636e\u65b0\u534e\u793e\u62a5\u9053\uff0c\u5b89\u5fbd\u7701\u516d\u5b89\u5e02\u88ab\u8bc4\u4e0a\u5341\u5927\u6613\u5c45\u57ce\u5e02\uff01')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 7, 'stop': 13, 'word': '\u5b89\u5fbd\u7701\u516d\u5b89\u5e02', 'type': 'LOC'}, {'start': 1, 'stop': 4, 'word': '\u65b0\u534e\u793e', 'type': 'ORG'}]\n    ```\n    ##### 2.MultiLayerResDSCNN(cnn4ie/dscnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.dscnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 192 | Time: 0m 3s\n\tTrain Loss: 191.273 | Train PPL: 1.172960293422957e+99\n\t Val. Loss: 533.260 |  Val. PPL: 5.2866207577208172e+188\n\t Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.98      0.98      0.98      4926\n           3       0.92      0.82      0.87       166\n           4       0.82      0.88      0.85        52\n           5       0.84      0.76      0.80       120\n           6       0.90      0.95      0.92        39\n           7       0.90      0.85      0.88        54\n           8       0.84      0.71      0.77        68\n           9       0.85      0.65      0.74        26\n          10       1.00      0.70      0.82        10\n\n    accuracy                           0.98     10000\n    macro avg       0.91      0.83      0.86     10000\n    weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.dscnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 3.MultiLayerAugmentedCNN(cnn4ie/attention_augmented_cnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.attention_augmented_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 192 | Time: 0m 3s\n        Train Loss: 185.204 | Train PPL: 2.711303579086953e+80\n         Val. Loss: 561.592 |  Val. PPL: 7.877783034926193e+243\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.98      0.99      0.98      4926\n           3       0.96      0.77      0.85       166\n           4       0.81      0.85      0.83        52\n           5       0.88      0.71      0.78       120\n           6       0.90      0.90      0.90        39\n           7       0.90      0.85      0.88        54\n           8       0.85      0.69      0.76        68\n           9       1.00      0.42      0.59        26\n          10       1.00      0.50      0.67        10\n\n    accuracy                           0.98     10000\n    macro avg       0.93      0.77      0.82     10000\n    weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.attention_augmented_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 4.MultiLayerLambdaCNN(cnn4ie/lambda_cnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.lambda_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 197 | Time: 0m 2s\n        Train Loss: 198.344 | Train PPL: 1.3800537707438322e+86\n         Val. Loss: 668.780 |  Val. PPL: 2.8022239331403918e+290\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.98      0.98      0.98      4926\n           3       0.80      0.78      0.79       166\n           4       0.89      0.90      0.90        52\n           5       0.86      0.77      0.81       120\n           6       0.90      0.92      0.91        39\n           7       0.81      0.87      0.84        54\n           8       0.88      0.75      0.81        68\n           9       0.93      0.54      0.68        26\n          10       1.00      0.70      0.82        10\n\n    accuracy                           0.98     10000\n    macro avg       0.90      0.82      0.85     10000\n    weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.lambda_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 5.MultiLayerResLWCNN(cnn4ie/lcnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.lcnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 190 | Time: 0m 4s\n        Train Loss: 195.472 | Train PPL: 7.807223255192846e+84\n         Val. Loss: 453.642 |  Val. PPL: 1.0328983269312897e+197\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      5925\n           2       0.99      0.98      0.98      5501\n           3       0.90      0.85      0.87       174\n           4       0.72      0.93      0.81        57\n           5       0.92      0.81      0.86       122\n           6       0.82      0.91      0.86        44\n           7       0.84      0.85      0.85        62\n           8       0.92      0.77      0.84        71\n           9       0.66      0.81      0.72        31\n          10       0.91      0.77      0.83        13\n\n   accuracy                           0.98     12000\n   macro avg       0.86      0.87      0.86     12000\n   weighted avg       0.98      0.98      0.98     12000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.lcnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 6.MultiLayerResDYCNN(cnn4ie/dcnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.dcnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 192 | Time: 0m 4s\n        Train Loss: 182.916 | Train PPL: 2.7491663642617552e+79\n         Val. Loss: 463.782 |  Val. PPL: 2.618555606950152e+201\n         Val. report:               precision    recall  f1-score   support\n\n           1       1.00      1.00      1.00      5925\n           2       0.99      0.98      0.98      5501\n           3       0.86      0.86      0.86       174\n           4       0.80      0.93      0.86        57\n           5       0.84      0.79      0.81       122\n           6       0.83      0.89      0.86        44\n           7       0.83      0.87      0.85        62\n           8       0.88      0.75      0.81        71\n           9       0.92      0.71      0.80        31\n          10       1.00      0.85      0.92        13\n\n   accuracy                           0.98     12000\n   macro avg       0.89      0.86      0.88     12000\n   weighted avg       0.98      0.98      0.98     12000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.dcnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 7.MultiLayerStdAttnCNN(cnn4ie/stand_alone_self_attention_cnn)\n    \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.stand_alone_self_attention_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 195 | Time: 0m 3s\n        Train Loss: 247.570 | Train PPL: 3.29768182789317e+107\n         Val. Loss: 681.482 |  Val. PPL: 9.20623044303632e+295\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.99      0.99      0.99      4926\n           3       0.95      0.86      0.90       166\n           4       0.93      0.96      0.94        52\n           5       0.91      0.78      0.84       120\n           6       0.93      0.97      0.95        39\n           7       0.80      0.89      0.84        54\n           8       0.91      0.72      0.80        68\n           9       1.00      0.69      0.82        26\n          10       1.00      0.90      0.95        10\n\n   accuracy                           0.98     10000\n   macro avg       0.94      0.88      0.90     10000\n   weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.stand_alone_self_attention_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 19, 'stop': 26, 'word': '\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a', 'type': 'ORG'}, {'start': 32, 'stop': 36, 'word': ' \u4eca\u5929\u4e0b\u5348', 'type': 'T'}, {'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}]\n    ```\n    ##### 8.MultiLayerCSAttCNN(cnn4ie/channel_spatial_attention_cnn)     \n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.channel_spatial_attention_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 181 | Time: 0m 3s\n        Train Loss: 112.922 | Train PPL: 1.1001029953413096e+49\n         Val. Loss: 493.448 |  Val. PPL: 2.002428912702234e+214\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.98      0.98      0.98      4926\n           3       0.89      0.81      0.85       166\n           4       0.77      0.88      0.82        52\n           5       0.90      0.73      0.81       120\n           6       0.84      0.92      0.88        39\n           7       0.81      0.89      0.85        54\n           8       0.90      0.69      0.78        68\n           9       0.85      0.85      0.85        26\n          10       0.82      0.90      0.86        10\n\n   accuracy                           0.98     10000\n   macro avg       0.88      0.87      0.87     10000\n   weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.channel_spatial_attention_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]    \n    ```\n    ##### 9.MultiLayerSACNN(cnn4ie/self_attention_cnn)\n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.self_attention_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 198 | Time: 0m 2s\n        Train Loss: 241.123 | Train PPL: 5.227354818437855e+104\n         Val. Loss: 421.708 |  Val. PPL: 1.3982772880257424e+183\n         Val. report:               precision    recall  f1-score   support\n\n           1       0.99      1.00      1.00      4539\n           2       0.98      0.98      0.98      4926\n           3       0.89      0.87      0.88       166\n           4       0.84      0.92      0.88        52\n           5       0.76      0.74      0.75       120\n           6       0.88      0.95      0.91        39\n           7       0.83      0.91      0.87        54\n           8       0.80      0.71      0.75        68\n           9       1.00      0.54      0.70        26\n          10       1.00      0.70      0.82        10\n\n   accuracy                           0.98     10000\n   macro avg       0.90      0.83      0.85     10000\n   weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.self_attention_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}, {'start': 19, 'stop': 26, 'word': '\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a', 'type': 'ORG'}, {'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}]\n    ```\n    ##### 10.MultiLayerGroupMixedCNN(cnn4ie/mixed_depthwise_cnn)\n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.mixed_depthwise_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 200 | Time: 0m 1s\n        Train Loss: 310.169 | Train PPL: 5.0653182367925945e+134\n         Val. Loss: 451.143 |  Val. PPL: 8.489160946059989e+195\n         Val. report:               precision    recall  f1-score   support\n\n           1       1.00      1.00      1.00      4539\n           2       0.98      0.99      0.99      4926\n           3       0.93      0.83      0.88       166\n           4       0.89      0.90      0.90        52\n           5       0.89      0.75      0.81       120\n           6       0.92      0.92      0.92        39\n           7       0.91      0.93      0.92        54\n           8       0.86      0.71      0.77        68\n           9       1.00      0.58      0.73        26\n          10       1.00      0.70      0.82        10\n\n   accuracy                           0.99     10000\n   macro avg       0.94      0.83      0.87     10000\n   weighted avg       0.98      0.99      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.mixed_depthwise_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 19, 'stop': 24, 'word': '\u5168\u56fd\u4eba\u5927\u5e38', 'type': 'ORG'}, {'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}, {'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}]\n    ```\n    ##### 11.MultiLayerMultiCNN(cnn4ie/multi_cnn)\n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.multi_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 200 | Time: 0m 1s\n        Train Loss: 234.673 | Train PPL: 8.267382310706752e+101\n         Val. Loss: 444.010 |  Val. PPL: 6.779999895568844e+192\n         Val. report:               precision    recall  f1-score   support\n\n           1       1.00      1.00      1.00      4539\n           2       0.98      0.99      0.98      4926\n           3       0.92      0.84      0.88       166\n           4       0.81      0.96      0.88        52\n           5       0.83      0.78      0.81       120\n           6       0.86      0.95      0.90        39\n           7       0.92      0.91      0.92        54\n           8       0.80      0.71      0.75        68\n           9       1.00      0.69      0.82        26\n          10       1.00      0.70      0.82        10\n\n   accuracy                           0.98     10000\n   macro avg       0.91      0.85      0.88     10000\n   weighted avg       0.98      0.98      0.98     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.multi_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}, {'start': 20, 'stop': 25, 'word': '\u56fd\u4eba\u5927\u5e38\u59d4', 'type': 'ORG'}, {'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}]\n    ```\n    ##### 12.MultiLayerMixedAttCNN(cnn4ie/mixed_attention_cnn)\n    (1).\u8bad\u7ec3\n    ```\n    from cnn4ie.mixed_attention_cnn.train import Train\n    train = Train()\n    train.train_model('config.cfg')\n    ```\n  ```\n  Epoch: 250 | Time: 0m 3s\n\tTrain Loss: 107.790 | Train PPL: 6.497928061494806e+46\n\t Val. Loss: 283.142 |  Val. PPL: 9.269305878179231e+122\n\t Val. report:               precision    recall  f1-score   support\n\n           1       1.00      1.00      1.00      4539\n           2       0.98      0.99      0.99      4926\n           3       0.91      0.84      0.87       166\n           4       0.86      0.98      0.92        52\n           5       0.91      0.78      0.84       120\n           6       0.93      0.97      0.95        39\n           7       0.88      0.91      0.89        54\n           8       0.92      0.72      0.81        68\n           9       1.00      0.65      0.79        26\n          10       1.00      0.80      0.89        10\n\n   accuracy                           0.99     10000\n   macro avg       0.94      0.86      0.89     10000\n   weighted avg       0.99      0.99      0.99     10000\n    ```\n    (2).\u9884\u6d4b\n    ```\n    from cnn4ie.mixed_attention_cnn.predict import Predict\n  \n    predict = Predict()\n    predict.load_model_vocab('config.cfg')\n    result = predict.predict('\u672c\u62a5\u5317\u4eac\uff12\u6708\uff12\uff18\u65e5\u8baf\u8bb0\u8005\u82cf\u5b81\u62a5\u9053\uff1a\u516b\u5c4a\u5168\u56fd\u4eba\u5927\u5e38\u59d4\u4f1a\u7b2c\u4e09\u5341\u6b21\u4f1a\u8bae\u4eca\u5929\u4e0b\u5348\u5728\u4eac\u95ed\u5e55\u3002')\n  \n    print(result)\n    ```\n    ```\n    [{'start': 32, 'stop': 36, 'word': '\u4eca\u5929\u4e0b\u5348', 'type': 'T'}, {'start': 2, 'stop': 4, 'word': '\u5317\u4eac', 'type': 'LOC'}, {'start': 12, 'stop': 14, 'word': '\u82cf\u5b81', 'type': 'LOC'}] \n    ```\n    \n* \n* \n* \n* \n* \n* \n\n\n## Evaluate\n\u8bc4\u4f30\u91c7\u7528\u7684\u662fP\u3001R\u3001F1\u3001PPL\u7b49\u3002\u8bc4\u4f30\u65b9\u6cd5\u53ef\u5229\u7528scikit-learn\u4e2d\u7684precision_recall_fscore_support\u6216classification_report\u3002\n\n\n## Install\n* \u5b89\u88c5\uff1apip install CNN4IE\n* \u4e0b\u8f7d\u6e90\u7801\uff1a\n```\ngit clone https://github.com/jiangnanboy/CNN4IE.git\ncd CNN4IE\npython setup.py install\n```\n\n\n\u901a\u8fc7\u4ee5\u4e0a\u4e24\u79cd\u65b9\u6cd5\u7684\u4efb\u4f55\u4e00\u79cd\u5b8c\u6210\u5b89\u88c5\u90fd\u53ef\u4ee5\u3002\u5982\u679c\u4e0d\u60f3\u5b89\u88c5\uff0c\u53ef\u4ee5\u4e0b\u8f7d[github\u6e90\u7801\u5305](https://github.com/jiangnanboy/CNN4IE/archive/master.zip)\n\n## Dataset\n\n   \u8fd9\u91cc\u5229\u7528data(\u6765\u81ea\u4eba\u6c11\u65e5\u62a5\uff0c\u8bc6\u522b\u7684\u662f[ORG, PER, LOC, T, O])\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u8bc4\u4f30\uff0c\u6a21\u578b1\u7684\u8bad\u7ec3\u53ca\u8bc4\u4f30\u7ed3\u679c\uff08\u5206\u4e3a\u5e26\u9884\u8bad\u7ec3\u5411\u91cf\u548c\u4e0d\u5e26\u9884\u8bad\u7ec3\u5411\u91cf\u7684\u8bad\u7ec3\u7ed3\u679c\uff09\u89c1examples/mlrescnn\uff08\u5176\u5b83\u6a21\u578b\u53ef\u81ea\u884c\u8fd0\u884c\u8bc4\u4f30\uff09\u3002\n    \n   \u9884\u8bad\u7ec3embedding\u5411\u91cf\uff1a[sgns.sogou.char.bz2](https://pan.baidu.com/s/1pUqyn7mnPcUmzxT64gGpSw)\n\n\u6570\u636e\u96c6\u7684\u683c\u5f0f\u89c1[data](data/)\uff0c\u5206\u4e3atrain\u4e0edev\uff0c\u5176\u4e2dsource\u4e0etarget\u4e3a\u4e2d\u6587\u5bf9\u5e94\u7684\u5b9e\u4f53\u6807\u6ce8\u3002\n\n\u6570\u636e\u88ab\u5904\u7406\u6210csv\u683c\u5f0f\u3002\n\n## Todo\n\u6301\u7eed\u52a0\u5165\u66f4\u591a\u6a21\u578b......\n\n## Cite\n\n\u5982\u679c\u4f60\u5728\u7814\u7a76\u4e2d\u4f7f\u7528\u4e86CNN4IE\uff0c\u8bf7\u6309\u5982\u4e0b\u683c\u5f0f\u5f15\u7528\uff1a\n\n```latex\n@software{CNN4IE,\n  author = {Shi Yan},\n  title = {CNN4IE: Chinese Information Extraction Tool},\n  year = {2021},\n  url = {https://github.com/jiangnanboy/CNN4IE},\n}\n```\n\n## License\n\nCNN4IE \u7684\u6388\u6743\u534f\u8bae\u4e3a **Apache License 2.0**\uff0c\u53ef\u514d\u8d39\u7528\u505a\u5546\u4e1a\u7528\u9014\u3002\u8bf7\u5728\u4ea7\u54c1\u8bf4\u660e\u4e2d\u9644\u52a0CNN4IE\u7684\u94fe\u63a5\u548c\u6388\u6743\u534f\u8bae\u3002CNN4IE\u53d7\u7248\u6743\u6cd5\u4fdd\u62a4\uff0c\u4fb5\u6743\u5fc5\u7a76\u3002\n\n## Update\n\n(1).CNN4IE 0.1.0 init commit\n\n(2).CNN4IE 0.1.1 update self.max_len\n\n(3).CNN4IE 0.1.2 update new model -> [MultiLayerResDSCNN]\n\n(4).CNN4IE 0.1.3 update new model -> [MultiLayerAugmentedCNN]\u3001[MultiLayerLambdaCNN]\n\n(5).CNN4IE 0.1.4 update new model -> [MultiLayerResLWCNN]\u3001[MultiLayerResDYCNN]\n\n(6).CNN4IE 0.1.5 update new model -> [MultiLayerStdAttnCNN]\n\n(7).CNN4IE 0.1.6 update new model -> [MultiLayerCSAttCNN]\n\n(8).CNN4IE 0.1.7 update new model -> [MultiLayerSACNN]\u3001[MultiLayerGroupMixedCNN]\n\n(9).CNN4IE 0.1.8 update new model -> [MultiLayerMultiCNN]\n\n(10).CNN4IE 0.1.9 update new model -> [MultiLayerMixedAttCNN]\n\n\n## Reference\n\n* [fairseq](https://github.com/facebookresearch/fairseq)\n* [allennlp](https://github.com/allenai/allennlp)\n* [Convolutional Sequence to Sequence Learning](https://arxiv.org/abs/1705.03122)\n* [Deep Residual Learning for Image Recognition](https://arxiv.org/pdf/1512.03385.pdf)\n* [Xception: Deep Learning with Depthwise Separable Convolutions](https://arxiv.org/pdf/1610.02357.pdf)\n* [Attention Augmented Convolutional Networks](https://arxiv.org/pdf/1904.09925.pdf)\n* [LambdaNetworks: Modeling long-range Interactions without Attention](https://openreview.net/forum?id=xTJEN-ggl1b)\n* [Pay Less Attention with Lightweight and Dynamic Convolutions](https://arxiv.org/pdf/1901.10430.pdf)\n* [Stand-Alone Self-Attention in Vision Models](https://arxiv.org/pdf/1906.05909.pdf)\n* [CBAM: Convolutional Block Attention Module](https://arxiv.org/pdf/1807.06521.pdf)\n* [Self-Attention Generative Adversarial Networks](https://arxiv.org/pdf/1805.08318.pdf)\n* [MixConv: Mixed Depthwise Convolutional Kernels](https://arxiv.org/pdf/1907.09595.pdf)\n* [Character-Level Translation with Self-attention](https://arxiv.org/pdf/2004.14788.pdf)\n* [ConvBERT: Improving BERT with Span-based Dynamic Convolution](https://arxiv.org/pdf/2008.02496.pdf)\n* https://github.com/leaderj1001/LambdaNetworks\n* https://github.com/leaderj1001/Attention-Augmented-Conv2d\n* https://github.com/pytorch/fairseq\n* https://github.com/leaderj1001/Stand-Alone-Self-Attention\n* https://github.com/luuuyi/CBAM.PyTorch\n* https://github.com/Jongchan/attention-module\n* https://github.com/fastai/fastai2/blob/master/fastai2/layers.py\n* https://github.com/leaderj1001/Mixed-Depthwise-Convolutional-Kernels\n* https://github.com/CharizardAcademy/convtransformer\n* https://github.com/huggingface/transformers/tree/master/src/transformers/models/convbert\n\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jiangnanboy/CNN4IE",
            "keywords": "NLP,IE,Chinese Information Extraction",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "CNN4IE",
            "package_url": "https://pypi.org/project/CNN4IE/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/CNN4IE/",
            "project_urls": {
                "Homepage": "https://github.com/jiangnanboy/CNN4IE"
            },
            "release_url": "https://pypi.org/project/CNN4IE/0.1.9/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Chinese Information Extraction",
            "version": "0.1.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11809592,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ea14615cc0aa34a469ea660848ed1c04",
                    "sha256": "e46b1cffad9af620f5de8a921e299a3f1b28aed90b9b2486d9d464eb5afbc535"
                },
                "downloads": -1,
                "filename": "CNN4IE-0.1.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ea14615cc0aa34a469ea660848ed1c04",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 124851,
                "upload_time": "2021-10-23T04:32:56",
                "upload_time_iso_8601": "2021-10-23T04:32:56.286420Z",
                "url": "https://files.pythonhosted.org/packages/95/31/dbf927583f5e5b26e82466b947cab77b15693a9363f1763f254bd441c574/CNN4IE-0.1.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}