{
    "0.0.1": {
        "info": {
            "author": "Marcello Perathoner",
            "author_email": "marcello@perathoner.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Utilities"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/MarcelloPerathoner/mapillary_tools",
            "keywords": "mapillary commandline console image upload",
            "license": "GPL3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/MarcelloPerathoner/mapillary_tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Mapillary Commandline Image Uploader",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b71107805e2418e3c3dcc83f55d66929",
                    "sha256": "fed80f9c4acd3c6aa6eb04c8c6fa04c569095f740c9f061c479026eed717dc61"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b71107805e2418e3c3dcc83f55d66929",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8384,
                "upload_time": "2020-08-05T22:47:46",
                "upload_time_iso_8601": "2020-08-05T22:47:46.417787Z",
                "url": "https://files.pythonhosted.org/packages/cb/01/696e9dfa2d508a63f7fcda57d924917877f55c8c26dc0351d2c89159991e/mapillary_tools-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Marcello Perathoner",
            "author_email": "marcello@perathoner.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Topic :: Utilities"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/MarcelloPerathoner/mapillary-tools",
            "keywords": "mapillary commandline console image upload",
            "license": "GPL3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/MarcelloPerathoner/mapillary-tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Mapillary Commandline Image Uploader",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "89ebda7e1ae83b5d9b32502bc45fb11e",
                    "sha256": "e8e3016b6ee4ed145a31361c5425ad9faf080ff527945348988ffaad27169612"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "89ebda7e1ae83b5d9b32502bc45fb11e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10553,
                "upload_time": "2020-08-08T15:30:49",
                "upload_time_iso_8601": "2020-08-08T15:30:49.596472Z",
                "url": "https://files.pythonhosted.org/packages/46/b8/6dcee672d3ca688449c70df067e21fb73a8e90632364f67b8ebaea247d07/mapillary_tools-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Marcello Perathoner",
            "author_email": "marcello@perathoner.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Topic :: Utilities"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/MarcelloPerathoner/mapillary-tools",
            "keywords": "mapillary commandline console image upload",
            "license": "GPL3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/MarcelloPerathoner/mapillary-tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.0.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Mapillary Commandline Image Uploader",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "72480986605c39c34f6a0f375eccb6c7",
                    "sha256": "975d1672c9626c66bbfbe56c1bb5a1b2a5e098c34b9ecbd05c80eb7ef754ba04"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "72480986605c39c34f6a0f375eccb6c7",
                "packagetype": "bdist_wheel",
                "python_version": "3.8",
                "requires_python": null,
                "size": 22864,
                "upload_time": "2020-08-08T19:43:54",
                "upload_time_iso_8601": "2020-08-08T19:43:54.026171Z",
                "url": "https://files.pythonhosted.org/packages/d6/22/5ef1dc5f0429bce84b60742ceb0e5591664f65fe0feea44171dfb6e63ba2/mapillary_tools-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c38e3b991fa41b7ad3208ec9c2aa0df6",
                    "sha256": "eeaa39c82dd62de30f87ca2b605859d21e712191763cec057fc96b76d7165dee"
                },
                "downloads": -1,
                "filename": "mapillary-tools-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "c38e3b991fa41b7ad3208ec9c2aa0df6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10628,
                "upload_time": "2020-08-08T19:12:55",
                "upload_time_iso_8601": "2020-08-08T19:12:55.535597Z",
                "url": "https://files.pythonhosted.org/packages/14/bf/261f967fd2c9aa61c1d4a72c988d4c29c89b627eb27ba22a0c2900e6a273/mapillary-tools-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Marcello Perathoner",
            "author_email": "marcello@perathoner.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/MarcelloPerathoner/mapillary-tools",
            "keywords": "mapillary commandline console image upload",
            "license": "GPL3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/MarcelloPerathoner/mapillary-tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.0.4/",
            "requires_dist": [
                "piexif",
                "requests",
                "tqdm",
                "urllib3"
            ],
            "requires_python": ">=3.5.0",
            "summary": "Mapillary Commandline Image Uploader",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "41591471eeebbbe6ab6000d5fac67db4",
                    "sha256": "c819ce071723ac9b3682e24c89ec0b3aee4e70c29c75b248aa2b0d563233fe07"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "41591471eeebbbe6ab6000d5fac67db4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5.0",
                "size": 23916,
                "upload_time": "2020-08-10T12:53:50",
                "upload_time_iso_8601": "2020-08-10T12:53:50.203275Z",
                "url": "https://files.pythonhosted.org/packages/7a/83/83209f285da2ea4c321ce9fbd83e1f05a78abf501849596d1be37cd8ec29/mapillary_tools-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a6bf9864b5ec37322d66ed27b48225ae",
                    "sha256": "95925c846f8a5f05178985b4d3fa1f936ac91826c819bd8f31a397919e1fce85"
                },
                "downloads": -1,
                "filename": "mapillary-tools-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "a6bf9864b5ec37322d66ed27b48225ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5.0",
                "size": 24382,
                "upload_time": "2020-08-10T12:53:51",
                "upload_time_iso_8601": "2020-08-10T12:53:51.791443Z",
                "url": "https://files.pythonhosted.org/packages/2b/0d/843e8b3d233132efad8be1c9a25094ad593442ac191995c4652e6e95f247/mapillary-tools-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.3": {
        "info": {
            "author": "Mapillary",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mapillary/mapillary_tools",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": null,
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/mapillary/mapillary_tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.9.3/",
            "requires_dist": [
                "appdirs (<2.0.0,>=1.4.4)",
                "construct (<3.0.0,>=2.10.0)",
                "exifread (==2.3.2)",
                "piexif (==1.1.3)",
                "gpxpy (==1.4.2)",
                "pynmea2 (==1.12.0)",
                "requests (<3.0.0,>=2.20.0)",
                "tqdm (<5.0,>=4.0)",
                "typing-extensions",
                "jsonschema",
                "dataclasses ; python_version <= \"3.6\""
            ],
            "requires_python": ">=3.6",
            "summary": "Mapillary Image/Video Import Pipeline",
            "version": "0.9.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d2657466bea32d8f31c1a7b3f45b0cf4",
                    "sha256": "da08ecf4f4dd0afaafa4071632fc5931d617ddf20db753214ef85e7806405464"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d2657466bea32d8f31c1a7b3f45b0cf4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 90710,
                "upload_time": "2022-10-07T21:10:33",
                "upload_time_iso_8601": "2022-10-07T21:10:33.122241Z",
                "url": "https://files.pythonhosted.org/packages/18/dd/d1adcb31ebf40c48d527cf1a82c21a5883f9015a10fa4923cb90ed5011fe/mapillary_tools-0.9.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b4f414bc2609c9192bb05be3d7df1b16",
                    "sha256": "5291c0f7684363aee6c39e9f98bce3098da133b5d17caeb6641a696ce877467f"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.3.tar.gz",
                "has_sig": false,
                "md5_digest": "b4f414bc2609c9192bb05be3d7df1b16",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 74723,
                "upload_time": "2022-10-07T21:10:35",
                "upload_time_iso_8601": "2022-10-07T21:10:35.523969Z",
                "url": "https://files.pythonhosted.org/packages/c5/eb/43eabf5a9606f30536117016feeeaf9e1ed6cd5110ea52878a74f71213f8/mapillary_tools-0.9.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.4": {
        "info": {
            "author": "Mapillary",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mapillary/mapillary_tools",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": null,
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/mapillary/mapillary_tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.9.4/",
            "requires_dist": [
                "appdirs (<2.0.0,>=1.4.4)",
                "construct (<3.0.0,>=2.10.0)",
                "exifread (==2.3.2)",
                "piexif (==1.1.3)",
                "gpxpy (==1.4.2)",
                "pynmea2 (==1.12.0)",
                "requests (<3.0.0,>=2.20.0)",
                "tqdm (<5.0,>=4.0)",
                "typing-extensions",
                "jsonschema",
                "dataclasses ; python_version <= \"3.6\""
            ],
            "requires_python": ">=3.6",
            "summary": "Mapillary Image/Video Import Pipeline",
            "version": "0.9.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a62e069910427163351e13e359287252",
                    "sha256": "d86b72b27758acdf0aa5c5bb384b4d9096e4172717e3c060ca3f9cbec1715711"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a62e069910427163351e13e359287252",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 91366,
                "upload_time": "2022-10-11T05:22:39",
                "upload_time_iso_8601": "2022-10-11T05:22:39.500454Z",
                "url": "https://files.pythonhosted.org/packages/fc/70/faa4c9b3e6d6f30730b3836b37e5b06187421ec85c748458f040fc5fe633/mapillary_tools-0.9.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c3afd57876bde48b3fd71e487014784c",
                    "sha256": "73d788c29ea5f4b486668ea84a47913459d93ecac3301f85475e134370bf639d"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.4.tar.gz",
                "has_sig": false,
                "md5_digest": "c3afd57876bde48b3fd71e487014784c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 75062,
                "upload_time": "2022-10-11T05:22:41",
                "upload_time_iso_8601": "2022-10-11T05:22:41.623896Z",
                "url": "https://files.pythonhosted.org/packages/fc/49/451a32155f632660f5c43be5e6d9d2525da351b3161149988c451970c7c6/mapillary_tools-0.9.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.5": {
        "info": {
            "author": "Mapillary",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "<p align=\"center\">\n  <a href=\"https://github.com/mapillary/mapillary_tools/\">\n    <img src=\"https://raw.githubusercontent.com/mapillary/mapillary_tools/main/docs/images/logo.png\">\n  </a>\n</p>\n\n<h2 align=\"center\">Process and upload Mapillary imagery</h2>\n\n<p align=\"center\">\n<a href=\"https://pypi.org/project/mapillary_tools/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/mapillary_tools\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/actions\"><img alt=\"Actions Status\" src=\"https://github.com/mapillary/mapillary_tools/actions/workflows/python-package.yml/badge.svg\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/blob/main/LICENSE\"><img alt=\"GitHub license\" src=\"https://img.shields.io/github/license/mapillary/mapillary_tools\"></a>\n<a href=\"https://github.com/mapillary/mapillary_tools/stargazers\"><img alt=\"GitHub stars\" src=\"https://img.shields.io/github/stars/mapillary/mapillary_tools\"></a>\n<a href=\"https://pepy.tech/project/mapillary_tools\"><img alt=\"Downloads\" src=\"https://pepy.tech/badge/mapillary_tools\"></a>\n</p>\n\n<!--ts-->\n\n- [Quickstart](#quickstart)\n- [Requirements](#requirements)\n- [Installation](#installation)\n- [Usage](#usage)\n  - [Image Process](#image-process)\n  - [Upload Images](#upload-images)\n  - [Upload Videos](#upload-videos)\n- [Advanced Usage](#advanced-usage)\n  - [Client-side Video Process](#client-side-video-process)\n  - [Authenticate](#authenticate)\n  - [Aliases](#aliases)\n  - [Image Description](#image-description)\n  - [Zip Images](#zip-images)\n  - [Upload API](#upload-api)\n- [Troubleshooting](#troubleshooting)\n- [Development](#development)\n\n<!--te-->\n\n## Quickstart\n\nDownload the latest `mapillary_tools` binaries for your platform\n[here](https://github.com/mapillary/mapillary_tools/releases) first.\nSee [more installation instructions](#installation) below.\n\nProcess and upload imagery:\n\n```shell\nmapillary_tools process_and_upload \"path/to/images/\"\n```\n\nUpload all videos that mapillary_tools [supports](#upload-videos):\n\n```shell\nmapillary_tools upload --file_types=gopro,camm,blackvue \"path/to/videos/\"\n```\n\n## Requirements\n\n### User Authentication\n\nTo upload images to Mapillary, an account is required and can be created [here](https://www.mapillary.com/signup). When\nusing the tools for the first time, user authentication is required. You will be prompted to enter your account\ncredentials.\n\n### Metadata\n\nTo upload images to Mapillary, image `GPS` and `capture time` are minimally required. More\ninformation [here](https://help.mapillary.com/hc/en-us/articles/115001717829-Geotagging-images).\n\n## Installation\n\n### Installing via Pip\n\nTo install or upgrade to the latest stable version:\n\n```shell\npython3 -m pip install --upgrade mapillary_tools\n```\n\nIf you can't wait for the latest features in development, install it from GitHub:\n\n```shell\npython3 -m pip install --upgrade git+https://github.com/mapillary/mapillary_tools\n```\n\nIf you see \"Permission Denied\" error, try to run the command above with `sudo`, or install it in your\nlocal [virtualenv](#development) (recommended).\n\n### Installing on Android Devices\n\nA command line program such as Termux is required. Installation can be done without root privileges. The following\ncommands will install Python 3, pip3, git, and all required libraries for mapillary_tools on Termux:\n\n```shell\npkg install python git build-essential libgeos openssl libjpeg-turbo\npython3 -m pip install --upgrade pip wheel\npython3 -m pip install --upgrade mapillary_tools\n```\n\nTermux must access the device's internal storage to process and upload images. To do this, use the following command:\n\n```shell\ntermux-setup-storage\n```\n\nFinally, on devices running Android 11, using a command line program, mapillary_tools will process images very slowly if\nthey are in shared internal storage during processing. It is advisable to first move images to the command line\nprogram\u2019s native directory before running mapillary_tools. For an example using Termux, if imagery is stored in the\nfolder `Internal storage/DCIM/mapillaryimages` the following command will move that folder from shared storage to\nTermux:\n\n```shell\nmv -v storage/dcim/mapillaryimages mapillaryimages\n```\n\n## Usage\n\n### Image Process\n\nThe `process` command geotags images in the given directory. It extracts the required and optional metadata from image\nEXIF (or the other supported geotag sources), and writes all the metadata (or process errors) in\nan [image description](#image-description) file, which will be read during [upload](#upload-images).\n\n#### Examples\n\nProcess all images in the directory `path/to/images/` (and its sub-directories):\n\n```shell\nmapillary_tools process \"path/to/images/\"\n```\n\nInterpolate images in the directory `path/to/images/` on the GPX track read from `path/to/gpx_file.gpx`. The images are\nrequired to contain capture time in order to sort the images and interpolate them.\n\n```shell\nmapillary_tools process \"path/to/images/\" \\\n    --geotag_source \"gpx\" \\\n    --geotag_source_path \"path/to/gpx_file.gpx\"\n```\n\nProcess all images in the directory, specifying an angle offset of 90\u00b0 for the camera direction and splitting images\ninto sequences of images apart by less than 100 meters according to image `GPS` and less than 120 seconds according to\nimage capture time.\n\n```shell\nmapillary_tools process \"path/to/images/\" \\\n    --offset_angle 90 \\\n    --cutoff_distance 100 \\\n    --cutoff_time 120\n```\n\n### Upload Images\n\nImages that have been successfully processed can be uploaded with the `upload` command.\n\n#### Examples\n\nUpload all processed images in the directory `path/to/images/` to user `mly_user` for organization `mly_organization_id`\n\n```shell\nmapillary_tools upload \"path/to/images/\" \\\n    --user_name \"mly_user\" \\\n    --organization_key \"mly_organization_id\"\n```\n\n### Upload Videos\n\nVideos of the following formats can be uploaded to Mapillary Server directly without local video procesisng:\n\n1. [CAMM](https://developers.google.com/streetview/publish/camm-spec)\n2. [BlackVue](https://blackvue.com/)\n3. [GoPro](https://gopro.com/)\n\nNew in version [v0.9.3](https://github.com/mapillary/mapillary_tools/releases/tag/v0.9.3).\n\n#### Examples\n\nUpload all recognizable videos in the directory `path/to/videos/` to user `mly_user` for organization `mly_organization_id`.\n\n```shell\nmapillary_tools upload \"path/to/videos/\" \\\n    --file_types=gopro,blackvue,camm \\\n    --user_name \"mly_user\" \\\n    --organization_key \"mly_organization_id\"\n```\n\n## Advanced Usage\n\n### Client-side Video Process\n\nClient-side video processing allows users to process and upload other videos that can't be uploaded directly,\nand configure sample intervals, or the other processing parameters.\n\n#### Install FFmpeg\n\nTo [process videos locally](#video-process), you will need to install `ffmpeg` and `ffprobe`.\n\nYou can download `ffmpeg` and `ffprobe` from [here](https://ffmpeg.org/download.html).\nMake sure they are executable and placed in your `$PATH`.\n\nYou can also install it with your favourite package manager. For example:\n\nFor macOS:\n\n```shell\nbrew install ffmpeg\n```\n\nFor Debian/Ubuntu:\n\n```shell\napt install ffmpeg\n```\n\n#### Video Process\n\nClient-side video process involves two commands:\n\n1. `sample_video`: sample videos into images, and insert capture times to the image EXIF. Capture time is calculated\n   based on the video start time and sampling interval. This is where `ffmpeg` is being used.\n2. `process`: process (geotag) the sample images with the specified source\n\nThe two commands are usually combined into a single command `video_process`.\n\n#### Examples\n\nSample the videos located in `path/to/videos/` at the default sampling rate 2 seconds, i.e. one video frame every two\nseconds. Video frames will be sampled into a sub-directory `path/to/videos/mapillary_sampled_video_frames`.\n\n```shell\nmapillary_tools sample_video \"path/to/videos/\"\n```\n\nSample the videos located in `path/to/videos/` to directory `path/to/sample_images/` at a sampling rate 0.5 seconds,\ni.e. two video frames every second.\n\n```shell\nmapillary_tools sample_video \"path/to/videos/\" \"path/to/sample_images/\" \\\n    --video_sample_interval 0.5\n```\n\nSample the videos located in `path/to/videos/` to the directory `path/to/sample_images/` at the default sampling rate 1\nsecond, i.e. one video frame every second, geotagging data from a gpx track stored in `path/to/gpx_file.gpx` video,\nassuming video start time can be extracted from the video file and deriving camera direction based on `GPS`.\n\n```shell\nmapillary_tools video_process \"path/to/videos/\" \"path/to/sample_images/\" \\\n    --geotag_source \"gpx\" \\\n    --geotag_source_path \"path/to/gpx_file.gpx\" \\\n    --video_sample_interval 1 \\\n    --interpolate_directions\n```\n\n**GoPro videos**: Sample GoPro videos in directory `path/to/videos/` into import path `path/to/sample_images/` at a\nsampling rate 0.5 seconds, i.e. two frames every second, and process resulting video frames in `path/to/videos/sample_images/`.\n\n```shell\nmapillary_tools video_process \"path/to/videos/\" \"path/to/sample_images/\" \\\n    --geotag_source \"gopro_videos\" \\\n    --interpolate_directions \\\n    --video_sample_interval 0.5\n```\n\n**BlackVue videos**: Sample BlackVue videos in directory `path/to/videos/` at a sampling rate 0.5 seconds, i.e. 2 frames\nevery second, and process resulting video frames in `path/to/videos/mapillary_sampled_video_frames`.\n\n```shell\nmapillary_tools video_process \"path/to/videos/\" \\\n    --geotag_source \"blackvue_videos\" \\\n    --video_sample_interval 0.5\n```\n\n**CAMM videos**: Sample [CAMM](https://developers.google.com/streetview/publish/camm-spec) videos in directory `path/to/videos/` at a sampling rate 2 seconds, i.e. 1 frame\nevery 2 seconds, and process resulting video frames in `path/to/videos/mapillary_sampled_video_frames`.\n\n```shell\nmapillary_tools video_process \"path/to/videos/\" --geotag_source \"camm\"\n```\n\n### Authenticate\n\nThe command `authenticate` will update the user credentials stored in the config file.\n\n#### Examples\n\nAuthenticate new user:\n\n```shell\nmapillary_tools authenticate\n```\n\nAuthenticate for user `mly_user`. If the user is already authenticated, it will update the credentials in the config:\n\n```shell\nmapillary_tools authenticate --user_name \"mly_user\"\n```\n\n### Aliases\n\n#### `process_and_upload`\n\n`process_and_upload` command will run `process` and `upload` commands consecutively with combined required and optional\narguments. It is equivalent to:\n\n```shell\nmapillary_tools process \"path/to/images/\"\nmapillary_tools upload  \"path/to/images/\"\n```\n\n#### `video_process`\n\n`video_process` command will run `sample_video` and `process` commands consecutively with combined required and optional\narguments. It is equivalent to:\n\n```shell\nmapillary_tools sample_video \"path/to/videos/\" \"path/to/images/\"\nmapillary_tools upload \"path/to/images/\"\n```\n\n#### `video_process_and_upload`\n\n`video_process_and_upload` command will run `sample_video` and `process_and_upload` commands consecutively with combined\nrequired and optional arguments. It is equivalent to:\n\n```shell\nmapillary_tools sample_video \"path/to/videos/\" \"path/to/videos/mapillary_sampled_video_frames/\"\nmapillary_tools process_and_upload \"path/to/videos/mapillary_sampled_video_frames/\"\n```\n\n### Image Description\n\nAs the output, the `procss` command generates `mapillary_image_description.json` under the image directory by default.\nThe file contains an array of objects, each of which records the metadata of one image in the image directory. The\nmetadata is validated\nby [the image description schema](https://github.com/mapillary/mapillary_tools/tree/master/schema/image_description_schema.json).\nHere is a minimal example:\n\n```json\n[\n  {\n    \"MAPLatitude\": 58.5927694,\n    \"MAPLongitude\": 16.1840944,\n    \"MAPCaptureTime\": \"2021_02_13_13_24_41_140\",\n    \"filename\": \"IMG_0291.jpg\"\n  },\n  {\n    \"error\": {\n      \"type\": \"MapillaryGeoTaggingError\",\n      \"message\": \"Unable to extract GPS Longitude or GPS Latitude from the image\"\n    },\n    \"filename\": \"IMG_0292.jpg\"\n  }\n]\n```\n\nThe `upload` command then takes the image description file as the input, [zip images](#zip-images) with the specified\nmetadata, and then upload. The required `filename` property is used to associate images and metadata objects. Objects\nthat contain `error` property will be ignored.\n\n#### Examples\n\nWrite and read the image description file in another location. This is useful if the image directory is readonly.\n\n```shell\nmapillary_tools process \"path/to/images/\" --desc_path \"description.json\"\nmapillary_tools upload  \"path/to/images/\" --desc_path \"description.json\"\n# equivalent to\nmapillary_tools process_and_upload  \"path/to/images/\" --desc_path \"description.json\"\n```\n\nEdit the description file with your own scripts, e.g. filter out images outside a bounding box, or snap image locations\nto the nearest roads:\n\n```shell\nmapillary_tools process \"path/to/images/\" --desc_path - \\\n    | ./filter_by_bbox.py 5.9559,45.818,10.4921,47.8084 \\\n    | ./map_match.py > \"description.json\"\nmapillary_tools upload  \"path/to/images/\" --desc_path \"description.json\"\n```\n\nGeotag from a custom CSV format.\n\n```shell\n./custom_csv_to_description.sh special.csv | mapillary_tools upload \"path/to/images/\" --desc_path -\n```\n\nGeotag from a custom video format.\n\n```shell\n# sample with ffmpeg\nffmpeg -i \"path/to/video.mp4\" -vf fps=1/1 -qscale 1 -nostdin \"path/to/images/video_%06d.jpg\"\n# extract geotags from the videos (or other sources)\n./geotag_from_custom_video.sh \"path/to/video.mp4\" > \"description.json\"\n# upload\nmapillary_tools upload \"path/to/images/\" --desc_path \"description.json\"\n```\n\n### Zip Images\n\nWhen [uploading](#upload-images) an image directory, internally the `upload` command will zip sequences in the temporary\ndirectory (`TMPDIR`) and then upload these zip files.\n\nMapillary Tools provides `zip` command that allows users to specify where to store the zip files, usually somewhere with\nfaster IO or more free space.\n\n#### Examples:\n\nZip processed images in `path/to/images/` and write zip files in `path/to/zipped_images/`:\n\n```shell\nmapillary_tools zip \"path/to/images/\" \"path/to/zipped_images/\"\n```\n\nUpload all the zip files (\\*.zip) under the folder:\n\n```shell\nmapillary_tools upload_zip \"path/to/zipped_images/\"\n```\n\n### Upload API\n\n`mapillary_tools` provides a simple Upload API interface:\n\n```python\nclass Uploader:\n    def __init__(self, user_items: UserItem, emitter: EventEmitter = None, dry_run=False): ...\n\n    def upload_zipfile(self, zip_path: str) -> Optional[str]: ...\n\n    def upload_blackvue(self, blackvue_path: str) -> Optional[str]: ...\n\n    def upload_images(self, descs: List[ImageDescriptionFile]) -> Dict[str, str]: ...\n```\n\n#### Examples\n\n```python\nimport os\nfrom mapillary_tools import uploader\n\n# To obtain your user access token, check https://www.mapillary.com/developer/api-documentation/#authentication\nuser_item = {\n    \"user_upload_token\": \"YOUR_USER_ACCESS_TOKEN\",\n    \"MAPOrganizationKey\": 1234,\n}\nmly_uploader = uploader.Uploader(user_item)\n\ndescs = [\n    {\n        \"MAPLatitude\": 58.5927694,\n        \"MAPLongitude\": 16.1840944,\n        \"MAPCaptureTime\": \"2021_02_13_13_24_41_140\",\n        \"filename\": \"path/to/IMG_0291.jpg\",\n        \"MAPSequenceUUID\": \"sequence_1\",\n    },\n    {\n        \"MAPLatitude\": 58.5927694,\n        \"MAPLongitude\": 16.1840944,\n        \"MAPCaptureTime\": \"2021_02_13_13_24_41_140\",\n        \"filename\": \"path/to/IMG_0292.jpg\",\n        \"MAPSequenceUUID\": \"sequence_2\",\n    },\n]\n\n# Upload images as 2 sequences\nmly_uploader.upload_images(descs)\n\n# Zip images\nuploader.zip_images(descs, \"path/to/zip_dir\")\n\n# Upload zip files\nfor zip_path in os.listdir(\"path/to/zip_dir\"):\n    if zip_path.endswith(\".zip\"):\n        mly_uploader.upload_zipfile(zip_path)\n\n# Upload blackvue videos directly\nmly_uploader.upload_blackvue(\"path/to/blackvue.mp4\")\n```\n\nSee more examples in\nthe [unit tests](https://github.com/mapillary/mapillary_tools/blob/main/tests/unit/test_uploader.py) or the upload\ncommand [implementation](https://github.com/mapillary/mapillary_tools/blob/main/mapillary_tools/upload.py).\n\n## Troubleshooting\n\nIn case of any issues with the installation and usage of `mapillary_tools`, check this section in case it has already\nbeen addressed, otherwise, open an issue on GitHub.\n\n### General\n\n- In case of any issues, it is always safe to try and rerun the failing command while specifying `--verbose` to see more\n  information printed out. Uploaded images should not get uploaded more than once and should not be processed after\n  uploading. mapillary_tools should take care of that, if it occurs otherwise, please open an issue on GitHub.\n- Make sure you run the latest version of `mapillary_tools`, which you can check with `mapillary_tools --version`. When\n  installing the latest version, don't forget you need to specify `--upgrade`.\n- Advanced user are encouraged to explore the processed data and the image description file in\n  the `path/to/images/mapillary_image_description.json` to get more insight in the failure.\n\n### Run time issues\n\n- HTTP Errors can occur due to poor network connection or high load on the import pipeline. In most cases the images\n  eventually get uploaded regardless. But in some cases HTTP Errors can occur due to authentication issues, which can be\n  resolved by either removing the config file with the users credentials, located in `~/.config/mapillary/config` or\n  running `mapillary_tools authenticate`.\n\n- Missing required data is often the reason for failed uploads, especially if the processing included parsing external\n  data like a gps trace. Images are aligned with a gps trace based on the image capture time and gps time, where the\n  default assumption is that both are in UTC. Check the beginning and end date of your capture and the beginning and end\n  date of the gps trace to make sure that the image capture time is in the scope of the gps trace. To correct any offset\n  between the two capture times, you can specify `--offset_time \"offset time\"`.\n\n### Upload quality issues\n\n- Some devices do not store the camera direction properly, often storing only 0. Camera direction will get derived based\n  on latitude and longitude only if the camera direction is not set or `--interpolate_directions` is specified. Before\n  processing and uploading images, make sure that the camera direction is either correct or missing and in case it is\n  present but incorrect, you specify `--interpolate_directions`.\n\n## Development\n\nClone the repository:\n\n```shell\ngit clone git@github.com:mapillary/mapillary_tools.git\ncd mapillary_tools\n```\n\nSet up the virtual environment. It is optional but recommended:\n\n```shell\npython3 -m pip install pipenv\n```\n\nInstall dependencies:\n\n```shell\npipenv install -r requirements.txt\npipenv install -r requirements-dev.txt\n```\n\nRun the code from the repository:\n\n```shell\npipenv run python3 -m mapillary_tools.commands --version\n```\n\nRun tests:\n\n```shell\n# test all cases\npipenv run python3 -m pytest -s -vv tests\n# or test a single case specifically\npipenv run python3 -m pytest -s -vv tests/unit/test_camm_parser.py::test_build_and_parse\n```\n\nRun linting:\n\n```shell\n# format code\npipenv run black mapillary_tools tests\n# sort imports\npipenv run usort format mapillary_tools tests\n```\n\nRelease a new version:\n\n```shell\n# Assume you are releasing v0.9.1a2 (alpha2)\n\n# Tag your local branch\n# Use -f here to replace the existing one\ngit tag -f v0.9.1a2\n\n# Push the tagged commit first if it is not there yet\ngit push origin\n\n# Push ALL local tags (TODO: How to push a specific tag?)\n# Use -f here to replace the existing tags in the remote repo\ngit push origin --tags -f\n\n# The last step will trigger CI to publish a draft release with binaries built\n# in https://github.com/mapillary/mapillary_tools/releases\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mapillary/mapillary_tools",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mapillary-tools",
            "package_url": "https://pypi.org/project/mapillary-tools/",
            "platform": null,
            "project_url": "https://pypi.org/project/mapillary-tools/",
            "project_urls": {
                "Homepage": "https://github.com/mapillary/mapillary_tools"
            },
            "release_url": "https://pypi.org/project/mapillary-tools/0.9.5/",
            "requires_dist": [
                "appdirs (<2.0.0,>=1.4.4)",
                "construct (<3.0.0,>=2.10.0)",
                "exifread (==2.3.2)",
                "piexif (==1.1.3)",
                "gpxpy (==1.4.2)",
                "pynmea2 (==1.12.0)",
                "requests (<3.0.0,>=2.20.0)",
                "tqdm (<5.0,>=4.0)",
                "typing-extensions",
                "jsonschema",
                "dataclasses ; python_version <= \"3.6\""
            ],
            "requires_python": ">=3.6",
            "summary": "Mapillary Image/Video Import Pipeline",
            "version": "0.9.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15707028,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "076bb94a0eb562ad36b55810368548fc",
                    "sha256": "4a6974483e6fdafeddb6bec197c3e60cb8d09274f152de83eb73e8445979cc7b"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "076bb94a0eb562ad36b55810368548fc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 95178,
                "upload_time": "2022-11-09T03:29:50",
                "upload_time_iso_8601": "2022-11-09T03:29:50.377693Z",
                "url": "https://files.pythonhosted.org/packages/60/ea/1e91e0cb2990370bea3278413c23494fe8f87a955b494b45ef73189edd12/mapillary_tools-0.9.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "240b3d5e9aaf275e8604720a781f4df2",
                    "sha256": "b71e1404f60c692c3a2fbfcc404d3010533363a42a7b1195762f7e37c5323989"
                },
                "downloads": -1,
                "filename": "mapillary_tools-0.9.5.tar.gz",
                "has_sig": false,
                "md5_digest": "240b3d5e9aaf275e8604720a781f4df2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 77794,
                "upload_time": "2022-11-09T03:29:52",
                "upload_time_iso_8601": "2022-11-09T03:29:52.761560Z",
                "url": "https://files.pythonhosted.org/packages/30/a4/54bc60e884aef3991fab6e751163320713cad33cbf99cd57c46836c39655/mapillary_tools-0.9.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}