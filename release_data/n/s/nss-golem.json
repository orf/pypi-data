{
    "0.1.0": {
        "info": {
            "author": "NSS Lab",
            "author_email": "itmo.nss.team@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: BSD License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aimclub/GOLEM",
            "keywords": "",
            "license": "BSD 3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nss-golem",
            "package_url": "https://pypi.org/project/nss-golem/",
            "platform": null,
            "project_url": "https://pypi.org/project/nss-golem/",
            "project_urls": {
                "Homepage": "https://github.com/aimclub/GOLEM"
            },
            "release_url": "https://pypi.org/project/nss-golem/0.1.0/",
            "requires_dist": [
                "numpy (!=1.24.0,>=1.16.*)",
                "networkx (!=2.7.*,!=2.8.1,!=2.8.2,!=2.8.3,>=2.4)",
                "scipy",
                "pyvis (==0.2.1)",
                "seaborn (>=0.9.*)",
                "func-timeout (==4.3.5)",
                "joblib (>=0.17.*)",
                "requests (>=2.*)",
                "tqdm",
                "typing (>=3.7.*)",
                "psutil (>=5.9.2)",
                "pytest (>=6.2.*)",
                "testfixtures (>=6.18.*)",
                "pandas (<1.3.0,>=1.1.0) ; python_version == \"3.7\"",
                "matplotlib (==3.0.2) ; python_version == \"3.7\"",
                "pandas (>=1.3.0) ; python_version >= \"3.8\"",
                "matplotlib (>=3.3.1) ; python_version >= \"3.8\"",
                "sphinx (==4.2.0) ; extra == 'docs'",
                "sphinx-rtd-theme (==1.0.0) ; extra == 'docs'",
                "readthedocs-sphinx-search (==0.1.1) ; extra == 'docs'",
                "sphinxcontrib-details-directive ; extra == 'docs'",
                "autodocsumm ; extra == 'docs'",
                "netcomp ; extra == 'examples'",
                "pyemd ; extra == 'examples'",
                "snakeviz (==2.1.0) ; extra == 'profilers'",
                "gprof2dot (==2021.2.21) ; extra == 'profilers'",
                "objgraph (==3.5.0) ; extra == 'profilers'",
                "memory-profiler (==0.58.0) ; extra == 'profilers'"
            ],
            "requires_python": ">=3.7",
            "summary": "Framework for Graph Optimization and Learning by Evolutionary Methods",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16164435,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "65fe58f78e2f38cd3935bf467b495c5d",
                    "sha256": "6fbd5b280af2962b5d0a0d65c0fd8fd43e6bfcc19f15c96e740cd0776600427a"
                },
                "downloads": -1,
                "filename": "nss_golem-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "65fe58f78e2f38cd3935bf467b495c5d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 135361,
                "upload_time": "2022-12-20T17:54:02",
                "upload_time_iso_8601": "2022-12-20T17:54:02.888783Z",
                "url": "https://files.pythonhosted.org/packages/27/04/3df3cd32b8d1f68f33baff5f723bc1139aeb3a912c9972ef78df643898d7/nss_golem-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d195d0bdeac78fa152d6633aa67543e0",
                    "sha256": "38ce1fdaa04edc89c38aa585ef37ca342da78b8a8b673949bcd512ab69c4d0fd"
                },
                "downloads": -1,
                "filename": "nss-golem-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d195d0bdeac78fa152d6633aa67543e0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 94629,
                "upload_time": "2022-12-20T17:54:04",
                "upload_time_iso_8601": "2022-12-20T17:54:04.256680Z",
                "url": "https://files.pythonhosted.org/packages/14/22/06f04344b1bf9d36079db9e9b47c72fb63e7c79c8b95816f788517245723/nss-golem-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "NSS Lab",
            "author_email": "itmo.nss.team@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: BSD License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": ".. image:: docs/source/img/golem_logo-02.png\n   :alt: Logo of GOLEM framework\n   :align: center\n   :width: 500\n\n.. class:: center\n\n    |python| |pypi| |build| |docs| |license| |tg|\n\n\nGraph Optimization and Learning by Evolutionary Methods\n-------------------------------------------------------\n\nGOLEM is an open-source AI framework for optimization and learning of structured graph-based models with meta-heuristic methods. It is centered around 2 ideas:\n\n1. Potential of meta-heuristic methods in complex problem spaces.\n\nFocus on meta-heuristics allows approaching kinds of problems where gradient-based learning methods (notably, neural networks) can't be easily applied, like optimization problems with multiple conflicting objectives or having combinatorial character.\n\n2. Importance of structured models in many problem domains.\n\nGraph-based learning enables solutions in the form of structured and hybrid probabilistic models, not to mention that a wide range of domain-specific problems have a natural formulation in the form of graphs.\n\nTogether this constitutes an approach to AI that potentially leads to structured, intuitive, interpretable methods and solutions for a wide range of tasks.\n\n\nCore Features\n=============\n\n- **Structured** models with joint optimization of graph structure and properties (node attributes).\n- **Metaheuristic** methods (notably, evolutionary) applicable for any task with well-defined objective.\n- **Multi-objective** optimization that can take into account both quality and complexity.\n- **Constrained** optimization with support for arbitrary domain-specific constraints.\n- **Extensible** to new domains.\n- **Interpretable** thanks to meta-heuristics, structured models, adn visualisation tools.\n- **Reproducible** thanks to rich optimization history and model serialization.\n\n\nApplications\n==================\n\nGOLEM is potentially applicable for any optimization problem structures\n\n- that can be represented as directed graphs;\n- with some clearly defined fitness function on them.\n\nGraph models can represent fixed structures (e.g. physical model such as truss structures) or functional models that define a data-flow or inference process (e.g. bayesian networks that can be fitted and queried).\n\nExamples of GOLEM applications:\n\n- Automatic Machine Learning (AutoML) with optimal ML pipelines search in `FEDOT framework <https://github.com/aimclub/FEDOT>`_\n- Bayesian network structure search in `BAMT framework <https://github.com//FEDOT>`_\n- Differential equation discovery for physical models in `EPDE framework <https://github.com/ITMO-NSS-team/EPDE>`_\n- Geometric design of physical objects in `GEFEST framework <https://github.com/aimclub/GEFEST>`_\n- `Neural architecture search <https://github.com/ITMO-NSS-team/nas-fedot>`_\n\nAs GOLEM is a general-purpose, it's easy to imagine fore potential applications, for example, finite state automata search for robotics control or molecular graph learning for drug discovery, and more.\n\n\nInstallation\n============\n\nGOLEM can be installed with ``pip``:\n\n.. code-block::\n\n  $ pip install golem\n\n\nProject Structure\n=================\n\nThe repository includes the following packages and directories:\n\n- Package `core` contains the main classes and scripts.\n- Package `core.adapter` is responsible for transformation between domain graphs and internal graph representation used by optimisers.\n- Package `core.dag` contains classes and algorithms for representation and processing of graphs.\n- Package `core.optimisers` contains graph optimisers and all related classes (like those representing fitness, individual, population, etc.), including optimization history.\n- Package `core.optimisers.genetic` contains genetic (also called evolutionary) graph optimiser and operators (mutation, selection, and so on).\n- Package `core.utilities` contains utilities and data structures used by other modules.\n- Package `serializers` contains class `Serializer` with required facilities, and is responsible for serialization of project classes (graphs, optimization history, and everything related).\n- Package `visualisation` contains classes that allow to visualise optimization history, graphs, and certain plots useful for analysis.\n- Package `examples` includes several use-cases where you can start to discover how the framework works.\n- All unit and integration tests are contained in the `test` directory.\n- The sources of the documentation are in the `docs` directory.\n\n\nCurrent R&D and future plans\n============================\n\nAny contribution is welcome. Our R&D team is open for cooperation with other scientific teams as well as with industrial partners.\n\nContribution Guide\n==================\n\n- The contribution guide is available in the `repository <https://github.com/nccr-itmo/FEDOT/blob/master/docs/source/contribution.rst>`__.\n\nAcknowledgments\n===============\n\nWe acknowledge the contributors for their important impact and the participants of the numerous scientific conferences and workshops for their valuable advice and suggestions.\n\nSupported by\n============\n\nThe project is maintained by the research team of the Natural Systems Simulation Lab. It is a part of the `National Center for Cognitive Research of ITMO University <https://actcognitive.org/>`_, that supports research and development of the project.\n\nContacts\n========\n- `Telegram channel for solving problems and answering questions on FEDOT <https://t.me/FEDOT_helpdesk>`_\n- `Natural System Simulation Team <https://itmo-nss-team.github.io/>`_\n- `Anna Kalyuzhnaya <https://scholar.google.com/citations?user=bjiILqcAAAAJ&hl=ru>`_, Team leader (anna.kalyuzhnaya@itmo.ru)\n- `Newsfeed <https://t.me/NSS_group>`_\n- `Youtube channel <https://www.youtube.com/channel/UC4K9QWaEUpT_p3R4FeDp5jA>`_\n\nCitation\n========\n\nIf you use our project in your work or research, we would appreciate citations.\n\n@article{nikitin2021automated,\n  title = {Automated evolutionary approach for the design of composite machine learning pipelines},\n  author = {Nikolay O. Nikitin and Pavel Vychuzhanin and Mikhail Sarafanov and Iana S. Polonskaia and Ilia Revin and Irina V. Barabanova and Gleb Maximov and Anna V. Kalyuzhnaya and Alexander Boukhanovsky},\n  journal = {Future Generation Computer Systems},\n  year = {2021},\n  issn = {0167-739X},\n  doi = {https://doi.org/10.1016/j.future.2021.08.022}}\n\n@inproceedings{polonskaia2021multi,\n  title={Multi-Objective Evolutionary Design of Composite Data-Driven Models},\n  author={Polonskaia, Iana S. and Nikitin, Nikolay O. and Revin, Ilia and Vychuzhanin, Pavel and Kalyuzhnaya, Anna V.},\n  booktitle={2021 IEEE Congress on Evolutionary Computation (CEC)},\n  year={2021},\n  pages={926-933},\n  doi={10.1109/CEC45853.2021.9504773}}\n\n\nOther papers - in `ResearchGate <https://www.researchgate.net/project/Evolutionary-multi-modal-AutoML-with-FEDOT-framework>`_.\n\n.. |docs| image:: https://readthedocs.org/projects/thegolem/badge/?version=latest\n    :target: https://thegolem.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. |build| image:: https://github.com/aimclub/GOLEM/actions/workflows/unit-build.yml/badge.svg?branch=main\n   :alt: Build Status\n   :target: https://github.com/aimclub/GOLEM/actions/workflows/unit-build.yml\n\n.. |coverage| image:: https://codecov.io/gh/aimclub/GOLEM/branch/main/graph/badge.svg\n   :alt: Coverage Status\n   :target: https://codecov.io/gh/aimclub/GOLEM\n\n.. |pypi| image:: https://img.shields.io/pypi/v/golem.svg\n   :alt: PyPI Package Version\n   :target: https://img.shields.io/pypi/v/golem\n\n.. |python| image:: https://img.shields.io/pypi/pyversions/fedot.svg\n   :alt: Supported Python Versions\n   :target: https://img.shields.io/pypi/pyversions/fedot\n\n.. |license| image:: https://img.shields.io/github/license/aimclub/GOLEM\n   :alt: Supported Python Versions\n   :target: https://github.com/aimclub/GOLEM/blob/main/LICENSE.md\n\n.. |downloads_stats| image:: https://static.pepy.tech/personalized-badge/golem?period=total&units=international_system&left_color=grey&right_color=brightgreen&left_text=Downloads\n   :target: https://pepy.tech/project/golem\n\n.. |tg| image:: https://img.shields.io/badge/Telegram-Group-blue.svg\n   :alt: Telegram Chat\n   :target: https://t.me/FEDOT_helpdesk\n\n.. |by-golem| image:: http://img.shields.io/badge/powered%20by-GOLEM-orange.svg?style=flat\n   :target: http://github.com/aimclub/GOLEM\n   :alt: Powered by GOLEM\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aimclub/GOLEM",
            "keywords": "",
            "license": "BSD 3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nss-golem",
            "package_url": "https://pypi.org/project/nss-golem/",
            "platform": null,
            "project_url": "https://pypi.org/project/nss-golem/",
            "project_urls": {
                "Homepage": "https://github.com/aimclub/GOLEM"
            },
            "release_url": "https://pypi.org/project/nss-golem/0.1.1/",
            "requires_dist": [
                "numpy (!=1.24.0,>=1.16.*)",
                "networkx (!=2.7.*,!=2.8.1,!=2.8.2,!=2.8.3,>=2.4)",
                "scipy",
                "pyvis (==0.2.1)",
                "seaborn (>=0.9.*)",
                "func-timeout (==4.3.5)",
                "joblib (>=0.17.*)",
                "requests (>=2.*)",
                "tqdm",
                "typing (>=3.7.*)",
                "psutil (>=5.9.2)",
                "pytest (>=6.2.*)",
                "testfixtures (>=6.18.*)",
                "pandas (<1.3.0,>=1.1.0) ; python_version == \"3.7\"",
                "matplotlib (==3.0.2) ; python_version == \"3.7\"",
                "pandas (>=1.3.0) ; python_version >= \"3.8\"",
                "matplotlib (>=3.3.1) ; python_version >= \"3.8\"",
                "sphinx (==4.2.0) ; extra == 'docs'",
                "sphinx-rtd-theme (==1.0.0) ; extra == 'docs'",
                "readthedocs-sphinx-search (==0.1.1) ; extra == 'docs'",
                "sphinxcontrib-details-directive ; extra == 'docs'",
                "autodocsumm ; extra == 'docs'",
                "snakeviz (==2.1.0) ; extra == 'profilers'",
                "gprof2dot (==2021.2.21) ; extra == 'profilers'",
                "objgraph (==3.5.0) ; extra == 'profilers'",
                "memory-profiler (==0.58.0) ; extra == 'profilers'"
            ],
            "requires_python": ">=3.7",
            "summary": "Framework for Graph Optimization and Learning by Evolutionary Methods",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16164435,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "694c69766f57f1c98b68ef17f99d31f6",
                    "sha256": "712e801148f9080448cc7b1abb762d7d2ef661b30b87d4b560d457fae3a7de9f"
                },
                "downloads": -1,
                "filename": "nss_golem-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "694c69766f57f1c98b68ef17f99d31f6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 135335,
                "upload_time": "2022-12-20T18:07:38",
                "upload_time_iso_8601": "2022-12-20T18:07:38.511373Z",
                "url": "https://files.pythonhosted.org/packages/c6/55/66456b6b795bd346264b5086f9775881b0a972043e06fbc107f37f37625b/nss_golem-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "32b2fe1f324805fa826494e1e1d7face",
                    "sha256": "c3e9ad557ac855351963a8c02dec44bb75ed8ccb062e52186dabbacf6a380e4e"
                },
                "downloads": -1,
                "filename": "nss-golem-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "32b2fe1f324805fa826494e1e1d7face",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 94615,
                "upload_time": "2022-12-20T18:07:39",
                "upload_time_iso_8601": "2022-12-20T18:07:39.941562Z",
                "url": "https://files.pythonhosted.org/packages/b6/12/05d61c19fcb58a7d42470a56181e05d1d0531b2ed0719fe1a7d75de3fc58/nss-golem-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}