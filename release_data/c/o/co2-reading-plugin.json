{
    "0.0.3": {
        "info": {
            "author": "Kelly Tran, Cameron Davidson-Pilon",
            "author_email": "cam@pioreactor.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Pioreactor/co2_reading_plugin",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "co2-reading-plugin",
            "package_url": "https://pypi.org/project/co2-reading-plugin/",
            "platform": null,
            "project_url": "https://pypi.org/project/co2-reading-plugin/",
            "project_urls": {
                "Homepage": "https://github.com/Pioreactor/co2_reading_plugin"
            },
            "release_url": "https://pypi.org/project/co2-reading-plugin/0.0.3/",
            "requires_dist": [
                "adafruit-circuitpython-scd30",
                "adafruit-circuitpython-scd4x"
            ],
            "requires_python": "",
            "summary": "Return a CO2 reading (or all readings) every set minutes from Adafruit CO2 sensors SCD30, SCD40 or SCD41.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15381096,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e7b859d8a791ebaec843323d57209799",
                    "sha256": "0232bbf0f2c12f75cff1848ffd884de28a4c5ce0eaf44ee9d234d23a991c0007"
                },
                "downloads": -1,
                "filename": "co2_reading_plugin-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e7b859d8a791ebaec843323d57209799",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5562,
                "upload_time": "2022-10-11T18:19:33",
                "upload_time_iso_8601": "2022-10-11T18:19:33.889987Z",
                "url": "https://files.pythonhosted.org/packages/ea/d1/ffc2d98b7122325736eeb0d47a15f92ad193aec72286e5ae558e93e32cae/co2_reading_plugin-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Kelly Tran, Cameron Davidson-Pilon",
            "author_email": "cam@pioreactor.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Pioreactor/co2_reading_plugin",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "co2-reading-plugin",
            "package_url": "https://pypi.org/project/co2-reading-plugin/",
            "platform": null,
            "project_url": "https://pypi.org/project/co2-reading-plugin/",
            "project_urls": {
                "Homepage": "https://github.com/Pioreactor/co2_reading_plugin"
            },
            "release_url": "https://pypi.org/project/co2-reading-plugin/0.0.4/",
            "requires_dist": [
                "adafruit-circuitpython-scd30",
                "adafruit-circuitpython-scd4x"
            ],
            "requires_python": "",
            "summary": "Return a CO2 reading every interval from an Adafruit CO2 sensors SCD30, SCD40 or SCD41.",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15381096,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "08a0d9e89037a7ad59d1f07545ebfbeb",
                    "sha256": "33b89fe77aa41ef28487ca187dfc59a100b4855aac874a91f8ded54fc0a56992"
                },
                "downloads": -1,
                "filename": "co2_reading_plugin-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "08a0d9e89037a7ad59d1f07545ebfbeb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5228,
                "upload_time": "2022-10-11T18:40:42",
                "upload_time_iso_8601": "2022-10-11T18:40:42.647406Z",
                "url": "https://files.pythonhosted.org/packages/b1/91/1272308a7b986d41bd55ecb3429ce3f4251e8abffa074a543e0889c11f90/co2_reading_plugin-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Kelly Tran, Cameron Davidson-Pilon",
            "author_email": "cam@pioreactor.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "## Pioreactor CO2 reading plugin\n\nAdafruit offers three CO2 sensors ([SCD30](https://www.adafruit.com/product/4867), [SCD40 and SCD41](https://learn.adafruit.com/adafruit-scd-40-and-scd-41)) that measure CO2, temperature, and humidity.\n\nThis is a simple Pioreactor plugin that returns CO2 readings (or all readings) at a set duration from stemma QT connected Adafruit SCD sensors.\n\nInstall with `pio install-plugin co2-reading-plugin` from the command line, or in the Pioreactor UI.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Pioreactor/co2_reading_plugin",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "co2-reading-plugin",
            "package_url": "https://pypi.org/project/co2-reading-plugin/",
            "platform": null,
            "project_url": "https://pypi.org/project/co2-reading-plugin/",
            "project_urls": {
                "Homepage": "https://github.com/Pioreactor/co2_reading_plugin"
            },
            "release_url": "https://pypi.org/project/co2-reading-plugin/0.0.5/",
            "requires_dist": [
                "adafruit-circuitpython-scd30",
                "adafruit-circuitpython-scd4x"
            ],
            "requires_python": "",
            "summary": "Return a CO2 reading every interval from an Adafruit CO2 sensors SCD30, SCD40 or SCD41.",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15381096,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5bed4338f1981e45c4af49dce0425d81",
                    "sha256": "2976cc0a1c5a76c40f38da7cc7af95f797c5101117be2a0d99ecb00520802027"
                },
                "downloads": -1,
                "filename": "co2_reading_plugin-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5bed4338f1981e45c4af49dce0425d81",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5344,
                "upload_time": "2022-10-12T01:22:15",
                "upload_time_iso_8601": "2022-10-12T01:22:15.099569Z",
                "url": "https://files.pythonhosted.org/packages/be/db/dd8c7f941cb00eb2adc624bae77cd86a59966d1ffcb3e45ba5e804d09fd1/co2_reading_plugin-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}