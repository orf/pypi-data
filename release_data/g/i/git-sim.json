{
    "0.0.1": {
        "info": {
            "author": "Jacob Stopak",
            "author_email": "jacob@initialcommit.io",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://initialcommit.com/tools/git-sim",
            "keywords": "git sim simulation simulate git-simulate git-simulation git-sim manim animation gitanimation image video dryrun dry-run",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "git-sim",
            "package_url": "https://pypi.org/project/git-sim/",
            "platform": null,
            "project_url": "https://pypi.org/project/git-sim/",
            "project_urls": {
                "Homepage": "https://initialcommit.com/tools/git-sim"
            },
            "release_url": "https://pypi.org/project/git-sim/0.0.1/",
            "requires_dist": [
                "gitpython",
                "manim",
                "opencv-python"
            ],
            "requires_python": ">=3.7",
            "summary": "Simulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9874d2ebe68607b14396a17850c7224b",
                    "sha256": "1f449d9abfd22777e2edc6a25d0eab9e756c44d482a9ee2c2a68bf5a2b2735ff"
                },
                "downloads": -1,
                "filename": "git_sim-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9874d2ebe68607b14396a17850c7224b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 78626,
                "upload_time": "2022-11-12T07:24:37",
                "upload_time_iso_8601": "2022-11-12T07:24:37.812854Z",
                "url": "https://files.pythonhosted.org/packages/ce/7e/4e9423e729c29708bffbba7c8eb9e7e1339ffaeea564695ef606e39241c1/git_sim-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bf8198d22bed38465dfce8c737ca0906",
                    "sha256": "11e592d490cfb15f9c43744de740b674c43ffd6c811acad28656331353e345f0"
                },
                "downloads": -1,
                "filename": "git-sim-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bf8198d22bed38465dfce8c737ca0906",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 79413,
                "upload_time": "2022-11-12T07:24:40",
                "upload_time_iso_8601": "2022-11-12T07:24:40.529614Z",
                "url": "https://files.pythonhosted.org/packages/42/d8/e6817751960da2af8daa37e238ea9b7a29bcb206e3e4b6e16645bc618277/git-sim-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Jacob Stopak",
            "author_email": "jacob@initialcommit.io",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://initialcommit.com/tools/git-sim",
            "keywords": "git sim simulation simulate git-simulate git-simulation git-sim manim animation gitanimation image video dryrun dry-run",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "git-sim",
            "package_url": "https://pypi.org/project/git-sim/",
            "platform": null,
            "project_url": "https://pypi.org/project/git-sim/",
            "project_urls": {
                "Homepage": "https://initialcommit.com/tools/git-sim"
            },
            "release_url": "https://pypi.org/project/git-sim/0.0.2/",
            "requires_dist": [
                "gitpython",
                "manim",
                "opencv-python"
            ],
            "requires_python": ">=3.7",
            "summary": "Simulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7bdc77df6a5c54b4b15236b1ff3e266",
                    "sha256": "4d814527300701a876b1fb9fc86ac7fb6d7eb081989e805e68fe4a7aec5b07d1"
                },
                "downloads": -1,
                "filename": "git_sim-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d7bdc77df6a5c54b4b15236b1ff3e266",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 78632,
                "upload_time": "2022-11-12T07:32:12",
                "upload_time_iso_8601": "2022-11-12T07:32:12.417565Z",
                "url": "https://files.pythonhosted.org/packages/59/7c/6f9b78b5758fd3e192b5f2698fe151423e41dd0d801092824933bbcc6162/git_sim-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "aedca66826282e93da9926598b309cdd",
                    "sha256": "4a4c2129f7d9c2f6339b6978c1115008100c4bf7dcfa11f654816de1cb54c0bd"
                },
                "downloads": -1,
                "filename": "git-sim-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "aedca66826282e93da9926598b309cdd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 79413,
                "upload_time": "2022-11-12T07:32:15",
                "upload_time_iso_8601": "2022-11-12T07:32:15.631703Z",
                "url": "https://files.pythonhosted.org/packages/9e/cd/cb4b28bacd5d6d076fc853b048ccff578a08d384da70dc651d4bc5c0fab7/git-sim-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Jacob Stopak",
            "author_email": "jacob@initialcommit.io",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://initialcommit.com/tools/git-sim",
            "keywords": "git sim simulation simulate git-simulate git-simulation git-sim manim animation gitanimation image video dryrun dry-run",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "git-sim",
            "package_url": "https://pypi.org/project/git-sim/",
            "platform": null,
            "project_url": "https://pypi.org/project/git-sim/",
            "project_urls": {
                "Homepage": "https://initialcommit.com/tools/git-sim"
            },
            "release_url": "https://pypi.org/project/git-sim/0.0.3/",
            "requires_dist": [
                "gitpython",
                "manim",
                "opencv-python"
            ],
            "requires_python": ">=3.7",
            "summary": "Simulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "92691dac734982428a191e5c7271ec12",
                    "sha256": "8d55d5154d905c888796bbd687401eb53a2eea69bd786233348ed1532a9c708b"
                },
                "downloads": -1,
                "filename": "git_sim-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "92691dac734982428a191e5c7271ec12",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 78649,
                "upload_time": "2022-11-12T07:37:19",
                "upload_time_iso_8601": "2022-11-12T07:37:19.130554Z",
                "url": "https://files.pythonhosted.org/packages/6d/a9/2cb9fb9ab350ee8fd24c035f296f2b8a88f4a201a211257a7fcc40988037/git_sim-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cbc26f316d1e535d27bba4dc35a26e57",
                    "sha256": "23bbf7f9aaeac3357e61d71c60200a325b24b7bc1b06fc505984bc7420891567"
                },
                "downloads": -1,
                "filename": "git-sim-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "cbc26f316d1e535d27bba4dc35a26e57",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 79397,
                "upload_time": "2022-11-12T07:37:23",
                "upload_time_iso_8601": "2022-11-12T07:37:23.571822Z",
                "url": "https://files.pythonhosted.org/packages/32/1b/ed988d2ab88a72fb9ede3c13f35922c459c04c1a2b7cbae27b9aa38315b5/git-sim-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Jacob Stopak",
            "author_email": "jacob@initialcommit.io",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://initialcommit.com/tools/git-sim",
            "keywords": "git sim simulation simulate git-simulate git-simulation git-sim manim animation gitanimation image video dryrun dry-run",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "git-sim",
            "package_url": "https://pypi.org/project/git-sim/",
            "platform": null,
            "project_url": "https://pypi.org/project/git-sim/",
            "project_urls": {
                "Homepage": "https://initialcommit.com/tools/git-sim"
            },
            "release_url": "https://pypi.org/project/git-sim/0.0.4/",
            "requires_dist": [
                "gitpython",
                "manim",
                "opencv-python"
            ],
            "requires_python": ">=3.7",
            "summary": "Simulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior.",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "faa4179847fe11593d9b3e3abccf3748",
                    "sha256": "b72d4dd1c080fece37b795c866b8de8d2c32ea74de1ce366691b92ac1c07c313"
                },
                "downloads": -1,
                "filename": "git_sim-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "faa4179847fe11593d9b3e3abccf3748",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 87567,
                "upload_time": "2022-11-30T21:08:34",
                "upload_time_iso_8601": "2022-11-30T21:08:34.671264Z",
                "url": "https://files.pythonhosted.org/packages/8c/68/ca695ae15b7fff3563634e16f9737011129aa43ce29158648ab33ed95060/git_sim-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "497ab8fc6c58a4e6e6b8af60cb87b7b3",
                    "sha256": "d3f96a5eba48803c9fb81810fc322bcdff27e69f03b5ee44a75c29b902711817"
                },
                "downloads": -1,
                "filename": "git-sim-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "497ab8fc6c58a4e6e6b8af60cb87b7b3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 84898,
                "upload_time": "2022-11-30T21:08:37",
                "upload_time_iso_8601": "2022-11-30T21:08:37.121866Z",
                "url": "https://files.pythonhosted.org/packages/8e/43/04db329ddcf7c92947eb3c1dd8a335a1363fc5be5d46c6d73dc6aaf5a9ee/git-sim-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Jacob Stopak",
            "author_email": "jacob@initialcommit.io",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# git-sim\nSimulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior. Command syntax is based directly on Git's command-line syntax, so using git-sim is as familiar as possible.\n\n## Use cases\n- Visualize Git commands to understand their effects on your repo before actually running them\n- Prevent unexpected working directory and repository states by simulating before running\n- Share visualizations (jpg image or mp4 video) of your Git commands with your team, or the world\n- Save visualizations as a part of your team documentation to document workflow and prevent recurring issues\n- Create static Git diagrams (jpg) or dynamic animated videos (mp4) to speed up content creation\n- Help visual learners understand how Git commands work\n\n## Features\n- Run a one-liner git-sim command in the terminal to generate a custom Git command visualization (.jpg) from your repo\n- Supported commands: `log`, `status`, `add`, `restore`, `commit`, `stash`, `branch`, `tag`, `reset`, `revert`, `merge`, `rebase`, `cherry-pick`\n- Generate an animated video (.mp4) instead of a static image using the `--animate` flag (note: significant performance slowdown, it is recommended to use `--low-quality` to speed up testing and remove when ready to generate presentation-quality video)\n- Choose between dark mode (default) and light mode\n- Animation only: Add custom branded intro/outro sequences if desired\n- Animation only: Speed up or slow down animation speed as desired\n\n## Commands\nBasic usage is similar to Git itself - `git-sim` takes a familiar set of subcommands including \"log\", \"status\", \"add\", \"restore\", \"commit\", \"stash\", \"branch\", \"tag\", \"reset\", \"revert\", \"merge\", \"rebase\", \"cherry-pick\", along with corresponding options.\n\n```console\n$ git-sim [global options] <subcommand> [subcommand options]\n```\n\nThe `[global options]` apply to the overarching `git-sim` simulation itself, including:\n\n`--light-mode`: Use a light mode color scheme instead of default dark mode.  \n`--animate`: Instead of outputting a static image, animate the Git command behavior in a .mp4 video.\n\nAnimation-only global options (to be used in conjunction with `--animate`:\n\n`--speed=n`: Set the multiple of animation speed of the output simulation, `n` can be an integer or float, default is 1.  \n`--low-quality`: Render the animation in low quality to speed up creation time, recommended for non-presentation use.  \n`--show-intro`: Add an intro sequence with custom logo and title.  \n`--show-outro`: Add an outro sequence with custom logo and text.  \n`--title=title`: Custom title to display at the beginning of the animation.  \n`--logo=logo.png`: The path to a custom logo to use in the animation intro/outro.  \n`--outro-top-text`: Custom text to display above the logo during the outro.  \n`--outro-bottom-text`: Custom text to display below the logo during the outro.\n\nThe `[subcommand options]` are like regular Git options specific to the specified subcommand (see below for a full list).\n\nThe following is a list of Git commands that can be simulated and their corresponding options/flags.\n\n### git log\nUsage: `git-sim log`\n\n- Simulated output will show the most recent 5 commits on the active branch by default\n\n![git-sim-log_11-30-22_11-40-56](https://user-images.githubusercontent.com/49353917/204893190-8be7e544-1abf-4514-98c9-391a6ef732d3.jpg)\n\n### git status\nUsage: `git-sim status`\n\n- Simulated output will show the state of the working directory, staging area, and untracked files\n- Note that simulated output will also show the most recent 5 commits on the active branch\n\n![git-sim-status_11-11-22_22-57-49](https://user-images.githubusercontent.com/49353917/201461977-189d58fd-f796-4069-b94e-dfb5a395758a.jpg)\n\n### git add\nUsage: `git-sim add <file 1> <file 2> ... <file n>`\n\n- Specify one or more `<file>` as a *modified* working directory file, or an untracked file\n- Simulated output will show files being moved to the staging area\n- Note that simulated output will also show the most recent 5 commits on the active branch\n\n![git-sim-add_11-11-22_22-59-54](https://user-images.githubusercontent.com/49353917/201461985-2ebf7bfe-929a-4025-9049-8f2a933a237a.jpg)\n\n### git restore\nUsage: `git-sim restore <file 1> <file 2> ... <file n>`\n\n- Specify one or more `<file>` as a *modified* working directory file, or staged file\n- Simulated output will show files being moved back to the working directory or discarded changes\n- Note that simulated output will also show the most recent 5 commits on the active branch\n\n![git-sim-restore_11-21-22_20-43-45](https://user-images.githubusercontent.com/49353917/203223705-e1872376-df9f-4f11-b06e-746766b2a4ca.jpg)\n\n### git commit\nUsage: `git-sim commit -m \"Commit message\"`\n\n- Simulated output will show the new commit added to the tip of the active branch\n- Specify your commit message after the -m option\n- HEAD and the active branch will be moved to the new commit\n- Simulated output will show files in the staging area being included in the new commit\n\n![git-sim-commit_11-21-22_20-45-11](https://user-images.githubusercontent.com/49353917/203223869-d7f37189-7a6a-4e5d-93f3-46c7f3509690.jpg)\n\n### git stash\nUsage: `git-sim stash <file>`\n\n- Specify one or more `<file>` as a *modified* working directory file, or staged file\n- If no `<file>` is specified, all available working directory and staged files will be included\n- Simulated output will show files being moved to the Git stash\n- Note that simulated output will also show the most recent 5 commits on the active branch\n\n![git-sim-stash_11-21-22_20-46-21](https://user-images.githubusercontent.com/49353917/203224031-21c4a8c0-38d4-430d-b0a2-da4b320d05ab.jpg)\n\n### git branch\nUsage: `git-sim branch <new branch name>`\n\n- Specify `<new branch name>` as the name of the new branch to simulate creation of\n- Simulated output will show the newly create branch ref along with most recent 5 commits on the active branch\n\n![git-sim-branch_11-11-22_23-00-36](https://user-images.githubusercontent.com/49353917/201461993-5f5ae510-1b04-4cb3-9002-72e969c4d73a.jpg)\n\n### git tag\nUsage: `git-sim tag <new tag name>`\n\n- Specify `<new tag name>` as the name of the new tag to simulate creation of\n- Simulated output will show the newly create tag ref along with most recent 5 commits on the active branch\n\n![git-sim-tag_11-11-22_23-00-57](https://user-images.githubusercontent.com/49353917/201461998-86f58c5a-8fb5-4882-bb87-7e42e67d5c37.jpg)\n\n### git reset\nUsage: `git-sim reset <reset-to> [--mixed|--soft|--hard]`\n\n- Specify `<reset-to>` as any commit id, branch name, tag, or other ref to simulate reset to from the current HEAD (default: `HEAD`)\n- As with a normal git reset command, default reset mode is `--mixed`, but can be specified using `--soft`, `--hard`, or `--mixed`\n- Simulated output will show branch/HEAD resets and resulting state of the working directory, staging area, and whether any file changes would be deleted by running the actual command\n\n![git-sim-reset_11-11-22_23-02-42](https://user-images.githubusercontent.com/49353917/201462003-bf59e272-16fa-4c3d-b9f3-0fc91d2caa48.jpg)\n\n### git revert\nUsage: `git-sim revert <to-revert>`\n\n- Specify `<to-revert>` as any commit id, branch name, tag, or other ref to simulate revert for\n- Simulated output will show the new commit which reverts the changes from `<to-revert>`\n- Simulated output will include the next 4 most recent commits on the active branch\n\n![git-sim-revert_11-30-22_11-46-09](https://user-images.githubusercontent.com/49353917/204893827-c0fef360-9c39-4686-81f2-f85f51a85597.jpg)\n\n### git merge\nUsage: `git-sim merge <branch>`\n\n- Specify `<branch>` as the branch name to merge into the active branch\n- Simulated output will depict a fast-forward merge if possible\n- Otherwise, a three-way merge will be depicted\n- To force a merge commit when a fast-forward is possible, use `--no-ff`\n\n![git-sim-merge_11-30-22_11-50-32](https://user-images.githubusercontent.com/49353917/204894714-89d77aa7-98c9-4172-b11c-58f38672f1a7.jpg)\n\n### git rebase\nUsage: `git-sim rebase <new-base>`\n\n- Specify `<new-base>` as the branch name to rebase the active branch onto\n\n![git-sim-rebase_11-30-22_11-52-26](https://user-images.githubusercontent.com/49353917/204895157-8f020afe-df63-494d-bd16-d00801f438bc.jpg)\n\n### git cherry-pick\nUsage: `git-sim cherry-pick <commit>`\n\n- Specify `<commit>` as a ref (branch name/tag) or commit ID to cherry-pick onto the active branch\n\n![git-sim-cherry-pick_11-21-22_21-13-23](https://user-images.githubusercontent.com/49353917/203227369-fce5edc3-00b5-4d57-95b8-318442c3984e.jpg)\n\n## Video animation examples\n```console\n$ git-sim --animate reset HEAD^\n```\n\nhttps://user-images.githubusercontent.com/49353917/201462192-a3bc3a2e-f2c9-4166-81ce-743e53255fc2.mp4\n\n```console\n$ git checkout feature9\n$ git-sim --animate merge feature6\n```\n\nhttps://user-images.githubusercontent.com/49353917/204897010-3aa2a0e6-c8ba-4acd-acd1-2683274afb63.mp4\n\n```console\n$ git checkout feature1\n$ git-sim --animate rebase main\n```\n\nhttps://user-images.githubusercontent.com/49353917/204896434-48dbc15b-9718-47c7-b790-6caad5f8a367.mp4\n\n```console\n$ git checkout feature6\n$ git-sim --animate cherry-pick feature9\n```\n\nhttps://user-images.githubusercontent.com/49353917/204899112-2c99019e-1253-4aef-a0b7-dc774d0adbe8.mp4\n\n## Requirements\n* Python 3.7 or greater\n* Pip (Package manager for Python)\n* [Manim (Community version)](https://www.manim.community/)\n* GitPython\n* OpenCV\n\n## Quickstart\n1) Install [manim and manim dependencies for your OS](https://www.manim.community/)\n\n2) Install `git-sim`:\n\n```console\n$ pip3 install git-sim\n```\n\n3) Browse to the Git repository you want create an animation from:\n\n```console\n$ cd path/to/git/repo\n```\n\n4) Run the program:\n\n```console\n$ git-sim [global options] <subcommand> [subcommand options]\n```\n\n5) Simulated output will be created as a `.jpg` file. Output files are named using the subcommand executed combined with a timestamp, and by default are stored in a subdirectory called `git-sim_media/`. The location of this subdirectory is customizable using the command line flag `--media-dir=path/to/output`. Note that when the `--animate` global flag is used, render times will be much longer and a `.mp4` video output file will be produced.\n\n6) See global help for list of global options/flags and subcommands:\n\n```console\n$ git-sim -h\n```\n\n7) See subcommand help for list of options/flags for a specific subcommand:\n\n```console\n$ git-sim <subcommand> -h\n```\n\n## Basic command examples\nSimulate the output of the git log command:\n\n```console\n$ cd path/to/git/repo\n$ git-sim log\n```\n\nSimulate the output of the git status command:\n\n```console\n$ git-sim status\n```\n\nSimulate adding a file to the Git staging area:\n\n```console\n$ git-sim add filename.ext\n```\n\nSimulate restoring a file from the Git staging area:\n\n```console\n$ git-sim restore filename.ext\n```\n\nSimulate creating a new commit based on currently staged changes:\n\n```console\n$ git-sim commit -m \"Commit message\"\n```\n\nSimulate stashing all working directory and staged changes:\n\n```console\n$ git-sim stash\n```\n\nSimulate creating a new Git branch:\n\n```console\n$ git-sim branch new-branch-name \n```\n\nSimulate creating a new Git tag:\n\n```console\n$ git-sim tag new-tag-name\n```\n\nSimulate a hard reset of the current branch HEAD to the previous commit:\n\n```console\n$ git-sim reset HEAD^ --hard\n```\n\nSimulate reverting the changes in an older commit:\n\n```console\n$ git-sim revert HEAD~7\n```\n\nSimulate merging a branch into the active branch:\n\n```console\n$ git-sim merge feature1\n```\n\nSimulate rebasing the active branch onto a new base:\n\n```console\n$ git-sim rebase main\n```\n\nSimulate cherry-picking a commit from another branch onto the active branch:\n\n```console\n$ git-sim cherry-pick 0ae641\n```\n\n## Command examples with extra options/flags\nUse light mode for white background and black text, instead of the default black background with white text:\n\n```console\n$ git-sim --light-mode status\n```\n\nAnimate the simulated output as a .mp4 video file:\n\n```console\n$ git-sim --animate add filename.ext\n```\n\nAdd an intro and outro with custom text and logo (must include `--animate`):\n\n```console\n$ git-sim --animate --show-intro --show-outro --outro-top-text=\"My Git Repo\" --outro-bottom-text=\"Thanks for watching!\" --logo=path/to/logo.png status\n```\n\nCustomize the output image/video directory location:\n\n```console\n$ git-sim --media-dir=path/to/output status\n```\n\nGenerate output video in low quality to speed up rendering time (useful for repeated testing, must include `--animate`):\n\n```console\n$ git-sim --animate --low-quality status\n```\n\n## Installation\nSee **Quickstart** section for details on installing manim and other dependencies. Then run:\n\n```console\n$ pip3 install git-sim\n```\n\n## Learn More\nLearn more about this tool on the [git-sim project page](https://initialcommit.com/tools/git-sim).\n\n## Authors\n**Jacob Stopak** - on behalf of [Initial Commit](https://initialcommit.com)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://initialcommit.com/tools/git-sim",
            "keywords": "git sim simulation simulate git-simulate git-simulation git-sim manim animation gitanimation image video dryrun dry-run",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "git-sim",
            "package_url": "https://pypi.org/project/git-sim/",
            "platform": null,
            "project_url": "https://pypi.org/project/git-sim/",
            "project_urls": {
                "Homepage": "https://initialcommit.com/tools/git-sim"
            },
            "release_url": "https://pypi.org/project/git-sim/0.0.5/",
            "requires_dist": [
                "gitpython",
                "manim",
                "opencv-python"
            ],
            "requires_python": ">=3.7",
            "summary": "Simulate Git commands on your own repos by generating an image (default) or video visualization depicting the command's behavior.",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "436843c84952875576ba850266f7cc07",
                    "sha256": "333dd19a21a269f1ec993c5d6a35259b5a09c18ada2ba76709016f38a40d7198"
                },
                "downloads": -1,
                "filename": "git_sim-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "436843c84952875576ba850266f7cc07",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 87568,
                "upload_time": "2022-11-30T21:13:01",
                "upload_time_iso_8601": "2022-11-30T21:13:01.288226Z",
                "url": "https://files.pythonhosted.org/packages/00/b7/4bec0cac015bc33cdc7c23e8d3a01e5cd715e95028b05bbb3dc2b2f03c59/git_sim-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "840c0ff715d3322d673043cb80cd04c1",
                    "sha256": "3046ddec57bf96baa547395240039620dbb47acd35beed2ed6f51d96302ef704"
                },
                "downloads": -1,
                "filename": "git-sim-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "840c0ff715d3322d673043cb80cd04c1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 84874,
                "upload_time": "2022-11-30T21:13:04",
                "upload_time_iso_8601": "2022-11-30T21:13:04.851958Z",
                "url": "https://files.pythonhosted.org/packages/79/29/11a8de28c1fc93e58e07750c214cc86f30854b0529942c3a406e93d61bb4/git-sim-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}