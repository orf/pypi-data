{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "Jacopo Farina <jacopo1.farina@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Static OSM indexer\n\n__NOTE__ this project is not production ready at all, maybe never will, but may be useful nonetheless.\n\nThis is a collection of scripts that can process data extracts from OpenStreetMap (PBF files) allowing the creation of __static sites__ (that is, a bunch of file hosted without any backend processing) to do a few useful operations:\n\n* display an interactive map (zoom, pan, scroll) based on vector tiles\n* locate addresses and places by name\n* TODO: nearest neighbor\n* TODO: routing (road network can be extracted, but it's not reasonably usable by the frontend)\n\n## Installation\n\nActivate the virtual environment and then:\n\n~~```pip install static_osm_indexer```~~\n\n```\nmake install\n```\n\nthis will make a set of CLI utilities, all prefixed with `soi_`, available. The library can also be used programmatically.\n\n# Generate a map, single step\n\nThis command will generate a fully static map from a PBF extract\n\n```soi_generate_full_map italy-latest.osm.pbf 3.8,36.2,20.2,47.8 test_italy_all```\n\nit needs the name of the folder where to store it and the bounding box.\n\n## Extract named locations\n\nRun `soi_list_named_locations`, this will generate a file in which every line is a JSON with a `name` field and `lat`, `lon` coordinates (as EPSG:4326).\n\nBy default it will extract the `name` tag which generally corresponds to the local name, but you can add specific locales, for example with `--tags 'name,name:it'` you will get local names and Italian names when available. Duplicates are ignored.\n\n## Index named locations\n\nOnce you have a file with the list of locations you need to index it using `soi_index_location_names`. This command requires an output folder for the output, and will rearrange the large location names file into smaller files quicker to retrieve on the fly. In this folder a file called `index_metadata.json` contains the metadata needed by the frontend to use the index.\n\nThe default config is fine for most cases, but there are two improvements you may want to look into:\n\n* `--stopwords` allows you to ignore words that are very common in addresses, for example the word for *street* in your language. Using it you can create a more balanced index.\n\n* `--token_length` is the amount of characters to be retrieved before fetching a file. By default 3, if you are processing Chinese or Japanese you should set it to 1 given the different statistical distribution of ideograms.\n\n# Extract road network\n\nUse `soi_extract_road_network` to extract the road network graph into a SQLLite database. Use `--help` for further instructions, it has flags to filter for the walking, bicycle and car network. The `--collapse-distance` flag allows to aggregate nodes that are close together to greatly reduce the complexity of the output.\n\n# Convert road network to geoJSON\n\nThe `soi_road_network_to_geojson` command can produce a geoJSON representation of a road network. It will generate a file with the edges and another with only the nodes, for inspection. Notice that unless the area is very small or you used the `--collapse-distance` flag these files are going to be quite large.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "Jacopo Farina <jacopo1.farina@gmail.com>",
            "name": "static-osm-indexer",
            "package_url": "https://pypi.org/project/static-osm-indexer/",
            "platform": null,
            "project_url": "https://pypi.org/project/static-osm-indexer/",
            "project_urls": {
                "Bug Tracker": "https://github.com/jacopofar/static-osm-indexer/issues",
                "Homepage": "https://github.com/jacopofar/static-osm-indexer"
            },
            "release_url": "https://pypi.org/project/static-osm-indexer/0.1.0/",
            "requires_dist": [
                "osmium (>=3.4.0)",
                "click (>=8.1.0)",
                "shapely (==2.0b2)",
                "geopy (==2.3.0)",
                "coverage ; extra == 'testing'",
                "pytest (>=7.2.0) ; extra == 'testing'",
                "mypy (>=0.990) ; extra == 'testing'",
                "pytest-cov (>=4.0.0) ; extra == 'testing'",
                "black ; extra == 'testing'",
                "mypy ; extra == 'testing'"
            ],
            "requires_python": ">=3.9",
            "summary": "Tool to process OSM files, mainly for static sites",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15787058,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2ef261492df96f61fddd85bbc2b7ad83",
                    "sha256": "5e04206f14734f51dea0e2df82835c14e9f27d7d65778fc885904bfed6a65015"
                },
                "downloads": -1,
                "filename": "static_osm_indexer-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2ef261492df96f61fddd85bbc2b7ad83",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 23137,
                "upload_time": "2022-11-16T10:45:31",
                "upload_time_iso_8601": "2022-11-16T10:45:31.401723Z",
                "url": "https://files.pythonhosted.org/packages/ab/20/2da00ce9ef6737f10079140a89a8980d6dceca67f1c781c602ce6c3c3757/static_osm_indexer-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "89003826678893288ee3690c43be56ab",
                    "sha256": "fc9c6ec442fe7eae674ae952d4af68d93da0b4569797ae2496db67e0f4590555"
                },
                "downloads": -1,
                "filename": "static_osm_indexer-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "89003826678893288ee3690c43be56ab",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 20567,
                "upload_time": "2022-11-16T10:45:32",
                "upload_time_iso_8601": "2022-11-16T10:45:32.832513Z",
                "url": "https://files.pythonhosted.org/packages/0a/bd/ba221f16a36c831dde9cc45869b743339c94405ff0358bf10043cebbc3c5/static_osm_indexer-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}