{
    "2.0.0": {
        "info": {
            "author": "Nando Farchmin",
            "author_email": "nando.farchmin@ptb.de",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "![PyThia Logo Full](logo/logo_full_transparent.png)\n\n# Uncertainty Quantification Toolbox\n\nThe PyThia UQ toolbox uses polynomial chaos surrogates to efficiently generate\na surrogate of any (parametric) forward problem.  The surrogate is fast du\nevaluate, allows analytical differentiation and has a built-in global\nsensitivity analysis via Sobol indices.  Assembling the surrogate is done\nnon-intrusive by least-squares regression, hence only training pairs of of\nparameter realizations and evaluations of the forward problem are required to\nconstruct the surrogate. No need to compute any nasty interfaces for lagacy\ncode.\n\n## Why the Name?\n\nPythia was the title of the high priestess of the temple of Apollo in Delphi.\nHence you could say she used her prophetic abilities to quantify which was\nuncertain.  Moreover, the package is written in python, so...\n\n## Installation of PyThia\n\nIf using Anaconda, simply clone the repository and create a new environment\ncalled `pythia` with `pip` installed\n```shell\nconda create --name pythia pip\n```\nActivate the environment with `conda activate pythia` and run the setup script\nto install PyThia to any environment\n```shell\ncd path/to/pythia\npip install .\n```\nPyThia can then be imported from any location with `import pythia`.\n\n## Documentation of PyThia\n\nThe documentation can be generated automatically using ``sphinx``.\nAssuming you have `sphinx` and the `sphinx_rtd_theme` installed, the\ndocumentation can be generated by\n```shell\ncd docs\nmake html\n```\nTo view the documentation locally, open `docs/build/html/index.html` in the\nbrowser of your choice.\n\n## Want to contribute?\n\nCheck out the [contribution guidelines](CONTRIBUTING.md) on how to create\nissues or file bug reports and feature requests.\nOr ever better start developping the PyThia project yourself after reading the\n[development guidelines](DEVELOPERS.md).\n\n## Roadmap and TODOs\n\nBefore the first official release there are several TODOs that need to be dealt\nwith:\n  - [x] add (correct) **LICENSE** file for the package according to PTB regulations\n  - [x] add **CODE_OF_CONDUCT** and guides for **CONTRIBUTING** and **DEVELOPERS**\n  - [x] add **CHANGELOG** to clarify what and when things were changed\n  - [x] fix a ![branching model](https://guides.github.com/introduction/flow/) and update the description of it in **DEVELOPERS**\n  - [x] fix a ![release policy](https://docs.github.com/en/repositories/releasing-projects-on-github)\n  - [ ] upon release, make the project available at ![PyPI.org](https://pypi.org/) for easy `pip` installation\n      - [ ] make it easy to install different versions\n  - [ ] make the code citeable\n  - [ ] automatically install dependencies (Numpy and SciPy versions)\n\nAfter making the project public, there are a few necessary user experience\nchanges that should be done:\n  - [ ] create ![stack overflow](https://stackoverflow.com/) hashtag for `PyThia`\n  - [ ] create a homepage\n  - [ ] add tutorials (jupyter notebook and as downloadable `.py` file) to homepage\n  - [x] add docstrings to the code and clean the superficially to make it more readable **without changing any functionality**\n  - [x] create an auto-doc with ![Sphinx](https://www.sphinx-doc.org/en/master/)\n  - [ ] write unit, mock and integration tests\n  - [ ] use CD and CI to test and deploy new releases of pythia\n  - [ ] create html-doc automatically when new version is released and upload it to Homepage\n\nFinally, here is a roadmap of features that we plan to add to pythia in the future.\n  - [ ] speed up evaluation of basis polynomials\n  - [ ] integrate tensor train representations of coefficients\n  - [ ] add tensor train regression (VMC)\n  - [ ] add exponentiation of tensor trains (expTT)\n  - [ ] add efficient posterior rejection sampling for tensor trains posteriors (Dolgov paper)\n\n## References\n\nHere we list the papers that describe concepts implemented in **PyThia** for \nthe interested user. In principle **PyThia** uses a (sparse) polynomial chaos\nexpansion to construct a surrogate of any function via least-squares regression.\nWe first applied the **PyThia** software package to analyse the sensitivities\nof a scatterometry experiment [^pythia-scat-A] using global sensitivity\nanalysis via Sobol indices [^sobol-indices]. We also solved the inverse problem for the same experiment [^pythia-scat-B]\nvia Bayesian inversion. To use a minimal but still sufficient amount of random\nsamples for the regression, we integrated weighted least-squares sampling [^wls-sampling]\ninto **PyThia**.\n\n[^pythia-scat-A]: [An efficient approach to global sensitivity analysis and parameter estimation for line gratings](https://arxiv.org/abs/1910.14435)\n[^pythia-scat-B]: [Efficient Bayesian inversion for shape reconstruction of lithography masks](https://arxiv.org/abs/2005.05164)\n[^sobol-indices]: [Global sensitivity analysis using polynomial chaos expansions](https://www.sciencedirect.com/science/article/abs/pii/S0951832007001329)\n[^wls-sampling]: [Optimal weighted least-squares methods](https://arxiv.org/abs/1608.00512)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab1.ptb.de/pythia/pythia",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pythia-uq",
            "package_url": "https://pypi.org/project/pythia-uq/",
            "platform": "",
            "project_url": "https://pypi.org/project/pythia-uq/",
            "project_urls": {
                "Homepage": "https://gitlab1.ptb.de/pythia/pythia"
            },
            "release_url": "https://pypi.org/project/pythia-uq/2.0.0/",
            "requires_dist": [
                "numpy (>=1.19.0)",
                "scipy (>=1.5.0)",
                "psutil (>=5.0)"
            ],
            "requires_python": "",
            "summary": "Package for solving inverse problems and quantifying their uncertainties via general polynomial chaos.",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12561865,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5048f5bf9aecd8d0dd6f74ef3b4b6aae",
                    "sha256": "abec26a92ca577d8ff90cbbfb129f91c454fb9c8a7459f776fa5825b992a3a1d"
                },
                "downloads": -1,
                "filename": "pythia_uq-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5048f5bf9aecd8d0dd6f74ef3b4b6aae",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 45517,
                "upload_time": "2022-01-13T14:19:31",
                "upload_time_iso_8601": "2022-01-13T14:19:31.689378Z",
                "url": "https://files.pythonhosted.org/packages/a6/fb/f7a2ace649e3bab5347f37344e59b136d1dcbdc070b028ad86c7fae73645/pythia_uq-2.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e2f1c801101c02df90ae7010c5990127",
                    "sha256": "4c84e5402168df60c563547b2b9302f3dd866bd4b2c1d8352f5dafdb76960042"
                },
                "downloads": -1,
                "filename": "pythia-uq-2.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e2f1c801101c02df90ae7010c5990127",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 43821,
                "upload_time": "2022-01-13T14:19:33",
                "upload_time_iso_8601": "2022-01-13T14:19:33.356828Z",
                "url": "https://files.pythonhosted.org/packages/3b/9a/bb79f731237f9cf81991bff0fc6895cd7161d4bd4aab0ba6a2ad54b1939a/pythia-uq-2.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}