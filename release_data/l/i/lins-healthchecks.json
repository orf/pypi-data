{
    "1.0.0": {
        "info": {
            "author": "Diego Magalh\u00e3es",
            "author_email": "dmlmagal@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/grupolinsferrao/lins-health-check",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lins-healthchecks",
            "package_url": "https://pypi.org/project/lins-healthchecks/",
            "platform": null,
            "project_url": "https://pypi.org/project/lins-healthchecks/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/grupolinsferrao/lins-health-check"
            },
            "release_url": "https://pypi.org/project/lins-healthchecks/1.0.0/",
            "requires_dist": [
                "requests",
                "pytz"
            ],
            "requires_python": ">=3.6",
            "summary": "Pacote que integra containers do docker ao sistema de healthcheck da lins-ferr\u00e3o",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13614113,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d9beaff0c472233638a8ccd3bea051ed",
                    "sha256": "96229da8b68f2ca46869f7d5bf9f1d21cdb109519acd9bba5d4b6ba4f6ca34ad"
                },
                "downloads": -1,
                "filename": "lins_healthchecks-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d9beaff0c472233638a8ccd3bea051ed",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 6927,
                "upload_time": "2022-04-25T12:58:19",
                "upload_time_iso_8601": "2022-04-25T12:58:19.960891Z",
                "url": "https://files.pythonhosted.org/packages/41/a3/78fe8d8965cf3d9950cc5a7c15804a9450c36eac5c2ac96b151d944015ef/lins_healthchecks-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bc1496c312d9f26c5a700f0a530afdf0",
                    "sha256": "f10a608d9f3a9b6131b419f92681fbbdd82e84e1d72860d6cf6c8dd6e60150c9"
                },
                "downloads": -1,
                "filename": "lins_healthchecks-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bc1496c312d9f26c5a700f0a530afdf0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5751,
                "upload_time": "2022-04-25T12:58:21",
                "upload_time_iso_8601": "2022-04-25T12:58:21.502624Z",
                "url": "https://files.pythonhosted.org/packages/a6/ae/b2b1a66b7e0014f094cd25b966bd3b527878914115c2b0fa592f4629589d/lins_healthchecks-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Diego Magalh\u00e3es",
            "author_email": "dmlmagal@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Lins Health Checks\n![pyver](https://img.shields.io/badge/python-3.6%2B-blue)\n[![codecov](https://codecov.io/bb/grupolinsferrao/pypck-lins-health-check/branch/master/graph/badge.svg?token=37SJO6KB8C)](https://codecov.io/bb/grupolinsferrao/pypck-lins-health-check)\n\nEsse pacote tem como prop\u00f3sito, linkar os servi\u00e7os da lins-ferr\u00e3o ao sistema de checagem (healthchecks).\n\n### Requirements:\n\n* Python 3.6+\n\n```bash\n$ pip install lins_healthchecks\n```\n\n# Vari\u00e1veis de ambiente\n\nVari\u00e1vel | Defini\u00e7\u00e3o | Valor padr\u00e3o | Requerida\n-- | - | - | -\nLINS_HEALTH_CHECK_URL | Define a url base para consumo do pacote | https://healthchecks.grupolinsferrao.com.br | N\u00e3o\nHEALTH_CHECKS_REQUEST_TIMEOUT | Define o tempo m\u00e1ximo de espera por uma resposta | 10 (segundos) | N\u00e3o\nTIMEZONE | Define a timezone exibida nos logs | America/Sao_Paulo | N\u00e3o\nSHOW_HEALTH_CHECKS_LOGS | Ativa ou desativa a exibi\u00e7\u00e3o de logs do pacote | True | N\u00e3o\nHEALTH_CHECKS_API_KEY | Chave necess\u00e1ria para autorizar o acesso aos endpoints | Nenhum (None) | Sim\n\n\n## Como gerar a API KEY\n\n1 - Clique na caixa com o nome do projeto em `My projects`\n\n2 - No menu superior no cabe\u00e7alho clique em `SETTINGS`\n\n3 - Na caixa de op\u00e7\u00f5es `API Access` clique em `create`\n\n4 - Atribua a chave gerada para a vari\u00e1vel de ambiente `HEALTH_CHECKS_API_KEY`\n\n\n## Utilizando o pacote\n\nExistem duas abordagens de uso.\n\n### decorator\n\nNesta abordagem, a fun\u00e7\u00e3o decorada **deve** possuir o atributo **health_check** ou **kwargs para receber uma inst\u00e2ncia da classe HealthCheck, possibilitando a comunica\u00e7\u00e3o com o sistema.\n\n\n```python\nfrom lins_healthchecks import api\n\nDADOS_DO_SERVICO = {\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n}\n\n\n@api.link(DADOS_DO_SERVICO)\ndef minha_funcao_decorada(health_check):\n    health_check.reportar_inicio()\n    try:\n        foo()\n    except Exception as e:\n        health_check.reportar_falha_por_exception(e)\n    health_check.reportar_sucesso()\n\n```\n\n\n\n### Atribui\u00e7\u00e3o\n\n```python\nfrom lins_healthchecks.utils import cria_ou_busca_health_check\n\nDADOS_DO_SERVICO = {\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n}\n\n\ndef minha_funcao():\n    health_check = healthcheck.cria_ou_busca_health_check(DADOS_DO_SERVICO)\n    try:\n        health_check.reportar_inicio()\n        foo()\n    except Exception e :\n        health_check.reportar_falha_por_exception(e)\n    health_check.reportar_sucesso()\n\n```\n\nCaso um erro ocorra por outro comportamento que n\u00e3o uma `exception` ent\u00e3o:\n\n```python\nfrom lins_healthchecks.utils import cria_ou_busca_health_check\n\nDADOS_DO_SERVICO = {\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n}\n\n\ndef minha_funcao():\n    health_check = healthcheck.cria_ou_busca_health_check(DADOS_DO_SERVICO)\n    health_check.reportar_inicio()\n    if not foo()\n        health_check.reportar_falha('foo retornou False')\n    else:\n        health_check.reportar_sucesso()\n\n```\n\nPara mais informa\u00e7\u00f5es dos poss\u00edveis par\u00e2metros para cria\u00e7\u00e3o do HC consulte a documenta\u00e7\u00e3o [aqui](https://healthchecks.grupolinsferrao.com.br/docs/api/#create-check)\n\n# Alertas\n\n## Tratamento interno para evitar replica\u00e7\u00f5es de registros no HC.\n\nSe no json informado para cria\u00e7\u00e3o do HC no m\u00e9todo `cria_ou_busca_healthcheck` n\u00e3o existir a chave `unique`, o m\u00e9todo de cria\u00e7\u00e3o ir\u00e1 adiciona-lo,\nsendo assim:\n\n```python\n{\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n}\n```\nser\u00e1 tratado como:\n\n```python\n{\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n    'unique': ['name'],\n}\n```\n\nCaso exista o `unique` no json mas sem a string `name` ent\u00e3o:\n\n```python\n{\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n    'unique': ['tags'],\n}\n```\n\nser\u00e1 tratado como:\n\n```python\n{\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n    'unique': ['tags', 'name'],\n}\n```\n\nA adi\u00e7\u00e3o do `{'unique': 'name'}` ao json evita que um novo registro seja criado toda vez que um servi\u00e7o\nfor reiniciado.\n\n## A quantidade e a ordem das tags importam\n\nNa cria\u00e7\u00e3o do health check, caso informem as `tags` na chave `unique` do json a **ordem** e a **quantidade** das tags **importam**, caso sejam reordenadas, adicionadas ou removidas, isso resultar\u00e1 em um **novo** **registro** de check se isso for realmente necess\u00e1rio, lembre-se de remover o registro antigo.\n\nex:\n\n```python\nfrom lins_healthchecks import utils\n\nDADOS_DO_SERVICO = {\n    'name': 'meu servico',\n    'tags': 'foo bar',\n    'timeout': 3600,\n    'grace': 60,\n}\n\nresponse = utils.cria_ou_busca_healthcheck(DADOS_DO_SERVICO)  # criou um registro de HC\nDADOS_DO_SERVICO['tags'] = 'bar foo'\nresponse = utils.cria_ou_busca_healthcheck(DADOS_DO_SERVICO)  # criou outro registro de HC\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/grupolinsferrao/lins-health-check",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lins-healthchecks",
            "package_url": "https://pypi.org/project/lins-healthchecks/",
            "platform": null,
            "project_url": "https://pypi.org/project/lins-healthchecks/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/grupolinsferrao/lins-health-check"
            },
            "release_url": "https://pypi.org/project/lins-healthchecks/1.0.1/",
            "requires_dist": [
                "requests",
                "pytz"
            ],
            "requires_python": ">=3.6",
            "summary": "Pacote que integra containers do docker ao sistema de healthcheck da lins-ferr\u00e3o",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13614113,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a9305ee2fe57213ee5d3787690b3404d",
                    "sha256": "6453fbd8f4b007f79a7759abdbeda8c6a895156212f9aefa112c7ee97878f951"
                },
                "downloads": -1,
                "filename": "lins_healthchecks-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a9305ee2fe57213ee5d3787690b3404d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 6918,
                "upload_time": "2022-04-25T13:14:25",
                "upload_time_iso_8601": "2022-04-25T13:14:25.756350Z",
                "url": "https://files.pythonhosted.org/packages/35/43/5931f5a5251074725e75f26080e2a71d8ecbd958240bed55e71f6ff518ab/lins_healthchecks-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f88e0b450e9b0c7da0df86f7fe125b73",
                    "sha256": "a979f81d0aaa35100f0fdf2e06a4d46ccf72aeacdfed1a0687b056a9dac059e8"
                },
                "downloads": -1,
                "filename": "lins_healthchecks-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f88e0b450e9b0c7da0df86f7fe125b73",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5738,
                "upload_time": "2022-04-25T13:14:27",
                "upload_time_iso_8601": "2022-04-25T13:14:27.358638Z",
                "url": "https://files.pythonhosted.org/packages/cc/fd/91e201d8d7c7f28b2360516ed3f8eb831150fc96024e054c344a1c67f35b/lins_healthchecks-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}