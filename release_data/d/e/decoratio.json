{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "\"Nicolas C. Rochette\" <nic.rochette@gmail.com>, \"Angel G. Rivera-Colon\" <angelgr2@illinois.edu>, \"Julian M. Catchen\" <jcatchen@illinois.edu>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "decoratio",
            "package_url": "https://pypi.org/project/decoratio/",
            "platform": null,
            "project_url": "https://pypi.org/project/decoratio/",
            "project_urls": {
                "Bugs & Issues": "https://bitbucket.org/rochette/decoratio/issues",
                "Source": "https://bitbucket.org/rochette/decoratio/"
            },
            "release_url": "https://pypi.org/project/decoratio/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A bioinformatics package to estimate the depth-complexity ratio and amplification noisiness of a sequencing experiment.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15441998,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1c7562e6955f03b27a012ee14c3df74c",
                    "sha256": "9454ac11e23cea29001f989e605619cf07aa9c1b883d6ae1c451dad05cb8ab30"
                },
                "downloads": -1,
                "filename": "decoratio-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1c7562e6955f03b27a012ee14c3df74c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 29730,
                "upload_time": "2022-10-07T04:09:49",
                "upload_time_iso_8601": "2022-10-07T04:09:49.327345Z",
                "url": "https://files.pythonhosted.org/packages/93/24/6b3f97126d6357428898af24c0c823ec8a63e3b3bd7d63c68ef589485014/decoratio-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "",
            "author_email": "\"Nicolas C. Rochette\" <nic.rochette@gmail.com>, \"Angel G. Rivera-Colon\" <angelgr2@illinois.edu>, \"Julian M. Catchen\" <jcatchen@illinois.edu>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "decoratio",
            "package_url": "https://pypi.org/project/decoratio/",
            "platform": null,
            "project_url": "https://pypi.org/project/decoratio/",
            "project_urls": {
                "Bugs & Issues": "https://bitbucket.org/rochette/decoratio/issues",
                "Source": "https://bitbucket.org/rochette/decoratio/"
            },
            "release_url": "https://pypi.org/project/decoratio/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A bioinformatics package to estimate the depth-complexity ratio and amplification noisiness of a sequencing experiment.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15441998,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "38b6e95329230ad52badd4835b5ef4a8",
                    "sha256": "4c27273309de9237ea5fd7650b351d0cff643e25654e459d091b2c95ae23fba5"
                },
                "downloads": -1,
                "filename": "decoratio-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "38b6e95329230ad52badd4835b5ef4a8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 29816,
                "upload_time": "2022-10-07T06:09:12",
                "upload_time_iso_8601": "2022-10-07T06:09:12.477763Z",
                "url": "https://files.pythonhosted.org/packages/c5/6b/a2cbc4ec53ac913ff3c0b0c65993afa1d8224ac1a62a5c58c8511598846f/decoratio-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "",
            "author_email": "\"Nicolas C. Rochette\" <nic.rochette@gmail.com>, \"Angel G. Rivera-Colon\" <angelgr2@illinois.edu>, \"Julian M. Catchen\" <jcatchen@illinois.edu>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "\nNAME\n==========\n\n**decoratio** \u2014 estimate the DEpth-COmplexity RATIO and amplification noisiness\nof a sequencing experiment based on the PCR clone size histogram.\n\nINSTALLATION\n==========\n\n```sh\npython3 -m pip decoratio\n```\n\nDecoratio depends on `numpy`, `scipy`, and `matplotlib`.\n\nSYNOPSIS\n==========\n\n```sh\npython3 -m decoratio [--model=MODEL] [...] CLONE_SIZE_HISTOGRAM.tsv\n```\n\nAUTHORS & CITATION\n==========\n\nNicolas C. Rochette, Angel G. Rivera-Col\u00f3n, Julian M. Catchen\n\nIf you use Decoratio, please cite:\n\nRochette NC, Rivera-Col\u00f3n AG, Walsh J, Sanger TJ, Campbell-Staton SC, Catchen JM\n(2022). On the causes, consequences, and avoidance of PCR duplicates: towards a\ntheory of library complexity. bioRxiv. https://doi.org/10.1101/2022.10.10.511638\n\nDESCRIPTION\n==========\n\nPCR duplicates become prevalent in sequencing experiments when the sequencing\neffort exceeds the number of molecules the library was originally prepared from.\nThe precise duplicates rate that is observed depends primarily on the ratio\nbetween the sequencing depth and the complexity of the library, as well as\nsecondarily on the variance of the amplification factor among the original\ntemplate molecules the library.\n\nThis program leverages PCR duplicate patterns (namely, the relative occurrence\nof duplication clones of various sizes) in a sequencing dataset to jointly\nestimate (1) the depth-complexity ratio, and (2) a variance model for the PCR\namplification of the library. As the sequencing depth should be known to the\nexperimenter, the depth-complexity ratio is a library complexity estimate. This,\ntogether with the amplification variance model, informs on the quality of the\nlibrary, allowing to identify failed libraries and/or to compare the performance\nof a set of library preparation protocols.\n\nInput TSV histogram\n----------\n\nThe main input for the program is a TSV table giving the number of duplication\nclones of each size that were observed. A duplication clone is a set of\nindividual reads that are all descend from the same template, and are PCR\nduplicates of one another. Thus, clones of size 1 correspond to singleton reads\nthat do not have duplicates; clones of size 2 to pairs of duplicate reads;\nclones of size 3 to read triplets; etc.\n\nThe input file should look like this:\n\n```txt\nclone_size  n_clones\n1           9746142\n2           7320751\n3           4969106\n4           3023127\n5           1693158\n6            893344\n7            456659\n...\n# (Empty size classes may be omitted.)\n```\n\nFor instructions on how to obtain this histogram from sequencing data (e.g., BAM\nalignment files), see the EXAMPLES section below.\n\nOptions\n----------\n\n`--model`\n: an amplification model specifier such as \"logskewnormal\" (default),\n\"lognormal\", or \"inheffbeta:12\"; see AMPLIFICATION MODELS below\n\n`--output-prefix`\n: defaults to `CLONE_SIZE_HISTOGRAM.tsv.decoratio.*`\n\n`--ratio-min`, `--ratio-max`\n: constrains the optimization range for the depth-complexity ratio\n\n`--no-plots`, `--tsv-out`, `--log-level`\n: miscelaneous output control\n\nAmplification models\n----------\n\nDefault settings should work well in most cases.\n\nThree models are currently implemented for the amplification: log-skew-normal\n(`logskewnormal`, default), log-normal (`lognormal`), and the empirical\ninherited efficiency model (`inheff` and `inheffbeta` for the original and beta\ndistribution-based versions respectively). All models may be specified without\nparameters, in which case their parameters will be jointly optimized with the\ndepth-complexity ratio, or with user-specified parameters, in which case only\nthe depth-complexity ratio will be optimized.\n\n#### Log-skew-normal and log-normal models\n\nThe PCR duplicate rate is only sensitive to the variance in relative\namplification factors, and not to the mean amplification factor. As a result,\nthe log-normal model has only one parameter (a standard deviation) and\nlog-skew-normal two (a standard deviation and a skew). Thus, for these models\nthe possible values take the form:\n\n```txt\n--model=lognormal\n--model=lognormal:0.54\n--model=logskewnormal\n--model=logskewnormal:0.72:-3.4\n```\n\nAll numerical values are given in units of the natural logarithm (this is\nimportant as e.g., an amplification factor log-distribution with a standard\ndeviation of 0.54 in base *e* has a standard deviation of 0.78 in base 2).\n\n#### Inherited efficiency models\n\nThis is the empirical model of (Best et al., 2015). We provide two closely\nrelated versions, the normal distribution-based model and a stabilized model\nbased on the beta distribution, which we recommend.\n\nA number of PCR cycles (e.g., 12) must always be provided. The models then\ndepend on two additional parameters, the mean efficiency of the PCR process and\nits standard deviation across clones. Thus, possible values take the form:\n\n```txt\n--model=inheff:12\n--model=inheffbeta:12\n--model=inheffbeta:12:0.76:0.14\n```\n\nComputations based on this model are substantially slower. The default is to\nperform binned simulations, as this is more computationally efficient, and the\ndefault effort is to perform 1000 simulations for each of 1000\nefficiency bins. This should work well, but can be changed with\n`--inheff-n-efficiency-bins` and `--inheff-n-sims-per-bin`. Binning during\nsimulations can be deactivated with `--inheff-legacy-sims`. If optimizing the\nparameters, the default is to optimize in a one-dimentional space, but\n`--inheff-uncouple-beta-parameters` will cause the two parameters to be\noptimized independently (for the beta distribution version only). This may\nimpact the precise shape of the amplification factor distribution.\n\nEXAMPLES\n==========\n\n```sh\ncurl -O https://bitbucket.org/rochette/decoratio/raw/HEAD/examples/brown_alone.clone_sizes.tsv\n# Using the default logskewnormal amplification model:\npython3 -m decoratio ./brown_alone.clone_sizes.tsv\n# Using the lognormal amplification model (this is faster):\npython3 -m decoratio --model=lognormal ./brown_alone.clone_sizes.tsv\n# Using a user-specified amplification model:\npython3 -m decoratio --model=logskewnormal:0.72:-3.4 ./brown_alone.clone_sizes.tsv\n```\n\nSample output:\n\n```txt\ndecoratio-1.0.0 (python-3.8, scipy-1.5.2)\nCalled as: decoratio ./brown_alone.clone_sizes.tsv\nOutputing to: ./brown_alone.clone_sizes.tsv.decoratio.logskewnormal.*\nReading input file...\nInput data shows 60.8% PCR duplicates.\nOptimizing the depth-complexity ratio & amplification noise...\nOptimized:\n\n    depth_complexity_ratio = 1.93\n    model = logskewnormal:0.719:-3.4\n\nModel fit was 99.1%; the predicted duplicate was rate 60.7% and the saturation\n75.8%; the amplification model's noisiness was 0.719 and its skewness -0.72.\nWriting output files...\n    ./brown_alone.clone_sizes.tsv.decoratio.logskewnormal.png\n    ./brown_alone.clone_sizes.tsv.decoratio.logskewnormal.ampl_factors.png\nDone.\n```\n\nObtaining the input file\n----------\n\n### Using **gstacks**\n\nFor RAD-seq datasets analyzed using STACKS, the clone sizes histogram is present\nin one of the output files by default:\n\n```sh\nstacks-dist-extract ./gstacks.log.distribs pcr_clone_size_distrib > ./clone_sizes.tsv\npython3 -m decoratio ./clone_sizes.tsv\n# The program can actually be run directly on the distribs file:\npython3 -m decoratio ./gstacks.log.distribs\n```\n\n*n.b.*, for datasets that comprise several libraries, for PCR duplicates and\nlibrary complexity purposes gstacks should be run separately on each library/set\nof samples.\n\n### Using **samtools-markdup**\n\n```sh\nprefix=./my_sample\nsamtools view -b -f0x2 -F0x904 $prefix.bam | \n    samtools collate -O - |\n    samtools fixmate -m - - |\n    samtools sort |\n    samtools markdup -t - $prefix.markdup.bam\n# We then extract the `do:` (presumably \"duplicate of\") tags in the SAM records.\nsamtools view -f0x40 $prefix.markdup.bam |\n    sed -E 's/.*\\tdo:Z:([^\\t]+).*/\\1/; s/\\t.*//' |\n    gzip > $prefix.clones.txt.gz\ngzip -cd $prefix.clones.txt.gz |\n    sort | uniq -c | awk '{print $1}' |\n    sort -n | uniq -c |\n    awk 'BEGIN{print \"clone_size\\tn_clones\"} {print $2 \"\\t\" $1}' \\\n    > $prefix.clone_sizes.tsv\npython3 -m decoratio $prefix.clone_sizes.tsv\n```\n\n### Using **GATK/Picard**\n\n*n.b.,* as of v2.27.4 / June 2022, Picard-MarkDuplicates appears to rely on\nsequence identity to identify duplicates; this may underestimate duplication\nlevels & overestimate complexity.\n\n```sh\nprefix=./my_sample\njava -jar picard-2.27.4.jar \\\n    MarkDuplicates \\\n    --TAG_DUPLICATE_SET_MEMBERS --READ_NAME_REGEX null \\\n    -I $prefix.bam -O $prefix.picard-markdups.bam -M $prefix.picard-markdups.txt \\\n    &> $prefix.picard-markdups.log\n# We then extract the `DS:` (duplicate set size, i.e., clone size) tags in the SAM records.\nsamtools view -f0x40 -F0xC04 $prefix.picard-markdups.bam |\n    sed -E '/\\tDS:/!s/.*/1/; s/.*\\tDS:i:([0-9]+).*/\\1/' |\n    sort -n | uniq -c |\n    awk 'BEGIN{print \"clone_size\\tn_clones\"} {print $2 \"\\t\" $1}' \\\n    > $prefix.clone_sizes.tsv\npython3 -m decoratio $prefix.clone_sizes.tsv\n```\n\n### Using **UMI-tools**\n\nHandling of duplicates with UMI-tools is appropriate for experiments that make\nuse of unique molecular identifers (e.g., single-cell RNA-seq datasets).\n\nUsers should use the `umi_tools group` command, exporting the information about\nthe size of \"read groups\" (i.e., PCR duplication clones) to a text file with the\n`--group-out` option.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "decoratio",
            "package_url": "https://pypi.org/project/decoratio/",
            "platform": null,
            "project_url": "https://pypi.org/project/decoratio/",
            "project_urls": {
                "Bugs & Issues": "https://bitbucket.org/rochette/decoratio/issues",
                "Source": "https://bitbucket.org/rochette/decoratio/"
            },
            "release_url": "https://pypi.org/project/decoratio/1.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A bioinformatics package to estimate the depth-complexity ratio and amplification noisiness of a sequencing experiment.",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15441998,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7b74078bdbebf73466a5b97d4f7417b1",
                    "sha256": "8251870569fd63c4f85dc5fb63b40d45d7aff19800768a5f1b3b95fc96a0b631"
                },
                "downloads": -1,
                "filename": "decoratio-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "7b74078bdbebf73466a5b97d4f7417b1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 30095,
                "upload_time": "2022-10-17T22:23:31",
                "upload_time_iso_8601": "2022-10-17T22:23:31.085828Z",
                "url": "https://files.pythonhosted.org/packages/3c/73/8440303a035579156afd74a68ce25043c1eca2c1b7b490c386702b8632a0/decoratio-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}