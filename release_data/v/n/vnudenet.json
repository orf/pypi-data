{
    "2.0.9": {
        "info": {
            "author": "BEDAPUDI PRANEETH",
            "author_email": "praneethbedapudi@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "\n# NudeNet: Neural Nets for Nudity Classification, Detection and selective censoring\n\n[![DOI](https://zenodo.org/badge/173154449.svg)](https://zenodo.org/badge/latestdoi/173154449) ![Upload Python package](https://github.com/notAI-tech/NudeNet/actions/workflows/python-publish.yml/badge.svg)\n\nUncensored version of the following image can be found at https://i.imgur.com/rga6845.jpg (NSFW)\n\n![](https://i.imgur.com/0KPJbl9.jpg)\n\n**Classifier classes:**\n|class name   |  Description    |\n|--------|:--------------:\n|safe | Image/Video is not sexually explicit     |\n|unsafe | Image/Video is sexually explicit|\n\n**Default Detector classes:**\n|class name   |  Description                    |\n|--------|:-------------------------------------:\n|EXPOSED_ANUS | Exposed Anus; Any gender |\n|EXPOSED_ARMPITS | Exposed Armpits; Any gender |\n|COVERED_BELLY | Provocative, but covered Belly; Any gender |\n|EXPOSED_BELLY | Exposed Belly; Any gender |\n|COVERED_BUTTOCKS | Provocative, but covered Buttocks; Any gender |\n|EXPOSED_BUTTOCKS | Exposed Buttocks; Any gender |\n|FACE_F | Female Face|\n|FACE_M | Male Face|\n|COVERED_FEET |Covered Feet; Any gender |\n|EXPOSED_FEET | Exposed Feet; Any gender|\n|COVERED_BREAST_F | Provocative, but covered Breast; Female |\n|EXPOSED_BREAST_F | Exposed Breast; Female |\n|COVERED_GENITALIA_F |Provocative, but covered Genitalia; Female|\n|EXPOSED_GENITALIA_F |Exposed Genitalia; Female |\n|EXPOSED_BREAST_M |Exposed Breast; Male |\n|EXPOSED_GENITALIA_M |Exposed Genitalia; Male |\n\n**Base Detector classes:**\n|class name   |  Description    |\n|--------|:--------------:\n|EXPOSED_BELLY | Exposed Belly; Any gender |\n|EXPOSED_BUTTOCKS | Exposed Buttocks; Any gender |\n|EXPOSED_BREAST_F | Exposed Breast; Female |\n|EXPOSED_GENITALIA_F |Exposed Genitalia; Female |\n|EXPOSED_GENITALIA_M |Exposed Genitalia; Male |\n|EXPOSED_BREAST_M |Exposed Breast; Male |\n\n# As self-hostable API service\n```bash\n# Classifier\ndocker run -it -p8080:8080 notaitech/nudenet:classifier\n\n# Detector\ndocker run -it -p8080:8080 notaitech/nudenet:detector\n\n# See fastDeploy-file_client.py for running predictions via fastDeploy's REST endpoints \nwget https://raw.githubusercontent.com/notAI-tech/fastDeploy/master/cli/fastDeploy-file_client.py\n# Single input\npython fastDeploy-file_client.py --file PATH_TO_YOUR_IMAGE\n\n# Client side batching\npython fastDeploy-file_client.py --dir PATH_TO_FOLDER --ext jpg\n```\n\n**Note: golang example https://github.com/notAI-tech/NudeNet/issues/63#issuecomment-729555360**, thanks to [Preetham Kamidi](https://github.com/preetham)\n\n\n# As Python module\n**Installation**:\n```bash\npip install --upgrade nudenet\n\npip install git+https://github.com/Sterrenhemel/NudeNet\n\n```\n\n**Classifier Usage**:\n```python\n# Import module\nfrom nudenet import NudeClassifier\n\n# initialize classifier (downloads the checkpoint file automatically the first time)\nclassifier = NudeClassifier()\n\n# Classify single image\nclassifier.classify('path_to_image_1')\n# Returns {'path_to_image_1': {'safe': PROBABILITY, 'unsafe': PROBABILITY}}\n# Classify multiple images (batch prediction)\n# batch_size is optional; defaults to 4\nclassifier.classify(['path_to_image_1', 'path_to_image_2'], batch_size=BATCH_SIZE)\n# Returns {'path_to_image_1': {'safe': PROBABILITY, 'unsafe': PROBABILITY},\n#          'path_to_image_2': {'safe': PROBABILITY, 'unsafe': PROBABILITY}}\n\n# Classify video\n# batch_size is optional; defaults to 4\nclassifier.classify_video('path_to_video', batch_size=BATCH_SIZE)\n# Returns {\"metadata\": {\"fps\": FPS, \"video_length\": TOTAL_N_FRAMES, \"video_path\": 'path_to_video'},\n#          \"preds\": {frame_i: {'safe': PROBABILITY, 'unsafe': PROBABILITY}, ....}}\n\n```\n\nThanks to [Johnny Urosevic](https://github.com/JohnnyUrosevic), NudeClassifier is also available in tflite.\n\n**TFLite Classifier Usage**:\n```python\n# Import module\nfrom nudenet import NudeClassifierLite\n\n# initialize classifier (downloads the checkpoint file automatically the first time)\nclassifier_lite = NudeClassifierLite()\n\n# Classify single image\nclassifier_lite.classify('path_to_image_1')\n# Returns {'path_to_image_1': {'safe': PROBABILITY, 'unsafe': PROBABILITY}}\n# Classify multiple images (batch prediction)\n# batch_size is optional; defaults to 4\nclassifier_lite.classify(['path_to_image_1', 'path_to_image_2'])\n# Returns {'path_to_image_1': {'safe': PROBABILITY, 'unsafe': PROBABILITY},\n#          'path_to_image_2': {'safe': PROBABILITY, 'unsafe': PROBABILITY}}\n\n```\n\nUsing the tflite classifier from flutter: **https://github.com/ndaysinaiK/nude-test** \n\n**Detector Usage**:\n```python\n# Import module\nfrom nudenet import NudeDetector\n\n# initialize detector (downloads the checkpoint file automatically the first time)\ndetector = NudeDetector() # detector = NudeDetector('base') for the \"base\" version of detector.\n\n# Detect single image\ndetector.detect('path_to_image')\n# fast mode is ~3x faster compared to default mode with slightly lower accuracy.\ndetector.detect('path_to_image', mode='fast')\n# Returns [{'box': LIST_OF_COORDINATES, 'score': PROBABILITY, 'label': LABEL}, ...]\n\n# Detect video\n# batch_size is optional; defaults to 2\n# show_progress is optional; defaults to True\ndetector.detect_video('path_to_video', batch_size=BATCH_SIZE, show_progress=BOOLEAN)\n# fast mode is ~3x faster compared to default mode with slightly lower accuracy.\ndetector.detect_video('path_to_video', batch_size=BATCH_SIZE, show_progress=BOOLEAN, mode='fast')\n# Returns {\"metadata\": {\"fps\": FPS, \"video_length\": TOTAL_N_FRAMES, \"video_path\": 'path_to_video'},\n#          \"preds\": {frame_i: {'box': LIST_OF_COORDINATES, 'score': PROBABILITY, 'label': LABEL}, ...], ....}}\n\n\n\n```\n\n# Notes:\n- detect_video and classify_video first identify the \"unique\" frames in a video and run predictions on them for significant performance improvement.\n- V1 of NudeDetector (available in master branch of this repo) was trained on 12000 images labelled by the good folks at cti-community.\n- V2 (current version) of NudeDetector is trained on 160,000 entirely auto-labelled (using classification heat maps and various other hybrid techniques) images. \n- The entire data for the classifier is available at https://archive.org/details/NudeNet_classifier_dataset_v1\n- A part of the auto-labelled data (Images are from the classifier dataset above) used to train the base Detector is available at https://github.com/notAI-tech/NudeNet/releases/download/v0/DETECTOR_AUTO_GENERATED_DATA.zip\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bedapudi6788/NudeNet",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "VNudeNet",
            "package_url": "https://pypi.org/project/VNudeNet/",
            "platform": null,
            "project_url": "https://pypi.org/project/VNudeNet/",
            "project_urls": {
                "Homepage": "https://github.com/bedapudi6788/NudeNet"
            },
            "release_url": "https://pypi.org/project/VNudeNet/2.0.9/",
            "requires_dist": [
                "pillow",
                "opencv-python-headless (>=4.5.1.48)",
                "pydload",
                "scikit-image",
                "onnxruntime-gpu"
            ],
            "requires_python": ">=3.6.0",
            "summary": "An ensemble of Neural Nets for Nudity Detection and Censoring",
            "version": "2.0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15483211,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "be7e1b60f9145a1f85d98c9f728d4288",
                    "sha256": "dc118c787dfe1afdd24761964878418c26b5445c8fce5ce4599d456e9f988d15"
                },
                "downloads": -1,
                "filename": "VNudeNet-2.0.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "be7e1b60f9145a1f85d98c9f728d4288",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6.0",
                "size": 25018,
                "upload_time": "2022-10-21T05:32:55",
                "upload_time_iso_8601": "2022-10-21T05:32:55.431146Z",
                "url": "https://files.pythonhosted.org/packages/90/ef/40d2c55e1c9da484fff773a9e12a2a85048ca5e3c25c9b455725a0e5516c/VNudeNet-2.0.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "90ed3253e8d79c7df36e21fd7766b360",
                    "sha256": "f5c9c43fc2e7140fcb39066ba9585144555319063c449bb1b62ae565dc90fb33"
                },
                "downloads": -1,
                "filename": "VNudeNet-2.0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "90ed3253e8d79c7df36e21fd7766b360",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6.0",
                "size": 24414,
                "upload_time": "2022-10-21T05:32:57",
                "upload_time_iso_8601": "2022-10-21T05:32:57.133420Z",
                "url": "https://files.pythonhosted.org/packages/7a/17/ebe9e711836d2f78525ea6f8de436dc9cad3800d441637fa743678427774/VNudeNet-2.0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}