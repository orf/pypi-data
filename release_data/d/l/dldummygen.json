{
    "0.0.2": {
        "info": {
            "author": "ryuvsken",
            "author_email": "ryuvskendev@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description": "\n# \ub525\ub7ec\ub2dd\uc6a9 \ub354\ubbf8 \ub370\uc774\ud130 \uc0dd\uc131 \uc790\ub3d9\ud654\n\n- Deep-Learning Dummy Data File Generator by csv File \n\n\n---\n\n\n## Overview\n\n\uc678\ubd80 \ub178\ucd9c\uc5d0 \ubbfc\uac10\ud55c \uc790\ub8cc\uac00 \ud3ec\ud568\ub41c \ub370\uc774\ud130\ub294 \uac1c\uc778 \uc815\ubcf4 \ubcf4\ud638\ubc95\uc5d0 \uc758\ud558\uc5ec \ub9dd\ubd84\ub9ac PC (\uc778\ud130\ub137\uc774 \ucc28\ub2e8\ub41c PC) \uc5d0\uc11c \uad00\ub9ac\ub41c\ub2e4\n\n\ub300\ubd80\ubd84\uc758 \ub9dd\ubd84\ub9ac PC \ub294 \ud130\ubbf8\ub110\uc758 \uc5ed\ud560\ub9cc \ud558\uace0 \uc131\ub2a5\uc774 \ub5a8\uc5b4\uc9c0\ub294 \ubbf8\ub2c8 PC \ub97c \uc0ac\uc6a9\ud558\uac8c \ub41c\ub2e4\n\n\ub525\ub7ec\ub2dd\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uc218\ud589\ud558\uae30 \uc704\ud574\uc11c\ub294 \uc131\ub2a5 \uc88b\uc740 PC \uc5d0\uc11c \uc2e4\uc81c \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc774\ub098 \ud604\uc2e4\uc801\uc73c\ub85c \uadf8\ub807\uc9c0 \ubabb\ud55c \uc0c1\ud669\uc77c \uacbd\uc6b0 \ub354\ubbf8 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud574\uc57c \ud55c\ub2e4\n\n\n---\n\n\n## \ub9dd \ubd84\ub9ac PC \uc758 \ud55c\uacc4\uc810\uc5d0 \ub530\ub978 \ub354\ubbf8 \ub370\uc774\ud130 \uc0ac\uc6a9\n\n![](img/readme-01.png)\n\n\n---\n\n\n## \uc2e4\uc81c \ub370\uc774\ud130\uc5d0\uc11c \ub354\ubbf8 \ub370\uc774\ud130\ub97c \ub9cc\ub4dc\ub294 \uacfc\uc815\n\n- \ub9dd\ubd84\ub9ac PC \uc5d0\uc11c \ub370\uc774\ud130 \ud2b9\uc131\uc744 \ud30c\uc545\ud55c\ub2e4\n- \ub354\ubbf8 \ub370\uc774\ud130\ub97c \ub9cc\ub4e4\uae30 \uc704\ud574\uc11c \uc2e4\uc81c \ub370\uc774\ud130\uc758 \ud2b9\uc131\uc744 \ubc1c\ucdcc\ud55c\ub2e4\n    - \uc2e4\uc81c \ub370\uc774\ud130\uc758 \uc2a4\ud0a4\ub9c8 \uad6c\uc870\ub97c \ubc1c\ucdcc\ud55c\ub2e4.<br/>\n    (\uc774\ub54c \ub9dd\ubd84\ub9ac PC \ub294 \ud074\ub9bd\ubcf4\ub4dc \ubcf5\uc0ac\ub098 \ud30c\uc77c \ubcf5\uc0ac\uac00 \uc5b4\ub835\uae30 \ub54c\ubb38\uc5d0 \uc218\uae30\ub85c \uc791\uc131\ud558\uac8c \ub41c\ub2e4)\n    - \uc2e4\uc81c \ub370\uc774\ud130\uc5d0\uc11c \uac01 \ud544\ub4dc\ubcc4 \ucd5c\ub300\uac12, \ucd5c\uc18c \uac12 \ub4f1\ub3c4 \ubc1c\ucdcc\ud55c\ub2e4\n    - \ub0a0\uc9dc\ud615\uc758 \uacbd\uc6b0 \ubc94\uc704\ub97c \ud655\uc778\ud558\uc5ec \ubc1c\ucdcc\ud574\uc57c \ud55c\ub2e4\n    - \ucf54\ub4dc \uac12 \uac19\uc740 \ubb38\uc790\uc5f4 \uc0c1\uc218\ub294 \ubc1c\ucdcc\ud558\uae30 \uc5b4\ub835\ub2e4\n- \ubc1c\ucdcc\ud55c \ud2b9\uc131 \uc815\ubcf4\ub97c \ubc14\ud0d5\uc73c\ub85c \ub354\ubbf8 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud558\uae30 \uc704\ud55c \ucf54\ub4dc\ub97c \uc791\uc131\ud55c\ub2e4\n    - \uac01 \ud544\ub4dc\ubcc4 \ud2b9\uc131\uc744 \uc791\uc131\ud55c\ub2e4\n    - \uc218\uce58, \ubb38\uc790\uc5f4 (\ucf54\ub4dc\ud615 / \ub79c\ub364 \ubb38\uc790\uc5f4), \ub0a0\uc9dc\ud615\uc758 \ub79c\ub364 \uc0dd\uc131 \ucf54\ub4dc\ub97c \uc791\uc131\ud55c\ub2e4\n\n\n---\n\n\n## \ub354\ubbf8 \ub370\uc774\ud130 \uc0dd\uc131 \uc790\ub3d9\ud654 \uc18c\uac1c\n\n![](img/readme-02.png)\n\n\n---\n\n\n## Usage\n\n- Install the prerequisites DLDummyGen\n\n```\n> pip install DLDummyGen\n```\n\n\n- Sample Code\n\n```python\n\nfrom DLDummyGen.DLDummyGen import DLLogger, DLDummyFieldHandler, DLDummyGenerator\n\nif __name__ == '__main__':\n\n    # Original csv File (Real Data)\n    CSV_FILE_NAME = \"pima-indians-diabetes.csv\"\n\n    # Maximum length of data to be generated\n    GEN_ROW_MAX = 10\n\n    # Length of Unique String Field (eg, Code Value) Judgment criteria\n    UNIQUE_FIELD_COUNT = 1000\n\n\n    # Create Logging Object\n    logger = DLLogger()\n\n    dg = DLDummyGenerator(CSV_FILE_NAME, GEN_ROW_MAX, UNIQUE_FIELD_COUNT, logger=logger)\n\n    # Run to Generate python source code\n    dg.gen_src_from_csv()\n\n```\n\n\n- With Custom Field Callback Handler Code\n\n```python\n\nfrom DLDummyGen.DLDummyGen import DLLogger, DLDummyFieldHandler, DLDummyGenerator\n\nclass DLDummyFieldAutoIncrement(DLDummyFieldHandler):\n    \"\"\"\n    Auto Increment ID - Custom Field Callback Handler\n    \"\"\"\n\n    def on_custom_field(self, dg, fgen, column, dataset):\n        fgen.write('gen_df[\\\"' + column + '\\\"] = ')\n        fgen.write('[\\'ID{:05d}\\'.format(idx+1) for idx in range(GEN_ROW_MAX)]\\n\\n')\n\n\nclass DLDummyFieldChoiceString(DLDummyFieldHandler):\n    \"\"\"\n    Choice String - Custom Field Callback Handler\n    \"\"\"\n\n    def on_custom_field(self, dg, fgen, column, dataset):\n        fgen.write('gen_df[\\\"' + column + '\\\"] = ')\n        fgen.write('choice([\\\"' + '\\\", \\\"'.join(['Y', 'N']) + '\\\"], GEN_ROW_MAX)\\n\\n')\n\n...\n\nif __name__ == '__main__':\n\n    # Original csv File (Real Data)\n    CSV_FILE_NAME = \"pima-indians-diabetes.csv\"\n\n    # Maximum length of data to be generated\n    GEN_ROW_MAX = 10\n\n    # Length of Unique String Field (eg, Code Value) Judgment criteria\n    UNIQUE_FIELD_COUNT = 1000\n\n\n    # Create Logging Object\n    logger = DLLogger()\n\n    dg = DLDummyGenerator(CSV_FILE_NAME, GEN_ROW_MAX, UNIQUE_FIELD_COUNT, logger=logger)\n\n\n    # Definition to generate random date/time\n    # [[Field Name, Start Date, End Date, Input Date Format, Output Date Format]]\n    DATE_FIELDS = [\n        [' Glucose', '2019-01', '2019-12', '%Y-%m', '%Y%m']\n    ]\n    dg.set_date_fields(DATE_FIELDS)\n\n    # Definition to custom field handler\n    # [[Field Name, DLDummyFieldHandler class implement instance]]\n    CUSTOM_FIELDS = [\n        ['Pregnancies', DLDummyFieldAutoIncrement()]\n        , [' Outcome', DLDummyFieldChoiceString()]\n    ]\n    dg.set_custom_fields(CUSTOM_FIELDS)\n\n    # Run to Generate python source code\n    dg.gen_src_from_csv()\n\n```\n\n\n---\n\n\n## Generated Python Source Code\n\n- Install the prerequisites numpy, pandas and faker (Python 3.7)\n\n```\n> pip install numpy\n> pip install pandas\n> pip install faker\n```\n\n- Generated Python Source Code\n\n```python\nimport pandas as pd\n\nimport numpy as np\nfrom numpy import random\nfrom datetime import datetime\n\n...\n\ngen_df = pd.DataFrame()\n\n# Pregnancies\ngen_df[\"Pregnancies\"] = ['ID{:05d}'.format(idx+1) for idx in range(GEN_ROW_MAX)]\n\n#  Glucose\ngen_df[\" Glucose\"] = [fake.date_between(\n    start_date=datetime.strptime('2019-01', '%Y-%m')\n    , end_date=datetime.strptime('2019-12', '%Y-%m')).strftime('%Y%m')\n    for _ in range(GEN_ROW_MAX)]\n\n...\n\n#  Age\ngen_df[\" Age\"] = random.randint(21, 81 + 1, GEN_ROW_MAX, dtype=\"int64\")\n\n#  Outcome\ngen_df[\" Outcome\"] = choice([\"Y\", \"N\"], GEN_ROW_MAX)\n\n\ngen_df.to_csv('gen_pima-indians-diabetes.csv', index=False)\n\nprint('\\ngen_pima-indians-diabetes.csv File Created...\\n')\n\n```\n\n---\n\n\n## Appendix\n\n- [Numpy](https://numpy.org/doc/stable/) : NumPy is the fundamental package for scientific computing in Python\n- [Pandas](https://pandas.pydata.org/docs) : pandas is an open source, BSD-licensed library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language.\n- [Faker](https://github.com/joke2k/faker) : Python package that generates fake data for you\n\n\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ryuvsken",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DLDummyGen",
            "package_url": "https://pypi.org/project/DLDummyGen/",
            "platform": "",
            "project_url": "https://pypi.org/project/DLDummyGen/",
            "project_urls": {
                "Homepage": "https://github.com/ryuvsken"
            },
            "release_url": "https://pypi.org/project/DLDummyGen/0.0.2/",
            "requires_dist": [
                "numpy",
                "pandas",
                "faker"
            ],
            "requires_python": "",
            "summary": "Deep-Learning Dummy File Generator by csv File",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8490486,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d8b9f51ab97cf1dd56a5762c53dfd88a",
                    "sha256": "559b4a91ca291d2045eba94235c5d2d2e5a811a4c7105aa8b9aed399ded5743e"
                },
                "downloads": -1,
                "filename": "DLDummyGen-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d8b9f51ab97cf1dd56a5762c53dfd88a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10761,
                "upload_time": "2020-10-24T10:38:11",
                "upload_time_iso_8601": "2020-10-24T10:38:11.210458Z",
                "url": "https://files.pythonhosted.org/packages/1a/6f/56c416f921679ab1e9ace550b0d2d496bb58f383139d94b6c86373905070/DLDummyGen-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1e3ffbc6a14cb50a3dc5eda32e703c5d",
                    "sha256": "c6542882cce6147586edfe377076d07dd4e17d47730c9f59c08f3cff1e2901ad"
                },
                "downloads": -1,
                "filename": "DLDummyGen-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1e3ffbc6a14cb50a3dc5eda32e703c5d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 211172,
                "upload_time": "2020-10-24T10:38:12",
                "upload_time_iso_8601": "2020-10-24T10:38:12.865779Z",
                "url": "https://files.pythonhosted.org/packages/34/75/6d7d0091766d54f483eb3ff2604df22cd427ef0fd5ecbd40fca3e4ce8792/DLDummyGen-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}