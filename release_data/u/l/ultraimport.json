{
    "0.0.1": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "File-based Python imports",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e3814b340adceef8f197bd9a895e05a",
                    "sha256": "4bbc93330f2f22aae80f2147aa61283433d2ddd06bff8e293cbbf2f4dfddf92e"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2e3814b340adceef8f197bd9a895e05a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 77492,
                "upload_time": "2022-06-12T17:25:33",
                "upload_time_iso_8601": "2022-06-12T17:25:33.352085Z",
                "url": "https://files.pythonhosted.org/packages/79/b8/c957cbde927f196c108c6b8c3be9a956c77000925a951ac843b28356d39a/ultraimport-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "File-based Python imports",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b0f243d889bab35dfc10a43e7877480f",
                    "sha256": "297a9b76879a8903930cb3a1d5af2cd07f5c5f2b2008fc14963d17f5de30670d"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "b0f243d889bab35dfc10a43e7877480f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 77363,
                "upload_time": "2022-06-12T17:36:11",
                "upload_time_iso_8601": "2022-06-12T17:36:11.672890Z",
                "url": "https://files.pythonhosted.org/packages/23/e9/3d9a01ff28ac69b956f5456b555389a615bd5cc8553136dda618452d0e5c/ultraimport-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "File-based Python imports",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "46ca0736c2246d1078abd9017673beaf",
                    "sha256": "a6867cf04f1f7f9765826dfd15b21b9a36ad97670b49293e2f3d6e6722a4a066"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "46ca0736c2246d1078abd9017673beaf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 77557,
                "upload_time": "2022-06-13T09:27:57",
                "upload_time_iso_8601": "2022-06-13T09:27:57.043667Z",
                "url": "https://files.pythonhosted.org/packages/d9/35/bef8624c9889efc9f7f5ca4ee42b7810f24ed0ddfe5c0f487866fb1cd7b3/ultraimport-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.4/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Reliable, file system based imports -- no matter how you run your code",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7f99dd8e6dd0e30cac96644c4a2ac063",
                    "sha256": "5c0aa5b03bf432b6dbeed78c9eb29697a9e533c645669d1be15f33e54c84ced5"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "7f99dd8e6dd0e30cac96644c4a2ac063",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 106407,
                "upload_time": "2022-06-15T07:17:07",
                "upload_time_iso_8601": "2022-06-15T07:17:07.729772Z",
                "url": "https://files.pythonhosted.org/packages/61/9c/679c8c4b9e58cfd00c88246a9e01456e4ec506ff1a5b1fdd50f516d548bb/ultraimport-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.5/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Reliable, file system based imports -- no matter how you run your code",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "355107aadeaf7934105b0ab6390d467e",
                    "sha256": "a204888802e09658ad5bc8041f8abac51e7ae9d8a4466db9ff529f3f0323fb00"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "355107aadeaf7934105b0ab6390d467e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 109379,
                "upload_time": "2022-06-18T09:00:36",
                "upload_time_iso_8601": "2022-06-18T09:00:36.344996Z",
                "url": "https://files.pythonhosted.org/packages/bb/af/42b6867f4461c65633249d469737d8471e9f3a343b5546288dc3e234ba1c/ultraimport-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.6": {
        "info": {
            "author": "Ronny Rentner",
            "author_email": "ultraimport.code@ronny-rentner.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# ultraimport\n\nGet control over your imports -- no matter how you run your code.\n\n**Warning: This is an early hack. There are only few unit tests, yet. Maybe not stable!**\n\n[![PyPI Package](https://img.shields.io/pypi/v/ultradict.svg)](https://pypi.org/project/ultraimport)\n[![Run Tests](https://github.com/ronny-rentner/ultraimport/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/ronny-rentner/ultraimport/actions/workflows/ci.yml)\n[![Python >=3.8](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)\n[![License](https://img.shields.io/github/license/ronny-rentner/ultraimport.svg)](https://github.com/ronny-rentner/UltraDict/blob/master/license.md)\n\n**Features**:\n- Import any file from the file system as Python code\n- Works independent of your `sys.path`, independent of your current working directory, and independent of your top-level package\n- Works no matter if you run your code as a module or as a script\n- Dynamically wrap your code in a virtual namespace package\n- Preprocess code for optimizations (see [example](/examples/working/debug-transform))\n- Recursively rewrite subsequent relative import statements (see [example](/examples/working/recurse))\n- Dependency injection (see [example](/examples/working/dependency-injection))\n- Lazy loading (lazy imports for modules and callables)\n- Fix circular imports through lazy imports or dependency injection\n- Fix the error: `ImportError: attempted relative import with no known parent package`\n- Fix the error: `ValueError: attempted relative import beyond top-level package`\n- Better error messages\n\n**Is ultraimport supposed to replace the normal import statement?**\n\nNo! You will continue to use the builtin import statements to import 3rd party libraries which have been installed system wide. `ultraimport` is meant to import local files whose locations you control because they are located relatively to some other files.\n\n**How does it work?**\n\n## Installation\n\nInstall system wide:\n```shell\npip install ultraimport\n```\n\nInstall a local development version:\n```shell\ngit clone https://github.com/ronny-rentner/ultraimport.git\npip install -e ./ultraimport\n```\n\n## How To Use?\n\n*Note: You can find [this](/examples/working/myprogram) and other examples in the [examples/working/](/examples/working) folder.*\n\nLet's assume your new program in the folder `~/myprogram` looks like this:\n```shell\ncache.py\nlog.py\nrun.py\n```\n\nYou have split the code into 3 modules, but it is not worth it to use a more complex directory structure.\n\nrun.py:\n```python\n#!/usr/bin/env python3\n\n# ultraimport needs to be installed and imported in the classical way.\nimport ultraimport\n\n# Import the 'logger' object from 'log.py' that is located in the same\n# directory as this file and add 'logger' to the global namespace.\n# `__dir__` refers to the directory where run.py is in.\nultraimport('__dir__/log.py', 'logger', globals=globals())\n\ndef main():\n    # do something\n    logger('I did something')\n\nif __name__ == '__main__':\n    main()\nelse:\n    logger('I was imported')\n```\n\nWith `ultraimport`, no matter how you call run.py, it will always find log.py.\n\n\n## The Issue: Relative Import in Python\n\nClassically, to do a relative import, your run.py would look like this:\n```python\n#!/usr/bin/env python3\n\nfrom .log import logger\n\ndef main():\n    # do something\n\n    logger('I did something')\n\nif __name__ == 'main':\n    main()\n```\n\nIf you try to run the program in usual way, you'll get an error message:\n\n```shell\n$ python ./run.py\nTraceback (most recent call last):\n  File \"/home/user/myprogram/./run.py\", line 1, in <module>\n    from .log import logger\nImportError: attempted relative import with no known parent package\n```\n\nPython programs or scripts can be executed in a number of different ways and with some of the ways, it even works:\n```shell\n# Broken\npython ~/myprogram/run.py\n\n# Works\ncd ~\npython -c 'import myprogram.run'\n\n# Works\npython -m myprogram.run\n\n# Broken\ncd ~/myprogram\npython -c 'import run'\n\n# Broken\npython -m run\n\n# Broken\npython ./run.py\n\n# Broken\n~/myprogram/run.py\n```\n\nThe error ***ImportError: attempted relative import with no known parent package***\nis rather erratic because the code has never changed.\n\nThere actually *is* a known parent package. It's the directory where the code lives in.\nSometimes Python can see it, sometimes not.\n\nEven if there was no parent package, what's the issue with importing a module that\nI only know from its relative position to my current module?\n\nThe main problem with the orignal Python imports is that they are ambiguous. As a programmer,\nyou work on source code files in the file system. But Python doesn't import source code files\nfrom the file system. It imports packages and modules. The structure of the directories and files\nin your file system is somehow mapped to the structure of packages and modules in Python,\nbut in an *ambiguous* way with additional, external dependencies to things like your current working directory.\nThis is bad, because you need to write more code to handle these external dependencies that you never wanted.\nAll the information you have about your source code files is information about their relative\nlocation to each other in the file system.\n\n## The Solution: ultraimport\n\nWith ultraimport your program `run.py` will always find `log.py`, no matter how you run it.\n\nrun.py:\n```python\n#!/usr/bin/env python3\n\n# ultraimport needs to be installed and imported in the classical way.\nimport ultraimport\n\n# Import the 'logger' object from 'log.py' that is located in the same\n# directory as this file and add 'logger' to the global namespace.\n# `__dir__` refers to the directory where run.py is in.\nultraimport('__dir__/log.py', 'logger', globals=globals())\n\ndef main():\n    # do something\n    logger('I did something')\n\nif __name__ == '__main__':\n    main()\nelse:\n    logger('I was imported')\n```\n\nAs you can see, you'll have to import ultraimport in the classical way. It's intended to be installed as a system-wide library.\nAfterwards, you can import your own code based on relative or absolute file system paths so it can always be found.\n\nWith ultraimport, Python code can be executed in an way and the imports keep working:\n```shell\n# Works\npython ~/myprogram/run.py\n\n# Works\ncd ~\npython -c 'import myprogram.run'\n\n# Works\npython -m myprogram.run\n\n# Works\ncd ~/myprogram\npython -c 'import run'\n\n# Works\npython -m run\n\n# Works\npython ./run.py\n\n# Works\n~/myprogram/run.py\n```\n\n## Parameters\n\n`ultraimport(file_path, objects_to_import=None, globals=None, preprocessor=None, package=None, caller=None, use_cache=True, lazy=False, recurse=False, inject=None, use_preprocessor_cache=True, cache_path_prefix=None)`\n\n`file_path`: path to a file to import, ie. *'my_lib.py'*. It can have any file extension. Please be aware that you must provide the file extension. The path can be relative or absolute. You can use the special string `__dir__` to refer to the directory of the caller. If run from a Python REPL, the current working directory will be used for `__dir__`. If you use advanced debugging tools (or want to save some CPU cycles) you might want to set `caller=__file__`.\n\n`objects_to_import`: provide name of single object or the value `'*'` or an iterable of object names to import from `file_path`. If `lazy=True`, this should be a dict where the values declare the types of the imported objects.\n\n`globals`: add the `objects_to_import` to the dict provided. Usually called with `gloabls=globals()` if you want the imported module\nto be added to the global namespace of the caller.\n\n`preprocessor`: callable that takes the source code as an argument and that can return a modified version of the source code. Check out the [debug-transform example](/examples/working/debug-transform) on how to use the preprocessor.\n\n`package`: can have several modes depending on if you provide a `string` or an `int`. If you provide a string, ultraimport will generate one or more namespace packages and use it as parent package of your imported module. If you set an int, it means the number of path parts (directories) to extract from the `file_path` to calculate the namespace package. Usually you do not have to set this. It can only help in a few cases with nested relative imports when not using the `resurse=True` mode. If `package` is set to `None`, the module will be imported without setting it parent `__package__`.\n\n`use_cache`: if set to False, allow re-importing of the same source file even if it was imported before. Otherwise a cached version of the imported module is returned.\n\n`lazy`: if set to `True` and if `objects_to_import` is set to `None`, it will lazy import the module. If set to True and `objects_to_import` is a dict, the values of the dict must be the type of the object to lazy import from the module. Currently only the type `callable` is supported.\n\n`recurse`: if set to `True`, a built-in preprocessor is activated to transparently rewrite all `from .. import ..` statements (only relative imports) to ultraimport() calls. Use this mode if you have no control over the source code of the impored modules.\n\n`cache_path_prefix`: Directory for storing preprocessed files. If you use the preprocessor feature or if you use the option `recurse=True` (which in turn uses the preprocessor feature) you will have the option to store the resulting code after preprocessing. By default, they are stored in parallel to the original source code files, but this option allows to override to location. One common setting is `cache_path_prefix='__pycache__'` to store the processed files along with the bytecode files. __Note:__ Even when you change this directory, this will be hidden from Python. Towards Python, the preprocessed files will always look like they are in the same directory as the original source code files, even if they are not.\n\n## Advanced Usage\n\nSee [docs/advanced-usage.md](/docs/advanced-usage.md)\n\n## Better Error Messages\n\nSee [docs/better-error-messages.md](/docs/better-error-messages.md)\n\n## Contributing\n\nWe love contributions!\n\nultraimport is open source, built on open source, and we'd love to have you hang out in our community.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ronny-rentner/ultraimport",
            "keywords": "",
            "license": "Apache License Version 2.0, January 2004 http://www.apache.org/licenses/  TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION  1. Definitions.  \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.  \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.  \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.  \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.  \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.  \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.  \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).  \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.  \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"  \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.  2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.  3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.  4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:  (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and  (b) You must cause any modified files to carry prominent notices stating that You changed the files; and  (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and  (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.  You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.  5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.  6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.  7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.  8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.  9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.  END OF TERMS AND CONDITIONS  APPENDIX: How to apply the Apache License to your work.  To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!)  The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives.  Copyright [2022] [Ronny Rentner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. ",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ultraimport",
            "package_url": "https://pypi.org/project/ultraimport/",
            "platform": null,
            "project_url": "https://pypi.org/project/ultraimport/",
            "project_urls": {
                "Homepage": "https://github.com/ronny-rentner/ultraimport",
                "main": "https://github.com/ronny-rentner/ultraimport"
            },
            "release_url": "https://pypi.org/project/ultraimport/0.0.6/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Reliable, file system based imports -- no matter how you run your code",
            "version": "0.0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14677899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2a82a209c3123c7e9c21a8618f05622e",
                    "sha256": "fc7099c563b4be73552c9e7d46cb8a93f4e38688280c3240f16aed7e33a66c63"
                },
                "downloads": -1,
                "filename": "ultraimport-0.0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "2a82a209c3123c7e9c21a8618f05622e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 195724,
                "upload_time": "2022-08-07T04:17:03",
                "upload_time_iso_8601": "2022-08-07T04:17:03.720935Z",
                "url": "https://files.pythonhosted.org/packages/41/de/a957dd75de93dce3b5f02d86607054ead6fa13c6dc719bea66a34a9676c5/ultraimport-0.0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}