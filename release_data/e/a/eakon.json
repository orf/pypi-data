{
    "0.0.1": {
        "info": {
            "author": "KurisuD",
            "author_email": "KurisuD@pypi.darnand.net",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Topic :: Home Automation"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/KurisuD/eakon",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eakon",
            "package_url": "https://pypi.org/project/eakon/",
            "platform": "",
            "project_url": "https://pypi.org/project/eakon/",
            "project_urls": {
                "Homepage": "https://github.com/KurisuD/eakon"
            },
            "release_url": "https://pypi.org/project/eakon/0.0.1/",
            "requires_dist": [
                "bitstring",
                "pathlib"
            ],
            "requires_python": "",
            "summary": "a simple library to control air-conditioners",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9123574,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4f29fb65b0e183adc4935d39e250781e",
                    "sha256": "54b5da2779edf3bab1ed1f180edffbc9ef2736d6e3631152a4e95b4d20426abb"
                },
                "downloads": -1,
                "filename": "eakon-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4f29fb65b0e183adc4935d39e250781e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11016,
                "upload_time": "2020-07-28T14:27:05",
                "upload_time_iso_8601": "2020-07-28T14:27:05.050785Z",
                "url": "https://files.pythonhosted.org/packages/dd/a4/5f8f7ab282439a1d0657702a5447b85b80b62fab81d49f03ab012a56b514/eakon-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "724c03061f8db5aaf7150425853ace43",
                    "sha256": "4fa6f001e2d39e657e18b7c04a3cdbee7bbaa472ad2f7ab9c7aaa6ca2cd47bfd"
                },
                "downloads": -1,
                "filename": "eakon-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "724c03061f8db5aaf7150425853ace43",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10409,
                "upload_time": "2020-07-28T14:27:17",
                "upload_time_iso_8601": "2020-07-28T14:27:17.652425Z",
                "url": "https://files.pythonhosted.org/packages/e1/2c/f7ca1772615d1525a0c47dffebf396c70539f2290e80fa0c60640c9ec639/eakon-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "KurisuD",
            "author_email": "KurisuD@pypi.darnand.net",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Topic :: Home Automation"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/KurisuD/eakon",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eakon",
            "package_url": "https://pypi.org/project/eakon/",
            "platform": "",
            "project_url": "https://pypi.org/project/eakon/",
            "project_urls": {
                "Homepage": "https://github.com/KurisuD/eakon"
            },
            "release_url": "https://pypi.org/project/eakon/0.0.2/",
            "requires_dist": [
                "bitstring",
                "pathlib"
            ],
            "requires_python": "",
            "summary": "A simple library to control (japanese) air-conditioners",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9123574,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "43643eae9166cf2c543306ed90d9bb11",
                    "sha256": "f34d5d34ba8b506c5ef5b4986fb236e25b95a3747f6455926a4ddbe283e8aa90"
                },
                "downloads": -1,
                "filename": "eakon-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "43643eae9166cf2c543306ed90d9bb11",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12336,
                "upload_time": "2020-08-21T23:47:59",
                "upload_time_iso_8601": "2020-08-21T23:47:59.573339Z",
                "url": "https://files.pythonhosted.org/packages/4a/eb/dd79033e22cd3b4939566c87f632a90f6022effaf1c3da81e59593bc83dd/eakon-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "070de5c49801b0398946eb1b9dbf29a8",
                    "sha256": "77a818423b77a87ef5047258d07c9a6fbed6e15c6bb183b846dded21f1d30c9a"
                },
                "downloads": -1,
                "filename": "eakon-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "070de5c49801b0398946eb1b9dbf29a8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12520,
                "upload_time": "2020-08-21T23:48:02",
                "upload_time_iso_8601": "2020-08-21T23:48:02.031390Z",
                "url": "https://files.pythonhosted.org/packages/34/2a/6bce1a2ab40441a31560145f29542205353c28517d805d3e5d89a0d83f39/eakon-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "KurisuD",
            "author_email": "KurisuD@pypi.darnand.net",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Topic :: Home Automation"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/KurisuD/eakon",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eakon",
            "package_url": "https://pypi.org/project/eakon/",
            "platform": "",
            "project_url": "https://pypi.org/project/eakon/",
            "project_urls": {
                "Homepage": "https://github.com/KurisuD/eakon"
            },
            "release_url": "https://pypi.org/project/eakon/0.0.3/",
            "requires_dist": [
                "bitstring",
                "pathlib"
            ],
            "requires_python": "",
            "summary": "A simple library to control (japanese) air-conditioners",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9123574,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0aabee3168c7151d9780218ef4e42dea",
                    "sha256": "909e97285dcbff8dc450522e78f31311f88a72a93313ca36c6af77592967040b"
                },
                "downloads": -1,
                "filename": "eakon-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0aabee3168c7151d9780218ef4e42dea",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15139,
                "upload_time": "2021-01-11T13:14:38",
                "upload_time_iso_8601": "2021-01-11T13:14:38.695630Z",
                "url": "https://files.pythonhosted.org/packages/8d/ba/ab75b8183dfef703a4507ee9bf3b340f92cd55986f8c0ecd5d4007777b15/eakon-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b8674b5d092dc0bed2c54217a184b8f8",
                    "sha256": "d93d99ac50c9662b7e457106bccaf02157c75c708e54b65143c55ba1389f44ad"
                },
                "downloads": -1,
                "filename": "eakon-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "b8674b5d092dc0bed2c54217a184b8f8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13722,
                "upload_time": "2021-01-11T13:14:41",
                "upload_time_iso_8601": "2021-01-11T13:14:41.297704Z",
                "url": "https://files.pythonhosted.org/packages/38/01/68b6babfc897f1c6289a57d81174d642d57cb7d44186965dfbbde0d68d02/eakon-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "KurisuD",
            "author_email": "KurisuD@pypi.darnand.net",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Topic :: Home Automation"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/KurisuD/eakon",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eakon",
            "package_url": "https://pypi.org/project/eakon/",
            "platform": "",
            "project_url": "https://pypi.org/project/eakon/",
            "project_urls": {
                "Homepage": "https://github.com/KurisuD/eakon"
            },
            "release_url": "https://pypi.org/project/eakon/0.0.4/",
            "requires_dist": [
                "bitstring",
                "pathlib"
            ],
            "requires_python": "",
            "summary": "A simple library to control (japanese) air-conditioners",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9123574,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4f195e77d5db7744e6ee5943365aaa2",
                    "sha256": "b012b4c52694babeaac889e4c276866bd653af49f92ccf88791b2f28bea3dbfe"
                },
                "downloads": -1,
                "filename": "eakon-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c4f195e77d5db7744e6ee5943365aaa2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15159,
                "upload_time": "2021-01-11T13:38:11",
                "upload_time_iso_8601": "2021-01-11T13:38:11.317432Z",
                "url": "https://files.pythonhosted.org/packages/27/fb/dbeae8d4370dd5bd330947fa9e805105593c2b3d44d4c9ab12120f146b42/eakon-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3863f640c9f04c3176b164ba79a88f0c",
                    "sha256": "8d1cbec070cf7e7847f4ff5dafdd3d0e62867ffd34ba59f20b25d7ee67619d82"
                },
                "downloads": -1,
                "filename": "eakon-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "3863f640c9f04c3176b164ba79a88f0c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13750,
                "upload_time": "2021-01-11T13:38:13",
                "upload_time_iso_8601": "2021-01-11T13:38:13.219509Z",
                "url": "https://files.pythonhosted.org/packages/a0/97/5cf9fc44e468420126ac953364159731cc41c8e21ed01533d69301e2f137/eakon-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "KurisuD",
            "author_email": "KurisuD@pypi.darnand.net",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.5",
                "Topic :: Home Automation"
            ],
            "description": "# eakon\n\neakon is a simple python library to control air-conditioners.\n\nThere are many examples of such code on the web, but I found none did not cover my needs:\n\nEach HVAC unit to control needs to have its own instance created (the instance being dependent on the unit maker).\n\n- Each instance keeps track of the current status of the air-conditioner (assuming it is not changed with the unit remote control)\n\n- The status can be made persistent\n\n- handle japanese market air-conditioners\n\nMoreover, the code was to be kept the least esoteric as possible, to ensure readability and evolutions.\n\nUsage of [bitstring](https://github.com/scott-griffiths/bitstring) greatly helped to reach this objective.\n\n## Usage\n\nDuring or after instantiation, settings are made, and you get either a bitstring or a wave.\nThe wave is in a format to be consumed by the [pigpio library](http://abyz.me.uk/rpi/pigpio/), following the example of the [sample irrp.py](http://abyz.me.uk/rpi/pigpio/code/irrp_py.zip) script.\n\nN.B. : The irrp.py script has length limitations.\nYou can refer to (or better yet, use) my [AnaviInfraredPhat](https://github.com/kurisuD/AnaviInfraredPhat/) library which handles compression of waves for working around length limitations of pigpio.\n\nThe compression algorithm is credit of https://korintje.com/archives/28 \n\n```python\nhvac = Daikin()\nhvac.power = daikin_enum.Power.ON\nhvac.temperature = 21\nhvac.mode = daikin_enum.Mode.COOL\nhvac.fan_vertical_mode = daikin_enum.FanVerticalMode.TOP\n\nlogging.info(\"\\r{}\".format(hvac))\nlogging.info(hvac.bitstring)\nlogging.info(hvac.wave)\n>>\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : \nModel :\t\t\t\t\tDaikin\npower :                 ON\nmode :                  COOL\ntemperature :           21\u00b0C\nwide_vanne_mode :       NOT_AVAILABLE\narea_mode :             NOT_AVAILABLE\nfan_power :             AUTO\nfan_high_power :        NOT_AVAILABLE\nfan_vertical_mode :     TOP\nfan_horizontal_mode :   UNDEFINED\nfan_long :              NOT_AVAILABLE\n\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : 100010000101101111100100000000000100000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000010010010001000010110111110010000000000000000001001110001010100000000000000010100000000000000000110000000000110000000000000000011000011000000000000000001111100\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : [433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 25194, 3495, 1746, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 25194, 3495, 1746, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433]\n\nhvac.power = daikin_enum.Power.OFF\nlogging.info(\"\\r{}\".format(hvac))\nlogging.info(hvac.bitstring)\nlogging.info(hvac.wave)\n>>\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : \nModel :\t\t\t\t\tDaikin\npower :                 OFF\nmode :                  COOL\ntemperature :           21\u00b0C\nwide_vanne_mode :       NOT_AVAILABLE\narea_mode :             NOT_AVAILABLE\nfan_power :             AUTO\nfan_high_power :        NOT_AVAILABLE\nfan_vertical_mode :     TOP\nfan_horizontal_mode :   UNDEFINED\nfan_long :              NOT_AVAILABLE\n\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : 100010000101101111100100000000000100000000000000000000000000000000000000000000000000000000000001000010000000000000000000000000000000000000000000000000000010010110001000010110111110010000000000000000000001110001010100000000000000010100000000000000000110000000000110000000000000000011000011000000000000000010111100\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : [433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 25194, 3495, 1746, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 25194, 3495, 1746, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 1288, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 440, 433, 1288, 433, 440, 433, 1288, 433, 1288, 433, 1288, 433, 1288, 433, 440, 433, 440, 433]\n\n```\n\nThe bitstring is mostly used for debugging purpose, but I assume it could be used for other purpose.\n\nNow, you may have multiple HVAC of different models in your housing, and you may need an easy way to configure which model is in which room.\n\nFor such cases, a helper method is available for dynamically instantiating by name:\n```python\ntry:\n    e = get_eakon_instance_by_model(\"toshiba\")\n    e.power = e.enums[\"Power\"].ON\n    e.temperature = 26\n    e.mode = e.enums[\"Mode\"].COOL\n    logging.info(\"\\r\\n{}\".format(e))\n    logging.info(e.bitstring)\nexcept NotImplementedError as e:\n    logging.warning(e)\n>>\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : \nModel :                 Toshiba\npower :                 ON\nmode :                  COOL\ntemperature :           26\u00b0C\nwide_vanne_mode :       NOT_AVAILABLE\narea_mode :             NOT_AVAILABLE\nfan_power :             UNDEFINED\nfan_high_power :        NOT_AVAILABLE\nfan_vertical_mode :     UNDEFINED\nfan_horizontal_mode :   NOT_AVAILABLE\nfan_long :              NOT_AVAILABLE\n\n2020-01-01 00:00:00.000 UTC [    INFO] __init__ : 110000100011110110111111010000001101000000101111\n2020-01-01 00:00:00.000 UTC [ WARNING] __init__ : No module toto implementing class Toto was found. Model toto is unsupported.\n```\n\nAs you can notice comparing the two above examples, the Daikin class supports setting the 'fan_horizontal_mode' (but is currently UNDEFINED) but the Toshiba class doesn't.\n\nMoreover, the first example shows settings the properties by direct use of the associated enumerations, while the second example shows setting properties by name.\n\nN.B.: The purpose here is to allow accessing the model specific enumerations without having to refer to them in a hardcoded manner.\n\nSettings values can also be set with strings, i.e. `e.power = e.enums[\"Power\"].ON` is equivalent to `e.power = e.enums[\"Power\"][\"ON\"]`\n\nAccessing an unavailable enumeration element will raise either an `AttributeError` or a `KeyError`, depending on the access method employed:\n```python\ne.power = e.enums[\"Power\"].PARTIALLY_ON\n>>\nAttributeError: PARTIALLY_ON\n\ne.power = e.enums[\"Power\"][\"PARTIALLY_ON\"]\n>>\nKeyError: 'PARTIALLY_ON'\n```\n\n\nLastly, if a model is unsupported, a `NotImplementedError` is raised:\n```python\ntry:\n    e = get_eakon_instance_by_model(\"toto\")\nexcept NotImplementedError as e:\n    logging.warning(e)\n>>\n2020-01-01 00:00:00.000 UTC [ WARNING] __init__ : No module toto implementing class Toto was found. Model toto is unsupported.\n```\n\n\n\n## (Known) Supported models\n\nAs the name (\u30a8\u30a2\u30b3\u30f3) of the library implies, there is a strong focus on japanese brands, and quite possibly is limited to recent (2020) japanese models.\n\nDevelopment was done with the following models of remote controls:\n- Daikin ARC47850 (Units models C and CX at least)\n- Hitachi SP-RC4 (covers [a lot of hitachi models](https://kadenfan.hitachi.co.jp/ra/parts/supply/sprc4.html))\n- Toshiba RG66J5 (apparently all units from 2020, possibly also few years before ?)\n\nDaikin has at least 2 other protocols available in Japan (Moreover, it is likely that protocols used for non-domestic market differs).\n\nImplementation of additional models should be relatively easy.\n\n## Limitations\n\nOnly standard functions are implemented, _in extenso_:\n- timers aren't supported (by lack of interest)\n- extra functions like unit cleaning, triggering of diagnostic, etc... aren't supported\n\n## Installation\n\n```bash\npython3 -m pip install eakon\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/KurisuD/eakon",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eakon",
            "package_url": "https://pypi.org/project/eakon/",
            "platform": "",
            "project_url": "https://pypi.org/project/eakon/",
            "project_urls": {
                "Homepage": "https://github.com/KurisuD/eakon"
            },
            "release_url": "https://pypi.org/project/eakon/0.0.5/",
            "requires_dist": [
                "bitstring",
                "pathlib"
            ],
            "requires_python": "",
            "summary": "A simple library to control (japanese) air-conditioners",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9123574,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e346502d678e6f6a7f4112464e4b3171",
                    "sha256": "b524b3d56a8c6163e160c11b2b426461b2b90b7a09dd29dc8bea1743beec6e9c"
                },
                "downloads": -1,
                "filename": "eakon-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e346502d678e6f6a7f4112464e4b3171",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15257,
                "upload_time": "2021-01-13T13:17:38",
                "upload_time_iso_8601": "2021-01-13T13:17:38.659038Z",
                "url": "https://files.pythonhosted.org/packages/2b/5f/7dc6b70f418d3a45f0032ae0f1165938d7897141cb092706dcb0fc9f6faa/eakon-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "800096bdfee96ed1d9a751af49a4f198",
                    "sha256": "087600f53b32fa1c4a3b2dd6fcf2399680294e9ccd57c4e09f94c41b2d0266f1"
                },
                "downloads": -1,
                "filename": "eakon-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "800096bdfee96ed1d9a751af49a4f198",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13940,
                "upload_time": "2021-01-13T13:17:40",
                "upload_time_iso_8601": "2021-01-13T13:17:40.826803Z",
                "url": "https://files.pythonhosted.org/packages/4c/6a/d6bb2a71b4d7f6958b7e97a36bdc1f32d8da6b9508394a21d4326d41760f/eakon-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}