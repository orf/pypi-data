{
    "0.1.0": {
        "info": {
            "author": "Jackie McAninch, bluezr",
            "author_email": "jackie.mcaninch.2019@gmail.com, bluezr@dogecoin.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3"
            ],
            "description": "# libdogecoin\n\nA simple Python interface to interact with the libdogecoin C library written by the [Dogecoin Foundation](https://foundation.dogecoin.com/). This module contains wrappers for all user-facing address and transaction functions. For more information on usage of these wrappers, please refer to the bindings doc in the [Dogecoin Foundation libdogecoin repo](https://github.com/dogecoinfoundation/libdogecoin).\n\n## Installation\n\nTo begin using the libdogecoin module, simply install libdogecoin using pip3:\n```\npip3 install libdogecoin\n```\nLibdogecoin is now ready to be imported within your python script!\n\n## API\n\nAll functions are prefixed with the letter \"w\" in order to differentiate between the Python wrapper functions and the redeclarations of the original C functions as required by Cython.\n\n---\n### w_context_start()\nStart the secp256k1 context necessary for key pair generation. Must be started before calling any functions dealing with private or public keys.\n\n---\n### w_context_stop()\nStop the current instance of the secp256k1 context. It is advised to wait until the session is completely over before stopping the context.\n\n---\n### w_generate_priv_pub_key_pair(chain_code=0)\nGenerate a valid private key paired with the corresponding p2pkh address.\n\n**Parameters:**\n- chain_code -- 0 for mainnet pair, 1 for testnet pair\n\n**Returns:**\n- privkey -- the generated private key of the pair as byte string\n- p2pkh_pubkey -- the generated public key of the pair as byte string\n\n---\n### w_generate_hd_master_pub_key_pair(chain_code=0)\nGenerate a master private and public key pair for use in hierarchical deterministic wallets. Public key can be used for child key derivation using w_generate_derived_hd_pub_key().\n\n**Parameters:**\n- chain_code -- 0 for mainnet pair, 1 for testnet pair\n\n**Returns:**\n- master_privkey -- the generated HD master private key of the pair as a byte string\n- master_p2pkh_pubkey -- the generated HD master public key of the pair as a byte string\n\n---\n### w_generate_derived_hd_pub_key(wif_privkey_master)\nGiven a HD master public key, derive a child key from it.\n\n**Parameters:**\n- wif_privkey_master -- HD master private key as wif-encoded string\n\n**Returns:**\n- child_p2pkh_pubkey -- the resulting child public key derived from the provided HD master private key\n\n---\n### w_verify_priv_pub_keypair(wif_privkey, p2pkh_pubkey, chain_code=0)\nGiven a key private/public key pair, verify that the keys are valid and are associated with each other.\n\n**Parameters:**\n- wif_privkey -- string containing wif-encoded private key\n- p2pkh_pubkey -- string containing address derived from wif_privkey\n- chain_code -- 0 for mainnet, 1 for testnet\n\n**Returns:**\n- res -- 1 if the key pair is valid, 0 otherwise\n\n---\n### w_verify_master_priv_pub_keypair(wif_privkey_master, p2pkh_pubkey_master, chain_code=0)\nGiven a keypair from generate_hd_master_pub_key_pair, verify that the keys are valid and are associated with each other.\n\n**Parameters:**\n- wif_privkey_master -- string containing wif-encoded private master key\n- p2pkh_pubkey_master -- string containing address derived from wif_privkey\n- chain_code -- 0 for mainnet, 1 for testnet\n\n**Returns:**\n- res -- 1 if the master key pair is valid, 0 otherwise\n\n---\n### w_verify_p2pkh_address(p2pkh_pubkey)\nGiven a p2pkh address, confirm address is in correct Dogecoin format.\n\n**Parameters:**\n- p2pkh_pubkey -- string containing basic p2pkh address\n\n**Returns:**\n- res -- 1 if the address is valid, 0 otherwise.\n\n---\n### w_start_transaction()\nCreate a new, empty dogecoin transaction.\n\n**Returns:**\n- res -- the index of the newly created transaction in the session hash table\n\n---\n### w_add_utxo(tx_index, hex_utxo_txid, vout)\nGiven the index of a working transaction, add another input to it.\n\n**Parameters:**\n- tx_index -- the index of the working transaction to update\n- hex_utxo_txid -- the transaction id of the utxo to be spent\n- vout -- the number of outputs associated with the specified utxo\n\n**Returns:**\n- res -- 1 if the input was added successfully, 0 otherwise.\n\n---\n### w_add_output(tx_index, destination_address, amount)\nGiven the index of a working transaction, add another output to it.\n\n**Parameters:**\n- tx_index -- the index of the working transaction to update\n- destination_address -- the address of the output being added\n- amount -- the amount of dogecoin to send to the specified address\n\n**Returns:**\n- res -- 1 if the input was added successfully, 0 otherwise.\n\n---\n### w_finalize_transaction(tx_index, destination_address, subtracted_fee, out_dogeamount_for_verification, changeaddress)\nGiven the index of a working transaction, prepares it for signing by specifying the recipient and fee to subtract, directing extra change back to the sender.\n\n**Parameters:**\n- tx_index -- the index of the working transaction\n- destination address -- the address to send coins to\n- subtracted_fee -- the amount of dogecoin to assign as a fee\n- out_dogeamount_for_verification -- the total amount of dogecoin being sent (fee included)\n- changeaddress -- the address of the sender to receive their change\n\n**Returns:**\n- res -- the hex string representation of the transaction if successfully finalized, 0 otherwise\n\n---\n### w_get_raw_transaction(tx_index)\nGiven the index of a working transaction, returns the serialized object in hex format.\n\n**Parameters:**\n- tx_index -- the index of the working transaction\n\n**Returns:**\n- res -- the hex string representation of the transaction at index tx_index if it exists, 0 otherwise\n\n---\n### w_clear_transaction(tx_index)\nDiscard a working transaction.\n\n**Parameters:**\n- tx_index -- the index of the working transaction\n\n---\n### w_sign_raw_transaction(tx_index, incoming_raw_tx, script_hex, sig_hash_type, amount, privkey)\nSign a finalized raw transaction using the specified private key.\n\n**Parameters:**\n- tx_index -- the index of the working transaction to sign\n- incoming_raw_tx -- the serialized string of the transaction to sign\n- script_hex -- the hex of the script to be signed\n- sig_hash_type -- the type of signature hash to be used\n- amount -- the amount of dogecoin in the transaction being signed\n- privkey -- the private key to sign with\n\n**Returns:**\n- res -- the hex string representation of the signed transaction if successfully signed, 0 otherwise.\n\n---\n### w_sign_transaction(tx_index, amounts, script_pubkey, privkey)\nSign all the inputs of a working transaction using the specified private key and public key script.\n\n**Parameters:**\n- tx_index -- the index of the working transaction to sign\n- amounts -- an array of the input amounts in the specified transaction\n- script_pubkey -- the pubkey script associated with the private key\n- privkey -- the private key used to sign the specified transaction\n\n**Returns:**\n- res -- the hex string representation of the signed transaction if successfully signed, 0 otherwise.\n\n---\n### w_store_raw_transaction(incoming_raw_tx)\nStores a raw transaction at the next available index in the hash table.\n\n**Parameters:**\n- incoming_raw_tx -- the serialized string of the transaction to store.\n\n**Returns:**\n- res -- 1 if the transaction was stored successfully, 0 otherwise.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/dogecoinfoundation/libdogecoin",
            "keywords": "",
            "license": "AGPL-3.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "libdogecoin",
            "package_url": "https://pypi.org/project/libdogecoin/",
            "platform": null,
            "project_url": "https://pypi.org/project/libdogecoin/",
            "project_urls": {
                "Homepage": "https://github.com/dogecoinfoundation/libdogecoin"
            },
            "release_url": "https://pypi.org/project/libdogecoin/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python interface for the libdogecoin C library",
            "version": "0.1.0",
            "yanked": true,
            "yanked_reason": "reconfig author/maintainer"
        },
        "last_serial": 14805437,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8733be48350aab6785a740f8753b62a6",
                    "sha256": "634edc64bc77ee69f48689e91b212ad52fba66ada20e9db304807e2cba1196a8"
                },
                "downloads": -1,
                "filename": "libdogecoin-0.1.0-cp310-cp310-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "8733be48350aab6785a740f8753b62a6",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 1212979,
                "upload_time": "2022-08-14T10:15:29",
                "upload_time_iso_8601": "2022-08-14T10:15:29.449756Z",
                "url": "https://files.pythonhosted.org/packages/31/1a/af8be8a4c0188c9178e05261558ec556e5c8cfbaff9a48c4e7da4458cb0d/libdogecoin-0.1.0-cp310-cp310-win_amd64.whl",
                "yanked": true,
                "yanked_reason": "reconfig author/maintainer"
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "698f2091e0a3c3edad290f42c29f2829",
                    "sha256": "cad5efaa9542bf5b700cd2da9655dfa3ab47afd918ecbc4e9f4c4b554af81eba"
                },
                "downloads": -1,
                "filename": "libdogecoin-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "698f2091e0a3c3edad290f42c29f2829",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 55138,
                "upload_time": "2022-08-14T10:15:30",
                "upload_time_iso_8601": "2022-08-14T10:15:30.729002Z",
                "url": "https://files.pythonhosted.org/packages/39/f1/34f215d2a98698d9f00532222619291e7c58b8c3aae77e24db2e9e742656/libdogecoin-0.1.0.tar.gz",
                "yanked": true,
                "yanked_reason": "reconfig author/maintainer"
            }
        ],
        "vulnerabilities": []
    }
}