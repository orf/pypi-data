{
    "0.1.1": {
        "info": {
            "author": "Thomas Ott",
            "author_email": "tommy.ott617@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Hydrology"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/t-ott/stormcatchments",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stormcatchments",
            "package_url": "https://pypi.org/project/stormcatchments/",
            "platform": null,
            "project_url": "https://pypi.org/project/stormcatchments/",
            "project_urls": {
                "Homepage": "https://github.com/t-ott/stormcatchments"
            },
            "release_url": "https://pypi.org/project/stormcatchments/0.1.1/",
            "requires_dist": [
                "geopandas",
                "networkx",
                "pysheds",
                "rtree"
            ],
            "requires_python": "",
            "summary": "Stormwater network aware catchment delineation",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15825602,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "246b7925313aeb8434c2c4258f843fff",
                    "sha256": "37e86373773d576587e3c2f619bde9ad582e6e24268a28f48b49d0f2f1681553"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "246b7925313aeb8434c2c4258f843fff",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4438,
                "upload_time": "2022-11-06T13:58:59",
                "upload_time_iso_8601": "2022-11-06T13:58:59.382556Z",
                "url": "https://files.pythonhosted.org/packages/2d/bb/0fd11b8b5fb89103122a00e1ddd842a4b34f20b1e824494d79d27feaaec9/stormcatchments-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "50b5ca7690fa82a29731ae0afb1ab53b",
                    "sha256": "ceea47520f6582e3424578bece3b5c8355e691f2ac6287cad70cc8db22d2c8c6"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "50b5ca7690fa82a29731ae0afb1ab53b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9017472,
                "upload_time": "2022-11-06T13:59:12",
                "upload_time_iso_8601": "2022-11-06T13:59:12.345716Z",
                "url": "https://files.pythonhosted.org/packages/15/20/8c80f6fa8fce8362e3b9bf263c23d8c437f7cb1dfc35e8ebb1b2b9be63cd/stormcatchments-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Thomas Ott",
            "author_email": "tommy.ott617@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Hydrology"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/t-ott/stormcatchments",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stormcatchments",
            "package_url": "https://pypi.org/project/stormcatchments/",
            "platform": null,
            "project_url": "https://pypi.org/project/stormcatchments/",
            "project_urls": {
                "Homepage": "https://github.com/t-ott/stormcatchments"
            },
            "release_url": "https://pypi.org/project/stormcatchments/0.1.2/",
            "requires_dist": [
                "geopandas",
                "networkx",
                "pysheds",
                "rtree"
            ],
            "requires_python": "",
            "summary": "Stormwater network aware catchment delineation",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15825602,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "54e4f37cff9a8093761f39d6de476f7f",
                    "sha256": "c5f164bec2b0e7a3f1955317f6f9becc66e5b2ede3c530a75cde918ba4de3831"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "54e4f37cff9a8093761f39d6de476f7f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 17627,
                "upload_time": "2022-11-06T14:18:34",
                "upload_time_iso_8601": "2022-11-06T14:18:34.711488Z",
                "url": "https://files.pythonhosted.org/packages/12/03/4b97afab5ffe5ea5c9e8d3fe303274b4f6f80de9724edeee3d1ecf02d0d4/stormcatchments-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "efaef01225531d9ea22b5b60d0069e6f",
                    "sha256": "4ec5f52aa59da173a211e99da1a80a5650670a70087436981796abfaf3739151"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "efaef01225531d9ea22b5b60d0069e6f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9018396,
                "upload_time": "2022-11-06T14:18:55",
                "upload_time_iso_8601": "2022-11-06T14:18:55.018065Z",
                "url": "https://files.pythonhosted.org/packages/79/44/a29cd6977827f5de3b051c6fbbb09aa1f919248f05814a87f850f1119072/stormcatchments-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Thomas Ott",
            "author_email": "tommy.ott617@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Hydrology"
            ],
            "description": "# stormcatchments\n## Stormwater network aware catchment delineation\n\nConverts existing stormwater infrastucture GIS feature data (points and lines) into a\n```networkx``` directed graph (```DiGraph```) object, then utilizes the ```DiGraph``` to\nincorporate subsurface flows into urban stormwater catchment delineation.\n\nVarious dependencies include:\n- ```geopandas```\n- ```networkx```\n- ```pysheds```\n\nSimilar libraries/projects:\n- [```s2g```](https://github.com/caesar0301/s2g)\n- [```networkx``` module ```nx_shp.py```](https://github.com/networkx/networkx/blob/6e20b952a957af820990f68d9237609198088816/networkx/readwrite/nx_shp.py)\n\n\n## Installation\n\nTo install from PyPI:\n```\npip install stormcatchments\n```\n\n## Input data requirements\n\nTo utilize this package, you need both **point** and **line** spatial data, which could represent a network of catchbasins and stormlines. The file format does not matter as long as it can be successfully read into a ```geopandas.GeoDataFrame```. The line data must connect to the points, and lines must have verticies snapped to the points.\nThis was initially developed for [Vermont Agency of Natural Resources stormwater infrastructure dataset](https://gis-vtanr.hub.arcgis.com/maps/VTANR::stormwater-infrastructure/explore?location=43.609172%2C-72.968811%2C14.15). However, the package is indented to generalize to any infrastructure dataset that meets these basic requirements.\n\n\n## Example Usage\n\n### Imports\n```python\nimport geopandas as gpd\nimport stormcatchments as sc\n```\n### Read infrastructure data\n```python\nstorm_lines = gpd.read_file('tests/test_data/johnson_vt/storm_lines.shp')\nstorm_lines.set_index('OBJECTID', inplace=True)\nstorm_pts = gpd.read_file('tests/test_data/johnson_vt/storm_pts.shp')\nstorm_pts.set_index('OBJECTID', inplace=True)\n```\n### Initialize Network object and resolve directions\n```python\n# storm_pts contains a column \"Type\" with integer values describing what type of \n# structure each point represents\nsinks = [2, 8] # Corresponds to catchbasins and culvert inlets\nsources = [5, 9] # Corresponds to outfalls and culvert outlets\n\nnet = sc.Network(\n  storm_lines, storm_pts, type_column='Type', sink_types=sinks, source_types=sources\n)\n```\nRefer to [Mapping flow sinks and sources](#mapping-flow-sinks-and-sources) below for more information on initializing a ```Network```\n### Resolve flow directions of the Network\n```python\nnet.resolve_directions(method='from_sources', verbose=True)\n```\nOutput:\n```\nAdding edges...\nSuccesfully resolved direction for 202 edges\n```\nRefer to [Determining subsurface flow direction](#determining-subsurface-flow-direction) below for more information of resolving ```Network``` directions\n### Preprocess terrain data\n```python\ngrid, fdir, acc = sc.terrain.preprocess_dem('tests/test_data/johnson_vt/dem.tif')\n```\nNote that ```sc.terrain.preprocess_dem()``` uses default settings for ```pysheds```. It's worth experimenting with this step to try and improve results with your DEM.\n### Initialize Delineate object and get a stormcatchment\n```python\ngrid_epsg = 6589\ndelin = sc.Delineate(net, grid, fdir, acc, grid_epsg)\n\n# (x, y) coordinates in same CRS as grid\npour_pt = (484636, 237170)\nstormcatchment = delin.get_stormcatchment(pour_pt)\n```\n### Also get the original catchment (network unaware) to compare results\n```python\ncatchment = sc.delineate.get_catchment(pour_pt, grid, fdir, acc, 6589)\n```\n### Plot original catchment in blue and stormcatchment in orange\nThis uses the built-in ```net.draw()``` method, which adds a ```contextily``` basemap when ```add_basemap=True```. Note that the orange stormcatchment incorporates a large hillside \nthat pipes to the pour point.\n```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(12, 12))\nstormcatchment.plot(ax=ax, ec='orange', fc='orange', alpha=0.5, linewidth=3)\ncatchment.plot(ax=ax, ec='blue', fc='blue', alpha=0.5, linewidth=3)\nnet.draw(ax=ax, add_basemap=True)\n```\n![Plot of catchment and stormcatchment](img/example_stormcatchment.png)\n\n\n## Mapping flow sinks and sources\n\nFlow sinks are where flow can enter a subsurface system (such as a catchbasin). Flow sources are where flow can exit a subsurface system (such as an outfall). Initializing the ```network.Network``` requires either:\n- Manually setting two ```bool``` columns in the point ```GeoDataFrame```, named ```IS_SINK``` and ```IS_SOURCE``` that are set to ```True``` if a point falls into either category.\n- Defining a ```type_column``` in the point data, then supplying a ```list``` of ```sink_types``` and a ```list``` of ```source_types``` to lookup in the ```type_column```. This will then be mapped onto two ```bool``` columns in the point data named ```IS_SINK``` and ```IS_SOURCE```.\n\n\n## Determining subsurface flow direction\n\nResolving the flow direction of subsurface stormwater networks, which is done during ```network.Network.resolve_directions()```, can be done in three ways:\n1) ```from_sources```: This is the default. This method traces networks upstream from their discharge points. This assumes that subnetworks are comprised of one or more flow sinks that flow to a single flow source. If multiple flow sources are connected to a given flow sink, this method will run into issues since determining which flow source is the terminal node in the graph would need to incorporate pipe elevation data somehow.\n2) ```vertex_order```: This defines the subsurface flow direction using the order of verticies in the line data (flowing from the first to last vertex).\n3) ```vertex_order_r```: This is the same as above, but in reverse (flowing from last to first vertex).\n\nTwo other potential methods that are not yet implemented are:\n- Using surface elevation data as an analog for for subsurface pipe elevations. In flat urban settings this would likely have a lot of issues/inaccuracies.\n- Using pipe invert data from the attributes of point or line data. This would require manual preparation by the user but would be the most accurate method.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/t-ott/stormcatchments",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stormcatchments",
            "package_url": "https://pypi.org/project/stormcatchments/",
            "platform": null,
            "project_url": "https://pypi.org/project/stormcatchments/",
            "project_urls": {
                "Homepage": "https://github.com/t-ott/stormcatchments"
            },
            "release_url": "https://pypi.org/project/stormcatchments/0.2.0/",
            "requires_dist": [
                "geopandas",
                "networkx",
                "pysheds",
                "rtree"
            ],
            "requires_python": "",
            "summary": "Stormwater network aware catchment delineation",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15825602,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5bd6e33899919534578839e31c4db8ff",
                    "sha256": "55704719fd20c511ac32d6acdd940f256701a59d75094e0dc25d8dc3ae080b97"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5bd6e33899919534578839e31c4db8ff",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 18039,
                "upload_time": "2022-11-19T15:14:55",
                "upload_time_iso_8601": "2022-11-19T15:14:55.825850Z",
                "url": "https://files.pythonhosted.org/packages/5b/cf/28c4ee868f467b867dd15923c1c491b63887814ca48919f68c71ddb2ea26/stormcatchments-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d426420cc1147ddd8122d6579af0a86f",
                    "sha256": "daaa833b6a6c34c3ec9e0e55eb8730497dc981ba0ea7bbd8047529f0beaf0b5f"
                },
                "downloads": -1,
                "filename": "stormcatchments-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d426420cc1147ddd8122d6579af0a86f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9306997,
                "upload_time": "2022-11-19T15:15:16",
                "upload_time_iso_8601": "2022-11-19T15:15:16.035585Z",
                "url": "https://files.pythonhosted.org/packages/21/25/456417aee55ba5df13cac7179900c724080c43ff0a6c6f7d80126eb06384/stormcatchments-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}