{
    "0.0.1": {
        "info": {
            "author": "Chris Newville",
            "author_email": "chrisnewville1396@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Web Environment",
                "Framework :: AsyncIO",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/newvicx/ws_auth",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ws-auth",
            "package_url": "https://pypi.org/project/ws-auth/",
            "platform": "",
            "project_url": "https://pypi.org/project/ws-auth/",
            "project_urls": {
                "Changelog": "https://github.com/newvicx/ws_auth/blob/master/CHANGELOG.md",
                "Homepage": "https://github.com/newvicx/ws_auth",
                "Source": "https://github.com/newvicx/ws_auth"
            },
            "release_url": "https://pypi.org/project/ws-auth/0.0.1/",
            "requires_dist": [
                "websockets (==10.1)"
            ],
            "requires_python": ">=3.7",
            "summary": "Custom protocol for python websockets client that supports HTTPX style auth flows",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13070581,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f41fabb6153a30ebc13c22a21b15248f",
                    "sha256": "3295da2d45b542925c30381841fc55b09cfc15021b74f9c3b792a6b125b3dd4e"
                },
                "downloads": -1,
                "filename": "ws_auth-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f41fabb6153a30ebc13c22a21b15248f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 10446,
                "upload_time": "2022-02-10T18:45:53",
                "upload_time_iso_8601": "2022-02-10T18:45:53.782315Z",
                "url": "https://files.pythonhosted.org/packages/31/98/2ba642a92339f1d31c1b5a4b4b946c1cb7a4229f8bbf31b924ada2a136cb/ws_auth-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3059e25127c21349cafcb6393f04ab69",
                    "sha256": "5e4a8f36146e34e0190498745a0c06c53a24ecb609aa6d6d2fa2a759f815765f"
                },
                "downloads": -1,
                "filename": "ws_auth-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "3059e25127c21349cafcb6393f04ab69",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 10506,
                "upload_time": "2022-02-10T18:45:55",
                "upload_time_iso_8601": "2022-02-10T18:45:55.216620Z",
                "url": "https://files.pythonhosted.org/packages/70/f9/d0ed9f5aac7f2bdbe4904fa22f91e92ea3f61cf18dad4095412852c445b0/ws_auth-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "Chris Newville",
            "author_email": "chrisnewville1396@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Web Environment",
                "Framework :: AsyncIO",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP"
            ],
            "description": "\ufeff# WS_Auth\nCustom protocol for python websockets client that supports HTTPX style auth flows\n## Background\nws_auth is a simple package that extends the WebSocketClientProtocol class from [websockets](https://github.com/aaugustin/websockets) to support [HTTPX](https://www.python-httpx.org/advanced/#customizing-authentication)  style auth flows. ws_auth requires no setup other than an import statement, you can use the base websockets package as is with the additional option of adding auth flows\n## Installation\nYou can install ws_auth via pip\n\n    pip install ws-auth\n## Usage\n### Basic\nUsing ws_auth with websockets is as simple as importing it\n\n    import websockets\n    import ws_auth\n\t\n\tasync def main():\n\t\tasync with websockets.connect(\"wss://example.com\") as client:\n\t\t\tdata = await client.recv()\n\t\t\tprint(type(client))\nws_auth does not require you to pass the `create_protocol` argument to `connect()` to use the `WebsocketAuthProtocol`, it is used automatically. Of course you can still pass the `create_protocol` method if you want to extend the `WebsocketAuthProtocol`\n### Auth Flows\nBy default, the base `Auth` class is used in the `WebsocketAuthProtocol` instance. This is equivalent to no authentication. However, you can implement your own auth flows by inheriting from Auth and overwriting the auth_flow method.\n\n    import websockets\n    import ws_auth\n    from ws_auth import Auth\n\t\n\tclass ExampleAuth(Auth):\n\t\trequires_response_body = False\n\t\t\"\"\"\n\t\tTo implement a custom authentication scheme, subclass `Auth` and override\n\t\tthe `.auth_flow()` method. If the authentication scheme does I/O such as disk access\n\t\tor network calls, or uses synchronization primitives such as locks, you should override\n\t\t`.async_auth_flow()` instead of `.auth_flow()` to provide specialized implementations that\n\t\twill be used by `WebsocketAuthProtocol`.\n\t\t\n\t\tAdditional Notes\n\t\t- A dispatched request must have the signature Tuple[WebSocketURI, Headers]\n\t\t- Responses sent back to the flow generator have the signature \n\t\tTuple[StatusCode, ResponseHeaders, Request, Union[SSLSocket, None], Optional[Body]]\n\t\t\n\t\tdef auth_flow(self, request: Request) -> Generator[Request, Response, None]:\n\t\t\t\"\"\"\n\t\t\tExecute the authentication flow.\n\t\t\tTo dispatch a request, `yield` it:\n\t\t\t```\n\t\t\tyield request\n\t\t\t```\n\t\t\tThe client will `.send()` the response back into the flow generator. You can\n\t\t\taccess it like so:\n\t\t\t```\n\t\t\tresponse = yield request\n\t\t\t```\n\t\t\tA `return` (or reaching the end of the generator) will result in the\n\t\t\tclient returning the last response obtained from the server.\n\t\t\tYou can dispatch as many requests as is necessary.\n\t\t\t\"\"\"\n\t\t\tresponse = yield request\n\t\t\tstatus_code = response[0]\n\t\t\twsuri = request[0]\n\t\t\tif status_code != 101:\n\t\t\t\tprint(f\"auth_flow failed with status code {status_code} for uri {wsuri}\")\n\t\t\telse:\n\t\t\t\tprint(f\"auth_flow succeeded with status code {status_code} for uri {wsuri}\")\n\t\t\treturn\n\t\n\t# use the auth flow\n\tasync def main():\n\t\tauth = ExampleAuth()\n\t\tasync with websockets.connect(\"wss://example.com\", auth=auth) as client:\n\t\t\tdata = await client.recv()\n## Additional Notes\n\n - The authentication is handled during the opening handshake step of the websocket connection\n - websockets natively supports redirects, auth flows are always restarted if a redirect occurs and the Authorization header is stripped from the request\n## Supports\n - python >=3.7\n - websockets>=10.1\n\n\t\t\n\n\n\n# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n\n## v0.1.0 (Beta)\nMoving ws_auth to beta release\n- Websockets 10.2 support\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/newvicx/ws_auth",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ws-auth",
            "package_url": "https://pypi.org/project/ws-auth/",
            "platform": "",
            "project_url": "https://pypi.org/project/ws-auth/",
            "project_urls": {
                "Changelog": "https://github.com/newvicx/ws_auth/blob/master/CHANGELOG.md",
                "Homepage": "https://github.com/newvicx/ws_auth",
                "Source": "https://github.com/newvicx/ws_auth"
            },
            "release_url": "https://pypi.org/project/ws-auth/0.1.0/",
            "requires_dist": [
                "websockets (>=10.1)"
            ],
            "requires_python": ">=3.7",
            "summary": "Custom protocol for python websockets client that supports HTTPX style auth flows",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13070581,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca3d7475b1c785a7e205a029af37f653",
                    "sha256": "ffc492f9e62252a4c4e78931b2667eaa887b809f7ec636a621866c092c7194a1"
                },
                "downloads": -1,
                "filename": "ws_auth-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ca3d7475b1c785a7e205a029af37f653",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 10467,
                "upload_time": "2022-03-03T16:09:54",
                "upload_time_iso_8601": "2022-03-03T16:09:54.483861Z",
                "url": "https://files.pythonhosted.org/packages/6e/8b/605ad94fffa9a61afbfe49e15101912f8d8d185403f3c3ed14efae82ef77/ws_auth-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4a93ecdeba84c6b68aca92ae3b83eef4",
                    "sha256": "898e257a83f7f871a040419bd3c6326c5c3732d9ccdcb6a86df417762f41a320"
                },
                "downloads": -1,
                "filename": "ws_auth-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4a93ecdeba84c6b68aca92ae3b83eef4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 10265,
                "upload_time": "2022-03-03T16:09:56",
                "upload_time_iso_8601": "2022-03-03T16:09:56.168594Z",
                "url": "https://files.pythonhosted.org/packages/91/3b/94f56c5b7fa1966a5786410f0e368a9536a39f07d7eea46a740b7f145da4/ws_auth-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}