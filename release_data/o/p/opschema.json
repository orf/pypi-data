{
    "0.0.4": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opcheck",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opcheck"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.4/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1c32fe29e316570cc16a0e5fc73b55fc",
                    "sha256": "fa2f01b1791b1ef8ff30b4489bdd2539eab0918d97860a638dba190fea0add3d"
                },
                "downloads": -1,
                "filename": "opschema-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1c32fe29e316570cc16a0e5fc73b55fc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 56837,
                "upload_time": "2022-12-09T08:04:56",
                "upload_time_iso_8601": "2022-12-09T08:04:56.467166Z",
                "url": "https://files.pythonhosted.org/packages/c8/ba/02b77f55d0141622d58b44f37f696ac34db44c9d9221f5cdbfe699d8a4b3/opschema-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4c7f48356aa3fca06d70e4bbd3091ef6",
                    "sha256": "4699aa550f16705f4c856b66ec3b500baec674389a358f10d9795571b0c8137e"
                },
                "downloads": -1,
                "filename": "opschema-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "4c7f48356aa3fca06d70e4bbd3091ef6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 57666,
                "upload_time": "2022-12-09T08:04:58",
                "upload_time_iso_8601": "2022-12-09T08:04:58.430579Z",
                "url": "https://files.pythonhosted.org/packages/39/0d/6867f639a996a0dda9ae693b609e684a281c58275b10f74c92f5014f1101/opschema-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.7": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.7/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "18579fe0d0c20e27b236bc9f5ccd840b",
                    "sha256": "33e7b1b272fc9dc634c03f544151cbc9b39fe054fc64459e6309e3b48b32e781"
                },
                "downloads": -1,
                "filename": "opschema-0.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "18579fe0d0c20e27b236bc9f5ccd840b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 56851,
                "upload_time": "2022-12-09T08:26:12",
                "upload_time_iso_8601": "2022-12-09T08:26:12.840221Z",
                "url": "https://files.pythonhosted.org/packages/9c/1b/e4d1008ecc5ce39a86be8bee84c2f5cb74bf49c52e7421269f621f1d913a/opschema-0.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ef4084c35ea104d1c690eacdd7dba1a",
                    "sha256": "458aaabc5ad1b944234dcbdab5e59844e5dc03133e7f3f0e1e7e3a9fa63ad062"
                },
                "downloads": -1,
                "filename": "opschema-0.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "6ef4084c35ea104d1c690eacdd7dba1a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 57632,
                "upload_time": "2022-12-09T08:26:14",
                "upload_time_iso_8601": "2022-12-09T08:26:14.649560Z",
                "url": "https://files.pythonhosted.org/packages/fd/5b/a5e958b4bb15ab9022050d2924b0e94946e94b68935030cf48e52b9c8359/opschema-0.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.8": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.8/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cbb13aaf330318cd598087d4ba20bbfe",
                    "sha256": "8a0c88284de8f944510692d47e31e7caf31761b9ee61b55e60fd0eca7e55fdd6"
                },
                "downloads": -1,
                "filename": "opschema-0.0.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cbb13aaf330318cd598087d4ba20bbfe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 66564,
                "upload_time": "2022-12-09T08:36:41",
                "upload_time_iso_8601": "2022-12-09T08:36:41.950473Z",
                "url": "https://files.pythonhosted.org/packages/64/32/75b5641dbf6e291425015c7038c58cefe442dc5db5332162d4119e081708/opschema-0.0.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9fc99593c8f276e237b7405f27fa6530",
                    "sha256": "e38d17a19a2b69a400b69ddeb50fe5fa09c81c69918c0d3fa3ed2e7288cf77f5"
                },
                "downloads": -1,
                "filename": "opschema-0.0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "9fc99593c8f276e237b7405f27fa6530",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 58014,
                "upload_time": "2022-12-09T08:36:43",
                "upload_time_iso_8601": "2022-12-09T08:36:43.670262Z",
                "url": "https://files.pythonhosted.org/packages/09/d0/3379050b089b17208a9a5b547c9e1a3c2f57f77250cf24e34469b61471a4/opschema-0.0.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.9": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.9/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "54cbc3b6b9477491a3a52d4ef87ad9a8",
                    "sha256": "fff7cf896175d5087f03543e556b943cf1853eeebf55dea779bad1666524e0c9"
                },
                "downloads": -1,
                "filename": "opschema-0.0.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "54cbc3b6b9477491a3a52d4ef87ad9a8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 65704,
                "upload_time": "2022-12-09T09:27:11",
                "upload_time_iso_8601": "2022-12-09T09:27:11.716502Z",
                "url": "https://files.pythonhosted.org/packages/e9/2b/30a8aeb8121b55dd545b3c5353a518c2085da6197d1448dc60239d73c823/opschema-0.0.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ed6564c7b44bf38c3abc9b39bdff47c",
                    "sha256": "012a39529533b1888169ac34c98814b05616c209b785470b26e46db48762a081"
                },
                "downloads": -1,
                "filename": "opschema-0.0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "5ed6564c7b44bf38c3abc9b39bdff47c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 56574,
                "upload_time": "2022-12-09T09:27:13",
                "upload_time_iso_8601": "2022-12-09T09:27:13.925479Z",
                "url": "https://files.pythonhosted.org/packages/f8/5c/a4ef5c896e244fa86b32a996c82ebe0df09f82f0f35ae77698f26dfa40b5/opschema-0.0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.0/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7085ac584f7a7ff7e8664313e3422799",
                    "sha256": "2de78bc86728d3d2b9c4b61d40ffd5c6d09e1719fe490a921bfa1d0724141aab"
                },
                "downloads": -1,
                "filename": "opschema-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7085ac584f7a7ff7e8664313e3422799",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 68290,
                "upload_time": "2022-12-11T04:02:27",
                "upload_time_iso_8601": "2022-12-11T04:02:27.100332Z",
                "url": "https://files.pythonhosted.org/packages/17/28/46879afc177a07630ac2bbea4c647e3b489a1f9354a388f9bf209e4fa49a/opschema-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3ec671e902e3458ba5877823ac52e8f4",
                    "sha256": "a71758b72c2c1d307da1680e49da15f06ba4b21d75910c56a1479745efbe85bc"
                },
                "downloads": -1,
                "filename": "opschema-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "3ec671e902e3458ba5877823ac52e8f4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 62773,
                "upload_time": "2022-12-11T04:02:29",
                "upload_time_iso_8601": "2022-12-11T04:02:29.175639Z",
                "url": "https://files.pythonhosted.org/packages/ac/07/5313552ee0def3d4bb026e88b94747a3186608384767d9000c0eb8bce87c/opschema-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.1/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5fec57a010ba37cef29c99b1979763a",
                    "sha256": "883843b3738eac1937aef2d3e0d0420342debae5847602fc37df1a7c6532d714"
                },
                "downloads": -1,
                "filename": "opschema-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d5fec57a010ba37cef29c99b1979763a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 70319,
                "upload_time": "2022-12-13T19:07:06",
                "upload_time_iso_8601": "2022-12-13T19:07:06.569985Z",
                "url": "https://files.pythonhosted.org/packages/8d/cf/ddc5db7fc2e3db0a2f3d9f0703a0397cbf7818299f56daeac8308666964c/opschema-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bdbe7d47b2f60c331db091e84ce35583",
                    "sha256": "4fe27ee412f8bdfd8a3d2b8f2dcd5648f47021a7a7687d3622148ac4f26ed103"
                },
                "downloads": -1,
                "filename": "opschema-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bdbe7d47b2f60c331db091e84ce35583",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 66289,
                "upload_time": "2022-12-13T19:07:08",
                "upload_time_iso_8601": "2022-12-13T19:07:08.422130Z",
                "url": "https://files.pythonhosted.org/packages/45/7c/0a103166430c1eae063b031b3270368491d66b697abf8c5e1c90addbff1c/opschema-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.2/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "927646bd215d60721bc5a38b8ced4a3b",
                    "sha256": "eb8333ff7ed0065c931204565239a8273795244c1e5f91cb9806b0e7464de06c"
                },
                "downloads": -1,
                "filename": "opschema-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "927646bd215d60721bc5a38b8ced4a3b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 71227,
                "upload_time": "2022-12-15T07:06:58",
                "upload_time_iso_8601": "2022-12-15T07:06:58.261236Z",
                "url": "https://files.pythonhosted.org/packages/8a/ca/ee2549cb3fda8d653c6c3efe39e728422b33727bf00fb89cf57ca9f6c7b9/opschema-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d4511e2c69ca6be8e291b0cd82db2bda",
                    "sha256": "a6fb9c48c24d4e78a96c8dcb9f5b506fb5977c99430fb17941df0937a4e96f7c"
                },
                "downloads": -1,
                "filename": "opschema-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "d4511e2c69ca6be8e291b0cd82db2bda",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 67551,
                "upload_time": "2022-12-15T07:07:00",
                "upload_time_iso_8601": "2022-12-15T07:07:00.141880Z",
                "url": "https://files.pythonhosted.org/packages/4f/ee/76d72f2ea4d64cba4e12ead29fc25a5438a70c377e2d7f2e2527d36f43df/opschema-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "\n# opschema \n\nA system to build input constraint schemas for TensorFlow operations\n\nInstall from PyPI:\n\n    pip install opschema\n\n# Motivation\n\nTensorFlow Python is a workhorse of the Machine Learning world used by many\nthousands of developers.  However, as an API, it is challenging.  Tensor ops\nare often highly polymorphic with intricate shape and other required\nrelationships in inputs.  If these are not met, often the exception will arise\nfrom several stack levels down the codebase.  Because of this, it is\nfrequently not clear to the user what input constraints are violated and what\nshould be done to correct the error.\n\nDocumentation very often does not fully describe the legal inputs to ops. Finding\nout whether a particular call is legal must be done by trial and error in many\ncases.\n\nIn some cases, the API requires redundant information to be provided.  For\nexample,\n[tf.nn.atrous_conv2d_transpose](https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d_transpose)\nand\n[tf.nn.conv_transpose](https://www.tensorflow.org/api_docs/python/tf/nn/conv_transpose)\nrequire an `output_shape` parameter which requires the user to restate the\n'batch' and 'out_channel' dimensions, and compute the out_height and out_width\nmanually.  This is also the case with\n\nMany ops accept a `data_format` parameter which takes on values such as 'NCW',\n'NCHW', 'NCDHW', 'NWC', 'NHWC' and 'NDHWC'.  This parameter is really\ncommunicating the notion of a *layout* which is either *channel first* or\n*channel last*.  Which variety of `data_format` is needed is already\ncommunicated by the `filter` shape.  \n\nIn fact, contraray to documentation, \n[tf.nn.convolution](https://www.tensorflow.org/api_docs/python/tf/nn/convolution)\nactually does accept 'NWC', 'NCW' values for `data_format` for some 2D\nconvolutions.\n\n# Introduction\n\nopschema provides an API for building *op schemas* for representing TensorFlow\noperations.  Once written, a schema represents a single operation, such as\n`tf.nn.convoution` or `tf.nn.bias_add`, etc.  The schema defines what inputs are\nlegal for the op.  Once defined, it provides four functionalities:\n\n* provide better error messages than the exceptions TensorFlow issues\n\n* generate a complete set of legal (and a particular set of illegal) inputs for\n  the op\n\n* provide mathematically precise documentation of legal call\n  configurations\n\n* empirically validate schema correctness against TensorFlow\n  op, given in TP, TN, FP and FN counts\n\n## Synopsis\n\nList available op schemas (defined under opschema/ops)\n\n    python -m opschema.cl list\n\nExplain an op, optionally including a list of all possible call configurations\n\n    python -m opschema.cl explain OP_PATH [-i|--include_inventory]\n\nPrint the graphs associated with an op in .pdf format (requires graphviz)\n\n    python -m opschema.cl graph OP_PATH OUT_DIR\n\nValidate an op schema against the TensorFlow op it represents  \n\n    python -m opschema.cl validate OP_PATH OUT_DIR [--test_ids] [--skip_ids] \\\n        [--max_dtype_err=0] [--rand_seed=0]\n\n## What it does\n\n`opschema` provides an API for writing *schemas* for TensorFlow ops.  A schema\nhere means a set of rules that define what combinations of inputs are legal.\nOnce a schema is defined, you can use opschema to generate a complete set of\ntest inputs for the op for all legal combinations of tensor dtypes, shapes, and\ncombinations of other control arguments such as `data_format` etc.  In\naddition, a subset of illegal inputs can be generated as well, which are useful\nfor comparing TensorFlow's exception with opschema's error message.\n\n## Example Error Messages\n\nSome examples TensorFlow calls that raised exceptions.  Each example shows the\nargument values (tensors are abbreviated to shape+dtype), the TensorFlow\nexception text, and the error message from opschema.\n\n\n\n## How it works\n\n`opschema` defines an op schema using a few basic concepts common to all ops.\nTo best illustrate these I'll illustrate them with the example of the\n`tf.nn.convolution` schema.\n\n    python -m opschema.cl explain tf.nn.convolution -i\n\n```\nSchema for tf.nn.convolution\n\nIndexes\n\nIndex  Description           \nb      batch                 \ni      input spatial         \nf      filter spatial        \ng      dilated filter spatial\ns      strides               \nd      dilations             \nk      filter input channel\nj      output filter         \nl      output channel        \no      output spatial        \n\nSignatures\n\ninput  filters  strides  dilations  return[0]  data_format             \nbki    fjl      s        d          blo        ['NCW', 'NCHW', 'NCDHW']\nbik    fjl      s        d          bol        ['NWC', 'NHWC', 'NDHWC']\n\nIndex ranks\n\nrank(b) in [1, 5]     \nrank(i) in [1, 3]     \nrank(f) = rank(i)     \nrank(g) = rank(i)     \nrank(s) = rank(i)     \nrank(d) = rank(i)     \nrank(k) = 1           \nrank(j) = 1           \nrank(l) = 1           \nrank(o) = rank(i)     \n\nComputed dimensions\n\ndilated_filter_spatial = (filter_spatial - 1) * dilations + 1\noutput_spatial = ceil(input_spatial / strides)   [padding = SAME]\noutput_spatial = ceil((input_spatial + dilated_filter_spatial - 1) / strides)   [padding = VALID]\n\ng = (f - 1) * d + 1\no = ceil((i + g - 1) / s)   [padding = VALID]\no = ceil(i / s)   [padding = SAME]\n\nIndex predicates\n\ndilated_filter_spatial must be >= 0\noutput_spatial must be >= 0\nstrides and dilations dimensions cannot both contain an element over 1\ninput_channel must be divisible by output_filter\n\ng must be >= 0\no must be >= 0\ns and d dimensions cannot both contain an element over 1\nk must be divisible by j\n\nDType Rules\n\ninput.dtype in (int32, float16, float32, float64, bfloat16)\nfilters.dtype = input.dtype\n\nExcluded DType Combos\n\ninput.dtype  rank(i)  layout\nint32        1,2      0     \nint32        3        *     \nbfloat16     1,2      *     \nbfloat16     3        0     \n\nInventory\n\ninput.shape  input.dtype  filters.shape  filters.dtype  strides  data_format  dilations  return[0].shape\nbki          float16      fjl            float16        s        NCW          d          blo            \nbki          float32      fjl            float32        s        NCW          d          blo            \nbki          float64      fjl            float64        s        NCW          d          blo            \nbik          int32        fjl            int32          s        NWC          d          bol            \nbik          float16      fjl            float16        s        NWC          d          bol            \nbik          float32      fjl            float32        s        NWC          d          bol            \nbik          float64      fjl            float64        s        NWC          d          bol            \nbki          float16      fjl            float16        s        NCW          d          blo            \nbki          float32      fjl            float32        s        NCW          d          blo            \nbki          float64      fjl            float64        s        NCW          d          blo            \nbik          int32        fjl            int32          s        NWC          d          bol            \nbik          float16      fjl            float16        s        NWC          d          bol            \nbik          float32      fjl            float32        s        NWC          d          bol            \nbik          float64      fjl            float64        s        NWC          d          bol            \nbkii         float16      ffjl           float16        ss       NCHW         dd         bloo           \nbkii         float32      ffjl           float32        ss       NCHW         dd         bloo           \n...\n```\n\n`opschema` uses three abstractions to define the schema:  *index*, *signature*,\nand *layout*.  The first section lists the indices:\n\n\n## Index section\n\n```bash\nIndex  Description           \nb      batch                 \ni      input spatial         \nf      filter spatial        \ng      dilated filter spatial\ns      strides               \nd      dilations             \nk      input channel         \nj      filter input channel \nl      output channel        \no      output spatial        \n```\nopschema Indexes are declared with\n[add_index](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L899) \nas in:\n\n```python\n# excerpt from opschema/ops/tf/nn/convolution.py\n# declare an index called 'batch' which can range in rank from 1 to 5\nop.add_index('b', 'batch', (1,5))\nop.add_index('i', 'input spatial', (1,3))\n\n# declare index 'f' to have rank equivalent to index 'i'\nop.add_index('f', 'filter spatial', 'i')\n...\n```\n\nopschema `Index` objects represent shaped quantities.  They are not always\ninstantiated directly in input or output tensors, however.  Any quantities that\nparticipate in computations that involve shapes, even intermediate\ncalculations, can be declared as `Index` entities.  In the example above,\n'strides' and 'dilations' are ordinary parameters, while 'dilated filter\nspatial' is an intermediate index that does not appear in any inputs or outputs\nof the op.\n\n\n## Signatures section\n\n```bash\nSignatures\n\ninput  filters  strides  dilations  return[0]  data_format             \nbki    fjl      s        d          blo        ['NCW', 'NCHW', 'NCDHW']\nbik    fjl      s        d          bol        ['NWC', 'NHWC', 'NDHWC']\n```\n\nThis section shows a table with one *layout* for each row.  Each column\nrepresents a shape-bearing parameter (which may be a tensor, but may not).  The cells in\nthe row define *signatures*, which are concatenations of the single letter\ncodes for `Index` objects.  For example, the 'filters' parameter has signature\n'fjl', meaning that its shape is interpreted as a set of dimensions 'filter\nspatial', then 'filter input channel', then 'output channel'.\n\nThe individual arguments are registered with the schema depending on the kind\nof argument.  Input tensors are registered with [arg_tensor]( https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1499)\nand return tensors with [return_tensor]( https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1776).\nThe signatures are declared with these API calls, and the layouts are\nassociated with the `data_format` parameter using the API call \n[arg_layout](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1389).\n\nThe OpSchema API calls are:\n\n```python\n# excerpt from opschema/ops/tf/nn/convolution.py\nformats = {\n        'NCW': (0, 1), # layout 0, rank(i) = 1\n        'NCHW': (0, 2), # etc...\n        'NCDHW': (0, 3),\n        'NWC': (1, 1),\n        'NHWC': (1, 2),\n        'NDHWC': (1, 3),\n        None: (1, None),  # default layout is layout 1, regardless of rank(i)\n        }\n\n# argument 'data_format' determines the layout according to the 'formats' map\n# and the rank of index 'i'\nop.arg_layout('data_format', formats, 'i')\n\n# tensor 'input' is registered with signatures for each layout\nop.arg_tensor('input', 'bki', 'bik')\nop.arg_tensor('filters', 'fjl')\n```\n\n## Index ranks\n\n\n```bash\nIndex ranks\n\nrank(b) in [1, 5]     \nrank(i) in [1, 3]     \nrank(f) = rank(i)     \nrank(g) = rank(i)     \nrank(s) = rank(i)     \nrank(d) = rank(i)     \nrank(k) = 1           \nrank(j) = 1           \nrank(l) = 1           \nrank(o) = rank(i)     \n```\n\nThe Index ranks section defines rank constraints for each `Index` object.  An\nIndex rank means the same as for a tensor, but for a subset of semantically\nrelated indices.  For instance, 'filter.rank' is equal to `rank(f) + rank(j) +\nrank(l)`.  According to the above constraints, this would imply it could range\nfrom 3 to 5.  All of the above rank constraints are determined during index\ncreation, but an additional API function [limit_ranks](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1246)\ncan be used.\n\n## Computed dimensions\n\n\n```bash\nComputed dimensions\n\ndilated_filter_spatial = (filter_spatial - 1) * dilations + 1\noutput_spatial = ceil(input_spatial / strides)   [padding = SAME]\noutput_spatial = ceil((input_spatial + dilated_filter_spatial - 1) / strides)   [padding = VALID]\n\ng = (f - 1) * d + 1\no = ceil((i + g - 1) / s)   [padding = VALID]\no = ceil(i / s)   [padding = SAME]\n```\n\nThe Computed dimensions section shows the formulas registered for Computed Indexes.\nThe formulas are shown in snake-cased\nform and single-letter-code form.  For formulas that depend on other op\nparameters (in this case the 'padding' parameter), the variants of the formulas\nare shown.  These formulas are used both to compute valid inputs during error\nchecking, and to generate readable formulas for context in error messages.\n\nComputed dimensions are registered with the API call [OpSchema.comp_dims](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1162)\nand related variants.\n\n```python\n# excerpt from opschema/ops/tf/nn/convolution.py\nfrom opschema.complib import dilate, dilate_t, strided_conv, strided_conv_t\n\n# Index 'g' (dilated filter spatial) is computed using the dilate function\n# from f (filter spatial) and d (dilation)\nop.comp_dims_cw('g', dilate, dilate_t, 'fd') \n\n# Index 'o' (output spatial) is computed using the strided_conv function from \n# index 'i' (input spatial), 'g' (dilated filter spatial), and 's' (stride)\nop.comp_dims_cw('o', strided_conv, strided_conv_t, 'igs', 'padding')\n```\n\nBecause certain formulas recur in many ops, such functions may be found in\n`opschema/complib.py`.  A numeric version operating on integers and a template\nversion interpolating string representations must be provided.  For example:\n\n```python\n# excerpt from opschema/complib.py\ndef strided_conv(i, f, s, padding):\n    if padding == 'VALID':\n        return ceildiv(i - f + 1, s)\n    else:\n        return ceildiv(i, s)\n\ndef strided_conv_t(i, f, s, padding):\n    if padding == 'VALID':\n        return f'ceil(({i} + {f} - 1) / {s})'\n    else:\n        return f'ceil({i} / {s})' \n```\n\nBecause the schema overall is defined as a python function, any custom compute\nfunctions may be defined as local functions as well.  Placing them in\n`opschema/complib.py` is just a convenience.\n\n## Index Predicates\n\n```bash\nIndex predicates\n\ndilated_filter_spatial must be >= 0\noutput_spatial must be >= 0\nstrides and dilations dimensions cannot both contain an element over 1\ninput_channel must be divisible by filter_input_channel \n\ng must be >= 0\no must be >= 0\ns and d dimensions cannot both contain an element over 1\nk must be divisible by j\n```\n\nPredicate functions may be registered on individual or combinations of indices.\nA non-negativity predicate is automatically registered on all computed indices.\nIn the above example, these are 'dilated filter spatial' and 'output spatial'.\nThe schema author may register additional predicates.  In the case of\n`tf.nn.convolution`, 'input channel' must be disivible by 'filter input\nchannel'.  In fact this is not documented, but it is empirically true. \n\nPredicates are registered with API call\n[dims_pred](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1710)\nand its component-wise variant, as follows:\n\n```python\n# excerpt from opschema/ops/tf/nn/convolution.py\n# only stride or dilation components can be over 1, not both (this is documented)\nop.dims_pred('s-d exclusion', \n        predlib.not_both_over_one,\n        predlib.not_both_over_one_templ, 'sd')\n\n# input channel must be disivible by filter input channel (not documented)\nop.dims_pred_cw('k % j == 0', predlib.divis_by, predlib.divis_by_t, 'kj')\n```\n\n## DType constraints\n\n```bash\nDType Rules\n\ninput.dtype in (int32, float16, float32, float64, bfloat16)\nfilters.dtype = input.dtype\n\nExcluded DType Combos\n\ninput.dtype  rank(i)  layout\nint32        1,2      0     \nint32        3        *     \nbfloat16     1,2      *     \nbfloat16     3        0     \n```\n\nConstraints on allowed DTypes are given first as a set of broad rules, and then\nspecific exclusions.  The DType Rules can be one of two forms - either specify\nthat some tensor can take on certain dtypes, or specify that a tensor dtype\nmust be the same as another tensor.\n\nThe Excluded DType Combos section specifies combinations of dtype, index rank,\nand possibly layout which are excluded.  Usually this is done because such\ncombinations are not implemented.  In the above example, `int32` Conv1D and\nConv2D are not implemented specifically for layout 0, which means data_formats\n'NCW', 'NCHW'.\n\nDType constraints are declared using API calls \n[valid_dtypes](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1269),\n[equate_dtypes](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1305),\n[exclude_combos](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1327)\n\nas shown here:\n\n```python\n# excerpt from opschema/ops/tf/nn/convolution.py\nop.valid_dtypes('input', ('int32', 'float', 'bfloat16'))\nop.equate_dtypes('filters', 'input')\nop.exclude_combos('input', 'int32', 'i', (1,2), LAYOUT, 0)\nop.exclude_combos('input', 'int32', 'i', 3)\nop.exclude_combos('input', 'bfloat16', 'i', (1,2))\nop.exclude_combos('input', 'bfloat16', 'i', 3, LAYOUT, 0)\n```\n\n# Other Constraints\n\nThere are other relationships between inputs in certain TensorFlow ops.  For\nexample, with `tf.gather_nd`, the last dimension of the `indices` shape\ndetermines the rank of the 'read location' (r) index.  This is declared using\nthe API function [rank_dims_constraint](https://github.com/hrbigelow/opschema/blob/master/opschema/schema.py#L1698).\nFor a complete list of API functions, see `opschema.schema.OpSchema` class.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.3/",
            "requires_dist": [
                "tensorflow",
                "fire"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16123288,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7e7785314571e802fa84db628e3dad64",
                    "sha256": "bde61b04f4f1f4556f4f053458e21bca8374b6ac027765c587190c91e4234c06"
                },
                "downloads": -1,
                "filename": "opschema-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7e7785314571e802fa84db628e3dad64",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 72796,
                "upload_time": "2022-12-16T08:09:42",
                "upload_time_iso_8601": "2022-12-16T08:09:42.320113Z",
                "url": "https://files.pythonhosted.org/packages/ab/c4/669206ec3b04c67511689e181195d68a6431fece6e87b81edb5b19f15cb3/opschema-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d2ec0796314b2c5f45a246e8913d06cd",
                    "sha256": "16671abb846589be7bba3032da762fa8385b5bbe39b3ff135e159fd8da068335"
                },
                "downloads": -1,
                "filename": "opschema-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "d2ec0796314b2c5f45a246e8913d06cd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 68472,
                "upload_time": "2022-12-16T08:09:43",
                "upload_time_iso_8601": "2022-12-16T08:09:43.923727Z",
                "url": "https://files.pythonhosted.org/packages/14/3f/3176077d2907cec5829acfcd00ba22d2d589c289f3d70d79580454654537/opschema-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}