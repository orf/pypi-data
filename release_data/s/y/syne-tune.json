{
    "0.11": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": "",
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.11/",
            "requires_dist": [
                "boto3",
                "sagemaker (>=2.32.0)",
                "dill",
                "PyYaml",
                "pandas",
                "ujson",
                "typing-extensions",
                "pytest",
                "torchvision ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "torch ; extra == 'benchmarks'",
                "sklearn ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "torch ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy ; extra == 'extra'",
                "autograd ; extra == 'extra'",
                "requests ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "scipy ; extra == 'gpsearchers'",
                "autograd ; extra == 'gpsearchers'",
                "requests ; extra == 'gpsearchers'",
                "ray[tune] ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.11",
            "yanked": true,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "229b234cf3537750839daac3e369f1a2",
                    "sha256": "a0a7457bfd9850cc607fee6661c401a8c9f033a757c71e24c32d47e2a7c083c7"
                },
                "downloads": -1,
                "filename": "syne_tune-0.11-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "229b234cf3537750839daac3e369f1a2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 341534,
                "upload_time": "2021-11-23T15:03:21",
                "upload_time_iso_8601": "2021-11-23T15:03:21.580190Z",
                "url": "https://files.pythonhosted.org/packages/62/24/987475435cd5b632b1dc346ef45703d9026dded55c5925ca69e52fda5e56/syne_tune-0.11-py3-none-any.whl",
                "yanked": true,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "eeea961e59671ba5d24a2ceadae85732",
                    "sha256": "0e20f5734f4af7992efe7931dbfa932b3d11833f3ba9afb1bcc6f067247762d2"
                },
                "downloads": -1,
                "filename": "syne_tune-0.11.tar.gz",
                "has_sig": false,
                "md5_digest": "eeea961e59671ba5d24a2ceadae85732",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 236403,
                "upload_time": "2021-11-23T15:03:23",
                "upload_time_iso_8601": "2021-11-23T15:03:23.175675Z",
                "url": "https://files.pythonhosted.org/packages/06/03/ed8ef97933565e37155c3817b0ce7a6c4341bdfa4d72c52525958e4f5ab7/syne_tune-0.11.tar.gz",
                "yanked": true,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.12": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": "",
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.12/",
            "requires_dist": [
                "boto3",
                "sagemaker (>=2.32.0)",
                "dill",
                "numpy (>=1.16.0)",
                "PyYaml",
                "pandas",
                "ujson",
                "typing-extensions",
                "pytest",
                "torchvision ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "torch ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "sklearn ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "torch ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "requests ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "requests ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.12",
            "yanked": true,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1dcdd9357478843bbcb469416454ad2c",
                    "sha256": "3aa723b143138b42cb20dca97cde33ee8e628410865f857f6bcde10694da4dba"
                },
                "downloads": -1,
                "filename": "syne_tune-0.12-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1dcdd9357478843bbcb469416454ad2c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 398904,
                "upload_time": "2022-01-31T12:34:34",
                "upload_time_iso_8601": "2022-01-31T12:34:34.396007Z",
                "url": "https://files.pythonhosted.org/packages/ed/f3/58217ae4ff2d559d971b9b0f5a90b8de885f395a901111b0263cb664dbcc/syne_tune-0.12-py3-none-any.whl",
                "yanked": true,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b098694c109c09385686970485db6dcd",
                    "sha256": "2822b94b2ba71e624fe42a8c7d3b13c68881c4d9e3430314d872ddd53aadc02f"
                },
                "downloads": -1,
                "filename": "syne_tune-0.12.tar.gz",
                "has_sig": false,
                "md5_digest": "b098694c109c09385686970485db6dcd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 280190,
                "upload_time": "2022-01-31T12:34:38",
                "upload_time_iso_8601": "2022-01-31T12:34:38.630210Z",
                "url": "https://files.pythonhosted.org/packages/40/7a/b098851f82d74d73397943f529e1de552deb1c6f5e5864661457c8417add/syne_tune-0.12.tar.gz",
                "yanked": true,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.12a0": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": "",
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.12a0/",
            "requires_dist": [
                "boto3",
                "sagemaker (>=2.32.0)",
                "dill",
                "numpy (>=1.16.0)",
                "PyYaml",
                "pandas",
                "ujson",
                "typing-extensions",
                "pytest",
                "torch ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "torchvision ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "sklearn ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "torch ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "requests ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "requests ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.12a0",
            "yanked": true,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "284d2aac3d6a23d2d645fb91b37f0182",
                    "sha256": "41f3a96572ac89353817eb8e39ba1fbcb50c476ad38929037a4d801c633ed50b"
                },
                "downloads": -1,
                "filename": "syne_tune-0.12a0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "284d2aac3d6a23d2d645fb91b37f0182",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 398941,
                "upload_time": "2022-01-31T12:34:36",
                "upload_time_iso_8601": "2022-01-31T12:34:36.631474Z",
                "url": "https://files.pythonhosted.org/packages/6b/eb/2fc404632a92d608b5e0c2424ea77643db55b7402fbd2f9908224bc8c7ae/syne_tune-0.12a0-py3-none-any.whl",
                "yanked": true,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c5e6b13c047fe6d72be67e4559470f3d",
                    "sha256": "23d1e880728c5e9e060943183992bf037f74327d0aa47a60bdab90a0a2ff62d9"
                },
                "downloads": -1,
                "filename": "syne_tune-0.12a0.tar.gz",
                "has_sig": false,
                "md5_digest": "c5e6b13c047fe6d72be67e4559470f3d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 280226,
                "upload_time": "2022-01-31T12:34:40",
                "upload_time_iso_8601": "2022-01-31T12:34:40.527519Z",
                "url": "https://files.pythonhosted.org/packages/85/ce/05acf5830d3ed0ed67fd8b6ab72ac1c066257cad083d9f933adfefe0b664/syne_tune-0.12a0.tar.gz",
                "yanked": true,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": null,
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.2/",
            "requires_dist": [
                "boto3",
                "sagemaker (>=2.32.0)",
                "dill",
                "numpy (>=1.16.0)",
                "PyYaml",
                "pandas",
                "ujson",
                "typing-extensions",
                "pytest",
                "torch ; extra == 'benchmarks'",
                "torchvision ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "sklearn ; extra == 'blackbox-repository'",
                "xgboost ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "torch ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "requests ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "xgboost ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "requests ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bf9a875e2a0f066936564bfeb3ea3abd",
                    "sha256": "ebe72a78ba25f29c81bfb589a5ccca4b6574cf684f236e2c4e8ef59ceaea9b1d"
                },
                "downloads": -1,
                "filename": "syne_tune-0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "bf9a875e2a0f066936564bfeb3ea3abd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 414021,
                "upload_time": "2022-03-17T13:25:58",
                "upload_time_iso_8601": "2022-03-17T13:25:58.691812Z",
                "url": "https://files.pythonhosted.org/packages/5a/7a/ce56767a17aac58b04ae00b99e7849d2a61c61b9a4a7adab51302e586884/syne_tune-0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a42a22f025a9ede04ea2aaa71a220c44",
                    "sha256": "862aed0ce2b62b17d932a7e7abd8805278cac0eba2298f67760d549c682848aa"
                },
                "downloads": -1,
                "filename": "syne_tune-0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a42a22f025a9ede04ea2aaa71a220c44",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 291945,
                "upload_time": "2022-03-17T13:26:00",
                "upload_time_iso_8601": "2022-03-17T13:26:00.573842Z",
                "url": "https://files.pythonhosted.org/packages/db/7d/b691fb3e183925e766b08ae13a73cca37a9cf00cb12614af22a28d5f0b0c/syne_tune-0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": null,
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.3/",
            "requires_dist": [
                "boto3",
                "sagemaker (>=2.32.0)",
                "dill",
                "numpy (>=1.16.0)",
                "PyYaml",
                "pandas",
                "ujson",
                "typing-extensions",
                "torchvision ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "torch ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "sklearn ; extra == 'blackbox-repository'",
                "xgboost ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "torch ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "xgboost ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "botorch (>=0.6.2) ; extra == 'extra'",
                "pytest ; extra == 'extra'",
                "black (==22.1.0) ; extra == 'extra'",
                "flake8 ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "37e455cddde397cc23bacb9d218de83f",
                    "sha256": "e523d08a6bbc68b8165cac430c0f4125b23c958a26fe491aa6e124003c54d17d"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "37e455cddde397cc23bacb9d218de83f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 469361,
                "upload_time": "2022-07-05T11:52:09",
                "upload_time_iso_8601": "2022-07-05T11:52:09.606491Z",
                "url": "https://files.pythonhosted.org/packages/5a/33/2d17afc5d827342521528ec1d4fed1a0bea365d185b4c67a8bdb0e440d21/syne_tune-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fcd1960a52b54f70525cff83ea7621e6",
                    "sha256": "9e569b4ce7460db65f8c8ebd0b7f3b015c624a1b8f0d4384e143b99b88bb9c0f"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "fcd1960a52b54f70525cff83ea7621e6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 327259,
                "upload_time": "2022-07-05T11:52:11",
                "upload_time_iso_8601": "2022-07-05T11:52:11.938965Z",
                "url": "https://files.pythonhosted.org/packages/76/aa/374da91100e7ac8cb189986c288a6a679c997345619a374cfc67046a6c2c/syne_tune-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6390b195ce7a647f576d1e33db314695",
                    "sha256": "9c7986b29edad82155423aaf3e8424bc3311ac7e532d71ece8acc21c89158d2b"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6390b195ce7a647f576d1e33db314695",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 469338,
                "upload_time": "2022-07-05T11:52:06",
                "upload_time_iso_8601": "2022-07-05T11:52:06.572094Z",
                "url": "https://files.pythonhosted.org/packages/e0/b6/0e149dea0c63a75f8f0e9b489a47fe48c6644fef574f3781c06f59743ab8/syne_tune-0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.2": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": null,
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.3.2/",
            "requires_dist": [
                "numpy (>=1.16.0)",
                "dill",
                "pandas",
                "typing-extensions",
                "boto3 ; extra == 'aws'",
                "sagemaker (>=2.32.0) ; extra == 'aws'",
                "PyYaml ; extra == 'aws'",
                "ujson ; extra == 'aws'",
                "torch ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "torchvision ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "sklearn ; extra == 'blackbox-repository'",
                "xgboost ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "ray[tune] (>=2.0.0) ; extra == 'extra'",
                "sklearn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "xgboost ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "botorch (>=0.6.2) ; extra == 'extra'",
                "pytest ; extra == 'extra'",
                "black (==22.1.0) ; extra == 'extra'",
                "flake8 ; extra == 'extra'",
                "boto3 ; extra == 'extra'",
                "sagemaker (>=2.32.0) ; extra == 'extra'",
                "PyYaml ; extra == 'extra'",
                "ujson ; extra == 'extra'",
                "onnxruntime (>=1.10.0) ; extra == 'extra'",
                "configspace ; extra == 'extra'",
                "yahpo-gym ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] (>=2.0.0) ; extra == 'raytune'",
                "sklearn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'",
                "onnxruntime (>=1.10.0) ; extra == 'yahpo'",
                "pyyaml ; extra == 'yahpo'",
                "configspace ; extra == 'yahpo'",
                "pandas ; extra == 'yahpo'",
                "yahpo-gym ; extra == 'yahpo'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d60eb01a338cb202f310a92473e8f8a6",
                    "sha256": "569eb77a93e16ca471209a07884d9ccf7ed229b57949b5b5c5d3838ad61f3f03"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d60eb01a338cb202f310a92473e8f8a6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 537747,
                "upload_time": "2022-10-14T17:57:10",
                "upload_time_iso_8601": "2022-10-14T17:57:10.298061Z",
                "url": "https://files.pythonhosted.org/packages/33/9d/c4202076fec82a5ed958a306c04d7dacd3f65f8929007d7f9d951c8bedba/syne_tune-0.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "83f592d179d5eb059a5fe1b59dbf07d8",
                    "sha256": "4dc61b270330ffd95d6610dc36224e014f68adf0e831ac93b860d11186581ca4"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "83f592d179d5eb059a5fe1b59dbf07d8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 361783,
                "upload_time": "2022-10-14T17:57:13",
                "upload_time_iso_8601": "2022-10-14T17:57:13.218879Z",
                "url": "https://files.pythonhosted.org/packages/b9/ab/4decc7de3cec766e838291eb5e5019a4ed69b685c038b786b147ec4f3d0c/syne_tune-0.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.3": {
        "info": {
            "author": "AWS",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "# Syne Tune: Large-Scale and Reproducible Hyperparameter Optimization\n\n[![Release](https://img.shields.io/badge/release-0.3-brightgreen.svg)](https://pypi.org/project/syne-tune/)\n[![Python Version](https://img.shields.io/badge/3.7%20%7C%203.8%20%7C%203.9-brightgreen.svg)](https://pypi.org/project/syne-tune/)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![Downloads](https://pepy.tech/badge/syne-tune/month)](https://pepy.tech/project/syne-tune)\n[![Documentation](https://readthedocs.org/projects/syne-tune/badge/?version=latest)](https://syne-tune.readthedocs.io)\n\n![Alt Text](docs/source/synetune.gif)\n\n[Documentation](https://syne-tune.readthedocs.io/en/latest/index.html)\n\nThis package provides state-of-the-art algorithms for hyperparameter optimization (HPO) with the following key features:\n* Wide coverage (>20) of different HPO methods, including:\n  * Asynchronous versions to maximize utilization and distributed versions (i.e., with multiple workers);\n  * Multi-fidelity methods supporting model-based decisions (BOHB and MOBSTER);\n  * Hyperparameter transfer learning to speed up (repeated) tuning jobs;\n  * Multi-objective optimizers that can tune multiple objectives simultaneously (such as accuracy and latency).\n* HPO can be run in different environments (locally, AWS, simulation) by changing just one line of code.\n* Out-of-the-box tabulated benchmarks that allows you simulate results in seconds while preserving the real dynamics of asynchronous or synchronous HPO with any number of workers.\n\n## Installing\n\nTo install Syne Tune from pip, you can simply do:\n\n```bash\npip install 'syne-tune[extra]'\n```\n\nor to get the latest version from git: \n\n```bash\ngit clone https://github.com/awslabs/syne-tune.git\ncd syne-tune\npython3 -m venv st_venv\n. st_venv/bin/activate\npip install --upgrade pip\npip install -e '.[extra]'\n```\n\nThis installs everything in a virtual environment `st_venv`. Remember to activate\nthis environment before working with Syne Tune. We also recommend building the\nvirtual environment from scratch now and then, in particular when you pull a new\nrelease, as dependencies may have changed.\n\nSee our [change log](CHANGELOG.md) to see what changed in the latest version. \n\n## Getting started\n\nTo enable tuning, you have to report metrics from a training script so that they can be communicated later to Syne Tune,\nthis can be accomplished by just calling `report(epoch=epoch, loss=loss)` as shown in the example below:\n\n```python\n# train_height.py\nimport logging\nimport time\n\nfrom syne_tune import Reporter\nfrom argparse import ArgumentParser\n\nif __name__ == '__main__':\n    root = logging.getLogger()\n    root.setLevel(logging.INFO)\n\n    parser = ArgumentParser()\n    parser.add_argument('--steps', type=int)\n    parser.add_argument('--width', type=float)\n    parser.add_argument('--height', type=float)\n\n    args, _ = parser.parse_known_args()\n    report = Reporter()\n\n    for step in range(args.steps):\n        dummy_score = (0.1 + args.width * step / 100) ** (-1) + args.height * 0.1\n        # Feed the score back to Syne Tune.\n        report(step=step, mean_loss=dummy_score, epoch=step + 1)\n        time.sleep(0.1)\n```\n\nOnce you have a script reporting metric, you can launch a tuning as-follow:\n\n```python\nfrom syne_tune import Tuner, StoppingCriterion\nfrom syne_tune.backend import LocalBackend\nfrom syne_tune.config_space import randint\nfrom syne_tune.optimizer.baselines import ASHA\n\n# hyperparameter search space to consider\nconfig_space = {\n    'steps': 100,\n    'width': randint(1, 20),\n    'height': randint(1, 20),\n}\n\ntuner = Tuner(\n    trial_backend=LocalBackend(entry_point='train_height.py'),\n    scheduler=ASHA(\n        config_space, metric='mean_loss', resource_attr='epoch', max_t=100,\n        search_options={'debug_log': False},\n    ),\n    stop_criterion=StoppingCriterion(max_wallclock_time=15),\n    n_workers=4,  # how many trials are evaluated in parallel\n)\ntuner.run()\n```\n\nThe above example runs ASHA with 4 asynchronous workers on a local machine.\n\n## Supported HPO methods\n\nThe following hyperparameter optimization (HPO) methods are available in Syne Tune:\n\nMethod | Reference | Searcher | Asynchronous? | Multi-fidelity? | Transfer? \n:--- | :---: | :---: | :---: | :---: | :---: \nGrid Search |  | deterministic | yes | no | no \nRandom Search | Bergstra, et al. (2011) | random | yes | no | no \nBayesian Optimization | Snoek, et al. (2012) | model-based | yes | no | no \nBORE | Tiao, et al. (2021) | model-based | yes | no | no \nMedianStoppingRule | Golovin, et al. (2017) | any | yes | yes | no \nSyncHyperband | Li, et al. (2018) | random | no | yes | no \nSyncBOHB | Falkner, et al. (2018) | model-based | no | yes | no \nSyncMOBSTER | Klein, et al. (2020) | model-based | no | yes | no \nASHA | Li, et al. (2019) | random | yes | yes | no \nBOHB | Falkner, et al. (2018) | model-based | yes | yes | no \nMOBSTER | Klein, et al. (2020) | model-based | yes | yes | no \nDEHB | Awad, et al. (2021) | evolutionary | no | yes | no \nHyperTune | Li, et al. (2022) | model-based | yes | yes | no \nPASHA | Bohdal, et al. (2022)| random | yes | yes | no \nREA | Real, et al. (2019) | evolutionary | yes | no | no \nPBT | Jaderberg, et al. (2017) | evolutionary | no | yes | no \nZeroShotTransfer | Wistuba, et al. (2015) | deterministic | yes | no | yes \nASHA-CTS | Salinas, et al. (2021)| random | yes | yes | yes \nRUSH | Zappella, et al. (2021)| random | yes | yes | yes \n\nThe searchers fall into four broad categories, **deterministic**, **random**, **evalutionary** and **model-based**. The random searchers sample candidate hyperparameter configurations uniformly at random, while the model-based searchers sample them non-uniformly at random, according to a model (e.g., Gaussian process, density ration estimator, etc.) and an acquisition function. The evolutionary searchers make use of an evolutionary algorithm.\n\nSyne Tune also supports [BoTorch](https://github.com/pytorch/botorch) searchers.\n\n## Supported multi-objective optimization methods\n\nMethod | Reference | Searcher | Asynchronous? | Multi-fidelity? | Transfer?\n:--- | :---: | :---: | :---: | :---: | :---: \nConstrained Bayesian Optimization | Gardner, et al. (2014) | model-based | yes | no | no\nMOASHA | Schmucker, et al. (2021) | random | yes | yes | no\n\nHPO methods listed can be used in a multi-objective setting by scalarization or non-dominated sorting. See [multiobjective_priority.py](syne_tune/optimizers/schedulers/multiobjective/multiobjective_priority.py) for details.\n\n## Examples\n\nYou will find the following examples in [examples/](examples/) folder illustrating different functionalities provided\nby Syne Tune:\n* [launch_height_baselines.py](examples/launch_height_baselines.py):\n  launches HPO locally, tuning a simple script \n  [train_height_example.py](examples/training_scripts/height_example/train_height.py) for several baselines  \n* [launch_height_ray.py](examples/launch_height_ray.py):\n  launches HPO locally with [Ray Tune](https://docs.ray.io/en/master/tune/index.html)\n  scheduler\n* [launch_height_moasha.py](examples/launch_height_moasha.py):\n  shows how to tune a script reporting multiple-objectives with multiobjective Asynchronous Hyperband (MOASHA)\n* [launch_height_standalone_scheduler.py](examples/launch_height_standalone_scheduler.py):\n  launches HPO locally with a custom scheduler that cuts any trial that is not\n  in the top 80%\n* [launch_height_sagemaker_remotely.py](examples/launch_height_sagemaker_remotely.py):\n  launches the HPO loop on SageMaker rather than a local machine, trial can be executed either\n  the remote machine or distributed again as separate SageMaker training jobs\n* [launch_height_sagemaker.py](examples/launch_height_sagemaker.py):\n  launches HPO on SageMaker to tune a SageMaker Pytorch estimator\n* [launch_height_sagemaker_custom_image.py](examples/launch_height_sagemaker_custom_image.py):\n  launches HPO on SageMaker to tune a entry point with a custom docker image\n* [launch_plot_results.py](examples/launch_plot_results.py): shows how to plot\n  results of a HPO experiment\n* [launch_fashionmnist.py](examples/launch_fashionmnist.py):\nlaunches HPO locally tuning a multi-layer perceptron on Fashion MNIST. This\nemploys an easy-to-use benchmark convention\n* [launch_huggingface_classification.py](examples/launch_huggingface_classification.py):\n  launches HPO on SageMaker to tune a SageMaker Hugging Face estimator for sentiment classification\n* [launch_tuning_gluonts.py](examples/launch_tuning_gluonts.py):\n  launches HPO locally to tune a gluon-ts time series forecasting algorithm\n* [launch_rl_tuning.py](examples/launch_rl_tuning.py):\n  launches HPO locally to tune a RL algorithm on the cartpole environment\n\n## FAQ and Tutorials\n\nYou can check our [FAQ](https://syne-tune.readthedocs.io/en/latest/faq.html), to\nlearn more about Syne Tune functionalities.\n\n* [Why should I use Syne Tune?](https://syne-tune.readthedocs.io/en/latest/faq.html#why-should-i-use-syne-tune)\n* [What are the different installations options supported?](https://syne-tune.readthedocs.io/en/latest/faq.html#what-are-the-different-installations-options-supported)\n* [How can I run on AWS and SageMaker?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-run-on-aws-and-sagemaker)\n* [What are the metrics reported by default when calling the `Reporter`?](https://syne-tune.readthedocs.io/en/latest/faq.html#what-are-the-metrics-reported-by-default-when-calling-the-reporter)\n* [How can I utilize multiple GPUs?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-utilize-multiple-gpus)\n* [What is the default mode when performing optimization?](https://syne-tune.readthedocs.io/en/latest/faq.html#what-is-the-default-mode-when-performing-optimization)\n* [How are trials evaluated on a local machine?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-are-trials-evaluated-on-a-local-machine)\n* [What does the output of the tuning contain?](https://syne-tune.readthedocs.io/en/latest/faq.html#what-does-the-output-of-the-tuning-contain)\n* [Where can I find the output of the tuning?](https://syne-tune.readthedocs.io/en/latest/faq.html#where-can-i-find-the-output-of-the-tuning)\n* [How can I enable trial checkpointing?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-enable-trial-checkpointing)\n* [Which schedulers make use of checkpointing?](https://syne-tune.readthedocs.io/en/latest/faq.html#which-schedulers-make-use-of-checkpointing)\n* [Is the tuner checkpointed?](https://syne-tune.readthedocs.io/en/latest/faq.html#is-the-tuner-checkpointed)\n* [Where can I find the output of my trials?](https://syne-tune.readthedocs.io/en/latest/faq.html#where-can-i-find-the-output-of-my-trials)\n* [How can I plot the results of a tuning?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-plot-the-results-of-a-tuning)\n* [How can I specify additional tuning metadata?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-specify-additional-tuning-metadata)\n* [How do I append additional information to the results which are stored?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-do-i-append-additional-information-to-the-results-which-are-stored) \n* [I don\u2019t want to wait, how can I launch the tuning on a remote machine?](https://syne-tune.readthedocs.io/en/latest/faq.html#i-dont-want-to-wait-how-can-i-launch-the-tuning-on-a-remote-machine)\n* [How can I run many experiments in parallel?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-run-many-experiments-in-parallel)\n* [How can I access results after tuning remotely?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-access-results-after-tuning-remotely)\n* [How can I specify dependencies to remote launcher or when using the SageMaker backend?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-specify-dependencies-to-remote-launcher-or-when-using-the-sagemaker-backend)\n* [How can I benchmark different methods?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-benchmark-different-methods)\n* [What different schedulers do you support? What are the main differences between them?](https://syne-tune.readthedocs.io/en/latest/faq.html#what-different-schedulers-do-you-support-what-are-the-main-differences-between-them)\n* [How do I define the search space?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-do-i-define-the-search-space) \n* [How can I visualize the progress of my tuning experiment with Tensorboard?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-visualize-the-progress-of-my-tuning-experiment-with-tensorboard)\n* [How can I add a new scheduler?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-add-a-new-scheduler)\n* [How can I add a new tabular or surrogate benchmark?](https://syne-tune.readthedocs.io/en/latest/faq.html#how-can-i-add-a-new-tabular-or-surrogate-benchmark)\n\nDo you want to know more? Here are a number of tutorials.\n* [Basics of Syne Tune](https://syne-tune.readthedocs.io/en/latest/tutorials/basics/README.html)\n* [Multi-Fidelity Hyperparameter Optimization](https://syne-tune.readthedocs.io/en/latest/tutorials/multifidelity/README.html)\n* [How to Contribute a New Scheduler](https://syne-tune.readthedocs.io/en/latest/tutorials/developer/README.html)\n* [Benchmarking in Syne Tune](https://syne-tune.readthedocs.io/en/latest/tutorials/benchmarking/README.html)\n* [Choosing a Configuration Space](https://syne-tune.readthedocs.io/en/latest/search_space.html)\n* [Using the Built-in Schedulers](https://syne-tune.readthedocs.io/en/latest/schedulers.html)\n\n## Security\n\nSee [CONTRIBUTING](CONTRIBUTING.md#security-issue-notifications) for more information.\n\n## Citing Syne Tune\n\nIf you use Syne Tune in a scientific publication, please cite the following paper:\n\n[\"Syne Tune: A Library for Large Scale Hyperparameter Tuning and Reproducible Research\"](https://openreview.net/forum?id=BVeGJ-THIg9&referrer=%5BAuthor%20Console%5D(%2Fgroup%3Fid%3Dautoml.cc%2FAutoML%2F2022%2FTrack%2FMain%2FAuthors%23your-submissions)) First Conference on Automated Machine Learning, 2022.\n\n\n```bibtex\n@inproceedings{\n  salinas2022syne,\n  title={Syne Tune: A Library for Large Scale Hyperparameter Tuning and Reproducible Research},\n  author={David Salinas and Matthias Seeger and Aaron Klein and Valerio Perrone and Martin Wistuba and Cedric Archambeau},\n  booktitle={First Conference on Automated Machine Learning (Main Track)},\n  year={2022},\n  url={https://openreview.net/forum?id=BVeGJ-THIg9}\n}\n```\n\n## License\n\nThis project is licensed under the Apache-2.0 License.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "syne-tune",
            "package_url": "https://pypi.org/project/syne-tune/",
            "platform": null,
            "project_url": "https://pypi.org/project/syne-tune/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/syne-tune/0.3.3/",
            "requires_dist": [
                "numpy (>=1.16.0)",
                "dill",
                "pandas",
                "typing-extensions",
                "boto3 ; extra == 'aws'",
                "sagemaker (>=2.112.0) ; extra == 'aws'",
                "PyYaml ; extra == 'aws'",
                "ujson ; extra == 'aws'",
                "s3fs ; extra == 'aws'",
                "torchvision ; extra == 'benchmarks'",
                "filelock ; extra == 'benchmarks'",
                "torch ; extra == 'benchmarks'",
                "tqdm ; extra == 'benchmarks'",
                "numpy ; extra == 'blackbox-repository'",
                "pandas ; extra == 'blackbox-repository'",
                "fastparquet ; extra == 'blackbox-repository'",
                "s3fs ; extra == 'blackbox-repository'",
                "scikit-learn ; extra == 'blackbox-repository'",
                "xgboost ; extra == 'blackbox-repository'",
                "h5py ; extra == 'blackbox-repository'",
                "numpy ; extra == 'bore'",
                "xgboost ; extra == 'bore'",
                "scikit-learn ; extra == 'bore'",
                "GPy (==1.9.9) ; extra == 'bore'",
                "pytest ; extra == 'dev'",
                "pytest-timeout ; extra == 'dev'",
                "black (==22.3.0) ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "sphinx ; extra == 'dev'",
                "sphinx-rtd-theme ; extra == 'dev'",
                "sphinx-autodoc-typehints ; extra == 'dev'",
                "myst-parser ; extra == 'dev'",
                "sphinx-copybutton ; extra == 'dev'",
                "sphinxcontrib-bibtex ; extra == 'dev'",
                "ray[tune] (>=2.0.0) ; extra == 'extra'",
                "scikit-learn ; extra == 'extra'",
                "scikit-optimize ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'extra'",
                "autograd (>=1.3) ; extra == 'extra'",
                "torchvision ; extra == 'extra'",
                "filelock ; extra == 'extra'",
                "torch ; extra == 'extra'",
                "tqdm ; extra == 'extra'",
                "numpy ; extra == 'extra'",
                "pandas ; extra == 'extra'",
                "fastparquet ; extra == 'extra'",
                "s3fs ; extra == 'extra'",
                "xgboost ; extra == 'extra'",
                "h5py ; extra == 'extra'",
                "statsmodels ; extra == 'extra'",
                "botorch (>=0.6.2) ; extra == 'extra'",
                "pytest ; extra == 'extra'",
                "pytest-timeout ; extra == 'extra'",
                "black (==22.3.0) ; extra == 'extra'",
                "flake8 ; extra == 'extra'",
                "sphinx ; extra == 'extra'",
                "sphinx-rtd-theme ; extra == 'extra'",
                "sphinx-autodoc-typehints ; extra == 'extra'",
                "myst-parser ; extra == 'extra'",
                "sphinx-copybutton ; extra == 'extra'",
                "sphinxcontrib-bibtex ; extra == 'extra'",
                "boto3 ; extra == 'extra'",
                "sagemaker (>=2.112.0) ; extra == 'extra'",
                "PyYaml ; extra == 'extra'",
                "ujson ; extra == 'extra'",
                "onnxruntime (>=1.10.0) ; extra == 'extra'",
                "configspace ; extra == 'extra'",
                "yahpo-gym ; extra == 'extra'",
                "scipy (>=1.3.3) ; extra == 'gpsearchers'",
                "autograd (>=1.3) ; extra == 'gpsearchers'",
                "statsmodels ; extra == 'kde'",
                "ray[tune] (>=2.0.0) ; extra == 'raytune'",
                "scikit-learn ; extra == 'raytune'",
                "scikit-optimize ; extra == 'raytune'",
                "onnxruntime (>=1.10.0) ; extra == 'yahpo'",
                "pyyaml ; extra == 'yahpo'",
                "configspace ; extra == 'yahpo'",
                "pandas ; extra == 'yahpo'",
                "yahpo-gym ; extra == 'yahpo'"
            ],
            "requires_python": "",
            "summary": "Distributed Hyperparameter Optimization on SageMaker",
            "version": "0.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dbf81adf5911b281af5176808775076d",
                    "sha256": "45cc9c34b204d6a7b370a875a2fa57a57d7db721aaa885989b80e5fb19ed59e4"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dbf81adf5911b281af5176808775076d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 569445,
                "upload_time": "2022-12-19T17:08:34",
                "upload_time_iso_8601": "2022-12-19T17:08:34.497406Z",
                "url": "https://files.pythonhosted.org/packages/a7/ef/a5d5273c58898cfaf53e67320466f8196f7a0f4ab5d4bceda2c6593a3b47/syne_tune-0.3.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "87bd7c1a4a3b63e6056a220bcc0eadb0",
                    "sha256": "b7ad0cbca057bcd624e19c1b0759273a800430c5430ecb18b6fd9e2b01fcf6c4"
                },
                "downloads": -1,
                "filename": "syne_tune-0.3.3.tar.gz",
                "has_sig": false,
                "md5_digest": "87bd7c1a4a3b63e6056a220bcc0eadb0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 391194,
                "upload_time": "2022-12-19T17:08:36",
                "upload_time_iso_8601": "2022-12-19T17:08:36.571335Z",
                "url": "https://files.pythonhosted.org/packages/40/68/25aa61f46b2f40d59acec6f4a8ec319fb7432297362d5cffa7112b48ea3c/syne_tune-0.3.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}