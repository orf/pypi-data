{
    "1.0": {
        "info": {
            "author": "Chris Kerklaan",
            "author_email": "chris-kerklaan@live.nl",
            "bugtrack_url": null,
            "classifiers": [
                "Framework :: Django",
                "Programming Language :: Python"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/threedi-edits",
            "keywords": "3Di,GDAL,api",
            "license": "LGPL",
            "maintainer": "",
            "maintainer_email": "",
            "name": "threedi-edits",
            "package_url": "https://pypi.org/project/threedi-edits/",
            "platform": null,
            "project_url": "https://pypi.org/project/threedi-edits/",
            "project_urls": {
                "Homepage": "https://github.com/threedi-edits"
            },
            "release_url": "https://pypi.org/project/threedi-edits/1.0/",
            "requires_dist": [
                "scipy",
                "cached-property",
                "shapely (==2.0a1)",
                "threedigrid-builder",
                "pytest ; extra == 'test'",
                "mock ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "pytest-flakes ; extra == 'test'",
                "pytest-black ; extra == 'test'",
                "pytest-benchmark ; extra == 'test'"
            ],
            "requires_python": "<3.11",
            "summary": "An experimental pythonic 3Di schematisation api. Using this api, we can access, alter en write a 3Di database within python. Within the package gis tools are provided as well.",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15889529,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2852ac359e94eb8c5501376c5ebd6656",
                    "sha256": "05b709735594dec6cfded3e5c9f5e73da9ffe955f2e6b63dae1b791c27dee467"
                },
                "downloads": -1,
                "filename": "threedi_edits-1.0-py_310-none-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "2852ac359e94eb8c5501376c5ebd6656",
                "packagetype": "bdist_wheel",
                "python_version": "py_310",
                "requires_python": "<3.11",
                "size": 6393541,
                "upload_time": "2022-11-25T12:23:21",
                "upload_time_iso_8601": "2022-11-25T12:23:21.939709Z",
                "url": "https://files.pythonhosted.org/packages/aa/df/1212b946948eb894d2882558275acf05bcca555ac8780a989a2dc9be4bd9/threedi_edits-1.0-py_310-none-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1": {
        "info": {
            "author": "Chris Kerklaan",
            "author_email": "chris-kerklaan@live.nl",
            "bugtrack_url": null,
            "classifiers": [
                "Framework :: Django",
                "Programming Language :: Python"
            ],
            "description": "Threedi-edits \r\n==========================================\r\n\r\nAn experimental pythonic 3Di schematisation api. Using this api, we can access, alter en write a 3Di database within python. Within the package gis tools are provided as well.  \r\nCurrently version 0209 of the schematisation is supported. If your 3Di database is not up to date, please use: threedi_modelchecker (0.30) --sqlite path_to_sqlite.sqlite migrate to migrate your database to version 0209.\r\n\r\nThis package is the continuation of threedi-raster-edits (0.27)\r\n\r\nUsage - 3Di schematisation edits\r\n-----------------------------------------\r\n\r\nImporting the module::\r\n\r\n  >>> import threedi_edits as te\r\n  \r\n  \r\nCreating a new schematisation::\r\n\r\n\t>>> schema = te.ThreediEdits.from_scratch()\r\n\t\r\nBasic schematisation reading::\r\n\r\n  >>> schema = te.ThreediEdits(sqlite_path, mode=\"read\")\r\n  >>> schema = te.ThreediEdits(sqlite_path, mode=\"memory\")\r\n  \r\nCopying a schematisation::\r\n\r\n\t>>> copied = schema.copy()\r\n\t\r\nWriting a schematisation::\r\n\r\n\t>>> schema.write(sqlite_output_path, rasters=True)\r\n\r\n\r\nInvestigate the data::\r\n\r\n  >>> cross_section_locations = schema.cross_section_locations\r\n  >>> channels = schema.channels\r\n  >>> print(cross_section_locations.first()) # show data of the first cross section location\r\n  >>> print(schema.tables) # show all tables\r\n  >>> shapely_geom = schema.channels.first().geometry.shape # retrieve the shapely geometry\r\n \r\nCreating the grid::\r\n\r\n  >>> grid = schema.grid()\r\n  >>> cells = grid['cells']\r\n  >>> nodes = grid['nodes']\r\n  >>> lines = grid['lines']\r\n  >>> cells.write(\"path_to_lines.gpkg\") # write cells only\r\n  >>> grid.write(\"path_to_grid.gpkg\") # Write lines, cells and nodes\r\n \r\n \r\nAdding a feature using a template::\r\n\r\n  >>> from te.globals import SUPPORTED_THREEDI_VERSIONS\r\n  >>> from te.threedi.constants import get_version\r\n  >>> templates = get_version(SUPPORTED_THREEDI_VERSIONS[0]).Templates()\r\n  >>> node = templates.node\r\n  >>> print(node) # show what you should fill\r\n  >>> node[\"initial_waterlevel\"] = 1\r\n  >>> node[\"the_geom\"] = Point.from_point((1, 1))\r\n  >>> new_fid = schema.nodes.add(node)\r\n  \r\nAdding a feature using items and geometry::\r\n\r\n  >>> items = {\"initial_waterlevel\": 0.1, \"storage_are\": 0.64, \"code\": \"x\"}\r\n  >>> geometry = te.Point.from_point((1, 1))\r\n  >>> new_fid = schema.nodes.add(items=items, geometry=geometry)\r\n\r\nAdding a feature using another feature::\r\n\r\n  >>> feature = other_schema.nodes.first()\r\n  >>> new_fid = schema.add(feature)\r\n\r\nEditing and writing rasters::\r\n\r\n  >>> schema.rasters  # initialize rasters\r\n  >>> dem = schema.dem\r\n  >>> new_dem = dem.copy()\r\n  >>> array = new_dem.array\r\n  >>> array[0, 0] = 2\r\n  >>> new_dem.array = array\r\n  >>> schema.dem = new_dem\r\n  \r\n  \r\nFor more examples:\r\n\r\n  >>> te.get_examples(\"example_folder\")\r\n\r\nChangelog of threedi-edits\r\n===================================================\r\n\r\n1.0 (2022-11-15)\r\n----------------\r\n\r\n- Evolution from threedi-raster-edits (v0.27)\r\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/threedi-edits",
            "keywords": "3Di,GDAL,api",
            "license": "LGPL",
            "maintainer": "",
            "maintainer_email": "",
            "name": "threedi-edits",
            "package_url": "https://pypi.org/project/threedi-edits/",
            "platform": null,
            "project_url": "https://pypi.org/project/threedi-edits/",
            "project_urls": {
                "Homepage": "https://github.com/threedi-edits"
            },
            "release_url": "https://pypi.org/project/threedi-edits/1.1/",
            "requires_dist": [
                "scipy",
                "cached-property",
                "shapely (==2.0a1)",
                "threedigrid-builder",
                "pytest ; extra == 'test'",
                "mock ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "pytest-flakes ; extra == 'test'",
                "pytest-black ; extra == 'test'",
                "pytest-benchmark ; extra == 'test'"
            ],
            "requires_python": "<3.11",
            "summary": "An experimental pythonic 3Di schematisation api. Using this api, we can access, alter en write a 3Di database within python. Within the package gis tools are provided as well.",
            "version": "1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15889529,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dcefe67e1f880945d857695283a0789f",
                    "sha256": "2a42a9cf8845d638a35ca172ad612fcf5082715c4f9af003c7a91f6f2351c5ca"
                },
                "downloads": -1,
                "filename": "threedi_edits-1.1-py_310-none-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "dcefe67e1f880945d857695283a0789f",
                "packagetype": "bdist_wheel",
                "python_version": "py_310",
                "requires_python": "<3.11",
                "size": 6393554,
                "upload_time": "2022-11-25T12:32:45",
                "upload_time_iso_8601": "2022-11-25T12:32:45.616141Z",
                "url": "https://files.pythonhosted.org/packages/d0/52/458059610aa2c94e9d86b9518b04af4c26a2e0181ee0756811dca1d880a3/threedi_edits-1.1-py_310-none-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "455bf12c53961c543cdd4f651820bbc9",
                    "sha256": "331d6b69e813da3618f659832e5b3b71f9a9acd955cc225807c6eac818192f28"
                },
                "downloads": -1,
                "filename": "threedi-edits-1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "455bf12c53961c543cdd4f651820bbc9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "<3.11",
                "size": 6321652,
                "upload_time": "2022-11-25T12:32:56",
                "upload_time_iso_8601": "2022-11-25T12:32:56.415559Z",
                "url": "https://files.pythonhosted.org/packages/e1/99/d60e7ac949f95af32d76260262fb58a4cb3f63f035c9dd4c386c38969443/threedi-edits-1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}