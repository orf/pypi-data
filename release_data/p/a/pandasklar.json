{
    "0.0.12": {
        "info": {
            "author": "",
            "author_email": "djekra <hopsalla@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pandasklar",
            "package_url": "https://pypi.org/project/pandasklar/",
            "platform": null,
            "project_url": "https://pypi.org/project/pandasklar/",
            "project_urls": {
                "Homepage": "https://github.com/djekra/pandasklar"
            },
            "release_url": "https://pypi.org/project/pandasklar/0.0.12/",
            "requires_dist": [
                "pandas",
                "numpy",
                "bpyth"
            ],
            "requires_python": ">=3.8",
            "summary": "Various Pandas Tools",
            "version": "0.0.12",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15672979,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3657fb9dafe282401aac0986237af1d8",
                    "sha256": "bf97c90b307a6f75f24f079e36e812b443500adb38e674f3ec3d92c9e5a2ce17"
                },
                "downloads": -1,
                "filename": "pandasklar-0.0.12-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3657fb9dafe282401aac0986237af1d8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 50229,
                "upload_time": "2022-10-31T15:33:08",
                "upload_time_iso_8601": "2022-10-31T15:33:08.030605Z",
                "url": "https://files.pythonhosted.org/packages/2a/71/7109d658fa2cffae073704c9e93688c828b1360a705eeef7093428618a00/pandasklar-0.0.12-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "15d8394a8886098ab273554ae1528b87",
                    "sha256": "2fae489717190fa0cc7d28fe6710c6bc7560216ee9f5fa77339eef68ff90bb52"
                },
                "downloads": -1,
                "filename": "pandasklar-0.0.12.tar.gz",
                "has_sig": false,
                "md5_digest": "15d8394a8886098ab273554ae1528b87",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 48291,
                "upload_time": "2022-10-31T15:33:09",
                "upload_time_iso_8601": "2022-10-31T15:33:09.985728Z",
                "url": "https://files.pythonhosted.org/packages/b7/d3/1ba6b146a01a53956823d30ef708f2ba998a51ab1175637ca8f2bc8194c7/pandasklar-0.0.12.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.14": {
        "info": {
            "author": "",
            "author_email": "djekra <hopsalla@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pandasklar",
            "package_url": "https://pypi.org/project/pandasklar/",
            "platform": null,
            "project_url": "https://pypi.org/project/pandasklar/",
            "project_urls": {
                "Homepage": "https://github.com/djekra/pandasklar"
            },
            "release_url": "https://pypi.org/project/pandasklar/0.0.14/",
            "requires_dist": [
                "pandas",
                "numpy",
                "perlin-noise",
                "seaborn",
                "dtale",
                "bpyth",
                "blab"
            ],
            "requires_python": ">=3.8",
            "summary": "Various Pandas Tools",
            "version": "0.0.14",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15672979,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5f0d7d061de96128857597a3b1bc520c",
                    "sha256": "7e2f3655a94a01126c0f458f934236101ab08d760431888049532a1b81bdc2aa"
                },
                "downloads": -1,
                "filename": "pandasklar-0.0.14-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5f0d7d061de96128857597a3b1bc520c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 50402,
                "upload_time": "2022-10-31T17:28:40",
                "upload_time_iso_8601": "2022-10-31T17:28:40.498626Z",
                "url": "https://files.pythonhosted.org/packages/a7/6b/4e72ed54fb6df9c97aecd40dc935f80924063e283a2782cc7d3878154479/pandasklar-0.0.14-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "57b3176c194e36b7ba935a88b51340ca",
                    "sha256": "f0e97693161ca5bff27474e93cec5e53151b025f70de86f8deeacfad9723964a"
                },
                "downloads": -1,
                "filename": "pandasklar-0.0.14.tar.gz",
                "has_sig": false,
                "md5_digest": "57b3176c194e36b7ba935a88b51340ca",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 48465,
                "upload_time": "2022-10-31T17:28:45",
                "upload_time_iso_8601": "2022-10-31T17:28:45.201995Z",
                "url": "https://files.pythonhosted.org/packages/44/26/0612e19e5bc9c9691ebda3ae149b6d1c1c021bfc4889707ed147f043e873/pandasklar-0.0.14.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "djekra <hopsalla@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# pandasklar\nToolbox / Ecosystem for data science. Easier handling of pandas, especially when thinking in SQL.\n\nFocused on working with complex, ambiguous, erroneous, two-dimensional DataFrames containing one- or two-dimensional objects.\nFocused on convenience when working with jupyter notebooks, not speed (exception: `fast_startswith` and `fast_endswith`).\n\nConvenience means: \n* use more high-level functions\n* functions try to cope even with sloppy data and try to avoid error messages when running cells again\n* basic functions easier to remember\n\nComes in the form of helper functions, i.e. without changes to pandas, just on top of it.\nFull dokumentation see `jupyter` directory.\n\n\n## Install\n`pip install pandasklar`\n\n\n## Create Random Data for Testing\n* `random_series`: Returns a series of random data of several types, including names, random walks with perlin-noise and errorprone series to test your functions.\n* `decorate`: Decorates a series with specials (e.g. NaNs)\n* `people` and `random_numbers`: Random data for testing.\n\n\n## Review and visualize\n* `plot`: Plot with seaborn without configuration\n* `check_mask`: Count rows filtered by a binary mask. Raises an error, if the number is unexpected.\n* `sample`: Returns some sample rows: beginning + end + random rows in the middle, prefering rows without NaNs\n* `search_str`: Searches all str columns of a dataframe. Useful for development and debugging.\n* `grid`: Visualize with dtale\n* `memory_consumption`: Returns the memory consumption of Python objects\n\n\n## Analyse Datatypes\n* `analyse_datatypes`: Returns info about the datatypes and the mem_usage of the columns of a DataFrame \n* `analyse_values`: Returns statistical data for a DataFrame, a Series or an Index \n* `analyse_cols`: Describes the datatypes and the content of a DataFrame. Merged info from analyse_datatypes and analyse_values\n* `change_datatype`: Converts the datatypes of a DataFrame or a Series. Automatically, if you want.\n* `copy_datatype`: Copies the dtypes from one dataframe to another, matching the column names.\n\n\n## Analyse Frequencies\n* `analyse_freqs`: Frequency analysis that includes a subordinate frequency analysis. Provides e.g. the most important examples per case. Splits strings and lists.\n\n\n## Analyse uniqueness, discrepancies und redundancy\n* `analyse_groups`: Analyses a DataFrame for uniqueness and redundancy.\n* `same_but_different`: Returns the rows of a DataFrame that are the same on the one hand and different on the other: They are the same in the fields named in same. And they differ in the field named in different. This is useful for analysing whether fields correlate 100% with each other or are independent.\n\n\n## Compare Series and DataFrames\n* `compare_series`: Compares the content of two Series. Returns several indicators of equality.\n* `compare_dataframes`: Compares the content of two DataFrames column by column.<br>\n   Returns several indicators of equality.\n* `check_equal`: Compares the content of two DataFrames column by column.\n* `compare_col_dtype`: Returns the column names of two DataFrames whose dtype differs\n* `get_different_rows`: Returns the rows of two DataFrames that differ\n\n\n## Manage columns\n* `drop_cols`: Drops a column or a list of columns. Does not throw an error if the column does not exist.\n* `move_cols`: Reorders the columns of a DataFrame. The specified columns are moved to a numerical position or behind a named column.\n* `rename_col`: Renames a column of a DataFrame. If you try to rename a column again, no error is thrown (better for the workflow in jupyter notebooks).\n* `col_names`: Selects column names based on analyse_cols. Useful to apply a method to specific columns of a DataFrame.\n\n\n## Manage rows\n* `drop_multiindex`: Converts any MultiIndex to normal columns and resets the index. Works with MultiIndex in Series or DataFrames, in rows and in columns.\n* `reset_index`: Creates a new, unnamed index. If keep_as is given, the old index is preserved as a row with this name. Otherwise the old index is dropped.\n* `rename_index`: Renames the index.\n* `drop_rows`: Drops rows identified by a binary mask, verbose if wanted.\n* `move_rows`: Moves rows identified by a binary mask from one dataframe to another (e.g. into a trash).<br>\n   The target dataframe gets an additional message column by standard (to identify why the rows were moved). Verbose if wanted. \n* `add_rows`: Like concat, with additional features only_new and verbose.\n\n\n## Let DataFrames Interact\n* `isin`: isin over several columns. Returns a mask for df1: The rows of df1 that match the ones in df2 in the specified columns.\n* `update_col`:     Transfers one column of data from one dataframe to another dataframe.<br>\n   Unlike a simple merge, the index and the dtypes are retained. Handles dups and conditions. Verbose if wanted.\n\n\n## Create DataFrames Easily\n* `dataframe`: Converts multidimensional objects into dataframes. Dictionaries and Tuples are interpreted column-wise, Lists and Counters by rows.\n\n\n## Save and load data\n* `dump_pickle`: Convenient function to save a DataFrame to a pickle file. Optional optimisation of datatypes. Verbose if wanted.\n* `load_pickle`: Convenient function to load a DataFrame from pickle file. Optional optimisation of datatypes. Verbose if wanted.\n* `dump_excel`: Writes a dataframe into an xlsx file for Excel or Calc.<br>\n   The tabcol-feature groups by a specific column and creates a tab for every group.\n* `load_excel`: Loads a dataframe from an xlsx file (Excel or Calc).<br>\n   The tabcol-feature writes all tabs in a column of the result.\n   \n   \n## Work with NaN\n* `nnan`: Count NaNs in Series or DataFrames.\n* `any_nan`: Are there NaNs? Returns True or False.\n* `nan_rows`: Returns the rows of a DataFrame that are NaN in the specified column.\n\n\n## Scale Numbers\n* `scale`: Scales all values of a numeric series to a defined value range.<br>\n   Available methods: max_abs, min_max, min_max_robust, rel, mean, median, \n   compare_median, rank and random.\n\n\n## Cleanup Strings\n* `remove_str`: Removes a list of unwanted substrings from a Series of strings.\n* `remove_words`: Removes a list of unwanted words from a Series of strings.\n* `replace_str`: Replaces substrings from a Series of strings according to a dict.\n\n\n## Slice Strings Variably\n* `slice_string`: Slices a column of strings based on indexes in another columns.\n\n\n## Search Strings Fast\n* `fast_startswith`: Searches string columns for matching beginnings.<br>\n   Like pandas str.startswith(), but much faster for large amounts of data, and it returns the matching fragment.\n* `fast_endswith`: Searches string columns for matching endings.\n\n\n## Work with Lists\n* `find_in_list`: Searches a column with a list of strings. Returns a binary mask for the rows containing the searchstring in the list. \n* `apply_on_elements`: Applies a function to all elements of a Series of lists.\n* `list_to_string`: Converts a Series of lists of strings into a Series of strings.\n\n\n## Rank Rows\n* `rank`: Select the max row per group. Or the min.<br>\n   Or mark the rows instead of selecting them. \n\n\n## Aggregate Rows\n* `group_and_agg`: Groups and aggregates. Provides a user interface similar to that of MS Access.\n* `most_freq_elt`: Aggregates a Series to the most frequent scalar element.<br>\n   Like Series.mode, but always returns a scalar.\n* `top_values`: Aggregates a Series to a list of the most frequent elements.<br>\n   Can also return the counts of the most frequent elements.  \n* `agg_words`: Aggregates a Series of strings to a long string.<br>\n   A space is always placed between the elements, the order is preserved.\n* `agg_words_nodup`: Aggregates a Series of strings (e.g. signal words) to a long string.\n   Like agg_words, but duplicates are removed.\n* `agg_strings_nospace`: Aggregates a Series of strings into one long string.<br>\n   Like agg_words, but no separators between the substrings.   \n* `agg_to_list`: Aggregates a Series to a list. \n   Normally this can also be done with a simple 'list', \n   but in combination with transform this does not work.\n   Then agg_to_list can be used as a substitute.\n* `agg_dicts`: Aggregates a Series of dicts to a single dict.<br>\n   If a key occurs more than once, the value is overwritten.\n* `agg_dicts_2dd`: Aggregates a Series of dicts to a single defaultdict(list).<br>\n   I.e. multiple keys are allowed. The values are always lists. \n* `agg_defaultdicts`: Aggregates a Series of defaultdict(list) to a single defaultdict(list). \n\n\n## Explode and Implode Dictionaries\n* `explode_dict`: Like pandas explode, but for a dict.<br>\n  Turns dictionaries into two columns (key, value) and additional rows, if needed.\n* `implode_to_dict`: Reversal of explode_dict.<br>\n  Groups rows and turns two columns (key, value) into one dict. \n* `cols_to_dict`: Moves columns into a dict or defaultdict. \n\n\n```python\n\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pandasklar",
            "package_url": "https://pypi.org/project/pandasklar/",
            "platform": null,
            "project_url": "https://pypi.org/project/pandasklar/",
            "project_urls": {
                "Homepage": "https://github.com/djekra/pandasklar"
            },
            "release_url": "https://pypi.org/project/pandasklar/0.1.0/",
            "requires_dist": [
                "pandas",
                "numpy",
                "perlin-noise",
                "seaborn",
                "dtale",
                "bpyth",
                "blab"
            ],
            "requires_python": ">=3.8",
            "summary": "Various Pandas Tools",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15672979,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0e31254518cfd2501fea1b169ad4554a",
                    "sha256": "66a0a08caf2923936b57e8bbd6d6148d8ebeb0ad1b21df7e74c22348cd555a1e"
                },
                "downloads": -1,
                "filename": "pandasklar-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0e31254518cfd2501fea1b169ad4554a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 50865,
                "upload_time": "2022-11-06T08:57:17",
                "upload_time_iso_8601": "2022-11-06T08:57:17.557024Z",
                "url": "https://files.pythonhosted.org/packages/16/9e/ae06b241cf38976ff968bb482b013291ce0cd00f4ba9d269c74af3c355d6/pandasklar-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ee69550db16856c5e62ad62d8b7e5aa1",
                    "sha256": "3da2477113f30c4ba8c0482bf498eede88a6078fa0bbf0f12e4b0422a0d59bbf"
                },
                "downloads": -1,
                "filename": "pandasklar-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ee69550db16856c5e62ad62d8b7e5aa1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 48986,
                "upload_time": "2022-11-06T08:57:21",
                "upload_time_iso_8601": "2022-11-06T08:57:21.703615Z",
                "url": "https://files.pythonhosted.org/packages/58/9c/0491154f70ee26fd77f56a806730c8edf8206bb6a6c2b2721f2e55ffc383/pandasklar-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}