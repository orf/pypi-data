{
    "0.0.1": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ea4980345b8683168ac8c030529cba27",
                    "sha256": "e5043905546595bd7a31137668cd6919aeaa4c41498c2a85f3223b5edb857a13"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "ea4980345b8683168ac8c030529cba27",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10837,
                "upload_time": "2022-06-06T12:48:21",
                "upload_time_iso_8601": "2022-06-06T12:48:21.068078Z",
                "url": "https://files.pythonhosted.org/packages/b1/06/81d9eea58dbf25ac3bdb925c1d8f31b6458e061f0d61f944fd2ec5443f0e/haas-python-rockerkey-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: MicroPython"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cea659bcbd36d0e22cc79e1a1521825f",
                    "sha256": "f748ec04250c36417a7abc5ed80c986612bcc22fbd43d39e71bcdd1683d16346"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "cea659bcbd36d0e22cc79e1a1521825f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10844,
                "upload_time": "2022-06-07T08:41:30",
                "upload_time_iso_8601": "2022-06-07T08:41:30.064890Z",
                "url": "https://files.pythonhosted.org/packages/54/fb/24804657020a79f0630dcff8cc188481c9313d8d3d2241ca878805c8994e/haas-python-rockerkey-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: MicroPython"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "faed93fb828c5f0fb1cdcfeea908b199",
                    "sha256": "e608d1c0d2b9be4c6fab1ff10e5ef1cc98952a474727597c9a1fa0db62731c36"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "faed93fb828c5f0fb1cdcfeea908b199",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10841,
                "upload_time": "2022-06-08T11:09:40",
                "upload_time_iso_8601": "2022-06-08T11:09:40.221127Z",
                "url": "https://files.pythonhosted.org/packages/cc/bb/94853ff53d0b01f37c801f2294569ca784829213e2d23063b9d74fc9ca55/haas-python-rockerkey-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: MicroPython"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bd7edefda51a044c739a7fdb851c23c8",
                    "sha256": "5763ef75c4d35f21f70d0cbca2364b36e2dfeb031554a248055e1a228a0e5d56"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "bd7edefda51a044c739a7fdb851c23c8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10843,
                "upload_time": "2022-06-10T05:40:16",
                "upload_time_iso_8601": "2022-06-10T05:40:16.777496Z",
                "url": "https://files.pythonhosted.org/packages/d5/fd/823a03fbaef8813ed309595e185dcf65fca65492e943a2229effba7f9c16/haas-python-rockerkey-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: MicroPython"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dd08f5a1145b11800c7b494f7d511a11",
                    "sha256": "ff42a9fdac480717911f26e16ad14d733ff6064de4f6d55cc519990e483d5bd8"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "dd08f5a1145b11800c7b494f7d511a11",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10843,
                "upload_time": "2022-06-14T08:50:00",
                "upload_time_iso_8601": "2022-06-14T08:50:00.554918Z",
                "url": "https://files.pythonhosted.org/packages/59/66/ed1204b29de276139a279f36e22d17bb78c85fdc57d7e511c6cc2983e490/haas-python-rockerkey-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.6": {
        "info": {
            "author": "HaaS Python",
            "author_email": "yinsuo.mys@alibaba-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: MicroPython"
            ],
            "description": "\n## HaaS Python\u4ecb\u7ecd\nHaaS Python\u662f\u963f\u91cc\u4e91IoT\u56e2\u961f\u6700\u65b0\u7814\u53d1\u7684\u4e00\u5957\u4f4e\u4ee3\u7801\u7f16\u7a0b\u6846\u67b6\uff0c\u517c\u5bb9MicroPython\u7f16\u7a0b\u89c4\u8303\uff0c\u4f9d\u6258HaaS\u5e73\u53f0\u8f6f\u786c\u4ef6\u79ef\u6728\u63d0\u4f9bAI\u3001\u652f\u4ed8\u3001\u84dd\u7259\u914d\u7f51\u3001\u4e91\u8fde\u63a5\u3001UI\u7b49\u7269\u8054\u7f51\u573a\u666f\u5e38\u7528\u7684\u80fd\u529b\uff0c\u4ece\u800c\u89e3\u51b3\u4e86\u7269\u8054\u7f51\u5e94\u7528\u5f00\u53d1\u96be\u7684\u95ee\u9898\u3002\u6709\u4e86Python\u8f7b\u5e94\u7528\u6846\u67b6\uff0c\u7269\u8054\u7f51\u7f16\u7a0b\u4e0d\u518d\u5c40\u9650\u4e8e\u4e13\u4e1a\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\uff0c\u4e00\u822c\u7684\u6280\u672f\u5458\u4e5f\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u590d\u6742\u7684\u7269\u8054\u7f51\u9700\u6c42\u3002\n\u66f4\u591aHaaS Python\u4ecb\u7ecd\u548c\u5f00\u53d1\u8d44\u6599\u89c1[HaaS Python\u5b98\u7f51](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp),[\u521b\u610f\u6848\u4f8b](https://haas.iot.aliyun.com/solution?from=crop), [\u786c\u4ef6\u79ef\u6728](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\nHaaS Python is a set of low-code programming frameworks newly developed by Alibaba Cloud IoT team. It is compatible with MicroPython programming specifications. It relies on the hardware and software building blocks of the HaaS platform to provide capabilities commonly used in IoT scenarios such as AI, payment, Bluetooth network configuration, cloud connection, and UI. Solve the difficult problem of IoT application development. With the Python light application framework, IoT programming is no longer limited to professional software developers, and general technicians can quickly implement complex IoT requirements.\nFor more HaaS Python introduction and development materials, see [HaaS Python official website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.595660b1dZDX71#/?from=corp), [Creative Case](https://haas.iot.aliyun.com/solution?from=crop), [Hardware Building Blocks](https://haas.iot.aliyun.com/solution/hardware?from=corp)\n\n## \u5b89\u88c5\u65b9\u6cd5\n* \u5728[HaaS Python\u5b98\u7f51](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/)\u4e0b\u8f7d\u5f00\u53d1\u677f\u5bf9\u5e94\u7684\u56fa\u4ef6\uff0c\u5e76\u5b8c\u6210\u56fa\u4ef6\u70e7\u5f55\n\nDownload the firmware corresponding to the development board at [HaaS Python website](https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b50127119.0.0.4e1260b1ebMIf1#/) and complete the firmware burning\n\n* \u5728\u5f00\u53d1\u677f\u4e0a\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b8c\u6210\u5b89\u88c5\u548c\u4f7f\u7528,\u5982\u679c\u60a8\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u6b22\u8fce\u5728[github\u4e0a\u5411\u6211\u4eec\u63d0\u4ea4issue](https://github.com/alibaba/AliOS-Things/issues)\uff0c\u6211\u4eec\u7684\u5de5\u7a0b\u5e08\u4f1a\u53ca\u65f6\u89e3\u7b54\n\nRun the following commands on the development board to complete the installation and use. If you encounter problems during use, please submit an issue to us on [github](https://github.com/alibaba/AliOS-Things/issues), Our engineers will answer in time\n```\nimport upip\nupip.install(\"haas-python-rockerkey\")\nimport haas-python-rockerkey\n```\n# \u53cc\u8f74\u6309\u952e\u6447\u6746 - rockerKey\n\n## \u4e00\u3001\u4ea7\u54c1\u7b80\u4ecb\n\u53cc\u8f74\u6309\u952e\u6447\u6746\u4f20\u611f\u5668\u6a21\u5757\u7531\u91c7\u7528PS2\u6447\u6746\u7535\u4f4d\u5668\u5236\u4f5c\uff0c\u5177\u6709(X,Y)2\u8f74\u6a21\u62df\u8f93\u51fa\uff0c(Z)1\u8def\u6309\u94ae\u6570\u5b57\u8f93\u51fa\u3002\u7531\u4e8eX\uff0cY\u8f93\u51fa\u7684\u6a21\u62df\u91cf\u6700\u59275V\uff0c\u8d85\u51fa\u4e86\u4e00\u4e9b\u5f00\u53d1\u677f\u7684ADC\u91cf\u7a0b\uff0c\u6240\u4ee5\u901a\u8fc7ADS1115\u4f20\u611f\u5668\u914d\u5408HaaS\u5f00\u53d1\u677f\u6765\u5236\u4f5c\u9065\u63a7\u5668\u7b49\u4e92\u52a8\u4f5c\u54c1\u3002\n\nADS1115\u4f20\u611f\u5668\u5916\u89c2\u53ca\u5f15\u811a\u529f\u80fd\u8bf4\u660e\u5982\u4e0b\uff1a\n<div align=\"center\">\n<img src=./../../docs/images/rockerkey.png  width=60%/>\n</div>\n\n\u53cc\u8f74\u6309\u952e\u6447\u6746\u5f15\u811a\u5b9a\u4e49\uff1a\n* VCC\uff1a5V<br>\n* GND\uff1a\u5730<br>\n* VRX\uff1aX\u8f74\u6a21\u62df\u4fe1\u53f7\uff0c\u8fde\u63a5ADS1115\u7684A0<br>\n* VRY\uff1aY\u8f74\u6a21\u62df\u4fe1\u53f7\uff0c\u8fde\u63a5ADS1115\u7684A1<br>\n* SW\uff1aGPIO\u4fe1\u53f7\uff0c\u8fde\u63a5MCU\u83b7\u53d6\u7535\u5e73\u72b6\u6001\n\nADS1115\u5f15\u811a\u5b9a\u4e49\uff1a\n* V\uff1a3.3V<br>\n* G\uff1a\u5730<br>\n* SCL\uff1aI2C\u603b\u7ebf\u7684\u65f6\u949f\u7ebf<br>\n* SDA\uff1aI2C\u603b\u7ebf\u7684\u6570\u636e\u7ebf<br>\n* A0\uff1aADC\u901a\u90530\uff0c\u8fde\u63a5\u6447\u6746X\u8f74\u5f15\u811a<br>\n* A1\uff1aADC\u901a\u90531\uff0c\u8fde\u63a5\u6447\u6746Y\u8f74\u5f15\u811a<br>\n\n## \u4e8c\u3001\u8f6f\u4ef6\u63a5\u53e3\n\n\u53cc\u8f74\u6447\u6746\u6309\u952eHaaS Python\u9a71\u52a8\uff1a[\u4e0b\u8f7d\u5730\u5740](https://github.com/alibaba/AliOS-Things/tree/master/haas_lib_bundles/python/libraries/rockerkey)\n<br>\n\n### ROCKERKEY(i2cObj,gpioObj,MaxVoltage,XAxis,YAxis) - \u521b\u5efaROCKERKEY\u9a71\u52a8\u5bf9\u8c61\n* \u51fd\u6570\u539f\u578b\uff1a\n> xyzDev = ROCKERKEY(i2cObj,gpioObj)\n\n* \u53c2\u6570\u8bf4\u660e\uff1a\n\n|\u53c2\u6570|\u7c7b\u578b|\u5fc5\u9009\u53c2\u6570\uff1f|\u8bf4\u660e|\n|-----|----|:---:|----|\n|i2cObj|I2C|\u662f|\u8c03\u7528\u6b64\u51fd\u6570\u524d\u9700\u786e\u4fddi2cObj\u5bf9\u8c61\u5df2\u7ecf\u5904\u4e8eopen\u72b6\u6001|\n|gpioObj|GPIO|\u662f|\u8c03\u7528\u6b64\u51fd\u6570\u524d\u9700\u786e\u4fddgpioObj\u5bf9\u8c61\u5df2\u7ecf\u5904\u4e8eopen\u72b6\u6001|\n|MaxVoltage|Number|\u5426|ADS1115\u7684\u6700\u5927ADC\u7535\u538b\u91c7\u6837\u503c\uff0c\u9ed8\u8ba45500mv\uff08\u5355\u4f4d\uff1amv\uff09|\n|XAxis|Number|\u5426|\u6447\u6746X\u8f74\u8fde\u63a5ADS1115\u7684\u901a\u9053\uff0c\u9ed8\u8ba4\u901a\u90530\uff0c\u8303\u56f4\uff1a0-3|\n|YAxis|Number|\u5426|\u6447\u6746Y\u8f74\u8fde\u63a5ADS1115\u7684\u901a\u9053\uff0c\u9ed8\u8ba4\u901a\u90531\uff0c\u8303\u56f4\uff1a0-3|\n\n* \u8fd4\u56de\u503c\uff1a\n\n\u6267\u884c\u6210\u529f\uff0c\u8fd4\u56deROCKERKEY\u5bf9\u8c61\uff1b\u521b\u5efa\u5931\u8d25\uff0c\u629b\u51faException\n\n* \u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom driver import I2C,GPIO              # \u9a71\u52a8\u5e93\nimport rockerkey\n\n# \u521d\u59cb\u5316I2C\u7c7b\u578b\u7684\u8bbe\u5907\ni2cObj = I2C()\ni2cObj.open(\"ads1115\")                # ads1115\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"ADS1115 inited!\")\n\ngpioObj = GPIO()\ngpioObj.open(\"rockerkey\")                # \u6309\u7167board.json\u4e2d\u540d\u4e3a\"rockerkey\"\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"GPIO inited!\")\nxyzDev= rockerkey.ROCKERKEY(i2cObj,gpioObj)\nprint(\"rockerKey object create success!\")\n```\n\n* \u8f93\u51fa\uff1a\n```log\nADS1115 inited!\nGPIO inited!\nrockerKey object create success!\n```\n\n### getXYZAxis - \u8bfb\u53d6\u53cc\u8f74\u6309\u952e\u6447\u6746X\u3001Y\u3001Z\u7684\u503c\n\n* \u51fd\u6570\u529f\u80fd\uff1a\n\n\u8bfb\u53d6\u53cc\u8f74\u6309\u952e\u6447\u6746X\u3001Y\u3001Z\u7684\u503c\n\n* \u51fd\u6570\u539f\u578b\uff1a\n> ROCKERKEY.getXYZAxis()\n\n* \u53c2\u6570\u8bf4\u660e\uff1a\n\n\u65e0\n\n* \u8fd4\u56de\u503c\uff1a\n\n\u8fd4\u56deX\u3001Y\u3001Z\u7684\u72b6\u6001\u503c\n\n|\u8fd4\u56de\u503c|\u7c7b\u578b|\u5fc5\u9009\u53c2\u6570\uff1f|\u8bf4\u660e|\n|-----|----|:---:|----|\n|\u8fd4\u56de\u503c1|int|\u662f|X\u8f74\u7684\u7535\u538b\u503c\uff0c\u8303\u56f4\u4ece0-5000mv|\n|\u8fd4\u56de\u503c2|int|\u662f|Y\u8f74\u7684\u7535\u538b\u503c\uff0c\u8303\u56f4\u4ece0-5000mv|\n|\u8fd4\u56de\u503c3|int|\u662f|Z\u8f74\u7684\u59ff\u6001\uff0c1-\u672a\u6309\u4e0b\uff0c0-\u6309\u4e0b|\n\n* \u793a\u4f8b\uff1a\n\n```python\nfrom driver import I2C,GPIO              # \u9a71\u52a8\u5e93\nimport rockerkey\n\n# \u521d\u59cb\u5316I2C\u7c7b\u578b\u7684\u8bbe\u5907\ni2cObj = I2C()\ni2cObj.open(\"ads1115\")                # ads1115\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"ADS1115 inited!\")\n\ngpioObj = GPIO()\ngpioObj.open(\"rockerkey\")                # \u6309\u7167board.json\u4e2d\u540d\u4e3a\"rockerkey\"\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"GPIO inited!\")\nxyzDev= rockerkey.ROCKERKEY(i2cObj,gpioObj)\nprint(\"rockerKey object create success!\")\nX,Y,Z = xyzDev.getXYZAxis()\nprint(\"Rocker Key result is x:%d mV y:%d mV z:%d level\"%(X,Y,Z))\n```\n\n* \u8f93\u51fa\uff1a\n```log\nADS1115 inited!\nGPIO inited!\nrockerKey object create success!\nRocker Key result is x:2478 mV y:2412 mV Z:1 level\n```\n\n## \u4e09\u3001\u63a5\u53e3\u6848\u4f8b\n\u6b64\u4f7f\u7528\u5b9e\u4f8b\u5728board.json\u4e2d\u5b9a\u4e49\u4e86\u540d\u4e3arockerKey\u7684\u590d\u5408\u7c7b\u578b\u5bf9\u8c61\u3002\u5728Python\u811a\u672c\u4e2d\u5468\u671f\u6027\u7684\u91cf\u6d4b\u6447\u6746X\u3001Y\u3001Z\u7684\u72b6\u6001\u503c\u5e76\u6253\u5370\u5230\u65e5\u5fd7\u4e2d\u3002\n\n* board.json\u914d\u7f6e\uff1a\n\n```json\n{\n    \"name\": \"board-name\",\n    \"version\": \"1.0.0\",\n    \"io\": {\n       \"ads1115\": {\n        \"type\": \"I2C\",\n        \"port\": 0,\n        \"addrWidth\": 7,\n        \"freq\": 400000,\n        \"mode\": \"master\",\n        \"devAddr\": 72\n      },\n      \"rockerkey\":{\n        \"type\": \"GPIO\",\n        \"port\": 2,\n        \"dir\": \"input\"\n      }\n    },\n    \"debugLevel\": \"ERROR\",\n    \"repl\": \"disable\"\n}\n```\n\n* \u6848\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom driver import I2C,GPIO              # \u9a71\u52a8\u5e93\nimport rockerkey\nimport utime\n\n# \u521d\u59cb\u5316I2C\u7c7b\u578b\u7684\u8bbe\u5907\ni2cObj = I2C()\ni2cObj.open(\"ads1115\")                # ads1115\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"ADS1115 inited!\")\n\ngpioObj = GPIO()\ngpioObj.open(\"rockerkey\")                # \u6309\u7167board.json\u4e2d\u540d\u4e3a\"rockerkey\"\u7684\u8bbe\u5907\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\nprint(\"GPIO inited!\")\nxyzDev= rockerkey.ROCKERKEY(i2cObj,gpioObj)\nprint(\"rockerKey object create success!\")\nwhile True:\n    X,Y,Z = xyzDev.getXYZAxis()\n    print(\"Rocker Key result is x:%d mV y:%d mV z:%d level\"%(X,Y,Z))\n    utime.sleep(1)\n```\n\n* \u8f93\u51fa\uff1a\n```log\nADS1115 inited!\nGPIO inited!\nrockerKey object create success!\nRocker Key result is x:2478 mV y:2412 mV Z:1 level\nRocker Key result is x:3410 mV y:12 mV Z:1 level\nRocker Key result is x:3715 mV y:1202 mV Z:1 level\nRocker Key result is x:4270 mV y:2310 mV Z:1 level\nRocker Key result is x:4468 mV y:2961 mV Z:1 level\nRocker Key result is x:4773 mV y:3901 mV Z:0 level\nRocker Key result is x:4971 mV y:4568 mV Z:1 level\n```\n<br>\n\n## \u56db\u3001\u5de5\u4f5c\u539f\u7406\n\u53cc\u8f74\u6309\u952e\u6447\u6746\u4e3a\u4e00\u4e2a\u53cc\u5411\u768410K\u7535\u963b\u5668\uff0c\u968f\u7740\u6447\u6746\u65b9\u5411\u4e0d\u540c\uff0c\u62bd\u5934\u7684\u963b\u503c\u968f\u7740\u53d8\u5316\u3002\u672c\u6a21\u5757\u4f7f\u75285V\u4f9b\u7535\uff0c\u539f\u59cb\u72b6\u6001\u4e0bX,Y\u8bfb\u51fa\u7535\u538b\u4e3a2500mV\u5de6\u53f3\uff0c\u5f53\u968f\u6447\u6746\u65b9\u5411\u53d8\u5316\uff0c\u8bfb\u51fa\u7535\u538b\u503c\u968f\u7740\u53d8\u5316\uff0c\u53d8\u5316\u8303\u56f4\u4ece0-5000mV\u3002\n\n\u5f15\u811a\u8bf4\u660e: VRx\uff0cVRy(X\u3001Y\u8f74)\u4e3a\u6a21\u62df\u8f93\u5165\u4fe1\u53f7\uff0c\u8fde\u63a5\u5230\u6a21\u62dfIO\u53e3\uff0c\u7531\u4e8e\u6709\u4e9bMCU\u4e0d\u652f\u63015V\u91cf\u7a0b\u7684\u7535\u538b\u6d4b\u91cf\uff0c\u4e3a\u4e86\u7b80\u5316\u7535\u8def\u7684\u8bbe\u8ba1\uff0c\u589e\u52a0\u4e86ADS1115\u7684ADC\u8f6c\u6362\u5668\uff0c\u5c06\u6447\u6746\u4e0a\u5bf9\u5e94\u7684X\u3001Y\u6a21\u62df\u4fe1\u53f7\u8fde\u63a5\u5230ADS1115\u4e0a\u3002\nSW(Z\u8f74)\u662f\u6570\u5b57\u8f93\u5165\u4fe1\u53f7\uff0c\u8fde\u63a5\u5230\u6570\u5b57\u7aef\u53e3\uff0c\u5e76\u542f\u7528\u4e0a\u62c9\u7535\u963b\u907f\u514d\u7535\u5e73\u4e0d\u7a33\u3002SW\u7684\u503c:1\u4ee3\u8868\u672a\u6309\u4e0b\uff0c0\u4ee3\u8868\u6309\u4e0b\u3002\n\n## \u53c2\u8003\u6587\u732e\u53ca\u8d2d\u4e70\u94fe\u63a5\n[1] [ADS1115\u8d2d\u4e70\u94fe\u63a5](https://item.taobao.com/item.htm?id=521133121509)<br>\n[2] [\u53cc\u8f74\u6309\u952e\u6447\u6746\u8d2d\u4e70\u94fe\u63a5](https://detail.tmall.com/item.htm?spm=a230r.1.14.7.77964390tNbpEF&id=40684149927&ns=1&abbucket=6&skuId=4509388425229)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://haas.iot.aliyun.com/?from=corp",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "haas-python-rockerkey",
            "package_url": "https://pypi.org/project/haas-python-rockerkey/",
            "platform": null,
            "project_url": "https://pypi.org/project/haas-python-rockerkey/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alibaba/AliOS-Things/issues",
                "Documentation": "https://haas.iot.aliyun.com/haasapi/index.html?spm=a2cpu.b16145223.0.0.81b460b1lzwYKw#/?from=corp",
                "Homepage": "https://haas.iot.aliyun.com/?from=corp",
                "Source Code": "https://github.com/alibaba/AliOS-Things"
            },
            "release_url": "https://pypi.org/project/haas-python-rockerkey/0.0.6/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "This is rockerkey driver for HaaS Python. HaaS Python is forked from micropython.",
            "version": "0.0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14137770,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c431540a12cfaa856e3bfac8dbe5ac7b",
                    "sha256": "2102aaa7c05a15bfbe39174ef5e3520759d33ca455125ba0d5a73482c8530403"
                },
                "downloads": -1,
                "filename": "haas-python-rockerkey-0.0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "c431540a12cfaa856e3bfac8dbe5ac7b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10844,
                "upload_time": "2022-06-15T09:41:55",
                "upload_time_iso_8601": "2022-06-15T09:41:55.540951Z",
                "url": "https://files.pythonhosted.org/packages/be/b1/4870a7d7f2b1b6aa52ae99ed201884ce41d9f8738ef964d34f9e8c54b28e/haas-python-rockerkey-0.0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}