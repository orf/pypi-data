{
    "0.1.0": {
        "info": {
            "author": "Giorgos Paraskevopoulos",
            "author_email": "georgepar.91@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# omegaconf-argparse\nIntegration between Omegaconf and argparse for mixed config file and CLI arguments\n\nFlexible configuration management is important during experimentation, e.g. when training machine learning models.\n\nIdeally, we want both a configuration file to hold more \"stable\" hyperparameter values and the flexibility to\nchange values through command line arguments for rapid experimentation.\n\n## How it works\n\nThis package provides a barebones solution based on the excellent [OmegaConf](https://github.com/omry/omegaconf) package.\n\nSpecifically, we extend the `OmegaConf` class with a static `from_argparse` method to parse arguments provided using argparse,\nand provide utility functions to merge the default CLI values, YAML configuration file values and user provided CLI arguments.\n\n\n## Usage\n\nWe provide a high-level utility function `parse_config` that merges a YAML configuration file with an `argparse.ArgumentParser`:\n\n```\nimport io\nfrom omegacli import parse_config\nmock_config_file = io.StringIO('''\nmodel:\n  hidden: 100\n''')\nparser = argparse.ArgumentParser(\"My cool model\")\nparser.add_argument(\"--hidden\", dest=\"model.hidden\", type=int, default=20)\ncfg = parse_config(parser, mock_config_file)\n>>> {'model': {'hidden': 100}}\ntype(cfg)\n>>> <class 'omegaconf.dictconfig.DictConfig'>\ncfg = parse_config(parser, mock_config_file, args=[\"--hidden\", \"200\"])\n>>> {'model': {'hidden': 200}}\nmock_config_file = io.StringIO('''\nrandom_value: hello\n''')\ncfg = parse_config(parser, mock_config_file)\n>>> {'model': {'hidden': 20}, 'random_value': 'hello'}\n```\n\nYou can also use the patched `OmegaConf` class directly:\n\n```\nimport argparse\nfrom omegacli import OmegaConf\nparser = argparse.ArgumentParser(\"My cool model\")\nparser.add_argument(\"--hidden\", dest=\"model.hidden\", type=int, default=20)\nuser_provided_args, default_args = OmegaConf.from_argparse(parser, args=[\"--hidden\", \"100\"])\nuser_provided_args\n>>> {'model': {'hidden': 100}}\ndefault_args\n>>> {}\nuser_provided_args, default_args = OmegaConf.from_argparse(parser)\nuser_provided_args\n>>> {}\ndefault_args\n>>> {'model': {'hidden': 20}}\n```\n\n**NOTE**: the `from_argparse` method calls the `parser.parse_args()`.\n\n## Merging of provided values\n\nThe precedence for merging is as follows\n* default cli args values < config file values < user provided cli args\n\nE.g.:\n* if you don't include a value in your configuration it will take the default value from the argparse arguments\n* if you provide a cli arg (e.g. run the script with --bsz 64) it will override the value in the config file\n\n\n## Generate a configuration file based on an argument parser\n\nRun:\n\n```\nfrom omegacli import generate_config_template\ngenerate_config_template(parser, \"example-config.yaml\")\n```\n\nThis will initialize a configuration file, that is consistent with the argument parser.\nYou can use this as a starting point for saving and editing your configuration.\n\n## Similar solutions\n\n* [Hydra](https://hydra.cc/docs/intro/): A more feature-rich, but more complex solution. If you are willing to introduce the dependency you can use it\n* [Pytorch-Lightning](https://pytorch-lightning.readthedocs.io/en/1.6.2/common/lightning_cli.html): PL introduced a similar functionality. You can use it if you are in the PL ecosystem.\n\n## Why create a separate package?\n\n`OmegaConf` plans to remain agnostic to the command line argument parser, therefore we cannot merge this solution upstream. [See related issue](https://github.com/omry/omegaconf/issues/569).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "omegaconf-argparse",
            "package_url": "https://pypi.org/project/omegaconf-argparse/",
            "platform": null,
            "project_url": "https://pypi.org/project/omegaconf-argparse/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/omegaconf-argparse/0.1.0/",
            "requires_dist": [
                "omegaconf (>=2.0.6,<3.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Integration between Omegaconf and argparse for mixed config file and CLI arguments",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15792468,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fbeca3ca66c06cb000f09a8685996c96",
                    "sha256": "3f7d855f559fd463cae1620ed11bb27ce36ab9067f49d0bc2050b767726a9278"
                },
                "downloads": -1,
                "filename": "omegaconf_argparse-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fbeca3ca66c06cb000f09a8685996c96",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 9068,
                "upload_time": "2022-11-16T18:39:54",
                "upload_time_iso_8601": "2022-11-16T18:39:54.757459Z",
                "url": "https://files.pythonhosted.org/packages/4d/96/cbf696901daa57700335cef3d6f8a5b1ab080aaaf287d3efdfd1575e2a3e/omegaconf_argparse-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dac8d7600b2329267e4478b3b5a6fece",
                    "sha256": "fd954f4e7d2aa57f3d40a4d050dcc3a49484aed7034b2fa3396bfa536f86e278"
                },
                "downloads": -1,
                "filename": "omegaconf_argparse-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "dac8d7600b2329267e4478b3b5a6fece",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 8672,
                "upload_time": "2022-11-16T18:39:56",
                "upload_time_iso_8601": "2022-11-16T18:39:56.145191Z",
                "url": "https://files.pythonhosted.org/packages/b7/9d/e49bf7a8e822a6426b51bcc1c77b68909bf5b2d05b42eddff4d8d2e3df26/omegaconf_argparse-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}