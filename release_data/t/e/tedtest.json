{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "Tired Fox <zboehm104@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tedtest",
            "package_url": "https://pypi.org/project/tedtest/",
            "platform": null,
            "project_url": "https://pypi.org/project/tedtest/",
            "project_urls": {
                "Homepage": "https://github.com/Tired-Fox/TEDTest"
            },
            "release_url": "https://pypi.org/project/tedtest/1.0.0/",
            "requires_dist": [
                "teddecor==1.0.1"
            ],
            "requires_python": ">=3.7",
            "summary": "Simple python testing framework",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15630008,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0e9cf723a45448ebe8664b5eadc6abad",
                    "sha256": "46d8966c634522f09e15f99466824bc5ec007bd12eb22ff0887adbcd46b84d34"
                },
                "downloads": -1,
                "filename": "tedtest-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0e9cf723a45448ebe8664b5eadc6abad",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 25583,
                "upload_time": "2022-11-02T16:35:32",
                "upload_time_iso_8601": "2022-11-02T16:35:32.846763Z",
                "url": "https://files.pythonhosted.org/packages/b0/11/7dfc43e200bab9cf74a53925e4cb3cb839c153be0847cb2a2f8b0dae668d/tedtest-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "798c776aade435541830e459700e97b7",
                    "sha256": "435052295cd22f684bc2b4fa9be5fe0ff554ac52f16d1f259320c7a44efe39ef"
                },
                "downloads": -1,
                "filename": "tedtest-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "798c776aade435541830e459700e97b7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 145094,
                "upload_time": "2022-11-02T16:35:34",
                "upload_time_iso_8601": "2022-11-02T16:35:34.084646Z",
                "url": "https://files.pythonhosted.org/packages/cc/21/e871d87897d35eabc19f8e08c862276ea66592bede4ac83e71dae5b9651f/tedtest-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "",
            "author_email": "Tired Fox <zboehm104@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "## Testing\n\nWith testing, it is as simple as importing the `UnitTest` module, `from teddecor.UnitTest import *` or `from teddecor import UnitTest`, then building a test class with test cases (functions).\n\nBelow are a few generic levels of testing which can be mixed together however you want.\n\n1. Use the provided `runTest` function to run a single method with the `@test` decorator\n    ```python\n    from teddecor.UnitTest import *\n    \n    @test\n    def test_case():\n        assert True\n\n    if __name__ == \"__main__\":\n        runTest(test_case)\n    ```\n\n2. Use the provided `Test` class to group test cases (functions) with the `@test` decorator.\n   * This meant to group test that are focuses on a specific functionality\n    ```python\n    from teddecor.UnitTest import *\n    \n    class TestClass(Test):\n        @test\n        def test_case(self):\n            assert True\n\n    if __name__ == \"__main__\":\n        TestClass().run()\n    ```\n\n3. Use the provided `TestSuite` class to group test classes and test cases together\n   * This is meant to group a more general idea. Like the tests for a app can be split into backend and front end. Where both backend and frontend are their own test suite. Then inside the suites you get more focuses.\n    ```python\n    from teddecor.UnitTest import *\n    \n    class BackendInput(Test):\n        @test\n        def user_input(self):\n            assert True\n        \n        @test\n        def file_input(self):\n            assert True\n\n    @test\n    def app_response():\n        raise NotImplementedError\n\n    if __name__ == \"__main__\":\n        TestSuite(\n            name=\"Backend\"\n            tests=[\n                BackendInput,\n                app_response,\n            ]\n        ).run()\n    ```\n\n   *  As you can see in the above example, you can use `raise NotImplementedError` to skip a test which also gives the message of `Not Implemented`\n\n4. Use provided `Asserts` and `AssertThat` modules to add readable, easy to use, testing assertions.\n   ```python\n    from teddecor.UnitTest import *\n\n    @test\n    def assert_that():\n        assertThat(12, eq(12))\n        # Reads as, assert that 12 is equal to 12\n        assertThat(\"the\", within([\"the\", \"moon\"]))\n        # Reads as, assert that \"the\" is within [\"the\", \"moon\"]\n        assertThat(\"the moon\", has(\"moon\"))\n        # Reads as, assert that \"the moon\" has \"moon\"\n\n    @test\n    def base_asserts():\n        Asserts.assert_equals(12, 12)\n   ```\n   * Read the documentation for the `Asserts` and `AssertThat` modules for more information along with how you can create your own functions for assertThat\n   \nBelow is an example test (`example.py`)\n\n```python\nfrom teddecor.UnitTest import *\n\nclass Example(Test):\n  @test\n  def test_pass(self):\n    assert True\n\nif __name__ == \"__main__\":\n  Example().main()\n```\n\nThe above example shows that you need to have a class that inherits from `UnitTest.Test`. Then when you run the `main()` function from an instance of that class,\nyou get the results printed out. The `main()` function will run any method in the class that has the `@test` decorator.\n\n> NOTE:\n> You can not use the keyword `totals` as a function name by itself inside of test suites and classes\n\n**Results:**\n\n<p align=\"center\">\n  <img src=\"images/example_test.png\" alt=\"Example Test Results\">\n</p>\n\nSince this package is used to test itself, feel free to look through the files in the repo's `tests/` folder to see **examples** and **outputs** of testing.\n\n### CLI Testing Tool\n\nThis library also includes a CLI tool to run your tests, `TEDTest`. By default, it will search your current directory recursively for python files that have classes that inherit from `Test` or methods decorated by `test`. Each file is concidered a test suite and the test classes and cases contained within it are added to a suite. It then adds teh suites to a `RunResult` with the name of your current directory and runs them. This outputs the results to the terminal. Check out `TEDTest -h` for extra options and customization for the CLI tool.\n\n<p align=\"center\">\n  <img src=\"images/TED_example_5.png\" alt=\"Example Test Results\">\n</p>\n\n<p align=\"center\" style=\"bold\">\n  To see more testing features like, mocking, setup, result save file types, etc... see the <a href=\"https://tired-fox.github.io/TEDDecor/teddecor.html\" title=\"Docs\" target=\"_blank\">documentation</a>.\n<p>\n\n**Example from testing the module itself**\n<p align=\"center\">\n  <img src=\"images/TED_example_7.png\" alt=\"Example Test Results\">\n</p>",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tedtest",
            "package_url": "https://pypi.org/project/tedtest/",
            "platform": null,
            "project_url": "https://pypi.org/project/tedtest/",
            "project_urls": {
                "Documentation": "https://tired-fox.github.io/TEDTest/",
                "Homepage": "https://github.com/Tired-Fox/TEDTest"
            },
            "release_url": "https://pypi.org/project/tedtest/1.0.1/",
            "requires_dist": [
                "teddecor>=1.0.2"
            ],
            "requires_python": ">=3.7",
            "summary": "Simple python testing framework",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15630008,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4646f1487bafd767e48a4a115d2ad23a",
                    "sha256": "bfd9096002a2ea7dd335f7c727aff347f4d023bb73df81458c1e5befcbbe0b58"
                },
                "downloads": -1,
                "filename": "tedtest-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4646f1487bafd767e48a4a115d2ad23a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 27643,
                "upload_time": "2022-11-02T17:09:05",
                "upload_time_iso_8601": "2022-11-02T17:09:05.052270Z",
                "url": "https://files.pythonhosted.org/packages/28/f1/0e4c35e5ef9f83e40ba170c9d03ff74cf1e345e13da3213a3cabaac2941c/tedtest-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a5b622cb218d207236201c3c9aebe080",
                    "sha256": "c7a6cd7a5d55a8775fa6637661d2899d182594ba8fd85baf21f0131211b11d93"
                },
                "downloads": -1,
                "filename": "tedtest-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a5b622cb218d207236201c3c9aebe080",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 492083,
                "upload_time": "2022-11-02T17:09:07",
                "upload_time_iso_8601": "2022-11-02T17:09:07.068845Z",
                "url": "https://files.pythonhosted.org/packages/92/0b/9562a699efcb4be7f3d81be67defd860bf6e4598360ceff08387d92f9a94/tedtest-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}