{
    "1.0.0": {
        "info": {
            "author": "evtn",
            "author_email": "courage@evtn.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/courage-py/gardener",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gardener",
            "package_url": "https://pypi.org/project/gardener/",
            "platform": "",
            "project_url": "https://pypi.org/project/gardener/",
            "project_urls": {
                "Homepage": "https://github.com/courage-py/gardener"
            },
            "release_url": "https://pypi.org/project/gardener/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Dynamic grammar generator for Lark parsing toolkit",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12487459,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "43dafd8bc4301734fdef3cd0f71b82cd",
                    "sha256": "d9be8c8a858624f5cfa9ea63decc78fbde5e0497942651ce004c5c3f09c3dda4"
                },
                "downloads": -1,
                "filename": "gardener-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "43dafd8bc4301734fdef3cd0f71b82cd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4131,
                "upload_time": "2021-12-31T10:15:13",
                "upload_time_iso_8601": "2021-12-31T10:15:13.977668Z",
                "url": "https://files.pythonhosted.org/packages/c1/99/c4cb794d8d61113eba3e019409038f611dd2e93a8da531d85fc8895959c0/gardener-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "evtn",
            "author_email": "courage@evtn.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/courage-py/gardener",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gardener",
            "package_url": "https://pypi.org/project/gardener/",
            "platform": "",
            "project_url": "https://pypi.org/project/gardener/",
            "project_urls": {
                "Homepage": "https://github.com/courage-py/gardener"
            },
            "release_url": "https://pypi.org/project/gardener/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Dynamic grammar generator for Lark parsing toolkit",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12487459,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2c8cb60cd1efdedd9972433b79dbc141",
                    "sha256": "88bba160ba1c0b71bb4bed1d74ed360576265e60eede1928f0b48f4a1742a8c2"
                },
                "downloads": -1,
                "filename": "gardener-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2c8cb60cd1efdedd9972433b79dbc141",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4135,
                "upload_time": "2021-12-31T10:22:49",
                "upload_time_iso_8601": "2021-12-31T10:22:49.432183Z",
                "url": "https://files.pythonhosted.org/packages/3f/d1/dd5123298c57118f440d2a90a27649a957a8293bc4ed0a48a783e7e8c7b1/gardener-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "evtn",
            "author_email": "courage@evtn.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/courage-py/gardener",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gardener",
            "package_url": "https://pypi.org/project/gardener/",
            "platform": "",
            "project_url": "https://pypi.org/project/gardener/",
            "project_urls": {
                "Homepage": "https://github.com/courage-py/gardener"
            },
            "release_url": "https://pypi.org/project/gardener/1.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Tree manipulation module",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12487459,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "48c82e9a8cc213237e4bb9159031ff6a",
                    "sha256": "6da9eba2156cb94000b3b81df95b7678e0eaff355b267be842b62b25b1fb1435"
                },
                "downloads": -1,
                "filename": "gardener-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "48c82e9a8cc213237e4bb9159031ff6a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4131,
                "upload_time": "2022-01-02T08:39:54",
                "upload_time_iso_8601": "2022-01-02T08:39:54.335319Z",
                "url": "https://files.pythonhosted.org/packages/88/80/97fb10c1ae5aaca507dc1544b5df5e86c8b08a3e784ea0fd079951c57e94/gardener-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.3": {
        "info": {
            "author": "evtn",
            "author_email": "courage@evtn.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "# gardener - simple tree manipulation module\n\n## Basic usage\n\n```python\nfrom gardener import Node, register_hook\n\n@register_hook(\"child\")\ndef child(node):\n    return Node.another_child(\n        values=[value * 2 for value in node.values]\n    )\n\n\ntree = Node.root(\n    value=56,\n    some_property=Node.child(\n        values=[10, 20, 80]\n    )\n)\n\n\nprint(tree.pretty())\n\"\"\"\n{\n  \"key\": \"root\",\n  \"props\": {\n    \"value\": 56,\n    \"some_property\": {\n      \"key\": \"another_child\",\n      \"props\": {\n        \"values\": [\n          20,\n          40,\n          160\n        ]\n      }\n    }\n  }\n}\n\"\"\"\n```\n\n## Installation\n\n`python -m pip install gardener`\n\n## Getting started\n\nGardener is useful for tree manipulation (building and transforming complex trees)\n\nTo start working with it, you need to understand a few concepts:\n\n*hook* is a function called on node creation. It can create a brand new node or change current one.    \n*node* is an object with a *key* - string identifier and *props* - an arbitrary dictionary\n\n## Building a tree\n\nTo build a tree, you can use `Node.name[.name2.name3...](**props)`:\n\n```python\nfrom gardener import Node\n\n\nroot = Node.root() # props={}, key=\"root\"\noak = Node.tree.oak(age=23) # props={\"age\": 23}, key=\"tree:oak\"\nlong_name = Node.very.long.node.key() # props={}, key=\"very:long:node:key\"\n```\n\nArbitrary name length makes it possible to create namespaces:\n\n```python\nfrom gardener import Node\n\ntree = Node.tree\n\ntree.oak(age=23) # props={\"age\": 23}, key=\"tree:oak\"\ntree.pine(age=2) # props={\"age\": 2}, key=\"tree:pine\"\n\n```\n\n## Hooks\n\nTo transform your tree, you can define any number of hooks.    \nHooks are called on node creation, in order they were defined - hooks defined earlier would be called earlier.    \n\nA hook is just a function getting node as argument and returning a transformed node.    \nTo define hook, use `register_hook(key)`:    \n\n```python\nfrom gardener import Node, register_hook\n\n@register_hook(\"car\")\ndef make_any_car_faster(node):\n    node.engine.horsepower = node.engine.horsepower * 5\n    return node\n\n@register_hook(\"engine\")\ndef engine_tweak(node):\n    node.horsepower -= 1\n    return node\n\n@register_hook(\"car\")\ndef no_red_cars(node):\n    if node.color == \"red\":\n        node.color = \"black\"\n    return node\n\n@register_hook(\"car\")\ndef make_supercar(node):\n    if node.engine.horsepower > 500:\n        return Node.supercar(**node.props)\n    return node\n\nparking_lot = Node.lot(\n    cars=[\n        Node.car(\n            engine=Node.engine(horsepower=100),\n            color=\"red\"\n        ),\n        Node.car(\n            engine=Node.engine(horsepower=200),\n            color=\"white\"\n        ),\n        Node.car(\n            engine=Node.engine(horsepower=205),\n            color=\"red\"\n        ),\n    ]\n)\n# notice how car.engine.horsepower is (x - 1) * 5 because engine is created before the car\nprint(parking_lot.pretty())\n\"\"\"\n{\n  \"key\": \"lot\",\n  \"props\": {\n    \"cars\": [\n      {\n        \"key\": \"car\",\n        \"props\": {\n          \"engine\": {\n            \"key\": \"engine\",\n            \"props\": {\n              \"horsepower\": 495\n            }\n          },\n          \"color\": \"black\"\n        }\n      },\n      {\n        \"key\": \"supercar\",\n        \"props\": {\n          \"engine\": {\n            \"key\": \"engine\",\n            \"props\": {\n              \"horsepower\": 995\n            }\n          },\n          \"color\": \"white\"\n        }\n      },\n      {\n        \"key\": \"supercar\",\n        \"props\": {\n          \"engine\": {\n            \"key\": \"engine\",\n            \"props\": {\n              \"horsepower\": 1020\n            }\n          },\n          \"color\": \"black\"\n        }\n      }\n    ]\n  }\n}\n\"\"\"\n```\n\n*Important notes*:    \n- if your hook changes existing node (but key remains the same) - use node.copy() or make changes in place.    \n- if you change the key of the node, make a new node.    \n\nFirst is needed to avoid infinite recursion (otherwise your hook would be called again and again on the same node).    \nSecond is needed to ensure hooks are called on the new node.    \n\n## Pretty printing\n\nGardener uses built-in `json` module to make a pretty-printed tree:\n\n```python\nfrom gardener import Node\n\nprint(Node.tree.oak(age=23).pretty())\n\"\"\"\n{\n  \"key\": \"tree:oak\",\n  \"props\": {\n    \"age\": 23\n  }\n}\n\"\"\"\n```\n\nIf your values are JSON serializable, this would work out-of-the-box.    \nOtherwise you will need to extend GardenerJSON class:\n\n```python\nfrom gardener import Node, GardenerJSON\n\nclass MyGardenerJSON(GardenerJSON):\n    def default(self, obj):\n        if obj is Ellipsis:\n            return \"...\" # return any JSON serializable object\n        return super().default(obj)\n\n# Ellipsis is not JSON serializable\nprint(Node.tree.oak(cool_object=Ellipsis).pretty(cls=MyGardenerJSON))\n\"\"\"\n{\n  \"key\": \"tree:oak\",\n  \"props\": {\n    \"cool_object\": \"...\"\n  }\n}\n\"\"\"\n\n```\n\nIn fact, `Node.pretty` accepts any keyword argument of `json.dumps`",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/courage-py/gardener",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gardener",
            "package_url": "https://pypi.org/project/gardener/",
            "platform": "",
            "project_url": "https://pypi.org/project/gardener/",
            "project_urls": {
                "Homepage": "https://github.com/courage-py/gardener"
            },
            "release_url": "https://pypi.org/project/gardener/1.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Tree manipulation module",
            "version": "1.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12487459,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "00bace75090e754f51c2c01e6945b0d8",
                    "sha256": "0e42894741b88ec2d3fa05b3ebbe00a7c7381d41be25669644eac12d5ce60da5"
                },
                "downloads": -1,
                "filename": "gardener-1.0.3-py3.9.egg",
                "has_sig": false,
                "md5_digest": "00bace75090e754f51c2c01e6945b0d8",
                "packagetype": "bdist_egg",
                "python_version": "1.0.3",
                "requires_python": ">=3.6",
                "size": 5389,
                "upload_time": "2022-01-05T20:01:15",
                "upload_time_iso_8601": "2022-01-05T20:01:15.474705Z",
                "url": "https://files.pythonhosted.org/packages/97/31/a891ecabcdd4605ce9326eecce3d4e0fdf4b7818a003b50775d16433b04f/gardener-1.0.3-py3.9.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c34a4e9df7b3ec0914d7e6e1c468e93",
                    "sha256": "726a9387cdd1865fa5e148921a6f1b1ad9d82c2447e30a94226bf6d5be891aaf"
                },
                "downloads": -1,
                "filename": "gardener-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "8c34a4e9df7b3ec0914d7e6e1c468e93",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4090,
                "upload_time": "2022-01-05T20:01:17",
                "upload_time_iso_8601": "2022-01-05T20:01:17.317022Z",
                "url": "https://files.pythonhosted.org/packages/0d/9e/82c63a3e95d6c1b1bde947f8b45e1c8c7a9b35d1ad504785875f479de78d/gardener-1.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}