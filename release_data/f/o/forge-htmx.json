{
    "0.1.0": {
        "info": {
            "author": "Dave Gaeddert",
            "author_email": "dave.gaeddert@dropseed.dev",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 4",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.forgepackages.com/",
            "keywords": "django,saas,forge,framework",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "forge-htmx",
            "package_url": "https://pypi.org/project/forge-htmx/",
            "platform": null,
            "project_url": "https://pypi.org/project/forge-htmx/",
            "project_urls": {
                "Documentation": "https://www.forgepackages.com/docs/",
                "Homepage": "https://www.forgepackages.com/",
                "Repository": "https://github.com/forgepackages/forge-htmx"
            },
            "release_url": "https://pypi.org/project/forge-htmx/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "HTMX integration for Forge",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15538829,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "74872e471928f3a9a8d8598a6e67a164",
                    "sha256": "d2945107e621e514e777f555b9dac06086a79ff23be376d86e34b77f9b72bb81"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "74872e471928f3a9a8d8598a6e67a164",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 21980,
                "upload_time": "2022-09-20T02:42:21",
                "upload_time_iso_8601": "2022-09-20T02:42:21.914755Z",
                "url": "https://files.pythonhosted.org/packages/6c/ae/b13ddc3f293edcf7560c7c4ee420ef8bd7fe7d26c159c93a8bda62fd0aa6/forge_htmx-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7f0febab0f8862a499d92b763b3d2665",
                    "sha256": "1c8e11f9eaf61e1e1d3f8c86a9874d4258c85cad670f3f6b4ff294ba47e84395"
                },
                "downloads": -1,
                "filename": "forge-htmx-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "7f0febab0f8862a499d92b763b3d2665",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 25334,
                "upload_time": "2022-09-20T02:42:20",
                "upload_time_iso_8601": "2022-09-20T02:42:20.465875Z",
                "url": "https://files.pythonhosted.org/packages/02/3e/d60b9d136339b3a8830a15ade6e321dfdf297acc22d487225d2e6306e62c/forge-htmx-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Dave Gaeddert",
            "author_email": "dave.gaeddert@dropseed.dev",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 4",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.forgepackages.com/",
            "keywords": "django,saas,forge,framework",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "forge-htmx",
            "package_url": "https://pypi.org/project/forge-htmx/",
            "platform": null,
            "project_url": "https://pypi.org/project/forge-htmx/",
            "project_urls": {
                "Documentation": "https://www.forgepackages.com/docs/",
                "Homepage": "https://www.forgepackages.com/",
                "Repository": "https://github.com/forgepackages/forge-htmx"
            },
            "release_url": "https://pypi.org/project/forge-htmx/0.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "HTMX integration for Forge",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15538829,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6b55f975bc3b67eb74a96074c47f9bbe",
                    "sha256": "a94e443b0ca0827c2e37f46f1910d6e6131c8f0cc9fbc2657d5f8ff5ff85fe11"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6b55f975bc3b67eb74a96074c47f9bbe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 22770,
                "upload_time": "2022-09-29T16:35:07",
                "upload_time_iso_8601": "2022-09-29T16:35:07.286352Z",
                "url": "https://files.pythonhosted.org/packages/3c/a5/592089d9798c52cdb41f87f5366abe3268ae5dc1f5fe1d7efe4f795a24fe/forge_htmx-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "31b8a0c58a4ea693597ed252bbc4a3a1",
                    "sha256": "320cd0e80632b2f06fac3d26d7666a288dcd62e7b80ba046889a76547282cc94"
                },
                "downloads": -1,
                "filename": "forge-htmx-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "31b8a0c58a4ea693597ed252bbc4a3a1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 26118,
                "upload_time": "2022-09-29T16:35:06",
                "upload_time_iso_8601": "2022-09-29T16:35:06.134714Z",
                "url": "https://files.pythonhosted.org/packages/4b/bf/c175171d541c7af0e4fb874f05a40b8404d95bcda805aebb36054e5d5795/forge-htmx-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "Dave Gaeddert",
            "author_email": "dave.gaeddert@dropseed.dev",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 4",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.forgepackages.com/",
            "keywords": "django,saas,forge,framework",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "forge-htmx",
            "package_url": "https://pypi.org/project/forge-htmx/",
            "platform": null,
            "project_url": "https://pypi.org/project/forge-htmx/",
            "project_urls": {
                "Documentation": "https://www.forgepackages.com/docs/",
                "Homepage": "https://www.forgepackages.com/",
                "Repository": "https://github.com/forgepackages/forge-htmx"
            },
            "release_url": "https://pypi.org/project/forge-htmx/0.2.1/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "HTMX integration for Forge",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15538829,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3aaa4aec8f2a04ab302810d3c6dfd5e3",
                    "sha256": "dd7fc911dcb4c01a0751c8b1c4029881666657036351db0bdb9b26fe267b4614"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3aaa4aec8f2a04ab302810d3c6dfd5e3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 22862,
                "upload_time": "2022-10-25T03:02:37",
                "upload_time_iso_8601": "2022-10-25T03:02:37.213166Z",
                "url": "https://files.pythonhosted.org/packages/6e/50/d6ad463cbb94b7dfe14e887b250396f0408382eef03de2ff1a56c8f067b8/forge_htmx-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cc750328304c36a3cd65197bb17149f",
                    "sha256": "3734d967bd423f0e2676f05eee232a42765792edbd24d970d1d2f5ba94586b3d"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1cc750328304c36a3cd65197bb17149f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 26172,
                "upload_time": "2022-10-25T03:02:38",
                "upload_time_iso_8601": "2022-10-25T03:02:38.626605Z",
                "url": "https://files.pythonhosted.org/packages/01/8d/3d555ec88644e7b7b92521bf3be92fecaf19d2487db5311943a2306f42cd/forge_htmx-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.2": {
        "info": {
            "author": "Dave Gaeddert",
            "author_email": "dave.gaeddert@dropseed.dev",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 4",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# forge-htmx\n\nThe `forge-htmx` Django package adds a couple of unique features for working with HTMX.\nOne is [template fragments](#template-fragments) and the other is [view actions](#view-actions).\n\nThe combination of these features lets you build HTMX-powered views that focus on server-side rendering and avoid overly complicated URL structures or REST APIs that you may not otherwise need.\n\nThe `HTMXViewMixin` is the starting point for the server-side HTMX behavior.\nTo use these feaures on a view,\nsimply inherit from the class (yes, this is designed to work with class-based views).\n\n```python\nfrom django.views.generic import TemplateView\n\nfrom forgehtmx.views import HTMXViewMixin\n\n\nclass HomeView(HTMXViewMixin, TemplateView):\n    template_name = \"home.html\"\n```\n\nIn your `base.html` template (or wherever need the HTMX scripts),\nyou can use the `{% htmx_js %}` template tag:\n\n```html\n<!-- base.template.html -->\n{% load htmx %}\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My Site</title>\n    {% htmx_js %}\n</head>\n<body>\n    {% block content %}{% endblock %}\n</body>\n```\n\n## Template Fragments\n\nAn `{% htmxfragment %}` can be used to render a specific part of your template in HTMX responses.\nWhen you use a fragment, all `hx-get`, `hx-post`, etc. elements inside that fragment will automatically send a request to the current URL,\nrender *only* the updated content for the fragment,\nand swap out the fragment.\n\nHere's an example:\n\n```html\n<!-- home.html -->\n{% extends \"base.html\" %}\n\n{% load htmx %}\n\n{% block content %}\n<header>\n  <h1>Page title</h1>\n</header>\n\n<main>\n  {% htmxfragment main %}\n  <p>The time is {% now \"jS F Y H:i\" %}</p>\n\n  <button hx-get>Refresh</button>\n  {% endhtmxfragment %}\n</main>\n{% endblock %}\n```\n\nEverything inside `{% htmxfragment %}` will automatically update when \"Refresh\" is clicked.\n\n### How does it work?\n\nWhen you use the `{% htmxfragment %}` tag,\na standard `div` is output that looks like this:\n\n```html\n<div fhx-fragment=\"main\" hx-swap=\"outerHTML\" hx-target=\"this\" hx-indicator=\"this\">\n  {{ fragment_content }}\n</div>\n```\n\nThe `fhx-fragment` is a custom attribute that we've added (\"F\" is for \"Forge\"),\nbut the rest are standard HTMX attributes.\n\nWhen Django renders the response to an HTMX request,\nit will get the `FHX-Fragment` header,\nfind the fragment with that name in the template,\nand render that for the response.\n\nThen the response content is automatically swapped in to replace the content of your `{% htmxfragment %}` tag.\n\nNote that there is no URL specified on the `hx-get` attribute.\nBy default, HTMX will send the request to the current URL for the page.\nWhen you're working with fragments, this is typically the behavior you want!\n(You're on a page and want to selectively re-render a part of that page.)\n\nThe `{% htmxfragment %}` tag is somewhat similar to a `{% block %}` tag --\nthe fragments on a page should be named and unique,\nand you can't use it inside of loops.\nFor fragment-like behavior inside of a for-loop,\nyou'll most likely want to set up a dedicated URL that can handle a single instance of the looped items,\nand maybe leverage [dedicated templates](#dedicated-templates).\n\n## View Actions\n\nView actions let you define multiple \"actions\" on a class-based view.\nThis is an alternative to defining specific API endpoints or form views to handle basic button interactions.\n\nWith view actions you can design a single view that renders a single template,\nand associate buttons in that template with class methods in the view.\n\nAs an example, let's say we have a `PullRequest` model and we want users to be able to open, close, or merge it with a button.\n\nIn our template, we would use the `fhx-action` attribute to name the action:\n\n```html\n{% extends \"base.html\" %}\n\n{% load htmx %}\n\n{% block content %}\n<header>\n  <h1>{{ pullrequest }}</h1>\n</header>\n\n<main>\n  {% htmxfragment pullrequest %}\n  <p>State: {{ pullrequest.state }}</p>\n\n  {% if pullrequest.state == \"open\" %}\n    <!-- If it's open, they can close or merge it -->\n    <button hx-post fhx-action=\"close\">Close</button>\n    <button hx-post fhx-action=\"merge\">Merge</button>\n  {% else if pullrequest.state == \"closed\" %}\n    <!-- If it's closed, it can be re-opened -->\n    <button hx-post fhx-action=\"open\">Open</button>\n  {% endif %}\n\n  {% endhtmxfragment %}\n</main>\n{% endblock %}\n```\n\nThen in the view class, we can define methods for each HTTP method + `fhx-action`:\n\n```python\nclass PullRequestDetailView(HTMXViewMixin, DetailView):\n    def get_queryset(self):\n        # The queryset will apply to all actions on the view, so \"permission\" logic can be shared\n        return super().get_queryset().filter(users=self.request.user)\n\n    # Action handling methods follow this format:\n    # htmx_{method}_{action}\n    def htmx_post_open(self, request, *args, **kwargs):\n        self.object = self.get_object()\n\n        if self.object.state != \"closed\":\n            raise ValueError(\"Only a closed pull request can be opened\")\n\n        self.object.state = \"closed\"\n        self.object.save()\n\n        # Render the updated content the standard calls\n        # (which will selectively render our fragment if applicable)\n        context = self.get_context_data(object=self.object)\n        return self.render_to_response(context)\n\n    def htmx_post_close(self, request, *args, **kwargs):\n        self.object = self.get_object()\n\n        if self.object.state != \"open\":\n            raise ValueError(\"Only a open pull request can be closed\")\n\n        self.object.state = \"open\"\n        self.object.save()\n\n        context = self.get_context_data(object=self.object)\n        return self.render_to_response(context)\n\n    def htmx_post_merge(self, request, *args, **kwargs):\n        self.object = self.get_object()\n\n        if self.object.state != \"open\":\n            raise ValueError(\"Only a open pull request can be merged\")\n\n        self.object.state = \"merged\"\n        self.object.save()\n\n        context = self.get_context_data(object=self.object)\n        return self.render_to_response(context)\n```\n\nThis can be a matter of preference,\nbut typically you may end up building out an entire form, API, or set of URLs to handle these behaviors.\nIf you application is only going to handle these actions via HTMX,\nthen a single View may be a simpler way to do it.\n\nNote that currently we don't have many helper-functions for parsing or returning HTMX responses --\nthis can basically all be done through standard request and response headers:\n\n```python\nclass PullRequestDetailView(HTMXViewMixin, DetailView):\n    def get_queryset(self):\n        # The queryset will apply to all actions on the view, so \"permission\" logic can be shared\n        return super().get_queryset().filter(users=self.request.user)\n\n    # You can also leave off the \"fhx-action\" attribute and just handle the HTTP method\n    def htmx_delete(self, request, *args, **kwargs):\n        self.object = self.get_object()\n\n        self.object.delete()\n\n        # Tell HTMX to do a client-side redirect when it receives the response\n        response = HttpResponse(status=204)\n        response[\"HX-Redirect\"] = \"/\"\n        return response\n```\n\n## Dedicated Templates\n\nA small additional features of `forge-htmx` is that it will automatically find templates named `{template_name}_htmx.html` for HTMX requests.\nMore than anything, this is just a nice way to formalize a naming scheme for template \"partials\" dedicated to HTMX.\n\nBecause template fragments don't work inside of loops,\nfor example,\nyou'll often need to define dedicated URLs to handle the HTMX behaviors for individual items in a loop.\nYou can sometimes think of these as \"pages within a page\".\n\nSo if you have a template that renders a collection of items,\nyou can do the initial render using a Django `{% include %}`:\n\n```html\n<!-- pullrequests/pullrequest_list.html -->\n{% extends \"base.html\" %}\n\n{% block content %}\n\n{% for pullrequest in pullrequests %}\n<div>\n  {% include \"pullrequests/pullrequest_detail_htmx.html\" %}\n</div>\n{% endfor %}\n\n{% endblock %}\n```\n\nAnd then subsequent HTMX requests/actions on individual items can be handled by a separate URL/View:\n\n```html\n<!-- pullrequests/pullrequest_detail_htmx.html -->\n<div hx-url=\"{% url 'pullrequests:detail' pullrequest.uuid %}\" hx-swap=\"outerHTML\" hx-target=\"this\">\n  <!-- Send all HTMX requests to a URL for single pull requests (works inside of a loop, or on a single detail page) -->\n  <h2>{{ pullrequest.title }}</h2>\n  <button hx-get>Refresh</button>\n  <button hx-post fhx-action=\"update\">Update</button>\n</div>\n```\n\n*If* you need a URL to render an individual item, you can simply include the same template fragment in most cases:\n\n```html\n<!-- pullrequests/pullrequest_detail.html -->\n{% extends \"base.html\" %}\n\n{% block content %}\n\n{% include \"pullrequests/pullrequest_detail_htmx.html\" %}\n\n{% endblock %}\n```\n\n```python\n# urls.py and views.py\n# urls.py\napp_name = \"pullrequests\"\n\nurlpatterns = [\n  path(\"<uuid:uuid>/\", views.PullRequestDetailView.as_view(), name=\"detail\"),\n]\n\n# views.py\nclass PullRequestDetailView(HTMXViewMixin, DetailView):\n  def htmx_post_update(self, request, *args, **kwargs):\n      self.object = self.get_object()\n\n      self.object.update()\n\n      context = self.get_context_data(object=self.object)\n      return self.render_to_response(context)\n```\n\n## Tailwind CSS variant\n\nThe standard behavior for `{% htmxfragment %}` is to set `hx-indicator=\"this\"` on the rendered element.\nThis tells HTMX to add the `htmx-request` class to the fragment element when it is loading.\n\nSince Forge emphasizes using Tailwind CSS,\nhere's a simple variant you can add to your `tailwind.config.js` to easily style the loading state:\n\n```js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    // Add variants for htmx-request class for loading states\n    plugin(({addVariant}) => addVariant('htmx-request', ['&.htmx-request', '.htmx-request &']))\n  ],\n}\n```\n\nYou can then prefix any class with `htmx-request:` to decide what it looks like while HTMX requests are being sent:\n\n```html\n<!-- The \"htmx-request\" class will be added to the <form> by default -->\n<form hx-post=\"{{ url }}\">\n    <!-- Showing an element -->\n    <div class=\"hidden htmx-request:block\">\n        Loading\n    </div>\n\n    <!-- Changing a button's class -->\n    <button class=\"text-white bg-black htmx-request:opacity-50 htmx-request:cursor-wait\" type=\"submit\">Submit</button>\n</form>\n```\n\n## CSRF tokens\n\nWe configure CSRF tokens for you with the HTMX JS API.\nYou don't have to put `hx-headers` on the `<body>` tag, for example.\n\n## Error classes\n\nThis app also includes an HTMX extension for adding error classes for failed requests.\n\n- `htmx-error-response` for `htmx:responseError`\n- `htmx-error-response-{{ status_code }}` for `htmx:responseError`\n- `htmx-error-send` for `htmx:sendError`\n\nTo enable them, use `hx-ext=\"error-classes\"`.\n\nYou can add the ones you want as Tailwind variants and use them to show error messages.\n\n```js\nconst plugin = require('tailwindcss/plugin')\n\nmodule.exports = {\n  plugins: [\n    // Add variants for htmx-request class for loading states\n    plugin(({addVariant}) => addVariant('htmx-error-response-429', ['&.htmx-error-response-429', '.htmx-error-response-429 &']))\n  ],\n}\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.forgepackages.com/",
            "keywords": "django,saas,forge,framework",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "forge-htmx",
            "package_url": "https://pypi.org/project/forge-htmx/",
            "platform": null,
            "project_url": "https://pypi.org/project/forge-htmx/",
            "project_urls": {
                "Documentation": "https://www.forgepackages.com/docs/",
                "Homepage": "https://www.forgepackages.com/",
                "Repository": "https://github.com/forgepackages/forge-htmx"
            },
            "release_url": "https://pypi.org/project/forge-htmx/0.2.2/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "HTMX integration for Forge",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15538829,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "afe4614e255152411a2396c8dfab12f6",
                    "sha256": "54ced0541fe5913dcd802cc27db98ce7bad5c28217a57b1797859fb10f121553"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.2.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "afe4614e255152411a2396c8dfab12f6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 22732,
                "upload_time": "2022-10-26T15:07:28",
                "upload_time_iso_8601": "2022-10-26T15:07:28.707173Z",
                "url": "https://files.pythonhosted.org/packages/38/43/59bba10eb465b78c6a46b22f474d067e970187a0cf3b515a9f65a06269be/forge_htmx-0.2.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ceb7e8054f2d6ba4f3d8a8ec2679048",
                    "sha256": "e2f7fb1ab06c6716f49d761ab66769f4ff0943e199a23df5d8646fbecebbc9fc"
                },
                "downloads": -1,
                "filename": "forge_htmx-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "5ceb7e8054f2d6ba4f3d8a8ec2679048",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 26100,
                "upload_time": "2022-10-26T15:07:30",
                "upload_time_iso_8601": "2022-10-26T15:07:30.313739Z",
                "url": "https://files.pythonhosted.org/packages/fa/f4/913e17f94f8dbf43582d85be895a57a4956558d9d318a8597dcadf572caa/forge_htmx-0.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}