{
    "0.1.0": {
        "info": {
            "author": "AIRL and InstaDeep Ltd",
            "author_email": "adaptive.intelligent.robotics@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "[![Documentation Status](https://readthedocs.org/projects/qdax/badge/?version=latest)](https://qdax.readthedocs.io/en/latest/?badge=latest)\n![pytest](https://github.com/adaptive-intelligent-robotics/QDax/actions/workflows/ci.yaml/badge.svg?branch=main)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/adaptive-intelligent-robotics/QDax/blob/main/LICENSE)\n[![codecov](https://codecov.io/gh/adaptive-intelligent-robotics/QDax/branch/feat/add-codecov/graph/badge.svg)](https://codecov.io/gh/adaptive-intelligent-robotics/QDax)\n\n\n# QDax: Accelerated Quality-Diversity\nQDax is a tool to accelerate Quality-Diversity (QD) and neuro-evolution algorithms through hardware accelerators and massive parallelization. QD algorithms usually take days/weeks to run on large CPU clusters. With QDax, QD algorithms can now be run in minutes! \u23e9 \u23e9 \ud83d\udd5b\n\nQDax has been developed as a research framework: it is flexible and easy to extend and build on and can be used for any problem setting. Get started with simple example and run a QD algorithm in minutes here! [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/mapelites_example.ipynb)\n\n- QDax [paper](https://arxiv.org/abs/2202.01258)\n- QDax [documentation](https://qdax.readthedocs.io/en/latest/)\n\n\n## Installation\n\nThe latest stable release of QDax can be installed directly from source with:\n```bash\npip install qdax\n```\n\nHowever, we also provide and recommend using either Docker, Singularity or conda environments to use the repository. Detailed steps to do so are available in the [documentation](https://qdax.readthedocs.io/en/latest/installation/).\n\n## Basic API Usage\nFor a full and interactive example to see how QDax works, we recommend starting with the tutorial-style [Colab notebook](./notebooks/mapelites_example.ipynb). It is an example of the MAP-Elites algorithm used to evolve a population of controllers on a chosen Brax environment (Walker by default).\n\nHowever, a summary of the main API usage is provided below:\n```python\nimport qdax\nfrom qdax.core.map_elites import MAPElites\n\n# Instantiate MAP-Elites\nmap_elites = MAPElites(\n    scoring_function=scoring_fn,\n    emitter=mixing_emitter,\n    metrics_function=metrics_function,\n)\n\n# Initializes repertoire and emitter state\nrepertoire, emitter_state, random_key = map_elites.init(init_variables, centroids, random_key)\n\n# Run MAP-Elites loop\nfor i in range(num_iterations):\n    (repertoire, emitter_state, metrics, random_key,) = map_elites.update(\n            repertoire,\n            emitter_state,\n            random_key,\n        )\n\n# Get contents of repertoire\nrepertoire.genotypes, repertoire.fitnesses, repertoire.descriptors\n```\n\n\n## QDax core algorithms\nQDax currently supports the following algorithms:\n\n| Algorithm  | Example |\n| --- | --- |\n| [MAP-Elites](https://arxiv.org/abs/1504.04909) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/mapelites_example.ipynb) |\n| [CVT MAP-Elites](https://arxiv.org/abs/1610.05729) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/mapelites_example.ipynb) |\n| [Policy Gradient Assisted MAP-Elites (PGA-ME)](https://hal.archives-ouvertes.fr/hal-03135723v2/file/PGA_MAP_Elites_GECCO.pdf) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/pgame_example.ipynb) |\n| [OMG-MEGA](https://arxiv.org/abs/2106.03894) |  [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/omgmega_example.ipynb) |\n| [CMA-MEGA](https://arxiv.org/abs/2106.03894) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/cmamega_example.ipynb) |\n| [Multi-Objective Quality-Diversity (MOME)](https://arxiv.org/abs/2202.03057) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/mome_example.ipynb) |\n\n\n## QDax baseline algorithms\nThe QDax library also provides implementations for some useful baseline algorithms:\n\n| Algorithm  | Example |\n| --- | --- |\n| [DIAYN](https://arxiv.org/abs/1802.06070) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/diayn_example.ipynb) |\n| [DADS](https://arxiv.org/abs/1907.01657) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/dads_example.ipynb) |\n| [SMERL](https://arxiv.org/abs/2010.14484) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/smerl_example.ipynb) |\n| [NSGA2](https://ieeexplore.ieee.org/document/996017) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/nsga2_spea2_example.ipynb) |\n| [SPEA2](https://www.semanticscholar.org/paper/SPEA2%3A-Improving-the-strength-pareto-evolutionary-Zitzler-Laumanns/b13724cb54ae4171916f3f969d304b9e9752a57f) | [![Open All Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adaptive-intelligent-robotics/QDax/blob/main/notebooks/nsga2_spea2_example.ipynb) |\n\n## Contributing\nIssues and contributions are welcome. Please refer to the [contribution guide](https://qdax.readthedocs.io/en/latest/guides/CONTRIBUTING/) in the documentation for more details.\n\n## Related Projects\n- [EvoJAX: Hardware-Accelerated Neuroevolution](https://github.com/google/evojax). EvoJAX is a scalable, general purpose, hardware-accelerated neuroevolution toolkit. [Paper](https://arxiv.org/abs/2202.05008)\n- [evosax: JAX-Based Evolution Strategies](https://github.com/RobertTLange/evosax)\n\n## Citing QDax\nIf you use QDax in your research and want to cite it in your work, please use:\n```\n@article{lim2022accelerated,\n  title={Accelerated Quality-Diversity for Robotics through Massive Parallelism},\n  author={Lim, Bryan and Allard, Maxime and Grillotti, Luca and Cully, Antoine},\n  journal={arXiv preprint arXiv:2202.01258},\n  year={2022}\n}\n```\n\n## Contributors\n\nQDax was developed and is maintained by the [Adaptive & Intelligent Robotics Lab (AIRL)](https://www.imperial.ac.uk/adaptive-intelligent-robotics/) and [InstaDeep](https://www.instadeep.com/).\n\n<img align=\"center\" src=\"docs/images/AIRL_logo.png\" alt=\"AIRL_Logo\" width=\"220\"/> <img align=\"center\" src=\"docs/images/instadeep_logo.png\" alt=\"InstaDeep_Logo\" width=\"220\"/>\n\n<a href=\"https://github.com/limbryan\" title=\"Bryan Lim\"><img src=\"https://github.com/limbryan.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/maxiallard\" title=\"Maxime Allard\"><img src=\"https://github.com/maxiallard.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/Lookatator\" title=\"Luca Grilloti\"><img src=\"https://github.com/Lookatator.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/manon-but-yes\" title=\"Manon Flageat\"><img src=\"https://github.com/manon-but-yes.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/Aneoshun\" title=\"Antoine Cully\"><img src=\"https://github.com/Aneoshun.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/felixchalumeau\" title=\"Felix Chalumeau\"><img src=\"https://github.com/felixchalumeau.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/ranzenTom\" title=\"Thomas Pierrot\"><img src=\"https://github.com/ranzenTom.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/Egiob\" title=\"Raphael Boige\"><img src=\"https://github.com/Egiob.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/valentinmace\" title=\"Valentin Mace\"><img src=\"https://github.com/valentinmace.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/GRichard513\" title=\"Guillaume Richard\"><img src=\"https://github.com/GRichard513.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/flajolet\" title=\"Arthur Flajolet\"><img src=\"https://github.com/flajolet.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n<a href=\"https://github.com/remidebette\" title=\"R\u00e9mi Debette\"><img src=\"https://github.com/remidebette.png\" height=\"auto\" width=\"50\" style=\"border-radius:50%\"></a>\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/adaptive-intelligent-robotics/QDax",
            "keywords": "Quality-Diversity,NeuroEvolution,Reinforcement Learning,JAX",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "qdax",
            "package_url": "https://pypi.org/project/qdax/",
            "platform": null,
            "project_url": "https://pypi.org/project/qdax/",
            "project_urls": {
                "Homepage": "https://github.com/adaptive-intelligent-robotics/QDax"
            },
            "release_url": "https://pypi.org/project/qdax/0.1.0/",
            "requires_dist": [
                "absl-py (>=1.0.0)",
                "jax (>=0.3.10)",
                "jaxlib (>=0.3.10)",
                "flax (>=0.4.1)",
                "brax (>=0.0.12)",
                "gym (>=0.23.1)",
                "numpy (>=1.22.3)",
                "scikit-learn (>=1.0.2)",
                "scipy (>=1.8.0)",
                "sklearn"
            ],
            "requires_python": "",
            "summary": "A Python Library for Quality-Diversity and NeuroEvolution",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14704509,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "878377639a72f3aa3876872cbcb4d9e4",
                    "sha256": "817303535c159616e48aea9f564dd54149224b7e6ba08eca5c273b09b6fb7ad9"
                },
                "downloads": -1,
                "filename": "qdax-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "878377639a72f3aa3876872cbcb4d9e4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 106328,
                "upload_time": "2022-08-09T14:35:35",
                "upload_time_iso_8601": "2022-08-09T14:35:35.793607Z",
                "url": "https://files.pythonhosted.org/packages/10/54/b37ee36c08cdae1a3bc0633e74112ef8c3c0185f805c718ef706e8cfd8f3/qdax-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4a925f40df1798f00ab84cd71610abc6",
                    "sha256": "6a98ba1fd3d48c1604319e617bf0e2a832a1357dd367ae0f5c9a9de40d071aae"
                },
                "downloads": -1,
                "filename": "qdax-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4a925f40df1798f00ab84cd71610abc6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 75999,
                "upload_time": "2022-08-09T14:35:37",
                "upload_time_iso_8601": "2022-08-09T14:35:37.646286Z",
                "url": "https://files.pythonhosted.org/packages/dc/a0/056f2a098e3685d963eb1c4698aa317b1d5c82ede3b517dbeb239d4defe4/qdax-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}