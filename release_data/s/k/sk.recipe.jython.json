{
    "0.0.0": {
        "info": {
            "author": "Sean Kelly",
            "author_email": "kelly@seankelly.biz",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Environment :: Console",
                "Framework :: Buildout",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Software Development :: Libraries :: Java Libraries"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "http://code.google.com/p/buildout-recipes/downloads/list",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://code.google.com/p/buildout-recipes/",
            "keywords": "buildout jython installation automation",
            "license": "BSD",
            "maintainer": null,
            "maintainer_email": null,
            "name": "sk.recipe.jython",
            "package_url": "https://pypi.org/project/sk.recipe.jython/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/sk.recipe.jython/",
            "project_urls": {
                "Download": "http://code.google.com/p/buildout-recipes/downloads/list",
                "Homepage": "http://code.google.com/p/buildout-recipes/"
            },
            "release_url": "https://pypi.org/project/sk.recipe.jython/0.0.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "A recipe for Buildout (zc.buildout) to install Jython",
            "version": "0.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 154069,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "433c01780b5ecbb987a75440e9f6660f",
                    "sha256": "1c8f3c1ef2e1c7d47c453c3bcf661ac23cd458ae506c78025acf71ff72398c87"
                },
                "downloads": -1,
                "filename": "sk.recipe.jython-0.0.0-py2.4.egg",
                "has_sig": false,
                "md5_digest": "433c01780b5ecbb987a75440e9f6660f",
                "packagetype": "bdist_egg",
                "python_version": "2.4",
                "requires_python": null,
                "size": 14925,
                "upload_time": "2010-02-21T03:16:13",
                "upload_time_iso_8601": "2010-02-21T03:16:13.560949Z",
                "url": "https://files.pythonhosted.org/packages/b9/50/616e0dba715a20496427fdc83e4d0b5d0df537a19aebcd5d16bdef4874ea/sk.recipe.jython-0.0.0-py2.4.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "95c9c172b343d9895808dda871149b83",
                    "sha256": "3c6d35ce615aa93481f28f60470ae0078592aeb55904061477b4a64cb67d0bd1"
                },
                "downloads": -1,
                "filename": "sk.recipe.jython-0.0.0-py2.5.egg",
                "has_sig": false,
                "md5_digest": "95c9c172b343d9895808dda871149b83",
                "packagetype": "bdist_egg",
                "python_version": "2.5",
                "requires_python": null,
                "size": 14905,
                "upload_time": "2010-02-21T03:15:29",
                "upload_time_iso_8601": "2010-02-21T03:15:29.549804Z",
                "url": "https://files.pythonhosted.org/packages/e0/f9/a5438616c3050f06ca94bedd7b4f1d1fff6031d8434d53607c425356ecea/sk.recipe.jython-0.0.0-py2.5.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "355cc87b2ad8c20caf028937dc7476a0",
                    "sha256": "52c223b122bab1f4235a4183c40a02a2e4c9e46a13287116eead24c3e76c6d2c"
                },
                "downloads": -1,
                "filename": "sk.recipe.jython-0.0.0-py2.6.egg",
                "has_sig": false,
                "md5_digest": "355cc87b2ad8c20caf028937dc7476a0",
                "packagetype": "bdist_egg",
                "python_version": "2.6",
                "requires_python": null,
                "size": 14906,
                "upload_time": "2010-02-21T03:12:05",
                "upload_time_iso_8601": "2010-02-21T03:12:05.045711Z",
                "url": "https://files.pythonhosted.org/packages/81/70/a0e6a5a49459adb1afed52f289ec031ec587c1369d04054ef8faa230dcc4/sk.recipe.jython-0.0.0-py2.6.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "af0294051de3c4c15935d557c268337b",
                    "sha256": "ae88d1ff18812cb9049f7e2b02a891c53154e87ee523b7b1244d72865f73082c"
                },
                "downloads": -1,
                "filename": "sk.recipe.jython-0.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "af0294051de3c4c15935d557c268337b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8669,
                "upload_time": "2010-02-21T03:12:06",
                "upload_time_iso_8601": "2010-02-21T03:12:06.541265Z",
                "url": "https://files.pythonhosted.org/packages/9c/47/e4206f3a4e1ffcf959356cd9e6dc173a13807be05ef3cfedda597d6c3a23/sk.recipe.jython-0.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.0dev-r14": {
        "info": {
            "author": "Sean Kelly",
            "author_email": "kelly@seankelly.biz",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Environment :: Console",
                "Framework :: Buildout",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Software Development :: Libraries :: Java Libraries"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "http://code.google.com/p/buildout-recipes/downloads/list",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://code.google.com/p/buildout-recipes/",
            "keywords": "buildout jython installation automation",
            "license": "BSD",
            "maintainer": null,
            "maintainer_email": null,
            "name": "sk.recipe.jython",
            "package_url": "https://pypi.org/project/sk.recipe.jython/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/sk.recipe.jython/",
            "project_urls": {
                "Download": "http://code.google.com/p/buildout-recipes/downloads/list",
                "Homepage": "http://code.google.com/p/buildout-recipes/"
            },
            "release_url": "https://pypi.org/project/sk.recipe.jython/0.0.0dev-r14/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "A recipe for Buildout (zc.buildout) to install Jython",
            "version": "0.0.0dev-r14",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 154069,
        "urls": [],
        "vulnerabilities": []
    },
    "0.0.0dev-r6": {
        "info": {
            "author": "Sean Kelly",
            "author_email": "kelly@seankelly.biz",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Environment :: Console",
                "Framework :: Buildout",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Software Development :: Libraries :: Java Libraries"
            ],
            "description": "****************\r\nsk.recipe.jython\r\n****************\r\n\r\nThis is a Buildout_ recipe that automates the download, configuration, and\r\ndeployment of Jython_, the Python_ environment implemented in Java_.\r\n\r\n\r\nIntroduction\r\n============\r\n\r\nJava is a statically-typed, object-oriented, compiled programming language with\r\na vast standard application programmer interface (API) as well as enterprise\r\nAPI.  Python is a dynamically-typed, object-oriented scripting language with a\r\nvast API but fewer enterprise features.  Jython brings the agility of Python\r\nto the elephantine vastness of Java by implementing the Python runtime in Java\r\nand providing access to Java's APIs.\r\n\r\nBuildout is a civilized, coarse-grained environment for managing repeatable\r\nsoftware deployments.  Buildout is driven by recipes, each of which accomplish\r\na specific goal, often in a cross-platform method.  This recipe,\r\n``sk.recipe.jython``, enables the user to automatically download, configure,\r\nand deploy Jython in a Buildout environment.\r\n\r\n\r\nDeveloper's Information\r\n=======================\r\n\r\nProject home page\r\n    http://code.google.com/p/buildout-recipes/\r\nSource repository\r\n    http://buildout-recipes.googlecode.com/svn/recipes/sk.recipe.jython\r\nIssue tracker\r\n    http://code.google.com/p/buildout-recipes/issues/list\r\n\r\n\r\n.. References:\r\n.. _Buildout: http://www.buildout.org/\r\n.. _Jython: http://jython.org/\r\n.. _Python: http://python.org/\r\n.. _Java: http://java.sun.com/\r\n\r\n\r\n\r\n\r\nInstallation\r\n============\r\n\r\nSince this is a Buildout recipe, there's nothing really to install.  Just\r\nmention the recipe name in a buildout and enjoy!  For example, your\r\n``buildout.cfg`` might be something like this::\r\n\r\n    [buildout]\r\n    develop = src/myegg\r\n    parts =\r\n        jython\r\n        myegg\r\n    [jython]\r\n    recipe = sk.recipe.jython\r\n    [myegg]\r\n    recipe = zc.recipe.egg\r\n    python = jython\r\n    interpreter = mypy\r\n    eggs = myegg\r\n\r\nThe above buildout accomplishes the following:\r\n\r\n* Specifies a Python egg in-development in ``src/myegg``.\r\n* Downloads and installs Jython.\r\n* Creates a new interpreter ``bin/mypy`` pre-baked with ``myegg`` and powered\r\n  by Jython.\r\n\r\nEasy!\r\n\r\n\r\nSupported Options\r\n=================\r\n\r\nThe ``sk.recipe.jython`` recipe supports the following options:\r\n\r\n``url``\r\n    (Optional.) URL to a release of Jython.  If not given, defaults to the URL to the\r\n    2.5.1 release_ of Jython.  This URL must point to a Jython installer jar\r\n    file.\r\n``md5sum``\r\n    (Optional.) MD5 hash of the Jython installer mentioned by ``url``.  If\r\n    specified, the downloaded Jython release will be checked against this hash\r\n    and installation will *not* proceed if there's a mismatch.  If both\r\n    ``md5sum`` and ``url`` are missing, then the recipe will check the 2.5.1\r\n    release for its proper MD5 hash, 2ee978eff4306b23753b3fe9d7af5b37.\r\n``java``\r\n    (Optional.) Full path to a Java virtual machine executable.  If not\r\n    specified, the recipe will find one by shell path.  This ``java``\r\n    executable will be invoked to *install* Jython only, not for Jython's\r\n    runtime. Example: ``/usr/java/j2sdk/bin/java``.\r\n``jre``\r\n    (Optional.) Home directory of a Java runtime or development kit used to\r\n    *run* Jython.  Specify this if you wish to have Jython use a separate\r\n    runtime from that of the installer.  Unlike the ``java`` option above, the\r\n    ``jre`` option expects the home directory of a Java runtime; i.e., there\r\n    will be ``bin``, ``lib``, etc., directories in the directory named by this\r\n    option.  Exampe: ``/System/Library/Frameworks/JavaVM.framework/Home``.\r\n``include-parts``\r\n    (Optional.) List of parts to install.  See \"Installable Parts\" below.  If\r\n    not specified, you'll get a minimal Jython installation, which is more\r\n    than likely what you'll want if you're developing Jython-based\r\n    applications.\r\n\r\nAll options are optional.  Really.  By default the recipe makes a complete\r\nJython installation in the Buildout's ``parts/jython`` directory (you can\r\noverride the parts directory in the ``[buildout]`` itself).  That means your\r\nrecipe can be as simple as::\r\n\r\n    [jython]\r\n    recipe = sk.recipe.jython\r\n\r\nThis recipe exports two values that are handy in other recipes::\r\n\r\n``location``\r\n    This exported option identifies where the recipe installed Jython.  You\r\n    can use its value as the JYTHON_HOME environment variable.\r\n``executable``\r\n    This exported option names the path of the ``jython`` executable.  You can\r\n    use this as a Python interpreter, for example with the ``zc.recipe.egg``\r\n    collection of recipes.\r\n\r\n\r\nInstallable Parts\r\n-----------------\r\n\r\nJython consists of a number of parts that comprises an installation.  The\r\n``include-parts`` option specifies which extra parts to include in an\r\ninstallation (by default, *no* additional parts are installed).  The\r\nadditional parts are:\r\n\r\n* ``mod``: Library modules.\r\n* ``demo``: Demonstrations and example code.\r\n* ``doc``: Documentation.\r\n* ``src``: Source code to Jython.\r\n\r\n\r\nExample Usage\r\n=============\r\n\r\nFor this demonstration, we'll use a fanciful Jython installer jar (actually an\r\nempty file) and Java virtual machine (written in Python) to mimic what the\r\nactual an Jython installer does.  In actuality, it merely echoes the options\r\ngiven to it.  These files are in the ``testdata`` directory::\r\n\r\n    >>> import os.path\r\n    >>> testdata = join(os.path.dirname(__file__), 'testdata')\r\n    >>> ls(testdata)\r\n    - java\r\n    - jython-fake.jar\r\n\r\nThe file ``java`` above is actually an executable Python script, while\r\n``jython-fake.jar`` is an empty file.\r\n\r\nLet's create a buildout to build and install Jython::\r\n\r\n    >>> write(sample_buildout, 'buildout.cfg', '''\r\n    ... [buildout]\r\n    ... parts = jython\r\n    ...\r\n    ... [jython]\r\n    ... recipe = sk.recipe.jython\r\n    ... java = %(testdata)s/java\r\n    ... url = file://%(testdata)s/jython-fake.jar\r\n    ... ''' % dict(testdata=testdata))\r\n\r\nThis will \"download\" the fake Jython installer and install it with all parts.\r\nRunning the buildout::\r\n\r\n    >>> print system(buildout)\r\n    Installing jython.\r\n    \"JVM\": Jython installer in file \".../jython-fake.jar\"\r\n    \"JVM\": Installer options: ['--silent', '--directory', '/sample-buildout/parts/jython']\r\n    \r\nAnd the parts directory should now have Jython installed::\r\n\r\n    >>> ls(sample_buildout, 'parts')\r\n    d jython\r\n\r\n\r\nUsing Additional Options\r\n------------------------\r\n\r\nLet's exercise the ``jre`` and ``include-parts`` options, specifying a\r\nmythical JRE at ``/usr/mythical/java/j3sdk`` and asking for the documentation\r\n(``doc``) and source code (``src``) to be installed::\r\n\r\n    >>> write(sample_buildout, 'buildout.cfg', '''\r\n    ... [buildout]\r\n    ... parts = jython\r\n    ...\r\n    ... [jython]\r\n    ... recipe = sk.recipe.jython\r\n    ... java = %(testdata)s/java\r\n    ... jre = /usr/mythical/java/j3sdk\r\n    ... include-parts =\r\n    ...     doc\r\n    ...     src\r\n    ... url = file://%(testdata)s/jython-fake.jar\r\n    ... ''' % dict(testdata=testdata))\r\n\r\nRe-running the buildout now gives us::\r\n\r\n    >>> print system(buildout)\r\n    Uninstalling jython.\r\n    Installing jython.\r\n    \"JVM\": Jython installer in file \".../jython-fake.jar\"\r\n    \"JVM\": Installer options: ['--silent', '--directory', '/sample-buildout/parts/jython', '--jre', \r\n'/usr/mythical/java/j3sdk', '--include', 'doc', 'src']\r\n\r\nPerfect.\r\n\r\n\r\nMD5 Hashes\r\n----------\r\n\r\nLet's re-write the buildout but inject an error: an incorrect MD5 hash::\r\n\r\n    >>> write(sample_buildout, 'buildout.cfg',\r\n    ... '''\r\n    ... [buildout]\r\n    ... parts = jython\r\n    ...\r\n    ... [jython]\r\n    ... recipe = sk.recipe.jython\r\n    ... java = %(testdata)s/java\r\n    ... md5sum = c120503f1e327388bd0b6bbdee530733\r\n    ... url = file://%(testdata)s/jython-fake.jar\r\n    ... ''' % dict(testdata=testdata))\r\n\r\nThe hash shown above is *not* the correct MD5 for an empty file (which is what\r\n``jython-fake.jar`` is).  Running the buildout should bail::\r\n\r\n    >>> print system(buildout)\r\n    Uninstalling jython.\r\n    Installing jython.\r\n    While:\r\n      Installing jython.\r\n    Error: MD5 checksum mismatch...\r\n\r\nSpecifying the correct MD5::\r\n\r\n    >>> write(sample_buildout, 'buildout.cfg',\r\n    ... '''\r\n    ... [buildout]\r\n    ... parts = jython\r\n    ...\r\n    ... [jython]\r\n    ... recipe = sk.recipe.jython\r\n    ... java = %(testdata)s/java\r\n    ... md5sum = d41d8cd98f00b204e9800998ecf8427e\r\n    ... url = file://%(testdata)s/jython-fake.jar\r\n    ... ''' % dict(testdata=testdata))\r\n\r\nMakes the problem go away::\r\n\r\n    >>> print system(buildout)\r\n    Installing jython.\r\n    \"JVM\": Jython installer in file \".../jython-fake.jar\"\r\n    \"JVM\": Installer options: ['--silent', '--directory', '/sample-buildout/parts/jython']\r\n\r\nThat's pretty much it.\r\n\r\n\r\n.. References:\r\n.. _release: http://sourceforge.net/projects/jython/files/jython/jython_installer-2.5.1.jar\r\n\r\n\r\nChangelog\r\n=========\r\n\r\n0.0.0\r\n-----\r\n\r\nThis release is destined to become the eventual GA_ release.\r\n\r\n\r\n.. References:\r\n.. _GA: http://en.wikipedia.org/wiki/Development_stage#General_availability_.28GA.29",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "http://code.google.com/",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://code.google.com/",
            "keywords": "buildout jython installation automation",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "sk.recipe.jython",
            "package_url": "https://pypi.org/project/sk.recipe.jython/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/sk.recipe.jython/",
            "project_urls": {
                "Download": "http://code.google.com/",
                "Homepage": "http://code.google.com/"
            },
            "release_url": "https://pypi.org/project/sk.recipe.jython/0.0.0dev-r6/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "This is a Buildout_ recipe that automates the download, configuration, and deployment of Jython_, the Python_ environment implemented in Java_.",
            "version": "0.0.0dev-r6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 154069,
        "urls": [],
        "vulnerabilities": []
    }
}