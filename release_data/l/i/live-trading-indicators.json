{
    "0.1.2": {
        "info": {
            "author": "Aleksandr Kuznetsov",
            "author_email": "hal@hal9000.cc",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hal9000cc/live_trading_indicators",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "live-trading-indicators",
            "package_url": "https://pypi.org/project/live-trading-indicators/",
            "platform": null,
            "project_url": "https://pypi.org/project/live-trading-indicators/",
            "project_urls": {
                "Homepage": "https://github.com/hal9000cc/live_trading_indicators"
            },
            "release_url": "https://pypi.org/project/live-trading-indicators/0.1.2/",
            "requires_dist": [
                "construct (<=2.10.0)",
                "numba (<=0.56.3)"
            ],
            "requires_python": ">=3.10",
            "summary": "A package for obtaining quotation data from various online sources and calculating the values of technical indicators based on these quotations.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15781015,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0adbdcea6b2d25912a9a8558050a40b0",
                    "sha256": "ae9ec84c491cc0a22bf6705700c5a186741f923334a6dcb9b2062fa9d6422d77"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0adbdcea6b2d25912a9a8558050a40b0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 23369,
                "upload_time": "2022-11-04T19:16:11",
                "upload_time_iso_8601": "2022-11-04T19:16:11.792917Z",
                "url": "https://files.pythonhosted.org/packages/95/66/5225a622f23cf725daa6a6ff5712be3a23afa83b66d26bc15fb45b992d81/live_trading_indicators-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8d65a931d56dbe86840d2840bff59c9e",
                    "sha256": "9ce7261ddeda613d4f8a5efee02f46c1763ccbfc07386ae01ef4de250bef5639"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "8d65a931d56dbe86840d2840bff59c9e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 17779,
                "upload_time": "2022-11-04T19:16:13",
                "upload_time_iso_8601": "2022-11-04T19:16:13.549919Z",
                "url": "https://files.pythonhosted.org/packages/41/a4/4b7c4035dd738ad1299f1550654703f3b1c12f894e2c886a89df03a58c47/live_trading_indicators-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Aleksandr Kuznetsov",
            "author_email": "hal@hal9000.cc",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hal9000cc/live_trading_indicators",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "live-trading-indicators",
            "package_url": "https://pypi.org/project/live-trading-indicators/",
            "platform": null,
            "project_url": "https://pypi.org/project/live-trading-indicators/",
            "project_urls": {
                "Homepage": "https://github.com/hal9000cc/live_trading_indicators"
            },
            "release_url": "https://pypi.org/project/live-trading-indicators/0.1.3/",
            "requires_dist": [
                "construct (<=2.10.0)",
                "numba (<=0.56.3)"
            ],
            "requires_python": ">=3.10",
            "summary": "A package for obtaining quotation data from various online sources and calculating the values of technical indicators based on these quotations.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15665441,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "626ac6c7b3a34a5e364f340e36cd661f",
                    "sha256": "a13c52b43def60299833eec3c480c378a86e494dfb5ed2203faed19eada27c0a"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "626ac6c7b3a34a5e364f340e36cd661f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 23470,
                "upload_time": "2022-11-04T20:59:35",
                "upload_time_iso_8601": "2022-11-04T20:59:35.926077Z",
                "url": "https://files.pythonhosted.org/packages/96/91/2b969ae65a8e2d92efa2728f7b7cd677b69daeaa60ec6a7636022b4684dd/live_trading_indicators-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b24084214f9a4700f686b4e1416b61f",
                    "sha256": "51f8dcff4c38bb32eab2bf9a4161870924551774db423b8f04b9ef30ec92287d"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "0b24084214f9a4700f686b4e1416b61f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 17898,
                "upload_time": "2022-11-04T20:59:37",
                "upload_time_iso_8601": "2022-11-04T20:59:37.858049Z",
                "url": "https://files.pythonhosted.org/packages/da/a5/62e876b92e745dac4a689663f11d94b30b678bbf4a40c3e5b782d174459b/live_trading_indicators-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "Aleksandr Kuznetsov",
            "author_email": "hal@hal9000.cc",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hal9000cc/live_trading_indicators",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "live-trading-indicators",
            "package_url": "https://pypi.org/project/live-trading-indicators/",
            "platform": null,
            "project_url": "https://pypi.org/project/live-trading-indicators/",
            "project_urls": {
                "Homepage": "https://github.com/hal9000cc/live_trading_indicators"
            },
            "release_url": "https://pypi.org/project/live-trading-indicators/0.1.4/",
            "requires_dist": [
                "construct (<=2.10.0)",
                "numba (<=0.56.3)"
            ],
            "requires_python": ">=3.10",
            "summary": "A package for obtaining quotation data from various online sources and calculating the values of technical indicators based on these quotations.",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15781015,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7aa54cfe7ee52232c920e912990abbb6",
                    "sha256": "37013753bf18ce77785b651d28cd51e6879b7e9de775924259eb604d38db8ab2"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7aa54cfe7ee52232c920e912990abbb6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 23447,
                "upload_time": "2022-11-05T13:49:47",
                "upload_time_iso_8601": "2022-11-05T13:49:47.754664Z",
                "url": "https://files.pythonhosted.org/packages/8c/c7/1fca461032b4ea1b1459faf36bb9729cb458350f823be3f184b57f21d361/live_trading_indicators-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4a73bd52448a8c15925f2f0864c113ee",
                    "sha256": "428dce1134776cb9a941cbcdf2e6b0ddefae42a6105155ca1032a5ae3715edc6"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "4a73bd52448a8c15925f2f0864c113ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 17913,
                "upload_time": "2022-11-05T13:49:49",
                "upload_time_iso_8601": "2022-11-05T13:49:49.884562Z",
                "url": "https://files.pythonhosted.org/packages/74/5f/3dd3298e2b141f01198322416391f20960eed30c60d1707694f524330c2e/live_trading_indicators-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Aleksandr Kuznetsov",
            "author_email": "hal@hal9000.cc",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10"
            ],
            "description": "# live_trading_indicators\nA package for obtaining quotation data from various online sources and calculating the values of technical indicators based on these quotations.\nData is received automatically. It is possible to receive data in real time. The received data is stored in a file cache with the possibility of quick use. Data integrity is carefully monitored.\n\nThe current version allows you to receive exchange data **Binance** (**spot**, **futures USD-M**, **futures COIN-M**).\n\nThe data can be obtained in *numpy ndarray* and *Dataframe Pandas*..\n\nPackage data is stored by default in the *.lti* folder of of the user's home directory. A significant amount of data can be created in this folder, depending on the number of instruments and their timeframes.\n## Installing\n```python\npip install live_trading_indicators\n```\n## Usage examples\n### Getting quotes\n```python\nimport live_trading_indicators as lti\n\nindicators = lti.Indicators('binance')\nohlcv = indicators.OHLCV('ethusdt', '4h', '2022-07-01', '2022-07-01')\nprint(ohlcv)\n```\n###### Result:\n```\n<OHLCV data> symbol: ethusdt, timeframe: 4h\ndate: 2022-07-01T00:00 - 2022-07-01T20:00 (length: 6) \nempty bars: count 0 (0.00 %), max consecutive 0\nValues: time, open, high, low, close, volume\n```\n\nNow *ohlcv* contains quotes in *numpy array* (*ohlcv.time*, *ohlcv.open*, *ohlcv.high*, *ohlcv.low*, *ohlcv.close*, *ohlcv.volume*).\n\n### pandas dataframe\n```python\ndataframe = ohlcv.pandas()\nprint(dataframe.head())\n```\n###### Result:\n```\n                 time     open     high      low    close       volume\n0 2022-07-01 00:00:00  1071.02  1117.00  1050.46  1054.52  430646.8720\n1 2022-07-01 04:00:00  1054.52  1076.43  1045.41  1066.81  275557.9328\n2 2022-07-01 08:00:00  1066.81  1086.44  1033.44  1050.22  252105.5665\n3 2022-07-01 12:00:00  1050.21  1074.23  1043.00  1056.86  298465.0695\n4 2022-07-01 16:00:00  1056.86  1083.10  1054.82  1067.91  158796.2248\n```\n### Example of getting indicator data\n```python\nmacd = indicators.MACD('ethusdt', '1h', '2022-07-01', '2022-07-30', period_short=15, period_long=26, period_signal=9)\nprint(macd.pandas().head())\n```\n###### Result:\n```\n                 time      macd  macd_signal  macd_hist\n0 2022-07-01 00:00:00  0.000000     0.000000   0.000000\n1 2022-07-01 01:00:00  0.021389     0.010694   0.010694\n2 2022-07-01 02:00:00 -0.061712    -0.013441  -0.048271\n3 2022-07-01 03:00:00 -1.105457    -0.286445  -0.819012\n4 2022-07-01 04:00:00 -2.146765    -0.658509  -1.488256\n```\n### Getting real-time data (the last 3 minutes on the 1m timeframe without an incomplete bar)\nTo get real-time data, you do not need to specify an end date.\n```python\nimport datetime as dt\nimport live_trading_indicators as lti\n\nutcnow = dt.datetime.utcnow()\nprint(f'Now is {utcnow} UTC')\nindicators = lti.Indicators('binance', utcnow - dt.timedelta(minutes=3))\nohlcv = indicators.OHLCV('btcusdt', '1m')\nprint(ohlcv.pandas())\n```\n###### Result:\n```\nNow is 2022-11-04 09:32:31.528230 UTC\n                 time      open      high       low     close     volume\n0 2022-11-04 09:29:00  20594.39  20595.60  20591.06  20592.38  177.35380\n1 2022-11-04 09:30:00  20592.38  20600.98  20591.75  20600.30  178.40869\n2 2022-11-04 09:31:00  20600.98  20623.93  20600.30  20621.45  431.11917\n```\n### Getting real-time data (the last 3 minutes on the 1m timeframe and an incomplete bar)\nTo get data containing an incomplete bar, you must specify *with_incomplete_bar=True* when creating *Indicators*.\n```python\nutcnow = dt.datetime.utcnow()\nprint(f'Now is {utcnow} UTC')\nindicators = lti.Indicators('binance', utcnow - dt.timedelta(minutes=3), with_incomplete_bar=True)\nohlcv = indicators.OHLCV('btcusdt', '1m')\nprint(ohlcv.pandas())\n```\n###### Result:\n```\nNow is 2022-11-04 09:37:07.372986 UTC\n2022-11-04 12:37:07,374 Download using api symbol btcusdt timeframe 1m from 2022-11-04T00:00:00.000...\n                 time      open      high       low     close     volume\n0 2022-11-04 09:34:00  20614.55  20618.50  20610.76  20615.97  263.96754\n1 2022-11-04 09:35:00  20615.61  20624.00  20610.29  20616.53  258.53777\n2 2022-11-04 09:36:00  20615.69  20617.75  20609.74  20611.46  199.43313\n3 2022-11-04 09:37:00  20611.11  20611.89  20608.17  20609.02   15.15800\n```\n## Details\nAll typical tamframes are supported up to 1 day inclusive: 1m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d.\nBy default, log messages are output to the console, and you will see similar messages:\n```\n2022-11-04 12:32:31,528 Download using api symbol btcusdt timeframe 1m from 2022-11-04T00:00:00.000...\n```\nTo disable these messages, run the following code and restart python.\n```python\nimport live_trading_indicators as lti\nlti.config(print_log=False)\n```\n### Indicators\nWhen getting indicator values, the first two parameters should be symbol and timeframe. Further, the period can optionally be specified. Then the parameters of the indicator are specified by name.\n#### Examples\n```python\nsma = indicators.MACD('ethusdt', '1h', period=9)\nmacd = indicators.MACD('ethusdt', '1h', '2022-07-01', '2022-07-30', period_short=15, period_long=26, period_signal=9)\n```\nThe following indicators are implemented (the parameters *symbol*, *timeframe*, *time_start*, *time_end* are omitted for brevity):\n- EMA(period, value='close')\n- SMA(period, value='close')\n- MA(period, value='close', ma_type='sma')\n- MACD(period_short, period_long, period_signal, ma_type='ema', ma_type_signal='sma')\n- RSI(period, value='close', ma_type='ema')\n- Stochastic(period, period_d, smooth=3, ma_type='sma')\n### Specifying the period\nThe period can be specified both during initialization of *Indicators* and in the indicator parameters. The data type when specifying the period can be *datetime.date*, *datetime.datetime*, *numpy.datetime64*, string, or a number in the format *YYYYMMDD*.\n\nThere are three strategies for specifying a time period:\n#### 1. The time period is specified when creating Indicators (base period)\nIndicator values can be obtained for any period within the interval specified for *Indicators*. When exiting the specified interval, an exception will be raised *LTIExceptionOutOfThePeriod*.\n##### Example\n```python\nindicators = lti.Indicators('binance', 20220901, 20220930) # the base period\nohlcv = indicators.OHLCV('um/ethusdt', '1h') # the period is not specified, the base period is used\nsma22 = indicators.SMA('um/ethusdt', '1h', 20220905, 20220915, period=22) # the period is specified\nsma15 = indicators.SMA('um/ethusdt', '1h', 20220905, 20221015, period=15) # ERROR, going beyond the boundaries of the base period\n```\n#### 2. The time period is not specified when creating Indicators\nIn this variant, when getting indicator data, the period should always be specified. When the interval is extended, data may be updated, this may slow down the work.\n##### Example\n```python\nindicators = lti.Indicators('binance') # \u043f\u0435\u0440\u0438\u043e\u0434 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\nohlcv = indicators.OHLCV('um/ethusdt', '1h', 20220801, 20220815) # \u043f\u0435\u0440\u0438\u043e\u0434 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\nma22 = indicators.SMA('um/ethusdt', '1h', 'close', 22, 20220905, 20220915) # \u043f\u0435\u0440\u0438\u043e\u0434 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\n```\n#### 3. Real-time mode\nIn this variant, when creating *Indicators*, only the start date is specified. The data is always received up to the current moment.\nWhen creating Indicators, you can specify *with_incomplete_bar=True*, then the data of the last, incomplete bar will be received. See the example above.\n### Binance trading symbol codes\n- For the spot market, they completely coincide with the code on binance (*btcusdt*, *ethusdt*, etc.)\n- For the futures market **USD-M**, codes are prefixed with **um/** (*um/btcusdt*, *um/ethusdt*, etc.)\n- For the futures market **COIN-M**, codes are prefixed with **cm/** (*cm/btcusd_perp*, *cm/ethusd_perp*, etc.)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hal9000cc/live_trading_indicators",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "live-trading-indicators",
            "package_url": "https://pypi.org/project/live-trading-indicators/",
            "platform": null,
            "project_url": "https://pypi.org/project/live-trading-indicators/",
            "project_urls": {
                "Homepage": "https://github.com/hal9000cc/live_trading_indicators"
            },
            "release_url": "https://pypi.org/project/live-trading-indicators/0.2.0/",
            "requires_dist": [
                "construct (<=2.10.0)",
                "numba (<=0.56.3)"
            ],
            "requires_python": ">=3.10",
            "summary": "A package for obtaining quotation data from various online sources and calculating the values of technical indicators based on these quotations.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15781015,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d88642c1936d7fc278e8578c74bfd6aa",
                    "sha256": "91b8bc73c60df83e3476728b77fa269180091f756008d0cd66b5e0eefcd2603f"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d88642c1936d7fc278e8578c74bfd6aa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 25186,
                "upload_time": "2022-11-15T21:41:14",
                "upload_time_iso_8601": "2022-11-15T21:41:14.920677Z",
                "url": "https://files.pythonhosted.org/packages/63/f0/1030511b49206fc7e6ef177cd0b6564f45a5ccfa5ca48903a00011eec8a1/live_trading_indicators-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5814aa28382cb6c6673f7adb304fbb1e",
                    "sha256": "e85221f3378a4ec04f1c0c0dfb6db03e178da2caa209cb3f2d39612b4331c124"
                },
                "downloads": -1,
                "filename": "live_trading_indicators-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5814aa28382cb6c6673f7adb304fbb1e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 18516,
                "upload_time": "2022-11-15T21:41:16",
                "upload_time_iso_8601": "2022-11-15T21:41:16.730427Z",
                "url": "https://files.pythonhosted.org/packages/a8/b1/7587654713d8e1ff6efc883759df7836cf2fdb08ad9bd89630a4d2d71b06/live_trading_indicators-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}