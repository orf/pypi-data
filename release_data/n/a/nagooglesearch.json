{
    "5.5": {
        "info": {
            "author": "Ivan Sincek",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Not Another Google Search\n\nNot another Google searching library. Just kidding, it is. Inspired by [opsdisk/yagooglesearch](https://github.com/opsdisk/yagooglesearch). Credits to the original author!\n\nTested on Kali Linux v2022.4 (64-bit).\n\nMade for educational purposes. I hope it will help!\n\n## How to Install\n\n```bash\npip3 install nagooglesearch\n\npip3 install --upgrade nagooglesearch\n```\n\n## How to Build and Install Manually\n\nRun the following commands:\n\n```bash\ngit clone https://github.com/ivan-sincek/nagooglesearch && cd nagooglesearch\n\npython3 -m pip install --upgrade build\n\npython3 -m build\n\npython3 -m pip install dist/nagooglesearch-5.5-py3-none-any.whl\n```\n\n## Usage\n\nDefault values:\n\n```python\nnagooglesearch.SearchClient(\n\ttld = \"com\",\n\tparameters = {},\n\thomepage_parameters = {\n\t\t\"btnK\": \"Google+Search\",\n\t\t\"source\": \"hp\"\n\t},\n\tmax_results = 100,\n\tuser_agent = \"\",\n\tproxy = \"\",\n\tmin_sleep = 8,\n\tmax_sleep = 18,\n\tverbose = False\n)\n```\n\n**Only domains without `google` keyword are accepted as valid results. Final output is a unique and sorted list of urls.**\n\n---\n\n```python\nfrom nagooglesearch import nagooglesearch\n\n# non-string, empty, and duplicate query string parameters will be ignored\n# case-sensitive\n# search the internet for more query string parameters\nparameters = {\n\t\"q\": \"site:*.example.com intext:password\", # search query, required\n\t\"tbs\": \"li:1\", # specify 'li:1' for verbatim search, i.e. do not search alternate spellings, etc.\n\t\"hl\": \"en\",\n\t\"lr\": \"lang_en\",\n\t\"cr\": \"countryUS\",\n\t\"filter\": \"0\", # specify '0' to display hidden results\n\t\"safe\": \"images\", # specify 'images' to turn off safe search, or specify 'active' to turn on safe search\n\t\"num\": \"50\" # number of results per page\n}\n\n# this query string parameters will be set only if 'start' query string parameter is not set or is zero\n# mimic homepage search as the first request\nhomepage_parameters = {\n\t\"btnK\": \"Google+Search\",\n\t\"source\": \"hp\"\n}\n\nclient = nagooglesearch.SearchClient(\n\ttld = \"com\", # top level domain, e.g. www.google.com or www.google.hr\n\tparameters = parameters,\n\thomepage_parameters = homepage_parameters,\n\tmax_results = 200, # maximum unique urls to return\n\tuser_agent = \"curl/3.30.1\", # assign random if not set or is empty\n\tproxy = \"socks5://127.0.0.1:9050\", # ignore if URL scheme is not 'http', 'https', 'socks5', or 'socks5h'\n\tmin_sleep = 15, # minimum sleep between page requests\n\tmax_sleep = 30, # maximum sleep between page requests\n\tverbose = False # debug output\n)\n\nurls = client.search()\n\nif \"429_TOO_MANY_REQUESTS\" in urls:\n\tprint(\"[ HTTP 429 Too Many Requests ]\")\n\turls.pop(urls.index(\"429_TOO_MANY_REQUESTS\"))\n\t# do something\n\nfor url in urls:\n\tprint(url)\n\t# do something\n```\n\nIf `max_results` is set to e.g. `200` and `num` is set to e.g. `80`, then, maximum unique urls to return could actually reach `240`.\n\nCheck the user agents list [here](https://github.com/ivan-sincek/nagooglesearch/blob/main/src/nagooglesearch/user_agents.txt). For more user agents, check [scrapeops.io](https://scrapeops.io).\n\nProxy URL scheme must be either `http`, `https`, `socks5`, or `socks5h`; otherwise, proxy will be ignored.\n\n---\n\nShortest possible:\n\n```python\nfrom nagooglesearch import nagooglesearch\n\nurls = nagooglesearch.SearchClient(parameters = {\"q\": \"site:*.example.com intext:password\"}).search()\n\n# do something\n```\n\n---\n\nTime sensitive search (e.g. do not show results older than 6 months):\n\n```python\nfrom nagooglesearch import nagooglesearch\nimport dateutil.relativedelta as relativedelta\n\ndef get_tbs(months):\n\ttoday = datetime.datetime.today()\n\treturn nagooglesearch.get_tbs(today, today - relativedelta.relativedelta(months = months))\n\nparameters = {\n\t\"tbs\": get_tbs(6)\n}\n\n# do something\n```\n\n---\n\nGet a random user agent:\n\n```python\nfrom nagooglesearch import nagooglesearch\n\nuser_agent = nagooglesearch.get_random_user_agent()\nprint(user_agent)\n\n# do something\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nagooglesearch",
            "package_url": "https://pypi.org/project/nagooglesearch/",
            "platform": null,
            "project_url": "https://pypi.org/project/nagooglesearch/",
            "project_urls": {
                "Homepage": "https://github.com/ivan-sincek/nagooglesearch"
            },
            "release_url": "https://pypi.org/project/nagooglesearch/5.5/",
            "requires_dist": [
                "requests (>=2.27.1)",
                "bs4 (>=0.0.1)",
                "beautifulsoup4 (>=4.11.1)",
                "regex (>=2022.4.24)"
            ],
            "requires_python": ">=3.6",
            "summary": "Not another Google searching tool.",
            "version": "5.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15675229,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc05ba899a7f11fd65917eed0684656a",
                    "sha256": "5027b90e154ffba4713ad19d21c5f25bd0471da0de00a67abfa3d8fce06199ae"
                },
                "downloads": -1,
                "filename": "nagooglesearch-5.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dc05ba899a7f11fd65917eed0684656a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7881,
                "upload_time": "2022-11-06T15:39:43",
                "upload_time_iso_8601": "2022-11-06T15:39:43.570778Z",
                "url": "https://files.pythonhosted.org/packages/5b/13/4bcd0923b4832940f3606401bee68c77707c7fc3fee89ba164c0ab59635b/nagooglesearch-5.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fba2e22d0c3b207fd10a15f35d3bf50a",
                    "sha256": "e457394c158fe922790289b0154c8b68224071a738cb01cad17908dfee9f0d0e"
                },
                "downloads": -1,
                "filename": "nagooglesearch-5.5.tar.gz",
                "has_sig": false,
                "md5_digest": "fba2e22d0c3b207fd10a15f35d3bf50a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 9206,
                "upload_time": "2022-11-06T15:39:45",
                "upload_time_iso_8601": "2022-11-06T15:39:45.924405Z",
                "url": "https://files.pythonhosted.org/packages/d3/5c/8d35c79fc2e5e0d91f4a09a16c000fb84b93be5935e800417928247864b7/nagooglesearch-5.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}