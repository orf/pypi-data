{
    "22.10.0": {
        "info": {
            "author": "",
            "author_email": "The Pyink Maintainers <pyink-maintainers@google.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Software Development :: Quality Assurance"
            ],
            "description": "*Pyink*, pronounced p\u012b-\u02c8i\u014bk, is a Python formatter, forked from\n*[Black](https://github.com/psf/black)* with a few different formatting\nbehaviors. We intend to keep rebasing on top of *Black*'s latest changes.\n\n# Why *Pyink*?\n\nWe would love to adopt *Black*, but adopting it overnight is too disruptive to\nthe thousands of developers working in our monorepo. We also have other Python\ntooling that assumes certain formatting, it would be a too big task to update\nthem all at once. We decided to maintain a few local patches to *Black* as a\nmedium-term solution, and release them as a separate tool called *Pyink*.\n\n*Pyink* is intended to be an adoption helper, and we wish to remove as many\npatches as possible in the future.\n\n# What are the main differences?\n\n*   Support only formatting selected line ranges, using the `--pyink-lines=`\n    argument (see [psf/black#830](https://github.com/psf/black/issues/830)).\n\n*   Support two-space indentation, using the `pyink-indentation` option.\n\n*   Support inferring preferred quote style by calculating the majority in a\n    file, using the `pyink-use-majority-quotes` option.\n\n*   Do not wrap trailing pragma comments if the line exceeds the length only\n    because of the pragma (see\n    [psf/black#2843](https://github.com/psf/black/issues/2843)). Example\n\n    ```python\n    # Pyink:\n    result = some_other_module._private_function(arg=\"value\")  # pylint: disable=protected-access\n\n    # Black:\n    result = some_other_module._private_function(\n        arg=\"value\"\n    )  # pylint: disable=protected-access\n    ```\n\n*   Do not wrap imports in parentheses and move them to separate lines (see\n    [psf/black#3324](https://github.com/psf/black/issues/3324)). Example:\n\n    ```python\n    # Pyink:\n    from very_long_top_level_package_name.sub_package.another_level import a_long_module\n\n    # Black:\n    from very_long_top_level_package_name.sub_package.another_level import (\n        a_long_module,\n    )\n    ```\n\n*   Prefer not breaking lines between immediately nested brackets (see\n    [psf/black#1811](https://github.com/psf/black/issues/1811)). Example:\n\n    ```python\n    # Pyink:\n    secrets = frozenset({\n        1001,\n        1002,\n        1003,\n        1004,\n        1005,\n        1006,\n        1007,\n        1008,\n        1009,\n    })\n\n    # Black:\n    secrets = frozenset(\n        {\n            1001,\n            1002,\n            1003,\n            1004,\n            1005,\n            1006,\n            1007,\n            1008,\n            1009,\n        }\n    )\n    ```\n\n*   Wrap concatenated strings in parens for function arguments (see\n    [psf/black#3292](https://github.com/psf/black/issues/3292)). Example:\n\n    ```python\n    # Pyink:\n    function_call(\n        (\n            \" lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor\"\n            \" incididunt ut labore et dolore magna aliqua Ut enim ad minim\"\n        ),\n        \" veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\",\n    )\n\n    # Black:\n    function_call(\n        \" lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor\"\n        \" incididunt ut labore et dolore magna aliqua Ut enim ad minim\",\n        \" veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\",\n    )\n    ```\n\n*   Add an empty line between class statements without docstrings, and the first\n    method. We expect we will simply remove this difference from *Pyink* at some\n    point. Example:\n\n    ```python\n    # Pyink:\n    class MyTest(unittest.TestCase):\n\n        def test_magic(self):\n            ...\n\n    # Black:\n    class MyTest(unittest.TestCase):\n        def test_magic(self):\n            ...\n    ```\n\n# How do I use *Pyink*?\n\nSame as `black`, except you'll use `pyink`. All `black` command line options are\nsupported by `pyink`. To configure the options in the `pyproject.toml` file, you\nneed to put them in the `[tool.pyink]` section instead of `[tool.black]`.\n\nThere are also a few *Pyink* only options:\n\n```\n  --pyink / --no-pyink            Enable the Pyink formatting mode. Disabling\n                                  it should behave the same as Black.\n                                  [default: pyink]\n  --pyink-indentation [2|4]       The number of spaces used for indentation.\n                                  [default: 4]\n  --pyink-lines START-END         Range of lines to format. Must be specified\n                                  as \"START-END\", index is 1-based and\n                                  inclusive on both ends.\n  --pyink-use-majority-quotes     When normalizing string quotes, infer\n                                  preferred quote style by calculating the\n                                  majority in the file. Multi-line strings and\n                                  docstrings are excluded from this as they\n                                  always use double quotes.\n```\n\n# Why the name?\n\nWe want a name with the same number of characters as *Black*, to make patching\neasier. And squid ink is black.\n\n# License\n\n[MIT](./LICENSE)\n\n# Contributing\n\nSee the [contribution guide](./CONTRIBUTING.md).\n\n# Changelog\n\nSee [CHANGES.md](./CHANGES.md).\n\n# Disclaimer\n\nThis is not an officially supported Google product.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyink",
            "package_url": "https://pypi.org/project/pyink/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyink/",
            "project_urls": {
                "Changelog": "https://github.com/google/pyink/blob/main/CHANGES.md",
                "Homepage": "https://github.com/google/pyink"
            },
            "release_url": "https://pypi.org/project/pyink/22.10.0/",
            "requires_dist": [
                "black>=22.10.0",
                "click>=8.0.0",
                "mypy-extensions>=0.4.3",
                "pathspec>=0.9.0",
                "platformdirs>=2",
                "tomli>=1.1.0; python_full_version < '3.11.0a7'",
                "typed-ast>=1.4.2; python_version < '3.8' and implementation_name == 'cpython'",
                "typing-extensions>=3.10.0.0; python_version < '3.10'",
                "colorama>=0.4.3; extra == 'colorama'",
                "ipython>=7.8.0; extra == 'jupyter'",
                "tokenize-rt>=3.2.0; extra == 'jupyter'",
                "uvloop>=0.15.2; extra == 'uvloop'"
            ],
            "requires_python": ">=3.7",
            "summary": "Pyink is a python formatter, forked from Black with slightly different behavior.",
            "version": "22.10.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15478904,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "61d915cda9c3713c5d296a004a357f80",
                    "sha256": "53cfd8bdb65a43693c65e35db0c67bb05350036e23dec125a197b8969c2ebde2"
                },
                "downloads": -1,
                "filename": "pyink-22.10.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "61d915cda9c3713c5d296a004a357f80",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 104880,
                "upload_time": "2022-10-20T20:03:40",
                "upload_time_iso_8601": "2022-10-20T20:03:40.565661Z",
                "url": "https://files.pythonhosted.org/packages/f9/86/a7edd34b3d94a282a2dd39f0827fc28e15ada0b9151d727216f7053f4ef7/pyink-22.10.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e2e039acdc83a27a2cbb7884bce2ae78",
                    "sha256": "b3dd1ad9ae37c187e927b2f48df769af58c187c6589bbd7aba3e2567884cb831"
                },
                "downloads": -1,
                "filename": "pyink-22.10.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e2e039acdc83a27a2cbb7884bce2ae78",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 182483,
                "upload_time": "2022-10-20T20:03:42",
                "upload_time_iso_8601": "2022-10-20T20:03:42.512365Z",
                "url": "https://files.pythonhosted.org/packages/81/60/3b391a128f6939d8681cc22d60f7a7c5f23ffb0e516094cd9ae6bf9e067e/pyink-22.10.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}