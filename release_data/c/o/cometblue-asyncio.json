{
    "0.9": {
        "info": {
            "author": "Pavel Krc",
            "author_email": "src@pkrc.net",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "# cometblue-asyncio\n\nThis is a Python library for interacting with the Eurotronic Comet Blue\nthermostatic radiator valves and their clones (see below).\n\nIt is a refactored fork of https://github.com/zero-udo/eurotronic-cometblue\nwith additional credits to https://github.com/rikroe and\n[Thorsten Tr\u00e4nker](https://www.torsten-traenkner.de/wissen/smarthome/heizung.php).\n\nWhat sets it aside from other Comet Blue libraries?\n\n- It is built on https://github.com/hbldh/bleak, which is well-designed, up-to-date and\n  functional. Do you know that e.g. pygatt will only work under root, because\n  it will _fully restart your system BlueZ service_ upon every connection?\n  I had serious issues with that until I switched to bleak.\n\n- It is simple, minimalistic and does only what you ask for. The bluetooth\n  communication is minimal, it only sends the commands that you explicitly\n  request. Some other libs try to e.g. download everything on first/each\n  connection, which takes forever.\n\n- (Once refactoring is finished:) Pythonic, no scaffolding code with hidden\n  typos. API expects sane programmers, no babysitting through excess\n  sanitization of unthinkable input combinations.\n\n## Compatible devices\n\nI have tested it on _Silvercrest RT2000BT_. The original library was tested on\n_Eurotronic Comet Blue_ and _Sygonix HT100 BT_. It should also work on _Xavax\nHama_ (untested).\n\nMy own Silvercrest RT2000BT has the issue that it sometimes randomly messes\nup its programmed weekly schedule. The frequency with which it happens is\ncorrelated with the the frequency of bluetooth communication, however it is not\ncaused by this library specifically, because it happens even if I only use the\noriginal Eurotronic Android app (any of the 2 versions). The solution for me is\nto check the schedule every few connections and correct it programatically.\n\n## Installation\n\n```\npip install cometblue-asyncio\n```\n\n## Usage\n\nSorry, so far no more documenation than:\n\n```python\nfrom cometblue_asyncio import CometBlue\n\nhelp(CometBlue)\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/rolicot/cometblue-asyncio",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cometblue-asyncio",
            "package_url": "https://pypi.org/project/cometblue-asyncio/",
            "platform": null,
            "project_url": "https://pypi.org/project/cometblue-asyncio/",
            "project_urls": {
                "Homepage": "https://github.com/rolicot/cometblue-asyncio"
            },
            "release_url": "https://pypi.org/project/cometblue-asyncio/0.9/",
            "requires_dist": [
                "bleak"
            ],
            "requires_python": ">=3.6",
            "summary": "Python library for interacting with the Eurotronic Comet Blue thermostatic radiator valve based on bleak using asyncio.",
            "version": "0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15774398,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f560678d71d48d098394c9f57933ad15",
                    "sha256": "54eabcf831acfbda1132dca369684ea01bb3cc1ac9c5421730e95d47d45f0654"
                },
                "downloads": -1,
                "filename": "cometblue_asyncio-0.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f560678d71d48d098394c9f57933ad15",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7962,
                "upload_time": "2022-11-15T12:38:16",
                "upload_time_iso_8601": "2022-11-15T12:38:16.044018Z",
                "url": "https://files.pythonhosted.org/packages/d5/7f/230a3d353a3489921115f722611cc72b559946727e275a76868ec2dd9e28/cometblue_asyncio-0.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c10923d9424a47abf30c5dc4b1797fa",
                    "sha256": "dac9b574ec6e192ef3f32214451431058a46feb3e43f49a9d977d891b0f0adf7"
                },
                "downloads": -1,
                "filename": "cometblue-asyncio-0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "8c10923d9424a47abf30c5dc4b1797fa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 7021,
                "upload_time": "2022-11-15T12:38:18",
                "upload_time_iso_8601": "2022-11-15T12:38:18.750397Z",
                "url": "https://files.pythonhosted.org/packages/50/84/bba4c1b264f21027a3356500e3b16e029413ca8fe6ad846aad815fce55d1/cometblue-asyncio-0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}