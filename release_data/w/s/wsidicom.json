{
    "0.1.0": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": "",
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.1.0/",
            "requires_dist": [
                "numpy (>=1.15.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=8.0.0,<9.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3a369b3d23e94cd101426fe5866ff7b3",
                    "sha256": "ba3dc2fbe230693ef544550ca26d16e868e38b4785cbcff0bb52aa735ab419ce"
                },
                "downloads": -1,
                "filename": "wsidicom-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3a369b3d23e94cd101426fe5866ff7b3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 59285,
                "upload_time": "2021-11-29T14:36:41",
                "upload_time_iso_8601": "2021-11-29T14:36:41.613191Z",
                "url": "https://files.pythonhosted.org/packages/0e/c0/549a46e2bb65e6aecc59d6721cf3d40dd91ef05ba4720aba75442cacc597/wsidicom-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dda1ca237f51e5307062d846a3030b1c",
                    "sha256": "005109be89fa444564c4b49a68c6e688eff9a1f22bfdcf106f109292c13e1163"
                },
                "downloads": -1,
                "filename": "wsidicom-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "dda1ca237f51e5307062d846a3030b1c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 57056,
                "upload_time": "2021-11-29T14:36:42",
                "upload_time_iso_8601": "2021-11-29T14:36:42.877916Z",
                "url": "https://files.pythonhosted.org/packages/1d/7a/29e4dc081eda25fd59d7be45b6ad6bb12249019e45dbeeac291ce5e24875/wsidicom-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": "",
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.2.0/",
            "requires_dist": [
                "numpy (>=1.15.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=9.0.0,<10.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "94eeb1ee01c03f34ddc4da5cae6a3a47",
                    "sha256": "b0686095174379b0694abab125f3d525ef9306fab5c54b606da0add2737386c4"
                },
                "downloads": -1,
                "filename": "wsidicom-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "94eeb1ee01c03f34ddc4da5cae6a3a47",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 64833,
                "upload_time": "2022-02-14T15:37:18",
                "upload_time_iso_8601": "2022-02-14T15:37:18.673597Z",
                "url": "https://files.pythonhosted.org/packages/94/c1/07f8e87e4cb1b645f05a3e530d91f0cdd17c56adbdc7f5fe9719c449ce59/wsidicom-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "09fc4a79b0418571846fbcb873a7d240",
                    "sha256": "3cd5d5f4b428de0d002b6822800cfbc5dd3a6836ddc11e3c05a8c20ac013c427"
                },
                "downloads": -1,
                "filename": "wsidicom-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "09fc4a79b0418571846fbcb873a7d240",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 62087,
                "upload_time": "2022-02-14T15:37:19",
                "upload_time_iso_8601": "2022-02-14T15:37:19.994729Z",
                "url": "https://files.pythonhosted.org/packages/58/c0/f5841450560dd1d1b57df513e1193301e2d09b6131c4751e30923d319840/wsidicom-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.3.0/",
            "requires_dist": [
                "numpy (>=1.15.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=9.0.0,<10.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7c6fb8eceafe18f99762655768445129",
                    "sha256": "2cf01ac1bfdbdebabc8199165b7ac08b9a6be593b209aa2c84d2a091c4eb6fcd"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7c6fb8eceafe18f99762655768445129",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 65568,
                "upload_time": "2022-04-20T09:43:19",
                "upload_time_iso_8601": "2022-04-20T09:43:19.882103Z",
                "url": "https://files.pythonhosted.org/packages/73/15/6f72609e2264d13b8407ef71bc0c46f1a5e37d48b0a59921085c5b2f26f6/wsidicom-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ad3f10706f8b9e98af27e03d90cdad92",
                    "sha256": "75bef48bc6efbe9ca407936f3c7d3c4593e5bd6cfa356c05a4ba31efc77d8509"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ad3f10706f8b9e98af27e03d90cdad92",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 62905,
                "upload_time": "2022-04-20T09:43:21",
                "upload_time_iso_8601": "2022-04-20T09:43:21.564992Z",
                "url": "https://files.pythonhosted.org/packages/0f/a0/7af06ca33d470271c1e4c32d2ed7bf80346cf257bbf9c68fed24d3c50cd1/wsidicom-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.3.1/",
            "requires_dist": [
                "numpy (>=1.15.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=9.0.0,<10.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1900cde4bb691dafcbdb7024c9da471e",
                    "sha256": "103a28992b20ff798712bb76617bb94935569db163e4df9c60fa34871056784a"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1900cde4bb691dafcbdb7024c9da471e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 65577,
                "upload_time": "2022-05-04T09:20:32",
                "upload_time_iso_8601": "2022-05-04T09:20:32.911464Z",
                "url": "https://files.pythonhosted.org/packages/57/be/400729b5dc291f679a36f0b93ca86fd3d7b5a5a7d541cbe3d883265dca25/wsidicom-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "be474290f564036910da0118cc36043c",
                    "sha256": "4c7b62651544a58156ad660c2099a52fa42e0cfaa8947b889f0cea63527b7759"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "be474290f564036910da0118cc36043c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 62917,
                "upload_time": "2022-05-04T09:20:34",
                "upload_time_iso_8601": "2022-05-04T09:20:34.385856Z",
                "url": "https://files.pythonhosted.org/packages/22/f1/f6a44958746bd7901627feaa50f93da565d92c2403138832678f16d3b59f/wsidicom-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.2": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.3.2/",
            "requires_dist": [
                "numpy (>=1.15.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=9.0.0,<10.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "34c1dc7f86820319c88f22953d8de9b8",
                    "sha256": "f01c3ade6b382cc597d1a11b35f28d097b2bb68aa108f7e8ff0e8f52ac027c56"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "34c1dc7f86820319c88f22953d8de9b8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 65578,
                "upload_time": "2022-05-08T18:54:33",
                "upload_time_iso_8601": "2022-05-08T18:54:33.976396Z",
                "url": "https://files.pythonhosted.org/packages/ae/22/d83d2e58c0e81e7fe6df60b32594d0488d6f8a7c594126815a607c2dfa5a/wsidicom-0.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "84c98ae3009c56f1f5da3c29d48fc50e",
                    "sha256": "d4824fcd1ed3756e44639cf1192b1ae6fc1430d2767465e3afd283ee2edc47e1"
                },
                "downloads": -1,
                "filename": "wsidicom-0.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "84c98ae3009c56f1f5da3c29d48fc50e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 62936,
                "upload_time": "2022-05-08T18:54:35",
                "upload_time_iso_8601": "2022-05-08T18:54:35.956783Z",
                "url": "https://files.pythonhosted.org/packages/2e/a3/dedffe7ed06fb6da13bab4b07de7bd03f999facd3c424953c08edaef6323/wsidicom-0.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.0": {
        "info": {
            "author": "Erik O Gabrielsson",
            "author_email": "erik.o.gabrielsson@sectra.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Healthcare Industry",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Medical Science Apps."
            ],
            "description": "# *wsidicom*\n*wsidicom* is a Python package for reading [DICOM WSI](http://dicom.nema.org/Dicom/DICOMWSI/) file sets. The aims with the project are:\n- Easy to use interface for reading and writing WSI DICOM images and annotations using the DICOM Media Storage Model.\n- Support the latest and upcomming DICOM standards.\n- Platform independent installation via PyPI.\n\n## Installing *wsidicom*\n*wsidicom* is available on PyPI:\n```console\n$ pip install wsidicom\n```\nAnd through conda:\n```console\nconda install -c conda-forge wsidicom\n```\n\n## Important note\nPlease note that this is an early release and the API is not frozen yet. Function names and functionality is prone to change.\n\n## Requirements\n*wsidicom* uses pydicom, numpy and Pillow (with jpeg and jpeg2000 plugins).\n\n## Limitations\nLevels are required to have (close to) 2 factor scale and same tile size.\n\nOnly JPEGBaseline8Bit, JPEG2000 and JPEG2000Lossless transfer syntax is supported.\n\nOptical path identifiers needs to be unique across file set.\n\n## Basic usage\n***Load a WSI dataset from files in folder.***\n```python\nfrom wsidicom import WsiDicom\nslide = WsiDicom.open(path_to_folder)\n```\n***Read a 200x200 px region starting from px 1000, 1000 at level 6.***\n ```python\nregion = slide.read_region((1000, 1000), 6, (200, 200))\n```\n***Read 3x3 mm region starting at 0, 0 mm at level 6.***\n ```python\nregion_mm = slide.read_region_mm((0, 0), 6, (3, 3))\n```\n***Read 3x3 mm region starting at 0, 0 mm with pixel spacing 0.01 mm/px.***\n ```python\nregion_mpp = slide.read_region_mpp((0, 0), 0.01, (3, 3))\n```\n***Read a thumbnail of the whole slide with maximum dimensions 200x200 px.***\n ```python\nthumbnail = slide.read_thumbnail(200, 200)\n```\n***Read an overview image (if available).***\n ```python\noverview = slide.read_overview()\n```\n***Read a label image (if available).***\n ```python\nlabel = slide.read_label()\n```\n***Read (decoded) tile from position 1, 1 in level 6.***\n ```python\ntile = slide.read_tile(6, (1, 1))\n```\n***Read (encoded) tile from position 1, 1 in level 6.***\n ```python\ntile_bytes = slide.read_encoded_tile(6, (1, 1))\n```\n***Close files***\n ```python\nslide.close()\n```\n\n## Settings\n*wsidicom* can be configured with the settings variable. For example, set the parsing of files to strict:\n```python\nfrom wsidicom import settings\nsettings.strict_uid_check = True\nsettings._strict_attribute_check = True\n```\n\n## Data structure\nA WSI DICOM pyramid is in *wsidicom* represented by a hierarchy of objects of different classes, starting from bottom:\n- *WsiDicomFile*, represents a WSI DICOM file, used for accessing DicomImageData and WsiDataset.\n- *DicomImageData*, represents the image data in one or several WSI DICOM files.\n- *WsiDataset*, represents the image metadata in one or several WSI DICOM files.\n- *WsiInstance*, represents image data and image metadata.\n- *WsiDicomLevel*, represents a group of instances with the same image size, i.e. of the same level.\n- *WsiDicomLevels*, represents a group of levels, i.e. the pyrimidal structure.\n- *WsiDicom*, represents a collection of levels, labels and overviews.\n\nLabels and overviews are structured similarly to levels, but with somewhat different properties and restrictions.\n\nThe structure is easiest created using the open() helper functions, e.g. to create a WsiDicom-object:\n```python\nslide = WsiDicom.open(path_to_folder)\n```\n\nBut the structure can also be created manually from the bottom:\n```python\nfile = WsiDicomFile(path_to_file)\ninstance = WsiInstance(file.dataset, DicomImageData(files))\nlevel = WsiDicomLevel([instance])\nlevels = WsiDicomLevels([level])\nslide = WsiDicom([levels])\n```\n\n## Adding support for other file formats.\nBy subclassing *ImageData* and implementing the required properties (transfer_syntax, image_size, tile_size, and pixel_spacing) and methods (get_tile() and close()) *wsidicom* can be used to access wsi images in other file formats than DICOM. In addition to a ImageData-object, image data, specified in a DICOM dataset, must also be created. For example, assuming a implementation of MyImageData exists that takes a path to a image file as argument and create_dataset() produces a DICOM dataset (see is_wsi_dicom() of WsiDataset for required attributes), WsiInstancees could be created for each pyramidal level, label, or overview:\n```python\nimage_data = MyImageData('path_to_image_file')\ndataset = create_dataset()\ninstance = WsiInstance(dataset, image_data)\n```\nThe created instances can then be arranged into levels etc, and opened as a WsiDicom-object as described in 'Data structure'.\n\n## Annotation usage\nAnnotations are structured in a hierarchy:\n- AnnotationInstance\n    Represents a collection of AnnotationGroups. All the groups have the same frame of reference, i.e. annotations are from the same wsi stack.\n- AnnotationGroup\n    Represents a group of annotations. All annotations in the group are of the same type (e.g. PointAnnotation), have the same label, description and category and type. The category and type are codes that are used to define the annotated feature. A good resource for working with codes is avaiable [here](https://qiicr.gitbook.io/dcmqi-guide/opening/coding_schemes).\n- Annotation\n    Represents a annotation. An Annotation has a geometry (currently Point, Polyline, Polygon) and an optional list of Measurements.\n- Measurement\n    Represents a measurement for an Annotation. A Measurement consists of a type-code (e.g. \"Area\"), a value and a unit-code (\"mm\")\n\nCodes that are defined in the 222-draft can be created using the create(source, type) function of the ConceptCode-class.\n\n***Load a WSI dataset from files in folder.***\n```python\nfrom wsidicom import WsiDicom\nslide = WsiDicom.open(path_to_folder)\n```\n***Create a point annotation at x=10.0, y=20.0 mm.***\n```python\nfrom wsidicom import Annotation, Point\npoint_annotation = Annotation(Point(10.0, 20.0))\n```\n\n***Create a point annotation with a measurement.***\n```python\nfrom wsidicom import ConceptCode, Measurement\n# A measurement is defined by a type code ('Area'), a value (25.0) and a unit code ('Pixels).\narea = ConceptCode.measurement('Area')\npixels = ConceptCode.unit('Pixels')\nmeasurement = Measurement(area, 25.0, pixels)\npoint_annotation_with_measurment = Annotation(Point(10.0, 20.0), [measurement])\n```\n\n***Create a group of the annotations.***\n```python\nfrom wsidicom import PointAnnotationGroup\n# The 222 suplement requires groups to have a label, a category and a type\ngroup = PointAnnotationGroup(\n    annotations=[point_annotation, point_annotation_with_measurment],\n    label='group label',\n    categorycode=ConceptCode.category('Tissue'),\n    typecode=ConceptCode.type('Nucleus'),\n    description='description'\n)\n```\n\n***Create a collection of annotation groups.***\n```python\nfrom wsidicom import AnnotationInstance\nannotations = AnnotationInstance([group], 'volume', slide.uids)\n```\n\n***Save the collection to file.***\n```python\nannotations.save('path_to_dicom_dir/annotation.dcm')\n```\n\n***Reopen the slide and access the annotation instance.***\n```python\nslide = WsiDicom.open(path_to_folder)\nannotations = slide.annotations\n```\n\n## Setup environment for development\nRequires poetry installed in the virtual environment.\n\n```console\n$ git clone https://github.com/imi-bigpicture/wsidicom.git\n$ poetry install\n```\n\nTo watch unit tests use:\n\n```console\n$ poetry run pytest-watch -- -m unittest\n```\n\nThe integration tests uses test images from nema.org thats needs to be downloaded. The location of the test images can be changed from the default tests\\testdata\\slides using the enviroment variable WSIDICOM_TESTDIR. Download the images using the supplied script:\n\n```console\n$ python .\\tests\\download_test_images.py\n```\n\nIf the files are already downloaded the script will validate the checksums.\n\nTo run integration tests:\n\n```console\n$ poetry run pytest -m integration\n```\n\n## Other DICOM python tools\n- [pydicom](https://pydicom.github.io/)\n- [highdicom](https://github.com/MGHComputationalPathology/highdicom)\n\n## Contributing\nWe welcome any contributions to help improve this tool for the WSI DICOM community!\n\nWe recommend first creating an issue before creating potential contributions to check that the contribution is in line with the goals of the project. To submit your contribution, please issue a pull request on the imi-bigpicture/wsidicom repository with your changes for review.\n\nOur aim is to provide constructive and positive code reviews for all submissions. The project relies on gradual typing and roughly follows PEP8. However, we are not dogmatic. Most important is that the code is easy to read and understand.\n\n## Acknowledgement\n*wsidicom*: Copyright 2021 Sectra AB, licensed under Apache 2.0.\n\nThis project is part of a project that has received funding from the Innovative Medicines Initiative 2 Joint Undertaking under grant agreement No 945358. This Joint Undertaking receives support from the European Union\u2019s Horizon 2020 research and innovation programme and EFPIA. IMI website: www.imi.europa.eu\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imi-bigpicture/wsidicom",
            "keywords": "whole slide image,digital pathology,annotations,dicom",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wsidicom",
            "package_url": "https://pypi.org/project/wsidicom/",
            "platform": null,
            "project_url": "https://pypi.org/project/wsidicom/",
            "project_urls": {
                "Homepage": "https://github.com/imi-bigpicture/wsidicom",
                "Repository": "https://github.com/imi-bigpicture/wsidicom"
            },
            "release_url": "https://pypi.org/project/wsidicom/0.4.0/",
            "requires_dist": [
                "numpy (>=1.22.0,<2.0.0)",
                "pydicom (>=2.1.0,<3.0.0)",
                "Pillow (>=9.1.1,<10.0.0)"
            ],
            "requires_python": ">=3.8,<4.0",
            "summary": "Tools for handling DICOM based whole scan images",
            "version": "0.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14299932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fe04609c4d961c8f4759b38a3f9087d5",
                    "sha256": "58d641ac6198db027a5b22517ef9a51c74dcabc3fdf0806e868f94aea55cbf35"
                },
                "downloads": -1,
                "filename": "wsidicom-0.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fe04609c4d961c8f4759b38a3f9087d5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 67159,
                "upload_time": "2022-06-30T20:02:21",
                "upload_time_iso_8601": "2022-06-30T20:02:21.215623Z",
                "url": "https://files.pythonhosted.org/packages/5f/e9/9078d499f730e03dfe6c57f5156fd34a03260fb9beb29a3a1131d214fe83/wsidicom-0.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5c6852c4f122c6f782e6c2bf82d64c7d",
                    "sha256": "0128a6ec90164099c1da39b41bc49abd4194d2ad479951c5dae6d659eeea72c2"
                },
                "downloads": -1,
                "filename": "wsidicom-0.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5c6852c4f122c6f782e6c2bf82d64c7d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 64489,
                "upload_time": "2022-06-30T20:02:22",
                "upload_time_iso_8601": "2022-06-30T20:02:22.659624Z",
                "url": "https://files.pythonhosted.org/packages/d3/f2/e7c0aeab133b546e81bf2a439438addd80b818a0329dcfb1ea297a68110c/wsidicom-0.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}