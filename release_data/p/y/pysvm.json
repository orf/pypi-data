{
    "0.2": {
        "info": {
            "author": "Welt",
            "author_email": "xingcy@smail.nju.edu.cn",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# PySVM : A NumPy implementation of SVM based on SMO algorithm\n\n\u5b9e\u73b0LIBSVM\u4e2d\u7684SVM\u7b97\u6cd5\uff0c\u5bf9\u6807sklearn\u4e2d\u7684SVM\u6a21\u5757\n\n- [x] LinearSVC\n- [x] KernelSVC\n- [x] NuSVC\n- [x] LinearSVR\n- [x] KernelSVR\n- [x] NuSVR\n- [x] OneClassSVM\n\n2021.11.05 : \u52a0\u5165\u4e86\u9ad8\u65af\u6838\u51fd\u6570\u7684RFF\u65b9\u6cd5\u3002\n\n2022.01.27 : \u901a\u8fc7\u5411\u91cf\u5316\u8fd0\u7b97\u5bf9\u7b97\u6cd5\u8fdb\u884c\u63d0\u901f\uff0c\u52a0\u5165\u6027\u80fd\u5bf9\u6bd4\u3002\n\n2022.01.28 : \u52a0\u5165\u7f13\u5b58\u673a\u5236\uff0c\u89e3\u51b3\u5927\u6570\u636e\u4e0bQ\u77e9\u9635\u7684\u7f13\u5b58\u95ee\u9898\uff0c\u53c2\u8003<https://welts.xyz/2022/01/28/cache/>\u3002\n\n2022.01.30 : \u5220\u9664Solver\u7c7b\uff0c\u8bbe\u8ba1\u9488\u5bf9\u7279\u5b9a\u95ee\u9898\u7684SMO\u7b97\u6cd5\u3002\n\n2022.02.01 : \u4fee\u6539SVR\u7b97\u6cd5\u4e2d\u7684\u9519\u8bef\u3002\n\n2022.05.27 : \u91cd\u6784\u4ee3\u7801\uff0c\u5c06SMO\u7b97\u6cd5\u6c42\u89e3\u548cSVM\u89e3\u8026\uff0c\u66f4\u5bb9\u6613\u89e3\u8bfb\u3002\n\n## \u4e3b\u8981\u7b97\u6cd5\n\nPython(NumPy)\u5b9e\u73b0SMO\u7b97\u6cd5\uff0c\u4e5f\u5c31\u662f\n\n<img src=\"src/formula.png\" alt=\"opt\" style=\"zoom:67%;\" />\n\n\u548c\n\n<img src=\"src/nu-formula.png\" alt=\"opt\" style=\"zoom:67%;\" />\n\n\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u4ece\u800c\u5b9e\u73b0\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b\u3001\u56de\u5f52\u4ee5\u53ca\u5f02\u5e38\u68c0\u6d4b\u3002\n\n## Framework\n\n\u6211\u4eec\u5b9e\u73b0\u4e86\u7ebf\u6027SVM\uff0c\u6838SVM\uff0c\u7528\u4e8e\u5206\u7c7b\uff0c\u56de\u5f52\u548c\u5f02\u5e38\u68c0\u6d4b:\n\n```mermaid\ngraph \n\tPySVM --> LinearSVM\n\tPySVM --> KernelSVM\n\tPySVM --> NuSVM\n\tLinearSVM --> LinearSVC\n\tLinearSVM --> LinearSVR\n\tKernelSVM --> KernelSVC\n\tKernelSVM --> KernelSVR\n\tKernelSVM --> OneClassSVM\n\tNuSVM --> NuSVC\n\tNuSVM --> NuSVR\n```\n\n\u8bbe\u8ba1\u6846\u67b6\uff1a\n\n```mermaid\ngraph BT\n\tcache(LRU Cache) --> Solver\n\tSolver --> LinearSVM\n\tLinearSVM --> KernelSVM\n\tKernel --> KernelSVM\n\tRFF --> Kernel\n\tmc(sklearn.multiclass) --> LinearSVM\n\tmc --> NuSVM\n\tNuSolver --> NuSVM\n\tKernel --> NuSVM\n\tcache --> NuSolver\n```\n\n\u5176\u4e2dRFF\u8868\u793a\u968f\u673a\u5085\u91cc\u53f6\u7279\u5f81\uff0cLRU Cache\u7f13\u5b58\u673a\u5236\u7528\u4e8e\u5904\u7406\u6781\u5927\u6570\u636e\u7684\u573a\u666f\u3002\n\n## Install\n\n```bash\npip install pysvm\n```\n\n\u6216\u6e90\u7801\u5b89\u88c5\n\n```bash\ngit clone https://github.com/Kaslanarian/PySVM\ncd PySVM\npython setup.py install\n```\n\n\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\n\n```python\n>>> from sklearn.datasets import load_iris\n>>> from pysvm import LinearSVC\n>>> X, y = load_iris(return_X_y=True)\n>>> X = (X - X.mean(0)) / X.std(0) # \u6807\u51c6\u5316\n>>> clf = LinearSVC().fit(X, y) # \u8bad\u7ec3\u6a21\u578b\n>>> clf.score(X, y) # \u51c6\u786e\u7387\n0.94\n```\n\n## Examples\n\n\u5728[`tests`](./tests)\u4e2d\uff0c\u67095\u4e2a\u4f8b\u5b50\uff0c\u5206\u522b\u662f\uff1a\n\n- [dataset_classify.py](./tests/dataset_classify.py), \u4f7f\u7528\u4e09\u79cdSVM\u5bf9sklearn\u81ea\u5e26\u6570\u636e\u96c6\u5206\u7c7b\uff08\u9ed8\u8ba4\u53c2\u6570\u3001\u9009\u53d620%\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u3001\u6570\u636e\u7ecf\u8fc7\u6807\u51c6\u5316\uff09\uff1a\n\n    |  Accuracy  |  Iris   |  Wine   | Breast Cancer | Digits  |\n    | :--------: | :-----: | :-----: | :-----------: | :-----: |\n    | Linear SVC | 94.737% | 97.778% |    96.503%    | 95.556% |\n    | Kernel SVC | 97.368% | 97.778% |    96.503%    | 98.222% |\n    |   NuSVC    | 97.368% | 97.778% |    92.308%    | 92.222% |\n\n- [dataset_regression.py](./tests/dataset_regression.py), \u4f7f\u7528\u4e09\u79cdSVM\u5bf9sklearn\u81ea\u5e26\u6570\u636e\u96c6\u56de\u5f52\uff08\u9ed8\u8ba4\u53c2\u6570\u3001\u9009\u53d620%\u6570\u636e\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u3001\u6570\u636e\u7ecf\u8fc7\u6807\u51c6\u5316\uff09\uff1a\n\n    |  R2 score  | Boston | Diabetes |\n    | :--------: | :----: | :------: |\n    | Linear SVR | 0.6570 |  0.4537  |\n    | Kernel SVR | 0.6992 |  0.1756  |\n    |   NuSVR    | 0.6800 |  0.1459  |\n\n- [visual_classify.py](./tests/visual_classify.py)\uff0c\u5206\u522b\u7528LinearSVC\u548cKernelSVC\u5bf9\u4eba\u5de5\u6784\u9020\u7684\u4e8c\u5206\u7c7b\u6570\u636e\u96c6\u8fdb\u884c\u5206\u7c7b\uff0c\u753b\u51fa\u5206\u7c7b\u7ed3\u679c\u56fe\u50cf\u548c\u51b3\u7b56\u51fd\u6570\u503c\u56fe\u50cf\uff1a\n  \n  ![visual_classify](./src/visual_classify.png)\n\n- [visual_regression.py](./tests/visual_regression.py)\u7528\u4e09\u79cdSVR\u62df\u5408\u4e09\u79cd\u4e0d\u540c\u7684\u6570\u636e\uff1a\u7ebf\u6027\u6570\u636e\uff0c\u4e8c\u6b21\u51fd\u6570\u548c\u4e09\u89d2\u51fd\u6570\uff1a\n\n  ![regression](src/visual_regression.png)\n\n- [visual_outlier.py](./tests/visual_outlier.py)\u7528OneClassSVM\u8fdb\u884c\u5f02\u5e38\u68c0\u6d4b\uff1a\n\n  ![oc_svm](src/oc_svm.png)\n\n## Reference\n\n- Chang, Chih-Chung, and Chih-Jen Lin. \"LIBSVM: a library for support vector machines.\" ACM transactions on intelligent systems and technology (TIST) 2.3 (2011): 1-27.\n- https://github.com/Kaslanarian/libsvm-sc-reading : \u9605\u8bfbLibSVM\u6e90\u7801\u7684\u77e5\u8bc6\u6574\u7406\u4e0e\u601d\u8003.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Kaslanarian/PySVM",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "Welt",
            "maintainer_email": "xingcy@smail.nju.edu.cn",
            "name": "pysvm",
            "package_url": "https://pypi.org/project/pysvm/",
            "platform": null,
            "project_url": "https://pypi.org/project/pysvm/",
            "project_urls": {
                "Homepage": "https://github.com/Kaslanarian/PySVM"
            },
            "release_url": "https://pypi.org/project/pysvm/0.2/",
            "requires_dist": [
                "numpy",
                "sklearn"
            ],
            "requires_python": "",
            "summary": "PySVM : A NumPy implementation of SVM based on SMO algorithm",
            "version": "0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14513107,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "541fdfa743e1d331571d89307898dd13",
                    "sha256": "61868d17170040708b8ea39e57977c586c9e829afb4cb528ad3705fc26db7e3f"
                },
                "downloads": -1,
                "filename": "pysvm-0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "541fdfa743e1d331571d89307898dd13",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 16032,
                "upload_time": "2022-07-22T06:55:21",
                "upload_time_iso_8601": "2022-07-22T06:55:21.920289Z",
                "url": "https://files.pythonhosted.org/packages/76/8d/775dd71250ceb69be155a355df4a75a934658f04d885435a28b7cf1decd0/pysvm-0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f8ccb5ff10c6c9065e51004d1d72d51",
                    "sha256": "b21f2740d61923e56d13c6f4621f63363abd30e3ff5c41163d98b71a179028d7"
                },
                "downloads": -1,
                "filename": "pysvm-0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "6f8ccb5ff10c6c9065e51004d1d72d51",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13713,
                "upload_time": "2022-07-22T06:55:24",
                "upload_time_iso_8601": "2022-07-22T06:55:24.274945Z",
                "url": "https://files.pythonhosted.org/packages/3b/e1/6a69fca3366f9b22c3f8aacfb54c452e0fdbdb651938e75c0eab1208a573/pysvm-0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}