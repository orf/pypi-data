{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Ismail Khalfaoui Hassani <khalfaoui.ismail@hotmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "# Dilated-Convolution-with-Learnable-Spacings-PyTorch\nIsmail Khalfaoui Hassani, Thomas Pellegrini and Timoth\u00e9e Masquelier\n\nDilated Convolution with Learnable Spacings (abbreviated to DCLS) is a novel convolution method based on gradient descent and interpolation. It could be seen as an improvement of the well known dilated convolution that has been widely explored in deep convolutional neural networks and which aims to inflate the convolutional kernel by inserting spaces between the kernel elements. \n\nIn DCLS, the positions of the weights within the convolutional kernel are learned in a gradient-based manner, and the inherent problem of non-differentiability due to the integer nature of the positions in the kernel is solved by taking advantage of an interpolation method. \n\nFor now, the code has only been implemented on [PyTorch](https://pytorch.org/), using Pytorch. \n\n- [What's new](#whats-new)\n- [Installation](#installation)\n- [Usage](#usage)\n- [Device Supports](#device-supports)\n- [Publications and Citation](#publications-and-citation)\n- [Contribution](#contribution)\n\nThe method is described in the arXiv preprint [Dilated Convolution with Learnable Spacings](https://arxiv.org/abs/2112.03740v2).\n\n## What's new\n\n**Nov 8, 2022**:\n-   Previous branch main is moved to branch cuda, now in main brach we have fully native torch conv{1,2,3}d.\n\n**Sep 27, 2022**:\n-   Code release for ConvNeXt-dcls experiments. See [**ConvNeXt-dcls**](https://github.com/K-H-Ismail/ConvNeXt-dcls).\n\n## Installation\n\nDCLS is based on PyTorch and CUDA. Please make sure that you have installed all the requirements before you install DCLS.\n\n**Requirements**:\n-   Pytorch version torch>=1.6.0. See [**torch**](https://pytorch.org/).\n\n**Preferred versions**:\n```bash\npip3 install torch==1.8.0+cu111 torchvision==0.9.0+cu111 -f https://download.pytorch.org/whl/torch_stable.html\n```\n\n**Install the latest developing version from the source codes**:\n\nFrom [GitHub](https://github.com/K-H-Ismail/Dilated-Convolution-with-Learnable-Spacings-PyTorch):\n```bash\ngit clone https://github.com/K-H-Ismail/Dilated-Convolution-with-Learnable-Spacings-PyTorch.git\ncd Dilated-Convolution-with-Learnable-Spacings-PyTorch\npython3 -m pip install --upgrade pip\npython3 -m build \npython3 -m pip install dist/dcls-0.0.2-py3-none-any.whl \n\n```\n\n**Install the last stable version from** [**PyPI**](https://pypi.org/project/DCLS/):\n\n```bash\ncoming soon\n```\n\n## Usage\nDcls methods could be easily used as a substitue of Pytorch's nn.Conv**n**d classical convolution method:\n\n```python\nimport torch\nfrom DCLS.construct.modules import  Dcls2d\n\n# With square kernels, equal stride and dilation\nm = Dcls2d(16, 33, kernel_count=3, dilated_kernel_size=7)\ninput = torch.randn(20, 16, 50, 100)\noutput = m(input)\nloss = output.sum()\nloss.backward()\nprint(output, m.weight.grad, m.P.grad)\n```\n```python\nimport torch\nfrom DCLS.construct.modules import  Dcls1d \n\n# Will construct kernels of size 7x7 with 3 elements inside each kernel\nm = Dcls1d(3, 16, kernel_count=3, dilated_kernel_size=7)\ninput = torch.rand(8, 3, 32)\noutput = m(input)\nloss = output.sum()\nloss.backward()\nprint(output, m.weight.grad, m.P.grad)\n```\n\n```python\nimport torch\nfrom DCLS.construct.modules import  Dcls3d\n\nm = Dcls3d(16, 33, kernel_count=10, dilated_kernel_size=(7,8,9))\ninput = torch.randn(20, 16, 50, 100, 30)\noutput = m(input)\nloss = output.sum()\nloss.backward()\nprint(output, m.weight.grad, m.P.grad)\n```\n\n**DepthWiseConv2dImplicitGEMM for 2D-DCLS**:\n\nFor 2D-DCLS, to install and enable the DepthWiseConv2dImplicitGEMM, please follow the instructions of [RepLKNet](https://github.com/DingXiaoH/RepLKNet-pytorch#use-our-efficient-large-kernel-convolution-with-pytorch). Otherwise, Pytorch's native Conv2D method will be used.\n\n\n## Device Supports\nDCLS supports CPU and Nvidia CUDA GPU devices now.\n\n-   [x] Nvidia GPU\n-   [x] CPU\n\nMake sure to have your data and model on CUDA GPU.\n\n## Publications and Citation\n\nIf you use DCLS in your work, please consider to cite it as follows:\n\n```\n@article{khalfaoui2021dilated,\n  title={Dilated convolution with learnable spacings},\n  author={Khalfaoui-Hassani, Ismail and Pellegrini, Thomas and Masquelier, Timoth{\\'e}e},\n  journal={arXiv preprint arXiv:2112.03740},\n  year={2021}\n}\n\n```\n\n## Contribution\n\nThis project is open source, therefore all your contributions are welcomed, whether it's reporting issues, finding and fixing bugs, requesting new features, and sending pull requests ...\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DCLS",
            "package_url": "https://pypi.org/project/DCLS/",
            "platform": null,
            "project_url": "https://pypi.org/project/DCLS/",
            "project_urls": {
                "Bug Tracker": "https://github.com/K-H-Ismail/Dilated-Convolution-with-Learnable-Spacings-PyTorch/issues",
                "Homepage": "https://github.com/K-H-Ismail/Dilated-Convolution-with-Learnable-Spacings-PyTorch"
            },
            "release_url": "https://pypi.org/project/DCLS/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Dilated convolution with learnable spacings, built on PyTorch.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15692332,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e47484512f8fa4a1dcda86c10dcd4bb",
                    "sha256": "37c5f537d5ab0c31228432244222889c67fc8c6e856802d1e57ac94ae833b41f"
                },
                "downloads": -1,
                "filename": "dcls-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2e47484512f8fa4a1dcda86c10dcd4bb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9831,
                "upload_time": "2022-11-08T00:06:06",
                "upload_time_iso_8601": "2022-11-08T00:06:06.725710Z",
                "url": "https://files.pythonhosted.org/packages/0d/9a/0102659e195bdc26cb0afb0e2aa5bc2eae2cb92a183f66d8fe69b286c204/dcls-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2264b55ee4405c715cebbf9de957e76d",
                    "sha256": "e5276e192c377e09d873b419707934b2eff4cc45cc4ed3eb5a4108a0d3f293cb"
                },
                "downloads": -1,
                "filename": "dcls-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2264b55ee4405c715cebbf9de957e76d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8824,
                "upload_time": "2022-11-08T00:06:40",
                "upload_time_iso_8601": "2022-11-08T00:06:40.004550Z",
                "url": "https://files.pythonhosted.org/packages/02/7a/4d70fdd3df57603af9a9b4748d958aced8e428915a3fc044eeae089cd09e/dcls-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}