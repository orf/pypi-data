{
    "0.0.1": {
        "info": {
            "author": "ANDAM Amine",
            "author_email": "andamamine83@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nowabindata/barlaman",
            "keywords": "politics,parliament,webscraping,parliamentary-data,morocco",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "barlaman",
            "package_url": "https://pypi.org/project/barlaman/",
            "platform": null,
            "project_url": "https://pypi.org/project/barlaman/",
            "project_urls": {
                "Homepage": "https://github.com/nowabindata/barlaman"
            },
            "release_url": "https://pypi.org/project/barlaman/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Scrape data of Moroccan House of Representatives.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15813186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b3584b2b93944cffe80d58b60a01f2c5",
                    "sha256": "7720b3e9309440de7fdc2f02aee865c7958bd860750b5f66f5d66b6e5ff981a3"
                },
                "downloads": -1,
                "filename": "barlaman-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b3584b2b93944cffe80d58b60a01f2c5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 15545,
                "upload_time": "2022-06-13T23:54:30",
                "upload_time_iso_8601": "2022-06-13T23:54:30.713409Z",
                "url": "https://files.pythonhosted.org/packages/a3/32/7c1a1521807d15fdd2d0f646d008a8f88d2678d5c3a42383806ebed50a23/barlaman-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a1f98e1c6ddf89ab0af58572f39e95cf",
                    "sha256": "1291cade6bb0a9c35134a0a00d180ba5c5df4abcad28ede49f887d02de6a5692"
                },
                "downloads": -1,
                "filename": "barlaman-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a1f98e1c6ddf89ab0af58572f39e95cf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 13769,
                "upload_time": "2022-06-13T23:54:34",
                "upload_time_iso_8601": "2022-06-13T23:54:34.487307Z",
                "url": "https://files.pythonhosted.org/packages/97/52/7f41b91f5072208d42fc2e01dab43af616becb35ab527ed845e343446693/barlaman-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "ANDAM Amine",
            "author_email": "andamamine83@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nowabindata/barlaman",
            "keywords": "politics,parliament,webscraping,parliamentary-data,morocco",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "barlaman",
            "package_url": "https://pypi.org/project/barlaman/",
            "platform": null,
            "project_url": "https://pypi.org/project/barlaman/",
            "project_urls": {
                "Homepage": "https://github.com/nowabindata/barlaman"
            },
            "release_url": "https://pypi.org/project/barlaman/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Scrape data of Moroccan House of Representatives.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15813186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "755e91cadb8420af2491bf1cf1080565",
                    "sha256": "9bec1e7413d32e309a66484f9a6d813640c7c516fce95ab85467c8b75786cdb8"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "755e91cadb8420af2491bf1cf1080565",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 16541,
                "upload_time": "2022-06-14T14:37:54",
                "upload_time_iso_8601": "2022-06-14T14:37:54.083079Z",
                "url": "https://files.pythonhosted.org/packages/35/32/a807da8da1dbc0d6cbd423df2911ddddfbf8aefcb1842e0237e2079888d1/barlaman-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "80914b5a7bdfd72cc16fba495f8fcfa4",
                    "sha256": "e4b8daa5225b89398995ef87e0d3adc43547e6a0831b675c2da9830b29a34ed4"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "80914b5a7bdfd72cc16fba495f8fcfa4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 14602,
                "upload_time": "2022-06-14T14:37:56",
                "upload_time_iso_8601": "2022-06-14T14:37:56.301047Z",
                "url": "https://files.pythonhosted.org/packages/40/55/c0d4ae96eb2510f2d035c4d3aedc45e4c1bdc1297b7ed7f25109ca32e9cb/barlaman-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "ANDAM Amine",
            "author_email": "andamamine83@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nowabindata/barlaman",
            "keywords": "politics,parliament,webscraping,parliamentary-data,morocco",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "barlaman",
            "package_url": "https://pypi.org/project/barlaman/",
            "platform": null,
            "project_url": "https://pypi.org/project/barlaman/",
            "project_urls": {
                "Homepage": "https://github.com/nowabindata/barlaman"
            },
            "release_url": "https://pypi.org/project/barlaman/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Scrape data of Moroccan House of Representatives.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15813186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "24bf77418ffab6925a344d4439c4b455",
                    "sha256": "d6ab592cb3421ac81fcdc82f3a776eb6f492e5926794bc39934236a8ffa34d02"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "24bf77418ffab6925a344d4439c4b455",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 17008,
                "upload_time": "2022-06-16T21:51:32",
                "upload_time_iso_8601": "2022-06-16T21:51:32.564005Z",
                "url": "https://files.pythonhosted.org/packages/34/e6/dcc73062a66e90ea96a48b24bb70dbb6db2fa0ad212ba64ac2ded4ad7571/barlaman-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e42b32f693c7846bc14294e9859276e7",
                    "sha256": "091bbac2e0a23f4eea705fc96449202b053be2914eaae52ca233f9bc67b94f6f"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "e42b32f693c7846bc14294e9859276e7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15109,
                "upload_time": "2022-06-16T21:51:35",
                "upload_time_iso_8601": "2022-06-16T21:51:35.320083Z",
                "url": "https://files.pythonhosted.org/packages/bf/b7/33888b5d77e7ac085e41ced44c82549889e8fe90c6713804ce21bb2f2030/barlaman-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "ANDAM Amine",
            "author_email": "andamamine83@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Welcome to barlaman\r\n**A Python library to Scrap  raw data from the  Moroccan Parliament (House of Representatives) website.**\r\n\r\n + PyPI link : https://pypi.org/project/barlaman/\r\n\r\n## Requirements\r\nThese  following packages should be installed:\r\n\r\n + ***BeautifulSoup*** & ***requests*** for web scrapping\r\n + ***pdfplumber*** for pdf scrapping\r\n + ***arabic_reshaper*** & ***python-bidi*** to work with arabic text\r\n + ***re*** for regular expressions.\r\n + ***json*** & ***os*** to work with JSON files and folders.\r\n + ***importlib*** to access the data about deputy url.\r\n## Install \r\n```python\r\npip install barlaman\r\nfrom barlaman import *\r\n```\r\n## Running the scraper\r\n\r\n### I. Scrape the schedule :\r\nEach Monday, and in accordance with the  Constitution, the House of Representatives  convene in a plenary sitting devoted to oral questions. Before the sitting, the House of Representatives publishes the schedul of the sitting (pdf file in arabic). The first page of this document (the schedule) contains the following  data (see picture below) :\r\n\r\n   + Time allocated to parliamentary groups\r\n   + Ministries invited to the sitting\r\n \r\n   ***Illustration***\r\n  \r\n![F2tables](https://user-images.githubusercontent.com/49843367/173394096-8c4a5c67-4f91-47c4-9bc2-72c1f0cca76b.png)\r\n\r\nTo get the schedule use the function : `getSchedule(path)` where `path` is the document path\r\n```python\r\npath= \".../ordre_du_jour_30052022-maj_0.pdf\"\r\nschedual = getSchedule(path)\r\n```\r\nThe output `schedual` is  a dictionary  with the following keys :\r\n   + \"President\": The president of the session\r\n   + \"nbrQuestTotalSession\" : Total nbr of questions\r\n   + \"Ministries\" : \r\n         \r\n                    - \"nomsMinister\" : Name of ministers present in the session\r\n                    - \"numsQuest\" : Total Number of question per minister\r\n                    - \"numQuestU\": Number of urgent (\u0623\u0646\u0649)  question\r\n   + \"Groups\":\r\n      \r\n              + \"nomsGroup\" : Parliament groups\r\n              + \"quesTime\": Time allocated for each group\r\n              + \"addTime\" : Time for additional comments\r\n\r\n\r\n\r\n### II. Scrape sitting's questions :\r\nThe remaining pages of the schedule document contains :\r\n  + Number of questions for each Ministry\r\n  + Questions asked during the sitting, who asked these questions and time allocated to each question\r\n\r\n ***illustration**\r\n \r\n ![questTable](https://user-images.githubusercontent.com/49843367/173398931-82a871a8-4cfb-46c9-90fb-a6699d311428.png)\r\n \r\n To get these question tables  use the function : `getQuesTable(path)` where `path` is the document path\r\n```python\r\npath= \".../ordre_du_jour_30052022-maj_0.pdf\"\r\nquestion = getQuesTable(path)\r\n```\r\nThe output `question` is a dictionary of dictionaries whose keys are the the names of  ministeries present at the setting.Inside of each dictionary there is a dictionary with the following keys :\r\n\r\n   - \"timeQuest\": Time allocated for each question\r\n   - \"parlGroup\": Parliamentary group\r\n   -  \"txtQuest\": The question\r\n   -   - \"typeQuest\": Question type\r\n   -   \"codeQuest\": Question code\r\n   -   \"indexQuest\": Question index (order)\r\n   -   \"subjIden\":questions with the same subjIden means the the questions have the same subject (identical subject)(e.g. \u0648\u062d\u062f\u0629 \u0627\u0644\u0645\u0648\u0636\u0648\u0639)\r\n\r\n  ***Example***\r\n ```python\r\n{\r\n  '\ufe8d\ufedf\ufecc\ufeaa\ufedd': {'timeQuest': ['00:02:00', '00:02:00', '00:01:40', '00:01:35'],\r\n  'parlGroup': ['\ufed3\ufeae\ufef3\ufed6 \u0627\u0644\u0623\ufebc\ufe8e\ufedf\ufe94 \ufeed \ufe8d\ufedf\ufee4\ufecc\ufe8e\ufebb\ufeae\ufe93',\r\n   '\ufed3\ufeae\ufef3\ufed6 \u0627\u0644\u0623\ufebc\ufe8e\ufedf\ufe94 \ufeed \ufe8d\ufedf\ufee4\ufecc\ufe8e\ufebb\ufeae\ufe93',\r\n   '\ufe8d\ufedf\ufed4\ufeae\ufef3\ufed6 \u0627\u0644\u0627\ufeb8\ufe98\ufeae\ufe8d\ufedb\ufef2',\r\n   '\ufe8d\ufedf\ufed4\ufeae\ufef3\ufed6 \u0627\u0644\u0627\ufeb4\ufe98\ufed8\ufe8e\ufedf\ufee0\ufef2 \ufedf\ufee0\ufeee\ufea3\ufeaa\ufe93 \ufeed \ufe8d\ufedf\ufe98\ufecc\ufe8e\ufea9\ufedf\ufef4\ufe94'],\r\n  'txtQuest': ['\ufe97\ufeee\ufed3\ufef4\ufeae \ufe8d\ufedf\ufe98\ufea0\ufeec\ufef4\ufeb0\ufe8d\ufe95 \ufe8d\ufedf\ufec0\ufeae\ufeed\ufead\ufef3\ufe94 \ufe87\ufedf\ufee8\ufea0\ufe8e\ufea1 \ufecb\ufee4\ufee0\ufef4\ufe94 \ufe8d\ufedf\ufee4\ufea4\ufe8e\ufedb\ufee4\ufe94 \ufecb\ufee6 \ufe91\ufecc\ufeaa',\r\n   '\ufe97\ufee8\ufed4\ufef4\ufeac \u0627\u0644\u0623\ufea4\ufedc\ufe8e\ufee1 \ufe8d\ufedf\ufed8\ufec0\ufe8e\ufe8b\ufef4\ufe94 \ufebf\ufeaa \ufeb7\ufeae\ufedb\ufe8e\ufe95 \ufe8d\ufedf\ufe98\ufe84\ufee3\ufef4\ufee6',\r\n   '\ufea7\ufec4\ufeee\ufead\ufe93 \ufee7\ufeb8\ufeae \ufeed\ufe97\ufeee\ufeaf\ufef3\ufeca \ufebb\ufeee\ufead \u0627\u0644\u0623\ufec4\ufed4\ufe8e\ufedd \ufe83\ufeed \ufe8d\ufedf\ufed8\ufe8e\ufebb\ufeae\ufef3\ufee6',\r\n   '\ufe87\ufeb7\ufedc\ufe8e\ufedf\ufef4\ufe94 \ufe8d\ufedf\ufe92\ufec2\ufe80 \ufed3\ufef2 \ufe87\ufebb\ufeaa\ufe8d\ufead \u0627\u0644\u0623\ufea4\ufedc\ufe8e\ufee1 \ufe8d\ufedf\ufed8\ufec0\ufe8e\ufe8b\ufef4\ufe94'],\r\n  'typeQuest': ['\ufecb\ufe8e\ufea9\ufef1', '\ufecb\ufe8e\ufea9\ufef1', '\ufecb\ufe8e\ufea9\ufef1', '\ufecb\ufe8e\ufea9\ufef1'],\r\n  'codeQuest': ['1505 ', '2386 ', '2413 ', '2829 '],\r\n  'indexQuest': ['22', '23', '24', '25'],\r\n  'subjIden': [' ', ' ', ' ', ' ']}\r\n}\r\n ``` \r\n \r\n### III. Setting's transcript\r\nAfter a setting, the Parliament published a pdf file of the setting transcript in arabin containing all debates that took place during the setting.\r\nThe unique content, structure and language of records of parliamentary debates make them an important object of study in a wide range of disciplines in social sciences(political science) [Erjavec, T., Ogrodniczuk, M., Osenova, P. et al. The ParlaMint corpora of parliamentary proceedings] and  computer science (Natural language processing NLP) . \r\n\r\n***Illustration : Transcript***\r\n\r\n ![transcript](https://user-images.githubusercontent.com/49843367/173420355-83d189be-e6b7-4a58-8654-830f8bf1630d.png)\r\n\r\nUnfortunatily we can't use the transcript document as it is provided by the parliament website because the document is written with a special font. In fact, if we try to scrape the original document we get a text full of mistakes (characters not in the right order).So we must change document's font before using it.  See the picture bellow : \r\n  + text in  top is the original document.\r\n  + text in  bottom left is when we scrape the original document \r\n  + text in  bottom right is when we scrape the original document after we  changed its font\r\n\r\n![font](https://user-images.githubusercontent.com/49843367/173423139-e745b517-b1fa-4e15-a8ad-124eb730ec37.png)\r\n\r\nUntil now there is no pythonic way to change the font of the document  (at least we are not aware of its existence,especialy that it's in arabic. All suggestions are most welcome). So we are doing the the old way : using  Microsoft Word.\r\n\r\nTo get the raw transcripts  use the function : `getRawTrscp(path,start=1,end=-1,two_side=True)` where `path` is the document path, `start` is the number of the page from where you want to begin extracting text (The first page is 1 not 0!) , `end` is number of the page where you want to stop extracting text and `two_side`if the pdf has two sides one in the left and the other in the right.\r\n```python\r\npath=\".../42-cdr23052022WF.pdf\"\r\ntranscript=getRawTrscp(path)\r\n```\r\nThe output is a dictionary of dictionaries in the form of : {.,'page_x':{\"page\":page,\"rigth\":right,\"left\":left},.}\r\n\r\nwhere : \r\n  - page_1: page number (e.g.page_x is page number x)\r\n  - page : the text of page_1\r\n  - right : the text of the right side of page_x\r\n  - left : the text of the left side of page_x\r\ngetRawTrscp\r\n\r\nTo store the output of `getRawTrscp`  in a folder use :`texToDir(path_pdf,parent_dir,start=1,end=-1,two_side=True,both_format=True,file_type='json')` where:\r\n    \r\n  - `path_pdf` : pdf path\r\n  - `parent_dir` : directory where to create the folder where to store data\r\n  - `start (default=1)` : Number of the page from where you want to begin extracting text.The first page is 1 not 0!\r\n  - `end (default=-1)` : Number of the page to where you want to stop extracting text\r\n  - `both_format (default=True)` :True if you want to store file in json AND txt format.If it's False, you may sepecify format with `file_type`\r\n  - `file_type (default ='json')` : json or txt. It `both_format= True`, you don't need to use this parameter\r\n\r\nThis function creates a new folder having the same name of the pdf file (purple box, see image below) in the parent directory (red box). Depending on arguments, we can find three type of files in the new created folder : a JSON file containing the complete  text of the transcipt (all of it),  text files each one containes text of a specific page and a text file with the complete text.\r\n\r\n***Example***\r\n```python\r\npath_pdf='C:/Users/pc/Desktop/ParlWatch/42-cdr23052022WF.pdf'\r\nparent_dir='C:/Users/pc/Desktop/ParlWatch/'\r\ntexToDir(path_pdf,parent_dir,start=1,end=4,both_format=True)\r\n```\r\n\r\n\r\n![directory](https://user-images.githubusercontent.com/49843367/173596919-fad89543-5df4-49bb-9cff-26f759f7552c.png)\r\n\r\n\r\n### IV. Deputy data and parliamentary activities\r\nEach deputy has a section at the parliament website where we can find the following data :\r\n  \r\n  + General info about the deputy : Name, Party, Group, District ...\r\n  + Parliamentary tasks: \r\n  + Deputy Agenda: \r\n  + Deputy Questions: Total number of questions and for each question we can find the folliwing details :\r\n  \r\n                           + Question date\r\n                           + Question id\r\n                           + Question title\r\n                           + Question status : if the question received a response or not\r\n                           + Date Answer\r\n                           + Question text \r\n\r\nTo get this data use the function :`getDeputy(url,include_quest=True,quest_link=False,quest_det=False)` where \r\n  + `url` : link to the deputy link \r\n  + `include_quest` (default=True): True to retuen data about deputy questions\r\n  + `quest_link` (default=False) : True to include links of each question\r\n  + `quest_det`(default=False): True to include question details (question text, Date Answer ...)\r\n\r\nThere is two ways to get the `url`of a deputy : `getUrls()` and `getUrlByName(name)`. The first one outputs a dictionary of the complete list of deputies and there urls. The last one outputs the url of the deputy `name`. \r\n\r\n```python\r\nurl_bouanou=getUrlByName(\"Abdellah Bouanou\") ## Get the link of Abdellah Bouanou\r\nurl_bouanou  # 'https://www.chambredesrepresentants.ma/fr/m/abouanou'\r\n```\r\n\r\n\r\n```python\r\nurl=\"https://www.chambredesrepresentants.ma/fr/m/adfouf\"\r\n# We can have three scenarios\r\nfirst=getDeputy(url)\r\nsecond=getDeputy(url,include_quest=True)\r\ntird=getDeputy(url,quest_link=True,quest_det=True)\r\n```\r\nThe output is a dictionary with the structure below :\r\n\r\n          {\"Nom\":name,\"description\":desc, \"task\":task,\"Agenda\":agenda,\"Questions\":Quests}\r\nIn first scenario we get :\r\n```python\r\n{'Nom': {'D\u00e9put\u00e9': ' Abdelmajid El Fassi Fihri'},\r\n 'description': {'Parti': \"Parti de l'istiqlal\",\r\n  'Groupe': \"Groupe Istiqlalien de l'unit\u00e9 et de l'\u00e9galitarisme\",\r\n  'Circonscription': 'Circonscription locale',\r\n  'Circonscription_1': 'F\u00e8s-Chamalia',\r\n  'Legislature': '2021-2026',\r\n  'Membre des sections parlementaires': ' Commission Parlementaire Mixte Maroc-UE                                                                                            '},\r\n 'task': {'Commission': \"Commission de l'enseignement, de la culture et de la communication\"},\r\n 'Agenda': {'Agenda_1': {'heure': '15:00',\r\n   'evenemnt': 'S\u00e9ance pl\u00e9ni\u00e8re mensuelle des questions de politique g\u00e9n\u00e9rale lundi 13 Juin 2022'},\r\n  'Agenda_2': {'heure': '10:00',\r\n   'evenemnt': 'S\u00e9ance pl\u00e9ni\u00e8re mardi 7 Juin 2022 consacr\u00e9e \u00e0 la discussion du rapport de la Cour des Comptes 2019-2020'},\r\n  'Agenda_3': {'heure': '15:00',\r\n   'evenemnt': 'S\u00e9ance pl\u00e9ni\u00e8re hebdomadaire des questions orales lundi 6 Juin 2022'},...}},\r\n 'Questions': {'NbrQuest': ['12'],\r\n  'Dates': ['Date : 20/04/2022',\r\n   'Date : 04/03/2022',..],\r\n  'Questions': ['Question  :  \u062a\u0631\u0645\u064a\u0645 \u0627\u0644\u0645\u0639\u0644\u0645\u0629 \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u062f\u0627\u0631 \u0627\u0644\u0642\u0627\u064a\u062f \u0627\u0644\u0639\u0631\u0628\u064a \u0628\u0645\u062f\u064a\u0646\u0629 \u0627\u0644\u0645\u0646\u0632\u0644\u060c \u0625\u0642\u0644\u064a\u0645 \u0635\u0641\u0631\u0648',\r\n   'Question  :  \u0627\u0644\u0645\u0635\u064a\u0631 \u0627\u0644\u062f\u0631\u0627\u0633\u064a \u0644\u0637\u0644\u0628\u0629 \u0623\u0648\u0643\u0631\u0627\u0646\u064a\u0627'..],\r\n  'Status': ['R', 'NR', ..],\r\n  'Quest_link': [],\r\n  'Quest_txt': []}}\r\n```\r\n\r\nIn the third scenario,'Quest_txt' is different than [] and we get:\r\n```python\r\n'Quest_txt': [{'Nombre Question': ' 3475',\r\n    'Objet ': ' \u062a\u0631\u0645\u064a\u0645 \u0627\u0644\u0645\u0639\u0644\u0645\u0629 \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u062f\u0627\u0631 \u0627\u0644\u0642\u0627\u064a\u062f \u0627\u0644\u0639\u0631\u0628\u064a \u0628\u0645\u062f\u064a\u0646\u0629 \u0627\u0644\u0645\u0646\u0632\u0644\u060c \u0625\u0642\u0644\u064a\u0645 \u0635\u0641\u0631\u0648',\r\n    'Date r\u00e9ponse ': ' Mercredi 8 Juin 2022',\r\n    'Date de la question': 'Mercredi 20 Avril 2022',\r\n    'Question': '\u0635\u062f\u0631 \u0645\u0631\u0633\u0648\u0645 \u0631\u0642\u0645 2.21.416 ( 16 \u064a\u0648\u0646\u064a\u0648 2021) \u0628\u0627\u0644\u062c\u0631\u064a\u062f\u0629 \u0627\u0644\u0631\u0633\u0645\u064a\u0629 \u0639\u062f\u062f 7003 \u0628\u0625\u062f\u0631\u0627\u062c \u0627\u0644\u0645\u0639\u0644\u0645\u0629 \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \"\u062f\u0627\u0631 \u0627\u0644\u0642\u0627\u064a\u062f \u0627\u0644\u0639\u0631\u0628\u064a\" \u0628\u0645\u062f\u064a\u0646\u0629 \u0627\u0644\u0645\u0646\u0632\u0644 \u0628\u0625\u0642\u0644\u064a\u0645 \u0635\u0641\u0631\u0648 \u0641\u064a \u0639\u062f\u0627\u062f \u0627\u0644\u0622\u062b\u0627\u0631\u060c \u062d\u064a\u062b \u0623\u0635\u0628\u062d\u062a \u062e\u0627\u0636\u0639\u0629 \u0644\u0644\u0642\u0627\u0646\u0648\u0646 \u0631\u0642\u0645 22.80 \u0627\u0644\u0645\u062a\u0639\u0644\u0642 \u0628\u0627\u0644\u0645\u062d\u0627\u0641\u0638\u0629 \u0639\u0644\u0649 \u0627\u0644\u0645\u0628\u0627\u0646\u064a \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u0648\u0627\u0644\u0645\u0646\u0627\u0638\u0631 \u0648\u0627\u0644\u0643\u062a\u0627\u0628\u0627\u062a \u0627\u0644\u0645\u0646\u0642\u0648\u0634\u0629 \u0648\u0627\u0644\u062a\u062d\u0641  \u0627\u0644\u0641\u0646\u064a\u0629 \u0648\u0627\u0644\u0639\u0627\u062f\u064a\u0627\u062a\u060c \u0648\u0623\u0643\u062f \u0635\u0627\u062d\u0628 \u0627\u0644\u062c\u0644\u0627\u0644\u0629 \u0627\u0644\u0645\u0644\u0643 \u0645\u062d\u0645\u062f \u0627\u0644\u0633\u0627\u062f\u0633 \u0641\u064a \u0627\u0644\u0631\u0633\u0627\u0644\u0629 \u0627\u0644\u0633\u0627\u0645\u064a\u0629 \u0627\u0644\u062a\u064a \u0648\u062c\u0647\u0647\u0627 \u0625\u0644\u0649 \u0627\u0644\u0645\u0634\u0627\u0631\u0643\u064a\u0646 \u0641\u064a \u0627\u0644\u062f\u0648\u0631\u0629 23 \u0644\u0644\u062c\u0646\u0629 \u0627\u0644\u062a\u0631\u0627\u062b \u0627\u0644\u0639\u0627\u0644\u0645\u064a \u0641\u064a 27 \u0645\u0627\u0631\u0633\u060c 2013 \u060c \"\u0623\u0646 \u0627\u0644\u0645\u062d\u0627\u0641\u0638\u0629 \u0639\u0644\u0649 \u0627\u0644\u062a\u0631\u0627\u062b \u0627\u0644\u0645\u062d\u0644\u064a \u0648\u0627\u0644\u0648\u0637\u0646\u064a \u0648\u0635\u064a\u0627\u0646\u062a\u0647 \u0625\u0646\u0645\u0627 \u0647\u0645\u0627 \u0645\u062d\u0627\u0641\u0638\u0629 \u0639\u0644\u0649 \u0625\u0631\u062b \u0625\u0646\u0633\u0627\u0646\u064a \u064a\u0644\u062a\u0642\u064a \u0639\u0646\u062f\u0647 \u0628\u0627\u0639\u062a\u0631\u0627\u0641 \u0645\u062a\u0628\u0627\u062f\u0644 \u062c\u0645\u064a\u0639 \u0623\u0628\u0646\u0627\u0621 \u0627\u0644\u0628\u0634\u0631\u064a\u0629\".\u0648\u0642\u062f \u0637\u0627\u0644\u0628\u062a \u062c\u0645\u0639\u064a\u0629 \u0627\u0644\u062a\u0636\u0627\u0645\u0646 \u0644\u0644\u062a\u0646\u0645\u064a\u0629 \u0648\u0627\u0644\u0634\u0631\u0627\u0643\u0629 \u0628\u0645\u062f\u064a\u0646\u0629 \u0627\u0644\u0645\u0646\u0632\u0644 \u0628\u0625\u0642\u0644\u064a\u0645 \u0635\u0641\u0631\u0648\u060c \u062f\u0648\u0646 \u0627\u0644\u062d\u0635\u0648\u0644 \u0639\u0644\u0649 \u0631\u062f\u060c \u0628\u062a\u062e\u0635\u064a\u0635 \u0645\u064a\u0632\u0627\u0646\u064a\u0629 \u0644\u062a\u0631\u0645\u064a\u0645 \u0647\u0630\u0647 \u0627\u0644\u062f\u0627\u0631 \u0627\u0644\u062a\u0627\u0631\u064a\u062e\u064a\u0629 \u0648\u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0625\u0644\u0649 \u0645\u0624\u0633\u0633\u0629 \u062b\u0642\u0627\u0641\u064a\u0629 \u0644\u062e\u062f\u0645\u0629 \u0633\u0627\u0643\u0646\u0629 \u0627\u0644\u0645\u0646\u0637\u0642\u0629 \u0648\u0634\u0628\u0627\u0628\u0647\u0627 \u0628\u062e\u0644\u0642 \u062f\u064a\u0646\u0627\u0645\u064a\u0629 \u062b\u0642\u0627\u0641\u064a\u0629 \u0644\u062a\u0643\u0648\u0646 \u0645\u0646\u0627\u0631\u0629 \u0644\u0644\u0623\u062c\u064a\u0627\u0644 \u0627\u0644\u0642\u0627\u062f\u0645\u0629.\u0648\u0639\u0644\u064a\u0647\u060c \u0646\u0633\u0627\u0626\u0644\u0643\u0645 \u0627\u0644\u0633\u064a\u062f \u0627\u0644\u0648\u0632\u064a\u0631 \u0627\u0644\u0645\u062d\u062a\u0631\u0645\u060c \u0645\u0627\u0647\u064a \u0627\u0644\u0627\u062c\u0631\u0627\u0621\u0627\u062a \u0627\u0644\u062a\u064a \u0633\u062a\u062a\u062e\u0630\u0647\u0627 \u0648\u0632\u0627\u0631\u062a\u0643\u0645 \u0642\u0635\u062f \u062a\u0631\u0645\u064a\u0645 \u0648\u062a\u0623\u0647\u064a\u0644 \u0645\u0639\u0644\u0645\u0629 \u062f\u0627\u0631 \u0627\u0644\u0642\u0627\u064a\u062f \u0627\u0644\u0639\u0631\u0628\u064a \u0628\u0645\u062f\u064a\u0646\u0629 \u0627\u0644\u0645\u0646\u0632\u0644 \u0628\u0625\u0642\u0644\u064a\u0645 \u0635\u0641\u0631\u0648 \u0648\u062a\u062d\u0648\u064a\u0644\u0647\u0627 \u0625\u0644\u0649 \u0645\u0624\u0633\u0633\u0629 \u062b\u0642\u0627\u0641\u064a\u0629 \u0641\u064a \u0625\u0637\u0627\u0631 \u0639\u062f\u0627\u0644\u0629 \u0645\u062c\u0627\u0644\u064a\u0629.'},...]\r\n```\r\n\r\n## Question ? \r\nContact me on Twitter [@AmineAndam](https://twitter.com/AmineAndam)  or on Linkedin [ANDAM AMINE](https://www.linkedin.com/in/amineandam/).\r\n\r\n\r\n\r\n                       \r\n\r\n    \r\n                    \r\n\r\n\r\n\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nowabindata/barlaman",
            "keywords": "politics,parliament,webscraping,parliamentary-data,morocco",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "barlaman",
            "package_url": "https://pypi.org/project/barlaman/",
            "platform": null,
            "project_url": "https://pypi.org/project/barlaman/",
            "project_urls": {
                "Homepage": "https://github.com/nowabindata/barlaman"
            },
            "release_url": "https://pypi.org/project/barlaman/0.1.3/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Scrape data of Moroccan House of Representatives.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15813186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "95243a31ececd7b686685f82904c4abb",
                    "sha256": "4d2a7973e1e06a46a164c078c49bb7a4b963c463028f91609825cb204270521a"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "95243a31ececd7b686685f82904c4abb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 17034,
                "upload_time": "2022-11-18T10:01:00",
                "upload_time_iso_8601": "2022-11-18T10:01:00.798023Z",
                "url": "https://files.pythonhosted.org/packages/7a/bd/6bfc9c0771411a0d066578a5c82da95d0ae6c097600920f6666a2f075dcf/barlaman-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2660c85c39e3b521075c0001e7623d4d",
                    "sha256": "3df35ba5a7f62ee7ac24ce59931237ada66f0fb36969a6055c1e218cdbe839a1"
                },
                "downloads": -1,
                "filename": "barlaman-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "2660c85c39e3b521075c0001e7623d4d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 20271,
                "upload_time": "2022-11-18T10:01:03",
                "upload_time_iso_8601": "2022-11-18T10:01:03.032398Z",
                "url": "https://files.pythonhosted.org/packages/fe/be/097ce6bff394a58931d2a7c913f7661801a84f6028eac598ee3e20ac4981/barlaman-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}