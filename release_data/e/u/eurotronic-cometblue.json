{
    "1.0.0": {
        "info": {
            "author": "Johanens Rottler",
            "author_email": "johannes@rottler.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zero-udo/eurotronic-cometblue",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eurotronic-cometblue",
            "package_url": "https://pypi.org/project/eurotronic-cometblue/",
            "platform": "",
            "project_url": "https://pypi.org/project/eurotronic-cometblue/",
            "project_urls": {
                "Homepage": "https://github.com/zero-udo/eurotronic-cometblue"
            },
            "release_url": "https://pypi.org/project/eurotronic-cometblue/1.0.0/",
            "requires_dist": [
                "pygatt[gattool] (==4.0.5)"
            ],
            "requires_python": ">=3.5",
            "summary": "Allows you to access Eurotronics GmbH BLE Comet Blue Radiator Controller",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15746277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bbb6b4003af7a3b81be71cd0c4073227",
                    "sha256": "c8afcc7f34f2d9aebb0c0ea70b68536194ae6aee9549982443c67fce96961ff5"
                },
                "downloads": -1,
                "filename": "eurotronic_cometblue-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "bbb6b4003af7a3b81be71cd0c4073227",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 9453,
                "upload_time": "2020-09-08T13:02:33",
                "upload_time_iso_8601": "2020-09-08T13:02:33.904838Z",
                "url": "https://files.pythonhosted.org/packages/72/ae/3a60e7b4d082fdbd26a5b51c46ebda80bfd2329a837c72342ff7c426ab94/eurotronic_cometblue-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "741ab6786e04256d58d65ad08ed37b00",
                    "sha256": "30fe3f1d625809fb6b126e43e4eaafedcb47972552d3bb6ce23c8a6bc0398036"
                },
                "downloads": -1,
                "filename": "eurotronic-cometblue-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "741ab6786e04256d58d65ad08ed37b00",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 8661,
                "upload_time": "2020-09-08T13:02:35",
                "upload_time_iso_8601": "2020-09-08T13:02:35.148141Z",
                "url": "https://files.pythonhosted.org/packages/e6/f5/d0fe5266ad243344d4ad98d76915d11947eef7d36a0fa69ad553404fc1b9/eurotronic-cometblue-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Johanens Rottler",
            "author_email": "johannes@rottler.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zero-udo/eurotronic-cometblue",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eurotronic-cometblue",
            "package_url": "https://pypi.org/project/eurotronic-cometblue/",
            "platform": "",
            "project_url": "https://pypi.org/project/eurotronic-cometblue/",
            "project_urls": {
                "Homepage": "https://github.com/zero-udo/eurotronic-cometblue"
            },
            "release_url": "https://pypi.org/project/eurotronic-cometblue/1.0.1/",
            "requires_dist": [
                "pygatt[gatttool] (==4.0.5)"
            ],
            "requires_python": ">=3.6",
            "summary": "Allows you to access Eurotronics GmbH BLE Comet Blue Radiator Controller",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15746277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "309a27d5f73fa341b623e82a8ba298f4",
                    "sha256": "09a9526801f1270d40237a1c9761ccd5d1eab95b4dd983653dc8b84a478704bf"
                },
                "downloads": -1,
                "filename": "eurotronic_cometblue-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "309a27d5f73fa341b623e82a8ba298f4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9453,
                "upload_time": "2020-09-30T13:13:07",
                "upload_time_iso_8601": "2020-09-30T13:13:07.763670Z",
                "url": "https://files.pythonhosted.org/packages/c4/ee/e4df1248aade0957177ade2052f0f8efaa6b1eef36de0ee8ab622c286a4b/eurotronic_cometblue-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a834b5fb4341052b9b25b2a745250484",
                    "sha256": "3549fbb30367aaeb000c2d3a4539182533de78605c024f9671311d1629f37b47"
                },
                "downloads": -1,
                "filename": "eurotronic-cometblue-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a834b5fb4341052b9b25b2a745250484",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8359,
                "upload_time": "2020-09-30T13:13:10",
                "upload_time_iso_8601": "2020-09-30T13:13:10.153180Z",
                "url": "https://files.pythonhosted.org/packages/68/e4/7753ce89d2f67cb16efa94751ba53dc3156e3ab539b050ac59e55c495707/eurotronic-cometblue-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "Johanens Rottler",
            "author_email": "johannes@rottler.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zero-udo/eurotronic-cometblue",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eurotronic-cometblue",
            "package_url": "https://pypi.org/project/eurotronic-cometblue/",
            "platform": "",
            "project_url": "https://pypi.org/project/eurotronic-cometblue/",
            "project_urls": {
                "Homepage": "https://github.com/zero-udo/eurotronic-cometblue"
            },
            "release_url": "https://pypi.org/project/eurotronic-cometblue/1.0.2/",
            "requires_dist": [
                "pygatt[gatttool] (==4.0.5)"
            ],
            "requires_python": ">=3.6",
            "summary": "Allows you to access Eurotronic GmbH BLE Comet Blue Radiator Controller",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15746277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ad544e2d626b7109d815a99966717372",
                    "sha256": "9ecf3ffb33a22b94c062c68432150e24b5bc8665dd0ea26e0ebd358b392b124f"
                },
                "downloads": -1,
                "filename": "eurotronic_cometblue-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ad544e2d626b7109d815a99966717372",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9585,
                "upload_time": "2022-01-12T22:27:15",
                "upload_time_iso_8601": "2022-01-12T22:27:15.075165Z",
                "url": "https://files.pythonhosted.org/packages/4b/78/6a808829fba30af50c192d6138a3419777800cb607ada93eb0045cb10ffd/eurotronic_cometblue-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3e4f19385d308235396fd2734d5dd524",
                    "sha256": "08e13dc7797295ad603b064c8a52be99d83cc6add4bd9551af487b125e7fd4fa"
                },
                "downloads": -1,
                "filename": "eurotronic-cometblue-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "3e4f19385d308235396fd2734d5dd524",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 9213,
                "upload_time": "2022-01-12T22:27:18",
                "upload_time_iso_8601": "2022-01-12T22:27:18.384540Z",
                "url": "https://files.pythonhosted.org/packages/4b/85/c8d0584a7ccdab5545f5a55b3b32067d92507c75e6c6b08ffa337eae67a2/eurotronic-cometblue-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.3": {
        "info": {
            "author": "Johanens Rottler",
            "author_email": "johannes@rottler.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zero-udo/eurotronic-cometblue",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eurotronic-cometblue",
            "package_url": "https://pypi.org/project/eurotronic-cometblue/",
            "platform": "",
            "project_url": "https://pypi.org/project/eurotronic-cometblue/",
            "project_urls": {
                "Homepage": "https://github.com/zero-udo/eurotronic-cometblue"
            },
            "release_url": "https://pypi.org/project/eurotronic-cometblue/1.0.3/",
            "requires_dist": [
                "pygatt[gatttool] (==4.0.5)"
            ],
            "requires_python": ">=3.6",
            "summary": "Allows you to access Eurotronic GmbH BLE Comet Blue Radiator Controller",
            "version": "1.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15746277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eaf23b58694663f5d6f6ca7ee4c8a75f",
                    "sha256": "9fac7e33cebefe23d09c3ba9226b4f7b93bcb6097d8a15447076fe9b614fecec"
                },
                "downloads": -1,
                "filename": "eurotronic_cometblue-1.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eaf23b58694663f5d6f6ca7ee4c8a75f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9581,
                "upload_time": "2022-01-13T16:06:23",
                "upload_time_iso_8601": "2022-01-13T16:06:23.916576Z",
                "url": "https://files.pythonhosted.org/packages/73/62/393db76bbe5a21649c890e929fd324309d99b586d024f0151610b0385f60/eurotronic_cometblue-1.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "94782782452eeb2634d59130a02ffd32",
                    "sha256": "de050b14bcc80470dbad51d9f98b57e84610b8b722e424fa9dfa164b39e64fde"
                },
                "downloads": -1,
                "filename": "eurotronic-cometblue-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "94782782452eeb2634d59130a02ffd32",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 11414,
                "upload_time": "2022-01-13T16:06:25",
                "upload_time_iso_8601": "2022-01-13T16:06:25.617952Z",
                "url": "https://files.pythonhosted.org/packages/16/11/c7b65c64bdb1d7a369514256407bbb01d45b8c9b84ca37b7291d42616d1d/eurotronic-cometblue-1.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "Johanens Rottler",
            "author_email": "johannes@rottler.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: MIT License",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "# CometBlue\n\neurotronic-cometblue is a library to communicate with your Eurotronic GmbH Comet Blue radiator controllers.\n\nThe device supports up to four programmable schedules for each weekday. Longer periods can be set as holidays. There are 8 holiday slots available.\n\nThis library depends on [bleak](https://github.com/hbldh/bleak) and runs therefore on Linux, Windows and macOS (thanks to [rikroe](https://github.com/rikroe)).\n\n## Compatible devices\n\nComet Blue radiator controllers are sold under different names:\n\n| \"Manufacturer\" | Model      |       Tested       |\n|----------------|------------|:------------------:|\n| Eurotronic     | Comet Blue | :heavy_check_mark: |\n| Sygonix        | HT100 BT   | :heavy_check_mark: |\n| Xavax          | Hama       |  :grey_question:   |\n| Silvercrest    | RT2000BT   |  :grey_question:   |\n\nThis library should work with all listed radiator controllers, but is only tested with a Sygonix HT100BT which is the only one I own.\n\nThanks to [@FloSchmidt](https://github.com/FloSchmidt) for [checking](https://github.com/zero-udo/eurotronic-cometblue/issues/5) the Eurotronic Comet Blue \n\nIf your device is not listed here but looks similar (or you know it is a rebranded Comet Blue), or if you are able to test this library with another device - let me know your results.\n## Installation\n\nJust \n```\npip install eurotronic-cometblue\n```\n\n## Usage\n\nImport the library and instantiate an object.\n\nParameters are the device MAC-Address and the (optional) PIN. Depending on your connection quality you can specify a longer or shorter discovery duration.\n\n| Parameter | required? | default value |\n|-----------|:---------:|---------------|\n| mac       |    yes    | None          |\n| pin       |    no     | 0             |\n| timeout   |    no     | 2             |\n\n\n\n```python\nfrom cometblue import CometBlue\n\nblue = CometBlue(mac=\"00:00:00:00:00:00\",pin=123456, timeout=2)\n```\nor \n```python\nfrom cometblue import AsyncCometBlue\n\nblue = AsyncCometBlue(mac=\"00:00:00:00:00:00\",pin=123456, timeout=2)\n```\nfor an asynchronous client.\n\nThe following (synchronous) methods are available, for the asynchronous variants add `_async`:\n\n| Method            | Parameter                                                                                                                                                                                                                                                                                                     | Return Value                                                                                                                                                                            |\n|-------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `get_temperature` | None                                                                                                                                                                                                                                                                                                          | `dict` with <ul><li>'currentTemp'</li><li>'manualTemp'</li><li>'targetTempLow'</li><li>'targetTempHigh'</li><li>'tempOffset'</li><li>'windowOpen'</li><li>'windowOpenMinutes'</li></ul> |\n| `set_temperature` | `dict` with the same values as `get_temperature`. Not all values have to be set.                                                                                                                                                                                                                              | None                                                                                                                                                                                    |\n| `get_battery`     | None                                                                                                                                                                                                                                                                                                          | `int` - Battery value in percent                                                                                                                                                        |\n| `get_datetime`    | None                                                                                                                                                                                                                                                                                                          | `datetime` - currently set date and time of the device. Used for schedules                                                                                                              |\n| `set_datetime`    | An optional `datetime`-object. The current date and time is used if the parameter is omitted.                                                                                                                                                                                                                 | None                                                                                                                                                                                    |\n| `get_weekday`     | A `Weekday`-Enum value eg. `Weekday.MONDAY`                                                                                                                                                                                                                                                                   | `dict` with `start#` and `end#` (# = 1-4) keys and the time as HH:mm formatted `str`s as values                                                                                         |\n| `set_weekday`     | A `Weekday`-Enum value eg. `Weekday.MONDAY` and a `dict` containing `start#` and `end#` (# = 1-4) as keys and HH:mm formatted `str`s as values                                                                                                                                                                | None                                                                                                                                                                                    |\n| `get_holiday`     | `int` 1-8 to select the holiday period                                                                                                                                                                                                                                                                        | `dict` with <ul><li>'start': `datetime`</li><li>'end': `datetime`</li><li>'temperature': `float`</li></ul>                                                                              |\n| `set_holiday`     | `dict` with the same values as `get_holiday`s return value.                                                                                                                                                                                                                                                   | None                                                                                                                                                                                    |\n| `get_manual_mode` | None                                                                                                                                                                                                                                                                                                          | `True` if manual mode is set. <br>`False` if the schedule is used                                                                                                                       |\n| `set_manual_mode` | `boolean` - `True` if manual mode should be used. `False` if the schedule should be used                                                                                                                                                                                                                      | None                                                                                                                                                                                    |\n| `get_multiple`    | Retrieves multiple values specified in a `list`. Valid values are: <ul><li>'temperature'</li><li>'battery'</li><li>'datetime'</li><li>'holiday#' # = 1-8 or</li><li>'holidays' (retrieves holiday1-8)</li><li>'monday'</li><li>'tuesday'</li><li>etc...</li><li>'weekdays' (retrieves all weekdays)</li></ul> | The values as a `dict` in the format defined by the appropriate methods                                                                                                                 |\n| `discover`        | timeout: `int`, timeout used for discovery                                                                                                                                                                                                                                                                    | MAC-addresses of all discovery Comet Blue devices                                                                                                                                       |\n\n:warning: the device applies set values when the connection is closed, not directly after setting them\n\n## Examples\n\nUse `CometBlueAsync` and `[method_name]_async` for asynchronous handling.\n\n### Instantiating and retrieving the current temperature\n\n```python\nfrom cometblue import CometBlue\n\nblue = CometBlue(\"00:00:00:00:00:00\", 123456)\nblue.connect()\ntemp = blue.get_temperature()\nprint(temp) \nblue.disconnect()\n```\n\nor\n\n```python\nfrom cometblue import CometBlue\n\nwith CometBlue(\"00:00:00:00:00:00\", 123456) as blue:\n    temp = blue.get_temperature()\n    print(temp)\n```\n\nresults in \n\n```python\n{\n    'currentTemp': 24.5, \n    'manualTemp': 16.0, \n    'targetTempLow': 16.0, \n    'targetTempHigh': 20.0, \n    'tempOffset': 0.0, \n    'windowOpen': True, \n    'windowOpenMinutes': 10\n}\n```\n\n### Setting a new schedule\n\nSetting a new schedule for Mondays with two heating periods:\n\n- Period 1 from 06:00 to 08:00\n\n- Period 2 from 16:00 to 22:00\n\nTo use this schedule, make sure to disable manual mode.\n\n```python\nblue.set_weekday(Weekday.MONDAY, \n        {\"start1\": \"06:00\", \"end1\": \"08:00\", \n         \"start2\": \"16:00\", \"end2\": \"22:00\" })\nblue.set_manual_mode(False)\n```\n\n### Setting a holiday\n\nSetting a holiday (slot 2) from 26th December 2020 18:00 till 5th January 2021 14:00 and keep the temperature at 16.5 \u00c2\u00b0C\n\n```python\nblue.set_holiday(2, {\"start\": datetime(2020, 12, 26, 18), \n                     \"end\": datetime(2021, 1, 5, 14),\n                     \"temperature\": 16.5 })\n```\n\n## Credits:\n\n* Thorsten Tr\u00c3\u00a4nker for his reverse engineering work done [here](https://www.torsten-traenkner.de/wissen/smarthome/heizung.php)\n* [rikroe](https://github.com/rikroe) for the switch to bleak\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zero-udo/eurotronic-cometblue",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eurotronic-cometblue",
            "package_url": "https://pypi.org/project/eurotronic-cometblue/",
            "platform": null,
            "project_url": "https://pypi.org/project/eurotronic-cometblue/",
            "project_urls": {
                "Homepage": "https://github.com/zero-udo/eurotronic-cometblue"
            },
            "release_url": "https://pypi.org/project/eurotronic-cometblue/1.1.0/",
            "requires_dist": [
                "bleak"
            ],
            "requires_python": ">=3.6",
            "summary": "Allows you to access Eurotronic GmbH BLE Comet Blue Radiator Controller",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15746277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9dcc847f1623f5a57f24819bcc56dab9",
                    "sha256": "4e7a2b6f2f1be964004733d790c6770021573284dd7888b82c2a17456f9f9b1e"
                },
                "downloads": -1,
                "filename": "eurotronic_cometblue-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9dcc847f1623f5a57f24819bcc56dab9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 10552,
                "upload_time": "2022-11-12T17:54:32",
                "upload_time_iso_8601": "2022-11-12T17:54:32.461249Z",
                "url": "https://files.pythonhosted.org/packages/50/91/b1b22c9f4ecdf35f002c4edc47b5623184e36851061c931de974137fc7e3/eurotronic_cometblue-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "08cb960197bfcfb7d65931903e160b8a",
                    "sha256": "ccd04d4be30616be589c7dc698fcb60334ec142ab75311c610877c9a98b8d955"
                },
                "downloads": -1,
                "filename": "eurotronic-cometblue-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "08cb960197bfcfb7d65931903e160b8a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 10138,
                "upload_time": "2022-11-12T17:54:34",
                "upload_time_iso_8601": "2022-11-12T17:54:34.409636Z",
                "url": "https://files.pythonhosted.org/packages/c6/da/1632ff8717b13b096fd069ce9813b128fad6e9694cdbce43d800fec0e6cc/eurotronic-cometblue-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}