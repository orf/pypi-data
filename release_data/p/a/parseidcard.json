{
    "1.0.0": {
        "info": {
            "author": "\u6f58\u9ad8",
            "author_email": "pangao1990@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/pangao1990/parseIdCard",
            "keywords": "idard parse",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parseIdCard",
            "package_url": "https://pypi.org/project/parseIdCard/",
            "platform": "",
            "project_url": "https://pypi.org/project/parseIdCard/",
            "project_urls": {
                "Blog": "https://blog.pangao.vip/%E5%8F%AF%E8%83%BD%E6%98%AFPython%E4%B8%AD%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%A7%A3%E6%9E%90%E5%B7%A5%E5%85%B7%E2%80%94parseIdCard/",
                "Homepage": "https://github.com/pangao1990/parseIdCard"
            },
            "release_url": "https://pypi.org/project/parseIdCard/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3",
            "summary": "\u4e00\u6b3e\u89e3\u6790\u8eab\u4efd\u8bc1\u7684\u5de5\u5177",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12252417,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4c05df277c42f77a3774a14cbdad3cd1",
                    "sha256": "507b1855c9e683d72ab5a3e1ed1c243408ebaf7fd2a96d8eab7b71abb68c1f75"
                },
                "downloads": -1,
                "filename": "parseIdCard-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4c05df277c42f77a3774a14cbdad3cd1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 519220,
                "upload_time": "2021-08-19T16:07:10",
                "upload_time_iso_8601": "2021-08-19T16:07:10.169453Z",
                "url": "https://files.pythonhosted.org/packages/b7/d8/2e5b265d1f1a243533fa6b1ac459d23dbe79f42eebcf9a0d2ae0d184cf67/parseIdCard-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5724ba857e13822df377e6cf31cd44d0",
                    "sha256": "c75e740e41758eca380e57b8deb077b14dc340de4832dd1f9131d29bc3b9b4da"
                },
                "downloads": -1,
                "filename": "parseIdCard-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5724ba857e13822df377e6cf31cd44d0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 523192,
                "upload_time": "2021-08-19T16:07:12",
                "upload_time_iso_8601": "2021-08-19T16:07:12.778785Z",
                "url": "https://files.pythonhosted.org/packages/d9/af/28f6049c79db17c4f1e00d4a537263bb363ba2ea18067324bb80d793df51/parseIdCard-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "\u6f58\u9ad8",
            "author_email": "pangao1990@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u8bbf\u95ee\u6211\u7684 [\u4e2a\u4eba\u535a\u5ba2](https://blog.pangao.vip/\u53ef\u80fd\u662fPython\u4e2d\u6700\u597d\u7528\u7684\u8eab\u4efd\u8bc1\u89e3\u6790\u5de5\u5177\u2014parseIdCard/)\u3002\n\n---\n\n### \u524d\u8a00\n\n> 2021.08.03\uff0c\u6b66\u6c49\u65b0\u51a0\u75ab\u60c5\u4f3c\u6709\u590d\u82cf\u7684\u8ff9\u8c61\uff0c\u4e8e\u662f\u6b66\u6c49\u653f\u5e9c\u7acb\u5373\u91c7\u53d6\u679c\u65ad\u63aa\u65bd\uff0c\u542f\u52a8\u5168\u57ce\u6838\u9178\u68c0\u6d4b\u3002\u5f88\u8363\u5e78\uff0c\u6211\u4eec\u516c\u53f8\u4e5f\u79ef\u6781\u53c2\u4e0e\u6838\u9178\u68c0\u6d4b\u5de5\u4f5c\u3002\u6211\u5728\u5176\u4e2d\u53c2\u4e0e\u4e86\u6838\u9178\u5b9e\u9a8c\u548c\u6570\u636e\u6821\u5bf9\u7684\u5de5\u4f5c\u3002\u5728\u6570\u636e\u6821\u5bf9\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u8981\u77db\u76fe\u4f53\u73b0\u5728\u8eab\u4efd\u8bc1\u4e0d\u5339\u914d\u7684\u95ee\u9898\u4e0a\u3002\u4e8e\u662f\uff0c\u6211\u5199\u4e86\u8fd9\u4e2a\u53ef\u80fd\u662f Python \u4e2d\u6700\u597d\u7528\u7684\u8eab\u4efd\u8bc1\u89e3\u6790\u5de5\u5177--parseIdCard\u3002\n\n### \u8eab\u4efd\u8bc1\u683c\u5f0f\u8bf4\u660e\n\n\u6839\u636e\u3016\u4e2d\u534e\u4eba\u6c11\u5171\u548c\u56fd\u56fd\u5bb6\u6807\u51c6 GB11643-1999\u3017\u4e2d\u6709\u5173\u516c\u6c11\u8eab\u4efd\u53f7\u7801\u7684\u89c4\u5b9a\uff0c\u516c\u6c11\u8eab\u4efd\u53f7\u7801\u662f\u7279\u5f81\u7ec4\u5408\u7801\uff0c\u7531\u5341\u4e03\u4f4d\u6570\u5b57\u672c\u4f53\u7801\u548c\u4e00\u4f4d\u6570\u5b57\u6821\u9a8c\u7801\u7ec4\u6210\u3002\u6392\u5217\u987a\u5e8f\u4ece\u5de6\u81f3\u53f3\u4f9d\u6b21\u4e3a\uff1a\u516d\u4f4d\u6570\u5b57\u5730\u5740\u7801\uff0c\u516b\u4f4d\u6570\u5b57\u51fa\u751f\u65e5\u671f\u7801\uff0c\u4e09\u4f4d\u6570\u5b57\u987a\u5e8f\u7801\u548c\u4e00\u4f4d\u6570\u5b57\u6821\u9a8c\u7801\u3002\u5982\u4e0b\u6240\u793a\uff1a\n\n42 01 16 20200103 12 3 X\n\n- 42 => \u6e56\u5317\uff08\u7701\uff09\n- 01 => \u6b66\u6c49\uff08\u5e02\uff09\n- 16 => \u9ec4\u9642\uff08\u533a\uff09\n- 20200103 => 2020 \u5e74 01 \u6708 03 \u65e5\uff08\u51fa\u751f\u65e5\u671f\uff09\n- 12 => \u6d3e\u51fa\u6240\u4ee3\u7801\n- 3 => \u6027\u522b\u7801\n- X => \u6821\u9a8c\u7801\n\n### \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\n\n#### \u5730\u533a\u7801\u6821\u9a8c\n\n\u5730\u533a\u7801\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5730\u533a\u4e0e\u7f16\u7801\u7684\u4e00\u4e00\u5bf9\u5e94\u5173\u7cfb\uff0c\u6574\u7406\u5982\u4e0b\u6570\u636e\u5e93\u5c31\u884c\u3002\n\n```\n420101\t\u6e56\u5317\u6b66\u6c49\u5e02\u5e02\u8f96\u533a\n420102\t\u6e56\u5317\u6b66\u6c49\u5e02\u6c5f\u5cb8\u533a\n420103\t\u6e56\u5317\u6b66\u6c49\u5e02\u6c5f\u6c49\u533a\n420104\t\u6e56\u5317\u6b66\u6c49\u5e02\u4e54\u53e3\u533a\n420105\t\u6e56\u5317\u6b66\u6c49\u5e02\u6c49\u9633\u533a\n420106\t\u6e56\u5317\u6b66\u6c49\u5e02\u6b66\u660c\u533a\n420107\t\u6e56\u5317\u6b66\u6c49\u5e02\u9752\u5c71\u533a\n420111\t\u6e56\u5317\u6b66\u6c49\u5e02\u6d2a\u5c71\u533a\n420112\t\u6e56\u5317\u6b66\u6c49\u5e02\u4e1c\u897f\u6e56\u533a\n420113\t\u6e56\u5317\u6b66\u6c49\u5e02\u6c49\u5357\u533a\n420114\t\u6e56\u5317\u6b66\u6c49\u5e02\u8521\u7538\u533a\n420115\t\u6e56\u5317\u6b66\u6c49\u5e02\u6c5f\u590f\u533a\n420116\t\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a\n420117\t\u6e56\u5317\u6b66\u6c49\u5e02\u65b0\u6d32\u533a\n......\n```\n\n\u518d\u5c06\u5730\u533a\u7801\u4e0e\u6570\u636e\u5e93\u6bd4\u5bf9\uff0c\u7528 Python \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```\ndef __checkArea(areaId):\n    '''\u6821\u9a8c\u5730\u533a\u3002\u8f93\u51656\u4f4d\u5730\u533a\u7f16\u7801\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a{code, id, area}'''\n    if len(areaId) != 6:\n        return {'code': 'Error', 'id': areaId, 'area': '\u5730\u533a\u7f16\u7801\u5e94\u8be5\u4e3a6\u4f4d'}\n    else:\n        if areaId.isdigit():\n            dbAreaPath = os.path.join(os.path.dirname(__file__), 'area')\n            conn = sqlite3.connect(dbAreaPath)\n            cur = conn.cursor()\n            cur.execute(\"SELECT DISTINCT area FROM area WHERE id = '\" + areaId + \"'\")\n            returnArea = ''\n            for c in cur:\n                returnArea = c[0]\n            conn.close()\n            if returnArea == '':\n                return {'code': 'Error', 'id': areaId, 'area': '\u672a\u77e5\u5730\u533a\u7f16\u7801'}\n            else:\n                return {'code': 'OK', 'id': areaId, 'area': returnArea}\n        return {'code': 'Error', 'id': areaId, 'area': '\u975e\u6cd5\u5730\u533a\u7f16\u7801'}\n```\n\n#### \u51fa\u751f\u65e5\u671f\u6821\u9a8c\n\n\u4f17\u6240\u5468\u77e5\uff0c\u65e5\u671f\u662f\u6709\u4e00\u5b9a\u7684\u89c4\u5f8b\u7684\u3002\u6bd4\u5982\uff1a\u5e74\u4efd\u662f\u56db\u4f4d\u6570\u5b57\uff0c\u6708\u4efd\u548c\u65e5\u662f\u4e24\u4f4d\u6570\u5b57\uff0c\u6708\u4efd\u6700\u591a\u53ea\u6709 12 \u6708\uff0c\u65e5\u6700\u591a\u53ea\u6709 31\uff0c\u4e0d\u8fc7\u6709\u7684\u6708\u4efd\u662f 28\u300129\u300130\u3002\u628a\u8fd9\u4e9b\u5e38\u89c1\u7684\u89c4\u5219\uff0c\u7528 Python \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```\ndef __checkBirthdate(ymd):\n    '''\u6821\u9a8c\u51fa\u751f\u65e5\u671f\u3002\u8f93\u51658\u4f4d\u51fa\u751f\u65e5\u671f\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a{code, id, age}'''\n    if len(ymd) != 8:\n        return {'code': 'Error', 'id': ymd, 'age': '\u51fa\u751f\u65e5\u671f\u5e94\u8be5\u4e3a8\u4f4d'}\n    else:\n        if ymd.isdigit():\n            yearInt = int(ymd[:4])\n            currentYearInt = datetime.now().year\n            age = currentYearInt - yearInt\n            if age >= 0:\n                # \u95f0\u5e74\u6708\u65e5:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))\n                # \u5e73\u5e74\u6708\u65e5:((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))\n                if (yearInt % 4 == 0 or yearInt % 100 == 0 and yearInt % 4 == 0):\n                    ereg = re.compile('([1-9][0-9]{3})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))')\n                else:\n                    ereg = re.compile('([1-9][0-9]{3})((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))')\n                if (re.match(ereg, ymd)):\n                    # \u6821\u9a8c\u901a\u8fc7\n                    return {'code': 'OK', 'id': ymd, 'age': age}\n        return {'code': 'Error', 'id': ymd, 'age': '\u975e\u6cd5\u51fa\u751f\u65e5\u671f'}\n```\n\n#### \u6027\u522b\u6821\u9a8c\n\n\u6027\u522b\u6821\u9a8c\u7684\u89c4\u5219\u6bd4\u8f83\u7b80\u5355\uff0c\u5947\u6570\u4e3a\u7537\uff0c\u5076\u6570\u4e3a\u5973\u3002\u7528 Python \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```\ndef __checkGender(gender):\n    '''\u6821\u9a8c\u6027\u522b\u3002\u8f93\u51651\u4f4d\u6027\u522b\u7f16\u7801\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a{code, id, gender}'''\n    if len(gender) != 1:\n        return {'code': 'Error', 'id': gender, 'gender': '\u6027\u522b\u7f16\u7801\u5e94\u8be5\u4e3a1\u4f4d'}\n    else:\n        if gender.isdigit():\n            genderInt = int(gender)\n            if genderInt % 2 == 0:\n                # \u5076\u6570 => \u5973\n                return {'code': 'OK', 'id': gender, 'gender': '\u5973'}\n            else:\n                # \u5947\u6570 => \u7537\n                return {'code': 'OK', 'id': gender, 'gender': '\u7537'}\n        else:\n            return {'code': 'Error', 'id': gender, 'gender': '\u975e\u6cd5\u6027\u522b\u7f16\u7801'}\n```\n\n#### \u6821\u9a8c\u7801\n\n\u5176\u4ed6\u7ec4\u7801\u90fd\u597d\u7406\u89e3\uff0c\u8fd9\u6700\u540e\u4e00\u4f4d\u7684\u6821\u9a8c\u7801\uff0c\u5c31\u6bd4\u8f83\u590d\u6742\u4e86\u3002\u6821\u9a8c\u7801\u662f\u6839\u636e\u524d\u9762\u5341\u4e03\u4f4d\u6570\u5b57\u7801\uff0c\u6309\u7167 ISO7064:1983.MOD11-2 \u6821\u9a8c\u7801\u8ba1\u7b97\u51fa\u6765\u7684\u3002\u8be6\u7ec6\u6b65\u9aa4\u5982\u4e0b\u6240\u793a\uff1a\n\n```\n1\u3001\u5c06\u8eab\u4efd\u8bc1\u53f7\u7801\u524d17\u4f4d\u6570\u5206\u522b\u4e58\u4ee5\u4e0d\u540c\u7684\u7cfb\u6570\u3002\u4ece\u7b2c\u4e00\u4f4d\u5230\u7b2c\u5341\u4e03\u4f4d\u7684\u7cfb\u6570\u5206\u522b\u4e3a\uff1a7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2\n2\u3001\u5c06\u8fd917\u4f4d\u6570\u5b57\u548c\u7cfb\u6570\u76f8\u4e58\u7684\u7ed3\u679c\u76f8\u52a0\n3\u3001\u7528\u52a0\u51fa\u6765\u548c\u9664\u4ee511\uff0c\u770b\u4f59\u6570\u662f\u591a\u5c11\n4\u3001\u4f59\u6570\u53ea\u53ef\u80fd\u67090 1 2 3 4 5 6 7 8 9 10\u8fd911\u4e2a\u6570\u5b57\u3002\u5176\u5206\u522b\u5bf9\u5e94\u7684\u6821\u9a8c\u7801\u4e3a1 0 X 9 8 7 6 5 4 3 2\n```\n\n\u6309\u7167\u4ee5\u4e0a\u903b\u8f91\uff0c\u7528 Python \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```\ndef __checkJYM(inStr):\n    '''\u6821\u9a8c\u6821\u9a8c\u7801\u3002\u8f93\u516517\u4f4d\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a{code, id, area, age, gender, jym}'''\n    if len(inStr) != 17:\n        return {'code': 'Error', 'id': inStr, 'jym': '\u8bf7\u8f93\u5165\u8eab\u4efd\u8bc1\u524d17\u4f4d'}\n    else:\n        if inStr.isdigit():\n            # \u6821\u9a8c\u5730\u533a\n            resultArea = __checkArea(inStr[:6])\n            area = resultArea['area']\n            if resultArea['code'] == 'Error':\n                return {'code': 'Error', 'id': inStr, 'jym': area}\n            # \u6821\u9a8c\u51fa\u751f\u65e5\u671f\n            resultBirthdate = __checkBirthdate(inStr[6:14])\n            age = resultBirthdate['age']\n            if resultBirthdate['code'] == 'Error':\n                return {'code': 'Error', 'id': inStr, 'jym': age}\n            # \u6821\u9a8c\u6027\u522b\n            resultGender = __checkGender(inStr[16:17])\n            gender = resultGender['gender']\n            if resultGender['code'] == 'Error':\n                return {'code': 'Error', 'id': inStr, 'jym': gender}\n            S = (int(inStr[0]) + int(inStr[10])) * 7 + (int(inStr[1]) + int(inStr[11])) * 9 + (int(inStr[2]) + int(inStr[12])) * 10 + (int(inStr[3]) + int(inStr[13])) * 5 + (int(inStr[4]) + int(inStr[14])) * 8 + (int(inStr[5]) + int(inStr[15])) * 4 + (int(inStr[6]) + int(inStr[16])) * 2 + int(inStr[7]) * 1 + int(inStr[8]) * 6 + int(inStr[9]) * 3\n            Y = S % 11\n            jym = ''    # \u6821\u9a8c\u7801\n            jymList = '10X98765432'\n            if Y <= 10:\n                jym = jymList[Y]  # \u6821\u9a8c\u7801\n                return {'code': 'OK', 'id': inStr, 'area': area, 'age': age, 'gender': gender, 'jym': jym}\n        return {'code': 'Error', 'id': inStr, 'jym': '\u975e\u6cd5\u8f93\u5165\u53c2\u6570'}\n```\n\n#### \u8eab\u4efd\u8bc1\u7f16\u7801\u6821\u9a8c\n\n\u7efc\u4e0a\uff0c\u5373\u53ef\u5bf9\u6574\u4f53\u8eab\u4efd\u8bc1\u7f16\u7801\u8fdb\u884c\u6821\u9a8c\uff0c\u7528 Python \u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a\n\n```\ndef __checkIdCard(idCard):\n    '''\u6821\u9a8c\u8eab\u4efd\u8bc1\u3002\u8f93\u516518\u4f4d\u8eab\u4efd\u8bc1\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\uff1a{code, id, gender}'''\n    if len(idCard) != 18:\n        return {'code': 'Error', 'id': idCard, 'gender': '\u8eab\u4efd\u8bc1\u7f16\u7801\u5e94\u8be5\u4e3a18\u4f4d'}\n    else:\n        idCard17 = idCard[:17]    # \u524d17\u4f4d\n        idCardLast = idCard[-1:]    # \u6700\u540e\u4e00\u4f4d\n        if idCard17.isdigit() and re.match('([0-9]|X|x)', idCardLast):\n            resultJYM = __checkJYM(idCard17)\n            if resultJYM['code'] == 'Error':\n                infoList = list()\n                if 'area' in resultJYM:\n                    infoList.append(resultJYM['area'])\n                    del resultJYM['area']\n                if 'age' in resultJYM:\n                    infoList.append(resultJYM['age'])\n                    del resultJYM['age']\n                if 'gender' in resultJYM:\n                    infoList.append(resultJYM['gender'])\n                    del resultJYM['gender']\n                if 'jym' in resultJYM:\n                    infoList.append(resultJYM['jym'])\n                    del resultJYM['jym']\n                resultJYM['info'] = '\uff1b'.join(infoList)\n                return resultJYM\n            if idCardLast == resultJYM['jym']:\n                del resultJYM['jym']\n                resultJYM['info'] = '\u8eab\u4efd\u8bc1\u6821\u9a8c\u901a\u8fc7'\n                return resultJYM\n            else:\n                return {'code': 'Error', 'id': idCard, 'info': '\u8eab\u4efd\u8bc1\u6821\u9a8c\u7801\u9519\u8bef'}\n        else:\n            return {'code': 'Error', 'id': idCard, 'info': '\u975e\u6cd5\u8eab\u4efd\u8bc1\u7f16\u7801'}\n```\n\n### parseIdCard \u5de5\u5177\u7684\u4f7f\u7528\n\n\u5b89\u88c5 parseIdCard \u5de5\u5177\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n```\npip install parseIdCard\n```\n\n\u4f7f\u7528\u65b9\u6cd5\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n\n```\nfrom parseIdCard import parseIdCard\n\n## \u6821\u9a8c\u5730\u533a\u7801\u3002\u53ef\u4ee5\u8f93\u5165\u6574\u578b\uff0c\u5217\u8868\uff0c\u5b57\u7b26\u4e32(\u53ef\u7528\u9017\u53f7\u7b49\u5206\u5272\u591a\u6761\u4fe1\u606f\u7801)\nparseIdCard.parseArea(420116)\n# \u8f93\u51fa {'code': 'OK', 'id': '420116', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a'}\n\nparseIdCard.parseArea(['429116', '42010'])\n# \u8f93\u51fa [{'code': 'Error', 'id': '429116', 'area': '\u672a\u77e5\u5730\u533a\u7f16\u7801'}, {'code': 'Error', 'id': '42010', 'area': '\u5730\u533a\u7f16\u7801\u5e94\u8be5\u4e3a6\u4f4d'}]\n\nparseIdCard.parseArea('420116,420101')\n# \u8f93\u51fa [{'code': 'OK', 'id': '420116', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a'}, {'code': 'OK', 'id': '420101', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u5e02\u8f96\u533a'}]\n\n\n## \u6821\u9a8c\u51fa\u751f\u65e5\u671f\u3002\u53ef\u4ee5\u8f93\u5165\u6574\u578b\uff0c\u5217\u8868\uff0c\u5b57\u7b26\u4e32(\u53ef\u7528\u9017\u53f7\u7b49\u5206\u5272\u591a\u6761\u4fe1\u606f\u7801)\nparseIdCard.parseBirthdate(20200103)\n# \u8f93\u51fa {'code': 'OK', 'id': '20200103', 'age': 1}\n\nparseIdCard.parseBirthdate(['00000000', '22221203'])\n# \u8f93\u51fa [{'code': 'Error', 'id': '00000000', 'age': '\u975e\u6cd5\u51fa\u751f\u65e5\u671f'}, {'code': 'Error', 'id': '22221203', 'age': '\u975e\u6cd5\u51fa\u751f\u65e5\u671f'}]\n\nparseIdCard.parseBirthdate('20200103, 20121222')\n# \u8f93\u51fa [{'code': 'OK', 'id': '20200103', 'age': 1}, {'code': 'OK', 'id': '20121222', 'age': 9}]\n\n\n## \u6821\u9a8c\u6027\u522b\u3002\u53ef\u4ee5\u8f93\u5165\u6574\u578b\uff0c\u5217\u8868\uff0c\u5b57\u7b26\u4e32(\u53ef\u7528\u9017\u53f7\u7b49\u5206\u5272\u591a\u6761\u4fe1\u606f\u7801)\nparseIdCard.parseGender(1)\n# \u8f93\u51fa {'code': 'OK', 'id': '1', 'gender': '\u7537'}\n\nparseIdCard.parseGender(['2', 'X'])\n# \u8f93\u51fa [{'code': 'OK', 'id': '2', 'gender': '\u5973'}, {'code': 'Error', 'id': 'X', 'gender': '\u975e\u6cd5\u6027\u522b\u7f16\u7801'}]\n\nparseIdCard.parseGender('12;9')\n# \u8f93\u51fa [{'code': 'Error', 'id': '12', 'gender': '\u6027\u522b\u7f16\u7801\u5e94\u8be5\u4e3a1\u4f4d'}, {'code': 'OK', 'id': '9', 'gender': '\u7537'}]\n\n\n## \u8ba1\u7b97\u6821\u9a8c\u7801\u3002\u53ef\u4ee5\u8f93\u5165\u6574\u578b\uff0c\u5217\u8868\uff0c\u5b57\u7b26\u4e32(\u53ef\u7528\u9017\u53f7\u7b49\u5206\u5272\u591a\u6761\u4fe1\u606f\u7801)\nparseIdCard.parseJYM(42011620200103123)\n# \u8f93\u51fa {'code': 'OK', 'id': '42011620200103123', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a', 'age': 1, 'gender': '\u7537', 'jym': 'X'}\n\nparseIdCard.parseJYM(['02011620200103123', '4201162020010'])\n# \u8f93\u51fa [{'code': 'Error', 'id': '02011620200103123', 'jym': '\u672a\u77e5\u5730\u533a\u7f16\u7801'}, {'code': 'Error', 'id': '4201162020010', 'jym': '\u8bf7\u8f93\u5165\u8eab\u4efd\u8bc1\u524d17\u4f4d'}]\n\nparseIdCard.parseJYM('02011620200103123\uff0c4201162020010')\n# \u8f93\u51fa [{'code': 'Error', 'id': '02011620200103123', 'jym': '\u672a\u77e5\u5730\u533a\u7f16\u7801'}, {'code': 'Error', 'id': '4201162020010', 'jym': '\u8bf7\u8f93\u5165\u8eab\u4efd\u8bc1\u524d17\u4f4d'}]\n\n\n## \u6821\u9a8c\u8eab\u4efd\u8bc1\u7f16\u7801\u3002\u53ef\u4ee5\u8f93\u5165\u6574\u578b\uff0c\u5217\u8868\uff0c\u5b57\u7b26\u4e32(\u53ef\u7528\u9017\u53f7\u7b49\u5206\u5272\u591a\u6761\u4fe1\u606f\u7801)\nparseIdCard.parseIdCard(420116202001031248)\n# \u8f93\u51fa {'code': 'OK', 'id': '42011620200103124', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a', 'age': 1, 'gender': '\u5973', 'info': '\u8eab\u4efd\u8bc1\u6821\u9a8c\u901a\u8fc7'}\n\nparseIdCard.parseIdCard([420116202001031248, '42011620200103123X'])\n# \u8f93\u51fa [{'code': 'OK', 'id': '42011620200103124', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a', 'age': 1, 'gender': '\u5973', 'info': '\u8eab\u4efd\u8bc1\u6821\u9a8c\u901a\u8fc7'}, {'code': 'OK', 'id': '42011620200103123', 'area': '\u6e56\u5317\u6b66\u6c49\u5e02\u9ec4\u9642\u533a', 'age': 1, 'gender': '\u7537', 'info': '\u8eab\u4efd\u8bc1\u6821\u9a8c\u901a\u8fc7'}]\n\nparseIdCard.parseIdCard('42011620200103124X\uff1b42011620200103123')\n# \u8f93\u51fa [{'code': 'Error', 'id': '42011620200103124X', 'info': '\u8eab\u4efd\u8bc1\u6821\u9a8c\u7801\u9519\u8bef'}, {'code': 'Error', 'id': '42011620200103123', 'info': '\u8eab\u4efd\u8bc1\u7f16\u7801\u5e94\u8be5\u4e3a18\u4f4d'}]\n```\n\n### \u8ba1\u5212\u5347\u7ea7\n\n\u540e\u7eed\u7248\u672c\u8ba1\u5212\u65b0\u589e\u667a\u80fd\u4fee\u590d\u8eab\u4efd\u8bc1\u7f16\u7801\u7684\u529f\u80fd\u3002\n\n### \u540e\u8bb0\n\n\u9644\u4e0a\u4e00\u4e2a\u6211\u7a7f\u9632\u62a4\u670d\u7684\u9547\u697c\u7167\u3002\u5e0c\u671b\u75ab\u60c5\u5c3d\u5feb\u8fc7\u53bb\uff0c\u4ee5\u540e\u4e00\u5207\u987a\u5229\u3002\n\n![image](https://cdn.jsdelivr.net/gh/pangao1990/pangao1990.github.io@master/pic/\u53ef\u80fd\u662fPython\u4e2d\u6700\u597d\u7528\u7684\u8eab\u4efd\u8bc1\u89e3\u6790\u5de5\u5177\u2014parseIdCard.jpg)\n\n---\n\n\u66f4\u591a\u7f16\u7a0b\u6559\u5b66\u8bf7\u5173\u6ce8\u516c\u4f17\u53f7\uff1a**\u6f58\u9ad8\u966a\u4f60\u5b66\u7f16\u7a0b**\n\n![image](https://cdn.jsdelivr.net/gh/pangao1990/pangao1990.github.io@master/pic/\u6f58\u9ad8\u966a\u4f60\u5b66\u7f16\u7a0b.jpg)\n\n---\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/pangao1990/parseIdCard",
            "keywords": "idard parse",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parseIdCard",
            "package_url": "https://pypi.org/project/parseIdCard/",
            "platform": "",
            "project_url": "https://pypi.org/project/parseIdCard/",
            "project_urls": {
                "Blog": "https://blog.pangao.vip/%E5%8F%AF%E8%83%BD%E6%98%AFPython%E4%B8%AD%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BA%AB%E4%BB%BD%E8%AF%81%E8%A7%A3%E6%9E%90%E5%B7%A5%E5%85%B7%E2%80%94parseIdCard/",
                "Homepage": "https://github.com/pangao1990/parseIdCard"
            },
            "release_url": "https://pypi.org/project/parseIdCard/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3",
            "summary": "\u4e00\u6b3e\u89e3\u6790\u8eab\u4efd\u8bc1\u7684\u5de5\u5177",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12252417,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32e668b541357b446f6d41db823e1cb9",
                    "sha256": "70ab1b2e233c084676c21a2267bf3f1020a320f6f7842f2826ce9eda91d90720"
                },
                "downloads": -1,
                "filename": "parseIdCard-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "32e668b541357b446f6d41db823e1cb9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 519259,
                "upload_time": "2021-12-09T05:58:59",
                "upload_time_iso_8601": "2021-12-09T05:58:59.717798Z",
                "url": "https://files.pythonhosted.org/packages/63/aa/837ba736942729d62762aced91224ee55750dff1361fd60de9192c08952c/parseIdCard-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "acd0bc4299e3c273de6445f117615cc7",
                    "sha256": "ba64e33222f7d08b12599b7f8aff7887e7c3cfd2618e0a68518b8312402dbd87"
                },
                "downloads": -1,
                "filename": "parseIdCard-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "acd0bc4299e3c273de6445f117615cc7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 523205,
                "upload_time": "2021-12-09T05:59:05",
                "upload_time_iso_8601": "2021-12-09T05:59:05.807492Z",
                "url": "https://files.pythonhosted.org/packages/ba/2b/6dff8b20dd2356cf8414234274bc9f431e6844449e1082ddcc854b6896e8/parseIdCard-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}