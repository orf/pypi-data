{
    "0.1.0": {
        "info": {
            "author": "Peter Hartog",
            "author_email": "peter.hartog@hotmail.nl",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Environment :: GPU :: NVIDIA CUDA :: 11.4",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aidd-msca/abstract-codebase",
            "keywords": "codebase,module registry,accreditation system",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "abstract-codebase",
            "package_url": "https://pypi.org/project/abstract-codebase/",
            "platform": null,
            "project_url": "https://pypi.org/project/abstract-codebase/",
            "project_urls": {
                "Homepage": "https://github.com/aidd-msca/abstract-codebase",
                "Repository": "https://github.com/aidd-msca/abstract-codebase"
            },
            "release_url": "https://pypi.org/project/abstract-codebase/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "Abstract codebase with utilities to register generic modules.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15639317,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5366e2e09906e28d772c4b2f220079f3",
                    "sha256": "ceef03476adfcfe46926d31723ba13adc849eab504663710ecbce481402f0862"
                },
                "downloads": -1,
                "filename": "abstract_codebase-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5366e2e09906e28d772c4b2f220079f3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 11729,
                "upload_time": "2022-10-19T12:26:31",
                "upload_time_iso_8601": "2022-10-19T12:26:31.810796Z",
                "url": "https://files.pythonhosted.org/packages/33/6a/60d7ce49a67f517900258c63e0a3c7372faf2dd6247ee51f4e6a7de5f9f2/abstract_codebase-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a483edcab6e51cf16a16a09532b3bb3b",
                    "sha256": "ac1e826a81d701c852e814f539cb1c935dff220231fd3be184f351c46030d97d"
                },
                "downloads": -1,
                "filename": "abstract_codebase-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a483edcab6e51cf16a16a09532b3bb3b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 10283,
                "upload_time": "2022-10-19T12:26:33",
                "upload_time_iso_8601": "2022-10-19T12:26:33.293147Z",
                "url": "https://files.pythonhosted.org/packages/84/49/85401fd4be235b1e4b6d7daa94c92042c520351b2409122eab6c0aedc021/abstract_codebase-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Peter Hartog",
            "author_email": "peter.hartog@hotmail.nl",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Environment :: GPU :: NVIDIA CUDA :: 11.4",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "# abstract-codebase\n\n![PyPI](https://img.shields.io/pypi/v/abstract-codebase)\n![PyPI](https://img.shields.io/pypi/pyversions/abstract-codebase)\n![PyPI](https://img.shields.io/github/license/aidd-msca/abstract-codebase)\n\nAn abstract codebase with utilities for registering generic modules with an optional configuration setup and accreditation system.\n\n## Installation\n\nThe codebase can be installed from PyPI using `pip`, or your package manager of choice, with\n\n```bash\n$ pip install abstract-codebase\n```\n\n## Dependencies\n\nNo dependencies to use the minimal Registry functionality. The configuration setup depends on yaml and hydra.\n\n## Usage\n\n### RegistryFactory \nThe codebase provides a way to register generic modules into a codebase. \nFirst a specific Registry is created, e.g. for deep learning models. \n\n``` Python\nfrom abstract_codebase.registration import RegistryFactory\n\nclass ModelRegistry(RegistryFactory):\n    pass\n```\n\nNext, any models can be added to the ModelRegistry as such.\n\n``` Python\nimport torch.nn as nn\n\n@ModelRegistry.register(call_name=\"simple_model\")\nclass SimpleModel(nn.Module):\n\n    def __init__(self, layer_sizes) -> None:\n        super(SimpleModel, self).__init__()\n        dropout_rate = 0.25\n        self.layers = nn.ModuleList()\n        for layer in range(len(layer_sizes)-2):\n            self.layers.append(\n                nn.Sequential(\n                    nn.Linear(hidden_layers[layer], hidden_layers[layer+1]),\n                    nn.ReLU(),\n                    nn.Dropout(p=dropout_rate)\n                )\n            )\n        self.layers.append(\n            nn.Sequential(\n                nn.Linear(hidden_layers[-2], hidden_layers[-1])\n            )\n        )\n\n    def forward(self, x):\n        for layer in self.layers:\n            x = layer(x)\n        return x\n\n```\n\n### Configurations\nEach registered module can be accompanied with a dataclass of settings with default values. \n\n``` Python\n\n@ModelRegistry.register(call_name=\"simple_model\")  \n@dataclass(unsafe_hash=True)\nclass SimpleModelArguments():\n\n    dropout_rate = 0.25\n```\n\nAs such, the model can rather be defined as.\n\n``` Python\n\n@ModelRegistry.register(call_name=\"simple_mlp\")\nclass SimpleModel(nn.Module):\n\n    def __init__(self, layer_sizes, args: SimpleModelArguments) -> None:\n        super(SimpleMLP, self).__init__()\n        dropout_rate = args.dropout_rate\n        ...\n\n```\n\nFurther, the Config class can be used to read and update configurations across all modules, through yaml files or the command line interface.\n### Accreditation\nAt registration of a module, additional information can be supplied such as author, credit type and more. \nThis information can be used to collect a summary of the accreditation required for all modules used in a given script. \n\n``` Python\n@ModelRegistry.register(\n    call_name=\"simple_model\",\n    author=\"Author name\",\n    credit_type=CreditType.REFERENCE,\n    additional_information=\"Reference published work in (link).\"\n)\nclass SimpleModel(nn.Module):\n    ...\n```\n\nTODO exemplify an accreditation summery.\n``` Python\nModelRegistry.get_accreditation()\n```\n\n## Code of Conduct\n\nEveryone interacting in the codebase, issue trackers, chat rooms, and mailing lists is expected to follow the [PyPA Code of Conduct](https://www.pypa.io/en/latest/code-of-conduct/).\n\n ",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aidd-msca/abstract-codebase",
            "keywords": "codebase,module registry,accreditation system",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "abstract-codebase",
            "package_url": "https://pypi.org/project/abstract-codebase/",
            "platform": null,
            "project_url": "https://pypi.org/project/abstract-codebase/",
            "project_urls": {
                "Homepage": "https://github.com/aidd-msca/abstract-codebase",
                "Repository": "https://github.com/aidd-msca/abstract-codebase"
            },
            "release_url": "https://pypi.org/project/abstract-codebase/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "Abstract codebase with utilities to register generic modules.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15639317,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "821f72471035cbc625b8aa9e21f8a29e",
                    "sha256": "abbbedbd8dd581e736122ff8b0be64e07f6020e5a76fe070421620faadc19cab"
                },
                "downloads": -1,
                "filename": "abstract_codebase-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "821f72471035cbc625b8aa9e21f8a29e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 9526,
                "upload_time": "2022-11-03T10:26:46",
                "upload_time_iso_8601": "2022-11-03T10:26:46.885147Z",
                "url": "https://files.pythonhosted.org/packages/13/d6/22e3cb3e0d71eb612069c56758d4d8a6c656dbd6801cc04154f3dde173b5/abstract_codebase-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c2c9836fab152e85b414168f36e3e946",
                    "sha256": "2da24c7119c898ecf148ef00b19a90b1eb3894e7bddb8415e5b192688631aeed"
                },
                "downloads": -1,
                "filename": "abstract-codebase-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c2c9836fab152e85b414168f36e3e946",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 8359,
                "upload_time": "2022-11-03T10:26:45",
                "upload_time_iso_8601": "2022-11-03T10:26:45.013562Z",
                "url": "https://files.pythonhosted.org/packages/b9/81/10d9d8c90f2a853cd8d4f6406bf7b8d978a3c72c209136de8b4bcb1641fd/abstract-codebase-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}