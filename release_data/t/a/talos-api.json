{
    "1.2.0": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.2.0/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "limits",
                "pytest (<4.1); extra == 'testing'",
                "pytest-runner; extra == 'testing'",
                "pytest-html; extra == 'testing'",
                "pytest-cov; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, RESTful API Framework",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e1ae6c363e27673dd026d36389389de8",
                    "sha256": "b05442e27e78484981e65de469986dc5bc76f50fba754c20c9c5ba6d44f6eda0"
                },
                "downloads": -1,
                "filename": "talos_api-1.2.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e1ae6c363e27673dd026d36389389de8",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 111598,
                "upload_time": "2019-01-24T06:21:39",
                "upload_time_iso_8601": "2019-01-24T06:21:39.235736Z",
                "url": "https://files.pythonhosted.org/packages/9e/00/11110a4ec178a85b962eaa20bd553560e13c001c15267879968491df7ba9/talos_api-1.2.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d71b47fcf102d5d2a3187fa5370aa68b",
                    "sha256": "9f16e07da5ad9ebe4931e7d514f584760741b0f5909894df4a9d55044819b5e0"
                },
                "downloads": -1,
                "filename": "talos-api-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d71b47fcf102d5d2a3187fa5370aa68b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 111389,
                "upload_time": "2019-01-24T06:21:41",
                "upload_time_iso_8601": "2019-01-24T06:21:41.792091Z",
                "url": "https://files.pythonhosted.org/packages/69/d9/344c6a4f68d6a1afbe8066eb57b35478691e191633dd1e555b77bce8e125/talos-api-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.1": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.2.1/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "limits",
                "pytest (<4.1); extra == 'testing'",
                "pytest-runner; extra == 'testing'",
                "pytest-html; extra == 'testing'",
                "pytest-cov; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3e38ed1eeb5f867b8004704178350b27",
                    "sha256": "d4808add646b544f3535057400eaefe079bee77d4cf3bc5f8faeceacb8a3139d"
                },
                "downloads": -1,
                "filename": "talos_api-1.2.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3e38ed1eeb5f867b8004704178350b27",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 112505,
                "upload_time": "2019-02-12T06:05:11",
                "upload_time_iso_8601": "2019-02-12T06:05:11.284168Z",
                "url": "https://files.pythonhosted.org/packages/f5/69/d079e7d49aa3072ac316888876341c5a83bb75f0cd9509240e5efe20c9f3/talos_api-1.2.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "87249b3db5af8d43153a2ab02fe33587",
                    "sha256": "046d67f71bf856b4458163dbfb5d4754533841a3f548e66a04f92247331effb4"
                },
                "downloads": -1,
                "filename": "talos-api-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "87249b3db5af8d43153a2ab02fe33587",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 112832,
                "upload_time": "2019-02-12T06:05:17",
                "upload_time_iso_8601": "2019-02-12T06:05:17.615385Z",
                "url": "https://files.pythonhosted.org/packages/24/68/9c535071fba47d99ffae4c8aa8814a2804512be8313ed2c41e0c93084f44/talos-api-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.2": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.2.2/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "limits",
                "pytest (<4.1) ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework",
            "version": "1.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "09e97d1414c15c516f84f7786d3d8fdf",
                    "sha256": "17d033c70c97d675efa9fd67ba8ced8f7ba4b5f2fe231b271e3e2e72d61feeca"
                },
                "downloads": -1,
                "filename": "talos_api-1.2.2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "09e97d1414c15c516f84f7786d3d8fdf",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 103193,
                "upload_time": "2019-04-11T16:10:58",
                "upload_time_iso_8601": "2019-04-11T16:10:58.471801Z",
                "url": "https://files.pythonhosted.org/packages/53/f4/e66a36966fac8ebe237b1c3cfbb2de883952ee4468384b9b63fa9db24a5a/talos_api-1.2.2-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5f876ba7f501c823eaefa8bea0571190",
                    "sha256": "8aaf2ce0058ef62c208bb441e5b32fdeae53f3fefd5ef2be6ce1e3e30eb80efc"
                },
                "downloads": -1,
                "filename": "talos-api-1.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "5f876ba7f501c823eaefa8bea0571190",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 120331,
                "upload_time": "2019-04-11T16:11:00",
                "upload_time_iso_8601": "2019-04-11T16:11:00.410124Z",
                "url": "https://files.pythonhosted.org/packages/7e/00/366c009692156ae7b09f129da91d7c4eca4de947de89ce091f1bec1f6774/talos-api-1.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.3": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.2.3/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "limits",
                "pytest (<4.1) ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.2.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3e2c8d6b8fa9bced0c293518f12c98d7",
                    "sha256": "7ad2f78001c68de92eedcbf4ca5f3a71d05fda414d78a52ea63dc2c5c7ff8af3"
                },
                "downloads": -1,
                "filename": "talos_api-1.2.3-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3e2c8d6b8fa9bced0c293518f12c98d7",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 108178,
                "upload_time": "2019-11-01T02:33:58",
                "upload_time_iso_8601": "2019-11-01T02:33:58.303582Z",
                "url": "https://files.pythonhosted.org/packages/19/be/454aef1ae55e5de382caa4d1e63d31a689901c4ec045ae9d5153665a0bc4/talos_api-1.2.3-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.0": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.0/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "psutil",
                "celery",
                "dogpile.cache",
                "pytest (<4.1) ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "24fdf484ff791884d2531d80aeb465be",
                    "sha256": "e814398610383c6c8f11c423b81a135c2cd8dbcf4a81d55a71eef7c3bf556e16"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "24fdf484ff791884d2531d80aeb465be",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 118552,
                "upload_time": "2019-11-24T11:19:02",
                "upload_time_iso_8601": "2019-11-24T11:19:02.938919Z",
                "url": "https://files.pythonhosted.org/packages/45/c1/44e17b7840e64e2366db27174f2cb3f438a785728c009195a5532586ed84/talos_api-1.3.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2494244daf602386aa1cf0a8fb9999de",
                    "sha256": "805c6a6b067c220e50a1a4be5a035486edcff6acc199ad4880c7c4fcfba4f35c"
                },
                "downloads": -1,
                "filename": "talos-api-1.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2494244daf602386aa1cf0a8fb9999de",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 138872,
                "upload_time": "2019-11-24T11:19:06",
                "upload_time_iso_8601": "2019-11-24T11:19:06.030034Z",
                "url": "https://files.pythonhosted.org/packages/39/a7/80eba5b8eefe1eba7c6a2a9cd19d0ed55d797f30b2cb668640713f72c1d0/talos-api-1.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.1": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.1/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "psutil",
                "celery",
                "dogpile.cache",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1d0105bd5755b74d9d02694ead00c615",
                    "sha256": "f649d3faad0af203ae79715dc45a2f0eeeadc1406d54c5ba91bf4013d2bad20b"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1d0105bd5755b74d9d02694ead00c615",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 125017,
                "upload_time": "2020-01-21T09:21:16",
                "upload_time_iso_8601": "2020-01-21T09:21:16.800579Z",
                "url": "https://files.pythonhosted.org/packages/37/03/9e2bce96473d00b7c7d462e15d0fed03e1ad91f8c3ac515b436ee4ff3599/talos_api-1.3.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.2": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.2/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "psutil",
                "celery",
                "dogpile.cache",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8142c57ba8c99cbfa84980e99aecdeec",
                    "sha256": "f1e16b42d226026a75e6ff0a74a00a203ce5ab40f21a612498c2a812186cee30"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8142c57ba8c99cbfa84980e99aecdeec",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 126837,
                "upload_time": "2020-04-20T03:05:50",
                "upload_time_iso_8601": "2020-04-20T03:05:50.812911Z",
                "url": "https://files.pythonhosted.org/packages/a0/fd/095d9ce424a645e47032db72b2067da790ade8fbda21669f9e15a3dbeaa0/talos_api-1.3.2-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.3": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.3/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "celery",
                "dogpile.cache",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d1ad2da6dcc6716d1abfb37a439ed67f",
                    "sha256": "a7faec873065b7b0980190bc1e97eb1c946f26cca44c9a4468164476fbc2679d"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.3-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d1ad2da6dcc6716d1abfb37a439ed67f",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 127450,
                "upload_time": "2020-11-03T03:42:21",
                "upload_time_iso_8601": "2020-11-03T03:42:21.973128Z",
                "url": "https://files.pythonhosted.org/packages/27/23/d24568cf1a0292b9e95b2b5c2aef2590eab296580228b8d2c261a8c7082b/talos_api-1.3.3-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.4": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.4/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "celery",
                "dogpile.cache",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6d5dd6e15739ebd79f97c3a4c095cccb",
                    "sha256": "d7a7379ea4b032ad61b2d22319b3d73146ccc4d0ec834d3c81463e52aa29ef42"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.4-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6d5dd6e15739ebd79f97c3a4c095cccb",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 127586,
                "upload_time": "2020-11-18T10:07:51",
                "upload_time_iso_8601": "2020-11-18T10:07:51.078868Z",
                "url": "https://files.pythonhosted.org/packages/b5/24/c248cce42c875aeb58a996538e5d30cd7050fd2647312282176f87dbd022/talos_api-1.3.4-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "01fd403a1d4442a4e5f3bea6dbef7f96",
                    "sha256": "d15e2cfc9937ce861fff7e62a08a10fb0b61359335acd8021130ca59b24eb32b"
                },
                "downloads": -1,
                "filename": "talos-api-1.3.4.tar.gz",
                "has_sig": false,
                "md5_digest": "01fd403a1d4442a4e5f3bea6dbef7f96",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 161666,
                "upload_time": "2020-11-18T10:07:54",
                "upload_time_iso_8601": "2020-11-18T10:07:54.060332Z",
                "url": "https://files.pythonhosted.org/packages/3b/e1/ce7ae9620c66be35b1720b199fbfb073a21ef3c191d463ec60ef740fd473/talos-api-1.3.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.5": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.5/",
            "requires_dist": [
                "falcon",
                "six (>=1.9.0)",
                "SQLAlchemy (>=1.1.0)",
                "ipaddress",
                "mako",
                "requests",
                "limits",
                "celery",
                "dogpile.cache",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb06f6b4254699bbea272fe56651ef7c",
                    "sha256": "2fda726da4da9d149d4b15622e333f028182f77a9b7f0dcbc575ed86466ac2a7"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.5-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eb06f6b4254699bbea272fe56651ef7c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 127647,
                "upload_time": "2020-12-09T07:50:03",
                "upload_time_iso_8601": "2020-12-09T07:50:03.616455Z",
                "url": "https://files.pythonhosted.org/packages/61/3c/f3fe221065981035fe92aac2ad4005430af50d57ab88b1b3ff017cb1c238/talos_api-1.3.5-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5b8e1865afd5b4a598b7a3de592c77e",
                    "sha256": "f568e088f355006cb8deb663e5426a0db8130919f9b787573c050fc83914e891"
                },
                "downloads": -1,
                "filename": "talos-api-1.3.5.tar.gz",
                "has_sig": false,
                "md5_digest": "d5b8e1865afd5b4a598b7a3de592c77e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 161843,
                "upload_time": "2020-12-09T07:50:06",
                "upload_time_iso_8601": "2020-12-09T07:50:06.493555Z",
                "url": "https://files.pythonhosted.org/packages/11/66/ea4996451956339dad3d2c4bbafc455b51c4b687c6474104296ebf4c5f90/talos-api-1.3.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.6": {
        "info": {
            "author": "Roy",
            "author_email": "wjjroy@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Libraries"
            ],
            "description": "talos project[^ 1]\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n![](https://img.shields.io/badge/language-python-orang.svg)\n![](https://img.shields.io/pypi/dm/talos-api?style=flat)\n\n=======================\n\n[TOC]\n\n\n\n## \u7279\u6027\n\nhttps://gitee.com/wu.jianjun/talos/tree/master/release\n\n\u9879\u76ee\u662f\u4e3b\u8981\u57fa\u4e8efalcon\u548cSQLAlchemy\u5c01\u88c5\uff0c\u63d0\u4f9b\u5e38\u7528\u7684\u9879\u76ee\u5de5\u5177\uff0c\u4fbf\u4e8e\u7528\u6237\u7f16\u5199API\u670d\u52a1\n\u9879\u76ee\u63d0\u4f9b\u4e86\u5de5\u5177talos_generator\uff0c\u53ef\u4ee5\u81ea\u52a8\u4e3a\u60a8\u751f\u6210\u57fa\u4e8etalos\u7684api\u5e94\u7528\uff0c\u5e76\u4e14\u76ee\u5f55\u7ed3\u6784\u57fa\u4e8epython\u6807\u51c6\u5305\u7ba1\u7406\n\n* \u57fa\u4e8efalcon\uff0c\u9ad8\u6548\n* \u4f7f\u7528SQLAlchemy\u4f5c\u4e3a\u6570\u636e\u5e93\u540e\u7aef\uff0c\u5feb\u901f\u5207\u6362\u6570\u636e\u5e93\n* \u9879\u76ee\u751f\u6210\u5de5\u5177\n* \u5feb\u901fRESTful CRUD API\u5f00\u53d1\n* filters\uff0cpagination\uff0corders\u652f\u6301\n* validation\u6570\u636e\u6821\u9a8c\n* \u5f02\u6b65\u4efb\u52a1\u96c6\u6210[celery]\n* \u5b9a\u65f6\u4efb\u52a1\u96c6\u6210[celery]\n* \u9891\u7387\u9650\u5236\n* \u56fd\u9645\u5316i18n\u652f\u6301\n* SMTP\u90ae\u4ef6\u3001AD\u57df\u3001CSV\u5bfc\u51fa\u3001\u7f13\u5b58\u7b49\u5e38\u7528\u6a21\u5757\u96c6\u6210\n\n\u9996\u5148setup.py install \u5b89\u88c5talos,\u8fd0\u884ctalos\u751f\u6210\u5de5\u5177\u751f\u6210\u9879\u76ee\n\n\n\n## \u9879\u76ee\u751f\u6210\n\n\u5b89\u88c5talos\u540e\uff0c\u4f1a\u751f\u6210talos_generator\u5de5\u5177\uff0c\u6b64\u5de5\u5177\u53ef\u4ee5\u4e3a\u7528\u6237\u5feb\u901f\u751f\u6210\u4e1a\u52a1\u4ee3\u7801\u6846\u67b6\n\n```bash\n> talos_generator\n> \u8bf7\u8f93\u5165\u9879\u76ee\u751f\u6210\u76ee\u5f55\uff1a./\n> \u8bf7\u8f93\u5165\u9879\u76ee\u540d\u79f0(\u82f1)\uff1acms\n> \u8bf7\u8f93\u5165\u751f\u6210\u7c7b\u578b[project,app,\u5176\u4ed6\u5185\u5bb9\u9000\u51fa]\uff1aproject\n> \u8bf7\u8f93\u5165\u9879\u76ee\u7248\u672c\uff1a1.2.4\n> \u8bf7\u8f93\u5165\u9879\u76ee\u4f5c\u8005\uff1aRoy\n> \u8bf7\u8f93\u5165\u9879\u76ee\u4f5c\u8005Email\uff1aroy@test.com\n> \u8bf7\u8f93\u5165\u9879\u76ee\u542f\u52a8\u914d\u7f6e\u76ee\u5f55\uff1a./etc #\u6b64\u5904\u586b\u5199\u9ed8\u8ba4\u914d\u7f6e\u8def\u5f84\uff0c\u76f8\u5bf9\u8def\u5f84\u662f\u76f8\u5bf9\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\n> \u8bf7\u8f93\u5165\u9879\u76eeDB\u8fde\u63a5\u4e32\uff1apostgresql+psycopg2://postgres:123456@127.0.0.1/testdb [SQLAlchemy\u7684DB\u8fde\u63a5\u4e32]\n### \u521b\u5efa\u9879\u76ee\u76ee\u5f55\uff1a./cms\n### \u521b\u5efa\u9879\u76ee\uff1acms(1.2.4)\u901a\u7528\u6587\u4ef6\n### \u521b\u5efa\u542f\u52a8\u670d\u52a1\u811a\u672c\n### \u521b\u5efa\u542f\u52a8\u914d\u7f6e\uff1a./etc/cms.conf\n### \u521b\u5efa\u4e2d\u95f4\u4ef6\u76ee\u5f55\n### \u5b8c\u6210\n> \u8bf7\u8f93\u5165\u751f\u6210\u7c7b\u578b[project,app,\u5176\u4ed6\u5185\u5bb9\u9000\u51fa]\uff1aapp # \u751f\u6210\u7684APP\u7528\u4e8e\u7f16\u5199\u5b9e\u9645\u4e1a\u52a1\u4ee3\u7801\uff0c\u6216\u624b\u52a8\u7f16\u5199\n### \u8bf7\u8f93\u5165app\u540d\u79f0(\u82f1)\uff1auser\n### \u521b\u5efaapp\u76ee\u5f55\uff1a./cms/cms/apps\n### \u521b\u5efaapp\u811a\u672c\uff1auser\n### \u5b8c\u6210\n> \u8bf7\u8f93\u5165\u751f\u6210\u7c7b\u578b[project,app,\u5176\u4ed6\u5185\u5bb9\u9000\u51fa]\uff1a\n```\n\n\u9879\u76ee\u751f\u6210\u540e\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u6bd4\u5982**./etc/cms.conf\u7684application.names\u914d\u7f6e\uff0c\u5217\u8868\u4e2d\u52a0\u5165\"cms.apps.user\"\u5373\u53ef\u542f\u52a8\u670d\u52a1\u5668\u8fdb\u884c\u8c03\u8bd5**\n\n\n\n\n## \u5f00\u53d1\u8c03\u8bd5\n\u542f\u52a8\u9879\u76ee\u76ee\u5f55\u4e0b\u7684server/simple_server.py\u5373\u53ef\u8fdb\u884c\u8c03\u8bd5\n\n\n\n## \u751f\u4ea7\u90e8\u7f72\n  - \u6e90\u7801\u6253\u5305\n\n```bash\npip install wheel\npython setup.py bdist_wheel\npip install cms-1.2.4-py2.py3-none-any.whl\n```\n\n  - \u542f\u52a8\u670d\u52a1\uff1a\n\n```bash\n# Linux\u90e8\u7f72\u4e00\u822c\u914d\u7f6e\u6587\u4ef6\u90fd\u4f1a\u653e\u5728/etc/cms/\u4e0b\uff0c\u5305\u62eccms.conf\u548cgunicorn.py\u6587\u4ef6\n# \u5e76\u786e\u4fdd\u5b89\u88c5gunicorn\npip install gunicorn\n# \u6b65\u9aa4\u4e00\uff0c\u5bfc\u51fa\u73af\u5883\u53d8\u91cf\uff1a\nexport CMS_CONF=/etc/cms/cms.conf\n# \u6b65\u9aa4\u4e8c\uff0c\ngunicorn --pid \"/var/run/cms.pid\" --config \"/etc/cms/gunicorn.py\" \"cms.server.wsgi_server:application\"\n```\n\n\n\n## API\u5f00\u53d1\u5f15\u5bfc\n\n### \u57fa\u7840\u5f00\u53d1\u6b65\u9aa4\n\n#### \u8bbe\u8ba1\u6570\u636e\u5e93\n\n\u7565(talos\u8981\u6c42\u81f3\u5c11\u6709\u4e00\u5217\u552f\u4e00\u6027\uff0c\u5426\u5219\u65e0\u6cd5\u63d0\u4f9bitem\u578b\u64cd\u4f5c)\n\n#### \u5bfc\u51fa\u6570\u636e\u5e93\u6a21\u578b\n\ntalos\u4e2d\u4f7f\u7528\u7684\u662fSQLAlchemy\uff0c\u4f7f\u7528\u8868\u64cd\u4f5c\u9700\u8981\u5c06\u6570\u636e\u5e93\u5bfc\u51fa\u4e3apython\u5bf9\u8c61\u5b9a\u4e49\uff0c\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\n\n1. \u786e\u5b9a\u8868\u7ed3\u6784\uff0c\u5f62\u6210\u5e94\u7528\u4ee3\u7801\u4e0e\u6570\u636e\u5e93\u4e4b\u95f4\u7684\u7248\u672c\u5bf9\u5e94\n2. \u4fbf\u4e8e\u7f16\u7a0b\u4e2d\u8868\u8fbe\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u800c\u5e76\u975e\u4f7f\u7528\u5b57\u7b26\u4e32\n3. SQLAlchemy\u7684\u591a\u6570\u636e\u5e93\u652f\u6301\uff0c\u5f3a\u5927\u7684\u8868\u8fbe\u80fd\u529b\n\n```bash\npip install sqlacodegen\nsqlacodegen postgresql+psycopg2://postgres:123456@127.0.0.1/testdb --outfile models.py\n```\n\n\u751f\u6210\u7684models.py\u5185\u5bb9\u5927\u81f4\u5982\u4e0b\uff1a\n\n```python\n# coding=utf-8\n\nfrom __future__ import absolute_import\n\nfrom sqlalchemy import String\nfrom sqlalchemy.ext.declarative import declarative_base\n\nBase = declarative_base()\nmetadata = Base.metadata\n\nclass User(Base):\n    __tablename__ = 'user'\n\n    id = Column(String(36), primary_key=True)\n    name = Column(String(63), nullable=False)\n```\n\n\u5f53\u7136\u8fd9\u4e2a\u5bfc\u51fa\u64cd\u4f5c\u5982\u679c\u5728\u8db3\u591f\u719f\u6089\u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u624b\u52a8\u7f16\u5199\uff0c\u4e0d\u9700\u8981\u5bfc\u51fa\u5de5\u5177\n\n#### \u6570\u636e\u5e93\u6a21\u578b\u7c7b\u7684\u9b54\u6cd5\u7c7b\n\n\u5c06\u5bfc\u51fa\u7684\u6587\u4ef6\u8868\u5185\u5bb9\u590d\u5236\u5230cms.db.models.py\u4e2d\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u8868\u8bbe\u7f6eDictBase\u57fa\u7c7b\u7ee7\u627f\n\nmodels.py\u6587\u4ef6\u4e2d\uff0c\u6bcf\u4e2a\u8868\u5bf9\u5e94\u7740\u4e00\u4e2aclass\uff0c\u8fd9\u4f7f\u5f97\u6211\u4eec\u5728\u5f00\u53d1\u4e1a\u52a1\u5904\u7406\u4ee3\u7801\u65f6\u80fd\u660e\u786e\u8868\u5bf9\u5e94\u7684\u5904\u7406\uff0c\u4f46\u5728\u63a5\u53e3\u8fd4\u56de\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u8f6c\u6362\u4e3ajson\uff0c\u56e0\u800c\uff0c\u6211\u4eec\u9700\u8981\u4e3amodels.py\u4e2d\u7684\u6bcf\u4e2a\u8868\u7684\u7c7b\u589e\u52a0\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\uff0c\u4ee5\u4fbf\u4e3a\u5b83\u63d0\u4f9b\u8f6c\u6362\u7684\u652f\u6301\n\n\u5904\u7406\u5b8c\u540e\u7684models.py\u6587\u4ef6\u5982\u4e0b\uff1a\n\n```python\n# coding=utf-8\n\nfrom __future__ import absolute_import\n\nfrom sqlalchemy import String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom talos.db.dictbase import DictBase\n\nBase = declarative_base()\nmetadata = Base.metadata\n\nclass User(Base, DictBase):\n    __tablename__ = 'user'\n\n    id = Column(String(36), primary_key=True)\n    name = Column(String(63), nullable=False)\n\nclass UserPhoneNum(Base, DictBase):\n    __tablename__ = 'user_phone'\n\n    user_id = Column(String(63), nullable=False, primary_key=True)\n    phone = Column(String(63), nullable=False, primary_key=True)\n    description = Column(String(255), nullable=True)\n```\n\n\u7ee7\u627f\u4e86\u8fd9\u4e2a\u7c7b\u4e4b\u540e\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u8f6c\u6362\u63a5\u53e3json\u7684\u80fd\u529b\uff0c\u8fd8\u63d0\u4f9b\u4e86\u5b57\u6bb5\u63d0\u53d6\u7684\u80fd\u529b\uff0c\u6b64\u5904\u6ca1\u6709\u6307\u5b9a\u5b57\u6bb5\u63d0\u53d6\uff0c\u5219\u610f\u5473\u7740\u9ed8\u8ba4\u4f7f\u7528\u8868\u7684\u6240\u6709\u5b57\u6bb5\uff08list\u548c\u88ab\u5176\u4ed6\u8868\u5916\u952e\u5f15\u7528\u65f6\u9ed8\u8ba4\u4e0d\u5305\u542b\u5916\u952e\u5b57\u6bb5\uff09\uff0c\u5982\u679c\u9700\u8981\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff0c\u53ef\u4ee5\u5728\u7c7b\u4e2d\u914d\u7f6e\u5b57\u6bb5\u63d0\u53d6\uff1a\n\n```python\nclass User(Base, DictBase):\n    __tablename__ = 'user'\n    # \u7528\u4e8e\u63a7\u5236\u83b7\u53d6\u5217\u8868\u65f6\u5b57\u6bb5\u8fd4\u56de\n    attributes = ['id', 'name']\n    # \u7528\u4e8e\u63a7\u5236\u83b7\u53d6\u8be6\u60c5\u65f6\u5b57\u6bb5\u8fd4\u56de\n    detail_attributes = attributes\n    # \u7528\u4e8e\u63a7\u5236\u88ab\u5176\u4ed6\u8d44\u6e90\u5916\u952e\u5f15\u7528\u65f6\u5b57\u6bb5\u8fd4\u56de\n    summary_attributes = ['name']\n\n    id = Column(String(36), primary_key=True)\n    name = Column(String(63), nullable=False)\n```\n**\u6307\u5b9aattributes/detail_attributes/summary_attributes\u662f\u975e\u5e38\u6709\u6548\u7684\u5b57\u6bb5\u8fd4\u56de\u63a7\u5236\u624b\u6bb5\uff0c\u51cf\u5c11\u8fd4\u56de\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u51cf\u5c11\u670d\u52a1\u5668\u4f20\u8f93\u7684\u538b\u529b\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u5982\u679c\u6b64\u5904\u6709\u5916\u952erelationship\u65f6\uff0c\u6307\u5b9a\u5404attributes\u5c5e\u6027\u8fd8\u53ef\u4ee5\u6709\u6548\u7684\u63a7\u5236\u6570\u636e\u5e93\u5bf9\u4e8e\u5916\u952e\u7684\u67e5\u8be2\u6548\u7387** [^ 9]\n\n> \u6269\u5c55\u9605\u8bfb\uff1a\n>\n> \u4e00\u4e2a\u8f83\u4e3a\u5e38\u89c1\u7684\u573a\u666f\uff0c\u67d0\u7cfb\u7edf\u8bbe\u8ba1\u6709\u6570\u636e\u5e93\u8868\u5982\u4e0b\uff1a\n> User -> PhoneNum/Addresses, \u4e00\u4e2a\u7528\u6237\u5bf9\u5e94\u591a\u4e2a\u7535\u8bdd\u53f7\u7801\u4ee5\u53ca\u591a\u4e2a\u5730\u5740\n> Tag\uff0c\u6807\u7b7e\u8868\uff0c\u4e00\u4e2a\u8d44\u6e90\u53ef\u5bf9\u5e94\u591a\u4e2a\u6807\u7b7e\n> Region -> Tag\uff0c\u5730\u57df\u8868\uff0c\u4e00\u4e2a\u5730\u57df\u6709\u591a\u4e2a\u6807\u7b7e\n> Resource -> Region/Tag\uff0c\u8d44\u6e90\u8868\uff0c\u4e00\u4e2a\u8d44\u6e90\u5c5e\u4e8e\u4e00\u4e2a\u5730\u57df\uff0c\u4e00\u4e2a\u8d44\u6e90\u6709\u591a\u4e2a\u6807\u7b7e\n>\n> \u7528models\u8868\u793a\u5927\u81f4\u5982\u4e0b\uff1a\n>\n> ```python\n> class Address(Base, DictBase):\n>     __tablename__ = 'address'\n>     attributes = ['id', 'location', 'user_id']\n>     detail_attributes = attributes\n>     summary_attributes = ['location']\n> \n>     id = Column(String(36), primary_key=True)\n>     location = Column(String(255), nullable=False)\n>     user_id = Column(ForeignKey(u'user.id'), nullable=False)\n> \n>     user = relationship(u'User')\n>     \n> class PhoneNum(Base, DictBase):\n>     __tablename__ = 'phone'\n>     attributes = ['id', 'number', 'user_id']\n>     detail_attributes = attributes\n>     summary_attributes = ['number']\n> \n>     id = Column(String(36), primary_key=True)\n>     number = Column(String(255), nullable=False)\n>     user_id = Column(ForeignKey(u'user.id'), nullable=False)\n> \n>     user = relationship(u'User')\n>     \n> class User(Base, DictBase):\n>     __tablename__ = 'user'\n>     attributes = ['id', 'name', 'addresses', 'phonenums']\n>     detail_attributes = attributes\n>     summary_attributes = ['name']\n> \n>     id = Column(String(36), primary_key=True)\n>     name = Column(String(255), nullable=False)\n>     \n>     addresses = relationship(u'Address', back_populates=u'user', lazy=False, uselist=True, viewonly=True)\n>     phonenums = relationship(u'PhoneNum', back_populates=u'user', lazy=False, uselist=True, viewonly=True)\n>     \n> class Tag(Base, DictBase):\n>     __tablename__ = 'tag'\n>     attributes = ['id', 'res_id', 'key', 'value']\n>     detail_attributes = attributes\n>     summary_attributes = ['key', 'value']\n> \n>     id = Column(String(36), primary_key=True)\n>     res_id = Column(String(36), nullable=False)\n>     key = Column(String(36), nullable=False)\n>     value = Column(String(36), nullable=False)\n> \n> class Region(Base, DictBase):\n>     __tablename__ = 'region'\n>     attributes = ['id', 'name', 'desc', 'tags', 'user_id', 'user']\n>     detail_attributes = attributes\n>     summary_attributes = ['name', 'desc']\n> \n>     id = Column(String(36), primary_key=True)\n>     name = Column(String(255), nullable=False)\n>     desc = Column(String(255), nullable=True)\n>     user_id = Column(ForeignKey(u'user.id'), nullable=True)\n>     user = relationship(u'User')\n> \n>     tags = relationship(u'Tag', primaryjoin='foreign(Region.id) == Tag.res_id',\n>         lazy=False, viewonly=True, uselist=True)\n> \n> class Resource(Base, DictBase):\n>     __tablename__ = 'resource'\n>     attributes = ['id', 'name', 'desc', 'tags', 'user_id', 'user', 'region_id', 'region']\n>     detail_attributes = attributes\n>     summary_attributes = ['name', 'desc']\n> \n>     id = Column(String(36), primary_key=True)\n>     name = Column(String(255), nullable=False)\n>     desc = Column(String(255), nullable=True)\n>     user_id = Column(ForeignKey(u'user.id'), nullable=True)\n>     region_id = Column(ForeignKey(u'region.id'), nullable=True)\n>     user = relationship(u'User')\n>     region = relationship(u'region')\n> \n>     tags = relationship(u'Tag', primaryjoin='foreign(Resource.id) == Tag.res_id',\n>         lazy=False, viewonly=True, uselist=True)\n> ```\n>\n> \u5982\u4e0a\uff0cuser\u4f5c\u4e3a\u6700\u5e95\u5c42\u7684\u8d44\u6e90\uff0c\u88abregion\u5f15\u7528\uff0c\u800cregion\u53c8\u88abresource\u4f7f\u7528\uff0c\u5bfc\u81f4\u5c42\u7ea7\u5d4c\u5957\u6781\u591a\uff0c\u5728SQLAlchmey\u4e2d\uff0c\u5982\u679c\u5e0c\u671b\u5feb\u901f\u67e5\u8be2\u4e00\u4e2a\u5217\u8868\u8d44\u6e90\uff0c\u4e00\u822c\u800c\u8a00\u6211\u4eec\u4f1a\u5728relationship\u4e2d\u52a0\u4e0alazy=False\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8ba9\u4fe1\u606f\u5728\u4e00\u6b21sql\u67e5\u8be2\u4e2d\u52a0\u8f7d\u51fa\u6765\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21\u8bbf\u95ee\u5916\u952e\u5c5e\u6027\u518d\u53d1\u8d77\u4e00\u6b21\u67e5\u8be2\u3002\u95ee\u9898\u5728\u4e8e\uff0clazy=False\u65f6sql\u88ab\u7ec4\u5408\u4e3a\u4e00\u4e2aSQL\u8bed\u53e5\uff0crelationship\u6bcf\u7ea7\u5d4c\u5957\u4f1a\u88ab\u5c55\u5f00\uff0c\u5b9e\u9645\u6570\u636e\u5e93\u67e5\u8be2\u7ed3\u679c\u5c06\u662f\u4e58\u6570\u7ea7\uff1anum_resource\\*num_resource_user\\*num_resource_user_address\\*num_resource_user_phonenum\\*num_region\\*num_region_user_address\\*num_region_user_phonenum...\n>\n> \u8f83\u5dee\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u56de\u5bfc\u81f4resource\u8868\u53ea\u67091k\u6570\u91cf\u7ea7\uff0c\u800c\u672c\u6b21\u67e5\u8be2\u7ed3\u679c\u5374\u662f1000 \\* 1k\u7ea7\n> \u901a\u5e38\u6211\u4eec\u52a0\u8f7dresource\u65f6\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981region.user\u3001region.tags\u3001user.addresses\u3001user.phonenums\u7b49\u4fe1\u606f\uff0c\u901a\u8fc7\u6307\u5b9asummary_attributes\u6765\u9632\u6b62\u6570\u636e\u8fc7\u8f7d\uff08\u9700\u8981\u542f\u7528CONF.dbcrud.dynamic_relationship\uff0c\u9ed8\u8ba4\u542f\u7528\uff09\uff0c\u8fd9\u6837\u6211\u4eec\u5f97\u5230\u7684SQL\u67e5\u8be2\u662f\u975e\u5e38\u5feb\u901f\u7684\uff0c\u7ed3\u679c\u96c6\u4e5f\u4fdd\u6301\u548cresource\u4e00\u4e2a\u6570\u91cf\u7ea7\n\n\n\n#### \u589e\u5220\u6539\u67e5\u7684\u8d44\u6e90\u7c7b\n\n\u5728cms.db\u4e2d\u65b0\u589eresource.py\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a\n\n```python\n# coding=utf-8\n\nfrom __future__ import absolute_import\n\nfrom talos.db.crud import ResourceBase\n\nfrom cms.db import models\n\n\nclass User(ResourceBase):\n    orm_meta = models.User\n    _primary_keys = 'id'\n\n\nclass UserPhoneNum(ResourceBase):\n    orm_meta = models.UserPhoneNum\n    _primary_keys = ('user_id', 'phone')\n```\n\n\u5b8c\u6210\u6b64\u9879\u5b9a\u4e49\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528resource.User\u6765\u8fdb\u884c\u7528\u6237\u8868\u7684\u589e\u5220\u6539\u67e5\uff0c\u800c\u8fd9\u4e9b\u529f\u80fd\u90fd\u662fResourceBase\u9ed8\u8ba4\u63d0\u4f9b\u7684\u80fd\u529b\n\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6b64\u5904\u5b9a\u4e49\u4e86orm_meta\u548c_primary_keys\u4e24\u4e2a\u7c7b\u5c5e\u6027\uff0c\u9664\u6b64\u4ee5\u5916\u8fd8\u6709\u66f4\u591a\u7c7b\u5c5e\u6027\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u914d\u7f6e\u5e94\u7528\u903b\u8f91\n\n| \u7c7b\u5c5e\u6027                          | \u9ed8\u8ba4\u503c | \u63cf\u8ff0                                                         |\n| ------------------------------- | ------ | ------------------------------------------------------------ |\n| orm_meta                        | None   | \u8d44\u6e90\u64cd\u4f5c\u7684SQLAlchmey Model\u7c7b[\u8868]                             |\n| orm_pool                        | None   | \u6307\u5b9a\u8d44\u6e90\u4f7f\u7528\u7684\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff0c\u9ed8\u8ba4\u4f7f\u7528defaultPool\uff0c\u5b9e\u4f8b\u521d\u59cb\u5316\u53c2\u6570\u4f18\u5148\u4e8e\u672c\u53c2\u6570 |\n| _dynamic_relationship           | None   | \u662f\u5426\u6839\u636eModel\u4e2d\u5b9a\u4e49\u7684attribute\u81ea\u52a8\u6539\u53d8load\u7b56\u7565\uff0c\u4e0d\u6307\u5b9a\u5219\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4(True) |\n| _dynamic_load_method            | None   | \u542f\u7528\u52a8\u6001\u5916\u952e\u52a0\u8f7d\u7b56\u7565\u65f6\uff0c\u52a8\u6001\u52a0\u8f7d\u5916\u952e\u7684\u65b9\u5f0f\uff0c\u9ed8\u8ba4None\uff0c\u5373\u4f7f\u7528\u5168\u5c40\u914d\u7f6e\uff08\u5168\u5c40\u914d\u7f6e\u9ed8\u8ba4joinedload\uff09 <br/> joinedload \u7b80\u4fbf\uff0c\u5728\u5e38\u7528\u5c0f\u578b\u67e5\u8be2\u4e2d\u54cd\u5e94\u4f18\u4e8esubqueryload  <br/>subqueryload \u5728\u5927\u578b\u590d\u6742(\u591a\u5c42\u5916\u952e)\u67e5\u8be2\u4e2d\u54cd\u5e94\u4f18\u4e8ejoinedload |\n| _detail_relationship_as_summary | None   | \u8d44\u6e90get\u83b7\u53d6\u5230\u7684\u7b2c\u4e00\u5c42\u7ea7\u5916\u952e\u5b57\u6bb5\u7ea7\u522b\u662fsummary\u7ea7\uff0c\u5219\u8bbe\u7f6e\u4e3aTrue\uff0c\u5426\u5219\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4(False) |\n| _primary_keys                   | 'id'   | \u8868\u5bf9\u5e94\u7684\u4e3b\u952e\u5217\uff0c\u5355\u4e2a\u4e3b\u952e\u65f6\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\uff0c\u591a\u4e2a\u8054\u5408\u4e3b\u952e\u65f6\u4e3a\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u8fd9\u4e2a\u662f\u4e1a\u52a1\u4e3b\u952e\uff0c\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u5b9a\u4e49\u548c\u6570\u636e\u5e93\u4e3b\u952e\u4e0d\u4e00\u6837\u7684\u5b57\u6bb5\uff08\u524d\u63d0\u662f\u8981\u786e\u5b9a\u8fd9\u4e9b\u5b57\u6bb5\u662f\u6709\u552f\u4e00\u6027\u7684\uff09 |\n| _default_filter                 | {}     | \u9ed8\u8ba4\u8fc7\u6ee4\u67e5\u8be2\uff0c\u5e38\u7528\u4e8e\u8f6f\u5220\u9664\uff0c\u6bd4\u5982\u6570\u636e\u5220\u9664\u6211\u4eec\u5728\u6570\u636e\u5e93\u5b57\u6bb5\u4e2d\u6807\u8bb0\u4e3ais_deleted=True\uff0c\u90a3\u4e48\u6211\u4eec\u518d\u6b21list\uff0cget\uff0cupdate\uff0cdelete\u7684\u65f6\u5019\u9700\u8981\u9ed8\u8ba4\u8fc7\u6ee4\u8fd9\u4e9b\u6570\u636e\u7684\uff0c\u7b49\u4ef7\u4e8e\u9ed8\u8ba4\u5e26\u6709where is_delete = True |\n| _default_order                  | []     | \u9ed8\u8ba4\u6392\u5e8f\uff0c\u67e5\u8be2\u8d44\u6e90\u65f6\u88ab\u5e94\u7528\uff0c('name', '+id', '-status'), +\u8868\u793a\u9012\u589e\uff0c-\u8868\u793a\u9012\u51cf\uff0c\u9ed8\u8ba4\u9012\u589e |\n| _validate                       | []     | \u6570\u636e\u8f93\u5165\u6821\u9a8c\u89c4\u5219\uff0c\u4e3atalos.db.crud.ColumnValidator\u5bf9\u8c61\u5217\u8868    |\n\n\u4e00\u4e2avalidate\u793a\u4f8b\u5982\u4e0b\uff1a\n\n```python\n   ColumnValidator(field='id',\n                   validate_on=['create:M']),\n   ColumnValidator(field='name',\n                   rule='1, 63',\n                   rule_type='length',\n                   validate_on=['create:M', 'update:O']),\n   ColumnValidator(field='enabled',\n                   rule=validator.InValidator(['true', 'false', 'True', 'False'])\n                   converter=converter.BooleanConverter(),\n                   validate_on=['create:M', 'update:O']),\n```\n\nColumnValidator\u53ef\u4ee5\u5b9a\u4e49\u7684\u5c5e\u6027\u5982\u4e0b\uff1a\n\n| \u5c5e\u6027         | \u7c7b\u578b                                           | \u63cf\u8ff0                                                         |\n| ------------ | ---------------------------------------------- | ------------------------------------------------------------ |\n| field        | \u5b57\u7b26\u4e32                                         | \u5b57\u6bb5\u540d\u79f0                                                     |\n| rule         | validator\u5bf9\u8c61 \u6216 \u6821\u9a8c\u7c7b\u578brule_type\u6240\u9700\u8981\u7684\u53c2\u6570 | \u5f53rule\u662fvalidator\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0c\u5ffd\u7565 rule_type\u53c2\u6570              |\n| rule_type    | \u5b57\u7b26\u4e32                                         | \u7528\u4e8e\u5feb\u901f\u5b9a\u4e49\u6821\u9a8c\u89c4\u5219\uff0c\u9ed8\u8ba4regex\uff0c\u53ef\u9009\u7c7b\u578b\u6709callback\uff0cregex\uff0cemail\uff0cphone\uff0curl\uff0clength\uff0cin\uff0cnotin\uff0cinteger\uff0cfloat\uff0ctype |\n| validate_on  | \u6570\u7ec4                                           | \u6821\u9a8c\u573a\u666f\u548c\u5fc5\u8981\u6027, eg. ['create: M', 'update:O']\uff0c\u8868\u793a\u6b64\u5b57\u6bb5\u5728create\u51fd\u6570\u4e2d\u4e3a\u5fc5\u8981\u5b57\u6bb5\uff0cupdate\u51fd\u6570\u4e2d\u4e3a\u53ef\u9009\u5b57\u6bb5\uff0c\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a['*:M']\uff0c\u8868\u793a\u4efb\u4f55\u60c5\u51b5\u4e0b\u90fd\u662f\u5fc5\u8981\u5b57\u6bb5(**\u9ed8\u8ba4**) |\n| error_msg    | \u5b57\u7b26\u4e32                                         | \u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff0c\u9ed8\u8ba4\u4e3a'%(result)s'\uff0c\u5373validator\u8fd4\u56de\u7684\u62a5\u9519\u4fe1\u606f\uff0c\u7528\u6237\u53ef\u4ee5\u56fa\u5b9a\u5b57\u7b26\u4e32\u6216\u4f7f\u7528\u5e26\u6709%(result)s\u7684\u6a21\u677f\u5b57\u7b26\u4e32 |\n| converter    | converter\u5bf9\u8c61                                  | \u6570\u636e\u8f6c\u6362\u5668\uff0c\u5f53\u6570\u636e\u88ab\u6821\u9a8c\u540e\uff0c\u53ef\u80fd\u9700\u8981\u8f6c\u6362\u4e3a\u56fa\u5b9a\u7c7b\u578b\u540e\u624d\u80fd\u8fdb\u884c\u7f16\u7a0b\u5904\u7406\uff0c\u8f6c\u6362\u5668\u53ef\u4ee5\u4e3a\u6b64\u63d0\u4f9b\u81ea\u52a8\u8f6c\u6362\uff0c\u6bd4\u5982\u7528\u6237\u8f93\u5165\u4e3a'2018-01-01 01:01:01'\u5b57\u7b26\u4e32\u65f6\u95f4\uff0c\u7a0b\u5e8f\u9700\u8981\u4e3aDatetime\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528DateTimeConverter\u8fdb\u884c\u8f6c\u6362 |\n| orm_required | \u5e03\u5c14\u503c                                         | \u63a7\u5236\u6b64\u5b57\u6bb5\u662f\u5426\u4f1a\u88ab\u4f20\u9012\u5230\u6570\u636e\u5e93SQL\u4e2d\u53bb                        |\n| aliases      | \u6570\u7ec4                                           | \u5b57\u6bb5\u7684\u522b\u540d\uff0c\u6bd4\u5982\u63a5\u53e3\u5347\u7ea7\u540e\u4e3a\u4fdd\u7559\u524d\u5411\u517c\u5bb9\uff0c\u8001\u5b57\u6bb5\u53ef\u4ee5\u4f5c\u4e3a\u522b\u540d\u6307\u5411\u5230\u65b0\u540d\u79f0\u4e0a |\n| nullable     | \u5e03\u5c14\u503c                                         | \u63a7\u5236\u6b64\u5b57\u6bb5\u662f\u5426\u53ef\u4ee5\u4e3aNone\uff0c**\u9ed8\u8ba4False**                      |\n\nCRUD\u4f7f\u7528\u65b9\u5f0f:\n\n```python\nresource.User().create({'id': '1', 'name': 'test'})\nresource.User().list()\nresource.User().list({'name': 'test'})\nresource.User().list({'name': {'ilike': 'na'}}, offset=0, limit=5)\nresource.User().count()\nresource.User().count({'name': 'test'})\nresource.User().count({'name': {'ilike': 'na'}})\nresource.User().get('1')\nresource.User().update('1', {'name': 'test1'})\nresource.User().delete('1')\nresource.UserPhoneNum().get(('1', '10086'))\nresource.UserPhoneNum().delete(('1', '10086'))\n```\n\n\u5185\u90e8\u67e5\u8be2\u901a\u8fc7\u7ec4\u88c5dict\u6765\u5b9e\u73b0\u8fc7\u6ee4\u6761\u4ef6\uff0cfilter\u5728\u8868\u8fbe == \u6216 in \u5217\u8868\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e00\u7ea7\u5b57\u6bb5\u5373\u53ef\uff0c\u5982\nname\u7b49\u4e8etest\uff1a{'name': 'test'}\nid\u57281,2,3,4\u5185\uff1a{'id': ['1', '2', '3', '4']}\n\n\u66f4\u590d\u6742\u7684\u67e5\u8be2\u9700\u8981\u901a\u8fc7\u5d4c\u5957dict\u6765\u5b9e\u73b0[^ 5]\uff1a\n- \u7b80\u5355\u7ec4\u5408\uff1a{'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef61': '\u503c', '\u8fc7\u6ee4\u6761\u4ef62': '\u503c'}}\n\n- \u7b80\u5355\\$or+\u7ec4\u5408\u67e5\u8be2\uff1a{'\\$or': [{'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef6': '\u503c'}}, {'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef61': '\u503c', '\u8fc7\u6ee4\u6761\u4ef62': '\u503c'}}]}\n\n- \u7b80\u5355\\$and+\u7ec4\u5408\u67e5\u8be2\uff1a{'\\$and': [{'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef6': '\u503c'}}, {'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef61': '\u503c', '\u8fc7\u6ee4\u6761\u4ef62': '\u503c'}}]}\n\n- \u590d\u6742\\$and+\\$or+\u7ec4\u5408\u67e5\u8be2\uff1a\n  {'\\$and': [\n  \u200b               {'\\$or': [{'\u5b57\u6bb5\u540d\u79f0': '\u503c'}, {'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef61': '\u503c', '\u8fc7\u6ee4\u6761\u4ef62': '\u503c'}}]}, \n  \u200b               {'\u5b57\u6bb5\u540d\u79f0': {'\u8fc7\u6ee4\u6761\u4ef61': '\u503c', '\u8fc7\u6ee4\u6761\u4ef62': '\u503c'}}\n  ]}\n\n- relationship\u590d\u6742\u67e5\u8be2(>=v1.3.6)\uff1a\n\n  \u5047\u5b9a\u6709User(\u7528\u6237)\uff0cArticle(\u6587\u7ae0)\uff0cComment(\u8bc4\u8bba/\u7559\u8a00)\u8868\uff0cArticle.owner\u5f15\u7528User\uff0c Article.comments\u5f15\u7528Comment\uff0cComment.user\u5f15\u7528User\n\n  \u67e5\u8be2A\u7528\u6237\u53d1\u8868\u7684\u6587\u7ae0\u4e2d\uff0c\u5b58\u5728B\u7528\u6237\u7684\u8bc4\u8bba\uff0c\u4e14\u8bc4\u8bba\u5185\u5bb9\u5305\u542b\u201d\u4f60\u597d\u201c\n\n  Article.list({'owner_id': 'user_a', 'comments': {'content': {'ilike': '\u4f60\u597d', 'user': {'id': 'user_b'}}}})\n\n| \u8fc7\u6ee4\u6761\u4ef6 | \u503c\u7c7b\u578b          | \u542b\u4e49                                                           |\n| -------- | --------------- | -------------------------------------------------------------- |\n| like      | string         | \u6a21\u7cca\u67e5\u8be2\uff0c\u5305\u542b\u6761\u4ef6                                          |\n| ilike     | string         | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                             |\n| starts    | string         | \u6a21\u7cca\u67e5\u8be2\uff0c\u4ee5xxxx\u5f00\u5934                                           |\n| istarts   | string         | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                             |\n| ends      | string         | \u6a21\u7cca\u67e5\u8be2\uff0c\u4ee5xxxx\u7ed3\u5c3e                                           |\n| iends     | string         | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                             |\n| in        | list           | \u7cbe\u786e\u67e5\u8be2\uff0c\u6761\u4ef6\u5728\u5217\u8868\u4e2d                                         |\n| nin       | list           | \u7cbe\u786e\u67e5\u8be2\uff0c\u6761\u4ef6\u4e0d\u5728\u5217\u8868\u4e2d                                       |\n| eq        | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u7b49\u4e8e                                                           |\n| ne        | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u4e0d\u7b49\u4e8e                                                         |\n| lt        | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u5c0f\u4e8e                                                           |\n| lte       | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u5c0f\u4e8e\u7b49\u4e8e                                                       |\n| gt        | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u5927\u4e8e                                                           |\n| gte       | \u6839\u636e\u5b57\u6bb5\u7c7b\u578b   | \u5927\u4e8e\u7b49\u4e8e                                                       |\n| nlike     | string         | \u6a21\u7cca\u67e5\u8be2\uff0c\u4e0d\u5305\u542b                                               |\n| nilike    | string         | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                             |\n| null      | \u4efb\u610f           | \u662fNULL\uff0c\u7b49\u540c\u4e8e{'eq': None}\uff0cnull\u4e3b\u8981\u63d0\u4f9bHTTP API\u4e2d\u4f7f\u7528                   |\n| nnull     | \u4efb\u610f           | \u4e0d\u662fNULL\uff0c\u7b49\u540c\u4e8e{'ne': None}\uff0cnnull\u4e3b\u8981\u63d0\u4f9bHTTP API\u4e2d\u4f7f\u7528                  |\n| hasany       | string/list[string] | *JSONB\u4e13\u7528*   \u5305\u542b\u4efb\u610fkey\uff0c\u5982['a','b', 'c'] hasany ['a','d'] |\n| hasall       | string/list[string] | *JSONB\u4e13\u7528*   \u5305\u542b\u6240\u6709key\uff0c\u5982['a','b', 'c'] hasall ['a','c'] |\n| within       | list/dict | *JSONB\u4e13\u7528*   \u88ab\u6307\u5b9ajson\u5305\u542b\u5728\u5185                             |\n| nwithin      | list/dict | *JSONB\u4e13\u7528*   \u4e0d\u88ab\u6307\u5b9ajson\u5305\u542b\u5728\u5185                           |\n| include      | list/dict | *JSONB\u4e13\u7528*   \u5305\u542b\u6307\u5b9a\u7684json                                 |\n| ninclude     | list/dict | *JSONB\u4e13\u7528*   \u4e0d\u5305\u542b\u6307\u5b9a\u7684json                               |\n\n\n\u8fc7\u6ee4\u6761\u4ef6\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u751f\u6210\u4e0d\u540c\u7684\u67e5\u8be2\u8bed\u53e5\uff0cvarchar\u7c7b\u578b\u7684in\u662f IN ('1', '2') , inet\u7c7b\u578b\u7684in\u662f<<=cidr\n\n\u4e00\u822c\u7c7b\u578b\u7684eq\u662fcol='value'\uff0cbool\u7c7b\u578b\u7684eq\u662fcol is TRUE\uff0c\u8be6\u89c1talos.db.filter_wrapper\n\n#### \u4e1a\u52a1api\u63a7\u5236\u7c7b\n\napi\u7684\u6a21\u5757\u4e3a\uff1acms.apps.user.api\n\nresource\u5904\u7406\u7684\u662fDB\u7684CRUD\u64cd\u4f5c\uff0c\u4f46\u5f80\u5f80\u4e1a\u52a1\u7c7b\u4ee3\u7801\u9700\u8981\u6709\u590d\u6742\u7684\u5904\u7406\u903b\u8f91\uff0c\u5e76\u4e14\u6d89\u53ca\u591a\u4e2aresource\u7c7b\u7684\u76f8\u4e92\u64cd\u4f5c\uff0c\u56e0\u6b64\u9700\u8981\u5c01\u88c5api\u5c42\u6765\u5904\u7406\u6b64\u7c7b\u903b\u8f91\uff0c\u6b64\u5904\u6211\u4eec\u793a\u4f8b\u6ca1\u6709\u590d\u6742\u903b\u8f91\uff0c\u76f4\u63a5\u6cbf\u7528\u5b9a\u4e49\u5373\u53ef\n\n```python\nUser = resource.User\nUserPhoneNum = resource.UserPhoneNum\n```\n\n#### Collection\u548cItem Controller\n\nController\u6a21\u5757\u4e3a\uff1acms.apps.user.controller\n\nController\u88ab\u8bbe\u8ba1\u5206\u7c7b\u4e3aCollection\u548cItem 2\u79cd\uff0c\u5206\u522b\u5bf9\u5e94RESTFul\u7684URL\u64cd\u4f5c\uff0c\u6211\u4eec\u5148\u770b\u4e00\u4e2a\u5e38\u89c1\u7684URL\u8bbe\u8ba1\u548c\u64cd\u4f5c\n\n```bash\nPOST   /v1/users    \u521b\u5efa\u7528\u6237\nGET    /v1/users    \u67e5\u8be2\u7528\u6237\u5217\u8868\nPATCH  /v1/users/1  \u66f4\u65b0\u7528\u62371\u7684\u4fe1\u606f\nDELETE /v1/users/1  \u5220\u9664\u7528\u62371\u7684\u4fe1\u606f\nGET    /v1/users/1  \u83b7\u53d6\u7528\u62371\u7684\u8be6\u60c5\n```\n\n\u6839\u636e\u5f53\u524d\u7684URL\u89c4\u5f8b\u6211\u4eec\u53ef\u4ee5\u5427\u521b\u5efa\u548c\u67e5\u8be2\u5217\u8868\u4f5c\u4e3a\u4e00\u4e2a\u5c01\u88c5\uff08CollectionController\uff09\uff0c\u800c\u66f4\u65b0\uff0c\u5220\u9664\uff0c\u83b7\u53d6\u8be6\u60c5\u4f5c\u4e3a\u4e00\u4e2a\u5c01\u88c5\uff08ItemController\uff09\uff0c\u800c\u540c\u6837\u7684\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u6807\u51c6\u64cd\u4f5c\uff0ctalos\u540c\u6837\u63d0\u4f9b\u4e86\u9b54\u6cd5\u822c\u7684\u5b9a\u4e49\n\n```python\nclass CollectionUser(CollectionController):\n    name = 'cms.users'\n    resource = api.User\n\nclass ItemUser(ItemController):\n    name = 'cms.user'\n    resource = api.User\n```\n\n#### route\u8def\u7531\u6620\u5c04\n\nroute\u6a21\u5757\u4e3a\uff1acms.apps.user.route\n\n\u63d0\u4f9b\u4e86Controller\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5176\u4e0eURL\u8def\u7531\u8fdb\u884c\u6620\u5c04\u624d\u80fd\u8c03\u7528\uff0croute\u6a21\u5757\u4e2d\uff0c\u5fc5\u987b\u6709add_routes\u51fd\u6570\uff0c\u6ce8\u518capp\u7684\u65f6\u5019\u4f1a\u9ed8\u8ba4\u5bfb\u627e\u8fd9\u4e2a\u51fd\u6570\u6765\u6ce8\u518c\u8def\u7531\n\n```python\ndef add_routes(api):\n    api.add_route('/v1/users', controller.CollectionUser())\n    api.add_route('/v1/users/{rid}', controller.ItemUser())\n```\n\n#### \u914d\u7f6e\u542f\u52a8\u52a0\u8f7dapp\n\n\u6211\u4eec\u5728\u5f15\u5bfc\u5f00\u59cb\u65f6\u521b\u5efa\u7684\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u5728./etc\u4e2d\uff0c\u6240\u4ee5\u6211\u4eec\u7684\u914d\u7f6e\u6587\u4ef6\u5728./etc/cms.conf\uff0c\u4fee\u6539\n\n```javascript\n...\n\"application\": {\n        \"names\": [\n            \"cms.apps.user\"]\n},\n...\n```\n\n#### \u542f\u52a8\u8c03\u8bd5\u6216\u90e8\u7f72\n\n\u5728\u6e90\u7801\u76ee\u5f55\u4e2d\u6709server\u5305\uff0c\u5176\u4e2dsimple_server\u662f\u7528\u4e8e\u5f00\u53d1\u8c03\u8bd5\u7528\uff0c\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u4e2d\u4f7f\u7528\n\npython simple_server.py\n\n#### \u6d4b\u8bd5API\n\n\u542f\u52a8\u540e\u6211\u4eec\u7684\u670d\u52a1\u5df2\u7ecf\u53ef\u4ee5\u5bf9\u5916\u8f93\u51fa\u5566\uff01\n\n\u90a3\u4e48\u6211\u4eec\u7684API\u5230\u5e95\u63d0\u4f9b\u4e86\u4ec0\u4e48\u6837\u7684\u80fd\u529b\u5462\uff1f\u6211\u4eec\u4ee5user\u4f5c\u4e3a\u793a\u4f8b\u5c55\u793a\n\n\u521b\u5efa\n\n```\nPOST /v1/users\nContent-Type: application/json;charset=UTF-8\nHost: 127.0.0.1:9002\n\n{\n    \"id\": \"1\",\n    \"name\": \"test\"\n}\n```\n\n\u67e5\u8be2\u5217\u8868\n\n```\nGET /v1/users\nHost: 127.0.0.1:9002\n\n{\n    \"count\": 1,\n    \"data\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"test\"\n        }\n    ]\n}\n```\n\n\u5173\u4e8e\u67e5\u8be2\u5217\u8868\uff0c\u6211\u4eec\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u67e5\u8be2\u80fd\u529b\uff0c\u53ef\u4ee5\u6ee1\u8db3\u5927\u90e8\u5206\u7684\u67e5\u8be2\u573a\u666f\n\n\u83b7\u53d6**\u5217\u8868(\u67e5\u8be2)\u7684\u63a5\u53e3**\u53ef\u4ee5\u4f7f\u7528Query\u53c2\u6570\u8fc7\u6ee4\uff0c\u4f7f\u7528\u8fc7\u6ee4\u5b57\u6bb5=xxx \u6216 \u5b57\u6bb5__\u67e5\u8be2\u6761\u4ef6=xxx\u65b9\u5f0f\u4f20\u9012\n\n- **\u8fc7\u6ee4\u6761\u4ef6**\n\n     eg.\n\n     ```bash\n     # \u67e5\u8be2name\u5b57\u6bb5\u7b49\u4e8eabc\n     name=abc\n     # \u67e5\u8be2name\u5b57\u6bb5\u5305\u542babc\n     name__icontains=abc\n     # \u67e5\u8be2name\u5b57\u6bb5\u5728\u5217\u8868[a, b, c]\u503c\u5185\n     name=a&name=b&name=c \n     # \u6216 \n     name__in=a&name__in=b&name__in=c\n     # \u67e5\u8be2name\u5b57\u6bb5\u5728\u5217\u8868\u503c\u5185\n     name[0]=a&name[1]=b&name[2]=c \n     # \u6216 \n     name__in[0]=a&name__in[1]=b&name__in[2]=c\n     ```\n\n     \u540c\u65f6\u652f\u6301\u5168\u62fc\u6761\u4ef6\u548c\u7f29\u5199\u6761\u4ef6\u67e5\u8be2\uff1a\n\n\n| \u5168\u62fc\u6761\u4ef6     | \u7f29\u5199\u6761\u4ef6 | \u542b\u4e49                                                         |\n| ------------ | -------- | ------------------------------------------------------------ |\n| N/A          |          | \u7cbe\u786e\u67e5\u8be2\uff0c\u5b8c\u5168\u7b49\u4e8e\u6761\u4ef6\uff0c\u5982\u679c\u591a\u4e2a\u6b64\u6761\u4ef6\u51fa\u73b0\uff0c\u5219\u8ba4\u4e3a\u6761\u4ef6\u5728\u5217\u8868\u4e2d |\n| contains     | like     | \u6a21\u7cca\u67e5\u8be2\uff0c\u5305\u542b\u6761\u4ef6                                           |\n| icontains    | ilike    | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                           |\n| startswith   | starts   | \u6a21\u7cca\u67e5\u8be2\uff0c\u4ee5xxxx\u5f00\u5934                                         |\n| istartswith  | istarts  | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                           |\n| endswith     | ends     | \u6a21\u7cca\u67e5\u8be2\uff0c\u4ee5xxxx\u7ed3\u5c3e                                         |\n| iendswith    | iends    | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                           |\n| in           | in       | \u7cbe\u786e\u67e5\u8be2\uff0c\u6761\u4ef6\u5728\u5217\u8868\u4e2d                                       |\n| notin        | nin      | \u7cbe\u786e\u67e5\u8be2\uff0c\u6761\u4ef6\u4e0d\u5728\u5217\u8868\u4e2d                                     |\n| equal        | eq       | \u7b49\u4e8e                                                         |\n| notequal     | ne       | \u4e0d\u7b49\u4e8e                                                       |\n| less         | lt       | \u5c0f\u4e8e                                                         |\n| lessequal    | lte      | \u5c0f\u4e8e\u7b49\u4e8e                                                     |\n| greater      | gt       | \u5927\u4e8e                                                         |\n| greaterequal | gte      | \u5927\u4e8e\u7b49\u4e8e                                                     |\n| excludes     | nlike    | \u6a21\u7cca\u67e5\u8be2\uff0c\u4e0d\u5305\u542b                                             |\n| iexcludes    | nilike   | \u540c\u4e0a\uff0c\u4e0d\u533a\u5206\u5927\u5c0f\u5199                                           |\n| null         | null     | \u662fNULL                                                       |\n| notnull      | nnull    | \u4e0d\u662fNULL                                                     |\n| hasany       | hasany   | *JSONB\u4e13\u7528*   \u5305\u542b\u4efb\u610fkey\uff0c\u5982['a','b', 'c'] hasany ['a','d'] |\n| hasall       | hasall   | *JSONB\u4e13\u7528*   \u5305\u542b\u6240\u6709key\uff0c\u5982['a','b', 'c'] hasall ['a','c'] |\n| within       | within   | *JSONB\u4e13\u7528*   \u88ab\u6307\u5b9ajson\u5305\u542b\u5728\u5185                             |\n| nwithin      | nwithin  | *JSONB\u4e13\u7528*   \u4e0d\u88ab\u6307\u5b9ajson\u5305\u542b\u5728\u5185                           |\n| include      | include  | *JSONB\u4e13\u7528*   \u5305\u542b\u6307\u5b9a\u7684json                                 |\n| ninclude     | ninclude | *JSONB\u4e13\u7528*   \u4e0d\u5305\u542b\u6307\u5b9a\u7684json                               |\n\n\n\n\u5b57\u6bb5\u652f\u6301\uff1a\u666e\u901acolumn\u5b57\u6bb5\u3001relationship\u5b57\u6bb5(single or list)\u3001JSONB[^ 4]\n\n\u5047\u8bbe\u6709API\u5bf9\u5e94\u5982\u4e0b\u8868\u5b57\u6bb5\n\n```python\nclass User(Base, DictBase):\n    __tablename__ = 'user'\n\n    id = Column(String(36), primary_key=True)\n    name = Column(String(36), nullable=False)\n    department_id = Column(ForeignKey(u'department.id'), nullable=False)\n    items = Column(JSONB, nullable=False)\n\n    department = relationship(u'Department', lazy=False)\n    addresses = relationship(u'Address', lazy=False, back_populates=u'user', uselist=True, viewonly=True)\n\nclass Address(Base, DictBase):\n    __tablename__ = 'address'\n\n    id = Column(String(36), primary_key=True)\n    location = Column(String(36), nullable=False)\n    user_id = Column(ForeignKey(u'user.id'), nullable=False)\n    items = Column(JSONB, nullable=False)\n\n    user = relationship(u'User', lazy=True)\n\nclass Department(Base, DictBase):\n    __tablename__ = 'department'\n\n    id = Column(String(36), primary_key=True)\n    name = Column(String(36), nullable=False)\n    user_id = Column(ForeignKey(u'user.id'), nullable=False)\n```\n\n\u53ef\u4ee5\u8fd9\u6837\u6784\u9020\u8fc7\u6ee4\u6761\u4ef6\n\n/v1/users?name=\u5c0f\u660e\n\n/v1/users?department.name=\u4e1a\u52a1\u90e8\n\n/v1/users?addresses.location__icontains=\u5e7f\u4e1c\u7701\n\n/v1/users?addresses.items.key__icontains=temp\n\n/v1/users?items.0.age=60 # items = [{\"age\": 60, \"sex\": \"male\"}, {...}]\n\n/v1/users?items.age=60 # items = {\"age\": 60, \"sex\": \"male\"}\n\n> v1.2.0  \u8d77\u4e0d\u652f\u6301\u7684column\u6216condition\u4f1a\u89e6\u53d1ResourceBase._unsupported_filter(query, idx, name, op, value)\u51fd\u6570\uff0c\u51fd\u6570\u9ed8\u8ba4\u8fd4\u56de\u53c2\u6570query\u4ee5\u5ffd\u7565\u672a\u652f\u6301\u7684\u8fc7\u6ee4(\u517c\u5bb9\u4ee5\u524d\u7248\u672c\u884c\u4e3a)\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u91cd\u8f7d\u51fd\u6570\u4ee5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u884c\u4e3a\n>\n> v1.2.2  unsupported_filter\u4f1a\u9ed8\u8ba4\u6784\u9020\u4e00\u4e2a\u7a7a\u67e5\u8be2\u96c6\uff0c\u5373\u4e0d\u652f\u6301\u7684column\u6216condition\u4f1a\u81f4\u4f7f\u8fd4\u56de\u7a7a\u7ed3\u679c\n\n\n\n\n- **\u504f\u79fb\u91cf\u4e0e\u6570\u91cf\u9650\u5236**\n\n     \u67e5\u8be2\u8fd4\u56de\u5217\u8868\u65f6\uff0c\u901a\u5e38\u9700\u8981\u6307\u5b9a\u504f\u79fb\u91cf\u4ee5\u53ca\u6570\u91cf\u9650\u5236\n\n     eg. \n\n     ```bash\n     __offset=10&__limit=20\n     ```\n\n     \u4ee3\u8868\u53d6\u504f\u79fb\u91cf10\uff0c\u9650\u523620\u6761\u7ed3\u679c\n\n- **\u6392\u5e8f**\n\n     \u6392\u5e8f\u5bf9\u67d0\u4e9b\u573a\u666f\u975e\u5e38\u91cd\u8981\uff0c\u53ef\u4ee5\u514d\u53bb\u5ba2\u6237\u7aef\u5f88\u591a\u5de5\u4f5c\u91cf\n\n     ```bash\n     __orders=name,-env_code\n     ```\n\n     \u591a\u4e2a\u5b57\u6bb5\u6392\u5e8f\u4ee5\u82f1\u6587\u9017\u53f7\u95f4\u9694\uff0c\u9ed8\u8ba4\u9012\u589e\uff0c\u82e5\u5b57\u6bb5\u524d\u9762\u6709-\u51cf\u53f7\u5219\u4ee3\u8868\u9012\u51cf\n\n     ```\n       PS\uff1a\u6211\u53ef\u4ee5\u4f7f\u7528+name\u4ee3\u8868\u9012\u589e\u5417\uff1f\n\n       \u53ef\u4ee5\uff0c\u4f46\u662fHTTP URL\u4e2d+\u53f7\u5b9e\u9645\u4e0a\u7684\u7a7a\u683c\u7684\u7f16\u7801\uff0c\u5982\u679c\u4f20\u9012__orders=+name,-env_code\uff0c\u5728HTTP\u4e2d\u5b9e\u9645\u7b49\u4ef7\u4e8e__orders=\u7a7a\u683cname,-env_code, \u65e0\u7b26\u53f7\u9ed8\u8ba4\u9012\u589e\uff0c\u56e0\u6b64\u65e0\u9700\u591a\u4f20\u9012\u4e00\u4e2a+\u53f7\uff0c\u4f20\u9012\u5b57\u6bb5\u5373\u53ef\n     ```\n\n- **\u5b57\u6bb5\u9009\u62e9**\n\n     \u63a5\u53e3\u8fd4\u56de\u4e2d\uff0c\u5982\u679c\u5b57\u6bb5\u4fe1\u606f\u592a\u591a\uff0c\u4f1a\u5bfc\u81f4\u4f20\u8f93\u7f13\u6162\uff0c\u5e76\u4e14\u9700\u8981\u5ba2\u6237\u7aef\u5360\u7528\u5927\u91cf\u5185\u5b58\u5904\u7406\n\n     ```bash\n     __fields=name,env_code\n     ```\n\n     \u53ef\u4ee5\u6307\u5b9a\u8fd4\u56de\u9700\u8981\u7684\u5b57\u6bb5\u4fe1\u606f\uff0c\u6216\u8005\u5e72\u8106\u4e0d\u6307\u5b9a\uff0c\u83b7\u53d6\u6240\u6709\u670d\u52a1\u5668\u652f\u6301\u7684\u5b57\u6bb5\n\n\n### \u8fdb\u9636\u5f00\u53d1\n\n#### \u7528\u6237\u8f93\u5165\u6821\u9a8c\n\n\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\uff0c\u4e0d\u4e00\u5b9a\u662f\u5b8c\u5168\u6b63\u786e\u7684\uff0c\u6bcf\u4e2a\u6570\u636e\u90fd\u9700\u8981\u6821\u9a8c\u540e\u624d\u80fd\u8fdb\u884c\u5b58\u50a8\u548c\u5904\u7406\uff0c\u5728\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\u8fc7\u4f7f\u7528ColumnValidator\u6765\u8fdb\u884c\u6570\u636e\u6821\u9a8c\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u89e3\u91ca\u8be6\u7ec6\u7684\u6821\u9a8c\u89c4\u5219\u548c\u884c\u4e3a\n\n1. ColumnValidator\u88ab\u9ed8\u8ba4\u96c6\u6210\u5728ResourceBase\u4e2d\uff0c\u6240\u4ee5\u4f1a\u81ea\u52a8\u8fdb\u884c\u6821\u9a8c\u5224\u65ad\n\n2. \u672a\u5b9a\u4e49_validate\u65f6\uff0c\u5c06\u4e0d\u542f\u7528\u6821\u9a8c\uff0c\u4fe1\u4efb\u6240\u6709\u8f93\u5165\u6570\u636e\n\n3. \u672a\u5b9a\u4e49\u7684\u5b57\u6bb5\u5728\u6e05\u6d17\u9636\u6bb5\u4f1a\u88ab\u5ffd\u7565\n\n4. \u6821\u9a8c\u7684\u5173\u952e\u51fd\u6570\u4e3aResourceBase.validate\n\n   ```python\n   @classmethod\n   def validate(cls, data, situation, orm_required=False, validate=True, rule=None):\n       \"\"\"\n       \u9a8c\u8bc1\u5b57\u6bb5\uff0c\u5e76\u8fd4\u56de\u6e05\u6d17\u540e\u7684\u6570\u636e\n\n       * \u5f53validate=False\uff0c\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u6821\u9a8c\uff0c\u4ec5\u8fd4\u56deORM\u9700\u8981\u6570\u636e\n       * \u5f53validate=True\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u6821\u9a8c\uff0c\u5e76\u6839\u636eorm_required\u8fd4\u56de\u5168\u90e8/ORM\u6570\u636e\n\n       :param data: \u6e05\u6d17\u524d\u7684\u6570\u636e\n       :type data: dict\n       :param situation: \u5f53\u524d\u573a\u666f\n       :type situation: string\n       :param orm_required: \u662f\u5426ORM\u9700\u8981\u7684\u6570\u636e(ORM\u5373Model\u8868\u5b9a\u4e49\u7684\u5b57\u6bb5)\n       :type orm_required: bool\n       :param validate: \u662f\u5426\u9a8c\u8bc1\u89c4\u5219\n       :type validate: bool\n       :param rule: \u89c4\u5219\u914d\u7f6e\n       :type rule: dict\n       :returns: \u8fd4\u56de\u6e05\u6d17\u540e\u7684\u6570\u636e\n       :rtype: dict\n       \"\"\"\n   ```\n\n   *validate_on\u4e3a\u4ec0\u4e48\u662f\u586b\u5199\uff1acreate:M\u6216\u8005update:M\uff0c\u56e0\u4e3avalidate\u6309\u7167\u51fd\u6570\u540d\u8fdb\u884c\u573a\u666f\u5224\u5b9a\uff0c\u5728ResourceBase.create\u51fd\u6570\u4e2d\uff0c\u9ed8\u8ba4\u5c06situation\u7ed1\u5b9a\u5728\u5f53\u524d\u51fd\u6570\uff0c\u5373 'create'\uff0cupdate\u540c\u7406\uff0c\u800cM\u4ee3\u8868\u5fc5\u9009\uff0cO\u4ee3\u8868\u53ef\u9009*\n\n5. \u5f53\u524d\u5feb\u901f\u6821\u9a8c\u89c4\u5219rule_type\u4e0d\u80fd\u6ee1\u8db3\u65f6\uff0c\u8bf7\u4f7f\u7528Validator\u5bf9\u8c61\uff0c\u5185\u7f6eValidator\u5bf9\u8c61\u4e0d\u80fd\u6ee1\u8db3\u9700\u6c42\u65f6\uff0c\u53ef\u4ee5\u5b9a\u5236\u81ea\u5df1\u7684Validator\uff0cValidator\u7684\u5b9a\u4e49\u9700\u8981\u6ee1\u8db32\u70b9\uff1a\n\n   \u4eceNullValidator\u4e2d\u7ee7\u627f\n\n   \u91cd\u5199validate\u51fd\u6570\uff0c\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u8fd4\u56deTrue\u4f5c\u4e3a\u901a\u8fc7\u6821\u9a8c\uff0c\u8fd4\u56de\u9519\u8bef\u5b57\u7b26\u4e32\u4ee3\u8868\u6821\u9a8c\u5931\u8d25\n\n6. Converter\u540c\u4e0a\n\n#### \u591a\u6570\u636e\u5e93\u652f\u6301 [^ 7]\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u53ea\u4f1a\u751f\u6210\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff1a\u5bf9\u5e94\u914d\u7f6e\u9879CONF.db.xxxx\uff0c\u82e5\u9700\u8981\u591a\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff0c\u5219\u9700\u8981\u624b\u52a8\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\n\n```\n\"dbs\": {\n    \"read_only\": {\n        \"connection\": \"sqlite:///tests/a.sqlite3\"\n    },\n    \"other_cluster\": {\n        \"connection\": \"sqlite:///tests/b.sqlite3\"\n    }\n},\n```\n\n\u4f7f\u7528\u65b9\u5f0f\u4e5f\u7b80\u5355\uff0c\u5982\u4e0b\uff0c\u751f\u6548\u4f18\u5148\u7ea7\u4e3a\uff1a\u5b9e\u4f8b\u5316\u53c2\u6570 > \u7c7b\u5c5e\u6027orm_pool > defaultPool\n\n```python\n# 1. \u5728\u7c7b\u5c5e\u6027\u4e2d\u6307\u5b9a \nclass Users(ResourceBase):\n    orm_meta = models.Users\n    orm_pool = pool.POOLS.read_only\n\n# 2. \u5b9e\u4f8b\u5316\u65f6\u6307\u5b9a\nUsers(dbpool=pool.POOLS.readonly)\n\n# 3. \u82e5\u90fd\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4f7f\u7528defaultPool\uff0c\u5373CONF.db\u914d\u7f6e\u7684\u8fde\u63a5\u6c60\n```\n\n\n\n\n#### DB Hook\u64cd\u4f5c\n\n##### \u7b80\u5355hooks\n\n\u5728db\u521b\u5efa\u4e00\u4e2a\u8bb0\u5f55\u65f6\uff0c\u5047\u8bbe\u5e0c\u671bid\u662f\u81ea\u52a8\u751f\u6210\u7684UUID\uff0c\u901a\u5e38\u8fd9\u610f\u5473\u7740\u6211\u4eec\u4e0d\u5f97\u4e0d\u91cd\u5199create\u51fd\u6570\uff1a\n\n```python\nclass User(ResourceBase):\n    orm_meta = models.User\n    _primary_keys = 'id'\n\n    def create(self, resource, validate=True, detail=True):\n        resource['id'] = uuid.uuid4().hex\n        super(User, self).create(resource, validate=validate, detail=validate)\n```\n\n\u8fd9\u6837\u7684\u64cd\u4f5c\u5bf9\u4e8e\u6211\u4eec\u800c\u8a00\u662f\u5f88\u7b28\u91cd\u7684\uff0c\u751a\u81f3create\u7684\u5b9e\u73b0\u6bd4\u8f83\u590d\u6742\uff0c\u8ba9\u6211\u4eec\u4e0d\u5e0c\u671b\u5230create\u91cc\u9762\u53bb\u52a0\u8fd9\u4e9b\u4e0d\u662f\u90a3\u4e48\u5173\u952e\u7684\u4ee3\u7801\uff0c\u5bf9\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\uff0ctalos\u5206\u6210\u4e862\u79cd\u573a\u666f\uff0c_before_create, _addtional_create\uff0c\u6839\u636e\u540d\u79f0\u6211\u4eec\u80fd\u77e5\u9053\uff0c\u5b83\u4eec\u5206\u522b\u4ee3\u8868\n\ncreate\u6267\u884c\u5f00\u59cb\u524d\uff1a\u5e38\u7528\u4e8e\u4e00\u4e9b\u6570\u636e\u7684\u81ea\u52a8\u586b\u5145\n\ncreate\u6267\u884c\u540e\u4f46\u672a\u63d0\u4ea4\uff1a\u5e38\u7528\u4e8e\u5f3a\u4e8b\u52a1\u63a7\u5236\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528\u540c\u4e00\u4e2a\u4e8b\u52a1\u8fdb\u884c\u64cd\u4f5c\u4ee5\u4fbf\u4e00\u8d77\u63d0\u4ea4\u6216\u56de\u6eda\n\n\u540c\u7406\u8fd8\u6709update\uff0cdelete\n\n\u540c\u6837\u7684list\u548ccount\u90fd\u6709_addtional_xxxx\u94a9\u5b50\n\n##### \u52a8\u6001hooks\n\n\u4ee5\u4e0a\u7684hooks\u90fd\u662f\u7c7b\u6210\u5458\u51fd\u6570\u4ee3\u7801\u5b9a\u4e49\u7684\uff0c\u5f53\u4f7f\u7528\u8005\u60f3\u8981\u4e34\u65f6\u589e\u52a0\u4e00\u4e2ahook\u7684\u65f6\u5019\u5462\uff0c\u6216\u8005\u6839\u636e\u67d0\u4e2a\u6761\u4ef6\u5224\u65ad\u662f\u5426\u4f7f\u7528\u4e00\u4e2ahook\u65f6\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u52a8\u6001\u7684hook\u6765\u652f\u6301\uff0c\u76ee\u524d\u53ea\u6709list\u548ccount\u652f\u6301\u6b64\u7c7bhooks\n\nlist,count\u7684hook\u7684\u51fd\u6570\u5b9a\u4e49\u4e3a\uff1afunction(query, filters)\uff0c\u9700\u8981return \u5904\u7406\u540e\u7684query\n\neg. self.list(hooks=[lambda q,f: return q])\n\n##### \u81ea\u5b9a\u4e49query\n\n\u5728\u66f4\u590d\u6742\u7684\u573a\u666f\u4e0b\u6211\u4eec\u5c01\u88c5\u7684\u64cd\u4f5c\u51fd\u6570\u53ef\u80fd\u65e0\u6cd5\u8fbe\u5230\u76ee\u7684\uff0c\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e95\u5c42\u7684SQLAlchemy Query\u5bf9\u8c61\u6765\u8fdb\u884c\u5904\u7406\uff0c\u6bd4\u5982\u5728PG\u4e2dINET\u7c7b\u578b\u7684\u6bd4\u8f83\u64cd\u4f5c\uff1a\n\n\u4e00\u4e2a\u573a\u666f\uff1a\u6211\u4eec\u4e0d\u5e0c\u671b\u7528\u6237\u65b0\u589e\u7684\u5b50\u7f51\u4fe1\u606f\u4e0e\u73b0\u6709\u5b50\u7f51\u91cd\u53e0\n\n```python\nquery = self._get_query(session)\nquery = query.filter(self.orm_meta.cidr.op(\">>\")(\n    subnet['cidr']) | self.orm_meta.cidr.op(\"<<\")(subnet['cidr']))\nif query.one_or_none():\n    raise ConflictError()\n```\n\n#### \u4f1a\u8bdd\u91cd\u7528\u548c\u4e8b\u52a1\u63a7\u5236\n\n\u5728talos\u4e2d\uff0c\u6bcf\u4e2aResourceBase\u5bf9\u8c61\u90fd\u53ef\u4ee5\u7533\u8bf7\u4f1a\u8bdd\u548c\u4e8b\u52a1\uff0c\u800c\u4e14\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u5df2\u6709\u7684\u4f1a\u8bdd\u548c\u4e8b\u52a1\u5bf9\u8c61\uff0c\u5728\u4f7f\u7528\u5b8c\u6bd5\u540etalos\u4f1a\u81ea\u52a8\u5e2e\u52a9\u4f60\u8fdb\u884c\u56de\u6eda/\u63d0\u4ea4/\u5173\u95ed\uff0c\u8fd9\u5f97\u76ca\u4e0epython\u7684with\u5b50\u53e5\n\n```python\nu = User()\nwith u.transaction() as session:\n    u.update(...)\n    # \u4e8b\u52a1\u91cd\u7528, \u53ef\u4ee5\u67e5\u8be2\u548c\u53d8\u66f4\u64cd\u4f5c, with\u5b50\u53e5\u7ed3\u675f\u4f1a\u81ea\u52a8\u63d0\u4ea4\uff0c\u5f02\u5e38\u4f1a\u81ea\u52a8\u56de\u6eda\n    UserPhone(transaction=session).delete(...)\n    UserPhone(transaction=session).list(...)\nwith u.get_session() as session:\n    # \u4f1a\u8bdd\u91cd\u7528, \u53ef\u4ee5\u67e5\u8be2\n    UserPhone(session=session).list(...)\n```\n\n#### \u7f13\u5b58\n\n##### \u914d\u7f6e\u548c\u4f7f\u7528\n\n\u9ed8\u8ba4\u914d\u7f6e\u4e3a\u8fdb\u7a0b\u5185\u5b58\uff0c\u8d85\u65f660\u79d2\n\n```python\n'cache': {\n        'type': 'dogpile.cache.memory',\n        'expiration_time': 60\n}\n```\n\n\u7f13\u5b58\u540e\u7aef\u652f\u6301\u53d6\u51b3\u4e8edogpile\u6a21\u5757\uff0c\u53ef\u4ee5\u652f\u6301\u5e38\u89c1\u7684memcache\uff0credis\u7b49\n\n\u5982\uff1aredis\n\n```python\n\"cache\": {\n        \"type\": \"dogpile.cache.redis\",\n        \"expiration_time\": 6,\n        \"arguments\": {\n            \"host\": \"127.0.0.1\",\n            \"password\": \"football\",\n            \"port\": 1234,\n            \"db\": 0,\n            \"redis_expiration_time\": 60,\n            \"distributed_lock\": true\n        }\n    }\n```\n\n\u4f7f\u7528\u65b9\u5f0f\n\n```python\nfrom talos.common import cache\n\ncache.get(key, exipres=None)\ncache.set(key, value)\ncache.validate(value)\ncache.get_or_create(key, creator, expires=None)\ncache.delete(key)\n```\n\n\n\n#### \u5f02\u6b65\u4efb\u52a1\n\n##### \u5b9a\u4e49\u5f02\u6b65\u4efb\u52a1\n\n> talos >=1.3.0 send_callback\u51fd\u6570\uff0c\u79fb\u9664\u4e86timeout\uff0c\u589e\u52a0\u4e86request_context\uff0c\u4e3arequests\u8bf7\u6c42\u53c2\u6570\u7684options\u7684\u5b57\u5178\uff0ceg.{'timeout': 3}\n\n> talos >=1.3.0 \u56de\u8c03\u51fd\u6570\u53c2\u6570\uff0c\u79fb\u9664\u4e86request\u548cresponse\u7684\u5f3a\u5236\u53c2\u6570\u5b9a\u4e49\uff0c\u4fdd\u7559data\u548curl\u6a21\u677f\u5f3a\u5236\u53c2\u6570\uff0c\u5982\u679ccallback(with_request=True)\uff0c\u5219\u56de\u8c03\u51fd\u6570\u9700\u5b9a\u4e49\u5982\u4e0b\uff0cwith_response\u540c\u7406\n>\n> @callback('/add/{x}/{y}', with_request=True):\n>\n> def add(data, x, y, request):\n>\n> \u200b    pass\n\n> talos >=1.3.0 \u88abcallback\u88c5\u9970\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5747\u652f\u6301\u672c\u5730\u8c03\u7528/\u5feb\u901f\u8fdc\u7a0b\u8c03\u7528/send_callback\u8c03\u7528\n>\n> talos <1.3.0\u652f\u6301\u672c\u5730\u8c03\u7528/send_callback\u8c03\u7528\n>\n>     \u672c\u5730\u8c03\u7528\uff1a\n>     add(data, x, y)\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u666e\u901a\u672c\u5730\u51fd\u6570\u8c03\u7528(\u6ce8\uff1a\u5ba2\u6237\u7aef\u8fd0\u884c\uff09\n>        \n>     send_callback\u8fdc\u7a0b\u8c03\u7528\u65b9\u5f0f(x,y\u53c2\u6570\u5fc5\u987b\u7528kwargs\u5f62\u5f0f\u4f20\u53c2)\uff1a\n>     send_callback(None, add, data, x=1, y=7)\n>        \n>     \u5feb\u901f\u8fdc\u7a0b\u8c03\u7528\uff1a\n>     \u652f\u6301\u8bbe\u7f6econtext\uff0cbaseurl\u8fdb\u884c\u8c03\u7528\uff0ccontext\u4e3arequests\u5e93\u7684\u989d\u5916\u53c2\u6570\uff0c\u6bd4\u5982headers\uff0ctimeout\uff0cverify\u7b49\uff0cbaseurl\u9ed8\u8ba4\u4e3a\u914d\u7f6e\u9879\u7684public_endpoint(x,y\u53c2\u6570\u5fc5\u987b\u7528kwargs\u5f62\u5f0f\u4f20\u53c2)\n>        \n>     test.remote({'val': '123'}, x=1, y=7)\n>     test.context(timeout=10, params={'search': 'me'}).remote({'val': '123'}, x=1, y=7)\n>     test.context(timeout=10).baseurl('http://clusterip.of.app.com').remote({'val': '123'}, x=1, y=7)\n\n\u5efa\u7acbworkers.app_name.tasks.py\u7528\u4e8e\u7f16\u5199\u8fdc\u7a0b\u4efb\u52a1\n\u5efa\u7acbworkers.app_name.callback.py\u7528\u4e8e\u7f16\u5199\u8fdc\u7a0b\u8c03\u7528\ntask.py\u4efb\u52a1\u793a\u4f8b\n\n```python\nfrom talos.common import celery\nfrom talos.common import async_helper\nfrom cms.workers.app_name import callback\n@celery.app.task\ndef add(data, task_id):\n    result = {'result': data['x'] + data['y']}\n\n    # \u8fd9\u91cc\u8fd8\u53ef\u4ee5\u901a\u77e5\u5176\u4ed6\u9644\u52a0\u4efb\u52a1,\u5f53\u9700\u8981\u672c\u6b21\u7684\u4e00\u4e9b\u8ba1\u7b97\u7ed3\u679c\u6765\u542f\u52a8\u4e8c\u6b21\u4efb\u52a1\u65f6\u4f7f\u7528\n    # \u63a5\u53d7\u53c2\u6570\uff1atask\u8c03\u7528\u51fd\u6570\u8def\u5f84 & \u51fd\u6570\u547d\u540d\u53c2\u6570(dict)\n    # async_helper.send_task('cms.workers.app_name.tasks.other_task', kwargs={'result': result, 'task_id': task_id})\n\n   # \u5f02\u6b65\u4efb\u52a1\u4e2d\u9ed8\u8ba4\u4e0d\u542f\u7528\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u8fdc\u7a0b\u8c03\u7528callback\u65b9\u5f0f\u8fdb\u884c\u6570\u636e\u8bfb\u53d6\u548c\u56de\u5199\n   # \u5982\u679c\u60f3\u8981\u4f7f\u7528db\u529f\u80fd\uff0c\u9700\u8981\u4fee\u6539cms.server.celery_worker\u6587\u4ef6\u7684\u4ee3\u7801,\u79fb\u9664 # base.initialize_db()\u7684\u6ce8\u91ca\u7b26\u53f7\n\n   # send callback\u7684\u53c2\u6570\u5fc5\u987b\u4e0ecallback\u51fd\u6570\u53c2\u6570\u5339\u914d(request\uff0cresponse\u9664\u5916)\n   # url_base\u4e3acallback\u5b9e\u9645\u8fd0\u884c\u7684\u670d\u52a1\u7aefapi\u5730\u5740\uff0ceg: http://127.0.0.1:9000\n   # update_task\u51fd\u6570\u63a5\u53d7data\u548ctask_id\u53c2\u6570\uff0c\u5176\u4e2dtask_id\u5fc5\u987b\u4e3akwargs\u5f62\u5f0f\u4f20\u53c2\n   # async_helper.send_callback(url_base, callback.update_task,\n   #                             data,\n   #                            task_id=task_id)\n   # remote_result \u5bf9\u5e94\u6570\u636e\u4e3aupdate_task\u8fd4\u56de\u7684 res_after\n   remote_result = callback.update_task.remote(result, task_id=task_id)\n   # \u6b64\u5904\u662f\u5f02\u6b65\u56de\u8c03\u7ed3\u679c\uff0c\u4e0d\u9700\u8981\u670d\u52a1\u5668\u7b49\u5f85\u6216\u8005\u8f6e\u8be2\uff0cworker\u4f1a\u4e3b\u52a8\u53d1\u9001\u8fdb\u5ea6\u6216\u8005\u7ed3\u679c\uff0c\u53ef\u4ee5\u4e0dreturn\n   # \u5982\u679c\u60f3\u8981\u4f7f\u7528return\u65b9\u5f0f\uff0c\u5219\u6309\u7167\u6b63\u5e38celery\u6d41\u7a0b\u7f16\u5199\u4ee3\u7801\n   return result\n```\n\ncallback.py\u56de\u8c03\u793a\u4f8b (callback\u4e0d\u5e94\u7406\u89e3\u4e3a\u5f02\u6b65\u4efb\u52a1\u7684\u56de\u8c03\u51fd\u6570\uff0c\u6cdb\u6307talos\u7684\u901a\u7528rpc\u8fdc\u7a0b\u8c03\u7528\uff0c\u53ea\u662f\u76ee\u524d\u6846\u67b6\u5185\u4e3b\u8981\u4f7f\u7528\u65b9\u662f\u5f02\u6b65\u4efb\u52a1)\n```python\nfrom talos.common import async_helper\n# data\u662f\u5f3a\u5236\u53c2\u6570\uff0ctask_id\u4e3aurl\u5f3a\u5236\u53c2\u6570(\u5982\u679curl\u6ca1\u6709\u53c2\u6570\uff0c\u5219\u51fd\u6570\u4e5f\u65e0\u9700task_id)\n# task_id\u4e3aurl\u5f3a\u5236\u53c2\u6570\uff0c\u9ed8\u8ba4\u7c7b\u578b\u662f\u5b57\u7b26\u4e32(\u6bd4\u5982/callback/add/{x}/{y}\uff0c\u51fd\u6570\u5185\u76f4\u63a5\u6267\u884cx+y\u7ed3\u679c\u4f1a\u662f\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u56e0\u4e3a\u7531\u4e8e\u6b64\u53c2\u6570\u4eceurl\u4e2d\u63d0\u53d6\uff0c\u6240\u4ee5\u9ed8\u8ba4\u7c7b\u578b\u4e3astr\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f)\n@async_helper.callback('/callback/add/{task_id}')\ndef update_task(data, task_id):\n    # \u8fdc\u7a0b\u8c03\u7528\u771f\u6b63\u6267\u884c\u65b9\u5728api server\u670d\u52a1\uff0c\u56e0\u6b64\u9ed8\u8ba4\u53ef\u4ee5\u4f7f\u7528\u6570\u636e\u5e93\u64cd\u4f5c\n    res_before,res_after = task_db_api().update(task_id, data)\n    # \u51fd\u6570\u53ef\u8fd4\u56de\u53efjson\u5316\u7684\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u5230\u8c03\u7528\u5ba2\u6237\u7aef\u53bb\n    return res_after\n```\n\nroute\u4e2d\u6ce8\u518c\u56de\u8c03\u51fd\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u627e\u5230\u6b64\u8fdc\u7a0b\u8c03\u7528\n```python\nfrom talos.common import async_helper\nfrom project_name.workers.app_name import callback\n\ndef add_route(api):\n    async_helper.add_callback_route(api, callback.callback_add)\n```\n\n\u542f\u52a8worker\n  celery -A cms.server.celery_worker worker --autoscale=50,4 --loglevel=DEBUG -Q your_queue_name\n\n\u8c03\u7528\n  add.delay('id', 1, 1)\n  \u4f1a\u6709\u4efb\u52a1\u53d1\u9001\u5230worker\u4e2d\uff0c\u7136\u540ewoker\u4f1a\u542f\u52a8\u4e00\u4e2aother_task\u4efb\u52a1\uff0c\u5e76\u56de\u8c03url\u5c06\u7ed3\u679c\u53d1\u9001\u4f1a\u670d\u52a1\u7aef\n\n  (\u5982\u679cAPI\u6a21\u5757\u6709\u7edf\u4e00\u6743\u9650\u6821\u9a8c\uff0c\u8bf7\u6ce8\u610f\u653e\u884c\uff09\n\n\n\n##### \u5f02\u6b65\u4efb\u52a1\u914d\u7f6e\n\n\u4f9d\u8d56\uff1a\n\u200b    \u5e93\uff1a\n\u200b        celery\n\n\u200b    \u914d\u7f6e\uff1a\n\n```\n{\n        ...\n        \"celery\": {\n            \"worker_concurrency\": 8,\n            \"broker_url\": \"pyamqp://guest@127.0.0.1//\",\n            \"result_backend\": \"redis://127.0.0.1\",\n            \"imports\": [\n                \"project_name.workers.app_name.tasks\"\n            ],\n            \"task_serializer\": \"json\",\n            \"result_serializer\": \"json\",\n            \"accept_content\": [\"json\"],\n            \"worker_prefetch_multiplier\": 1,\n            \"task_routes\": {\n                \"project_name.workers.*\": {\"queue\": \"your_queue_name\",\n                                        \"exchange\": \"your_exchange_name\",\n                                        \"routing_key\": \"your_routing_name\"}\n            }\n        },\n        \"worker\": {\n            \"callback\": {\n                \"strict_client\": true,\n                \"allow_hosts\": [\"127.0.0.1\"]\n            }\n        }\n}\n```\n\n\n\n\n\n#### \u5b9a\u65f6\u4efb\u52a1[^ 2]\n\ntalos\u4e2d\u4f60\u53ef\u4ee5\u4f7f\u7528\u539f\u751fcelery\u7684\u5b9a\u65f6\u4efb\u52a1\u673a\u5236\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528talos\u4e2d\u63d0\u4f9b\u7684\u6269\u5c55\u5b9a\u65f6\u4efb\u52a1(TScheduler)\uff0c\u6269\u5c55\u7684\u5b9a\u65f6\u4efb\u52a1\u53ef\u4ee5\u57285s(\u53ef\u901a\u8fc7beat_max_loop_interval\u6765\u4fee\u6539\u8fd9\u4e2a\u65f6\u95f4)\u5185\u53d1\u73b0\u5b9a\u65f6\u4efb\u52a1\u7684\u53d8\u5316\u5e76\u5237\u65b0\u8c03\u5ea6\uff0c\u4ece\u800c\u63d0\u4f9b\u52a8\u6001\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u800c\u5b9a\u65f6\u4efb\u52a1\u7684\u6765\u6e90\u53ef\u4ee5\u4ece\u914d\u7f6e\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u4e2d\u52a8\u6001\u63d0\u4f9b\n\n> \u539f\u751fcelery\u7684scheduler\u662f\u4e0d\u652f\u6301\u52a8\u6001\u5b9a\u65f6\u4efb\u52a1\u7684\n\n> \u4f7f\u7528\u539f\u751fcelery\u5b9a\u65f6\u4efb\u52a1\u56e0\u4e3atalos\u914d\u7f6e\u9879\u4e3ajson\u6570\u636e\u800c\u65e0\u6cd5\u63d0\u4f9b\u590d\u6742\u7c7b\u578b\u7684schedule\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528add_periodic_task\u6765\u89e3\u51b3\uff0c\u4f46\u4f1a\u964d\u4f4e\u6211\u4eec\u4f7f\u7528\u7684\u4fbf\u5229\u6027\n>\n> \u8fd9\u4e9b\u95ee\u9898\u5728talos\u6269\u5c55\u5b9a\u65f6\u4efb\u52a1\u4e2d\u5f97\u4ee5\u89e3\u51b3\n\n##### \u9759\u6001\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\uff1a\n\n\u4f7f\u7528\u6700\u539f\u59cb\u7684celery\u5b9a\u65f6\u4efb\u52a1\u914d\u7f6e\uff0c\u6700\u5feb\u6377\u7684\u5b9a\u65f6\u4efb\u52a1\u4f8b\u5b50[^ 3]\uff1a\n\n```json\n    \"celery\": {\n        \"worker_concurrency\": 8,\n        \"broker_url\": \"pyamqp://test:test@127.0.0.1//\",\n        ...\n        \"beat_schedule\": {\n            \"test_every_5s\": {\n                \"task\": \"cms.workers.periodic.tasks.test_add\",\n                \"schedule\": 5,\n                \"args\": [3,6] \n            }\n        }\n```\n\n\u542f\u52a8beat\uff1a celery -A cms.server.celery_worker beat --loglevel=DEBUG\n\n\u542f\u52a8worker\uff1acelery -A cms.server.celery_worker worker --loglevel=DEBUG -Q cms-dev-queue\n\n\u53ef\u4ee5\u770b\u5230\u6bcf5s\uff0cbeat\u4f1a\u53d1\u9001\u4e00\u4e2a\u4efb\u52a1\uff0cworker\u4f1a\u63a5\u6536\u6b64\u4efb\u52a1\u8fdb\u884c\u5904\u7406\uff0c\u4ece\u800c\u5f62\u6210\u5b9a\u65f6\u4efb\u52a1\n\n\u4f7f\u7528\u8fc7\u539f\u751fcelery\u7684\u4eba\u53ef\u80fd\u770b\u51fa\u8fd9\u91cc\u5b58\u5728\u7684\u95ee\u9898\uff1acrontab\u662f\u5bf9\u8c61\uff0cjson\u914d\u7f6e\u662f\u65e0\u6cd5\u4f20\u9012\uff0c\u53ea\u80fd\u914d\u7f6e\u7b80\u5355\u7684\u95f4\u9694\u4efb\u52a1\uff0c\u786e\u5b9e\uff0c\u7f3a\u7701\u60c5\u51b5\u4e0b\u7531\u4e8e\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u7684\u539f\u56e0\u65e0\u6cd5\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u7684\u5b9a\u65f6\u4efb\u52a1\u914d\u7f6e\uff0c\u6240\u4ee5talos\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u7684Scheduler\uff1aTScheduler\uff0c\u8fd9\u4e2a\u8c03\u5ea6\u5668\u53ef\u4ee5\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u89e3\u6790interval\u3001crontab\u7c7b\u578b\u7684\u5b9a\u65f6\u4efb\u52a1\uff0c\u4ece\u800c\u8986\u76d6\u66f4\u5e7f\u6cdb\u7684\u9700\u6c42\uff0c\u800c\u4f7f\u7528\u4e5f\u975e\u5e38\u7b80\u5355\uff1a\n\n```json\n\"celery\": {\n    \"worker_concurrency\": 8,\n    \"broker_url\": \"pyamqp://test:test@127.0.0.1//\",\n    ...\n    \"beat_schedule\": {\n        \"test_every_5s\": {\n            \"task\": \"cms.workers.periodic.tasks.test_add\",\n            \"schedule\": 5,\n            \"args\": [3,6] \n        },\n        \"test_every_123s\": {\n            \"type\": \"interval\",\n            \"task\": \"cms.workers.periodic.tasks.test_add\",\n            \"schedule\": \"12.3\",\n            \"args\": [3,6] \n        },\n        \"test_crontab_simple\": {\n            \"type\": \"crontab\",\n            \"task\": \"cms.workers.periodic.tasks.test_add\",\n            \"schedule\": \"*/1\",\n            \"args\": [3,6] \n        },\n        \"test_crontab\": {\n            \"type\": \"crontab\",\n            \"task\": \"cms.workers.periodic.tasks.test_add\",\n            \"schedule\": \"1,13,30-45,50-59/2 *1 * * *\",\n            \"args\": [3,6] \n        }\n    }\n```\n\u4f9d\u7136\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff0c\u591a\u4e86\u4e00\u4e2atype\u53c2\u6570\uff0c\u7528\u4e8e\u5e2e\u52a9\u8c03\u5ea6\u5668\u89e3\u6790\u5b9a\u65f6\u4efb\u52a1\uff0c\u6b64\u5916\u8fd8\u9700\u8981\u6307\u5b9a\u4f7f\u7528talos\u7684TScheduler\u8c03\u5ea6\u5668\uff0c\u6bd4\u5982\u914d\u7f6e\u4e2d\u6307\u5b9a:\n\n```\n\"celery\": {\n    \"worker_concurrency\": 8,\n    \"broker_url\": \"pyamqp://test:test@127.0.0.1//\",\n    ...\n    \"beat_schedule\": {...}\n    \"beat_scheduler\": \"talos.common.scheduler:TScheduler\"\n```\n\n\u6216\u8005\u547d\u4ee4\u884c\u542f\u52a8\u65f6\u6307\u5b9a\uff1a\n\n\u542f\u52a8beat\uff1a celery -A cms.server.celery_worker beat --loglevel=DEBUG -S talos.common.scheduler:TScheduler \n\n\u542f\u52a8worker\uff1acelery -A cms.server.celery_worker worker --loglevel=DEBUG -Q cms-dev-queue\n\n\u9664\u4e86type\uff0cTScheduler\u7684\u4efb\u52a1\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u5176\u4ed6\u7684\u6269\u5c55\u5c5e\u6027\uff0c\u4ee5\u4e0b\u662f\u5c5e\u6027\u4ee5\u53ca\u5176\u63cf\u8ff0\n\n```\nname:           string, \u552f\u4e00\u540d\u79f0\ntask:           string, \u4efb\u52a1\u6a21\u5757\u51fd\u6570\n[description]:  string, \u5907\u6ce8\u4fe1\u606f\n[type]:         string, interval \u6216 crontab, \u9ed8\u8ba4 interval\nschedule:       string/int/float/schedule eg. 1.0,'5.1', '10 *' , '*/10 * * * *' \nargs:           tuple/list, \u53c2\u6570\nkwargs:         dict, \u547d\u540d\u53c2\u6570\n[priority]:     int, \u4f18\u5148\u7ea7, \u9ed8\u8ba45\n[expires]:      int, \u5355\u4f4d\u4e3a\u79d2\uff0c\u5f53\u4efb\u52a1\u4ea7\u751f\u540e\uff0c\u591a\u4e45\u8fd8\u6ca1\u88ab\u6267\u884c\u4f1a\u8ba4\u4e3a\u8d85\u65f6\n[enabled]:      bool, True/False, \u9ed8\u8ba4True\n[max_calls]:    None/int, \u6700\u5927\u8c03\u5ea6\u6b21\u6570, \u9ed8\u8ba4None\u65e0\u9650\u5236\n[last_updated]: Datetime, \u4efb\u52a1\u6700\u540e\u66f4\u65b0\u65f6\u95f4\uff0c\u5e38\u7528\u4e8e\u5224\u65ad\u662f\u5426\u6709\u5b9a\u65f6\u4efb\u52a1\u9700\u8981\u66f4\u65b0\n```\n\n\n\n##### \u52a8\u6001\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\uff1a\n\nTScheduler\u7684\u52a8\u6001\u4efb\u52a1\u4ec5\u9650\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6240\u6709schedules\n\u6240\u6709\u5b9a\u65f6\u4efb\u52a1 = \u914d\u7f6e\u6587\u4ef6\u4efb\u52a1 + add_periodic_task\u4efb\u52a1 + hooks\u4efb\u52a1\uff0chooks\u4efb\u52a1\u53ef\u4ee5\u901a\u8fc7\u76f8\u540cname\u6765\u8986\u76d6\u5df2\u5b58\u5728\u914d\u7f6e\u4e2d\u7684\u4efb\u52a1\uff0c\u5426\u5219\u76f8\u4e92\u72ec\u7acb\n\n- \u4f7f\u7528TScheduler\u9884\u7559\u7684hooks\u8fdb\u884c\u52a8\u6001\u5b9a\u65f6\u4efb\u52a1\u914d\u7f6e(\u63a8\u8350\u65b9\u5f0f)\uff1a\n\n  TScheduler\u4e2d\u9884\u7559\u4e862\u4e2ahooks\uff1atalos_on_user_schedules_changed/talos_on_user_schedules\n\n  **talos_on_user_schedules_changed**\u94a9\u5b50\u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u66f4\u65b0\u5b9a\u65f6\u5668\uff0c\u94a9\u5b50\u88ab\u6267\u884c\u7684\u6700\u5c0f\u95f4\u9694\u662fbeat_max_loop_interval(\u5982\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u4e3a5s)\n\n  \u94a9\u5b50\u5b9a\u4e49\u4e3acallable(scheduler)\uff0c\u8fd4\u56de\u503c\u662fTrue/False\n\n  **talos_on_user_schedules**\u94a9\u5b50\u7528\u4e8e\u63d0\u4f9b\u65b0\u7684\u5b9a\u65f6\u5668\u5b57\u5178\u6570\u636e\n\n  \u94a9\u5b50\u5b9a\u4e49\u4e3acallable(scheduler)\uff0c\u8fd4\u56de\u503c\u662f\u5b57\u5178\uff0c\u5168\u91cf\u7684\u81ea\u5b9a\u4e49\u52a8\u6001\u5b9a\u65f6\u5668\n\n  \u6211\u4eec\u6765\u5c1d\u8bd5\u63d0\u4f9b\u4e00\u4e2a\uff0c\u6bcf\u8fc713\u79d2\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u5168\u65b0\u5b9a\u65f6\u5668\u7684\u4ee3\u7801\n\n  \u4ee5\u4e0b\u662fcms.workers.periodic.hooks.py\u7684\u6587\u4ef6\u5185\u5bb9\n\n  ```python\n  import datetime\n  from datetime import timedelta\n  import random\n\n  # talos_on_user_schedules_changed, \u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u66f4\u65b0\u5b9a\u65f6\u5668\n  # \u9ed8\u8ba4\u6bcf5s\u8c03\u7528\u4e00\u6b21\n  class ChangeDetection(object):\n      '''\n      \u7b49\u4ef7\u4e8e\u51fd\u6570\uff0c\u53ea\u662f\u6b64\u5904\u6211\u4eec\u9700\u8981\u4fdd\u7559_last_modify\u5c5e\u6027\u6240\u4ee5\u7528\u7c7b\u6765\u5b9a\u4e49callable\n      def ChangeDetection(scheduler):\n          ...do something...\n      '''\n      def __init__(self, scheduler):\n          self._last_modify = self.now()\n      def now(self):\n          return datetime.datetime.now()\n      def __call__(self, scheduler):\n          now = self.now()\n          # \u6bcf\u8fc713\u79d2\u5b9a\u4e49\u5b9a\u65f6\u5668\u6709\u66f4\u65b0\n          if now - self._last_modify >= timedelta(seconds=13):\n              self._last_modify = now\n              return True\n          return False\n\n  # talos_on_user_schedules, \u7528\u4e8e\u63d0\u4f9b\u65b0\u7684\u5b9a\u65f6\u5668\u5b57\u5178\u6570\u636e\n  # \u5728talos_on_user_schedules_changed hooks\u8fd4\u56deTrue\u540e\u88ab\u8c03\u7528\n  class Schedules(object):\n      '''\n      \u7b49\u4ef7\u4e8e\u51fd\u6570\n      def Schedules(scheduler):\n          ...do something...\n      '''\n      def __init__(self, scheduler):\n          pass\n      def __call__(self, scheduler):\n          interval = random.randint(1,10)\n          name = 'dynamic_every_%s s' % interval\n          # \u751f\u6210\u4e00\u4e2a\u7eaf\u968f\u673a\u7684\u5b9a\u65f6\u4efb\u52a1\n          return {name: {'task': 'cms.workers.periodic.tasks.test_add', 'schedule': interval, 'args': (1,3)}}\n  ```\n\n  \u914d\u7f6e\u6587\u4ef6\u5982\u4e0b\uff1a\n\n  ```json\n      \"celery\": {\n          ...\n          \"beat_schedule\": {\n              \"every_5s_max_call_2_times\": {\n                  \"task\": \"cms.workers.periodic.tasks.test_add\",\n                  \"schedule\": \"5\",\n                  \"max_calls\": 2,\n                  \"enabled\": true,\n                  \"args\": [1, 3]\n              }\n          },\n          \"talos_on_user_schedules_changed\":[\n              \"cms.workers.periodic.hooks:ChangeDetection\"],\n          \"talos_on_user_schedules\": [\n              \"cms.workers.periodic.hooks:Schedules\"]\n      },\n  ```\n\n  \u5f97\u5230\u7684\u7ed3\u679c\u662f\uff0c\u4e00\u4e2a\u6bcf5s\uff0c\u6700\u591a\u8c03\u5ea62\u6b21\u7684\u5b9a\u65f6\u4efb\u52a1\uff1b\u4e00\u4e2a\u6bcf>=13s\u81ea\u52a8\u751f\u6210\u7684\u968f\u673a\u5b9a\u65f6\u4efb\u52a1\n\n- \u4f7f\u7528\u5b98\u65b9\u7684setup_periodic_tasks\u8fdb\u884c\u52a8\u6001\u914d\u7f6e\n\n  \u89c1celery\u6587\u6863\n\n  \u622a\u6b622018.11.13 celery 4.2.0\u5728\u5b9a\u65f6\u4efb\u52a1\u4e2d\u4f9d\u7136\u5b58\u5728\u95ee\u9898\uff0c\u4f7f\u7528\u5b98\u65b9\u5efa\u8bae\u7684on_after_configure\u52a8\u6001\u914d\u7f6e\u5b9a\u65f6\u5668\u65f6\uff0c\u5b9a\u65f6\u4efb\u52a1\u4e0d\u4f1a\u88ab\u89e6\u53d1\uff1a[GitHub Issue 3589](https://github.com/celery/celery/issues/3589)\n\n  ```\n  @celery.app.on_after_configure.connect\n  def setup_periodic_tasks(sender, **kwargs):\n      sender.add_periodic_task(3.0, test.s('add every 3s by add_periodic_task'), name='add every 3s by add_periodic_task')\n\n  @celery.app.task\n  def test(arg):\n      print(arg)\n  ```\n\n\u800c\u6d4b\u8bd5\u4ee5\u4e0b\u4ee3\u7801\u6709\u6548\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\uff1a\n\n```\n@celery.app.on_after_finalize.connect\ndef setup_periodic_tasks(sender, **kwargs):\n    sender.add_periodic_task(3.0, test.s('add every 3s by add_periodic_task'), name='add every 3s by add_periodic_task')\n\n@celery.app.task\ndef test(arg):\n    print(arg)\n```\n\n#### \u9891\u7387\u9650\u5236\n\n##### controller & \u4e2d\u95f4\u4ef6 \u9891\u7387\u9650\u5236\n\n\u4e3b\u8981\u7528\u4e8ehttp\u63a5\u53e3\u9891\u7387\u9650\u5236\n\n    \u57fa\u672c\u4f7f\u7528\u6b65\u9aa4\uff1a\n\n    - \u5728controller\u4e0a\u914d\u7f6e\u88c5\u9970\u5668\n    - \u5c06Limiter\u914d\u7f6e\u5230\u542f\u52a8\u4e2d\u95f4\u4ef6\n\n    \u88c5\u9970\u5668\u901a\u8fc7\u7ba1\u7406\u6620\u5c04\u5173\u7cfb\u8868LIMITEDS\uff0cLIMITEDS_EXEMPT\u6765\u5b9a\u4f4d\u7528\u6237\u8bbe\u7f6e\u7684\u7c7b\u5b9e\u4f8b->\u9891\u7387\u9650\u5236\u5668\u5173\u7cfb\uff0c\n    \u9891\u7387\u9650\u5236\u5668\u662f\u5b9e\u4f8b\u7ea7\u522b\u7684\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u5b9e\u4f8b\u90fd\u4f7f\u7528\u81ea\u5df1\u7684\u9891\u7387\u9650\u5236\u5668\n\n    \u9891\u7387\u9650\u5236\u5668\u67097\u4e2a\u4e3b\u8981\u53c2\u6570\uff1a\u9891\u7387\u8bbe\u7f6e\uff0c\u5173\u952e\u9650\u5236\u53c2\u6570\uff0c\u9650\u5236\u8303\u56f4\uff0c\u662f\u5426\u5bf9\u72ec\u7acb\u65b9\u6cd5\u8fdb\u884c\u4e0d\u540c\u9650\u5236, \u7b97\u6cd5\uff0c\u9519\u8bef\u63d0\u793a\u4fe1\u606f, hit\u51fd\u6570\n\n    :param limit_value: \u9891\u7387\u8bbe\u7f6e\uff1a\u683c\u5f0f[count] [per|/] [n (optional)][second|minute|hour|day|month|year]\n    :param key_function: \u5173\u952e\u9650\u5236\u53c2\u6570\uff1a\u9ed8\u8ba4\u4e3aIP\u5730\u5740(\u652f\u6301X-Forwarded-For)\uff0c\u81ea\u5b9a\u4e49\u51fd\u6570\uff1adef key_func(req) -> string\n    :param scope: \u9650\u5236\u8303\u56f4\u7a7a\u95f4\uff1a\u9ed8\u8ba4python\u7c7b\u5b8c\u6574\u8def\u5f84\uff0c\u81ea\u5b9a\u4e49\u51fd\u6570def scope_func(request) -> string\n    :param per_method: \u6307\u5b9a\u662f\u5426\u6839\u636e\u6bcf\u4e2aHTTP\u65b9\u6cd5\u533a\u5206\u9891\u7387\u9650\u5236\uff0c\u9ed8\u8ba4True\n    :param strategy: \u7b97\u6cd5\uff1a\u652f\u6301fixed-window\u3001fixed-window-elastic-expiry\u3001moving-window\n    :param message: \u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff1a\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u53ef\u63a5\u53d73\u4e2a\u683c\u5f0f\u5316\uff08limit\uff0cremaining\uff0creset\uff09\u5185\u5bb9\n    :param hit_func: \u51fd\u6570\u5b9a\u4e49\u4e3adef hit(controller, request) -> bool\uff0c\u4e3aTrue\u65f6\u5219\u89e6\u53d1\u9891\u7387\u9650\u5236\u5668hit\uff0c\u5426\u5219\u5ffd\u7565\n\n> PS\uff1a\u771f\u6b63\u7684\u9891\u7387\u9650\u5236\u8303\u56f4 = \u5173\u952e\u9650\u5236\u53c2\u6570(\u9ed8\u8ba4IP\u5730\u5740) + \u9650\u5236\u8303\u56f4(\u9ed8\u8ba4python\u7c7b\u5b8c\u6574\u8def\u5f84) + \u65b9\u6cd5\u540d(\u5982\u679c\u533a\u5206\u72ec\u7acb\u65b9\u6cd5)\uff0c\u5f53\u6b64\u9891\u7387\u8303\u56f4\u88ab\u547d\u4e2d\u540e\u624d\u4f1a\u89e6\u53d1\u9891\u7387\u9650\u5236\n\n\n\n\n\n###### \u9759\u6001\u9891\u7387\u9650\u5236(\u914d\u7f6e/\u4ee3\u7801)\n\n**controller\u7ea7\u7684\u9891\u7387\u9650\u5236**\n\n```python\n# coding=utf-8\n\nimport falcon\nfrom talos.common import decorators as deco\nfrom talos.common import limitwrapper\n\n# \u5feb\u901f\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u652f\u6301GET\u3001POST\u8bf7\u6c42\u7684Controller\n# add_route('/things', ThingsController())\n\n@deco.limit('1/second')\nclass ThingsController(object):\n    def on_get(self, req, resp):\n        \"\"\"Handles GET requests, using 1/second limit\"\"\"\n        resp.body = ('It works!')\n    def on_post(self, req, resp):\n        \"\"\"Handles POST requests, using global limit(if any)\"\"\"\n        resp.body = ('It works!')\n```\n\n###### \u5168\u5c40\u7ea7\u7684\u9891\u7387\u9650\u5236\n\n```json\n{\n    \"rate_limit\": {\n        \"enabled\": true,\n        \"storage_url\": \"memory://\",\n        \"strategy\": \"fixed-window\",\n        \"global_limits\": \"5/second\",\n        \"per_method\": true,\n        \"header_reset\": \"X-RateLimit-Reset\",\n        \"header_remaining\": \"X-RateLimit-Remaining\",\n        \"header_limit\": \"X-RateLimit-Limit\"\n    }\n}\n```\n\n###### \u57fa\u4e8e\u4e2d\u95f4\u4ef6\u52a8\u6001\u9891\u7387\u9650\u5236\n\n\u4ee5\u4e0a\u7684\u9891\u7387\u9650\u5236\u90fd\u662f\u9884\u5b9a\u4e49\u7684\uff0c\u65e0\u6cd5\u6839\u636e\u5177\u4f53\u53c2\u6570\u8fdb\u884c\u52a8\u6001\u7684\u66f4\u6539\uff0c\u800c\u901a\u8fc7\u91cd\u5199\u4e2d\u95f4\u4ef6\u7684get_extra_limits\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u83b7\u5f97\u52a8\u6001\u8ffd\u52a0\u9891\u7387\u9650\u5236\u7684\u80fd\u529b\n\n```python\nclass MyLimiter(limiter.Limiter):\n    def __init__(self, *args, **kwargs):\n        super(MyLimiter, self).__init__(*args, **kwargs)\n        self.mylimits = {'cms.apps.test1': [wrapper.LimitWrapper('2/second')]}\n    def get_extra_limits(self, request, resource, params):\n        if request.method.lower() == 'post':\n            return self.mylimits['cms.apps.test1']\n\n```\n\n\u9891\u7387\u9650\u5236\u9ed8\u8ba4\u88ab\u52a0\u8f7d\u5728\u4e86\u7cfb\u7edf\u7684\u4e2d\u95f4\u4ef6\u4e2d\uff0c\u5982\u679c\u4e0d\u5e0c\u671b\u91cd\u590d\u5b9a\u4e49\u4e2d\u95f4\u4ef6\uff0c\u53ef\u4ee5\u5728cms.server.wsgi_server\u4e2d\u4fee\u6539\u9879\u76ee\u6e90\u4ee3\u7801\uff1a\n\n```python\napplication = base.initialize_server('cms',\n                                     ...\n                                     middlewares=[\n                                         globalvars.GlobalVars(),\n                                         MyLimiter(),\n                                         json_translator.JSONTranslator()],\n                                     override_middlewares=True)\n```\n\n##### \u51fd\u6570\u7ea7\u9891\u7387\u9650\u5236\n\n```python\nfrom talos.common import decorators as deco\n\n@deco.flimit('1/second')\ndef test():\n    pass\n```\n\n\n\n    \u7528\u4e8e\u88c5\u9970\u4e00\u4e2a\u51fd\u6570\u8868\u793a\u5176\u53d7\u9650\u4e8e\u6b64\u8c03\u7528\u9891\u7387\n    \u5f53\u88c5\u9970\u7c7b\u6210\u5458\u51fd\u6570\u65f6\uff0c\u9891\u7387\u9650\u5236\u8303\u56f4\u662f\u7c7b\u7ea7\u522b\u7684\uff0c\u610f\u5473\u7740\u7c7b\u7684\u4e0d\u540c\u5b9e\u4f8b\u5171\u4eab\u76f8\u540c\u7684\u9891\u7387\u9650\u5236\uff0c\n    \u5982\u679c\u9700\u8981\u5b9e\u4f8b\u7ea7\u9694\u79bb\u7684\u9891\u7387\u9650\u5236\uff0c\u9700\u8981\u624b\u52a8\u6307\u5b9akey_func\uff0c\u5e76\u4f7f\u7528\u8fd4\u56de\u5b9e\u4f8b\u6807\u8bc6\u4f5c\u4e3a\u9650\u5236\u53c2\u6570\n\n    :param limit_value: \u9891\u7387\u8bbe\u7f6e\uff1a\u683c\u5f0f[count] [per|/] [n (optional)][second|minute|hour|day|month|year]\n    :param scope: \u9650\u5236\u8303\u56f4\u7a7a\u95f4\uff1a\u9ed8\u8ba4python\u7c7b/\u51fd\u6570\u5b8c\u6574\u8def\u5f84 or \u81ea\u5b9a\u4e49\u5b57\u7b26\u4e32.\n    :param key_func: \u5173\u952e\u9650\u5236\u53c2\u6570\uff1a\u9ed8\u8ba4\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u81ea\u5b9a\u4e49\u51fd\u6570\uff1adef key_func(*args, **kwargs) -> string\n    :param strategy: \u7b97\u6cd5\uff1a\u652f\u6301fixed-window\u3001fixed-window-elastic-expiry\u3001moving-window\n    :param message: \u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff1a\u9519\u8bef\u63d0\u793a\u4fe1\u606f\u53ef\u63a5\u53d73\u4e2a\u683c\u5f0f\u5316\uff08limit\uff0cremaining\uff0creset\uff09\u5185\u5bb9\n    :param storage: \u9891\u7387\u9650\u5236\u540e\u7aef\u5b58\u50a8\u6570\u636e\uff0c\u5982: memory://, redis://:pass@localhost:6379\n    :param hit_func: \u51fd\u6570\u5b9a\u4e49\u4e3adef hit(result) -> bool\uff08\u53c2\u6570\u4e3a\u7528\u6237\u51fd\u6570\u6267\u884c\u7ed3\u679c\uff0c\u82e5delay_hit=False\uff0c\u5219\u53c2\u6570\u4e3aNone\uff09\uff0c\u4e3aTrue\u65f6\u5219\u89e6\u53d1\u9891\u7387\u9650\u5236\u5668hit\uff0c\u5426\u5219\u5ffd\u7565\n    :param delay_hit: \u9ed8\u8ba4\u5728\u51fd\u6570\u6267\u884c\u524d\u6d4b\u8bd5\u9891\u7387hit(False)\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3aTrue\u5c06\u9891\u7387\u6d4b\u8bd5hit\u653e\u7f6e\u5728\u51fd\u6570\u6267\u884c\u540e\uff0c\u642d\u914dhit_func\n                       \u4f7f\u7528\uff0c\u53ef\u4ee5\u83b7\u53d6\u5230\u51fd\u6570\u6267\u884c\u7ed3\u679c\u6765\u63a7\u5236\u662f\u5426\u6267\u884chit\n\u5173\u4e8e\u51fd\u6570\u9891\u7387\u9650\u5236\u6a21\u5757\u66f4\u591a\u7528\u4f8b\uff0c\u8bf7\u89c1\u5355\u5143\u6d4b\u8bd5tests.test_limit_func\n\n#### \u6570\u636e\u5e93\u7248\u672c\u7ba1\u7406\n\n\u4fee\u6539models.py\u4e3a\u6700\u7ec8\u76ee\u6807\u8868\u6a21\u578b\uff0c\u8fd0\u884c\u547d\u4ee4\uff1a\n\nalembic revision --autogenerate -m \"add table: xxxxx\"\n\n\u5907\u6ce8\u4e0d\u652f\u6301\u4e2d\u6587, autogenerate\u7528\u4e8e\u751f\u6210upgrade\uff0cdowngrade\u51fd\u6570\u5185\u5bb9\uff0c\u751f\u6210\u540e\u9700\u68c0\u67e5\u5347\u7ea7\u964d\u7ea7\u51fd\u6570\u662f\u5426\u6b63\u786e\n\n\u5347\u7ea7\uff1aalembic upgrade head\n\n\u964d\u7ea7\uff1aalembic downgrade base\n\nhead\u6307\u6700\u65b0\u7248\u672c\uff0cbase\u6307\u6700\u539f\u59cb\u7248\u672c\u5373models\u7b2c\u4e00\u4e2aversion\uff0c\u66f4\u591a\u5347\u7ea7\u964d\u7ea7\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n- alembic upgrade +2 \u5347\u7ea72\u4e2a\u7248\u672c\n\n- alembic downgrade -1 \u56de\u9000\u4e00\u4e2a\u7248\u672c\n\n- alembic upgrade ae10+2 \u5347\u7ea7\u5230ae1027a6acf+2\u4e2a\u7248\u672c\n\n```python\n# alembic \u811a\u672c\u5185\u624b\u52a8\u6267\u884csql\u8bed\u53e5\nop.execute('raw sql ...')\n```\n\n\n\n\n#### \u5355\u5143\u6d4b\u8bd5\n\ntalos\u751f\u6210\u7684\u9879\u76ee\u9884\u7f6e\u4e86\u4e00\u4e9b\u4f9d\u8d56\u8981\u6c42\uff0c\u53ef\u4ee5\u66f4\u4fbf\u6377\u7684\u4f7f\u7528pytest\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u5982\u9700\u4e86\u89e3\u66f4\u8be6\u7ec6\u7684\u5355\u5143\u6d4b\u8bd5\u7f16\u5199\u6307\u5bfc\uff0c\u8bf7\u67e5\u770bpytest\u6587\u6863\n\n> python setup.py test\n\n\u53ef\u4ee5\u7b80\u5355\u4ece\u547d\u4ee4\u884c\u8f93\u51fa\u4e2d\u67e5\u770b\u7ed3\u679c\uff0c\u6216\u8005\u4eceunit_test_report.html\u67e5\u770b\u5355\u5143\u6d4b\u8bd5\u62a5\u544a\uff0c\u4ecehtmlcov/index.html\u4e2d\u67e5\u770b\u8986\u76d6\u6d4b\u8bd5\u62a5\u544a\u7ed3\u679c\n\n\u793a\u4f8b\u53ef\u4ee5\u4ecetalos\u6e90\u7801\u7684tests\u6587\u4ef6\u5939\u4e2d\u67e5\u770b\n\n```bash\n$ tree tests\ntests\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 models.py\n\u251c\u2500\u2500 test_db_filters.py\n\u251c\u2500\u2500 unittest.conf\n\u251c\u2500\u2500 unittest.sqlite3\n\u2514\u2500\u2500 ...\n\n```\n\n\u5355\u5143\u6d4b\u8bd5\u6587\u4ef6\u4ee5test_xxxxxx.py\u4f5c\u4e3a\u547d\u540d\n\n## Sphinx\u6ce8\u91ca\u6587\u6863\n\nSphinx\u7684\u6ce8\u91ca\u683c\u5f0f\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\uff0c\u53ef\u4ee5\u53c2\u8003\u7f51\u4e0a\u6587\u6863\u6559\u7a0b\uff0ctalos\u5185\u90e8\u4f7f\u7528\u7684\u6ce8\u91ca\u6587\u6863\u683c\u5f0f\u5982\u4e0b\uff1a\n\n```\n    \"\"\"\n    \u51fd\u6570\u6ce8\u91ca\u6587\u6863\n\n    :param value: \u53c2\u6570\u63cf\u8ff0\n    :type value: \u53c2\u6570\u7c7b\u578b\n    :returns: \u8fd4\u56de\u503c\u63cf\u8ff0\n    :rtype: `bytes`/`str` \u8fd4\u56de\u503c\u7c7b\u578b\n    \"\"\"\n```\n\n\n\n- \u5b89\u88c5sphinx\n\n- \u5728\u5de5\u7a0b\u76ee\u5f55\u4e0b\u8fd0\u884c\uff1a\n\n  sphinx-quickstart docs\n\n  - root path for the documentation [.]: docs\n  - Project name: cms\n  - Author name(s): Roy\n  - Project version []: 1.0.0\n  - Project language [en]: zh_cn\n  - autodoc: automatically insert docstrings from modules (y/n) [n]: y\n\n- \u53ef\u9009\u7684\u98ce\u683c\u4e3b\u9898\uff0c\u63a8\u8350sphinx_rtd_theme\uff0c\u9700\u8981pip install sphinx_rtd_theme\n\n- \u4fee\u6539docs/conf.py\n\n  ```python\n  # import os\n  # import sys\n  # sys.path.insert(0, os.path.abspath('.'))\n  import os\n  import sys\n  sys.path.insert(0, os.path.abspath('..'))\n\n  import sphinx_rtd_theme\n  html_theme = \"sphinx_rtd_theme\"\n  html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]\n  ```\n\n- \u751f\u6210apidoc sphinx-apidoc -o docs/ ./cms\n\n- \u751f\u6210html\uff1a\n\n  - cd docs\n  - make.bat html\n  - \u6253\u5f00docs/_build/html/index.html\n\n## \u56fd\u9645\u5316i18n\n\n\u540c\u6837\u4ee5cms\u9879\u76ee\u4f5c\u4e3a\u4f8b\u5b50\n\n### \u63d0\u53d6\u5f85\u7ffb\u8bd1\n\n```bash\n# \u9700\u8981\u7ffb\u8bd1\u9879\u76ee\u7684\u8bed\u8a00\nfind /usr/lib/python2.7/site-packages/cms/ -name \"*.py\" >POTFILES.in\n# \u9700\u8981\u7ffb\u8bd1talos\u7684\u8bed\u8a00\nfind /usr/lib/python2.7/site-packages/talos/ -name \"*.py\" >>POTFILES.in\n# \u63d0\u53d6\u4e3acms.po\nxgettext --default-domain=cms --add-comments --keyword=_ --keyword=N_ --files-from=POTFILES.in --from-code=UTF8\n```\n\n\n\n### \u5408\u5e76\u5df2\u7ffb\u8bd1\n\n```bash\nmsgmerge cms-old.po cms.po -o cms.po\n```\n\n\n\n### \u7ffb\u8bd1\n\n\u53ef\u4ee5\u4f7f\u7528\u5982Poedit\u7684\u5de5\u5177\u5e2e\u52a9\u7ffb\u8bd1\n\n(\u7565)\n\n### \u7f16\u8bd1\u53d1\u5e03\n\nWindows\uff1a\u4f7f\u7528Poedit\u5de5\u5177\uff0c\u5219\u70b9\u51fb\u4fdd\u5b58\u5373\u53ef\u751f\u6210cms.mo\u6587\u4ef6\n\nLinux\uff1amsgfmt --output-file=cms.mo cms.po\n\n\u5c06mo\u6587\u4ef6\u53d1\u5e03\u5230\n\n/etc/{\\$your_project}/locale/{\\$lang}/LC_MESSAGES/\n\n{\\$lang}\u5373\u914d\u7f6e\u9879\u4e2d\u7684language\n\n\n\n## \u65e5\u5fd7\u914d\u7f6e\n\n### \u914d\u7f6e\u6307\u5f15\n\n\u5168\u5c40\u65e5\u5fd7\u914d\u7f6e\u4e3alog\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u4f7f\u7528WatchedFileHandler\u8fdb\u884c\u65e5\u5fd7\u5904\u7406\uff0c\u800c\u6587\u4ef6\u5219\u4f7f\u7528path\u914d\u7f6e\uff0c\u5982\u679c\u5e0c\u671b\u5168\u5c40\u65e5\u5fd7\u4e2d\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684Handler\uff0c\u5219path\u53c2\u6570\u662f\u53ef\u9009\u7684\n\n\u5168\u5c40\u65e5\u5fd7\u901a\u5e38\u53ef\u4ee5\u89e3\u51b3\u5927\u90e8\u5206\u573a\u666f\uff0c\u4f46\u6709\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u4e0d\u540c\u6a21\u5757\u65e5\u5fd7\u8f93\u51fa\u5230\u4e0d\u540c\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\uff1aloggers\uff0c\u5b50\u65e5\u5fd7\u914d\u7f6e\u5668\uff0c\u5176\u53c2\u6570\u53ef\u5b8c\u5168\u53c2\u8003log\u5168\u5c40\u65e5\u5fd7\u53c2\u6570\uff08\u9664gunicorn_access\uff0cgunicorn_error\uff09\uff0c\u901a\u8fc7name\u6307\u5b9a\u6355\u83b7\u6a21\u5757\uff0c\u5e76\u53ef\u4ee5\u8bbe\u7f6epropagate\u62e6\u622a\u4e0d\u4f20\u9012\u5230\u5168\u5c40\u65e5\u5fd7\u4e2d\n\n\u4e0d\u8bba\u5168\u5c40\u6216\u5b50\u7ea7\u65e5\u5fd7\u914d\u7f6e\uff0c\u90fd\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u5176\u4ed6handler\uff0c\u5e76\u642d\u914dhandler_args\u81ea\u5b9a\u4e49\u65e5\u5fd7\u4f7f\u7528\u65b9\u5f0f\uff0c\u6307\u5b9a\u7684\u65b9\u5f0f\u4e3a\uff1apackage.module:ClassName\uff0c\u9ed8\u8ba4\u65f6\u6211\u4eec\u4f7f\u7528WatchedFileHandler\uff0c\u56e0\u4e3a\u65e5\u5fd7\u901a\u5e38\u9700\u8981rotate\uff0c\u6211\u4eec\u5e0c\u671b\u65e5\u5fd7\u6a21\u5757\u53ef\u4ee5\u88ab\u65e0\u7f1d\u5207\u5272\u8f6e\u8f6c\u800c\u4e0d\u5f71\u54cd\u5e94\u7528\uff0c\u6240\u4ee5\u8fd9\u4e5f\u662f\u6211\u4eec\u6ca1\u6709\u5c06\u5185\u7f6eHandler\u6307\u5b9a\u4e3aRotatingFileHandler\u7684\u539f\u56e0\uff0c\u7528\u6237\u9700\u8981\u81ea\u5df1\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684logrotate\u80fd\u529b\u8fdb\u884c\u914d\u7f6e\u3002\n\n\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5e38\u7528\u7684\u65e5\u5fd7\u914d\u7f6e\uff0c\u5168\u5c40\u65e5\u5fd7\u8bb0\u5f55\u5230server.log\uff0c\u800c\u6a21\u5757cms.apps.filetransfer\u65e5\u5fd7\u5219\u5355\u72ec\u8bb0\u5f55\u5230transfer.log\u6587\u4ef6\uff0c\u76f8\u4e92\u4e0d\u5f71\u54cd\n\n```json\n\"log\": {\n    \"gunicorn_access\": \"./access.log\",\n    \"gunicorn_error\": \"./error.log\",\n    \"path\": \"./server.log\",\n    \"level\": \"INFO\",\n    \"format_string\": \"%(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s:%(lineno)d [-] %(message)s\",\n    \"date_format_string\": \"%Y-%m-%d %H:%M:%S\",\n    \"loggers\": [\n        {\n            \"name\": \"cms.apps.filetransfer\",\n         \t\"level\": \"INFO\",\n         \t\"path\": \"./transfer.log\",\n            \"propagate\": false\n        }\n    ]\n}\n```\n\n\n\n\u5176\u8be6\u7ec6\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a\n\n| \u8def\u5f84               | \u7c7b\u578b   | \u63cf\u8ff0                                                         | \u9ed8\u8ba4\u503c                                                       |\n| ------------------ | ------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| gunicorn_access    | string | \u4f7f\u7528gunicorn\u65f6\uff0caccess\u65e5\u5fd7\u8def\u5f84                               | ./access.log                                                 |\n| gunicorn_error     | string | \u4f7f\u7528gunicorn\u65f6\uff0cerror\u65e5\u5fd7\u8def\u5f84                                | ./error.log                                                  |\n| log_console        | bool   | \u662f\u5426\u5c06\u672c\u65e5\u5fd7\u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u51fa                                 | True                                                         |\n| path               | string | \u65e5\u5fd7\u8def\u5f84\uff0c\u9ed8\u8ba4\u4f7f\u7528WatchedFileHandler\uff0c\u5f53\u6307\u5b9ahandler\u65f6\u6b64\u9879\u65e0\u6548 | ./server.log                                                 |\n| level              | string | \u65e5\u5fd7\u7ea7\u522b(ERROR\uff0cWARNING\uff0cINFO\uff0cDEBUG)                        | INFO                                                         |\n| handler            | string | \u81ea\u5b9a\u4e49\u7684Logger\u7c7b\uff0ceg: logging.handlers:SysLogHandler\uff0c\u5b9a\u4e49\u6b64\u9879\u540e\u4f1a\u4f18\u5148\u4f7f\u7528\u5e76\u5ffd\u7565\u9ed8\u8ba4\u7684log.path\u53c2\u6570\uff0c\u9700\u8981\u4f7f\u7528handler_args\u8fdb\u884c\u65e5\u5fd7\u521d\u59cb\u5316\u53c2\u6570\u5b9a\u4e49 |                                                              |\n| handler_args       | list   | \u81ea\u5b9a\u4e49\u7684Logger\u7c7b\u7684\u521d\u59cb\u5316\u53c2\u6570\uff0ceg: []                         | []                                                           |\n| format_string      | string | \u65e5\u5fd7\u5b57\u6bb5\u914d\u7f6e                                                 | %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s:%(lineno)d [-] %(message)s |\n| date_format_string | string | \u65e5\u5fd7\u65f6\u95f4\u683c\u5f0f                                                 | %Y-%m-%d %H:%M:%S                                            |\n| name               | string | \u5168\u5c40log\u4e2d\u65e0\u6b64\u53c2\u6570\uff0c\u4ec5\u7528\u4e8eloggers\u5b50\u65e5\u5fd7\u914d\u7f6e\u5668\u4e0a\uff0c\u8868\u793a\u6355\u83b7\u7684\u65e5\u5fd7\u6a21\u5757\u8def\u5f84 |                                                              |\n| propagate          | bool   | \u5168\u5c40log\u4e2d\u65e0\u6b64\u53c2\u6570\uff0c\u4ec5\u7528\u4e8eloggers\u5b50\u65e5\u5fd7\u914d\u7f6e\u5668\u4e0a\uff0c\u8868\u793a\u65e5\u5fd7\u662f\u5426\u4f20\u9012\u5230\u4e0a\u4e00\u7ea7\u65e5\u5fd7\u8f93\u51fa | True                                                         |\n\n\n\n## \u5de5\u5177\u5e93\n\n### \u5e26\u5bbd\u9650\u901f\n\nlinux\u7cfb\u7edf\u7aef\u53e3\u5e26\u5bbd\u9650\u901f\uff1atalos.common.bandwidth_limiter:BandWidthLimiter\n\n\u4f20\u8f93\u6d41\u5e26\u5bbd\u9650\u901f\uff1a\u672a\u63d0\u4f9b\n\n### \u683c\u5f0f\u8f6c\u6362\n\n#### \u8868\u683c\u5bfc\u51fa\n\ncsv\uff1atalos.common.exporter:export_csv\n\nxlsx\uff1a\u672a\u63d0\u4f9b\n\n#### dict\u8f6cxml\n\ntalos.core.xmlutils:toxml\n\nxmlutils\u4f5c\u4e3acore\u6a21\u5757\u7684\u4e00\u4efd\u5b50\uff0c\u5f88\u91cd\u8981\u7684\u4e00\u70b9\u662f\uff1a\u5fc5\u987b\u4fdd\u8bc1\u8db3\u591f\u7684\u6269\u5c55\u6027\uff0c\u5176\u63d0\u4f9b\u4e86\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u8f6c\u6362\u94a9\u5b50\n\n```python\ntest = {'a': 1, 'b': 1.2340932, 'c': True, 'd': None, 'e': 'hello <world />', 'f': {\n    'k': 'v', 'm': 'n'}, 'g': [1, '2', False, None, {'k': 'v', 'm': [1, 2, 3]}],\n    'h': et.Element('root')}\ntoxml(test, \n      attr_type=True,\n      hooks={'etree': {'render': lambda x: x.tag, 'hit': lambda x: isinstance(x, et.Element)}})\n```\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\n\n```xml\n\n```\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u672a\u5b9a\u4e49\u7684\u7c7b\u578b\uff0c\u90fd\u4f1a\u88abdefault_render\uff08\u5b9e\u9645\u4e0a\u5c31\u662fstr() \uff09\u8fdb\u884c\u8f6c\u6362\u6e32\u67d3\n\nhooks\u4e2d\u5b9a\u4e49\u7684etree\u662f\u4f5c\u4e3axml\u7684\u8282\u70b9type\u5c5e\u6027\u8f93\u51fa\uff0chit\u51fd\u6570\u662f\u7528\u4e8e\u5224\u5b9a\u5b9a\u4e49\u7684\u7c7b\u578b\u5f52\u5c5e\uff0crender\u7528\u4e8e\u63d0\u53d6\u5bf9\u8c61\u5185\u5bb9\n\n\n\n### \u767b\u5f55\u8ba4\u8bc1\n\nLdap\u8ba4\u8bc1\uff1atalos.common.ldap_util:Ldap\n\n\u6388\u6743\u6821\u9a8c\uff1atalos.core.acl:Registry\n\nacl\u6a21\u5757\u63d0\u4f9b\u4e86\u6269\u5c55\u4e8eRBAC\u7684\u6388\u6743\u6a21\u5f0f\uff1apolicy\u6982\u5ff5\u5bf9\u5e94\u89d2\u8272(\u652f\u6301\u89d2\u8272\u7ee7\u627f)\uff0callow/deny\u5bf9\u5e94\u4e00\u4e2a\u6743\u9650\u89c4\u5219\uff0c\u4f20\u7edfRBAC\u5c06\u89d2\u8272\u4e0e\u7528\u6237\u7ed1\u5b9a\u5373\u5b8c\u6210\u6388\u6743\uff0c\u4f46acl\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u8ba4\u4e3a\u6743\u9650\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u6765\u6267\u884c\u4e0d\u540c\u7684\u52a8\u4f5c\uff0c\u6211\u4eec\u5c06\u573a\u666f\u5b9a\u4e49\u4e3atemplate(\u573a\u666f\u6a21\u677f)\uff0c\u5047\u5b9a\u67d0\u7528\u6237\u5728\u64cd\u4f5c\u5e7f\u5dde\u7684\u8d44\u6e90\u65f6\uff0c\u53ef\u4ee5\u83b7\u5f97\u6700\u5927\u7684admin\u6743\u9650\uff0c\u800c\u64cd\u4f5c\u4e0a\u6d77\u7684\u8d44\u6e90\u65f6\u53ea\u6709readonly\u89d2\u8272\u6743\u9650\n\n```python\naccess = Registry()\naccess.add_policy('readonly')\naccess.add_policy('manage', parents=('readonly',))\naccess.add_policy('admin', parents=('manage',))\naccess.allow('readonly', 'resource.list')\naccess.allow('manage', 'resource.create')\naccess.allow('manage', 'resource.update')\naccess.allow('manage', 'resource.delete')\naccess.allow('admin', 'auth.manage')\n# bind user1 with policies: (GZ, admin), (SH, readonly)\n# get current region: SH\nassert access.is_allowed([('GZ', 'admin'), ('SH', 'readonly')], 'SH', 'resource.create') is not True\n# bind user2 with policies: (*, manage)\n# get current region: SH\nassert access.is_allowed([('*', 'manage')], 'SH', 'resource.create') is True\n```\n\n\u5982\u4e0a\u6240\u793atemplate(\u573a\u666f\u6a21\u677f)\u662f\u53ef\u4ee5\u6a21\u7cca\u5339\u914d\u7684\uff0c\u5176\u9ed8\u8ba4\u5339\u914d\u89c4\u5219\u5982\u4e0b\uff08\u5339\u914d\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7Registry\u66f4\u6539\uff09\uff1a\n\n| Pattern  | Meaning                            |\n| -------- | ---------------------------------- |\n| `*`      | matches everything                 |\n| `?`      | matches any single character       |\n| `[seq]`  | matches any character in *seq*     |\n| `[!seq]` | matches any character not in *seq* |\n\n\u5982\u6b64\u4e00\u6765\u6211\u4eec\u4fbf\u53ef\u4ee5\u4fbf\u6377\u5b9e\u73b0\u4e00\u4e2a\u57fa\u4e8e\u573a\u666f\u7684\u89d2\u8272\u6743\u9650\u6821\u9a8c\u3002\n\n### SMTP\u90ae\u4ef6\u53d1\u9001\n\ntalos.common.mailer:Mailer\n\n### \u5b9e\u7528\u5c0f\u51fd\u6570\n\ntalos.core.utils\n\n## \u914d\u7f6e\u9879\n\ntalos\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7c7b\u5b57\u5178\u7684\u5c5e\u6027\u8bbf\u95ee\u914d\u7f6e\u7c7b\n1. \u5f53\u5c5e\u6027\u662f\u6807\u51c6\u53d8\u91cf\u547d\u540d\u4e14\u975e\u9884\u7559\u51fd\u6570\u540d\u65f6\uff0c\u53ef\u76f4\u63a5a.b.c\u65b9\u5f0f\u8bbf\u95ee\n2. \u5426\u5219\u53ef\u4ee5\u4f7f\u7528a['b-1'].c\u8bbf\u95ee(item\u65b9\u5f0f\u8bbf\u95ee\u65f6\u4f1a\u8fd4\u56deConfig\u5bf9\u8c61)\n3. \u5f53\u5c5e\u6027\u503c\u521a\u597dConfig\u5df2\u5b58\u5728\u51fd\u6570\u76f8\u7b49\u65f6\uff0c\u5c06\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u800c\u975e\u5c5e\u6027\u8bbf\u95ee\uff01\uff01\uff01\n   \u4fdd\u7559\u51fd\u6570\u540d\u5982\u4e0b\uff1aset_options\uff0cfrom_files\uff0citerkeys\uff0citervalues\uff0citeritems\uff0ckeys\uff0cvalues\uff0citems\uff0cget\uff0cto_dict\uff0c_opts\uff0cpython\u9b54\u6cd5\u51fd\u6570\n\n\u6bd4\u5982{\n\u200b        \"my_config\": {\"from_files\": {\"a\": {\"b\": False}}}\n\u200b    }\n\u65e0\u6cd5\u901a\u8fc7CONF.my_config.from_files\u6765\u8bbf\u95ee\u5c5e\u6027\uff0c\u9700\u8981\u7a0d\u4f5c\u8f6c\u6362\uff1aCONF.my_config['from_files'].a.b \u5982\u6b64\u6765\u83b7\u53d6\uff0ctalos\u4f1a\u5728\u9879\u76ee\u542f\u52a8\u65f6\u7ed9\u4e88\u63d0\u793a\uff0c\u8bf7\u60a8\u5173\u6ce8[^ 8]\n\n### \u9884\u6e32\u67d3\u9879\n\ntalos\u4e2d\u9884\u7f6e\u4e86\u5f88\u591a\u63a7\u5236\u7a0b\u5e8f\u884c\u4e3a\u7684\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u5141\u8bb8\u7528\u6237\u8fdb\u884c\u76f8\u5173\u7684\u914d\u7f6e\uff1a\u5168\u5c40\u914d\u7f6e\u3001\u542f\u52a8\u670d\u52a1\u914d\u7f6e\u3001\u65e5\u5fd7\u914d\u7f6e\u3001\u6570\u636e\u5e93\u8fde\u63a5\u914d\u7f6e\u3001\u7f13\u5b58\u914d\u7f6e\u3001\u9891\u7387\u9650\u5236\u914d\u7f6e\u3001\u5f02\u6b65\u548c\u56de\u8c03\u914d\u7f6e\n\n\u6b64\u5916\uff0c\u8fd8\u63d0\u4f9b\u4e86\u914d\u7f6e\u9879variables\u62e6\u622a\u9884\u6e32\u67d3\u80fd\u529b[^ 6], \u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u62e6\u622a\u67d0\u4e9b\u914d\u7f6e\u9879\uff0c\u5e76\u5bf9\u5176\u8fdb\u884c\u4fee\u6539/\u66f4\u65b0\uff08\u5e38\u7528\u4e8e\u5bc6\u7801\u89e3\u5bc6\uff09,\u7136\u540e\u5bf9\u5176\u4ed6\u914d\u7f6e\u9879\u7684\u53d8\u91cf\u8fdb\u884c\u6e32\u67d3\u66ff\u6362\uff0c\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a\n\n```json\n{\n    \"variables\": {\"db_password\": \"MTIzNDU2\", \"other_password\": \"...\"}\n    \"db\": {\"connection\": \"mysql://test:${db_password}@127.0.0.1:1234/db01\"}\n}\n```\n\n\u5982\u4e0a\uff0cvariables\u4e2d\u5b9a\u4e49\u4e86\u5b9a\u4e49\u4e86db_password\u53d8\u91cf(**\u5fc5\u987b\u5728variables\u4e2d\u5b9a\u4e49\u53d8\u91cf**)\uff0c\u5e76\u518ddb.connection\u8fdb\u884c\u53d8\u91cf\u4f7f\u7528(**\u9664variables\u4ee5\u5916\u5176\u4ed6\u914d\u7f6e\u9879\u5747\u53ef\u4f7f\u7528\\${db_password}\u53d8\u91cf\u8fdb\u884c\u5f85\u6e32\u67d3**)\n\n\u5728\u60a8\u81ea\u5df1\u7684\u9879\u76ee\u7684server.wsgi_server \u4ee5\u53ca server.celery_worker\u4ee3\u7801\u5f00\u59cb\u4f4d\u7f6e\u4f7f\u7528\u5982\u4e0b\u62e6\u622a\uff1a\n\n```python\nimport base64\nfrom talos.core import config\n\n@config.intercept('db_password', 'other_password')\ndef get_password(value, origin_value):\n    '''value\u4e3a\u4e0a\u4e00\u4e2a\u62e6\u622a\u5668\u5904\u7406\u540e\u7684\u503c\uff08\u82e5\u6b64\u51fd\u6570\u4e3a\u7b2c\u4e00\u4e2a\u62e6\u622a\u5668\uff0c\u7b49\u4ef7\u4e8eorigin_value\uff09\n       origin_value\u4e3a\u539f\u59cb\u914d\u7f6e\u6587\u4ef6\u7684\u503c\n       \u6ca1\u6709\u62e6\u622a\u7684\u53d8\u91cftalos\u5c06\u81ea\u52a8\u4f7f\u7528\u539f\u59cb\u503c\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e00\u4e2a\u62e6\u622a\u5668\u662f\u5f88\u5173\u952e\u7684\n       \u51fd\u6570\u5904\u7406\u540e\u8981\u6c42\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u503c\n    '''\n    # \u6f14\u793a\u4f7f\u7528\u4e0d\u5b89\u5168\u7684base64\uff0c\u8bf7\u4f7f\u7528\u4f60\u8ba4\u4e3a\u5b89\u5168\u7684\u7b97\u6cd5\u8fdb\u884c\u5904\u7406\n    return base64.b64decode(origin_value)\n\n\n```\n\n> \u4e3a\u4ec0\u4e48\u8981\u5728server.wsgi_server \u4ee5\u53ca server.celery_worker\u4ee3\u7801\u5f00\u59cb\u4f4d\u7f6e\u62e6\u622a\uff1f\n>\n> \u56e0\u4e3a\u914d\u7f6e\u9879\u4e3a\u9884\u6e32\u67d3\uff0c\u5373\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u5c31\u5c06\u914d\u7f6e\u9879\u6b63\u786e\u6e32\u67d3\u5230\u53d8\u91cf\u4e2d\uff0c\u4ee5\u4fbf\u7528\u6237\u4ee3\u7801\u80fd\u53d6\u5230\u6b63\u786e\u7684\u914d\u7f6e\u503c\uff0c\u653e\u5230\u5176\u4ed6\u4f4d\u7f6e\u4f1a\u51fa\u73b0\u90e8\u5206\u4ee3\u7801\u5f97\u5230\u5904\u7406\u524d\u503c\uff0c\u90e8\u5206\u4ee3\u7801\u5f97\u5230\u5904\u7406\u540e\u503c\uff0c\u7ed3\u679c\u5c06\u65e0\u6cd5\u4fdd\u8bc1\u4e00\u81f4\uff0c\u56e0\u6b64server.wsgi_server \u4ee5\u53ca server.celery_worker\u4ee3\u7801\u5f00\u59cb\u4f4d\u7f6e\u8bbe\u7f6e\u62e6\u622a\u662f\u975e\u5e38\u5173\u952e\u7684\n\n\n\n### \u914d\u7f6e\u9879\n\n| \u8def\u5f84                                   | \u7c7b\u578b   | \u63cf\u8ff0                                                         | \u9ed8\u8ba4\u503c                                                       |\n| -------------------------------------- | ------ | ------------------------------------------------------------ | ------------------------------------------------------------ |\n| host                                   | string | \u4e3b\u673a\u540d                                                       | \u5f53\u524d\u4e3b\u673a\u540d                                                   |\n| language                               | string | \u7cfb\u7edf\u8bed\u8a00\u7ffb\u8bd1                                                 | en                                                           |\n| locale_app                             | string | \u56fd\u9645\u5316locale\u5e94\u7528\u540d\u79f0                                         | \u5f53\u524d\u9879\u76ee\u540d                                                   |\n| locale_path                            | string | \u56fd\u9645\u5316locale\u6587\u4ef6\u8def\u5f84                                         | ./etc/locale                                                 |\n| variables                              | dict   | \u53ef\u4f9b\u62e6\u622a\u9884\u6e32\u67d3\u7684\u53d8\u91cf\u540d\u53ca\u5176\u503c                                 | {}                                                           |\n| controller.list_size_limit_enabled     | bool   | \u662f\u5426\u542f\u7528\u5168\u5c40\u5217\u8868\u5927\u5c0f\u9650\u5236                                     | False                                                        |\n| controller.list_size_limit             | int    | \u5168\u5c40\u5217\u8868\u6570\u636e\u5927\u5c0f\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u9ed8\u8ba4\u8fd4\u56de\u5168\u90e8\uff0c\u5982\u679c\u7528\u6237\u4f20\u5165limit\u53c2\u6570\uff0c\u5219\u4ee5\u7528\u6237\u53c2\u6570\u4e3a\u51c6 | None                                                         |\n| controller.criteria_key.offset         | string | controller\u63a5\u53d7\u7528\u6237\u7684offset\u53c2\u6570\u7684\u5173\u952ekey\u503c                    | __offset                                                     |\n| controller.criteria_key.limit          | string | controller\u63a5\u53d7\u7528\u6237\u7684limit\u53c2\u6570\u7684\u5173\u952ekey\u503c                     | __limit                                                      |\n| controller.criteria_key.orders         | string | controller\u63a5\u53d7\u7528\u6237\u7684orders\u53c2\u6570\u7684\u5173\u952ekey\u503c                    | __orders                                                     |\n| controller.criteria_key.fields         | string | controller\u63a5\u53d7\u7528\u6237\u7684fields\u53c2\u6570\u7684\u5173\u952ekey\u503c                    | __fields                                                     |\n| override_defalut_middlewares           | bool   | \u8986\u76d6\u7cfb\u7edf\u9ed8\u8ba4\u52a0\u8f7d\u7684\u4e2d\u95f4\u4ef6                                     | Flase                                                        |\n| server                                 | dict   | \u670d\u52a1\u76d1\u542c\u914d\u7f6e\u9879                                               |                                                              |\n| server.bind                            | string | \u76d1\u542c\u5730\u5740                                                     | 0.0.0.0                                                      |\n| server.port                            | int    | \u76d1\u542c\u7aef\u53e3                                                     | 9001                                                         |\n| server.backlog                         | int    | \u76d1\u542c\u6700\u5927\u961f\u5217\u6570                                               | 2048                                                         |\n| log                                    | dict   | \u65e5\u5fd7\u914d\u7f6e\u9879                                                   |                                                              |\n| log.log_console                        | bool   | \u662f\u5426\u5c06\u65e5\u5fd7\u91cd\u5b9a\u5411\u5230\u6807\u51c6\u8f93\u51fa                                   | True                                                         |\n| log.gunicorn_access                    | string | gunicorn\u7684access\u65e5\u5fd7\u8def\u5f84                                     | ./access.log                                                 |\n| log.gunicorn_error                     | string | gunicorn\u7684error\u65e5\u5fd7\u8def\u5f84                                      | ./error.log                                                  |\n| log.path                               | string | \u5168\u5c40\u65e5\u5fd7\u8def\u5f84\uff0c\u9ed8\u8ba4\u4f7f\u7528WatchedFileHandler\uff0c\u5f53\u6307\u5b9ahandler\u65f6\u6b64\u9879\u65e0\u6548 | ./server.log                                                 |\n| log.level                              | string | \u65e5\u5fd7\u7ea7\u522b                                                     | INFO                                                         |\n| log.handler[^ 7]                       | string | \u81ea\u5b9a\u4e49\u7684Logger\u7c7b\uff0ceg: logging.handlers:SysLogHandler\uff0c\u5b9a\u4e49\u6b64\u9879\u540e\u4f1a\u4f18\u5148\u4f7f\u7528\u5e76\u5ffd\u7565\u9ed8\u8ba4\u7684log.path |                                                              |\n| log.handler_args[^ 7]                  | list   | \u81ea\u5b9a\u4e49\u7684Logger\u7c7b\u7684\u521d\u59cb\u5316\u53c2\u6570\uff0ceg: []                         |                                                              |\n| log.format_string                      | string | \u65e5\u5fd7\u5b57\u6bb5\u914d\u7f6e                                                 | %(asctime)s.%(msecs)03d %(process)d %(levelname)s %(name)s:%(lineno)d [-] %(message)s |\n| log.date_format_string                 | string | \u65e5\u5fd7\u65f6\u95f4\u683c\u5f0f                                                 | %Y-%m-%d %H:%M:%S                                            |\n| log.loggers                            | list   | \u6a21\u5757\u72ec\u7acb\u65e5\u5fd7\u914d\u7f6e\uff0c\u5217\u8868\u6bcf\u4e2a\u5143\u7d20\u662fdict: [{\"name\": \"cms.test.api\", \"path\": \"api.log\"}] |                                                              |\n| log.loggers.name                       | string | \u6a21\u5757\u540d\u79f0\u8def\u5f84\uff0c\u5982cms.apps.test\uff0c\u53ef\u4ee5\u88ab\u91cd\u590d\u5b9a\u4e49\u4f7f\u7528            |                                                              |\n| log.loggers.level                      | string | \u53c2\u8003log.level                                                |                                                              |\n| log.loggers.path                       | string | \u53c2\u8003log.path                                                 |                                                              |\n| log.loggers.handler[^ 7]               | string | \u53c2\u8003log.handler                                              |                                                              |\n| log.loggers.handler_args[^ 7]          | list   | \u53c2\u8003log.handler_args                                         |                                                              |\n| log.loggers.propagate[^ 7]             | bool   | \u662f\u5426\u4f20\u9012\u5230\u4e0a\u4e00\u7ea7\u65e5\u5fd7\u914d\u7f6e                                     |                                                              |\n| log.loggers.log_console[^ 7]           | bool   | \u53c2\u8003log.log_console                                          |                                                              |\n| log.loggers.format_string[^ 7]         | string | \u53c2\u8003log.format_string                                        |                                                              |\n| log.loggers.date_format_string[^ 7]    | string | \u53c2\u8003log.date_format_string                                   |                                                              |\n| db                                     | dict   | \u9ed8\u8ba4\u6570\u636e\u5e93\u914d\u7f6e\u9879\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u5176\u4ed6DB\u914d\u7f6e\u9879\uff0c\u4f46\u9700\u8981\u81ea\u5df1\u521d\u59cb\u5316DBPool\u5bf9\u8c61(\u53ef\u4ee5\u53c2\u8003DefaultDBPool\u8fdb\u884c\u5355\u4f8b\u63a7\u5236) |                                                              |\n| db.connection                          | string | \u8fde\u63a5\u5b57\u7b26\u4e32                                                   |                                                              |\n| db.pool_size                           | int    | \u8fde\u63a5\u6c60\u5927\u5c0f                                                   | 3                                                            |\n| db.pool_recycle                        | int    | \u8fde\u63a5\u6700\u5927\u7a7a\u95f2\u65f6\u95f4\uff0c\u8d85\u8fc7\u65f6\u95f4\u540e\u81ea\u52a8\u56de\u6536                         | 3600                                                         |\n| db.pool_timeout                        | int    | \u83b7\u53d6\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u79d2                                     | 5                                                            |\n| db.max_overflow                        | int    | \u7a81\u53d1\u8fde\u63a5\u6c60\u6269\u5c55\u5927\u5c0f                                           | 5                                                            |\n| dbs[^ 7]                               | dict   | \u989d\u5916\u7684\u6570\u636e\u5e93\u914d\u7f6e\u9879\uff0c{name: {db conf...}}\uff0c\u914d\u7f6e\u9879\u4f1a\u88ab\u521d\u59cb\u5316\u5230pool.POOLS\u4e2d\uff0c\u5e76\u4ee5\u540d\u79f0\u4f5c\u4e3a\u5f15\u7528\u540d\uff0c\u793a\u4f8b\u89c1\u8fdb\u9636\u5f00\u53d1->\u591a\u6570\u636e\u5e93\u652f\u6301 |                                                              |\n| dbcrud                                 | dict   | \u6570\u636e\u5e93CRUD\u63a7\u5236\u9879                                             |                                                              |\n| dbcrud.unsupported_filter_as_empty     | bool   | \u5f53\u9047\u5230\u4e0d\u652f\u6301\u7684filter\u65f6\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c1\u662f\u8fd4\u56de\u7a7a\u7ed3\u679c\uff0c2\u662f\u5ffd\u7565\u4e0d\u652f\u6301\u7684\u6761\u4ef6\uff0c\u7531\u4e8e\u5386\u53f2\u7248\u672c\u7684\u884c\u4e3a\u9ed8\u8ba4\u4e3a2\uff0c\u56e0\u6b64\u5176\u9ed8\u8ba4\u503c\u4e3aFalse\uff0c\u5373\u5ffd\u7565\u4e0d\u652f\u6301\u7684\u6761\u4ef6 | False                                                        |\n| dbcrud.dynamic_relationship            | bool   | \u662f\u5426\u542f\u7528ORM\u7684\u52a8\u6001relationship\u52a0\u8f7d\u6280\u672f\uff0c\u542f\u7528\u540e\u53ef\u4ee5\u901a\u8fc7models.attributes\u6765\u63a7\u5236\u5916\u952e\u52a8\u6001\u52a0\u8f7d\uff0c\u907f\u514d\u6570\u636e\u8fc7\u8f7d\u5bfc\u81f4\u67e5\u8be2\u7f13\u6162 | True                                                         |\n| dbcrud.dynamic_load_method             | string | \u542f\u7528ORM\u7684\u52a8\u6001relationship\u52a0\u8f7d\u6280\u672f\u540e\uff0c\u53ef\u6307\u5b9a\u52a0\u8f7d\u65b9\u5f0f\uff1ajoinedload\uff0csubqueryload\uff0cselectinload\uff0cimmediateload<br/>**joinedload**\uff1a\u4f7f\u7528outer join\u5c06\u6240\u6709\u67e5\u8be2\u8fde\u63a5\u4e3a\u4e00\u4e2a\u8bed\u53e5\uff0c\u7ed3\u679c\u96c6\u5c11\u65f6\u901f\u5ea6\u6700\u5feb\uff0c\u968f\u7740\u7ed3\u679c\u96c6\u548c\u7ea7\u8054\u5916\u952e\u6570\u91cf\u7684\u589e\u52a0\uff0c\u5b57\u6bb5\u7684\u5c55\u5f00\u4f1a\u5bfc\u81f4\u6570\u636e\u6781\u5927\u800c\u52a0\u8f7d\u7f13\u6162<br/>**subqueryload**\uff1a\u6bd4\u8f83\u6298\u4e2d\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u5916\u952e\u72ec\u7acbsql\u67e5\u8be2\uff0c\u7ed3\u679c\u96c6\u5c11\u65f6\u901f\u5ea6\u8f83\u5feb\uff0c\u968f\u7740\u7ed3\u679c\u96c6\u548c\u7ea7\u8054\u5916\u952e\u6570\u91cf\u7684\u589e\u52a0\uff0c\u901f\u5ea6\u9010\u6b65\u4f18\u4e8ejoinedload<br/>**selectinload**\uff1a\u7c7b\u4f3csubqueryload\uff0c\u4f46\u6bcf\u4e2a\u67e5\u8be2\u4f7f\u7528\u7ed3\u679c\u96c6\u7684\u4e3b\u952e\u7ec4\u5408\u4e3ain\u67e5\u8be2\uff0c\u901f\u5ea6\u6162<br/>**immediateload**\uff1a\u7c7b\u4f3cSQLAlchemy\u7684select\u61d2\u52a0\u8f7d\uff0c\u6bcf\u884c\u7684\u5916\u952e\u5355\u72ec\u4f7f\u7528\u4e00\u4e2a\u67e5\u8be2\uff0c\u901f\u5ea6\u6700\u6162<br/> | joinedload                                                   |\n| dbcrud.detail_relationship_as_summary  | bool   | \u63a7\u5236\u83b7\u53d6\u8be6\u60c5\u65f6\uff0c\u4e0b\u7ea7relationship\u662f\u5217\u8868\u7ea7\u6216\u6458\u8981\u7ea7\uff0cFalse\u4e3a\u5217\u8868\u7ea7\uff0cTrue\u4e3a\u6458\u8981\u7ea7\uff0c\u9ed8\u8ba4False | False                                                        |\n| cache                                  | dict   | \u7f13\u5b58\u914d\u7f6e\u9879                                                   |                                                              |\n| cache.type                             | string | \u7f13\u5b58\u540e\u7aef\u7c7b\u578b                                                 | dogpile.cache.memory                                         |\n| cache.expiration_time                  | int    | \u7f13\u5b58\u9ed8\u8ba4\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u79d2                                   | 3600                                                         |\n| cache.arguments                        | dict   | \u7f13\u5b58\u989d\u5916\u914d\u7f6e                                                 | None                                                         |\n| application                            | dict   |                                                              |                                                              |\n| application.names                      | list   | \u52a0\u8f7d\u7684\u5e94\u7528\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e3astring\uff0c\u4ee3\u8868\u52a0\u8f7d\u7684app\u8def\u5f84          | []                                                           |\n| rate_limit                             | dict   | \u9891\u7387\u9650\u5236\u914d\u7f6e\u9879                                               |                                                              |\n| rate_limit.enabled                     | bool   | \u662f\u5426\u542f\u7528\u9891\u7387\u9650\u5236                                             | False                                                        |\n| rate_limit.storage_url                 | string | \u9891\u7387\u9650\u5236\u6570\u636e\u5b58\u50a8\u8ba1\u7b97\u540e\u7aef                                     | memory://                                                    |\n| rate_limit.strategy                    | string | \u9891\u7387\u9650\u5236\u7b97\u6cd5\uff0c\u53ef\u9009fixed-window\uff0cfixed-window-elastic-expiry\uff0cmoving-window | fixed-window                                                 |\n| rate_limit.global_limits               | string | \u5168\u5c40\u9891\u7387\u9650\u5236(\u4f9d\u8d56\u4e8e\u5168\u5c40\u4e2d\u95f4\u4ef6)\uff0ceg. 1/second; 5/minute       | None                                                         |\n| rate_limit.per_method                  | bool   | \u662f\u5426\u4e3a\u6bcf\u4e2aHTTP\u65b9\u6cd5\u72ec\u7acb\u9891\u7387\u9650\u5236                               | True                                                         |\n| rate_limit.header_reset                | string | HTTP\u54cd\u5e94\u5934\uff0c\u9891\u7387\u91cd\u7f6e\u65f6\u95f4                                     | X-RateLimit-Reset                                            |\n| rate_limit.header_remaining            | string | HTTP\u54cd\u5e94\u5934\uff0c\u5269\u4f59\u7684\u8bbf\u95ee\u6b21\u6570                                   | X-RateLimit-Remaining                                        |\n| rate_limit.header_limit                | string | HTTP\u54cd\u5e94\u5934\uff0c\u6700\u5927\u8bbf\u95ee\u6b21\u6570                                     | X-RateLimit-Limit                                            |\n| celery                                 | dict   | \u5f02\u6b65\u4efb\u52a1\u914d\u7f6e\u9879                                               |                                                              |\n| celery.talos_on_user_schedules_changed | list   | \u5b9a\u65f6\u4efb\u52a1\u53d8\u66f4\u5224\u65ad\u51fd\u6570\u5217\u8868\"talos_on_user_schedules_changed\":[\"cms.workers.hooks:ChangeDetection\"], |                                                              |\n| celery.talos_on_user_schedules         | list   | \u5b9a\u65f6\u4efb\u52a1\u51fd\u6570\u5217\u8868\"talos_on_user_schedules\": [\"cms.workers.hooks:AllSchedules\"] |                                                              |\n| worker                                 | dict   | \u5f02\u6b65\u5de5\u4f5c\u8fdb\u7a0b\u914d\u7f6e\u9879                                           |                                                              |\n| worker.callback                        | dict   | \u5f02\u6b65\u5de5\u4f5c\u8fdb\u7a0b\u56de\u8c03\u63a7\u5236\u914d\u7f6e\u9879                                   |                                                              |\n| worker.callback.strict_client          | bool   | \u5f02\u6b65\u5de5\u4f5c\u8fdb\u7a0b\u8ba4\u8bc1\u65f6\u4ec5\u4f7f\u7528\u76f4\u8fdeIP                               | True                                                         |\n| worker.callback.allow_hosts            | list   | \u5f02\u6b65\u5de5\u4f5c\u8fdb\u7a0b\u8ba4\u8bc1\u4e3b\u673aIP\u5217\u8868\uff0c\u5f53\u8bbe\u7f6e\u65f6\uff0c\u4ec5\u5141\u8bb8\u5217\u8868\u5185worker\u8c03\u7528\u56de\u8c03 | None                                                         |\n| worker.callback.name.%s.allow_hosts    | list   | \u5f02\u6b65\u5de5\u4f5c\u8fdb\u7a0b\u8ba4\u8bc1\u65f6\uff0c\u4ec5\u5141\u8bb8\u5217\u8868\u5185worker\u8c03\u7528\u6b64\u547d\u540d\u56de\u8c03         | None                                                         |\n\n\n\n## CHANGELOG\n\n1.3.6:\n\n- \u66f4\u65b0\uff1a[crud] relationship\u7684\u591a\u5c5e\u6027 & \u591a\u7ea7\u5d4c\u5957 \u67e5\u8be2\u652f\u6301\n- \u4fee\u590d\uff1a[utils] http\u6a21\u5757\u7684i18n\u652f\u6301\n\n1.3.5:\n\n- \u4fee\u590d\uff1a[crud] _addtional_update\u7684after_update\u53c2\u6570\u53d6\u503c\u65e0\u6548\u95ee\u9898\n\n1.3.4:\n- \u4fee\u590d\uff1a[crud] update & delete\u65f6\u5e26\u5165default_orders\u62a5\u9519\u95ee\u9898\n\n1.3.3:\n\n- \u66f4\u65b0\uff1a[config] \u4f18\u5316config.item\u6548\u7387\n- \u66f4\u65b0\uff1a[crud] \u4f18\u5316deepcopy\u5bfc\u81f4\u7684\u6548\u7387\u95ee\u9898\n- \u66f4\u65b0\uff1a[utils] \u4f18\u5316utils.get_function_name\u6548\u7387\n- \u66f4\u65b0\uff1a[crud] \u63d0\u4f9bregister_filter\u652f\u6301\u5916\u90e8filter\u6ce8\u518c\n- \u4fee\u590d\uff1a[crud] any_orm_data\u8fd4\u56de\u5b57\u6bb5\u4e0d\u6b63\u786e\u95ee\u9898\n\n1.3.2:\n\n- \u66f4\u65b0\uff1a[i18n] \u652f\u6301\u591a\u8bed\u8a00\u5305\u52a0\u8f7d\uff0c\u5e76\u9ed8\u8ba4\u7b2c\u4e00\u8bed\u8a00\uff08language: [en, zh, zh-CN,...]\uff09\n- \u4fee\u590d\uff1a[crud] update relationship\u540e\u8fd4\u56de\u7684\u5bf9\u8c61\u4e0d\u662f\u6700\u65b0\u4fe1\u606f\u95ee\u9898\n\n1.3.1:\n\n- \u66f4\u65b0\uff1a[db] models\u52a8\u6001relationship\u52a0\u8f7d\uff0c\u6548\u7387\u63d0\u5347(CONF.dbcrud.dynamic_relationship\uff0c\u9ed8\u8ba4\u5df2\u542f\u7528)\uff0c\u5e76\u53ef\u4ee5\u6307\u5b9aload\u65b9\u5f0f(\u9ed8\u8ba4joinedload)\n\n- \u66f4\u65b0\uff1a[db] \u652f\u6301\u8bbe\u5b9a\u83b7\u53d6\u8d44\u6e90detail\u7ea7\u65f6\u4e0b\u7ea7relationship\u6307\u5b9a\u5217\u8868\u7ea7 / \u6458\u8981\u7ea7(CONF.dbcrud.detail_relationship_as_summary)\n\n- \u66f4\u65b0\uff1a[test]\u52a8\u6001relationship\u52a0\u8f7d/\u88c5\u9970\u5668/\u5f02\u5e38/\u7f13\u5b58/\u5bfc\u51fa/\u6821\u9a8c\u5668/\u63a7\u5236\u5668\u6a21\u5757\u7b49\u5927\u91cf\u5355\u5143\u6d4b\u8bd5\n\n- \u66f4\u65b0**[breaking]**\uff1a[controller]_build_criteria\u7684supported_filters\u7531fnmatch\u66f4\u6539\u4e3are\u5339\u914d\u65b9\u5f0f\n  > \u7531fnmatch\u66f4\u6539\u4e3are\u5339\u914d\uff0c\u63d0\u5347\u6548\u7387\uff0c\u4e5f\u63d0\u9ad8\u4e86\u5339\u914d\u81ea\u7531\u5ea6\n  >\n  > \u5982\u679c\u60a8\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86supported_filters=['name\\_\\_\\*']\u7c7b\u4f3c\u7684\u6307\u5b9a\u652f\u6301\u53c2\u6570\uff0c\u9700\u8981\u540c\u6b65\u66f4\u65b0\u4ee3\u7801\u5982\uff1a['name\\_\\_.\\*']\n  >\n  > \u5982\u679c\u4ec5\u4f7f\u7528\u8fc7supported_filters=['name']\u7c7b\u7684\u6307\u5b9a\u652f\u6301\u53c2\u6570\uff0c\u5219\u4f9d\u7136\u517c\u5bb9\u65e0\u9700\u66f4\u6539\n\n- \u66f4\u65b0\uff1a[controller]_build_criteria\u652f\u6301unsupported_filter_as_empty\u914d\u7f6e(\u542f\u7528\u65f6\uff0c\u4e0d\u652f\u6301\u53c2\u6570\u5c06\u5bfc\u81f4\u51fd\u6570\u8fd4\u56deNone)\n\n- \u66f4\u65b0\uff1a[controller]\u589e\u52a0redirect\u91cd\u5b9a\u5411\u51fd\u6570\n\n- \u4fee\u590d\uff1a[controller]\u652f\u6301\u539f\u751ffalcon\u7684raise HTTPTemporaryRedirect(...)\u5f62\u5f0f\u91cd\u5b9a\u5411\n\n- \u4fee\u590d\uff1a[util] xmlutils\u7684py2/py3\u517c\u5bb9\u95ee\u9898\n\n- \u4fee\u590d\uff1a[schedule] TScheduler\u6982\u7387\u4e22\u5931\u4e00\u4e2amax_interval\u65f6\u95f4\u6bb5\u5b9a\u65f6\u4efb\u52a1\u95ee\u9898\n\n- \u4fee\u590d\uff1a[middleware]falcon>=2.0 \u4e14\u4f7f\u7528wsgiref.simple_server\u65f6block\u95ee\u9898\n\n1.3.0:\n\n- \u65b0\u589e\uff1a[db] \u591a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u914d\u7f6e\u652f\u6301(CONF.dbs)\n- \u65b0\u589e\uff1a[worker] \u8fdc\u7a0b\u8c03\u7528\u5feb\u6377\u6a21\u5f0f(callback.remote(...))\n- \u65b0\u589e\uff1a[cache] \u57fa\u4e8eredis\u7684\u5206\u5e03\u5f0f\u9501\u652f\u6301(cache.distributed_lock)\n- \u65b0\u589e\uff1a[exception] \u629b\u51fa\u5f02\u5e38\u53ef\u643a\u5e26\u989d\u5916\u6570\u636e(raise Error(exception_data=...),  e.to_dict())\n- \u66f4\u65b0\uff1a[exception] \u9ed8\u8ba4\u6355\u83b7\u6240\u6709\u5f02\u5e38\uff0c\u8fd4\u56de\u7edf\u4e00\u5f02\u5e38\u7ed3\u6784\n- \u66f4\u65b0\uff1a[exception] \u66ff\u6362\u5f02\u5e38\u5e8f\u5217\u5316to_xml\u5e93\uff0c\u7531dicttoxml\u5e93\u66f4\u6362\u4e3atalos.core.xmlutils\uff0c\u63d0\u5347\u6548\u7387\uff0c\u652f\u6301\u66f4\u591a\u6269\u5c55\n- \u66f4\u65b0\uff1a[template] \u751f\u6210\u6a21\u677f\uff1arequirements\uff0cwsgi_server\uff0ccelery_worker\n- \u66f4\u65b0\uff1a[base] \u652f\u6301falcon 2.0\n- \u66f4\u65b0\uff1a[log] \u652f\u6301\u81ea\u5b9a\u4e49handler\u7684log\u914d\u7f6e\n- \u66f4\u65b0\uff1a[util] \u652f\u6301\u534f\u7a0b\u7ea7\u522b\u7684GLOABLS(\u652f\u6301thread/gevent/eventlet\u7c7b\u578b\u7684worker)\n- \u4fee\u590d\uff1a[base] \u5355\u5143\u7d20\u7684query\u6570\u7ec4\u9519\u8bef\u89e3\u6790\u4e3a\u4e00\u4e2a\u5143\u7d20\u800c\u975e\u6570\u7ec4\u95ee\u9898\n- \u4fee\u590d\uff1a[util] exporter\u5bf9\u5f02\u5e38\u7f16\u7801\u7684\u517c\u5bb9\u95ee\u9898\n- \u4fee\u590d\uff1a[crud] create/update\u91cd\u590d\u6821\u9a8c\u8f93\u5165\u503c\n\n1.2.3:\n\n- \u4f18\u5316\uff1a[config] \u652f\u6301\u914d\u7f6e\u9879\u53d8\u91cf/\u62e6\u622a/\u9884\u6e32\u67d3(\u5e38\u7528\u4e8e\u914d\u7f6e\u9879\u7684\u52a0\u89e3\u5bc6) \n\n1.2.2:\n\n- \u4f18\u5316\uff1a[util] \u9891\u7387\u9650\u5236\uff0c\u652f\u6301\u7c7b\u7ea7/\u51fd\u6570\u7ea7\u9891\u7387\u9650\u5236\uff0c\u66f4\u591a\u590d\u6742\u573a\u666f \n- \u4f18\u5316\uff1a[test] \u5b8c\u5584\u5355\u5143\u6d4b\u8bd5 \n- \u4f18\u5316\uff1a[base] JSONB\u590d\u6742\u67e5\u8be2\u652f\u6301 \n- \u4f18\u5316\uff1a[base] \u4e00\u4e9b\u5c0f\u7ec6\u8282\n\n1.2.1\uff1a\n- \u89c1 [tags](https://gitee.com/wu.jianjun/talos/tags)\n\n...\n\n\n\n[^ 1]: \u672c\u6587\u6863\u57fa\u4e8ev1.1.8\u7248\u672c\uff0c\u5e76\u589e\u52a0\u4e86\u540e\u7eed\u7248\u672c\u7684\u4e00\u4e9b\u7279\u6027\u63cf\u8ff0\n[^ 2]: v1.1.9\u7248\u672c\u4e2d\u65b0\u589e\u4e86TScheduler\u652f\u6301\u52a8\u6001\u7684\u5b9a\u65f6\u4efb\u52a1\u4ee5\u53ca\u66f4\u4e30\u5bcc\u7684\u914d\u7f6e\u5b9a\u4e49\u5b9a\u65f6\u4efb\u52a1\n[^ 3]: v1.1.8\u7248\u672c\u4e2d\u4ec5\u652f\u6301\u8fd9\u7c7b\u7b80\u5355\u7684\u5b9a\u65f6\u4efb\u52a1\n[^ 4]: v1.2.0\u7248\u672c\u589e\u52a0\u4e86__fields\u5b57\u6bb5\u9009\u62e9 \u4ee5\u53ca null, notnull, nlike, nilike\u7684\u67e5\u8be2\u6761\u4ef6 \u4ee5\u53ca relationship\u67e5\u8be2\u652f\u6301\n[^ 5]: v1.2.0\u7248\u672c\u65b0\u589e\\$or,\\$and\u67e5\u8be2\u652f\u6301\n[^ 6]: v1.2.3\u7248\u672c\u540e\u5f00\u59cb\u652f\u6301\n[^ 7]: v1.3.0\u7248\u672c\u65b0\u589e\u591a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u652f\u6301\u4ee5\u53ca\u65e5\u5fd7handler\u9009\u9879\n[^ 8]: v1.3.0\u7248\u672c\u65b0\u589e\u4e86Config\u9879\u52a0\u8f7d\u65f6\u7684warnings\uff0c\u4ee5\u63d0\u9192\u7528\u6237\u6b64\u914d\u7f6e\u9879\u6b63\u786e\u8bbf\u95ee\u65b9\u5f0f\n[^ 9]: v1.3.1\u7248\u672c\u66f4\u65b0\u4e86relationship\u7684\u52a8\u6001\u52a0\u8f7d\u6280\u672f\uff0c\u53ef\u6839\u636e\u8bbe\u5b9a\u7684attributes\u81ea\u52a8\u52a0\u901f\u67e5\u8be2(\u9ed8\u8ba4\u542f\u7528)\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/wu.jianjun/talos",
            "keywords": "talos automation restful rest api celery sqlalchemy falcon",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "talos-api",
            "package_url": "https://pypi.org/project/talos-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/talos-api/",
            "project_urls": {
                "Homepage": "https://gitee.com/wu.jianjun/talos"
            },
            "release_url": "https://pypi.org/project/talos-api/1.3.6/",
            "requires_dist": [
                "falcon (==2.0.0)",
                "six (>=1.9.0)",
                "SQLAlchemy (<2.0,>=1.1.0)",
                "mako",
                "requests",
                "limits",
                "celery (<5.0.0)",
                "dogpile.cache",
                "ipaddress ; python_version < \"3.3\"",
                "pytest ; extra == 'testing'",
                "pytest-runner ; extra == 'testing'",
                "pytest-html ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'",
                "pytest-mock ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "A Falcon Base, Powerful RESTful API Framework, with SQLAlchemy integrated",
            "version": "1.3.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12197016,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "00842e8a88470cdfdef4a3c842e46432",
                    "sha256": "c0cb9906e931acb91bf63fa8946ad9209afbba349be6254451ed9b4ad3ee7b40"
                },
                "downloads": -1,
                "filename": "talos_api-1.3.6-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "00842e8a88470cdfdef4a3c842e46432",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 128548,
                "upload_time": "2021-12-03T02:27:36",
                "upload_time_iso_8601": "2021-12-03T02:27:36.611621Z",
                "url": "https://files.pythonhosted.org/packages/c3/cb/3f8ff334a5b0fdc65c19e09ed5121fdce47d66d8d88d4d73dc7976c1d735/talos_api-1.3.6-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc14681e41059b7308f6a910d0840ae4",
                    "sha256": "ac8386e35cc01ee7a5cadacfe193390cb72b2d52c8e9b51af1547f45534e32e0"
                },
                "downloads": -1,
                "filename": "talos-api-1.3.6.tar.gz",
                "has_sig": false,
                "md5_digest": "dc14681e41059b7308f6a910d0840ae4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 162501,
                "upload_time": "2021-12-03T02:27:39",
                "upload_time_iso_8601": "2021-12-03T02:27:39.779987Z",
                "url": "https://files.pythonhosted.org/packages/31/70/fba8b06b5238b10b66f4ed827e777e1d9f81dcb1b88da98514f296a14bc7/talos-api-1.3.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}