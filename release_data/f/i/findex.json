{
    "0.11.0": {
        "info": {
            "author": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "author_email": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust"
            ],
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "SSE",
            "license": "MIT/Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "findex",
            "package_url": "https://pypi.org/project/findex/",
            "platform": null,
            "project_url": "https://pypi.org/project/findex/",
            "project_urls": {
                "Source Code": "https://github.com/Cosmian/findex/"
            },
            "release_url": "https://pypi.org/project/findex/0.11.0/",
            "requires_dist": [
                "cffi"
            ],
            "requires_python": ">=3.7",
            "summary": "Symmetric Searchable Encryption",
            "version": "0.11.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16075995,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f602672058403cee1c6cc11044abef9d",
                    "sha256": "b4dd8865f24d3bd7afc259a3abbe7eb60b729ecf517206f5cf89a780d0f87d97"
                },
                "downloads": -1,
                "filename": "findex-0.11.0-cp37-abi3-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "f602672058403cee1c6cc11044abef9d",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 339808,
                "upload_time": "2022-12-02T11:59:46",
                "upload_time_iso_8601": "2022-12-02T11:59:46.649421Z",
                "url": "https://files.pythonhosted.org/packages/c8/ec/058a45776dafaf95673c99b3fc7a0576338c3179bc98b60dc3441afe5ff9/findex-0.11.0-cp37-abi3-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f9e7f9b9c0c8dced9a808b445da10cb6",
                    "sha256": "7d2bf157aec6ed79314f65f3e46d89b3d86c6ed2b38682fcf7d352d9d6442438"
                },
                "downloads": -1,
                "filename": "findex-0.11.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "f9e7f9b9c0c8dced9a808b445da10cb6",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 350501,
                "upload_time": "2022-12-02T11:59:48",
                "upload_time_iso_8601": "2022-12-02T11:59:48.796073Z",
                "url": "https://files.pythonhosted.org/packages/3e/7f/fe5869510ebd29a0c8411fd88bf931b5eb3de7f45254303ed3cae63dde34/findex-0.11.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dbe525641544ed9867688e6d80ebd95f",
                    "sha256": "f5bbf07f63fc1da3a20d6c626d93f54171701412887c0901367f48d359064913"
                },
                "downloads": -1,
                "filename": "findex-0.11.0-cp37-abi3-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "dbe525641544ed9867688e6d80ebd95f",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 910567,
                "upload_time": "2022-12-02T11:59:51",
                "upload_time_iso_8601": "2022-12-02T11:59:51.314660Z",
                "url": "https://files.pythonhosted.org/packages/3d/8c/c6c7ed17eb7e3e4732f92e274db01a8b1380ffedcba2cf9ae6821c4a3272/findex-0.11.0-cp37-abi3-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.11.1": {
        "info": {
            "author": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "author_email": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust"
            ],
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "SSE",
            "license": "MIT/Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "findex",
            "package_url": "https://pypi.org/project/findex/",
            "platform": null,
            "project_url": "https://pypi.org/project/findex/",
            "project_urls": {
                "Source Code": "https://github.com/Cosmian/findex/"
            },
            "release_url": "https://pypi.org/project/findex/0.11.1/",
            "requires_dist": [
                "cffi"
            ],
            "requires_python": ">=3.7",
            "summary": "Symmetric Searchable Encryption",
            "version": "0.11.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16075995,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3b46cb6caeb4d84937303aaf7d27b7bc",
                    "sha256": "61cefe1623baf71f7aafed3e13eaf1bec4ba18b8b555dab7854606e684dbbe03"
                },
                "downloads": -1,
                "filename": "findex-0.11.1-cp37-abi3-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "3b46cb6caeb4d84937303aaf7d27b7bc",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 340065,
                "upload_time": "2022-12-06T10:19:53",
                "upload_time_iso_8601": "2022-12-06T10:19:53.433604Z",
                "url": "https://files.pythonhosted.org/packages/e5/16/ba7bbfa9761daa8e2fa606bb0947361750e9391ea6945b41103fae7b85de/findex-0.11.1-cp37-abi3-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f68e830028862ce82b6646c59ecc59b2",
                    "sha256": "da0939bd267b8a503ea093965ad503fc7dfce57475de74ba6eb5008f7453450c"
                },
                "downloads": -1,
                "filename": "findex-0.11.1-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "f68e830028862ce82b6646c59ecc59b2",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 350472,
                "upload_time": "2022-12-06T10:19:55",
                "upload_time_iso_8601": "2022-12-06T10:19:55.944775Z",
                "url": "https://files.pythonhosted.org/packages/35/37/7297a10a736d7d3aa13c4b9c2e0beb2bc66acfbe3c818bbbec846eb84b44/findex-0.11.1-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "90111defdb3b0114281e79f10b60569c",
                    "sha256": "25286340d252bec856863634e9ba86e595c56feb665bbf594a0091312eda09f4"
                },
                "downloads": -1,
                "filename": "findex-0.11.1-cp37-abi3-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "90111defdb3b0114281e79f10b60569c",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 910610,
                "upload_time": "2022-12-06T10:19:58",
                "upload_time_iso_8601": "2022-12-06T10:19:58.538700Z",
                "url": "https://files.pythonhosted.org/packages/e6/e0/088a2cc6ac6449c3d0aac84d0f47ad96042c02d0e758560f840642d184bd/findex-0.11.1-cp37-abi3-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.11.2": {
        "info": {
            "author": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "author_email": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust"
            ],
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "SSE",
            "license": "MIT/Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "findex",
            "package_url": "https://pypi.org/project/findex/",
            "platform": null,
            "project_url": "https://pypi.org/project/findex/",
            "project_urls": {
                "Source Code": "https://github.com/Cosmian/findex/"
            },
            "release_url": "https://pypi.org/project/findex/0.11.2/",
            "requires_dist": [
                "cffi"
            ],
            "requires_python": ">=3.7",
            "summary": "Symmetric Searchable Encryption",
            "version": "0.11.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16075995,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e6b321aea9aabcb2d6f285e23324d7c",
                    "sha256": "524bd5f7354587e644bc1ff7ea74142c448c344344bb6c602ecd644c09639bab"
                },
                "downloads": -1,
                "filename": "findex-0.11.2-cp37-abi3-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "2e6b321aea9aabcb2d6f285e23324d7c",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 339958,
                "upload_time": "2022-12-08T14:11:18",
                "upload_time_iso_8601": "2022-12-08T14:11:18.853726Z",
                "url": "https://files.pythonhosted.org/packages/bb/1f/24ef5bc14a3c6c28e7e8aa667ea3e3b65a25db7de0dcb1c3c54810ce8736/findex-0.11.2-cp37-abi3-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e76bd69ae29688c9e1eff6ddb8cc2712",
                    "sha256": "2ef4475e86616aaf5ff201563212bdf95116c4e08f4c1e7407e5a09accfffc1a"
                },
                "downloads": -1,
                "filename": "findex-0.11.2-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "e76bd69ae29688c9e1eff6ddb8cc2712",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 350475,
                "upload_time": "2022-12-08T14:11:20",
                "upload_time_iso_8601": "2022-12-08T14:11:20.976430Z",
                "url": "https://files.pythonhosted.org/packages/1e/6f/d500e8f48e5b612b073f7cb5b07532ec89a78a74071cdc307df0f157605d/findex-0.11.2-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ed47e435796421d159db4e28ec67c4d7",
                    "sha256": "526a2c72a8fa43efc4eb2fac83aaaa84fdeecc656945fb542234802b3286a809"
                },
                "downloads": -1,
                "filename": "findex-0.11.2-cp37-abi3-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "ed47e435796421d159db4e28ec67c4d7",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 910594,
                "upload_time": "2022-12-08T14:11:23",
                "upload_time_iso_8601": "2022-12-08T14:11:23.852980Z",
                "url": "https://files.pythonhosted.org/packages/23/06/9178f27923a4fc53cb0674afb0431cb719215561bc675ec018a52d050893/findex-0.11.2-cp37-abi3-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.12.0": {
        "info": {
            "author": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "author_email": "Chlo\u00e9 H\u00e9bant <chloe.hebant@cosmian.com>, Bruno Grieder <bruno.grieder@cosmian.com>, C\u00e9lia Corsin <celia.corsin@cosmian.com>, Emmanuel Coste <emmanuel.coste@cosmian.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust"
            ],
            "description": "Findex helps to securely make search queries on outsourced encrypted data and can be used combined with Cloudproof Encryption.\n\nThis document explains how to use Findex implementation.\n\n<!-- toc -->\n\n- [I) Theory](#i-theory)\n- [II) Description of the Findex Tables](#ii-description-of-the-findex-tables)\n- [III) Using callbacks](#iii-using-callbacks)\n- [IV) Upsert function](#iv-upsert-function)\n  - [Implementation details](#implementation-details)\n- [V) Search function](#v-search-function)\n  - [Implementation details](#implementation-details-1)\n- [VI) Launch project](#vi-launch-project)\n  - [Build Rust](#build-rust)\n    - [Build and tests for Pyo3](#build-and-tests-for-pyo3)\n- [VI) Technical elements of code implementation](#vi-technical-elements-of-code-implementation)\n  - [Buffer serialization](#buffer-serialization)\n    - [Vectors of vectors serialization](#vectors-of-vectors-serialization)\n    - [Hashmap of vectors serialization](#hashmap-of-vectors-serialization)\n    - [Zoom on callback serialization](#zoom-on-callback-serialization)\n  - [Benchmarks](#benchmarks)\n    - [Two indexing strategies](#two-indexing-strategies)\n      - [Graphs vs Naive](#graphs-vs-naive)\n\n<!-- tocstop -->\n\n# I) Theory\n\nFindex technical documentation can be found here: _[Findex](http://gitlab.cosmian.com/other/cryptography/-/tree/main/crypto_clients/CA-TS/docs)_\n\n# II) Description of the Findex Tables\n\nFindex relies on two server-side tables, Index Entry Table and Index Chain Table, to solve the following search problem:\n\n    How to securely recover the UIDs of DB Table to obtain the matching lines from a given keyword?\n\nThis solution is on top of an encrypted database, called DB Table for consistency, that actually stores the content to be requested.\n\n- Index Entry Table: provides the mandatory values to access the Index Chain Table.\n- Index Chain Table: securely stores all the lists of uids from DB Table for the indexed keywords.\n\nEach index table contains two columns: the `uid` and `value` columns where `value` is an encrypted value.\n\n|              | uid | encrypted value |\n|--------------|-----|-----------------|\n| Size (bytes) | 32  | see below       |\n\n    the encrypted value for the Index Chain Table:\n\n|              | AES-GCM encrypted data | MAC | Nonce |\n|--------------|------------------------|-----|-------|\n| Size (bytes) | 32                     | 16  | 12    |\n\n    the encrypted value for the Index Entry Table:\n\n|              | AES-GCM encrypted data | MAC | Nonce |\n|--------------|------------------------|-----|-------|\n| Size (bytes) | Size_UID + Size_Key    | 16  | 12    |\n\n    where Size_UID = 32 bytes, and Size_Key = 32 bytes.\n\n# III) Using callbacks\n\nFindex implementation uses callback functions in order to keep all the Findex algorithm in the same place. Those callbacks are then responsible of database queries and insertions.\n\nFindex algorithm is implemented in Rust, and two functions are exposed:\n\n- Upsert: index keywords from DB Table\n- Search: perform query over the encrypted elements and return uids from DB Table\n\nThose Rust functions can be used directly in Rust, and are also exposed as FFI, working with Python and Java wrappers.\n\n# IV) Upsert function\n\nUpsert function aims to index data from DB Table.\nTakes as arguments:\n\n- K: key of 32 bytes - known by authorized users and Directory Authority\n- Data to index (DB Table uids and associated keywords)\n- 3 callbacks to query on server-side tables:\n  - fetch (uid, value) from Index Entry Table for specific uids (function `fetch_entry`)\n  - upsert (uid, value) elements on Index Entry Table (function `upsert_entry`)\n  - upsert (uid, value) elements on Index Chain Table (function `upsert_chain`)\n\n## Implementation details\n\nThis diagram illustrates the `Upsert` function when Java client call Findex through FFI function.\n\n```mermaid\n    sequenceDiagram\n    Java->>+Rust: Call FFI function `h_upsert` taking words to be indexed against DB Table uids and 3 callback functions\n    Rust->>Rust: Pre-allocate Rust memory to fetch entry table items\n    Rust->>Java: Run callback function `fetch_entry` (updates needed?)\n    Java->>Java: SELECT uid, value FROM entry_table WHERE uid in (?,..,?)\n    Java->>Rust: Copy database results to Rust buffer\n    Rust->>Rust: Create new Findex indexes\n    Rust->>Java: Run callback function `upsert_entry` only once\n    Java->>Java: BULK INSERT OR REPLACE INTO entry_table\n    Rust->>Java: Run callback function `upsert_chain` only once\n    Java->>Java: BULK INSERT OR REPLACE INTO chain_table\n```\n\n# V) Search function\n\nSearch function uses the indexed elements to retrieve uids from DB Table containing the requested keywords. In another words, search function recovers all DB Table uids of the researched words.\n\nTakes as arguments:\n\n- K: key of 32 bytes - known by authorized users and Directory Authority\n- Words: words to search\n- 2 callbacks:\n  - fetch (uid, value) from Index Entry Table for specific uids\n  - fetch (uid, value) from Index Chain Table for specific uids\n\n## Implementation details\n\nThis diagram illustrates the `Search` function when Java client call Findex through FFI function.\n\n```mermaid\nsequenceDiagram\n    Java->>+Rust: Call FFI function `h_search` taking words to be searched and 2 callback functions\n    Rust->>Rust: Pre-allocate Rust memory to fetch entry table items\n    Rust->>Java: Run callback function `fetch_entry` (any word found?)\n    Java->>Java: SELECT uid, value FROM entry_table WHERE uid in (?,..,?)\n    Java->>Rust: Copy database results to Rust buffer\n    Rust->>Rust: Unchain the entry table values (if any) and recover all chain table uids\n    Rust->>Rust: Pre-allocate Rust memory to fetch chain table items\n    Rust->>Java: Run callback function `fetch_chain` with the recovered chain table uids\n    Java->>Java: SELECT uid, value FROM chain_table WHERE uid in (?,..,?)\n    Java->>Rust: Copy database results to Rust buffer\n    Rust->>Java: Decrypt all chain table values and get all the DB Table uids\n```\n\n# VI) Launch project\n\n## Build Rust\n\nThe crate is 2 main modules:\n\n- `core`: contains the **Findex** algorithm with the 2 traits `Upsert` and `Search` to be implemented in external interfaces\n- `interfaces`: contains interfaces such as FFI interface or WebAssembly interface (that implements the 2 **Findex** _core traits_)\n\nTo build the core only, run:\n\n```bash\ncargo build --release\n```\n\nTo build the FFI Cosmian interfaces:\n\n```bash\ncargo build --release --features ffi\n```\n\nTo build the WebAssembly interface:\n\n```bash\ncargo build --release --features wasm_bindgen\n```\n\nAnd finally, to build everything and test it, run:\n\n```bash\ncargo build --release --all-features\ncargo test --release --all-features\n```\n\n### Build and tests for Pyo3\n\n> When a new function/class is added to the PyO3 interface, write its signature in `python/cosmian_findex/__init__.pyi`.\n\n- Local build (see `gitlab-ci` for release build)\n\n```bash\npython/scripts/test.sh\n```\n\nSee a full example in the CloudProof Python repo.\n\n# VI) Technical elements of code implementation\n\n## Buffer serialization\n\nData passed between Rust code and external callbacks is serialized using LEB128 algorithm.\n\nLEB128 or **Little Endian Base 128** is a variable-length code compression used to store arbitrarily large integers in a small number of bytes. Here LEB128 is used to encode **byte array length**.\n\nIn Findex, 2 data structures are serialized/deserialized:\n\n- `Vec<Vec<u8>>` (corresponding to a list of UIDs for example)\n- `HashMap<Vec<u8>,Vec<u8>>` (corresponding to an list of **Entry Table** items or a list of **Chain Table** items)\n\n### Vectors of vectors serialization\n\nEach element of the array is an byte array. Each byte array is serialized separately and written contiguously at the end of the final output byte array. Serialization has the following structure:\n\n|              | LEB128 first byte array length | byte array | ... | LEB128 last byte array length | byte array |\n|--------------|--------------------------------|------------|-----|-------------------------------|------------|\n| Size (bytes) | from 1 to 8                    | n          | ... | from 1 to 8                   | n          |\n\nExample with a vector of 100 uids of 32 bytes:\n\n|              | LEB128 uid_1 length | uid_1 | ... | LEB128 uid_100 length | uid_100 |\n|--------------|---------------------|-------|-----|-----------------------|---------|\n| Size (bytes) | 1                   | 32    | ... | 1                     | 32      |\n\n### Hashmap of vectors serialization\n\nEach element of the map is a **Key/Value** of byte arrays. First the **Key** byte array is serialized then the **Value** byte array and both are written contiguously at the end of the final output byte array. Serialization has the following structure:\n\n|              | LEB128 first Key length | Key | LEB128 first Value length | Value | ... | LEB128 last Key length | Key | LEB128 last value length | Value |\n|--------------|-------------------------|-----|---------------------------|-------|-----|------------------------|-----|--------------------------|-------|\n| Size (bytes) | from 1 to 8             | n   | from 1 to 8               | n     | ... | from 1 to 8            | n   | from 1 to 8              | n     |\n\nExample of a hashmap of 100 uids and values of Entry Table:\n\n|              | LEB128 uid_1 length | uid_1 | LEB128 value_1 length | value_1 | ... | LEB128 uid_100 length | uid_100 | LEB128 value_100 length | value_100 |\n|--------------|---------------------|-------|-----------------------|---------|-----|-----------------------|---------|-------------------------|-----------|\n| Size (bytes) | 1                   | 32    | 1                     | 92      | ... | 1                     | 32      | 1                       | 92        |\n\n### Zoom on callback serialization\n\nWhen Java client (for example) runs Findex using shared native libraries (build from Rust), here is an illustration on how data is sent:\n\n```mermaid\nsequenceDiagram\n    Java->>+Rust: Run FFI function\n    Rust->>+Rust: Serialize data to be sent in callback function\n    Rust->>+Java: Run callback function with serialized data\n    Java->>Java: Deserialize data\n    Java->>Java: Run database request\n    Java->>Java: Serialize output database response\n    Java->>Rust: Write serialized data to Rust buffer\n    Rust->>Rust: Deserialize data and continue process\n```\n\n## Benchmarks\n\nIndexing of 19948 first names in the [first_names.txt](datasets/first_names.txt) file in an in-memory database.\nThe first names have an average size of 6 characters.\n\nFirst names are indexed from size 3 to full value e.g. `Martine: mar, mart, marti, martin, martine` (first names smaller than 3 are indexed as such e.g. `Al`)\n\nThe resulting entry table size has 44488 records occupying a total size of 5387 kbytes (124 bytes per word).\n\nSearches: as an average, the search of a word (part or full) will return a number of results equal to 6 x the average number of locations per word. A location may be a database UID, a file name etc... where the word is present.\n\n### Two indexing strategies\n\n_Naive_: locations are indexed for all possible slices\n\n- `mar` -> {locations}\n- `mart` -> {locations}\n- `marti` -> {locations}\n- `martin` -> {locations}\n- `martine` -> {locations}\n\n_Graphs_:\n\n- `mar` -> `mart`\n- `mart` -> `marti`\n- `marti` -> `martin`\n- `martin` -> `martine`\n- `martine` -> {locations}\n\n#### Graphs vs Naive\n\nDisadvantage of graphs: more interactions between client and server: 4 average compared to 1 for the naive solution\n\nAdvantage of graphs: optimal storage of the locations info: they are not repeated in the chain table:\n\n| Avg locations | #records graphs | #records naive | ratio | size (kb) graphs | size (kb) naive | ratio |\n|---------------|-----------------|----------------|-------|------------------|-----------------|-------|\n| 1             | 86018           | 86018          | 1.00  | 5605             | 5704            | 1.01  |\n| 2             | 105966          | 172036         | 1.62  | 6994             | 11745           | 1.68  |\n| 3             | 125914          | 258054         | 2.04  | 8344             | 17618           | 2.11  |\n| 4             | 145862          | 244072         | 2.35  | 9694             | 23491           | 2.42  |\n| 5             | 165810          | 430090         | 2.59  | 11044            | 29364           | 2.65  |\n\n",
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "SSE",
            "license": "MIT/Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "findex",
            "package_url": "https://pypi.org/project/findex/",
            "platform": null,
            "project_url": "https://pypi.org/project/findex/",
            "project_urls": {
                "Source Code": "https://github.com/Cosmian/findex/"
            },
            "release_url": "https://pypi.org/project/findex/0.12.0/",
            "requires_dist": [
                "cffi"
            ],
            "requires_python": ">=3.7",
            "summary": "Symmetric Searchable Encryption",
            "version": "0.12.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16075995,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "13c83f37c623de98a34bfc2ea64ddf21",
                    "sha256": "a6f73476d7a5b151090f461e0dfe2f5fd59cb177280368693d05ae9139e7bb54"
                },
                "downloads": -1,
                "filename": "findex-0.12.0-cp37-abi3-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "13c83f37c623de98a34bfc2ea64ddf21",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 337180,
                "upload_time": "2022-12-12T16:03:44",
                "upload_time_iso_8601": "2022-12-12T16:03:44.569957Z",
                "url": "https://files.pythonhosted.org/packages/99/54/ede725ad10016a9c987cb24438a78bf56e891f26ae9d5a2d8ffc8adb1919/findex-0.12.0-cp37-abi3-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "703e22eb098169d8fd08145e00c94e84",
                    "sha256": "eac29a8a6b41b881212fd92f553f0ca1b8544496c77490dbeb63da3d74187d2a"
                },
                "downloads": -1,
                "filename": "findex-0.12.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "703e22eb098169d8fd08145e00c94e84",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 347741,
                "upload_time": "2022-12-12T16:03:47",
                "upload_time_iso_8601": "2022-12-12T16:03:47.196492Z",
                "url": "https://files.pythonhosted.org/packages/bd/39/e64582af7284bdddfb038f929d07e1018cdbe39cd6fd62726943cb61dd20/findex-0.12.0-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8e176960ccf323f46f4367804433edca",
                    "sha256": "bcf5dfff116446363f93fcaf2ef16f2387e31c5efa26d5735d2eb9ff6e730eb7"
                },
                "downloads": -1,
                "filename": "findex-0.12.0-cp37-abi3-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "8e176960ccf323f46f4367804433edca",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7",
                "size": 907259,
                "upload_time": "2022-12-12T16:03:49",
                "upload_time_iso_8601": "2022-12-12T16:03:49.667391Z",
                "url": "https://files.pythonhosted.org/packages/05/28/dd3f5d80444c90c924e5e27f765ecbf99405a28c3d95ed6813aa2525feea/findex-0.12.0-cp37-abi3-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}