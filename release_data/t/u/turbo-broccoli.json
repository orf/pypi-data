{
    "1.2.0": {
        "info": {
            "author": "C\u00e9dric Ho Thanh",
            "author_email": "altaris@users.noreply.github.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/altaris/turbo_broccoli",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "turbo-broccoli",
            "package_url": "https://pypi.org/project/turbo-broccoli/",
            "platform": "any",
            "project_url": "https://pypi.org/project/turbo-broccoli/",
            "project_urls": {
                "Homepage": "https://github.com/altaris/turbo_broccoli",
                "Issues": "https://github.com/altaris/turbo_broccoli/issues"
            },
            "release_url": "https://pypi.org/project/turbo-broccoli/1.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "JSON (de)serialization extensions",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14946432,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4164113debda8f5ff1582242676a5c3c",
                    "sha256": "a990b9c554ccc1e4b630b16e845525f4c3c61668205573473f0b81d790cc81e1"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4164113debda8f5ff1582242676a5c3c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 18712,
                "upload_time": "2022-06-20T08:58:05",
                "upload_time_iso_8601": "2022-06-20T08:58:05.797412Z",
                "url": "https://files.pythonhosted.org/packages/b0/07/12a014683b2431dfb4439726c061116104bc58579bccb8051f3a9a81e2b2/turbo_broccoli-1.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ab7cad36e6e8b9d6aacd51f924d3c177",
                    "sha256": "dc6cef34e5b220523bc54445055214dd79970c29b604a7eca1738ad92a46024a"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ab7cad36e6e8b9d6aacd51f924d3c177",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 15260,
                "upload_time": "2022-06-20T08:58:07",
                "upload_time_iso_8601": "2022-06-20T08:58:07.058421Z",
                "url": "https://files.pythonhosted.org/packages/7f/33/99a11fcf0f7cf0695bb7bcc8fc51fdb2055723108cb74d75e229bb56018f/turbo_broccoli-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.1": {
        "info": {
            "author": "C\u00e9dric Ho Thanh",
            "author_email": "altaris@users.noreply.github.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/altaris/turbo_broccoli",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "turbo-broccoli",
            "package_url": "https://pypi.org/project/turbo-broccoli/",
            "platform": "any",
            "project_url": "https://pypi.org/project/turbo-broccoli/",
            "project_urls": {
                "Homepage": "https://github.com/altaris/turbo_broccoli",
                "Issues": "https://github.com/altaris/turbo_broccoli/issues"
            },
            "release_url": "https://pypi.org/project/turbo-broccoli/1.2.1/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "JSON (de)serialization extensions",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14946432,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d22aa4146df1346a6b7c306da6e0e50c",
                    "sha256": "65cdafb29ebd654ff942dad00d72c3d0e3f9e0c4e18550cc4ddecb2cf7941be9"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d22aa4146df1346a6b7c306da6e0e50c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 18839,
                "upload_time": "2022-06-22T06:27:01",
                "upload_time_iso_8601": "2022-06-22T06:27:01.630833Z",
                "url": "https://files.pythonhosted.org/packages/71/08/d04bc3e5fb3351ebcfbc6bc2705ca07bb88be9cc5695408aa345ced40c8f/turbo_broccoli-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ab0d306a93c2c6eab7b29b25df0e6b3d",
                    "sha256": "4f8d759f6a192e80a01dec63e68c1e6a9dfd3a06ffb1c167c747651bb89e37f7"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "ab0d306a93c2c6eab7b29b25df0e6b3d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 15432,
                "upload_time": "2022-06-22T06:27:02",
                "upload_time_iso_8601": "2022-06-22T06:27:02.943222Z",
                "url": "https://files.pythonhosted.org/packages/77/a3/bcfff2d1d520c467536fe9cedf8eccd7521021774bdc8b3f169c00c1fab9/turbo_broccoli-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.4.0": {
        "info": {
            "author": "C\u00e9dric Ho Thanh",
            "author_email": "altaris@users.noreply.github.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/altaris/turbo-broccoli",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "turbo-broccoli",
            "package_url": "https://pypi.org/project/turbo-broccoli/",
            "platform": "any",
            "project_url": "https://pypi.org/project/turbo-broccoli/",
            "project_urls": {
                "Homepage": "https://github.com/altaris/turbo-broccoli",
                "Issues": "https://github.com/altaris/turbo-broccoli/issues"
            },
            "release_url": "https://pypi.org/project/turbo-broccoli/1.4.0/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "JSON (de)serialization extensions",
            "version": "1.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14946432,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "49cef46a14f93ab674fd758091822bfa",
                    "sha256": "30ff9484a7f0db00f4698a1b7b56cf2ef31a3c446da7bbe73cfe561a960dda80"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "49cef46a14f93ab674fd758091822bfa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 19543,
                "upload_time": "2022-06-27T08:53:16",
                "upload_time_iso_8601": "2022-06-27T08:53:16.499484Z",
                "url": "https://files.pythonhosted.org/packages/c9/7a/c448eefe01561fefbe533bf94ba8158cbf3a701fa29a7fe05b8f36499870/turbo_broccoli-1.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a3fa7226a8075bd52a4e5daa66249e37",
                    "sha256": "a4fe98d9297c6cbc113c5167591b0ae064d0928effc961f2b8c52631a989ece8"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a3fa7226a8075bd52a4e5daa66249e37",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 16043,
                "upload_time": "2022-06-27T08:53:28",
                "upload_time_iso_8601": "2022-06-27T08:53:28.100771Z",
                "url": "https://files.pythonhosted.org/packages/84/55/56985a2df062d21583bcdef8170e1f34f7a13a1588532180fc373c1d626d/turbo_broccoli-1.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.5.0": {
        "info": {
            "author": "C\u00e9dric Ho Thanh",
            "author_email": "altaris@users.noreply.github.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "Turbo Broccoli \ud83e\udd66\n================\n\n[![PyPI](https://img.shields.io/pypi/v/turbo-broccoli)](https://pypi.org/project/turbo-broccoli/)\n![License](https://img.shields.io/github/license/altaris/turbo-broccoli)\n[![Code style](https://img.shields.io/badge/style-black-black)](https://pypi.org/project/black)\n![hehe](https://img.shields.io/badge/project%20name-github-pink)\n[![Documentation](https://badgen.net/badge/documentation/here/green)](https://altaris.github.io/turbo-broccoli/turbo_broccoli.html)\n\nJSON (de)serialization extensions, originally aimed at `numpy` and `tensorflow`\nobjects.\n\n# Installation\n\n```sh\npip install turbo-broccoli\n```\n\n# Usage\n\n```py\nimport json\nimport numpy as np\nimport turbo_broccoli as tb\n\nobj = {\n    \"an_array\": np.ndarray([[1, 2], [3, 4]], dtype=\"float32\")\n}\njson.dumps(obj, cls=tb.TurboBroccoliEncoder)\n```\nproduces the following string (modulo indentation):\n```\n{\n    \"an_array\": {\n        \"__numpy__\": {\n            \"__type__\": \"ndarray\",\n            \"__version__\": 1,\n            \"data\": \"AACAPwAAAEAAAEBAAACAQA==\",\n            \"dtype\": \"<f4\",\n            \"shape\": [2, 2]\n        }\n    }\n}\n```\nFor deserialization, simply use\n```py\njson.loads(json_string, cls=tb.TurboBroccoliDecoder)\n```\n\n## Supported types\n\n* `bytes`\n\n* `collections.deque`\n\n* `collections.namedtuple`\n\n* Dataclasses. Serialization is straightforward:\n    ```py\n    @dataclass\n    class C:\n        a: int\n        b: str\n\n    doc = json.dumps({\"c\": C(a=1, b=\"Hello\")}, cls=tb.TurboBroccoliEncoder)\n    ```\n  For deserialization, first register the class:\n    ```py\n    tb.register_dataclass(\"C\", C)\n    json.loads(doc, cls=tb.TurboBroccoliDecoder)\n    ```\n\n* *Generic object*, **serialization only**. A generic object is an object that\n  has the `__turbo_broccoli__` attribute. This attribute is expected to be a\n  list of attributes whose values will be serialized. For example,\n    ```py\n    class C:\n        __turbo_broccoli__ = [\"a\"]\n        a: int\n        b: int\n\n    x = C()\n    x.a = 42\n    x.b = 43\n    json.dumps(x, cls=tb.TurboBroccoliEncoder)\n    ```\n  produces the following string (modulo indentation):\n    ```\n    {\n        \"__generic__\": {\n            \"__version__\": 1,\n            \"data\": {\n                \"a\": 42,\n            }\n        }\n    }\n    ```\n  Registered attributes can of course have any type supported by Turbo\n  Broccoli, such as numpy arrays. Registered attributes can be `@property`\n  methods.\n\n* `keras.Model`\n\n* standard subclasses of\n  * [`keras.layers.Layer`](https://keras.io/api/layers/),\n  * [`keras.losses.Loss`](https://keras.io/api/losses/),\n  * [`keras.metrics.Metric`](https://keras.io/api/metrics/),\n  * [`keras.optimizers.Optimizer`](https://keras.io/api/optimizers/)\n\n* `numpy.number`\n\n* `numpy.ndarray` with numerical dtype\n\n* `pandas.DataFrame` and `pandas.Series`, but with the following limitations:\n  * the following dtypes are not supported: `complex`, `object`, `timedelta`\n  * the column / series names must be strings and not numbers. The following is\n    not acceptable:\n\n      ```py\n      df = pd.DataFrame([[1, 2], [3, 4]])\n      print([c for c in df.columns])\n      # [0, 1]\n      print([type(c) for c in df.columns])\n      # [int, int]\n      ```\n\n* `tensorflow.Tensor` with numerical dtype, but not `tensorflow.RaggedTensor`\n\n## Secrets\n\nBasic Python types can be wrapped in their corresponding secret type according\nto the following table\n\n| Python type | Secret type                         |\n|-------------|-------------------------------------|\n| `dict`      | `turbo_broccoli.secret.SecretDict`  |\n| `float`     | `turbo_broccoli.secret.SecretFloat` |\n| `int`       | `turbo_broccoli.secret.SecretInt`   |\n| `list`      | `turbo_broccoli.secret.SecretList`  |\n| `str`       | `turbo_broccoli.secret.SecretStr`   |\n\nThe secret value can be recovered with the `get_secret_value` mathod. At\nserialization, the this value will be encrypted. For example,\n```py\n# See https://pynacl.readthedocs.io/en/latest/secret/#key\nimport nacl.secret\nimport nacl.utils\n\nkey = nacl.utils.random(nacl.secret.SecretBox.KEY_SIZE)\n\nfrom turbo_broccoli.secret import SecretStr\nfrom turbo_broccoli.environment import set_shared_key\n\nset_shared_key(key)\n\nx = {\n    \"user\": \"alice\",\n    \"password\": SecretStr(\"dolphin\")\n}\njson.dumps(x, cls=tb.TurboBroccoliEncoder)\n```\nproduces the following string (modulo indentation and modulo the encrypted\ncontent):\n```\n{\n  \"user\": \"alice\",\n  \"password\": {\n    \"__secret__\": {\n      \"__version__\": 1,\n      \"data\": {\n        \"__bytes__\": {\n          \"__version__\": 1,\n          \"data\": \"qUcYxkKXJM...\"\n        }\n      }\n    }\n  }\n}\n```\nDeserialization decrypts the secrets, but they stay wrapped inside the secret\ntypes above. If the wrong key is provided, an exception is raised. If no key is\nprovided, the secret values are replaced by a\n`turbo_broccoli.secret.LockedSecret`. Internally, Turbo Broccoli uses\n[`pynacl`](https://pynacl.readthedocs.io/en/latest/)'s\n[`SecretBox`](https://pynacl.readthedocs.io/en/latest/secret/#nacl.secret.SecretBox).\n**WARNING**: In the case of `SecretDict` and `SecretList`, the values contained\nwithin must be JSON-serializable **without** Turbo Broccoli. See also the\n`TB_SHARED_KEY` environment variable below.\n\n\n## Environment variables\n\nSome behaviors of Turbo Broccoli can be tweaked by setting specific environment\nvariables. If you want to modify these parameters programatically, do not do so\nby modifying `os.environ`. Rather, use the methods of\n`turbo_broccoli.environment`.\n\n* `TB_ARTIFACT_PATH` (default: `./`): During serialization, Turbo Broccoli may\n  create artifacts to which the JSON object will point to. The artifacts will\n  be stored in `TB_ARTIFACT_PATH`. For example, if `arr` is a big numpy array,\n    ```py\n    obj = {\"an_array\": arr}\n    json.dumps(obj, cls=tb.TurboBroccoliEncoder)\n    ```\n  will generate the following string (modulo indentation and id)\n    ```\n    {\n        \"an_array\": {\n            \"__numpy__\": {\n                \"__type__\": \"ndarray\",\n                \"__version__\": 2,\n                \"id\": \"70692d08-c4cf-4231-b3f0-0969ea552d5a\"\n            }\n        }\n    }\n    ```\n  and a `70692d08-c4cf-4231-b3f0-0969ea552d5a.npy` file has been created in\n  `TB_ARTIFACT_PATH`.\n\n* `TB_KERAS_FORMAT` (default: `tf`, valid values are `json`, `h5`, and `tf`):\n  The serialization format for keras models. If `h5` or `tf` is used, an\n  artifact following said format will be created in `TB_ARTIFACT_PATH`. If\n  `json` is used, the model will be contained in the JSON document (anthough\n  the weights may be in artifacts if they are too large).\n\n* `TB_MAX_NBYTES` (default: `8000`): The maximum byte size of an numpy array or\n  pandas object beyond which serialization will produce an artifact instead of\n  storing it in the JSON document. This does not limit the size of the overall\n  JSON document though. 8000 bytes should be enough for a numpy array of 1000\n  `float64`s to be stored in-document.\n\n* `TB_NODECODE` (default: empty): Comma-separated list of types to not\n  deserialize, for example `bytes,numpy.ndarray`. Excludable types are:\n  * `bytes`,\n  * `dataclass.<dataclass_name>` (case sensitive),\n  * `collections.deque`, `collections.namedtuple`,\n  * `keras.model`, `keras.layer`, `keras.loss`, `keras.metric`,\n    `keras.optimizer`,\n  * `numpy.ndarray`, `numpy.number`,\n  * `pandas.dataframe`, `pandas.series`, **WARNING: excluding\n    `pandas.dataframe` will crash any deserialization of `pandas.series`**\n  * `tensorflow.sparse_tensor`, `tensorflow.tensor`, `tensorflow.variable`\n    **WARNING: excluding `numpy.ndarray` will crash any deserialization of\n    Tensorflow types**.\n\n  See also `turbo_broccoli.environment.set_nodecode`\n\n* `TB_SHARED_KEY` (default: empty): Secret key used to encrypt secrets. The\n  encryption uses [`pynacl`'s\n  `SecretBox`](https://pynacl.readthedocs.io/en/latest/secret/#nacl.secret.SecretBox).\n  An exception is raised when attempting to serialize a secret type while no\n  key is set. See also `turbo_broccoli.environment.set_shared_key`.\n\n# Contributing\n\n## Dependencies\n\n* `python3.9` or newer;\n* `requirements.txt` for runtime dependencies;\n* `requirements.dev.txt` for development dependencies.\n* `make` (optional);\n\nSimply run\n```sh\nvirtualenv venv -p python3.9\n. ./venv/bin/activate\npip install --upgrade pip\npip install -r requirements.txt\npip install -r requirements.dev.txt\n```\n\n## Documentation\n\nSimply run\n```sh\nmake docs\n```\nThis will generate the HTML doc of the project, and the index file should be at\n`docs/index.html`. To have it directly in your browser, run\n```sh\nmake docs-browser\n```\n\n## Code quality\n\nDon't forget to run\n```sh\nmake\n```\nto format the code following [black](https://pypi.org/project/black/),\ntypecheck it using [mypy](http://mypy-lang.org/), and check it against coding\nstandards using [pylint](https://pylint.org/).\n\n## Unit tests\n\nRun\n```sh\nmake test\n```\nto have [pytest](https://docs.pytest.org/) run the unit tests in `tests/`.\n\n# Credits\n\nThis project takes inspiration from\n[Crimson-Crow/json-numpy](https://github.com/Crimson-Crow/json-numpy).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/altaris/turbo-broccoli",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "turbo-broccoli",
            "package_url": "https://pypi.org/project/turbo-broccoli/",
            "platform": "any",
            "project_url": "https://pypi.org/project/turbo-broccoli/",
            "project_urls": {
                "Homepage": "https://github.com/altaris/turbo-broccoli",
                "Issues": "https://github.com/altaris/turbo-broccoli/issues"
            },
            "release_url": "https://pypi.org/project/turbo-broccoli/1.5.0/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "JSON (de)serialization extensions",
            "version": "1.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14946432,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "21688867b852ff39b3f3dff3294dc584",
                    "sha256": "99740c2ad5f01427300bd48328f6d69fb140f7511513de56be606ec8b626ed81"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.5.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "21688867b852ff39b3f3dff3294dc584",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 22493,
                "upload_time": "2022-08-31T08:29:53",
                "upload_time_iso_8601": "2022-08-31T08:29:53.559840Z",
                "url": "https://files.pythonhosted.org/packages/55/8e/22f3ffe9bbaa34ae43d2ed287bf5b7ce6eb0dc7f9c9f42710230a6d8c249/turbo_broccoli-1.5.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a3a78c6610f27c2f0b1111150e6ccbf0",
                    "sha256": "fbf0015f433e14f505eee4d16e743636884b73aaadf61e8c0adc4d3d4b38f7f8"
                },
                "downloads": -1,
                "filename": "turbo_broccoli-1.5.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a3a78c6610f27c2f0b1111150e6ccbf0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 19105,
                "upload_time": "2022-08-31T08:29:54",
                "upload_time_iso_8601": "2022-08-31T08:29:54.786148Z",
                "url": "https://files.pythonhosted.org/packages/7a/ff/c2a50259994a8eaeb59d385fd30236829feeec124c56f463a96aab401983/turbo_broccoli-1.5.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}