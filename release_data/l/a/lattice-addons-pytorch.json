{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lattice-addons-pytorch",
            "package_url": "https://pypi.org/project/lattice-addons-pytorch/",
            "platform": null,
            "project_url": "https://pypi.org/project/lattice-addons-pytorch/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/lattice-addons-pytorch/0.0.1/",
            "requires_dist": [
                "torch",
                "boto3"
            ],
            "requires_python": ">=3.7",
            "summary": "Lattice Add-ons",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15270861,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7187ac558e8159df1a7abc1654cb61d9",
                    "sha256": "e45c56da20fd10d20149b79e1ab8e14906f332712a6f597f836c4c19fff9a24b"
                },
                "downloads": -1,
                "filename": "lattice_addons_pytorch-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7187ac558e8159df1a7abc1654cb61d9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 4123,
                "upload_time": "2022-09-28T02:14:27",
                "upload_time_iso_8601": "2022-09-28T02:14:27.192369Z",
                "url": "https://files.pythonhosted.org/packages/95/35/8c5fecacfcd1131aaad4e824f341ec2176caa780740cf472eebee8f5cfab/lattice_addons_pytorch-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# State Needed from Agent\nThe addons use a set of environment variables that are passed from the agent to understand where they should write checkpoints and how often.\nIt utilizes the following:\n\n`LATTICE_CHECKPOINT_ENDPOINT`\n\nThis is a string which indicates where the add-ons should write and look for checkpoints.\nIf using S3 for example, it takes the following format: `s3://breeze-checkpoint/path/to/storage/`\nIt will then use this endpoint to find the S3 bucket and the storage path and save the checkpoints there.\n\n`LATTICE_RUN_ID`\n\nThis is a string which indicates the current rendezvous ID.\nThis is taken from the agent's `LATTICE_RDZV_ID` so that when storing checkpoints they can be stored\nsafely without conflicting with checkpoints stored by other jobs using the same storage backend.\nContinuing the example above, the worker would store its checkpoints at\n`s3://breeze-checkpoint/path/to/storage/<run_id>/checkpoint/`.\nTODO: Make the usage of `run_id` and `rdzv_id` consistent.\n\n`LATTICE_STEPS_PER_CHECKPOINT`\n\nThis is passed to the agent to tell it how often to write checkpoints.\nThis can be configured by the agent's --steps-per-checkpoint CLI arg or environment variable.\n\n\n## How to pass state\nThere are two ways to pass state to the worker:\n\n1. Add it to the `extra_env` dictionary seen [here](https://github.com/breezeml/lattice-agent/blob/8571870de3e2635819edeb4f48b289c9e0eb3b01/src/lattice/torch/launcher/api.py#L227)\n\n2. Add it to the `worker_env` dictionary seen [here](https://github.com/breezeml/lattice-agent/blob/8571870de3e2635819edeb4f48b289c9e0eb3b01/src/lattice/elastic/agent/server/lattice_agent.py#L58)\n\n    **Warning** Make sure all state passed through this dict is a string!\n# Lattice PyTorch Addons\n\nLattice PyTorch Addons provides a convenient way of making your code resilient and elastic through\na simple function decorator.\n\n## How to use\n\nInclude this import at the top of your training script.\n```python\nimport lattice_addons.pytorch as lte\n```\n\nInitialize all objects needed for training before the main training loop, such as your model,\noptimizer, etc.\n\n```python\nmodel = ...\noptimizer = ...\nloss_fn = ...\ntrainset, testset = get_datasets()\n\ntrain_dataloader = ...\ntest_dataloader = ...\n```\n\nOnce you have this done, make sure to encapsulate your full training loop in a single function, such as\nthe following:\n```python\n@lte.run\ndef full_train(model: torch.nn.Module, sampler, loader, optimizer: torch.optim.Optimizer, lr_scheduler, num_epochs: int, loss_fn, test_loader):\n    for e in range(0, num_epochs):\n        print(\"Starting epoch\", e)\n\n        run_train(e, model, optimizer, loss_fn, loader)\n\n        run_eval(model, loss_fn, test_loader)\n```\nNote a few things about this function:\n\n1. It takes all the objects required for training\n\n2. It then runs the required number of epochs and training steps\n\n3. **Decorator:** It is decorated by the `@lte.run` decorator\n\n### `@lte.run` Decorator\nThis decorator creates wrappers of each component used for training in PyTorch.\nIt transparently forwards calls to the underlying object so that custom calls implemented\nby the user will not be affected.\nIt then uses the standard calls to `forward()` in PyTorch to monitor training progress\nand periodically save checkpoints.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lattice-addons-pytorch",
            "package_url": "https://pypi.org/project/lattice-addons-pytorch/",
            "platform": null,
            "project_url": "https://pypi.org/project/lattice-addons-pytorch/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/lattice-addons-pytorch/0.1.1/",
            "requires_dist": [
                "torch",
                "boto3"
            ],
            "requires_python": ">=3.7",
            "summary": "Lattice Add-ons",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15270861,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "586c9ddf5da29062d2945335535ced02",
                    "sha256": "89facfcd37236cf42e9c391908b58ad90b03c3e4937ba128185ec8cebff2c699"
                },
                "downloads": -1,
                "filename": "lattice_addons_pytorch-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "586c9ddf5da29062d2945335535ced02",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 9010,
                "upload_time": "2022-09-30T19:15:58",
                "upload_time_iso_8601": "2022-09-30T19:15:58.625195Z",
                "url": "https://files.pythonhosted.org/packages/cd/53/1b3341af76354e2335004933636501a00b11b33679ae89ac75c80b70f2b0/lattice_addons_pytorch-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}