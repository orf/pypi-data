{
    "0.5": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.5/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2d0ff700bc05a5672aa14e1e911ece17",
                    "sha256": "7c5fe44df47a31c7e4c4aea1354adeeb7015da49eac87f5df01be341e3cc030d"
                },
                "downloads": -1,
                "filename": "bdsim-0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "2d0ff700bc05a5672aa14e1e911ece17",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 22958,
                "upload_time": "2020-05-25T01:23:42",
                "upload_time_iso_8601": "2020-05-25T01:23:42.494309Z",
                "url": "https://files.pythonhosted.org/packages/21/cf/7b7abaa6a40e90b3ae8c935a856034b67723cfef78634fedba49ef43841c/bdsim-0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.1": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.5.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c98d6054571ee8950a9f5f40bcd52f1d",
                    "sha256": "31e3ff3c81b5c27b08506281bd9665f3410403a27e2395fca151ed77a5991335"
                },
                "downloads": -1,
                "filename": "bdsim-0.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c98d6054571ee8950a9f5f40bcd52f1d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 23023,
                "upload_time": "2020-05-25T01:28:08",
                "upload_time_iso_8601": "2020-05-25T01:28:08.515900Z",
                "url": "https://files.pythonhosted.org/packages/57/c6/e75d5d42e2197c23a616f36869fc6379391b72fb7b50f7f861c85890a8e3/bdsim-0.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.2": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.5.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.5.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4d92ffd9aa1670210a935746cc766abe",
                    "sha256": "dc90737d1c9a5db4ff580ea8d9a3515f15fe5d6bd779c5dd7dd87c15809b717e"
                },
                "downloads": -1,
                "filename": "bdsim-0.5.2.tar.gz",
                "has_sig": false,
                "md5_digest": "4d92ffd9aa1670210a935746cc766abe",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 23490,
                "upload_time": "2020-05-25T01:46:53",
                "upload_time_iso_8601": "2020-05-25T01:46:53.585953Z",
                "url": "https://files.pythonhosted.org/packages/c3/92/3dc1af4e367bfebe236ca34ec2c47c6c91c8c116e87048ce9131a0261b0d/bdsim-0.5.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.6/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f1f365b08fd5bcab1715be2a13728de0",
                    "sha256": "ac49f16c936614cd826dcd375c6a2a587d1e0493d917cb9d5b686eda3e880a78"
                },
                "downloads": -1,
                "filename": "bdsim-0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "f1f365b08fd5bcab1715be2a13728de0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 37670,
                "upload_time": "2020-06-14T10:44:06",
                "upload_time_iso_8601": "2020-06-14T10:44:06.994133Z",
                "url": "https://files.pythonhosted.org/packages/d0/83/0c5b857df419183bc0749c5b64b189f8a3f863e8c796c3a50f4f1e5ce1d1/bdsim-0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.7/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "47dbf75ef5a52e2dc510ea1e224d4863",
                    "sha256": "faaefee903cfa83c06fbf7377d06e7a4f868570f095d7b90de25a2708e4d0de8"
                },
                "downloads": -1,
                "filename": "bdsim-0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "47dbf75ef5a52e2dc510ea1e224d4863",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 55718,
                "upload_time": "2020-06-28T22:36:19",
                "upload_time_iso_8601": "2020-06-28T22:36:19.447395Z",
                "url": "https://files.pythonhosted.org/packages/0f/af/b68dbff597bbfee71cb21456e46e77138273a1a47315ac35f401a5e81785/bdsim-0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.1": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.7.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.7.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aca0c14726d50ba183a81e3800dbdbdf",
                    "sha256": "a41783c0ca7ad5b376b4a6723dc7e15846f02d870a9095a74c28c069b3d693db"
                },
                "downloads": -1,
                "filename": "bdsim-0.7.1.tar.gz",
                "has_sig": false,
                "md5_digest": "aca0c14726d50ba183a81e3800dbdbdf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 55817,
                "upload_time": "2020-06-29T00:57:34",
                "upload_time_iso_8601": "2020-06-29T00:57:34.952392Z",
                "url": "https://files.pythonhosted.org/packages/0b/ed/afcd2ef98b3930e0e270f7c6b1e6c1f030867fedded5ffffd22a779044ca/bdsim-0.7.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.2": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": "",
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.7.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.7.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a151a5005bcf2803a741d11a691daead",
                    "sha256": "51143b2910863851cfe7bdf570ff13fc7b10ed8d29c289617287452a11f8aa76"
                },
                "downloads": -1,
                "filename": "bdsim-0.7.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a151a5005bcf2803a741d11a691daead",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 66882,
                "upload_time": "2021-03-28T04:02:12",
                "upload_time_iso_8601": "2021-03-28T04:02:12.139136Z",
                "url": "https://files.pythonhosted.org/packages/c6/cc/cb9f85e10a25070cdf16f9092877d88368befec9913ca096761f54dd5d41/bdsim-0.7.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.0": {
        "info": {
            "author": "Peter Corke",
            "author_email": "rvc@petercorke.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "[![A Python Robotics Package](https://raw.githubusercontent.com/petercorke/robotics-toolbox-python/master/.github/svg/py_collection.min.svg)](https://github.com/petercorke/robotics-toolbox-python)\n[![QUT Centre for Robotics Open Source](https://github.com/qcr/qcr.github.io/raw/master/misc/badge.svg)](https://qcr.github.io)\n\n[![PyPI version](https://badge.fury.io/py/bdsim.svg)](https://badge.fury.io/py/bdsim)\n![Python Version](https://img.shields.io/pypi/pyversions/bdsim.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n[![Build Status](https://github.com/petercorke/bdsim/workflows/build/badge.svg?branch=master)](https://github.com/petercorke/bdsim/actions?query=workflow%3Abuild)\n[![Coverage](https://codecov.io/gh/petercorke/bdsim/branch/master/graph/badge.svg)](https://codecov.io/gh/petercorke/bdsim)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/petercorke/bdsim.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/petercorke/bdsim/context:python)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/bdsim)](https://pypistats.org/packages/bdsim)\n[![GitHub stars](https://img.shields.io/github/stars/petercorke/bdsim.svg?style=social&label=Star)](https://GitHub.com/petercorke/bdsim/stargazers/)\n\n<table style=\"border:0px\">\n<tr style=\"border:0px\">\n<td style=\"border:0px\">\n<img src=\"https://github.com/petercorke/bdsim/raw/master/figs/BDSimLogo_NoBackgnd@2x.png\" width=\"300\"></td>\n<td style=\"border:0px\">\nA Python block diagram simulation package</a>\n<ul>\n<li><a href=\"https://github.com/petercorke/bdsim\">GitHub repository </a></li>\n<li><a href=\"https://petercorke.github.io/bdsim\">Documentation</a></li>\n<li><a href=\"https://github.com/petercorke/bdsim/wiki\">Wiki (examples and details)</a></li>\n<li><a href=\"installation#\">Installation</a></li>\n<li>Dependencies: numpy, scipy, matplotlibb, <a href=\"https://github.com/petercorke/ansitable\">ansitable</a>, ffmpeg (if rendering animations as a movie)</li>\n</ul>\n</td>\n</tr>\n</table>\n\n`bdsim` is Python 3 package that enables modelling and simulation of continuous-time, discrete-time or hybrid dynamic systems.  Systems are conceptualized in block diagram form, but represented in terms of Python objects. \n\n  <table>\n  <tr>\n  <td>\n  <img width=450 src=\"https://github.com/petercorke/bdsim/raw/master/figs/bd1-sketch.png\">\n  </td>\n  <td style=\"padding-left: 20px;\">\n  <pre style=\"font-size:10px;\">\n  # define the blocks\n  demand = bd.STEP(T=1, name='demand')\n  sum = bd.SUM('+-')\n  gain = bd.GAIN(10)\n  plant = bd.LTI_SISO(0.5, [2, 1])\n  scope = bd.SCOPE(styles=['k', 'r--'])\n  # connect the blocks\n  bd.connect(demand, sum[0], scope[1])\n  bd.connect(plant, sum[1])\n  bd.connect(sum, gain)\n  bd.connect(gain, plant)\n  bd.connect(plant, scope[0])\n  </pre>\n  </td>\n  </tr>\n  </table>\n\nKey features include:\n\n* The block diagram can be created easily using Python code, rather than drawing boxes and wires. This enables use of your favourite IDE, standard version control tools and development workflows.\n* Wires can communicate *any* Python type such as scalars, lists, dicts, NumPy arrays, objects, and functions. For robotics and vision applications using the [Spatial Maths Toolbox for Python](https://github.com/petercorke/spatialmath-python) wires could send values such as `SE3`, `UnitQuaternion` or `Twist3` objects.\n* Over 70 blocks for linear, nonlinear functions, display blocks, as well as continuous- and discrete-time dynamics\n  * Easy to add your own block, it's simply a class\n  * Subsystems are supported, and a subsystem can be independently instantiated multiple times in a system.  Subsystems can also be nested.\n  * Blocks from other toolboxes are automatically discovered and included. There are blocks for some functions in the  [Robotics Toolbox for Python](https://github.com/petercorke/robotics-toolbox-python) (such as arm, ground and aerial robots) and [Machine Vision Toolbox for Python](https://github.com/petercorke/machinevision-toolbox-python) (such as cameras). These are defined in the `blocks` folder of those toolboxes.\n* The diagram can be executed in a headless configuration, particularly useful on an embedded computer like a RaspberryPi.\n* A [python-based graphical editor](bdedit-the-graphical-editing-tool)\n  * allows graphical creation of block diagrams\n  * the diagram is stored in a human readable/editable JSON file with extension `.bd`\n  * creates good-quality graphics for inclusion in publications\n  * can launch `bdsim` to import and execute the model\n  * automatically discovers all bsdim and toolbbox blocks and adds them to the block library menu\n  * icons can be easily created using any image creation tool or a LaTeX expression \n\n# Getting started\n\nWe first sketch the dynamic system we want to simulate as a block diagram, for example this simple first-order system\n\n![block diagram](https://github.com/petercorke/bdsim/raw/master/figs/bd1-sketch.png)\n\nwhich we can express concisely with `bdsim` as (see [`bdsim/examples/eg1.py`](https://github.com/petercorke/bdsim/blob/master/examples/eg1.py))\n\n```python\n     1  #!/usr/bin/env python3\n     2  import bdsim\t\n     4  sim = bdsim.BDSim()  # create simulator\n     5  bd = sim.blockdiagram()  # create an empty block diagram\n     6\t\n     7\t# define the blocks\n     8\tdemand = bd.STEP(T=1, name='demand')\n     9\tsum = bd.SUM('+-')\n    10\tgain = bd.GAIN(10)\n    11\tplant = bd.LTI_SISO(0.5, [2, 1], name='plant')\n    12\tscope = bd.SCOPE(styles=['k', 'r--'])\n    13\t\n    14\t# connect the blocks\n    15\tbd.connect(demand, sum[0], scope[1])\n    17\tbd.connect(sum, gain)\n    18\tbd.connect(gain, plant)\n    19\tbd.connect(plant, sum[1], scope[0])\n    20\t\n    21\tbd.compile()   # check the diagram\n    22\tbd.report()    # list all blocks and wires\n    23\n    24  out = sim.run(bd, 5)   # simulate for 5s\n    25  sim.savefig(scope, 'scope0')\n    26  sim.done(bd, block=True)\n```\nwhich is just 16 lines of executable code.\n\nThe red block annotations on the hand-drawn diagram are used as the names of the variables holding references to the block instance. The blocks can also have user-assigned names, see lines 8 and 11, which are used in diagnostics and as labels in plots.\n\nAfter the blocks are created their input and output ports need to be connected. In `bdsim` all wires are point to point, a *one-to-many* connection is implemented by *many* wires,\nfor example\n```\nbd.connect(source, dest1, dest2, ...)\n```\ncreates individual wires from `source` -> `dest1`, `source` -> `dest2` and so on.\nPorts are designated using Python indexing notation, for example `block[2]` is port 2 (the third port) of `block`.  Whether it is an input or output port depends on context.\nIn the example above an index on the first argument refers to an output port, while on the second (or subsequent) arguments it refers to an input port.  If a block has only a single input or output port then no index is required, 0 is assumed.\n\nA group of ports can be denoted using slice notation, for example \n```\nbd.connect(source[2:5], dest[3:6)\n```\nwill connect `source[2]` -> `dest[3]`, `source[3]` -> `dest[4]`, `source[4]` -> `dest[5]`.\nThe number of wires in each slice must be consistent.  You could even do a cross over by connecting `source[2:5]` to `dest[6:3:-1]`.\n\nLine 21 assembles all the blocks and wires, instantiates subsystems, checks connectivity to create a flat wire list, and then builds the dataflow execution plan.\n\nLine 22 generates a report, in tabular form, showing a summary of the block diagram:\n\n```\nBlocks::\n\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502id \u2502    name \u2502 nin \u2502 nout \u2502 nstate \u2502 ndstate \u2502 type  \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0 \u2502  demand \u2502   0 \u2502    1 \u2502      0 \u2502       0 \u2502 step  \u2502\n\u2502 1 \u2502   sum.0 \u2502   2 \u2502    1 \u2502      0 \u2502       0 \u2502 sum   \u2502\n\u2502 2 \u2502  gain.0 \u2502   1 \u2502    1 \u2502      0 \u2502       0 \u2502 gain  \u2502\n\u2502 3 \u2502   plant \u2502   1 \u2502    1 \u2502      1 \u2502       0 \u2502 LTI   \u2502\n\u2502 4 \u2502 scope.0 \u2502   2 \u2502    0 \u2502      0 \u2502       0 \u2502 scope \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nWires::\n\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502id \u2502 from \u2502  to  \u2502       description        \u2502  type   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0 \u2502 0[0] \u2502 1[0] \u2502 demand[0] --> sum.0[0]   \u2502 int     \u2502\n\u2502 1 \u2502 0[0] \u2502 4[1] \u2502 demand[0] --> scope.0[1] \u2502 int     \u2502\n\u2502 2 \u2502 3[0] \u2502 1[1] \u2502 plant[0] --> sum.0[1]    \u2502 float64 \u2502\n\u2502 3 \u2502 1[0] \u2502 2[0] \u2502 sum.0[0] --> gain.0[0]   \u2502 float64 \u2502\n\u2502 4 \u2502 2[0] \u2502 3[0] \u2502 gain.0[0] --> plant[0]   \u2502 float64 \u2502\n\u2502 5 \u2502 3[0] \u2502 4[0] \u2502 plant[0] --> scope.0[0]  \u2502 float64 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nContinuous state variables:   1\nDiscrete state variables:     0\ninitial state  x0 =  [0.]\n```\nIn the first table we can see key information about each block, its `id` (used internally), name, the number of input and output ports, the number of\ncontinuous- and discrete-time states, and the type which is the block class.  Note that the name is auto-generated based on the type, except if it has\nbeen set explicitly as for the blocks `demand` and `plant`.\n\nThe second table shows all wires in point-to-point form, showing the start and end block and port (the block is represented here by its `id`) and the type of the object sent along the wire.\n\nFinally, there is a summary of the number of states for the complete system: the number of continuous states, the number\nof discrete states, and the initial value of the continuous state vector.\n\nLine 24 runs the simulation for 5 seconds \nusing the default variable-step RK45 solver and saves output values at least every 0.1s.  The scope block pops up a graph\n\n![bdsim output](https://github.com/petercorke/bdsim/raw/master/figs/Figure_1.png)\n\nThe simulation results are in a container object\n```\n>>> out\nresults:\nt           | ndarray (67,)\nx           | ndarray (67, 1)\nxnames      | list              \n```\nwhich contains an array of time values, an array of state values, and a list of the names of the state variables.\n\nLine 25 saves the content of the scope to be saved in the file called `scope0.pdf`.\n\nLine 26 blocks the script until all figure windows are closed, or the script is killed with SIGINT.\n\nThe result `out` is effectively a structure with elements\n\n```\n>>> out\nresults:\nt           | ndarray (67,)\nx           | ndarray (67, 1)\nxnames      | list        \ny0          | ndarray (67,)\ny1          | ndarray (67,)\nynames      | list   \n```\nwhere\n\n- `t` the time vector: ndarray, shape=(M,)\n- `x` is the state vector: ndarray, shape=(M,N), one row per timestep\n- `xnames` is a list of the names of the states corresponding to columns of `x`, eg. \"plant.x0\"\n\nThe `watch` argument is a list of outputs to log, in this case `plant` defaults\nto output port 0.  This information is saved in additional variables `y0`, `y1`\netc.  `ynames` is a list of the names of the watched variables.\n\nLine 29 saves the scope graphics as a PDF file.\n\nLine 30 blocks until the last figure is dismissed.\n\nMore details on this Wiki about:\n\n- [Adding blocks](Adding-blocks)\n- [Connecting blocks](Connecting-blocks)\n- [Running the simulation](Running)\n\n\n## Other examples\n\nIn the folder `bdsim/examples` you can find a few other runnable examples:\n\n- [`eg1.py`](https://github.com/petercorke/bdsim/blob/master/examples/eg1.py) the example given above\n- [`waveform.py`](https://github.com/petercorke/bdsim/blob/master/examples/waveform.py) two signal generators connected to two scopes\n\nExamples from Chapter four of _Robotics, Vision & Control (2017)_:\n\n- [`rvc4_2.py`](https://github.com/petercorke/bdsim/blob/master/examples/rvc4_2.py) Fig 4.2 - a car-like vehicle with bicycle kinematics driven by a rectangular pulse steering signal\n- [`rvc4_4.py`](https://github.com/petercorke/bdsim/blob/master/examples/rvc4_4.py) Fig 4.4 - a car-like vehicle driving to a point\n\n![RVC Figure 4.4](https://github.com/petercorke/bdsim/raw/master/figs/rvc4_4.gif)\n\n- [`rvc4_6.py`](https://github.com/petercorke/bdsim/blob/master/examples/rvc4_6.py) Fig 4.6 - a car-like vehicle driving to/along a line\n\n![RVC Figure 4.6](https://github.com/petercorke/bdsim/raw/master/figs/rvc4_6.gif)\n\n- [`rvc4_8.py`](https://github.com/petercorke/bdsim/blob/master/examples/rvc4_8.py) Fig 4.8 - a car-like vehicle using pure-pursuit trajectory following\n\n![RVC Figure 4.6](https://github.com/petercorke/bdsim/raw/master/figs/rvc4_8.gif)\n\n- [`rvc4_11.py`](https://github.com/petercorke/bdsim/blob/master/examples/rvc4_11.py) Fig 4.11 a car-like vehicle driving to a pose\n\n![RVC Figure 4.11](https://github.com/petercorke/bdsim/raw/master/figs/rvc4_11.gif)\n\nFigs 4.8 (pure pursuit) and Fig 4.21 (quadrotor control) are yet to be done.\n\n# A more concise way\n\nWiring, and some simple arithmetic blocks like `GAIN`, `SUM` and `PROD` can be implicitly generated by overloaded Python operators.  This strikes a nice balance between block diagram coding and Pythonic programming.\n\n```\n     1  #!/usr/bin/env python3\n     2\n     3  import bdsim\n     4\n     5  sim = bdsim.BDSim()  # create simulator\n     6  bd = sim.blockdiagram()  # create an empty block diagram\n     7\n     8  # define the blocks\n     9  demand = bd.STEP(T=1, name='demand')\n    10  plant = bd.LTI_SISO(0.5, [2, 1], name='plant')\n    11  scope = bd.SCOPE(styles=['k', 'r--'], movie='eg1.mp4')\n    12\n    13  # connect the blocks using Python syntax\n    14  scope[0] = plant\n    15  scope[1] = demand\n    16  plant[0] = 10 * (demand - plant)\n    17\n    18  bd.compile()   # check the diagram\n    19  bd.report()    # list all blocks and wires\n    20\n    21  sim.set_options(animation=True)\n    22  out = sim.run(bd, 5, watch=[plant,])  # simulate for 5s\n```\nThis requires fewer lines of code and the code is more readable. Importantly, it results in in *exactly the same* block diagram in terms of blocks and wires\n```\nWires::\n\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502id \u2502 from \u2502  to  \u2502         description          \u2502  type   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 0 \u2502 1[0] \u2502 2[0] \u2502 plant[0] --> scope.0[0]      \u2502 float64 \u2502\n\u2502 1 \u2502 0[0] \u2502 2[1] \u2502 demand[0] --> scope.0[1]     \u2502 int     \u2502\n\u2502 2 \u2502 0[0] \u2502 3[0] \u2502 demand[0] --> _sum.0[0]      \u2502 int     \u2502\n\u2502 3 \u2502 1[0] \u2502 3[1] \u2502 plant[0] --> _sum.0[1]       \u2502 float64 \u2502\n\u2502 4 \u2502 3[0] \u2502 4[0] \u2502 _sum.0[0] --> _gain.0(10)[0] \u2502 float64 \u2502\n\u2502 5 \u2502 4[0] \u2502 1[0] \u2502 _gain.0(10)[0] --> plant[0]  \u2502 float64 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\nThe implicitly created blocks have names prefixed with an underscore.\n\n# bdedit: the graphical editing tool\n\n![block diagram](https://github.com/petercorke/bdsim/raw/master/figs/eg1-bdedit.png)\n\n`bdedit` is a multi-platform PyQt5-based graphical tool to create, edit, render and execute block diagram models.\n\nFrom the examples folder\n```\n% bdedit eg1.bd\n```\nwill create a display like that shown above.  Pushing the run button, top left (triangle in circle) will spawn `bdrun` as a subprocess which will:\n\n* parse the JSON file\n* instantiate all blocks and wires\n* compile and run the diagram\n\n\n# Limitations\n\nThere are lots!  The biggest is that `bdsim` is based on a very standard variable-step integrator from the scipy library.  For discontinuous inputs (step, square wave, triangle wave, piecewise constant) the transitions get missed.  This also makes it inaccurate to simulate hybrid discrete-continuous time systems.  We really need a better integrator, perhaps [`odedc`](https://help.scilab.org/docs/6.1.0/en_US/odedc.html) from SciLab could be integrated.",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/petercorke/bdsim",
            "keywords": "python block-diagram dynamic simulation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bdsim",
            "package_url": "https://pypi.org/project/bdsim/",
            "platform": null,
            "project_url": "https://pypi.org/project/bdsim/",
            "project_urls": {
                "Homepage": "https://github.com/petercorke/bdsim",
                "Source": "https://github.com/petercorke/bdsim",
                "Tracker": "https://github.com/petercorke/bdsim/issues"
            },
            "release_url": "https://pypi.org/project/bdsim/0.9.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Simulate dynamic systems expressed in block diagram form using Python.",
            "version": "0.9.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14552140,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cebeae9a42f499ad439a6b5b6ba4fc6e",
                    "sha256": "63544d52908ae34046041e5ce5783eb407a48ab977cc43b1faee91ad4dd04275"
                },
                "downloads": -1,
                "filename": "bdsim-0.9.0.tar.gz",
                "has_sig": false,
                "md5_digest": "cebeae9a42f499ad439a6b5b6ba4fc6e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 30865914,
                "upload_time": "2022-07-26T11:19:13",
                "upload_time_iso_8601": "2022-07-26T11:19:13.509204Z",
                "url": "https://files.pythonhosted.org/packages/d8/51/c6fddb04f4c0c31a093df6cacef49c28270c9244fc060727c468aa07ffbd/bdsim-0.9.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}