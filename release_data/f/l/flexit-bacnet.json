{
    "1.0.0": {
        "info": {
            "author": "Piotr Buli\u0144ski",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Flexit BACnet\n\nThis library allows integration with Flexit Nordic series of air handling units via BACnet protocol.\n\n## Prerequisites\n\nIn order to use that library, you need to know the IP address and Device ID of your unit.\n\n1. Open Flexit Go app on your mobile.\n2. Use \"Find product\" button on tha main screen.\n3. Select your device and press \"Connect\".\n4. Enter installer code (default: 1000) and press \"Login\".\n5. Open \"More\" menu -> Installer -> Communication -> BACnet settings.\n6. Note down \"IP address\" and \"Device ID\".\n\n## Connecting to a device\n\n```python\n# import FlexitBACnet\nfrom flexit_bacnet import FlexitBACnet\n\nif __name__ == '__main__':\n    # create a FlexitBACnet device instance with the IP address and Device ID\n    device = FlexitBACnet('192.168.0.18', 2)\n\n    # check whether device address and ID are correct\n    if not device.is_valid():\n        raise Exception('not a valid device')\n\n    # check device name and s/n\n    print('Device Name:', device.device_name)\n    print('Serial Number:', device.serial_number)\n```\n\n## Interacting with the device\n\nFor list of available states and interactions, please study [device.py](./flexit_bacnet/device.py).\n\nFor example, changing ventilation mode can be done as follows:\n\n```python\n# import FlexitBACnet\nfrom flexit_bacnet import (\n    FlexitBACnet,\n    VENTILATION_MODE,\n)\n\nif __name__ == '__main__':\n    # create a FlexitBACnet device instance with the IP address and Device ID\n    device = FlexitBACnet('192.168.0.18', 2)\n\n    # check current ventilation mode\n    print('ventilation mode (before):', device.ventilation_mode)\n\n    # set ventilation mode to High\n    device.set_ventilation_mode(VENTILATION_MODE.HIGH)\n\n    # check current ventilation mode again\n    print('ventilation mode (after):', device.ventilation_mode)\n```\n\nWhich would result in the following output:\n\n```text\nventilation mode (before): Home\nventilation mode (after): High\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "flexit-bacnet",
            "package_url": "https://pypi.org/project/flexit-bacnet/",
            "platform": null,
            "project_url": "https://pypi.org/project/flexit-bacnet/",
            "project_urls": {
                "Bug Tracker": "https://github.com/piotrbulinski/flexit_bacnet/issues",
                "Homepage": "https://github.com/piotrbulinski/flexit_bacnet"
            },
            "release_url": "https://pypi.org/project/flexit-bacnet/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Client BACnet library for Flexit Nordic series of air handling units.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15305276,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1c5df5a11fa9c00e13a426627d95da7e",
                    "sha256": "ce1d56db66a848d5d1a30838003cbbdf594a60659c9a9edf0c10e5ee3b21b863"
                },
                "downloads": -1,
                "filename": "flexit_bacnet-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1c5df5a11fa9c00e13a426627d95da7e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9444,
                "upload_time": "2022-10-04T18:27:43",
                "upload_time_iso_8601": "2022-10-04T18:27:43.259658Z",
                "url": "https://files.pythonhosted.org/packages/30/3a/a79b70ea2451d00b78cdea9791b71f858200abccbc43e120c2bc9b10831c/flexit_bacnet-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ab558d1f029ee3154408c2c455e785a7",
                    "sha256": "3c21bd952698055c57968b0e682359f58a9f2fc4f42e9c8788e0ea3cdc290f2a"
                },
                "downloads": -1,
                "filename": "flexit_bacnet-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ab558d1f029ee3154408c2c455e785a7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8669,
                "upload_time": "2022-10-04T18:27:45",
                "upload_time_iso_8601": "2022-10-04T18:27:45.436015Z",
                "url": "https://files.pythonhosted.org/packages/1a/82/26274a39d34726abf21c935d523c01a9f59ba7529a760a32be42b3be7a72/flexit_bacnet-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}