{
    "0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved",
                "Operating System :: MacOS",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX",
                "Operating System :: Unix",
                "Programming Language :: Python",
                "Topic :: Scientific/Engineering",
                "Topic :: Software Development"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "http://github.com/jonescompneurolab/hnn-core",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "BSD (3-clause)",
            "maintainer": "Mainak Jas",
            "maintainer_email": "mainakjas@gmail.com",
            "name": "hnn-core",
            "package_url": "https://pypi.org/project/hnn-core/",
            "platform": "any",
            "project_url": "https://pypi.org/project/hnn-core/",
            "project_urls": {
                "Download": "http://github.com/jonescompneurolab/hnn-core"
            },
            "release_url": "https://pypi.org/project/hnn-core/0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Code for biophysical simulation of a cortical column using Neuron",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11584529,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4830cb45342ba740d36370a89ce0d4dd",
                    "sha256": "50069745c349f3a4ed275eab8c6c952b5dc13c5cfb0c2a28bd32c0a491adcb56"
                },
                "downloads": -1,
                "filename": "hnn-core-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4830cb45342ba740d36370a89ce0d4dd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 100478,
                "upload_time": "2021-03-04T03:06:30",
                "upload_time_iso_8601": "2021-03-04T03:06:30.697159Z",
                "url": "https://files.pythonhosted.org/packages/54/28/cf64b5efc913469e5ebfff344a9ae4b469bad629fed19995d53850422e58/hnn-core-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved",
                "Operating System :: MacOS",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX",
                "Operating System :: Unix",
                "Programming Language :: Python",
                "Topic :: Scientific/Engineering",
                "Topic :: Software Development"
            ],
            "description": "hnn-core\n========\n\n.. image:: https://circleci.com/gh/jonescompneurolab/hnn-core.svg?style=svg\n   :target: https://circleci.com/gh/jonescompneurolab/hnn-core\n   :alt: CircleCi\n\n.. image:: https://api.travis-ci.org/jonescompneurolab/hnn-core.svg?branch=master\n    :target: https://travis-ci.org/jonescompneurolab/hnn-core\n    :alt: Build Status\n\n.. image:: https://codecov.io/gh/jonescompneurolab/hnn-core/branch/master/graph/badge.svg\n\t:target: https://codecov.io/gh/jonescompneurolab/hnn-core\n\t:alt: Test coverage\n\nThis is a leaner and cleaner version of the code based off the `HNN repository <https://github.com/jonescompneurolab/hnn>`_. However, a Graphical User Interface is not supported at the moment in this repository.\n\nIt is early Work in Progress. Contributors are very welcome.\n\nDependencies\n------------\n\n* numpy\n* scipy\n* matplotlib\n* Neuron (>=7.7)\n\nOptional dependencies\n---------------------\n\n* joblib (for simulating trials simultaneously)\n* mpi4py (for simulating the cells in parallel for a single trial). Also depends on:\n\n  * openmpi or other mpi platform installed on system\n  * psutil\n\nInstallation\n============\n\nWe recommend the `Anaconda Python distribution <https://www.anaconda.com/products/individual>`_.\nTo install ``hnn-core``, simply do::\n\n   $ pip install hnn_core\n\nand it will install ``hnn-core`` along with the dependencies which are not already installed.\n\nNote that if you installed Neuron using the traditional installer package, it is recommended\nto remove it first and unset ``PYTHONPATH`` and ``PYTHONHOME`` if they were set. This is\nbecause the pip installer works better with virtual environments such as the ones provided by ``conda``.\n\nIf you want to track the latest developments of ``hnn-core``, you can install the current version of the code (nightly) with::\n\n\t$ pip install --upgrade https://api.github.com/repos/jonescompneurolab/hnn-core/zipball/master\n\nTo check if everything worked fine, you can do::\n\n\t$ python -c 'import hnn_core'\n\nand it should not give any error messages.\n\n**Parallel backends**\n\nFor further instructions on installation and usage of parallel backends for using more\nthan one CPU core, refer to `parallel_backends`_\n\n**Note for Windows users**\n\nThe pip installer for Neuron does not yet work for Windows. In this case, it is better to\ninstall ``hnn_core`` without the dependencies::\n\n   $ pip install hnn_core --no-deps\n\nand then install the dependencies separately::\n\n   $ pip install scipy numpy matplotlib\n\nand install Neuron using the traditional package installer available here\n`https://neuron.yale.edu/neuron/ <https://neuron.yale.edu/neuron/>`_.\n\nDocumentation and examples\n==========================\n\nOnce you have tested that ``hnn_core`` and its dependencies were installed,\nwe recommend downloading and executing the\n`example scripts <https://jonescompneurolab.github.io/hnn-core/stable/auto_examples/index.html>`_\nprovided on the `documentation pages <https://jonescompneurolab.github.io/hnn-core/>`_\n(as well as in the `GitHub repository <https://github.com/jonescompneurolab/hnn-core>`_).\n\nNote that ``python`` plots are by default non-interactive (blocking): each plot must thus be closed before the code execution continues. We recommend using and 'interactive' python interpreter such as ``ipython``::\n\n   $ ipython --matplotlib\n\nand executing the scripts using the ``%run``-magic::\n\n   %run plot_simulate_evoked.py\n\nWhen executed in this manner, the scripts will execute entirely, after which all plots will be shown. For an even more interactive experience, in which you execute code and interrogate plots in sequential blocks, we recommend editors such as `VS Code <https://code.visualstudio.com>`_ and `Spyder <https://docs.spyder-ide.org/current/index.html>`_.\n\nBug reports\n===========\n\nUse the `github issue tracker <https://github.com/jonescompneurolab/hnn-core/issues>`_ to\nreport bugs. For user questions and scientific discussions, please join the\n`HNN Google group <https://groups.google.com/g/hnnsolver>`_.\n\nInterested in Contributing?\n===========================\n\nRead our `contributing guide <https://github.com/jonescompneurolab/hnn-core/blob/master/CONTRIBUTING.rst>`_.\n\n.. _parallel_backends: https://jonescompneurolab.github.io/hnn-core/stable/parallel.html\n\n\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "http://github.com/jonescompneurolab/hnn-core",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "BSD (3-clause)",
            "maintainer": "Mainak Jas",
            "maintainer_email": "mainakjas@gmail.com",
            "name": "hnn-core",
            "package_url": "https://pypi.org/project/hnn-core/",
            "platform": "any",
            "project_url": "https://pypi.org/project/hnn-core/",
            "project_urls": {
                "Download": "http://github.com/jonescompneurolab/hnn-core"
            },
            "release_url": "https://pypi.org/project/hnn-core/0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Code for biophysical simulation of a cortical column using Neuron",
            "version": "0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11584529,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc91556b133cacb5270b73199101f5f2",
                    "sha256": "9969e06c258daff1b1a3170aa24c5aab3a47e49c6ddcd71809ab51347654b0b9"
                },
                "downloads": -1,
                "filename": "hnn-core-0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "fc91556b133cacb5270b73199101f5f2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 305059,
                "upload_time": "2021-09-29T17:56:57",
                "upload_time_iso_8601": "2021-09-29T17:56:57.318798Z",
                "url": "https://files.pythonhosted.org/packages/d6/f2/22db1d0b9dafa2e87d47505eb107cbe209a50cb73a2cea6f33e7eb670f05/hnn-core-0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}