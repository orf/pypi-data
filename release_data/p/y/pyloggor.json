{
    "1.0.0": {
        "info": {
            "author": "Parth Mittal",
            "author_email": "parth@thekoalaco.in",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.github.com/PrivatePandaCO/pyloggor",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyloggor",
            "package_url": "https://pypi.org/project/pyloggor/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyloggor/",
            "project_urls": {
                "Changelog": "https://github.com/PrivatePandaCO/pyloggor/blob/master/Changelog.md",
                "Documentation": "https://github.com/PrivatePandaCO/pyloggor/blob/master/README.md",
                "Github": "https://github.com/PrivatePandaCO/pyloggor",
                "Homepage": "https://www.github.com/PrivatePandaCO/pyloggor"
            },
            "release_url": "https://pypi.org/project/pyloggor/1.0.0/",
            "requires_dist": [
                "rich"
            ],
            "requires_python": "",
            "summary": "An incredibly versatile yet simple logging system.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15433544,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dd3a45cc46d75946b64c9a26e14b18df",
                    "sha256": "19096faf94ffa9051b43092eccaeeebf220691a2b19b8eea83ce6eed0a9d7156"
                },
                "downloads": -1,
                "filename": "pyloggor-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dd3a45cc46d75946b64c9a26e14b18df",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6080,
                "upload_time": "2022-10-07T15:17:17",
                "upload_time_iso_8601": "2022-10-07T15:17:17.039154Z",
                "url": "https://files.pythonhosted.org/packages/fd/1b/700f00d7d42f2e69855424166aded7fb33df076b8c6707a8b5f6bd51bd1d/pyloggor-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9dee002af903acc39f494bfec7942913",
                    "sha256": "ddcb27f2c3a7c3bb31f453c508b498734e2ace2a23e14021e4bbeb987c1bfbd1"
                },
                "downloads": -1,
                "filename": "pyloggor-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9dee002af903acc39f494bfec7942913",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6060,
                "upload_time": "2022-10-07T15:17:18",
                "upload_time_iso_8601": "2022-10-07T15:17:18.894924Z",
                "url": "https://files.pythonhosted.org/packages/fb/9f/70e6930913764f61909382b00b1e48167af7d20579b32544ace6b9a57e2c/pyloggor-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Parth Mittal",
            "author_email": "parth@thekoalaco.in",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "The easiest and perhaps the most versatile logger for python, in hundred lines.\n\n## Table of Contents\n- [Installation](#Installation)\n- [Usage](#Usage)\n- [Config](#Config)\n- [Appendix](#Appendix)\n\n### Installation\n---\nAs simple as `pip install pyloggor`!\n\n### Usage\n---\n1) Once installed, you can access the logger class by importing it like so: `from pyloggor import pyloggor`\n2) Instantize the class using: `myLogger = pyloggor()`\n3) Log something! `myLogger.log(level=\"ERROR\", msg=\"JSON config is corrupt.\")`\n\n### Config\n---\n<details>\n\t<summary> Standard </summary>\n\n1. Standard Format.\n\tThis currently does not support customizing the base format, however you CAN pass in extra variables per log, which gets added at the end of the standard format string.\n\t- Standard Format: `[P] DATE_TIME LEVEL FILE TOPIC MSG EXTRAS`\n\n2. Level.\n\t- The default level hierarchy is: `DEBUG` -> `INFO` -> `WARNING` -> `ERROR` -> `CRITICAL`.\n\t\t- This means that if the level is `WARNING`, it will log all WARNINGs, ERRORs, and CRITICALs but not DEBUG and INFO messages.\n\t- You can pass in a custom level as well, which will not effect the level hierarchy and always print as well as log to file.\n\n3. Colouring.\n\t- While passing in default or level_colours config, please pass it in the form of `level_colours={\"LEVEL\": \"[VALID_COLOUR]\"}`\n\t- Here, `VALID_COLOUR` can be any of colours listed [here](https://rich.readthedocs.io/en/stable/appendix/colors.html), additionaly, you can prefix them with `bold ` to make them bold.\n\n</details>\n<details>\n\t<summary> Initialization </summary>\n\n1) `file_output_level`, `console_output_level`:\n\tDifferent levels for file and console output!\n\t- `pyloggor(file_output_level=\"DEBUG\", console_output_level=\"ERROR\")`\n\t- This will write ALL logs to file but only print ERRORs and CRITICALs to the console.\n\t- Both default to `DEBUG`.\n\n2) `fn`:\n\tThe file it will output to, leave empty if it should not output to file.\n\t- Pass in the file name, or the literal file location- it will create the file if it doens't exist.\n\t- Defaults to None.\n\n3) `console_output`:\n\tSet this to `False` if you do not want it to print logs to the console. Defaults to `True`.\n\t\n4) `topic_adjustment_space`, `file_adjustment_space`, `level_adjustment_space`:\n\t- The loggor automatically adds whitespace to the end of topics, file names and levels (passed during logging) to make the output appear more... beautiful, as seen below\n\t- Input as 0 for no adjustment space\n\n5) `level_align`, `topic_align`, `file_align`:\n\t- Can be one of `left`, `center`, `centre`, `right`, all default to `left`.\n\t- Alignment of the text when it's wrapped with whitespace due to (4)\n\n6) `level_colours`:\n\tDefines the colour the log message is printed in.\n\t- Pass in a dict structure like so:\n\t\t```json\n\t\t{\n\t\t\t\"DEBUG\": \"[bold blue]\",\n\t\t\t\"INFO\": \"[bold green]\",\n\t\t\t\"WARNING\": \"[bold yellow]\",\n\t\t\t\"ERROR\": \"[bold red]\",\n\t\t\t\"CRITICAL\": \"[bold red]\"\n\t\t}\n\t\t```\n\t- Colour names should be [rich](\"https://github.com/Textualize/rich\") compliant.\n\t- If no colour is set, it defaults to above mentioned, and if custom level is used, defaults to ``[bold white]``\n\n7) `level_symbols`:\n\tEach log level has a level system at the start of the log entry.\n\t- Pass in a dict structure like so:\n\t\t```json\n\t\t{\n\t\t\t\"DEBUG\": \"D\",\n\t\t\t\"INFO\": \"I\",\n\t\t\t\"WARNING\": \"W\",\n\t\t\t\"ERROR\": \"E\",\n\t\t\t\"CRITICAL\": \"C\"\n\t\t}\n\t\t```\n\t- Defaults to above mentioned and to `*` for all else\n\t- This will get printed as `[D]` at the start of all log entries.\n\t- Check below for a visual example.\n\n8) `delim`:\n\tEach field is separated by this deliminator, defaults to `|` (it gets wrapped with a space on each side).\n\t\n9) `datefmt`:\n\tThe datetime format in which the output is logged, defaults to `\"%d-%b-%y, %H:%M:%S:%f\"`\n\tIt appears something like this: `01-Oct-22, 10:35:21:300273`\n\n</details>\n<details>\n\t<summary> Usage </summary>\n\n1) `level`: Defaults to `DEBUG`\n2) `topic`: The topic of the log entry, defaults to `\"None\"`\n3) `file`: The file in which the log entry was done, useful for debugging! Defaults to `\"NoFile\"`\n4) `msg`: The actual log message. I have no idea why people do this but it defaults to `\"NoMessage\"`\n5) `extras`: A dict, of extras, which are printed beautifully.\n6) `console_output`: boolean, defaults to logger default. Useful if you want to override logger default to print or not to print.\n7) `file_output`: boolean, defaults to logger default. Same usecase as (6).\n\n- You can also use `set_level()` to change the default logging level of the logger instance.\n\t- You an pass in `file_output_level` and `console_output_level`, both of which default to logger default if not passed.\n\n```python\nfrom pyloggor import pyloggor\n\nlogger = pyloggor(fn=\"log.txt\")\n\nlogger.log(level=\"debug\", msg=\"DEBUG\", topic=\"Internal\", file=\"utils/internal.py\")\nlogger.log(level=\"info\", msg=\"This is an info message\", topic=\"Info\", file=\"info.py\", file_output=False)\nlogger.log(level=\"warning\", msg=\"Something is not right here.\", topic=\"Listener\", extras={\"clientOid\": \"1c7c36d3464f11edb212b89a2a091df6\", \"clientName\": \"Joe\"})\nlogger.log(level=\"error\", msg=\"I caught an error.\", topic=\"Error Handling\", file=\"eh.py\")\nlogger.log(level=\"critical\", msg=\"Unhandled exception.\", topic=\"MAIN\", file=\"main.py\", console_output=False)\nlogger.log(level=\"custom\", msg=\"This is custom\", topic=\"customized\", file=\"test/custom.py\")\n```\n</details>\n\n![output](https://github.com/PrivatePandaCO/pyloggor/blob/master/Assets/output.png)\n\n### Appendix\n---\n**Find this incomplete?** Create an [issue](https://github.com/PrivatePandaCO/pyloggor/issues)!\nJust check mi [main profile](https://github.com/ThePrivatePanda) and my site, leave a star if ye liked this!\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.github.com/PrivatePandaCO/pyloggor",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyloggor",
            "package_url": "https://pypi.org/project/pyloggor/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyloggor/",
            "project_urls": {
                "Changelog": "https://github.com/PrivatePandaCO/pyloggor/blob/master/Changelog.md",
                "Documentation": "https://github.com/PrivatePandaCO/pyloggor/blob/master/README.md",
                "Github": "https://github.com/PrivatePandaCO/pyloggor",
                "Homepage": "https://www.github.com/PrivatePandaCO/pyloggor"
            },
            "release_url": "https://pypi.org/project/pyloggor/1.0.1/",
            "requires_dist": [
                "rich"
            ],
            "requires_python": "",
            "summary": "An incredibly versatile yet simple logging system.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15433544,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "83eedd5c9fb149bcb0b1efc3b9af6430",
                    "sha256": "06627378278f6c5a137a951147fbd4bb18dfcf3db3fe7b7881ed435dc4808457"
                },
                "downloads": -1,
                "filename": "pyloggor-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "83eedd5c9fb149bcb0b1efc3b9af6430",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6330,
                "upload_time": "2022-10-17T07:47:06",
                "upload_time_iso_8601": "2022-10-17T07:47:06.014107Z",
                "url": "https://files.pythonhosted.org/packages/74/5a/395ed7f1e80aef1a6bd7966c8ecb2ffe0eb1218a5d03fcd1564f5edcebff/pyloggor-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "33ed55af29193b6524807c884c5a356c",
                    "sha256": "7216dc5071f1d088e45dfc9a954bd818acf83f3b0483cc594f25d1fe2a3e681d"
                },
                "downloads": -1,
                "filename": "pyloggor-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "33ed55af29193b6524807c884c5a356c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6331,
                "upload_time": "2022-10-17T07:47:07",
                "upload_time_iso_8601": "2022-10-17T07:47:07.472616Z",
                "url": "https://files.pythonhosted.org/packages/d3/84/00b6cc9ca38699432ee74539bab65705eb76b2b7e6e2db10f86d86428af9/pyloggor-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}