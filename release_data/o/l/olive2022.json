{
    "0.1.2": {
        "info": {
            "author": "Carnegie Mellon University",
            "author_email": "satya+group@cs.cmu.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Environment :: X11 Applications",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# Olive 2022\n\nEdge-native virtual desktop application that uses the\n[Sinfonia](https://github.com/cmusatyalab/sinfonia) framework to discover a\nnearby cloudlet to run the virtual machine.\n\nVirtual machine images from [Olivearchive](https://olivearchive.org) are\nconverted from their original vmnetx package format to a containerDisk\nthat can be executed with KubeVirt. The containerDisk images can be pushed into\na private Docker registry.\n\n\n## Usage\n\n`olive2022 install` creates a .desktop file to declare a handler for vmnetx+https URLs.\n\nWhen you then 'Launch' a virtual machine from the Olivearchive website, the\nhandler will execute `olive2022 launch` with the VMNetX URL for the virtual machine image.\n\n\n## Internals\n\n`olive2022 launch` hashes the VMNetX URL to a Sinfonia UUID, and uses\n`sinfonia-tier3` to request the relevant backend to be started on a nearby\ncloudlet. When deployment has started, `sinfonia-tier3` will create a local\nwireguard tunnel endpoint and runs `olive2022 stage2` which waits for the\ndeployment to complete by probing if the VNC endpoint has become accessible.\nIt will then try to run remote-viewer (from the virt-viewer package),\ngvncviewer, or vncviewer.\n\n\n## Converting VMNetX packages\n\n`olive2022 convert` will take a VMNetX URL, download the vmnetx format package\nfile and convert it to a containerDisk image and associated Sinfonia recipe.\nThe Docker registry to push the containerDisk image to can be set with the\n`OLIVE2022_REGISTRY` environment variable. If it is a private repository, the\nnecessary pull credentials to add to the recipe can be specified with\n`OLIVE2022_CREDENTIALS=<username>:<access_token>`.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cmusatyalab/olive2022",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "olive2022",
            "package_url": "https://pypi.org/project/olive2022/",
            "platform": null,
            "project_url": "https://pypi.org/project/olive2022/",
            "project_urls": {
                "Homepage": "https://github.com/cmusatyalab/olive2022",
                "Repository": "https://github.com/cmusatyalab/olive2022"
            },
            "release_url": "https://pypi.org/project/olive2022/0.1.2/",
            "requires_dist": [
                "sinfonia-tier3 (>=0.3.0,<0.4.0)",
                "tqdm (>=4.64.1,<5.0.0)",
                "xdg (>=5.1.1,<6.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "Edge-native virtual desktop application",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15775974,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6705ccfa835bc72c36566bc1242df08e",
                    "sha256": "cde4233b7a81a35a34d4030b09ea7a1e424e45c67c720b4691143520db5a3036"
                },
                "downloads": -1,
                "filename": "olive2022-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6705ccfa835bc72c36566bc1242df08e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 7847,
                "upload_time": "2022-11-15T14:50:54",
                "upload_time_iso_8601": "2022-11-15T14:50:54.151185Z",
                "url": "https://files.pythonhosted.org/packages/7e/b6/040471707e41b11dfeeb25537b4f0433a9982b4907fe9b22219014e30b8b/olive2022-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "981918d0470d9b0d8fa08d5411a2d4c2",
                    "sha256": "642b0333e50ef30b5a38c7f05e5efc171cf7dc4b2b3f2c91a5a341cf15eedce8"
                },
                "downloads": -1,
                "filename": "olive2022-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "981918d0470d9b0d8fa08d5411a2d4c2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 7675,
                "upload_time": "2022-11-15T14:50:55",
                "upload_time_iso_8601": "2022-11-15T14:50:55.712012Z",
                "url": "https://files.pythonhosted.org/packages/ee/8a/8fbb4b601098e63037ac696e95569219eacee46c49405bcec073d3add625/olive2022-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}