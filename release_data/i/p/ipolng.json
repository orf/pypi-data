{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Wenyu Zhang <wyzhangxii@link.cuhk.edu.hk>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# iPoLNG\n\nThis is an unsupervised model for the integrative analysis of single-cell multiomics data, coded in the deep universal probabilistic program [Pyro](https://pyro.ai/).\n\n## Dependency\n\nThis package relies on [PyTorch](https://pytorch.org/) to run. Please install the correct CUDA version that matches your Operating System on [the official website](https://pytorch.org/get-started/locally/). The exact version of the dependent packages can be found in ``requirements.txt``.\n\n## Installation\n\nPlease install the ``iPoLNG`` package using the following command in the command line:\n\n```{Shell}\npip install iPoLNG\n```\n\n## Usage\n\nThe main function in this package is ``iPoLNG.iPoLNG``. The input consists of the following:\n\n``W``: a dictionary with each value being ``torch.tensor``. Each value represents the count matrix for one data modality, with rows being cells and columns being features.\n\n``num_topics``: the number of topics or latent factors.\n\n``alpha_k``: The shape parameter for the inverse gamma distribution in the prior. The default value is ``1``.\n\n``integrated_epochs``: The number of epochs to run in the stochastic variational inference algorithm for iPoLNG. The default value is ``3000``.\n\n``warmup_epochs``: The number of epochs to run in the stochastic variational inference algorithm for PoLNG (as a warm-up step). The default value is ``3000``.\n\n``lr``: The learning rate in the stochastic variational inference algorithm. The default value is ``0.1``. You may adjust it according to the characteristics of the data.\n\n``seed``: The random seed used in the iPoLNG model. The default value is ``42``.\n\n``verbose``: A boolean value. Set to ``True`` if you would like to show the learning progress in the model. The default value is ``True``.\n\nHere's the example code for a quick start:\n\n```{Python}\nfrom iPoLNG import iPoLNG\nimport torch\ntorch.set_default_tensor_type(\"torch.cuda.FloatTensor\" if torch.cuda.is_available() else \"torch.FloatTensor\") # enable GPU acceleration if possible\nW = iPoLNG.load_example_data()\nmodel = iPoLNG.iPoLNG(W, num_topics=20, integrated_epochs=300, warmup_epochs=500, seed=42, verbose=True)\nresult = model.Run()\n```\n\n``result`` is a dictionary consisting of the following keys:\n\n``L_est``: a cell by latent factor matrix, interpreted as the low-dimensional representation of the cells.\n\n``Ls_est``: a dictionary consisting of several cell by latent factor matries, each interpreted as the low-dimensional representation of the cells in the corresponding individual data modality.\n\n``Thetas_est``: a dictionary consisting of several latent factor by feature matries, each interpreted as the feature scores in the corresponding individual data modality.\n\n``time``: the running time for the algorithm (including the warm-up step) in seconds.\n\n``loss``: a dictionary consisting of the loss (i.e. negative ELBO in the stochastic variational inference algorithm) for individual data modality in the warm-up step and integrated data in the iPoLNG model.\n\n``alpha0s``: a dictionary consisting of the hyperparameters that control the levels of noise across different data modalities in the iPoLNG model.\n\nPlease refer to [the vignette](https://github.com/cuhklinlab/iPoLNG/blob/main/vignette/vignette.ipynb) for the outputs of the example code.\n\n## Reference\n\nTo be completed.\n\n## Bug reports\n\nIf you encounter any problem when using this package, please feel free to open an [issue](https://github.com/cuhklinlab/iPoLNG/issues).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "single-cell,multiomics,data integration",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "iPoLNG",
            "package_url": "https://pypi.org/project/iPoLNG/",
            "platform": null,
            "project_url": "https://pypi.org/project/iPoLNG/",
            "project_urls": {
                "Bug Tracker": "https://github.com/cuhklinlab/iPoLNG/issues",
                "Homepage": "https://github.com/cuhklinlab/iPoLNG"
            },
            "release_url": "https://pypi.org/project/iPoLNG/0.0.1/",
            "requires_dist": [
                "importlib-resources",
                "numpy",
                "pyro-ppl",
                "statsmodels",
                "tqdm"
            ],
            "requires_python": ">=3.7",
            "summary": "An unsupervised model for the integrative analysis of single-cell multiomics data, coded in the deep universal probabilistic program Pyro",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14489357,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e222ff77b7f110ceaecfb0d3f12f8e77",
                    "sha256": "12799f049416ab26b38e27159ab6d9141eaba8bfa8041641ac287a363109c3c8"
                },
                "downloads": -1,
                "filename": "iPoLNG-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e222ff77b7f110ceaecfb0d3f12f8e77",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 1338969,
                "upload_time": "2022-07-20T02:00:34",
                "upload_time_iso_8601": "2022-07-20T02:00:34.963086Z",
                "url": "https://files.pythonhosted.org/packages/ce/1d/a5c66896f45a4783981ce597b16ade44c1ce58a04c0ce068527d48ff7cc9/iPoLNG-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "026c8acc0acadcf9a14feac41df83638",
                    "sha256": "0ac7763a680e1ada08fede0e4bd4be078a65d1ddd201870a74e3756b2cf487fc"
                },
                "downloads": -1,
                "filename": "iPoLNG-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "026c8acc0acadcf9a14feac41df83638",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 1113707,
                "upload_time": "2022-07-20T02:00:37",
                "upload_time_iso_8601": "2022-07-20T02:00:37.005702Z",
                "url": "https://files.pythonhosted.org/packages/bc/e1/bde4174ab37b868fcac77a72fc554134fa210bc29edb3225ca9924ab4cd6/iPoLNG-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}