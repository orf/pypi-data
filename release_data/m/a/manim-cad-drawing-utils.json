{
    "0.0.1": {
        "info": {
            "author": "GarryBGoode",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Multimedia :: Graphics",
                "Topic :: Multimedia :: Video",
                "Topic :: Scientific/Engineering"
            ],
            "description": "# Manim CAD drawing utils\n\nThis is a collecion of various functions and utilities that help creating manimations that look like CAD drawings.\nAlso some other stuff that just looks cool.\n\nFeatures:\n- Round corners\n- Chamfer corners\n- Dimensions\n- Dashed line, dashed mobject\n- Path offset mapping\n\n\n## Installation\n`manim-CAD_Drawing_Utils` is a package on pypi, and can be directly installed using pip:\n```\npip install manim-CAD_Drawing_Utils\n```\nNote: `CAD_Drawing_Utils` uses, and depends on SciPy and Manim.\n\n## Usage\nMake sure include these two imports at the top of the .py file\n```py\nfrom manim import *\nfrom manim_cad_drawing_utils import *\n```\n\n# Examples\n\n## rounded corners \n\n```py\nclass Test_round(Scene):\n    def construct(self):\n        mob1 = RegularPolygon(n=4,radius=1.5,color=PINK).rotate(PI/4)\n        mob2 = Triangle(radius=1.5,color=TEAL)\n        # making a cross\n        crbase = Rectangle(height=0.5,width=3)\n        mob3 = Union(crbase.copy().rotate(PI/4),crbase.copy().rotate(-PI/4),color=BLUE)\n        mob4 = Circle(radius=1.3)\n        mob2.shift(2.5*UP)\n        mob3.shift(2.5*DOWN)\n        mob1.shift(2.5*LEFT)\n        mob4.shift(2.5*RIGHT)\n\n        mob1 = round_corners(mob1, 0.25)\n        mob2 = round_corners(mob2, 0.25)\n        mob3 = round_corners(mob3, 0.25)\n        self.add(mob1,mob2,mob3,mob4)\n```\n![rounded_corners](/media/examples/round_corners.png)\n\n## cut off corners\n\n```py\nclass Test_chamfer(Scene):\n    def construct(self):\n        mob1 = RegularPolygon(n=4,radius=1.5,color=PINK).rotate(PI/4)\n        mob2 = Triangle(radius=1.5,color=TEAL)\n        crbase = Rectangle(height=0.5,width=3)\n        mob3 = Union(crbase.copy().rotate(PI/4),crbase.copy().rotate(-PI/4),color=BLUE)\n        mob4 = Circle(radius=1.3)\n        mob2.shift(2.5*UP)\n        mob3.shift(2.5*DOWN)\n        mob1.shift(2.5*LEFT)\n        mob4.shift(2.5*RIGHT)\n\n        mob1 = chamfer_corners(mob1, 0.25)\n        mob2 = chamfer_corners(mob2,0.25)\n        mob3 = chamfer_corners(mob3, 0.25)\n        self.add(mob1,mob2,mob3,mob4)\n\n```\n![cutoff_corners](/media/examples/cutoff_corners.png)\n\n## pointer\n\n```py\nclass test_dimension_pointer(Scene):\n    def construct(self):\n        mob1 = round_corners(Triangle().scale(2),0.3)\n        p = ValueTracker(0)\n        dim1 = Pointer_To_Mob(mob1,p.get_value(),r'triangel')\n        dim1.add_updater(lambda mob: mob.update_mob(mob1,p.get_value()))\n        dim1.update()\n        PM = Path_mapper(mob1)\n        self.play(Create(mob1),rate_func=PM.equalize_rate_func(smooth))\n        self.play(Create(dim1))\n        self.play(p.animate.set_value(1),run_time=10)\n        self.play(Uncreate(mob1,rate_func=PM.equalize_rate_func(smooth)))\n        self.play(Uncreate(dim1))\n        self.wait()\n\n\n```\n![cutoff_corners](/media/examples/pointer_triangel.gif)\n\n\n## dimension\n\n```py\nclass test_dimension_base(Scene):\n    def construct(self):\n        mob1 = round_corners(Triangle().scale(2),0.3)\n        dim1 = Linear_Dimension(mob1.get_critical_point(UP),\n                                mob1.get_critical_point(DOWN),\n                                direction=RIGHT,\n                                offset=3,\n                                color=RED)\n        dim2 = Linear_Dimension(mob1.get_critical_point(RIGHT),\n                                mob1.get_critical_point(LEFT),\n                                direction=UP,\n                                offset=-3,\n                                color=RED)\n\n        self.add(mob1,dim1,dim2)\n\n\n```\n![cutoff_corners](/media/examples/dimension.png)\n\n## hatching\n\n```py\nclass test_hatch(Scene):\n    def construct(self):\n        mob1 = Star().scale(2)\n        hatch1 = Hatch_lines(mob1,angle=PI/6,stroke_width=2)\n        hatch2 = Hatch_lines(mob1,angle=PI/6+PI/2,stroke_width=2)\n        self.add(mob1,hatch1,hatch2)\n\n\n```\n![cutoff_corners](/media/examples/hatches.png)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/GarryBGoode/Manim_CAD_Drawing_utils",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "manim-cad-drawing-utils",
            "package_url": "https://pypi.org/project/manim-cad-drawing-utils/",
            "platform": null,
            "project_url": "https://pypi.org/project/manim-cad-drawing-utils/",
            "project_urls": {
                "Homepage": "https://github.com/GarryBGoode/Manim_CAD_Drawing_utils",
                "Repository": "https://github.com/GarryBGoode/Manim_CAD_Drawing_utils"
            },
            "release_url": "https://pypi.org/project/manim-cad-drawing-utils/0.0.1/",
            "requires_dist": [
                "manim (>=0.15.2)",
                "scipy",
                "bezier"
            ],
            "requires_python": ">=3.7,<3.11",
            "summary": "A collection of utility functions to for creating CAD-like visuals in Manim.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14827590,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a18de52ce08412c6ed21b368a67197ff",
                    "sha256": "fa0bb66ce21530ee1eddbc133115a72ba614ab4ddd5243b6f8c397b1917dfaf5"
                },
                "downloads": -1,
                "filename": "manim_CAD_Drawing_Utils-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a18de52ce08412c6ed21b368a67197ff",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<3.11",
                "size": 12233,
                "upload_time": "2022-08-21T14:08:45",
                "upload_time_iso_8601": "2022-08-21T14:08:45.379247Z",
                "url": "https://files.pythonhosted.org/packages/93/e4/705239057e74efe37a2288b58e8e6f3f3ba3120b73d0a48139bb67363b0f/manim_CAD_Drawing_Utils-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8766e36892d0985aee7cee8488704869",
                    "sha256": "b6d1e0af5d4482a559512bb0528d4c434300c5c209e3385a5226d2e081a8574f"
                },
                "downloads": -1,
                "filename": "manim-CAD_Drawing_Utils-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8766e36892d0985aee7cee8488704869",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<3.11",
                "size": 11587,
                "upload_time": "2022-08-21T14:08:43",
                "upload_time_iso_8601": "2022-08-21T14:08:43.339107Z",
                "url": "https://files.pythonhosted.org/packages/d7/c0/5f8822b1ea7a1cf144b65dc57c44ef20ac21f31cef744ddbda1851737cbc/manim-CAD_Drawing_Utils-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}