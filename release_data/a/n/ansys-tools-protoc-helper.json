{
    "0.1.0a1": {
        "info": {
            "author": "ANSYS, Inc.",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "PyAnsys developers <pyansys.support@ansys.com>",
            "name": "ansys-tools-protoc-helper",
            "package_url": "https://pypi.org/project/ansys-tools-protoc-helper/",
            "platform": "",
            "project_url": "https://pypi.org/project/ansys-tools-protoc-helper/",
            "project_urls": {
                "Source": "https://github.com/ansys/ansys-tools-protoc-helper"
            },
            "release_url": "https://pypi.org/project/ansys-tools-protoc-helper/0.1.0a1/",
            "requires_dist": [
                "setuptools>=42.0",
                "grpcio-tools==1.17.0",
                "protobuf==3.19.3",
                "mypy-protobuf==3.1.0",
                "importlib-resources>=1.3",
                "sphinx ; extra == \"doc\"",
                "numpydoc ; extra == \"doc\"",
                "pyansys-sphinx-theme ; extra == \"doc\"",
                "sphinx-copybutton ; extra == \"doc\"",
                "pre-commit~=2.16.0 ; extra == \"pre-commit\"",
                "mypy==0.931 ; extra == \"pre-commit\"",
                "types-setuptools==57.4.7 ; extra == \"pre-commit\"",
                "pytest~=6.0 ; extra == \"test\""
            ],
            "requires_python": ">=3.7",
            "summary": "A utility for compiling '.proto' files to Python source.",
            "version": "0.1.0a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12895688,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb690727b9f99c1af20ff89f5865af92",
                    "sha256": "a458a89e9848fdb196fdd6e461f8b3a77650d94a851be3c92e0861fc9bc2a41d"
                },
                "downloads": -1,
                "filename": "ansys_tools_protoc_helper-0.1.0a1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eb690727b9f99c1af20ff89f5865af92",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 6564,
                "upload_time": "2022-02-03T13:20:28",
                "upload_time_iso_8601": "2022-02-03T13:20:28.907362Z",
                "url": "https://files.pythonhosted.org/packages/9c/b2/5764134d42a882657566235991db588830b158e95d26f64758eff7721330/ansys_tools_protoc_helper-0.1.0a1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "97f1aa2bb07b4b7f3938f25382e29c3f",
                    "sha256": "f6b5f73563aea86086a1fb3a63367da48c0e9f86da574cfda21f49c6c32dd5e3"
                },
                "downloads": -1,
                "filename": "ansys-tools-protoc-helper-0.1.0a1.tar.gz",
                "has_sig": false,
                "md5_digest": "97f1aa2bb07b4b7f3938f25382e29c3f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5508,
                "upload_time": "2022-02-03T13:20:30",
                "upload_time_iso_8601": "2022-02-03T13:20:30.538930Z",
                "url": "https://files.pythonhosted.org/packages/51/55/f715106cff4104df27ce97b36e47396fbf1699a4e2c79689d41d4126209c/ansys-tools-protoc-helper-0.1.0a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "ANSYS, Inc.",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description": "***************************\nprotobuf compilation helper\n***************************\n\nA utility to compile ``.proto`` files to Python source when building the package wheel. It supports dependencies to ``.proto`` files of different packages.\n\nQuickstart\n~~~~~~~~~~\n\nThe simplest way to get started is using the `template repository <TODO: link to template>`_.\n\nManual use\n~~~~~~~~~~\n\nTo manually enable the use of ``ansys-tools-protoc-helper`` in your project, the following things need to be defined:\n\n-   A ``pyproject.toml`` file with the following contents:\n\n    .. code::\n\n        [build-system]\n        requires = [\"setuptools>=42.0\", \"wheel\", \"ansys-tools-protoc-helper\", <additional_dependencies>]\n        build-backend = \"setuptools.build_meta:__legacy__\"\n\n    where ``<additional_dependencies>`` are the packages that you depend on for ``.proto`` files.\n\n-   In the ``setuptools`` configuration (either ``setup.cfg`` or ``setup.py``). We only show the ``setuptools.setup()`` keywords (``setup.py`` variant) here:\n\n    -   Run-time dependencies on the same ``<additional_dependencies>`` used above:\n\n        .. code:: python\n\n            install_requires=[grpcio, protobuf, <additional_dependencies>],\n\n        Refer to the `gRPC version strategy`_ section for details on which ``grpc`` and ``protobuf`` versions can be used.\n\n    -   The ``package_data`` declares additional file names which are included in the package:\n\n        .. code:: python\n\n            package_data={\n                \"\": [\"*.proto\", \"*.pyi\", \"py.typed\"],\n            }\n\n        Note that ``*.proto`` is only needed if other packages should be able to depend on the ``*.proto`` files defined in your package.\n\n        The ``py.typed`` file is used to communicate that the package contains type information, see `PEP 561 <https://www.python.org/dev/peps/pep-0561/>`_. This file needs to be manually added.\n\n    -   The ``cmdclass`` is used to specify that some ``setuptools`` commands should be executed by ``ansys-tools-protoc-helper``:\n\n        .. code:: python\n\n            from ansys.tools.protoc_helper import CMDCLASS_OVERRIDE\n\n            setup(\n                <...>,\n                cmdclass=CMDCLASS_OVERRIDE\n            )\n\n        The two commands which are overridden can also be specified individually. This may be useful in particular if you want to use the ``setup.cfg`` format:\n\n        .. code:: python\n\n            from ansys.tools.protoc_helper import BuildPyCommand, DevelopCommand\n\n            setup(\n                <...>,\n                cmdclass={\"build_py\": BuildPyCommand, \"develop\": DevelopCommand}\n            )\n\n    -   If other projects should be able to depend on the ``.proto`` files contained in your project, an `entry point <https://packaging.python.org/en/latest/specifications/entry-points/>`_ needs to be defined declaring the presence of the ``*.proto`` files:\n\n        .. code:: python\n\n            entry_points={\n                \"ansys.tools.protoc_helper.proto_provider\": {\n                    \"<your.package.name>=<your.package.name>\"\n                },\n            },\n\n        where ``<your.package.name>`` is the _importable_ name of your package. In other words, ``import <your.package.name>`` should work after installing the package.\n\n        By default, the ``.proto`` files will be copied to ``your/package/name``. If a different location should be used, append a semicolon to the entry point name, followed by the dot-separated target location:\n\n        .. code:: python\n\n            entry_points={\n                \"ansys.tools.protoc_helper.proto_provider\": {\n                    \"<your.package.name>:<target.location>=<your.package.name>\"\n                },\n            },\n\nFor a complete example, see the ``test/test_data/testpkg-greeter-protos`` package.\n\ngRPC version strategy\n~~~~~~~~~~~~~~~~~~~~~\n\nThe ``ansys-tools-protoc-helper`` pins the versions of ``gRPC`` and ``protobuf`` that it depends on, in the ``dependencies = ...`` section of the `pyproject.toml <https://github.com/ansys/ansys-tools-protoc-helper/blob/main/pyproject.toml>`_ file.\n\nFor your own project, you can use any version of ``grpcio`` and ``protobuf`` that's newer (or equal) to the version pinned here, as long as it is the same major version.\n\nFor example, if ``ansys-tools-protoc-helper`` pins\n\n.. code::\n\n    dependencies = [\n        \"grpcio-tools==1.17.0\",\n        \"protobuf==3.19.3\",\n    ]\n\nyour own dependencies could be ``grpcio-tools~=1.17``, ``protobuf~=3.19`` (using the ``~=`` `compatible version operator <https://www.python.org/dev/peps/pep-0440/#compatible-release>`_).\n\nThe versions pinned by ``ansys-tools-protoc-helper`` are chosen as follows:\n\n- The first version of ``grpcio-tools`` for which binary wheels are available on PyPI, for at least one of the Python versions we support.\n- The first version of ``protobuf`` which is compatible with ``mypy-protobuf``, for generating type stubs.\n\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "PyAnsys developers <pyansys.support@ansys.com>",
            "name": "ansys-tools-protoc-helper",
            "package_url": "https://pypi.org/project/ansys-tools-protoc-helper/",
            "platform": "",
            "project_url": "https://pypi.org/project/ansys-tools-protoc-helper/",
            "project_urls": {
                "Source": "https://github.com/ansys/ansys-tools-protoc-helper"
            },
            "release_url": "https://pypi.org/project/ansys-tools-protoc-helper/0.1.1/",
            "requires_dist": [
                "setuptools>=42.0",
                "grpcio-tools==1.17.0",
                "protobuf==3.19.3",
                "mypy-protobuf==3.1.0",
                "importlib-resources>=1.3",
                "sphinx ; extra == \"doc\"",
                "numpydoc ; extra == \"doc\"",
                "pyansys-sphinx-theme ; extra == \"doc\"",
                "sphinx-copybutton ; extra == \"doc\"",
                "pre-commit~=2.16.0 ; extra == \"pre-commit\"",
                "mypy==0.931 ; extra == \"pre-commit\"",
                "types-setuptools==57.4.7 ; extra == \"pre-commit\"",
                "pytest~=6.0 ; extra == \"test\""
            ],
            "requires_python": ">=3.7",
            "summary": "A utility for compiling '.proto' files to Python source.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12895688,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d47b76d9f416514753f70a88f61a8f0d",
                    "sha256": "a96cd2f7cb402833ed03991dc8dff4668c3ccd89847b4f34ea70f49825dcf91b"
                },
                "downloads": -1,
                "filename": "ansys_tools_protoc_helper-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d47b76d9f416514753f70a88f61a8f0d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 6871,
                "upload_time": "2022-02-15T09:51:15",
                "upload_time_iso_8601": "2022-02-15T09:51:15.975032Z",
                "url": "https://files.pythonhosted.org/packages/f0/ee/0ac46040d27944f20aa10da43c7495956f8192e41f5a58f9239da6b59e8f/ansys_tools_protoc_helper-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c870a108a35c5f5c806d25a409689718",
                    "sha256": "b04c8edebd849ee887cea45ace5fe37b95e94ad2ea8d70fe09962967c16c2b20"
                },
                "downloads": -1,
                "filename": "ansys-tools-protoc-helper-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c870a108a35c5f5c806d25a409689718",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5352,
                "upload_time": "2022-02-15T09:51:17",
                "upload_time_iso_8601": "2022-02-15T09:51:17.494261Z",
                "url": "https://files.pythonhosted.org/packages/72/78/287008d0c88906966a0372cad4275f615c2932a5e64dface867e8b345570/ansys-tools-protoc-helper-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}