{
    "0.9.2": {
        "info": {
            "author": "Philipp Kiersch",
            "author_email": "philipp@kiersch.org",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Legal Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.8",
                "Topic :: Text Processing :: Filters",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/kiersch/parse_ecli",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parse-ecli",
            "package_url": "https://pypi.org/project/parse-ecli/",
            "platform": "",
            "project_url": "https://pypi.org/project/parse-ecli/",
            "project_urls": {
                "Homepage": "http://github.com/kiersch/parse_ecli"
            },
            "release_url": "https://pypi.org/project/parse-ecli/0.9.2/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Parse German ECLI",
            "version": "0.9.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7393262,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "009403653cec85a1e7885f3828f9cb89",
                    "sha256": "3ebc5fc68ed0b0395a39f389f23caf5b803bd553849270673667589cf1df0106"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "009403653cec85a1e7885f3828f9cb89",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 35830,
                "upload_time": "2020-05-07T13:19:11",
                "upload_time_iso_8601": "2020-05-07T13:19:11.145308Z",
                "url": "https://files.pythonhosted.org/packages/15/c8/daf7665dc0dcc7ab76cf5b227ccdcadfd586d93a1bbdd79f15c7a3b15b10/parse_ecli-0.9.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a03fd22e222de4519c86bd121bb0deb2",
                    "sha256": "33a889f9820feb4772732ad6d58a784f3ccb5cfb0ccb66844c62d88d2313edf4"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a03fd22e222de4519c86bd121bb0deb2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 38919,
                "upload_time": "2020-05-07T13:19:13",
                "upload_time_iso_8601": "2020-05-07T13:19:13.605023Z",
                "url": "https://files.pythonhosted.org/packages/37/d9/1bcbdc0af4079e137922d130e5d0e8b74657baec92994c30e4aa6f64ed89/parse_ecli-0.9.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.3": {
        "info": {
            "author": "Philipp Kiersch",
            "author_email": "philipp@kiersch.org",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Legal Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.8",
                "Topic :: Text Processing :: Filters",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/kiersch/parse_ecli",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parse-ecli",
            "package_url": "https://pypi.org/project/parse-ecli/",
            "platform": "",
            "project_url": "https://pypi.org/project/parse-ecli/",
            "project_urls": {
                "Homepage": "http://github.com/kiersch/parse_ecli"
            },
            "release_url": "https://pypi.org/project/parse-ecli/0.9.3/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Parse German ECLI",
            "version": "0.9.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7393262,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6fe7ae23a064802f8923a8406c5ab86d",
                    "sha256": "06e4151f44fd74e0662d74844d480dc90ff4710912cb4187d1861d86dfbb6321"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6fe7ae23a064802f8923a8406c5ab86d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 36468,
                "upload_time": "2020-05-07T18:14:34",
                "upload_time_iso_8601": "2020-05-07T18:14:34.138208Z",
                "url": "https://files.pythonhosted.org/packages/45/fc/d6f01af51ef2e901391f3648646f34477334af3818433d83214267857d7e/parse_ecli-0.9.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a4ccd4b3e9cbf60361984475bf889372",
                    "sha256": "d6d569fb4f7d1a8e9ab25c24c2eafd7ba28efa1aaf91e17b4b130814e7837901"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.3.tar.gz",
                "has_sig": false,
                "md5_digest": "a4ccd4b3e9cbf60361984475bf889372",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 40208,
                "upload_time": "2020-05-07T18:14:36",
                "upload_time_iso_8601": "2020-05-07T18:14:36.765482Z",
                "url": "https://files.pythonhosted.org/packages/25/9b/0beff354f119005bcc6f8da484ff02d406640f127eeab4175a51c3d7556e/parse_ecli-0.9.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.4": {
        "info": {
            "author": "Philipp Kiersch",
            "author_email": "philipp@kiersch.org",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Legal Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.8",
                "Topic :: Text Processing :: Filters",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/kiersch/parse_ecli",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parse-ecli",
            "package_url": "https://pypi.org/project/parse-ecli/",
            "platform": "",
            "project_url": "https://pypi.org/project/parse-ecli/",
            "project_urls": {
                "Homepage": "http://github.com/kiersch/parse_ecli"
            },
            "release_url": "https://pypi.org/project/parse-ecli/0.9.4/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Parse German ECLI",
            "version": "0.9.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7393262,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1d054b65efb637341320bd4d4720e4b2",
                    "sha256": "b381f4a084c57c1a412e13419d9bdf824bf040583420bdb54992362bdf228a34"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1d054b65efb637341320bd4d4720e4b2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 39351,
                "upload_time": "2020-05-13T14:35:06",
                "upload_time_iso_8601": "2020-05-13T14:35:06.166424Z",
                "url": "https://files.pythonhosted.org/packages/d4/8c/43e5ecd139b015d340dd88e70da4bb805928535a71ae28cbf1fb3c61a21c/parse_ecli-0.9.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "046d07d1f6717ebe007716069c08fcb7",
                    "sha256": "1449d51bf86e9065f2778b3837a9775c2375ca00edcb55ec8213378c0d71023c"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.4.tar.gz",
                "has_sig": false,
                "md5_digest": "046d07d1f6717ebe007716069c08fcb7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 43543,
                "upload_time": "2020-05-13T14:35:07",
                "upload_time_iso_8601": "2020-05-13T14:35:07.792373Z",
                "url": "https://files.pythonhosted.org/packages/cd/6c/2823fb6f247efd74dbe0508d6f132df145c4497021508dbea35189bf473b/parse_ecli-0.9.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.5": {
        "info": {
            "author": "Philipp Kiersch",
            "author_email": "philipp@kiersch.org",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Legal Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.8",
                "Topic :: Text Processing :: Filters",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description": "# parse_ecli\n![Version 0.9.5](https://img.shields.io/badge/version-0.9.5-green)\n[![Python 3.8](https://img.shields.io/badge/python-3.8-blue.svg)](https://www.python.org/downloads/)\n![MIT License](https://img.shields.io/badge/license-MIT-lightgrey)\n\n- [parse_ecli](#parse-ecli)\n  * [\u00c4nderungen](#\u00c4nderungen)\n  * [Installation](#installation)\n  * [Benutzung \u00fcber die Kommandozeile](#benutzung--ber-die-kommandozeile)\n    + [Optional:](#optional-)\n      - [raw-mode](#raw-mode)\n      - [Datei-Eingabe](#datei-eingabe)\n      - [Batch-Verarbeitung](#batch-verarbeitung)\n      - [Silent](#silent)\n      - [Datei-Ausgabe](#datei-ausgabe)\n  * [Nutzung als Modul](#nutzung-als-modul)\n  * [Module](#module)\n    + [ecli_classes.py](#ecli-classespy)\n  * [\u00dcberblick \u00fcber ECLI](#-berblick--ber-ecli)\n    + [Umfang und Ablauf der ECLI-Erkennung](#umfang-und-ablauf-der-ecli-erkennung)\n      - [Abweichungen zu den Vorgaben des BfJ](#abweichungen-zu-den-vorgaben-des-bfj)\n    + [Umfang der Erkennung](#umfang-der-erkennung)\n    + [Ablauf der Erkennung](#ablauf-der-erkennung)\n    + [ECLI des BPatG](#ecli-des-bpatg)\n  * [Ziele](#ziele)\n  * [Tests](#tests)\n\n<small><i><a href='http://ecotrust-canada.github.io/markdown-toc/'>Table of contents generated with markdown-toc</a></i></small>\n\nDieses Programm dient der Aufschl\u00fcsselung von deutschen ECLI wie `ECLI:DE:BVERFG:2020:RK20200501.1BVR099620`. Es kann als Modul in Python Software eingebunden oder \u00fcber die Kommandozeile selbstst\u00e4ndig aufgerufen werden.\n\n**Python 3.8** ist zwingend erforderlich.\n\nEine webbasierte Live-Demo ist [hier](https//:ecli.kiersch.org) verf\u00fcgbar.\n\n![Screenshot](https://kiersch.org/screenshots/parse_ecli1.PNG)\n\n## \u00c4nderungen\nNeu in Version `0.9.5`\n* Handels-, Insolvenz- und andere Register werden erfasst\n* Alphanumerische Kammerbezeichnungen (4a Kammer) werden erfasst\n* Optionaler Punkt nach Pr\u00e4fix bei AZ der Ordentlichen Gerichtsbarkeit ist nun zul\u00e4ssig\n* Das Suffix D (\u00dcberlange Verfahren) wird beim BVerwG erkannt\n* Lokale Registerzeichen (SA f\u00fcr Gerichtsstandsbestimmungen beim OLG Hamm), St OLG SS (f\u00fcr Revisionen in Strafsachen beim OLG N\u00fcrnberg), diverse weitere Registerzeichen hinzugef\u00fcgt\n* Detailanpassungen der Regex-Muster\n\n## Installation\nDie Installation erfolgt am einfachsten \u00fcber das [PyPi-Paket](https://pypi.org/project/parse-ecli/):\n```\npython -m pip install parse-ecli\n```\nJe nach Betriebssystem muss `python` ggf. durch `python3` oder gar `python3.8` ersetzt werden.\n\nAlternativ kann dieses GitHub-Repo heruntergeladen werden. Die Installation erfolgt dann im Wurzelverzeichnis via\n```\npython -m pip install .\n```\n\n## Benutzung \u00fcber die Kommandozeile\n\nNach der Installation wird (typischerweise systemweit) der Befehl `parse-ecli` registriert. Das Programm kann dann \u00fcber die Kommandozeile (Bash, CMD, Powershell etc.) direkt aufgerufen werden:\n\n```\nparse-ecli <ECLI>\n```\nDer ECLI muss vollst\u00e4ndig eingegeben werden. F\u00fchrende Leerzeichen und Sonderzeichen werden entfernt.\n\nWird ein ECLI an `parse_ecli` \u00fcbergeben, wird er nach seinen Bestandteilen aufgeschl\u00fcsselt und so weit wie m\u00f6glich erl\u00e4utert.\n\nSo werden aus dem ECLI `ECLI:DE:AGK:2007:1120.217C180.07.00` folgende Daten ausgegeben:\n\nFeld|Wert\n---|---\nGericht:|Amtsgericht K\u00f6ln\nEntscheidungsdatum:|20.11.2007\nAktenzeichen (max. 17 Stellen):|217 C 180/07\nKollisionsnummer:|00\nVerfahren:|Erstinstanzliche Zivilprozesse\n\nJe nach Gerichtsbarkeit unterscheidet sich die Datendichte des ECLI. So kann aus `ECLI:DE:BVERWG:2019:170719B3BN2.18.0` folgendes extrahiert werden:\n\nFeld|Wert\n---|---\nGericht|BVerwG\nSpruchk\u00f6rper|3. Senat\nEntscheidungsdatum|17.07.2019\nAktenzeichen (max. 17 Stellen)|3 BN 2.18\nKollisionsnummer|0\nEntscheidungsart|Beschluss\nVerfahren|Nichtzulassungsbeschwerden in Normenkontrollverfahren\nLink|https://www.bverwg.de/de/170719B3BN2.18.0\n\n### Optional:\n\n#### raw-mode\n![Screenshot raw-mode](https://kiersch.org/screenshots/parse_ecli2.PNG)\n\n```\nparse-ecli -r <ECLI>\n```\nf\u00fcr rawmode, d.h. die Daten werden ohne Beschriftung nur durch Semikolon getrennt ausgegeben:\n\n``ECLI:DE:BVERFG:2020:RK20200501.1BVR099620;BVerfG;Kammerentscheidung (1. Senat);01.05.2020;1 BvR 996/20;Keine;Verfassungsbeschwerden;http://www.bverfg.de/e/rk20200501_1bvr099620.html;\n``\nDies erm\u00f6glicht die automatische Weiterverarbeitung\n\n#### Datei-Eingabe\n```\nparse-ecli -i input_file\n```\nECLI k\u00f6nnen auch aus einer Textdatei eingelesen werden, die mit `-i` angegeben wird. Standardm\u00e4\u00dfig wird die Datei nach ECLI an beliebigen Stellen durchsucht. \nBei Nutzung der Option `-i` wird ein zus\u00e4tzlich \u00fcber die Kommandozeile eingegebener ECLI ignoriert.\n\n#### Batch-Verarbeitung\n```\nparse-ecli -i input_file -b\n```\nIm Batch-Modus, der mit `-b` aktiviert wird, k\u00f6nnen schnell beliebig viele ECLI validiert werden. Hier wird aus einer mit `-i` angegebenen Datei ein ECLI pro Zeile erfasst. Die Zeilen d\u00fcrfen keine anderen Daten enthalten. Zeilen, die nicht mit `ECLI:DE:` beginnen, werden ignoriert. F\u00fcr ung\u00fcltige Zeilen wird eine Fehlermeldung ausgegeben. Auch wird gewarnt, falls der ECLI in einer Zeile zwar einem generellen ECLI-Schema entspricht, aber das Aktenzeichen nicht aufgel\u00f6st werden konnte. \n\n#### Silent\n```\nparse-ecli -i input_file -b -s\n```\nDer Schalter `s` unterdr\u00fcckt die Warnungen f\u00fcr ung\u00fcltige ECLI im Batch-Modus.\n\n\n#### Datei-Ausgabe\n```\nparse-ecli -o output_file <ECLI>\n```\nDie Ausgabe kann auch in eine Datei umgeleitet werden, die mit `-o` angegeben wird.\n\nWarnungen werden nicht in die Datei geleitet.\n\nDurch Kombination der Optionen kann etwa eine Datei `input.txt` mit 100 ECLI maschinenlesbar in der Datei `output.txt` aufbereitet werden:\n```\nparse-ecli -r -b -i input.txt -o output.txt\n```\n![Screenshot batch](https://kiersch.org/screenshots/parse_ecli3.PNG)\n## Nutzung als Modul\nNach der Installation kann das Programm mittels\n```\nimport parse_ecli\n```\nin beliebige Python-Module eingebaut werden.\n\n\n## Module\nName|Funktion\n---|---\nparse_ecli.py|Stellt die Entscheidungsklassen zur Verf\u00fcgung. Das Modul kann selbstst\u00e4ndig in andere Skripte importiert werden, sodass die Erkennung direkt in das Programm intergriert werden kann. Enth\u00e4lt auch die Ein-/Ausgabelogik f\u00fcr den direkten Aufruf \u00fcber die Kommandozeile.\npattern.py|Enth\u00e4lt die Regexes\n\n### ecli_classes.py\nStellt die Hauptfunktionalit\u00e4t des Programms zur Verf\u00fcgung und kann in andere Skripte eingebunden werden.\n\nDie Funktion `main_func` wird nur ausgef\u00fchrt, wenn das Programm mit `parse-ecli` \u00fcber die Kommandozeile aufgerufen wird. Hier ist die Ein-/Ausgabefunktionalit\u00e4t enthalten.\n\nDie Funktion `match_ecli(ecli_string)` gibt ein Entscheidungs-Objekt zur\u00fcck f\u00fcr einen \u00fcbergebenen String zur\u00fcck. Erwartet wird hier ein einzelner g\u00fcltiger ECLI. Die Funktion `search_ecli(ecli_string)` durchsucht einen beliebigen String nach ECLI und gibt eine Liste mit allen Entscheidungs-Objekten zur\u00fcck.\n\n Die Entscheidungsobjekte enthalten ein dict namens `court_data`. Dieses enth\u00e4lt die Daten, die aus dem ECLI extrahiert werden konnten. Jedem key ist eine Liste zugeordnet, deren erstes Feld eine Datenbeschreibung ist. Die eigentlichen Daten liegen im zweiten Feld, das leer vorinitialisiert ist.\n\nkey|values|Erkl\u00e4rung\n---|---|---\n\"court\"| [\"Gericht: \",\"\"]|Enth\u00e4lt das Gericht hinter dem Gerichtscode. Bei den Gerichten der L\u00e4nder muss der Code in der Datei `gerichte.json` aufgel\u00f6st werden.\n\"bodytype\"| [\"Spruchk\u00f6rper: \",\"\"]|Enth\u00e4lt den Spruchk\u00f6rper (z.B. bei BGH) oder jedenfalls den Spruchk\u00f6rpertyp (z.B. bei einer Kammerentscheidung des BVerfG)\n\"date\"| [\"Entscheidungsdatum: \",\"\"]|\n\"az\"| [\"Aktenzeichen: \",\"\"]|Das Aktenzeichen wird soweit m\u00f6glich aus dem ECLI generiert. Bei Doppelaktenzeichen ist dies nur teilweise m\u00f6glich. Die Registerzeichen werden, soweit sie nicht nur aus Gro\u00dfbuchstaben bestehen in 'decisions.json' nachgeschlagen.\n\"collision\"| [\"Kollisionsnummer: \",\"\"]|Die Kollisionsnummer der Entscheidung.\n\"year\"| [\"Jahr: \",\"\"]|\n\"decisiontype\"| [\"Entscheidungsart: \",\"\"]|Der Entscheidungstyp, also z.B. Urteil, Beschluss, Gerichtsbescheid\n\"decision_explain\"| [\"Verfahren \",\"\"]|Erl\u00e4utert die Verfahrensart bzw. das Sachgebiet anhand des Registerzeichens (z.B. Revision in Zivilsachen)\n\"register_explain\"| [\"Register/Zusatz: \",\"\"]|Manche Gerichte (etwas Sozialgerichtsbarkeit) verwenden ein zus\u00e4tzliches Registerzeichen, das hier erl\u00e4utert wird.\n\"url\"| [\"Link: \",\"\"]|Beim BVerfG und BVerwG wird zudem auf Basis des ECLI eine Kurz-URL zur Entscheidung generiert.\n\nDie Entscheidungsklassen verf\u00fcgen \u00fcber eine Methode namens `output_decision`, die mit zwei optionalen Argumenten aufgerufen werden kann:\n```\noutput_decision(rawmode=False, output_file=None):\n```\nWird `rawmode` als `true` \u00fcbergeben, so wird die entsprechende Ausgabe veranlasst (vgl. oben). Als `output_file` kann ein Dateiobjekt angegeben werden, sodass die Ausgabe dorthin erfolgt.\n\n\n\n\n## \u00dcberblick \u00fcber ECLI\n\nDer Europ\u00e4ische Urteilsidentifikator (European Case Law Identifier \u2013 ECLI) wurde entwickelt, um die korrekte und eindeutige Angabe von Fundstellen in Entscheidungen europ\u00e4ischer und nationaler Gerichte zu erleichtern.\nDer ECLI ist ein einheitlicher Identifikator, der f\u00fcr alle Gerichte der Mitgliedstaaten und der EU dasselbe erkennbare Format besitzt. Einen Kurz\u00fcberblick bietet z. B. die [Website des Bundesverwaltungsgerichts](https://www.bverwg.de/rechtsprechung/ecli). \n\n### Umfang und Ablauf der ECLI-Erkennung\nDie Vorgaben f\u00fcr valide deutsche ECLI folgen grunds\u00e4tzlich den Angaben des Bundesamtes f\u00fcr Justiz als [ECLI-Koordinator f\u00fcr Deutschland](https://e-justice.europa.eu/content_european_case_law_identifier_ecli-175-de-de.do?member=1). Diese sind allerdings nach Angaben des BfJ (E-Mail Auskunft, Stand Mai 2020) veraltet und auch unvollst\u00e4ndig. So fehlt das ECLI-Schema des BPatG, dieses wurde direkt beim Gericht erfragt. Auch scheinen die Angaben auf der Website unvollst\u00e4ndig, da sie nicht alle tats\u00e4chlich in der Praxis vergebenen ECLI erfassen. Die entsprechenden Abweichungen im Programm werden beschrieben.\n\n#### Abweichungen zu den Vorgaben des BfJ\n* Das BfJ beschreibt die Kollisionsnummer der Gerichte der L\u00e4nder als \"zweistellig (fortlaufend von 00-99)\". Tats\u00e4chlich werden in der Praxis (v.a. in Bayern) auch alphanumerische Kollisionsnummern vergeben. Sie beginnen mit `0A` statt `00`. Beispiel: `ECLI:DE:VGBAYRE:2005:0607.B1K04.1182.0A`\n* Aktenzeichen beim BVerfG enthalten nicht immer eine Senatsbezeichnung (z.B. `ECLI:DE:BVERFG:2018:VB20180322.VZ001016`)\n\n### Umfang der Erkennung\nUmfangreiche Tests (>1500 ECLI) haben ergeben, dass alle validen deutschen ECLI erkannt werden d\u00fcrften. False positives sind aufgrund der strengen Regex kaum denkbar. G\u00fcltige, jedoch fiktive ECLI werden freilich als g\u00fcltig erkannt und ausgewertet.\n\nDie L\u00e4nge der Aktenzeichen bei den Gerichten der L\u00e4nder ist im ECLI auf 17 Stellen beschr\u00e4nkt. Bei Doppelaktenzeichen kann dies dazu f\u00fchren, dass es nicht vollst\u00e4ndig im ECLI abgebildet ist. Darauf weist das Programm bei L\u00e4nder-ECLI mit einer Warnung hin.\n\nBeispiel f\u00fcr ein Mehrfachaktenzeichen: \n* ECLI: `ECLI:DE:OLGMUEN:2020:0128.31WX229.19.31WX23.0A`\n* Vollst\u00e4ndige Aktenzeichen in Beck-Online: `31 Wx 229/19, 31 Wx 230/19, 31 Wx 231/19`\n* Ausgabe Aktenzeichen: `31 Wx 229/19 31 WX 23 [...]`\n\n### Ablauf der Erkennung\n\nIm Code sind die ECLI-Schemata als regul\u00e4re Ausdr\u00fccke im Modul ``pattern.py`` hinterlegt.\n\nDie Analyse erfolgt zweistufig. In einem ersten Zugriff wird der ECLI mit den Mustern der verschiedenen Bundesgerichte bzw. dem der L\u00e4nder verglichen. Bereits hier d\u00fcrften die meisten ung\u00fcltigen ECLI aussortiert werden, wobei die Muster der Bundesgerichte aufgrund der spezifischeren Vorgaben f\u00fcr die Bildung des ECLI strenger sind. Passt ein eingegebener ECLI auf eines der Muster, wird ein passendes Entscheidungstyp-Objekt erzeugt und in einem zweiten Schritt die f\u00fcr das jeweilige Gericht passende `parse_ecli`-Funktion aufgerufen. Hier wird der ECLI abschnittsweise weiter analysiert und die enthaltenen Informationen \u00fcbersetzt. Bei den Gerichten der L\u00e4nder wird zuvor noch eine weitere Zuordnung zur jeweiligen Fachgerichtsbarkeit vorgenommen, um die Aktenzeichen korrekt bilden zu k\u00f6nnen. Die mit den Gerichtscodes korrespondierenden Gerichte sind in `gerichte.json` hinterlegt, sie werden nur bei einem L\u00e4nder-ECLI ben\u00f6tigt und geladen. Die Daten zu Verfahrensarten, Registerzeichen etc. sind in `decisions.json` hinterlegt.\n\n### ECLI des BPatG\nF\u00fcr ECLI des BPatG finden sich noch keine Angaben beim BfJ.\n\nDie ECLI des BPatG werden wie folgt gebildet:\n\n*Gem\u00e4\u00df E-Mail-Auskunft vom 29.04.2020*\n\n> 1. ECLI\n> 2. DE (= L\u00e4ndercode)\n> 3. BPatG (= Gericht, das die Entscheidung erlassen hat)\n> 4. Jahr der Entscheidung\n> 5. Ordinalzahl (= bis zu 25 alphanumerische Zeichen inklusive Punkte).\n\n> Die Ordinalzahl soll wie folgt aufgebaut sein:\n\n> Stellen|Beschreibung|M\u00f6gliche Werte\n> ---|---|---\n> 1-6|Verk\u00fcndungs-Datum\n> Zustellungs-Datum (bei Zustellung an Verk\u00fcndungs Statt)|TTMMJJ\n> 7|Entscheidungstyp|B (Beschluss) U (Urteil)\n> 8-9|Spruchk\u00f6rper|1\u202636\n> 10-14|Registerzeichen gem\u00e4\u00df \u00a7 3 I AktOBPatG vom 11.05.2010 (runde Klammern entfallen)|Wpat Ni Li LiQ LiR ZApat ARpat\n> 15-17|Laufende Nummer|0\u2026999\n> 18|Trennzeichen (Punkt)|.\n> 19-20|Jahreszahl|abschlie\u00dfende zwei Stellen des Jahres\n> 21-22|Suffix Gem\u00e4\u00df \u00a7 3 II AktOBPatG vom 11.05.2010 (runde Klammern entfallen)|EP EU\n> 23|Trennzeichen (Punkt)|.\n> 24-25|Kollisionsziffer (stets)\n\n## Ziele\n* Auch ausl\u00e4ndische ECLI sollen analysiert werden k\u00f6nnen.\n* Es soll aus gegebenen Daten eine g\u00fcltige ECLI generiert werden k\u00f6nnen.\n\n## Tests\nIm Ordner tests liegt eine Datei f\u00fcr `pytest` bereit. Es kann aus dem Unterverzeichnis `parse_ecli` mit\n\n```\npython -m pytest tests/\n```\n\naufgerufen werden.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/kiersch/parse_ecli",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "parse-ecli",
            "package_url": "https://pypi.org/project/parse-ecli/",
            "platform": "",
            "project_url": "https://pypi.org/project/parse-ecli/",
            "project_urls": {
                "Homepage": "http://github.com/kiersch/parse_ecli"
            },
            "release_url": "https://pypi.org/project/parse-ecli/0.9.5/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Parse German ECLI",
            "version": "0.9.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7393262,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4d10d03004cdea0caf99c09ee893efa1",
                    "sha256": "15301c6f5b48c945d74f6db2288efc330cd03f595a9865f176e26b2a64b1105c"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4d10d03004cdea0caf99c09ee893efa1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 40800,
                "upload_time": "2020-06-04T06:28:30",
                "upload_time_iso_8601": "2020-06-04T06:28:30.920340Z",
                "url": "https://files.pythonhosted.org/packages/fd/8e/1f4a047017459f52a4b72d869831ec646922cf6e1891480172e395991017/parse_ecli-0.9.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3e9606c80e6b0b3f8a7d8a45a9b28d3e",
                    "sha256": "1436a8bc7e98693980f9c43a7851a2fb25b953770e1f31a911550ed6932e1745"
                },
                "downloads": -1,
                "filename": "parse_ecli-0.9.5.tar.gz",
                "has_sig": false,
                "md5_digest": "3e9606c80e6b0b3f8a7d8a45a9b28d3e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 45869,
                "upload_time": "2020-06-04T06:28:32",
                "upload_time_iso_8601": "2020-06-04T06:28:32.010504Z",
                "url": "https://files.pythonhosted.org/packages/55/ae/594e2e712d634b25542917feacdfc8b6124aee01bb07b55ac3db6abbea5b/parse_ecli-0.9.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}