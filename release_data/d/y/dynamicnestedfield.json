{
    "0.0.1": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0e591c61fcbb7e5b641bea7333e7fae3",
                    "sha256": "01660b1c845eb24c31820fa4b3fb0ab9a82769abf64b1a8f438dac004331b570"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0e591c61fcbb7e5b641bea7333e7fae3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 10552,
                "upload_time": "2022-11-08T13:58:05",
                "upload_time_iso_8601": "2022-11-08T13:58:05.469929Z",
                "url": "https://files.pythonhosted.org/packages/85/b4/301e8e44e35ef1dc12f43287f37e32ddc6743096f0d2ee9a46bd54657150/DynamicNestedField-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5f6a39e7635ff3fca195a620007b592b",
                    "sha256": "bf23d2d6571f7f14e2da0b47f680b06c97b943913f31692b662067d3563791b5"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5f6a39e7635ff3fca195a620007b592b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 12405,
                "upload_time": "2022-11-08T13:58:07",
                "upload_time_iso_8601": "2022-11-08T13:58:07.509884Z",
                "url": "https://files.pythonhosted.org/packages/48/44/f787af434f2a11811d95a051a6962f3cc3a72f1d5193b90964dc6d3083f2/DynamicNestedField-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8665d379eb87a472da189e6276888f39",
                    "sha256": "6ae450b559ab658ebf840d7bbf1e2df091dbeec9e462ed59457fcce9b26dc37f"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8665d379eb87a472da189e6276888f39",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 10790,
                "upload_time": "2022-11-09T11:19:57",
                "upload_time_iso_8601": "2022-11-09T11:19:57.712870Z",
                "url": "https://files.pythonhosted.org/packages/6b/87/33a37ef87148e8cc9eeb664f0691a68518851c7291f7f4c5f503a2b20e2a/DynamicNestedField-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0c87893b16c1c1fb249c2bbe1c43bf90",
                    "sha256": "d1ac00beca04f81c5577f07a9d3a069113f1f2487e398edd99d923968b265494"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "0c87893b16c1c1fb249c2bbe1c43bf90",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 12713,
                "upload_time": "2022-11-09T11:20:00",
                "upload_time_iso_8601": "2022-11-09T11:20:00.762418Z",
                "url": "https://files.pythonhosted.org/packages/f7/3d/9c68aae2d691aa570f8d0c3712b6f86127624edfc4d99f96081083e36d45/DynamicNestedField-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "60d5362feeb93baa2fa0b93a50361bf7",
                    "sha256": "6327a2bd838fe0d26239205440733c518ae550fea165651cf18e517a9e4c3594"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "60d5362feeb93baa2fa0b93a50361bf7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 11009,
                "upload_time": "2022-11-09T11:44:18",
                "upload_time_iso_8601": "2022-11-09T11:44:18.814512Z",
                "url": "https://files.pythonhosted.org/packages/f9/41/4acb9e6f66948bb4b829039abc754467131ffabff6b97c89efcd803ff68f/DynamicNestedField-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ae2cd34fc86f709d1494782aa8a47477",
                    "sha256": "7f3a7995dc45e506b370b2bbc9d78e4f66247ccbe1e3baa6aed4c85bc58c7d34"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ae2cd34fc86f709d1494782aa8a47477",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13165,
                "upload_time": "2022-11-09T11:44:24",
                "upload_time_iso_8601": "2022-11-09T11:44:24.634053Z",
                "url": "https://files.pythonhosted.org/packages/27/ad/ef246a3b5f797ef690f7e7963507443ef20d47bbfb4adcce4b6ac28705ba/DynamicNestedField-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.4/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cc1b06132bf62cd2b56295c8725de089",
                    "sha256": "9e7b57db315e070db4791bb5efcd5c757d3c6dbb6cedb05e1a3d28386d4f1544"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cc1b06132bf62cd2b56295c8725de089",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 11008,
                "upload_time": "2022-11-10T10:15:13",
                "upload_time_iso_8601": "2022-11-10T10:15:13.269561Z",
                "url": "https://files.pythonhosted.org/packages/f5/a7/98d86b43ffe2dd5f1780ad708b70bf7e216bd8c4354082861d7e8ff90ece/DynamicNestedField-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "761b505facdf74f0c7f2580ca1b43a14",
                    "sha256": "02cbb6392e4b8564c44679c4005793495c88eded2edb4b8a878575642989b46a"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "761b505facdf74f0c7f2580ca1b43a14",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13164,
                "upload_time": "2022-11-10T10:15:17",
                "upload_time_iso_8601": "2022-11-10T10:15:17.718104Z",
                "url": "https://files.pythonhosted.org/packages/72/36/de3eab4142fb23af018387e5cfded5b4abff1bf8fb7c772325c885b24bd8/DynamicNestedField-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.5/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "17c8306e3e319357d01e77be9643fd14",
                    "sha256": "55c89394ed7e95b8b0141b1a1c357adcc17eacfb75e1638c06e6e114d5abdc20"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "17c8306e3e319357d01e77be9643fd14",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 10996,
                "upload_time": "2022-11-10T11:11:59",
                "upload_time_iso_8601": "2022-11-10T11:11:59.528442Z",
                "url": "https://files.pythonhosted.org/packages/cc/b3/923ca078644515e8cae28188b1f2660cab428a3d18e8946ee4a655ba54ca/DynamicNestedField-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "aaae8daa610ffcab8eef8f7bc64b69a5",
                    "sha256": "c5499abfe2dbf092c658fb9a6531796319503a28e25ee63b49cac9c44939dff7"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "aaae8daa610ffcab8eef8f7bc64b69a5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13148,
                "upload_time": "2022-11-10T11:12:04",
                "upload_time_iso_8601": "2022-11-10T11:12:04.859663Z",
                "url": "https://files.pythonhosted.org/packages/a3/50/8d1c722d109d6e9aba4bcb3a9f9db5027a6808e0744f8ed7fc216ff602fb/DynamicNestedField-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.6": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.6/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f26a50127724c009acbc15243e40d6e0",
                    "sha256": "c1b2f70db29e0989a62a59707a3a19e44d8d96c1a736e5ed3af2fca0f494ccbf"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f26a50127724c009acbc15243e40d6e0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 10997,
                "upload_time": "2022-11-11T11:11:38",
                "upload_time_iso_8601": "2022-11-11T11:11:38.812730Z",
                "url": "https://files.pythonhosted.org/packages/3e/6b/30d021c6d0e80919f36e0d3d67e43fa5b5fadc52cf0eb8a2ba58841b7667/DynamicNestedField-0.0.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "15a166dfb24772b0f4ca5fada2445e17",
                    "sha256": "7f16a512a6fc7aa04abdcd5a3d95d58a299badd7452c333301a99dce2b69e774"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "15a166dfb24772b0f4ca5fada2445e17",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13148,
                "upload_time": "2022-11-11T11:11:46",
                "upload_time_iso_8601": "2022-11-11T11:11:46.102531Z",
                "url": "https://files.pythonhosted.org/packages/7f/5e/8da268d68d127f541ee71c8513ce5dd1be1aae484f938ec0790261e856ac/DynamicNestedField-0.0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.7": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.7/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d04e0c71d14b0380e0fb1717eddccc5c",
                    "sha256": "d3ceefc1a22db213e6f91cc8af96b4d7fa5a6a474dbe395b1eb542cd95ed9d2f"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d04e0c71d14b0380e0fb1717eddccc5c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 11038,
                "upload_time": "2022-11-18T06:49:01",
                "upload_time_iso_8601": "2022-11-18T06:49:01.601557Z",
                "url": "https://files.pythonhosted.org/packages/08/62/1d683a30553fe099ee0ca0d3b1c71296ca202467b6f1c09ba1d7422031b3/DynamicNestedField-0.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "09d2f95776ec28607077997d46655358",
                    "sha256": "7e105ee60778e9b092e2e2888f8c747ff095d0ac647cc2a6832fd9b99a503161"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "09d2f95776ec28607077997d46655358",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13172,
                "upload_time": "2022-11-18T06:49:08",
                "upload_time_iso_8601": "2022-11-18T06:49:08.157834Z",
                "url": "https://files.pythonhosted.org/packages/07/16/03e01e13b4ca10029114d8dbc9349e1e2b7deb61815ae1e875a3c22d90da/DynamicNestedField-0.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.8": {
        "info": {
            "author": "Nameer Haider",
            "author_email": "nmeer5242@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Django",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# DynamicNestedField\r\n\r\n`DynamicNestedField` is a set of tools used to perform dynamic nested operation on django models without worrying about the problems and authentication leaks that come with it.\r\n\r\n## Installation\r\n\r\nInstall using `pip`...\r\n\r\n```\r\n$ pip install DynamicNestedField\r\n```\r\n\r\n## Usage & Example\r\n\r\nWorking with this library is semilunar to using normal serializers, we will create simple project that contains several models with m2m and foreignkey relations...\r\n\r\n***\ud83d\udc49 You can find a simple example project [on GitHub](https://github.com/NAMEER242/DynamicNestedField_Showcase).***\r\n\r\n* model: `A`\r\n  * ManyToMany: model: `B`\r\n    * ForeignKey: model: `C`\r\n\r\n### models:\r\n\r\nHere we will define three models as following...\r\n\r\n```py\r\nfrom django.db import models\r\n\r\n\r\nclass C(models.Model):\r\n    charfield = models.CharField(max_length=100)\r\n\r\n\r\nclass B(models.Model):\r\n    charfield = models.CharField(max_length=100)\r\n    c = models.ForeignKey(C, on_delete=models.CASCADE, null=True, blank=True)\r\n\r\n\r\nclass A(models.Model):\r\n    charfield = models.CharField(max_length=100)\r\n    b = models.ManyToManyField(B)\r\n\r\n```\r\n\r\n### Serializers:\r\n\r\nAnd this is the main serializers that we are using to perform all models operations, we will talk about it just in seconds.\r\n\r\n```py\r\nclass C_Serializer(DynamicNestedMixin):\r\n    class Meta:\r\n        model = C\r\n        fields = ['charfield']\r\n        permission_classes = [IsAuthenticated]  # the general permission class.\r\n        permission_classes_by_method = {\r\n            'GET': [IsAuthenticated],\r\n            'POST': [IsAuthenticated],\r\n            'PUT': [IsAuthenticated],\r\n            'DELETE': [IsAuthenticated],\r\n            # and so on.\r\n        }\r\n\r\n\r\nclass B_Serializer(DynamicNestedMixin):\r\n    c = C_Serializer()\r\n\r\n    class Meta:\r\n        model = B\r\n        fields = ['charfield', 'c']\r\n        DNM_config = {  # DNM_config holds all the configuration needed.\r\n            \"c\": {\r\n                \"filter\": \"id\",\r\n            }\r\n        }\r\n        permission_classes = [IsAuthenticated]  # the general permission class.\r\n        permission_classes_by_method = {\r\n            'GET': [IsAuthenticated],\r\n            'POST': [IsAuthenticated],\r\n            'PUT': [IsAuthenticated],\r\n            'DELETE': [IsAuthenticated],\r\n            # and so on.\r\n        }\r\n\r\n\r\nclass A_Serializer(DynamicNestedMixin):\r\n    b = B_Serializer(many=True)  # many=True for m2m.\r\n\r\n    class Meta:\r\n        model = A\r\n        fields = ['charfield', 'b']\r\n        DNM_config = {  # DNM_config holds all the configuration needed.\r\n            \"b\": {\r\n                \"filter\": \"id\",\r\n            }\r\n        }\r\n        permission_classes = [IsAuthenticated]  # the general permission class.\r\n        permission_classes_by_method = {\r\n            'GET': [IsAuthenticated],\r\n            'POST': [IsAuthenticated],\r\n            'PUT': [IsAuthenticated],\r\n            'DELETE': [IsAuthenticated],\r\n            # and so on.\r\n        }\r\n\r\n```\r\n\r\nAs you can see we define our serializers as usual, except this time we use three new variables in our Meta class, the first one is `permission_classes` this variable is an instance of djangoRestFramework VewSet class permission_classes variable it does the same thing, takes a list of `BasePermission` classes that can be used to define permissions by using predefined permissions classes or by creating your own.\r\n\r\nThe second Variable is `permission_classes_by_method` this is the same as the previous `permission_classes` but here we can define a dict var with its keys as request methods (POST, PUT, GET ...) so we can set custom permissions for each one, if you didn't specify a request method here then the library will use the default permissions that are located in `permission_classes`.\r\n\r\nLast variable and the most important one is `DNM_config`, here we define all serializer fields configuration\r\nThe default options we have in `DNM_config` are as following...\r\n\r\n```py\r\nDNM_config = {\r\n            \"field\": {  # Default Values...\r\n                \"create_new_instance\": True,  # if you want to perform create operation on this field.\r\n                \"can_be_edited\": True,  # if you want to perform update operation on this field.\r\n                \"clear_data\": False,  # if you want to clear field data before updating it (like if it was m2m relation, and you want to clear the data every time you update using this serializer).\r\n                \"filter\": [None],  # the filter field used to get old data of this field from the database, if the first filter was not found then it will check for the secondary if exists (this attribute must be defined). \r\n                \"serializer\": None  # you can set a serializer for this field the library will search for it by itself.\r\n            }\r\n        }\r\n```\r\n\r\nIn this configuration dict the only required attribute is filter, it is a list of str names for serializer fields that we will use to find old model data, you can use up to 2 filters inside the filter attr the first every one of them has some special logics...\r\nlet `filter=['id', 'name']`\r\n* in the first filter `id` we will search for an item with `id=filter['id']` if we found one we use it else we raise an exception.\r\n* but in the second filter `name` we will search for an item with `name=filter['name']` if we found one we use it else we create a new item with `name=filter['name']`.\r\n* if there was a third filter then we wil skip it in this library version.\r\n\r\nHere the filter attribute is the only required attribute the rest of them can be removed, and the library will set its default values.\r\n\r\n### views:\r\n\r\nLast step is defining out ViewSets...\r\n\r\n```py\r\nclass C_ViewSet(NestedModelViewSet):\r\n    queryset = C.objects.all()\r\n    serializer_class = C_Serializer\r\n\r\n\r\nclass B_ViewSet(NestedModelViewSet):\r\n    queryset = B.objects.all()\r\n    serializer_class = B_Serializer\r\n\r\n\r\nclass A_ViewSet(NestedModelViewSet):\r\n    queryset = A.objects.all()\r\n    serializer_class = A_Serializer\r\n\r\n```\r\n\r\nAs you can see our ViewSets are so brief and simple thanks to the abbreviation of all the operation of the nested models.\r\n\r\n### Using The Api\r\n\r\nNow we can run the project and try our new api...\r\n\r\n#### POST:\r\n\r\n```\r\n{\r\n  \"charfield\": \"a\",\r\n  \"b\": [\r\n    {\r\n      \"charfield\": \"b\",\r\n      \"c\": {\r\n        \"charfield\": \"c\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThis will create model A first and then will start creating model B data and inserting it to field A, and the same thing with model C data.\r\n\r\n#### POST: with using old data...\r\n\r\n```\r\n{\r\n  \"charfield\": \"a\",\r\n  \"b\": [\r\n    {\r\n      \"id\": 1\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nor\r\n\r\n```\r\n{\r\n  \"charfield\": \"a\",\r\n  \"b\": [1]\r\n}\r\n```\r\n\r\nHere we use an old B model data with id=1.\r\n\r\n#### PUT & PATCH:\r\n\r\n```\r\n{\r\n  \"id\": 1,\r\n  \"charfield\": \"a_updated_name\",\r\n  \"b\": [\r\n    {\r\n      \"charfield\": \"b\",\r\n      \"c\": {\r\n        \"charfield\": \"c\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nThis will get model A data with id=1 and update it's a var to `a_updated_name` and create new model B data and set it to out A model that we get first.\r\n\r\n#### PUT & PATCH: with old data...\r\n\r\n```\r\n{\r\n  \"id\": 1,\r\n  \"charfield\": \"a_updated_name\",\r\n  \"b\": [2]\r\n}\r\n```\r\n\r\nHere it will get model A data with id=1 and add new b var data with id=2.\r\n\r\nIn short, you can...\r\n\r\n* you can create nested models that are inside other models.\r\n* you can update models by setting filter attr value (e.g. `id=1`, or `username=\"nameer\"`).\r\n* you can set old models data by using just the filter attr value without specifying attr name (e.g. `m2m_relation_field=[1,2,3]` or `foreignkey_field=\"nameer\"`)\r\n\r\nand you can't:\r\n\r\n* you can't update old models in create operation.\r\n\r\nand that's it for today \ud83d\ude01\r\n\r\nMIT License\r\n\r\nCopyright (c) 2022 Nameer Haider\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NAMEER242/DynamicNestedField",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "DynamicNestedField",
            "package_url": "https://pypi.org/project/DynamicNestedField/",
            "platform": null,
            "project_url": "https://pypi.org/project/DynamicNestedField/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NAMEER242/DynamicNestedField/issues",
                "Homepage": "https://github.com/NAMEER242/DynamicNestedField",
                "repository": "https://github.com/NAMEER242/DynamicNestedField"
            },
            "release_url": "https://pypi.org/project/DynamicNestedField/0.0.8/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "DynamicNestedField is a set of tools used to perform dynamic nested operation on django models.",
            "version": "0.0.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15945708,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "76e26545794324f0f56b916606e75d9c",
                    "sha256": "b85743c09f0022e9d2f36a8800d0791ad0cf882d86a4ce9acf72a2a16f5ba4d8"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "76e26545794324f0f56b916606e75d9c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 11445,
                "upload_time": "2022-11-30T18:08:05",
                "upload_time_iso_8601": "2022-11-30T18:08:05.216266Z",
                "url": "https://files.pythonhosted.org/packages/88/fc/cf3482610a8ce6e0ed3e3b063f9b2039a96b69522f0fe27c719816b06594/DynamicNestedField-0.0.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cab7acb88db4a4f6aca38c8cffe64edc",
                    "sha256": "f786b56197ef853546d5a1fdf0c2ad21274a17c737e278a58c83e63d277ea958"
                },
                "downloads": -1,
                "filename": "DynamicNestedField-0.0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "cab7acb88db4a4f6aca38c8cffe64edc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 13590,
                "upload_time": "2022-11-30T18:08:11",
                "upload_time_iso_8601": "2022-11-30T18:08:11.682303Z",
                "url": "https://files.pythonhosted.org/packages/06/c2/71e7744c7600d4969550b5e5830ca91e331bb67a92321fa7d55c154bfc97/DynamicNestedField-0.0.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}