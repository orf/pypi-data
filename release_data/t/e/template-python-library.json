{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Anthony Gatti <anthony.a.gatti@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering"
            ],
            "description": "![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)<br>\n![Build Status](https://github.com/gattia/template_python_library/actions/workflows/build-test.yml/badge.svg?branch=main)<br>\n|[Documentation](http://anthonygattiphd.com/template_python_library/)|\n\n\n\n# Introduction\n{update_here}\nThis package is an example/template for building repositories. The choices made\nin this repository are based on a combination of experience, convenience, and current\nconvention. These factors will change over time, and as such so will/should the \nrecommendations made in this document. \n\nThis package works like a normal package, it can be installed, tests can be run,\nit can be linted, coverage will be calculated, it should even push to pypi on push\nto master (merge accepted). \n\nIn the following, we briefly provide information about the format of this repository, \nthis is followed by the boilerplate `README.md` sections that describe how to install,\nhow to run examples, how to run tests, how to get coverage, how to lint, etc. \n\nThroughout this file, and the other files in this template, replace `{my_pacakge}`\nwith the name of the new repository that you are creating. Also, replace \n`{template_python_library}`\n\n#### To do:\n- [] give coverage badge on `README.md`\n- [] setup automatic push to pypi\n    - [] setup pypi account\n    - [] add token for pypi to repo\n\n## Structure \nHere is the general structure of this setup. Below this structure are quick instructions of \nthings to change for your new repository. \n\nInstructions on `Packaging` from python are provided here: \n- https://packaging.python.org/en/latest/tutorials/packaging-projects/\n\n```\nmy_package/\n    my_package/ \n        __init__.py\n        files.py\n        modules/\n            __init__.py\n            more_files.py\n    \n    .github/\n        ISSUE_TEMPLATE/\n            bug_report.md # template for filing bugs\n            feature_request.md # template for feature requests\n        workflows/\n            build-test.yml \n                # github actions workflow to:\n                #   - test linting/formating\n                #   - build & test the package\n                # To work, this requires a number of the Make commands to \n                # be setup, including: dev, requirements, lint, test\n    \n    docs/\n        # folder where the docs will be built\n    \n    examples/ \n        # folder where example scripts should be placed. \n        # e.g., https://github.com/gattia/cycpd/tree/main/examples\n    \n    .gitignore\n        # pre-filled gitignore file for common python packages\n    \n    Makefile\n        # makefile with convenienience commands designed to make \n        # developing/installing easy. \n    \n    pyproject.toml\n        # file to specif\n\n    README.md \n        # current background info, install info, and how to contribute\n\n    setup.py \n        # file to call to build library `python setup.py install`\n        # setup.py is no longer encouraged. We provide the most basic one here\n        # this can be used to install in editable mode.\n        # https://setuptools.pypa.io/en/latest/userguide/quickstart.html#development-mode\n        # this is only needed for editable mode because `pyproject.toml` not fully supported for \n        # editable mode (as described in link above). \n        #\n        # also, the setup.py might be needed for installing cython dependencies\n        # Example here: https://github.com/gattia/cycpd/blob/e235da5276652eea12875aef3c8280a9b673122e/setup.py#L12-L20\n        # and here: https://github.com/gattia/cycpd/blob/e235da5276652eea12875aef3c8280a9b673122e/setup.py#L48\n\n    pyproject.toml \n        # provides other info for setup.py, and other tools (e.g., linting)\n        # information for setting up `pyproject.toml`: https://peps.python.org/pep-0621/\n        # other helpful resources: \n        #    https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html\n        #    https://scikit-hep.org/developer/pep621\n    \n    requirements.txt\n        # packages that this repository requires/ that should be installed first \n        # this is necessary to let conda install dependencies (as well as pip). \n\n    CONTRIBUTING.md \n        # information about how to contribte to the library\n    \n    LICENSE\n        # Package license / license type. \n```\n\nSteps to update this package for new repository: \n1. `find` all instances of \"{my_project}\" and replace with package name\n    - Also replace all `{template_python_library}`\n2. rename my_package, and the name of this folder to be the correct names. \n3. fill in the `\"description\"` in the `pyproject.toml`\n4. update `requirements.txt` as well as `dependencies` in `pyproject.toml`\n5. Search the repositry for `{update_here}` to find instances that should be updated for \n    the new package being built. \n6. After pushing to new repository on github, make sure to change the setting to include\n    github pages, and direct them to look in the branch=main, /docs folder \n7. If there is a problem finding the package structure, then you can specify package information: \n    https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-metadata\n    This describes a system similar to defining `packages=['pymskt', 'pymskt.image', etc.]` in `setup()`\n\n# Installation\n\nYou should be able to install this by cloning, navigating to this root directory, and installing with pip:\n\n```\ngit clone https://github.com/gattia/template_python_library\ncd template_python_library\n\nconda create -n template_python_library python=3.8\n\npip install .\n```\n\n# Examples\n\nDescribe how to use the examples. E.g., {update_here}\n\nNavigate to the examples directory and run the scripts: \n```bash\ncd examples\npython examples/example_1.py\n```\n\n# Development / Contributing\n\n## Tests\nThe test can be run by: \n\n```bash\npytest\n```\n\nor \n```bash\nmake test\n```\n\nInidividual tests can be run by running \n\n```\npython -m pytests path_to_test\n```\n\n## Coverage\n- Coverage results/info requires `coverage` (`conda install coverage` or `pip install coverage`)\n- These should be installed automatically with one of the  `make dev` commands.\n- You can get coverage statistics by running: \n    - `coverage run -m pytest`\n    or if using make: \n    - `make coverage`\n        - This will save an html of the coverage results. \n\n### note about coverage:\n    - Coverage runs by seeing how much of the code-base is covered when you run the command after coverage. \n    In this case, it is looking to see how much of the code-base is covered when we run the tests. \n\n## Contributing\nIf you want to contribute, please read over the documentaiton in `CONTRIBUTING.md`\n\n## Docs\nTo build the docs, run `make docs`. If the docs are already built, you might need to delete\nthem before they can be rebuilts: `rm -rf /docs`, then `make docs`. You then just need to \nactivate github pages in your settings on the repository, and select the home dir for the \ndocs to `/docs` on the `main` branch. Like in the following:\n\n![Setup Docs on Github Pages](media/setting_up_docs_automatically.png)\n\n\n# License\nMIT License\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "python",
            "license": "MIT License  Copyright (c) 2020 Anthony Gatti  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
            "maintainer": "",
            "maintainer_email": "",
            "name": "template-python-library",
            "package_url": "https://pypi.org/project/template-python-library/",
            "platform": null,
            "project_url": "https://pypi.org/project/template-python-library/",
            "project_urls": {
                "Documentation": "https://anthonygattiphd.com/{my_package}/",
                "Homepage": "https://github.com/gattia/{my_package}"
            },
            "release_url": "https://pypi.org/project/template-python-library/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "My package description",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14529771,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8cf35d2f6403b234771eaa3843158ea4",
                    "sha256": "8b7caaf4f4e0da78dd82ada31f80af3591a493c3995ee080b2dcf99cac6aa8ae"
                },
                "downloads": -1,
                "filename": "template_python_library-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8cf35d2f6403b234771eaa3843158ea4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 419318,
                "upload_time": "2022-07-24T02:53:31",
                "upload_time_iso_8601": "2022-07-24T02:53:31.790028Z",
                "url": "https://files.pythonhosted.org/packages/dd/2c/79c98c882be402259556a0b93f30c63f73210dbba7e7f628a4f4a98d7af6/template_python_library-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}