{
    "0.1": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb0c346d33c6b12b02c0cb017e98a000",
                    "sha256": "1979e25f586017693bbd27c43265fbf2b6291892d9dd89eb1715e7d78ae8f50e"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "eb0c346d33c6b12b02c0cb017e98a000",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8959,
                "upload_time": "2015-10-10T22:50:40",
                "upload_time_iso_8601": "2015-10-10T22:50:40.212074Z",
                "url": "https://files.pythonhosted.org/packages/fa/26/771172b59a106616b57a00332e4793ec88a19626d974af87df3334f91dff/jira-cycle-extract-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.10": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.10/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "75c0a18e7c200bbbb95f93aa55924237",
                    "sha256": "4d166db381e5de52ac495b6e2cfb43ccf62fc397154621dd5eb250ee8a2aeef6"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.10.tar.gz",
                "has_sig": false,
                "md5_digest": "75c0a18e7c200bbbb95f93aa55924237",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 29089,
                "upload_time": "2016-06-08T21:27:28",
                "upload_time_iso_8601": "2016-06-08T21:27:28.038936Z",
                "url": "https://files.pythonhosted.org/packages/1b/34/d2e4ae802dc60f91d8bd653d6f4d45e1f6e9429d1d3f1dc1c8309c6ec35b/jira-cycle-extract-0.10.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c9f40439338a753d9d81f287eb096f5c",
                    "sha256": "546bea35fe0bf1404cf954ae68b3448797d0da00baa0c1d0712fae22e3f7fbb5"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "c9f40439338a753d9d81f287eb096f5c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8951,
                "upload_time": "2015-10-10T22:55:18",
                "upload_time_iso_8601": "2015-10-10T22:55:18.987494Z",
                "url": "https://files.pythonhosted.org/packages/b1/91/09851dfc56a9039729c6288e6fec8e880f4e2e8f9038d24126edb2728123/jira-cycle-extract-0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "913ac6325f0cc7a424405f6e8db560fa",
                    "sha256": "81ac7a2f030f12c964100fee1013cadc3d0aa787dbe4d35627836f7268b3fcdc"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "913ac6325f0cc7a424405f6e8db560fa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11380,
                "upload_time": "2015-10-11T21:40:53",
                "upload_time_iso_8601": "2015-10-11T21:40:53.369701Z",
                "url": "https://files.pythonhosted.org/packages/fa/cd/2fffd6ac9d06dc516ad9d33a22e4a55118e51b6a4063727c6a3a5f277394/jira-cycle-extract-0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a3376552afdcfd2c1a5d3f066f28ce40",
                    "sha256": "070ab331953252ed0ef83ff2c1412a469d75ea51e9557c2934a6069c3e316c0c"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "a3376552afdcfd2c1a5d3f066f28ce40",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11443,
                "upload_time": "2015-10-31T20:28:12",
                "upload_time_iso_8601": "2015-10-31T20:28:12.741193Z",
                "url": "https://files.pythonhosted.org/packages/02/dc/70026b7908da2066b72ae750ba34cce894f74ba232852504158a9b8614c4/jira-cycle-extract-0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.5/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f35b85c99b527185299da3d3e345424a",
                    "sha256": "cac2208e84556e6d92a0934cb0eedd600ec3bd87117b45151ac68dbcf90bee17"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "f35b85c99b527185299da3d3e345424a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11721,
                "upload_time": "2015-11-08T23:06:38",
                "upload_time_iso_8601": "2015-11-08T23:06:38.064651Z",
                "url": "https://files.pythonhosted.org/packages/22/ea/f247b06ef0b2fd33e0acd8624b835c18d0967886c12f3ffd694554113d20/jira-cycle-extract-0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.6/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e83a69ad2bd89eb0f6b89953cb0f415f",
                    "sha256": "1fdb95c9569bcbeb8f79d737ca98a7a4a2b0cfe05090a0ce7a44d20e49cd303e"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "e83a69ad2bd89eb0f6b89953cb0f415f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12851,
                "upload_time": "2016-01-20T14:20:21",
                "upload_time_iso_8601": "2016-01-20T14:20:21.802914Z",
                "url": "https://files.pythonhosted.org/packages/ce/12/4b5bf78b5596c4141c4f17deef232e2bc404cb2e015ab5e7a9569de80aa0/jira-cycle-extract-0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.7/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4387a0d1ca4d39c90c98c9f7865a2c28",
                    "sha256": "30eee5d69ec0c50e11f62b89cb5cc35be4b8170aa4278f6a317e868c8e9204df"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "4387a0d1ca4d39c90c98c9f7865a2c28",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13545,
                "upload_time": "2016-01-22T23:07:38",
                "upload_time_iso_8601": "2016-01-22T23:07:38.095911Z",
                "url": "https://files.pythonhosted.org/packages/e1/41/919a0c967940c9c1d811eaadaa5ad1d4c46bf3ab798f44cbced54c15a10e/jira-cycle-extract-0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.8": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.8/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc69f33a9c9dfb6fb7f1a3333c0d8903",
                    "sha256": "bfc92428d55129efe75cf4783e87396568e1ed2aaa24b5656ab9627c20d2a9b6"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "fc69f33a9c9dfb6fb7f1a3333c0d8903",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 20989,
                "upload_time": "2016-05-30T22:08:58",
                "upload_time_iso_8601": "2016-05-30T22:08:58.381121Z",
                "url": "https://files.pythonhosted.org/packages/63/3b/bc200f6f2bb3692c8de05461b5fe63810fff221d1fafdafdfee26f9c120a/jira-cycle-extract-0.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9": {
        "info": {
            "author": "Martin Aspeli",
            "author_email": "optilude@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "JIRA Cycle Data extract utility\r\n===============================\r\n\r\nThis utility helps extract data from JIRA for processing with the\r\nActionableAgile\u2122 Analytics tool (https://www.actionableagile.com/analytics-tools/),\r\nas well as ad-hoc analysis using Excel.\r\n\r\nIt will produce a CSV file with one row for each JIRA issue matching a set of\r\nfilter criteria, containing basic information about the issue as well as the\r\ndate the issue entered each step in the main cycle workflow.\r\n\r\nThis data can be used to produce a Cumulative Flow Diagram, a cycle time\r\nscatterplot, a cycle time histogram, and other analytics based on cycle time.\r\n\r\nTo make it easier to draw these diagrams, the tool can also be used to output\r\nCSV files with pre-calculated values for charting in e.g. Excel.\r\n\r\nFinally, if you have the right dependencies installed, it can output basic\r\ncharts as images.\r\n\r\nInstallation\r\n------------\r\n\r\nInstall Python 2.7 and pip. See http://pip.readthedocs.org/en/stable/installing/.\r\n\r\nInstall using `pip`::\r\n\r\n    $ pip install jira-cycle-extract\r\n\r\nIf you get errors, try to install `numpy` and `pandas` separately first::\r\n\r\n    $ pip install numpy pandas\r\n    $ pip install jira-cycle-extract\r\n\r\nThis will install a binary called `jira-cycle-extract`. You can test that it was\r\ncorrectly installed using::\r\n\r\n    $ jira-cycle-extract --help\r\n\r\nIf this doesn't work, check the output of `pip install jira-cycle-extract` to\r\nsee where it may have installed the binary.\r\n\r\nTo use the built-in charting capabilities, you need to install Seaborn\r\n(which in turn installs Matplotlib and SciPy) and Statsmodels. You can get\r\nthese with the `charting` extra::\r\n\r\n    $ pip install jira-cycle-extract[charting]\r\n\r\nThese dependencies are not installed by default because they can sometimes\r\nbe a bit tricky to install.\r\n\r\nUsing Docker\r\n------------\r\n\r\nIf you have Docker installed, you can run `jira-cycle-extract` as a docker image::\r\n\r\n    $ docker run --rm -it -v \"$PWD\":/data optilude/jira-cycle-extract:latest --help\r\n\r\nThis will map the working directory (`/data`) of the containerised\r\napplication to the current working directory (`$PWD`). Any files you\r\nspecify on the command line (without any further path prefixes) will be\r\nread from or output to the current directory, e.g::\r\n\r\n    $ docker run --rm -it -v \"$PWD\":/data optilude/jira-cycle-extract:latest config.yml cycle.csv\r\n\r\nConfiguration\r\n-------------\r\n\r\nWrite a YAML configuration file like so, calling it e.g. `config.yaml`::\r\n\r\n    # How to connect to JIRA?\r\n    Connection:\r\n        Domain: https://myserver.atlassian.net\r\n        Username: myusername # If missing, you will be prompted at runtime\r\n        Password: secret     # If missing, you will be prompted at runtime\r\n\r\n    # What to search for?\r\n    Criteria:\r\n        Project: ABC # JIRA project key to search\r\n        Issue types: # Which issue types to include\r\n            - Story\r\n            - Defect\r\n        Valid resolutions: # Which resolution statuses to include (unresolved is always included)\r\n            - Done\r\n            - Closed\r\n        JQL: labels != \"Spike\" # Additional filter as raw JQL, optional\r\n\r\n    # Describe the workflow. Each step can be mapped to either a single JIRA\r\n    # status, or a list of statuses that will be treated as equivalent\r\n    Workflow:\r\n        Open: Open\r\n        Analysis IP: Analysis in Progress\r\n        Analysis Done: Analysis Done\r\n        Development IP: Development in Progress\r\n        Development Done: Development Done\r\n        Test IP: Test in Progress\r\n        Test Done: Test Done\r\n        Done:\r\n            - Closed\r\n            - Done\r\n\r\n    # Map field names to additional attributes to extract\r\n    Attributes:\r\n        Components: Component/s\r\n        Priority: Priority\r\n        Release: Fix version/s\r\n\r\nIf you are unfamiliar with YAML, remember that:\r\n\r\n* Comments start with `#`\r\n* Sections are defined with a name followed by a colon, and then an indented\r\n  block underneath. `Connection`, `Criteria`, `Workflow` and `Attributes` area\r\n  all sections in the example above.\r\n* Indentation has to use spaces, not tabs!\r\n* Single values can be set using `Key: value` pairs. For example,\r\n  `Project: ABC` above sets the key `Project` to the value `ABC`.\r\n* Lists of values can be set by indenting a new block and placing a `-` in front\r\n  of each list value. In the example above, the `Issue types` list contains\r\n  the values `Story` and `Defect`.\r\n\r\nThe sections for `Connection`, `Criteria` and `Workflow` are required.\r\n\r\nUnder `Conection`, only `Domain` is required. If not specified, the script will\r\nprompt for both or either of username and password when run.\r\n\r\nUnder `Criteria`, all fields are technically optional, but you should specify\r\nat least some of them to avoid an unbounded query. `Issue types` and\r\n`Valid resolutions` can be set to either single values or lists.\r\n\r\nUnder `Workflow`, at least two steps are required. Specify the steps in order.\r\nYou may either specify a single workflow value or a list (as shown for `Done`\r\nabove), in which case multiple JIRA statuses will be collapsed into a single\r\nstate for analytics purposes.\r\n\r\nThe file, and values for things like workflow statuses and attributes, are case\r\ninsensitive.\r\n\r\nWhen specifying attributes, use the *name* of the field (as rendered on screen\r\nin JIRA), not its id (as you might do in JQL), so e.g. use `Component/s` not\r\n`components`.\r\n\r\nThe attributes `Type` (issue type), `Status` and `Resolution` are always\r\nincluded.\r\n\r\nWhen specifying fields like `Component/s` or `Fix version/s` that may have\r\nlists of values, only the first value set will be used.\r\n\r\nMultiple queries\r\n----------------\r\n\r\nIf it is difficult to construct a single set of criteria that returns all\r\nrequired issues, multiple `Criteria` sections can be wrapped into a `Queries`\r\nblock, like so::\r\n\r\n    Queries:\r\n        Attribute: Team\r\n        Criteria:\r\n            - Value: Team 1\r\n              Project: ABC\r\n              Issue types:\r\n                  - Story\r\n                  - Bug\r\n              Valid resolutions:\r\n                  - Done\r\n                  - Closed\r\n              JQL: Component = \"Team 1\"\r\n\r\n            - Value: Team 2\r\n              Project: ABC\r\n              Issue types:\r\n                  - Story\r\n                  - Bug\r\n              Valid resolutions:\r\n                  - Done\r\n                  - Closed\r\n              JQL: Component = \"Team 2\"\r\n\r\nIn this example, the `Component` field in JIRA is being used to signify the team\r\ndelivering the work, but may also be used for other things. Two JIRA queries\r\nwill be run, corresponding to the two `Criteria` blocks.\r\n\r\nIn addition, a new column called `Team` will be added to the output, as\r\nspecified by the `Attribute` field under `Queries`. For all items returned by\r\nthe first query, the value will be `Team 1` as per the `Value` field, and for\r\nall items returned by the second query, it will be `Team 2`.\r\n\r\nMulti-valued fields\r\n-------------------\r\n\r\nSome fields in JIRA can contain multiple values, e.g. `fixVersion`. By default,\r\nthe extractor will use the first value in such a field if one is specified in\r\nthe `Attributes` block. However, you may want to extract only specific values.\r\n\r\nTo do so, add a block like the following::\r\n\r\n    Attributes:\r\n        Release: Fix version/s\r\n\r\n    Known values:\r\n        Release:\r\n            - \"R01\"\r\n            - \"R02\"\r\n            - \"R03\"\r\n\r\nThe extractor will pick the first \"known value\" found for the field. If none of\r\nthe known values match, the cell will be empty.\r\n\r\nRunning\r\n-------\r\n\r\nTo produce the basic cycle time data, run `jira-cycle-extract` passing the name\r\nof the YAML configuration file and the name of the output CSV file::\r\n\r\n    $ jira-cycle-extract config.yaml data.csv\r\n\r\nThis will extract a CSV file called `data.csv` with cycle data based on the\r\nconfiguration in `config.yaml`, in a format compatible with the\r\nActionableAgile toolset.\r\n\r\nIf you prefer Excel files for manual analysis::\r\n\r\n    $ jira-cycle-extract --format=xlsx config.yaml data.xlsx\r\n\r\nIf you prefer JSON::\r\n\r\n    $ jira-cycle-extract --format=json config.yaml data.json\r\n\r\nThe JSON format can be loaded by the Actionable Agile Analytics tool if you\r\nself-host it and the single-page HTML file for the AAA tool and the JSON file\r\nare accessible from the same web server, via a URL parameter::\r\n\r\n    http://myserver/analytics.html?url=data.json\r\n\r\nYou can specify a path or full URL, but due to same-origin request restrictions,\r\nyour browser is unlikely to let you load anything not served from the same\r\ndomain as the analytics web app itself.\r\n\r\n**Note:** When the `--format` is set, it applies to all files written, not\r\njust the main cyle data file (see other options below). It is important to be\r\nconsistent with the file extensions. In particular, if you are using the `xlsx`\r\nformat you should also make sure all output files use a `.xlsx` extension.\r\n\r\nUse the `-v` option to print more information during the extract process.\r\n\r\nUse the `-n` option to limit the number of items fetched from JIRA, based on\r\nthe most recently updated issues. This is useful for testing the configuration\r\nwithout waiting for long downloads::\r\n\r\n    $ jira-cycle-extract -v -n 10 config.yaml data.csv\r\n\r\nTo produce **Cumulative Flow Diagram statistics**, use the `--cfd` option::\r\n\r\n    $ jira-cycle-extract --cfd cfd.csv config.yaml data.csv\r\n\r\nThis will yield a `cfd.csv` file with one row for each date, one column for each\r\nstep in the workflow, and a count of the number of issues in that workflow state\r\non that day. To plot a CFD, chart this data as a (non-stacked) area chart. You\r\nshould technically exclude the series in the first column if it represents the\r\nbacklog!\r\n\r\nTo produce **cycle time scatter plot statistics**, use the `--scatterplot` option::\r\n\r\n    $ jira-cycle-extract --scatterplot scatterplot.csv config.yaml data.csv\r\n\r\nThis will yield a `scatterplot.csv` file with one row for each item that was\r\ncompleted (i.e. it reached the last workflow state), with columns giving the\r\ncompletion date and the number of days elapsed from the item entering the first\r\nactive state (i.e. the second step in the workflow, on the basis that the first\r\nitem represents a backlog or intake queue) to the item entering the completed\r\nstate. These two columns can be plotted as an X/Y scatter plot. Further columns\r\ncontain the dates of entry into each workflow state and the various issue\r\nmetadata to allow further filtering.\r\n\r\nTo be able to easily draw a **histogram** of the cycle time values, use the\r\n`--histogram` option::\r\n\r\n    $ jira-cycle-extract --histogram histogram.csv config.yaml data.csv\r\n\r\nThis will yield a `histogram.csv` file with two columns: bin ranges and the\r\nnumber of items with cycle times falling within each bin. These can be charted\r\nas a column or bar chart.\r\n\r\nTo find out the 30th, 50th, 70th, 85th and 95th **percentile cycle time** values,\r\npass the `--percentiles` option::\r\n\r\n    $ jira-cycle-extract --percentiles percentiles.csv config.yaml data.csv\r\n\r\nTo calculate different percentiles use the `--quantiles` option::\r\n\r\n    $ jira-cycle-extract --percentiles percentiles.csv --quantiles=0.3,0.5,0.8 config.yaml data.csv\r\n\r\nNote that there should not be spaces between the commas!\r\n\r\nTo find out the **daily throughput** for the last 60 days, use the\r\n`--throughput` option::\r\n\r\n    $ jira-cycle-extract --throughput throughput.csv config.yaml data.csv\r\n\r\nTo use a different time window, e.g. the last 90 days::\r\n\r\n    $ jira-cycle-extract --throughput throughput.csv --throughput-window=90 config.yaml data.csv\r\n\r\nThe various options can be used in combination, and it is technically OK to\r\nskip the second positional (`data.csv`) parameter (in which case the file will\r\nnot be written).\r\n\r\nIf you have charting dependencies installed (see above), there are various\r\noptions available to allow you to draw **charts**, for example::\r\n\r\n    $ jira-cycle-extract --charts-scatterplot=scatterplot.png config.yaml data.csv\r\n\r\nThe available charts are:\r\n\r\n* `--charts-scatterplot` to draw a **scatterplot** of cycle times, with percentile lines\r\n* `--charts-histogram` to draw a **histogram** of cycle times, with percentile lines\r\n* `--charts-cfd` to draw a **Cumulative Flow Diagram**\r\n* `--charts-throughput` to draw a daily **throughput bar chart**\r\n* `--charts-burnup` to draw a simple **burn-up** chart (completed item count vs. time)\r\n* `--charts-burnup-forecast` to draw a **burn-up chart with a Monte Carlo simulation**\r\n  showing paths towards a completion target. The completion target will by default\r\n  be the number of items in the backlog, but can be set explicitly with the\r\n  `--charts-burnup-forecast-target` options. The simluation by default uses\r\n  100 trials. The number of trials can be set with the\r\n  `--charts-burnup-forecast-trials` option.\r\n* `--charts-wip` to draw a **WIP boxplot** showing min, max, median and mean WIP\r\n  by week. By default, this will show the last 5 or 6 weeks' of data (depending\r\n  on the weekday). You can change this with the `--charts-wip-window` parameter,\r\n  set to a number of weeks.\r\n* `--charts-ageing-wip` to draw an **ageing WIP chart**: a scatter plot of current\r\n  cycle time against state in the cycle, i.e. how items are trending towards completion.\r\n* `--charts-net-flow` to show a bar chart of the **weekly net flow**:\r\n  departures - arrivals. By default, this will show the last 5 or 6 weeks' of\r\n  data (depending on the weekday). You can change this with the\r\n  `--charts-net-flow-window` parameter, set to a number of weeks.\r\n\r\nTroubleshooting\r\n---------------\r\n\r\n* If Excel complains about a `SYLK` format error, ignore it. Click OK. See\r\n  https://support.microsoft.com/en-us/kb/215591.\r\n* JIRA error messages may be printed out as HTML in the console. The error is\r\n  in there somewhere, but may be difficult to see. Most likely, this is either\r\n  an authentication failure (incorrect username/password or blocked account),\r\n  or an error in the `Criteria` section resulting in invalid JQL.\r\n* If you aren't getting the issues you expected to see, use the `-v` option to\r\n  see the JQL being sent to JIRA. Paste this into the JIRA issue filter search\r\n  box (\"Advanced mode\") to see how JIRA evaluates it.\r\n* Old workflow states can still be part of an issue's history after a workflow\r\n  has been modified. Use the `-v` option to find out about workflow states that\r\n  haven't been mapped.\r\n* Excel sometimes picks funny formats for data in CSV files. Just set them to\r\n  whatever makes sense.\r\n* If you are on a Mac and you get an error about Python not being installed as\r\n  a framework, try to create a file `~/.matplotlib/matplotlibrc` with the\r\n  following contents::\r\n\r\n    backend : Agg\r\n* To install the charting dependencies on a Mac, you probably need to install a\r\n  `gfortran` compiler for `scipy`. Use Homebrew (http://brew.sh) and install the\r\n  `gcc` brew.\r\n\r\nAd-hoc analysis\r\n---------------\r\n\r\nSometimes, you may want to perform more exploratory, ad-hoc analysis of the\r\ncycle data. `jira-cycle-extract` uses Python Pandas (http://pandas.pydata.org)\r\nto do most of its heavy lifting, and Pandas provides a rich environment for\r\ndata science.\r\n\r\nThe Jupyter Notebook (http://jupyter.org) is a popular way to conduct\r\ninteractive, ad-hoc analysis using Pandas (and more!).\r\n\r\nIf you have this running, here's an example of a notebook that uses\r\n`jira-cycle-extract` to query JIRA with a given YAML file configuration and\r\nmakes the data available for further analysis::\r\n\r\n    import getpass\r\n    import datetime\r\n\r\n    import pandas as pd\r\n    import numpy as np\r\n    import matplotlib.pyplot as plt\r\n    import matplotlib as mpl\r\n    import seaborn as sns\r\n\r\n    from jira import JIRA\r\n    from jira_cycle_extract import cycletime, config\r\n\r\n    # Print charts in the notebook, using retina graphics\r\n    %matplotlib inline\r\n    %config InlineBackend.figure_format = 'retina'\r\n    sns.set_context(\"talk\")\r\n\r\n    # Prompt for JIRA username, password and config file:\r\n    username = raw_input(\"Username:\")\r\n    password = getpass.getpass(\"Password:\")\r\n    config_filename = raw_input(\"Config file:\")\r\n\r\n    # Parse options\r\n    options = {}\r\n    with open(config_filename) as config_file:\r\n        options = config.config_to_options(config_file.read())\r\n\r\n    # Connect to JIRA\r\n    jira = JIRA(options={'server': options['connection']['domain']}, basic_auth=(username, password))\r\n\r\n    # Fetch issues and calculate cycle data as a Pandas DataFrame\r\n    q = cycletime.CycleTimeQueries(jira, **options['settings'])\r\n    cycle_data = q.cycle_data(verbose=False)\r\n\r\n    # Calculate other DataFrames for CFD, scatterplot, histogram, percentile and throughput data\r\n    cfd_data = q.cfd(cycle_data)\r\n    scatter_data = q.scatterplot(cycle_data)\r\n    histogram_data = q.histogram(cycle_data)\r\n    percentile_data = q.percentiles(cycle_data, percentiles=quantiles)\r\n    daily_throughput_data = q.throughput_data(cycle_data[cycle_data])\r\n\r\nYou can now do all kinds of analysis on the DataFrames (`cycle_data`, `cfd_data`\r\nand so on).\r\n\r\nChangelog\r\n---------\r\n\r\n0.9 - May 31 2016\r\n    * Add Docker documentation\r\n\r\n0.8 - May 30 2016\r\n    * Fixed a bug with calculating the CFD when statuses are skipped\r\n    * Added --throughput output\r\n    * Percentiles are now saved to file, not printed, when using --percentiles\r\n    * Adding charting output (with optional dependencies - see above)\r\n\r\n0.7 - January 22 2016\r\n    * Add support for `--format=json`\r\n    * Output all dates in ISO format (YYYY-MM-DD)\r\n\r\n0.6 - January 20 2016\r\n    * Add support for `Queries` and `Known values`.\r\n\r\n0.5 - November 8 2015\r\n    * When an issues moves between two JIRA states that are mapped to the same\r\n      workflow step, record the *earliest* date, not the most recent\r\n    * When an issue moves backwards in the flow as defined by the sequence of\r\n      workflow steps, retain the *earliest* date the issue entered the given\r\n      step (and erase any dates recorded for all subsequent steps)\r\n\r\n0.4 - October 31 2015\r\n    * Fix encoding errors when summary contains non-ASCII characters\r\n\r\n0.3 - October 11 2015\r\n    * Add proper support for `--cfd`, `--scatterplot`, `--percentiles` and\r\n      `--histogram`\r\n    * Fix some typing issues with the main cycle data extract.\r\n\r\n0.2 - October 10 2015\r\n    * Fix documentation errors\r\n\r\n0.1 - October 10 2015\r\n    * Initial release",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/optilude/jira-cycle-extract",
            "keywords": "agile jira analytics",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jira-cycle-extract",
            "package_url": "https://pypi.org/project/jira-cycle-extract/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/jira-cycle-extract/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/optilude/jira-cycle-extract"
            },
            "release_url": "https://pypi.org/project/jira-cycle-extract/0.9/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Extract cycle time analytics data from JIRA",
            "version": "0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2157679,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "418373dd09238e0d037fcfa7db6efa26",
                    "sha256": "5eeeec62197bdb7e0c53e32f1ae4011ebc3fabee3be5d45f05aa15719750c204"
                },
                "downloads": -1,
                "filename": "jira-cycle-extract-0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "418373dd09238e0d037fcfa7db6efa26",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 27240,
                "upload_time": "2016-05-31T21:27:35",
                "upload_time_iso_8601": "2016-05-31T21:27:35.320846Z",
                "url": "https://files.pythonhosted.org/packages/93/99/797b4017d7255d190bcc5c83c4dcd17a52ae584b4d90da1ffd57b9b8952f/jira-cycle-extract-0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}