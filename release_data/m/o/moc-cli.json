{
    "0.5.1": {
        "info": {
            "author": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "author_email": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
            "keywords": "healpix,moc",
            "license": "MIT OR Apache-2.0",
            "maintainer": null,
            "maintainer_email": null,
            "name": "moc-cli",
            "package_url": "https://pypi.org/project/moc-cli/",
            "platform": null,
            "project_url": "https://pypi.org/project/moc-cli/",
            "project_urls": {
                "Homepage": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
                "repository": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli"
            },
            "release_url": "https://pypi.org/project/moc-cli/0.5.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Command-line to create and manipulate HEALPix Multi-Order Coverages maps (MOCs)",
            "version": "0.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15724911,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "da863d49f2680d29561b8eccb7b3652b",
                    "sha256": "1cf045392653bfc58cb7f796635945ce8c11557f9d10813d37957a3976220f3c"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.1-py3-none-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "da863d49f2680d29561b8eccb7b3652b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5579188,
                "upload_time": "2022-09-10T22:02:37",
                "upload_time_iso_8601": "2022-09-10T22:02:37.399668Z",
                "url": "https://files.pythonhosted.org/packages/34/d5/5d3cd18cfedd18bf2187883aaaed706c7f321a9133ef861dcf01a9b1a5f4/moc_cli-0.5.1-py3-none-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "16705e8080b026dfc63a727501500c8d",
                    "sha256": "1311c8dcab06bc08c006cb45e4ddaddc51ba417a6f1df7d31175a8260bbe9f7c"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "16705e8080b026dfc63a727501500c8d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5851683,
                "upload_time": "2022-09-10T21:57:12",
                "upload_time_iso_8601": "2022-09-10T21:57:12.077868Z",
                "url": "https://files.pythonhosted.org/packages/e6/84/0dec29840f08408730a64b4f98a0c512da19c0d4725c3835fb59b4e2dd0b/moc_cli-0.5.1-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "7b67d5185f3d6742ae81c84d92c213c7",
                    "sha256": "b05ec3206dc95e5216bc639e8affd958365775b46d0736625abd18d8b8720303"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.1-py3-none-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "7b67d5185f3d6742ae81c84d92c213c7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5672678,
                "upload_time": "2022-09-10T22:04:15",
                "upload_time_iso_8601": "2022-09-10T22:04:15.126886Z",
                "url": "https://files.pythonhosted.org/packages/d1/42/9c4630752ba3f868ce8b729615ae3f149e973bf0eff64e2641b961e09767/moc_cli-0.5.1-py3-none-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.2": {
        "info": {
            "author": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "author_email": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
            "keywords": "healpix,moc",
            "license": "MIT OR Apache-2.0",
            "maintainer": null,
            "maintainer_email": null,
            "name": "moc-cli",
            "package_url": "https://pypi.org/project/moc-cli/",
            "platform": null,
            "project_url": "https://pypi.org/project/moc-cli/",
            "project_urls": {
                "Homepage": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
                "repository": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli"
            },
            "release_url": "https://pypi.org/project/moc-cli/0.5.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Command-line to create and manipulate HEALPix Multi-Order Coverages maps (MOCs)",
            "version": "0.5.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15724911,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "84f05b46517489dd9c398a4ec10cb032",
                    "sha256": "b0ac7c55102ca5d5d11af115b6bf2a580db107488955ab2e478de6acce9ed18e"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.2-py3-none-macosx_10_7_x86_64.whl",
                "has_sig": false,
                "md5_digest": "84f05b46517489dd9c398a4ec10cb032",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5585537,
                "upload_time": "2022-09-12T14:57:27",
                "upload_time_iso_8601": "2022-09-12T14:57:27.185980Z",
                "url": "https://files.pythonhosted.org/packages/f3/af/ffd077aa72a2cb64de4370241b38389d6ac453243f6893cb48d108a0b0ce/moc_cli-0.5.2-py3-none-macosx_10_7_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "254dccd3f9f614dc32b495b65a08a772",
                    "sha256": "d934d2b1f1e4f056cd15fc25e69b74e846cf24c7dd0a5ebb341258913c36d821"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.2-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
                "has_sig": false,
                "md5_digest": "254dccd3f9f614dc32b495b65a08a772",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10207408,
                "upload_time": "2022-10-19T00:14:53",
                "upload_time_iso_8601": "2022-10-19T00:14:53.454073Z",
                "url": "https://files.pythonhosted.org/packages/71/22/b694ae428ae305a5c191dc91b0b51e48b15fa75b3ce72460048974ffcdaf/moc_cli-0.5.2-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "14598e093e53c84bdbf890a3d1237f36",
                    "sha256": "87132bbcb96f1e3719af0c65954cec4ee38f84db2d72a6e038c6b8f919f45a6b"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "14598e093e53c84bdbf890a3d1237f36",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5853407,
                "upload_time": "2022-09-12T14:48:59",
                "upload_time_iso_8601": "2022-09-12T14:48:59.667809Z",
                "url": "https://files.pythonhosted.org/packages/0c/5d/8404d1fd5c039e7669c279c5e49d2633152788265570a9612f2ca08d0110/moc_cli-0.5.2-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "d4c706edc58f9c31bc1ab4a10edfc899",
                    "sha256": "761df8d914319d60804524b84c021d7d4bf9293e1f59efad6b2a936b20a69960"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.2-py3-none-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "d4c706edc58f9c31bc1ab4a10edfc899",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5668406,
                "upload_time": "2022-09-12T14:54:31",
                "upload_time_iso_8601": "2022-09-12T14:54:31.609987Z",
                "url": "https://files.pythonhosted.org/packages/b0/f7/149c845d59d092d9158ea75d1516ac74a8967c49d43b33430207e2585d8a/moc_cli-0.5.2-py3-none-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.3": {
        "info": {
            "author": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "author_email": "F.-X. Pineau <francois-xavier.pineau@astro.unistra.fr>",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# `moc-cli`\r\n\r\nA command-line to create and manipulate HEALPix **M**ulti-**O**rder **C**overage maps (**MOC**s),\r\n, see [this IVOA standard](https://ivoa.net/documents/MOC).\r\n\r\n## About\r\n\r\nThis **C**ommand **Line** **I**nterface (CLI) is made from the [Rust MOC library](https://github.com/cds-astro/cds-moc-rust).\r\nIt implements the v2.0 of the [MOC standard](https://ivoa.net/documents/MOC/),\r\nincluding (S-)MOCs, T-MOCs and ST-MOCs.\r\n\r\nFor tools able to display MOCs, see:\r\n* the [Aladin Desktop](https://aladin.u-strasbg.fr/) sky atlas in Java (also supports MOC operations)\r\n* the [Aladin Lite](https://aladin.u-strasbg.fr/AladinLite/), \"a lightweight version of the Aladin Sky Atlas running in the browser\".\r\n* [MOCPy](https://cds-astro.github.io/mocpy/), a python wrapper using the very same Rust MOC library.\r\n\r\n## Install\r\n\r\n### From pypi for python users\r\n\r\nMOC cli is available in [pypi](https://pypi.org/project/moc-cli), \r\nyou can thus install the `moc` executable using `pip`:\r\n```bash\r\npip install -U moc-cli\r\nmoc --help\r\n```\r\n\r\n### Debian package\r\n\r\nDownload the last `moc-cli_vxx_yyy.deb` corresponding to your architecture \r\n(`x86_64_musl` has the most chances to fit your needs)\r\nfrom the [github release page](https://github.com/cds-astro/cds-moc-rust/releases).\r\n\r\nInstall the `.deb` by clicking on it or using the command line:\r\n```bash\r\nsudo dpkg -i moc-cli_vxx_yyy.deb\r\nsudo apt-get install -f\r\n```\r\n\r\nThen you can use the tool:\r\n```bash\r\nmoc-cli\r\nman moc-cli\r\n```\r\n\r\nYou can uninstall using, e.g.:\r\n```bash\r\nsudo dpkg -r $(dpkg -f moc-cli_vxx_yyy.deb Package)\r\n```\r\n\r\nWARNING: using this method, the command line name is `moc-cli` instead of `moc` due to a conflict with an existing debian `moc` package.\r\n\r\n\r\n### Pre-compile binaries for MacOS, Linux and Windows\r\n\r\nDownload the last `moc-vxx_yyy.tar.gz` corresponding to your architecture \r\nfrom the [github release page](https://github.com/cds-astro/cds-moc-rust/releases).\r\nYou probably want ot use:\r\n* Linux: `moc-vxx-x86_64-unknown-linux-musl.tar.gz`\r\n* MacOS: `moc-vxx-x86_64-apple-darwin.tar.gz`\r\n* Windows: `moc-vxx-.zip`\r\n\r\nWARNING: for linux, use [`musl`](https://en.wikipedia.org/wiki/Musl) instead of `gnu` (high chances of uncompatibility in the latter case)\r\n\r\nThe tar contains a single executable binary file.\r\n```bash\r\ntar xzvf moc-vxx-yyy.tar.gz\r\n./moc\r\n```\r\n\r\n### Compile from source code\r\n\r\n[Install rust](https://www.rust-lang.org/tools/install)\r\n(and check that `~/.cargo/bin/` is in your path),\r\nor update the Rust compiler with:\r\n```bash\r\nrustup update\r\n``` \r\n\r\nClone the [moc lib rust](https://github.com/cds-astro/cds-moc-rust) project:\r\n```bash\r\ngit clone https://github.com/cds-astro/cds-moc-rust\r\n```\r\nInstall from using `cargo`:\r\n```bash\r\ncargo install --path crates/cli\r\n```\r\n(due to a heavy use of [monomorphization](https://en.wikipedia.org/wiki/Monomorphization),\r\nthe compilation time may be very long, i.e. more than a minute).\r\n\r\n\r\n## Command line help\r\n\r\nOnce installed, you can get help messages using `moc [SUBCOMMAND [SUBSUBCOMMAND [...]]] --help`. \r\n\r\nA the root level `moc --help`:\r\n```bash\r\nCreate, manipulate and filter files using HEALPix Multi-Order Coverage maps (MOCs).\r\n\r\nUSAGE:\r\n    moc <SUBCOMMAND>\r\n\r\n[...]\r\n\r\nSUBCOMMANDS:\r\n    convert    Converts an input format to the (most recent versions of) an output format\r\n    filter     Filter file rows using a MOC\r\n    from       Create a MOC from given parameters\r\n    help       Prints this message or the help of the given subcommand(s)\r\n    info       Prints information on the given MOC\r\n    op         Perform operations on MOCs\r\n    table      Prints MOC constants\r\n```\r\n\r\n`moc from --help`:\r\n```bash\r\nUSAGE:\r\n    moc from <SUBCOMMAND>\r\n\r\n[...]\r\n\r\nSUBCOMMANDS:\r\n    box             Create a Spatial MOC from the given box\r\n    cone            Create a Spatial MOC from the given cone\r\n    cones           Create a Spatial MOC from a list of cones with centers and radius in decimal degrees (one pair\r\n                    per line, format: longitude_deg,latitude_deg,radius_deg)\r\n    ellipse         Create a Spatial MOC from the given elliptical cone\r\n    help            Prints this message or the help of the given subcommand(s)\r\n    multi           Create a Spatial MOC from regions in a CSV input. One region per input line. Format: *\r\n                    cone,center_lon_deg,center_lat_deg,radius_deg *\r\n                    ellipse,center_lon_deg,center_lat_deg,semi_maj_axis_deg,semi_min_axis_deg,position_angle_deg *\r\n                    ring,center_lon_deg,center_lat_deg,internal_radius_deg,external_radius_deg *\r\n                    box,center_lon_deg,center_lat_deg,semi_maj_axis_deg,semi_min_axis_deg,position_angle_deg *\r\n                    zone,lon_min_deg,lat_min_deg,lon_max_deg,lat_max_deg *\r\n                    polygon(,complement),vertex_lon_deg_1,vertex_lat_deg_1,vertex_lon_deg_2,vertex_lat_deg_2,...,vertex_lon_deg_n,vertex_lat_deg_n\r\n    polygon         Create a Spatial MOC from the given polygon\r\n    pos             Create a Spatial MOC from a list of positions in decimal degrees (one pair per line, longitude\r\n                    first, then latitude)\r\n    ring            Create a Spatial MOC from the given ring\r\n    timerange       Create a Time MOC from a list of time range (one range per line, lower bound first, then upper\r\n                    bound)\r\n    timerangepos    Create a Space-Time MOC from a list of time range and positions in decimal degrees (tmin first,\r\n                    then tmax, then longitude, and latitude)..\r\n    timestamp       Create a Time MOC from a list of timestamp (one per line)\r\n    timestamppos    Create a Space-Time MOC from a list of timestamp and positions in decimal degrees (timestamp\r\n                    first, then longitude, then latitude)..\r\n    vcells          Multi-order map input file format\r\n    zone            Create a Spatial MOC from the given zone\r\n```\r\n\r\n`moc op --help`:\r\n```bash\r\nUSAGE:\r\n    moc op <SUBCOMMAND>\r\n\r\n[...]\r\n\r\nSUBCOMMANDS:\r\n    complement    Performs a logical 'NOT' on the input MOC (= MOC complement)\r\n    contract      Remove an the internal border made of cells having the MOC depth, SMOC only\r\n    degrade       Degrade the input MOC (= MOC complement)\r\n    diff          Performs a logical 'XOR' between 2 MOCs (= MOC difference)\r\n    extborder     Returns the MOC external border (made of cell of depth the MOC depth), SMOC only\r\n    extend        Add an extra border of cells having the MOC depth, SMOC only\r\n    help          Prints this message or the help of the given subcommand(s)\r\n    intborder     Returns the MOC internal border (made of cell of depth the MOC depth), SMOC only\r\n    inter         Performs a logical 'AND' between 2 MOCs (= MOC intersection)\r\n    minus         Performs the logical operation 'AND(left, NOT(right))' between 2 MOCs (= left minus right)\r\n    sfold         Returns the union of the T-MOCs associated to S-MOCs intersecting the given S-MOC. Left: S-MOC,\r\n                  right: ST-MOC, res: T-MOC\r\n    split         Split the disjoint parts of the MOC into distinct MOCs, SMOC only. WARNING: this may create a lot\r\n                  of files, use first option `--count`\r\n    tfold         Returns the union of the S-MOCs associated to T-MOCs intersecting the given T-MOC. Left: T-MOC,\r\n                  right: ST-MOC, res: S-MOC\r\n    union         Performs a logical 'OR' between 2 MOCs (= MOC union)\r\n```\r\n\r\nand so on (e.g `moc op degrade --help`).\r\n\r\n## Examples\r\n\r\n```bash\r\nmoc table space\r\nmoc info resources/V_147_sdss12.moc.fits\r\nmoc info resources/CDS-I-125A-catalog_MOC.fits\r\nmoc op inter resources/V_147_sdss12.moc.fits resources/CDS-I-125A-catalog_MOC.fits fits my_res.fits\r\nmoc info my_res.fits\r\n\r\nmoc from cone 11 0.0 +0.0 0.1 ascii --fold 50 my_cone.ascii\r\nmoc convert -t smoc my_cone.ascii fits -f my_cone.fits\r\nmoc from ring 10 13.158329 -72.80028  5.64323 10.0 ascii --fold 80\r\n\r\n## Frequency MOCs\r\necho \"0/0 8/\" | moc hprint --type fmoc --format ascii -\r\necho \"0/0-1 8/\" | moc convert --type smoc --format ascii - fits moc.d8.allfreq.fits\r\nmoc info moc.d8.allfreq.fits\r\nmoc hprint moc.d8.allfreq.fits\r\n\r\nfor f in {0..63}; do echo \"5/$f\" | moc hprint --type fmoc --format ascii - --no-header; done\r\nfor f in {0..511}; do echo \"8/$f\" | moc hprint --type fmoc --format ascii - --no-header; done\r\nfor f in {0..1023}; do echo \"9/$f\" | moc hprint --type fmoc --format ascii - --no-header; done\r\n\r\nfor f in {0..8191}; do echo \"12/$f\" | moc hprint --type fmoc --format ascii - --no-header; done\r\nfor f in {0..65536}; do echo \"15/$f\" | moc hprint --type fmoc --format ascii - --no-header; done\r\n\r\necho \"0.125\r\n0.2569\r\n0.1478\r\n0.9985\r\n1.5983\r\n20.256\r\n3500\" | \\\r\nmoc from freqval 9 - ascii | \\\r\nmoc hprint --type fmoc --format ascii -\r\n\r\n```\r\n\r\nBuilding a MOC from the [Hipparcos](https://vizier.u-strasbg.fr/viz-bin/VizieR-3?-source=I/239/hip_main&-out.max=50&-out.form=HTML%20Table&-out.add=_r&-out.add=_RAJ,_DEJ&-sort=_r&-oc.form=sexa)\r\npositions:\r\n```bash\r\negrep \"^ *[0-9]\" hip.psv | cut -d '|' -f 2-3 | tr -d ' ' | moc from pos 5 - --separator '|' ascii\r\n```\r\n\r\n### Build a MOC from XMM observation list\r\n\r\nBuild a raw MOC from the list of XMM observations, considering a radius of 17 arcmin around\r\neach observation center.\r\nThe `xmmdr11_obs_center.17arcmin.csv` file contains 12210 `RA_CENTER,DEC_CENTER,17arcmin` rows.\r\n\r\nExcerpt of the `xmmdr11_obs_center.17arcmin.csv` file:\r\n```\r\n> head -10 xmmdr11_obs_center.17arcmin.csv\r\n64.89763,56.02272,0.283333333\r\n263.65793,-32.556,0.283333333\r\n99.36542,6.1115,0.283333333\r\n193.49612,10.215167,0.283333333\r\n58.45729,23.414083,0.283333333\r\n187.05229,-15.758583,0.283333333\r\n167.09784,-77.61408,0.283333333\r\n196.76967,-23.647583,0.283333333\r\n121.03321,5.086472,0.283333333\r\n17.898624,-38.09336,0.283333333\r\n...\r\n```\r\n\r\nCreate the MOC\r\n\r\n```bash\r\n> time moc from cones -s , 12 ../../resources/xmmdr11_obs_center.17arcmin.csv fits --force-u64 xmm.moc.fits\r\n\r\nreal\t0m2,852s\r\nuser\t0m2,812s\r\nsys\t0m0,028s\r\n\r\n> moc info xmm.moc.fits\r\nMOC type: SPACE\r\nMOC index type: u64\r\nMOC depth: 12\r\nMOC coverage:   3.962597748 %\r\n\r\n# Count the number of disjoint regions from the 12210 FOVs\r\n> time moc op split --count /home/pineau/Eclipse/ARCHES/scriptsNoSync/xmm.moc.fits ascii\r\n4414\r\n\r\nreal\t0m2,617s\r\nuser\t0m2,604s\r\nsys\t0m0,005s\r\n```\r\n\r\n![XMM MOC allsky](img/xmmmoc.png)\r\n![XMM MOC zoomed](img/xmmmoc_zoom.png)\r\n\r\n### Build a MOC from a multi-region file\r\n\r\nBuild a raw MOC from a list of polygon.\r\nThe `polygon_list.txt` file contains 1787 `POLYGON lon1_deg lat1_deg lon2_deg lat2_deg lon3_deg lat3_deg lon4_deg lat4_deg` rows.\r\n\r\nExcerpt of the `polygon_list.txt` file:\r\n```\r\n> head -10 polygon_list.txt\r\nPOLYGON 132.27592361897194 -85.50776984199415 227.28213604169053 -85.52848858549962 317.3696636049649 -85.13473097310337 42.70728242909465 -85.11295896964907\r\nPOLYGON 60.13229923319004 -86.16765734057081 300.83194062732554 -86.17690658712614 339.2709854792048 -80.83619292300155 21.676880345899917 -80.83215524499103\r\nPOLYGON 95.08276649945338 -86.21643167152601 335.2202213021057 -86.150123609087 13.974112489662907 -80.8408533466873 56.47368697052322 -80.86811225215042\r\nPOLYGON 131.43710822387513 -86.39620351676153 8.178879432043509 -86.09619481394972 48.49769627242518 -80.91228518381683 91.58845924785103 -81.03726056953703\r\nPOLYGON 169.54242332201397 -86.41549363302556 41.96380368178154 -86.22055148573337 83.93923381023212 -81.07936822440465 127.76955702379145 -81.16012444797337\r\nPOLYGON 209.38441456079454 -86.4385049405928 76.79919106658016 -86.34575852902184 120.7627522443793 -81.26318262561986 165.44708425571173 -81.30186091232301\r\nPOLYGON 247.79227731086206 -86.41524470836133 113.93143603491714 -86.4038508557833 158.42057918850884 -81.32131955955516 203.32586412458323 -81.32529595069136\r\nPOLYGON 284.61617428938314 -86.30625319728074 151.35533186836295 -86.4968774518728 195.56600175472337 -81.34533854250965 240.3724573793694 -81.26497727688265\r\nPOLYGON 319.9366584543485 -86.20323016702716 191.02944591530553 -86.47600995359106 233.34166080086834 -81.22312388507225 277.40115124704073 -81.10906373841831\r\nPOLYGON 352.72112816815314 -86.11070694641083 229.39278681105083 -86.38518393742109 269.2801464003224 -81.03542860454485 312.382448010481 -80.92171074918758\r\n...\r\n```\r\ntime moc from multi 12 ../../resources/polygon_list.txt fits --force-u64 test.moc.fits\r\n\r\n```bash\r\n> time moc from multi 12 resources/polygon_list.txt fits --force-u64 test.moc.fits\r\n\r\nreal\t0m5,891s\r\nuser\t0m5,852s\r\nsys\t0m0,008s\r\n\r\n> moc info test.moc.fits\r\nMOC type: SPACE\r\nMOC index type: u64\r\nMOC depth: 12\r\nMOC coverage:  99.697673817 %\r\n```\r\n\r\n![Multi polygon (DSS plates)](img/multipolymoc.png)\r\n\r\nIn the example, all regions are polygons, but it is also possible to mix regions in a single file usong the syntax:\r\n```txt\r\nCONE lon_deg lat_deg radius_deg\r\nELLIPSE lon_deg lat_deg a_deg b_deg pa_deg\r\nRING lon_deg lat_deg internal_radius_deg external_radius_deg\r\nBOX lon_deg lat_deg a_deg b_deg pa_deg\r\nZONE lon_min_deg lat_min_deg lon_max_deg lat_max_deg\r\nPOLYGON lon1_deg lat1_deg lon2_deg lat2_deg ... lonn_deg latn_deg\r\nPOLYGON complement lon1_deg lat1_deg lon2_deg lat2_deg ... lonn_deg latn_deg\r\n```\r\n\r\n## Performances hint\r\n\r\n### Build MOC from positions\r\n\r\nOn a regular desktop, it takes **3.7s** to build the MOC at **order 7** of the **16,622,442** positions of the\r\n[KIDS DR2](https://vizier.u-strasbg.fr/viz-bin/VizieR-3?-source=II/344&-out.max=50&-out.form=HTML%20Table&-out.add=_r&-out.add=_RAJ,_DEJ&-sort=_r&-oc.form=sexa)\r\ntable:\r\n```bash\r\ntime moc from pos 7 kids_dr2.csv -s , ascii --fold 80 > kids_dr2.moc.ascii\r\n> 3.7s on 16_622_442 position in a file of 552 MB\r\n```\r\n\r\n### Filter file using a MOC\r\n\r\nOn a classical HDD (~130 MB/s), the disk is the limiting factor when filtering a file.\r\nTests performed on a 25 GB file containing 16_622_443 rows (KIDS DR2):\r\n\r\n|              |       HDD        |       SSD       |\r\n|--------------|------------------|-----------------|\r\n| `wc -l`      | 3m21s = 127 MB/s | 19s = 1347 MB/s |\r\n| `moc filter` | 3m21s = 127 MB/s | 31s =  825 MB/s |\r\n\r\nWe get the same results with or without multithreading.  \r\n\r\nNow we select only 3 fields. We get a ~1 GB (961 MB) file.\r\nSince the results are the same for HDD and SSD, we deduce that the full file is in the disk cache:\r\n\r\n|                 |       HDD        |       SSD       |\r\n|-----------------|------------------|-----------------|\r\n| `wc -l`         | 0.3s = 3200 MB/s | 0.3s = 3200 MB/s |\r\n| `moc filter`    | 4s   =  240 MB/s | 4s   =  240 MB/s |\r\n| `moc filter 4T` | 2s   =  480 MB/s | 2s   =  480 MB/s |\r\n\r\nCommands used:\r\n```bash\r\ntime moc filter position SMOC_GLIMPSE_u32.fits kids_dr2.csv --has-header --lon RAJ2000 --lat DECJ2000 > /dev/null\r\ntime moc filter position SMOC_GLIMPSE_u32.fits kids_dr2.csv --has-header --lon RAJ2000 --lat DECJ2000 --n-threads 4 > /dev/null\r\n```\r\n(no rows in output)\r\n\r\n\r\n## To-do list\r\n\r\n* [ ] Remove `structop` and replace by `clap v3`\r\n* [ ] MOC from cells (simpler than MOC from pos)\r\n* [ ] MOC from vcells with a simple constraint? \r\n* [ ] Contact [gnuastro](https://www.gnu.org/software/gnuastro) ?\r\n* [ ] Add filter on ST-MOCs\r\n* [ ] Add ST-MOC 'intersection' and 'folds' in streaming mode (for a low memory footprint)\r\n* [ ] Add an option `overlapping (default), fully inside, partially inside, center inside` \r\n      for cone, polygon, ...\r\n* [ ] Support valued MOCs (<=> Multi-Order Maps)?\r\n\r\n\r\n## License\r\n\r\nLike most projects in Rust, this project is licensed under either of\r\n\r\n* Apache License, Version 2.0, ([LICENSE-APACHE](LICENSE-APACHE) or\r\n  http://www.apache.org/licenses/LICENSE-2.0)\r\n* MIT license ([LICENSE-MIT](LICENSE-MIT) or\r\n  http://opensource.org/licenses/MIT)\r\n\r\nat your option.\r\n\r\n\r\n## Contribution\r\n\r\nUnless you explicitly state otherwise, any contribution intentionally submitted\r\nfor inclusion in this project by you, as defined in the Apache-2.0 license,\r\nshall be dual licensed as above, without any additional terms or conditions.\r\n\r\n\r\n## Acknowledgements\r\n\r\nThis work has been supported by the ESCAPE project.  \r\nESCAPE - The **E**uropean **S**cience **C**luster of **A**stronomy & **P**article Physics **E**SFRI Research Infrastructures -\r\nhas received funding from the **European Union\u2019s Horizon 2020** research and innovation programme under **Grant Agreement no. 824064**.\r\n\r\n\n",
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
            "keywords": "healpix,moc",
            "license": "MIT OR Apache-2.0",
            "maintainer": null,
            "maintainer_email": null,
            "name": "moc-cli",
            "package_url": "https://pypi.org/project/moc-cli/",
            "platform": null,
            "project_url": "https://pypi.org/project/moc-cli/",
            "project_urls": {
                "Homepage": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli",
                "repository": "https://github.com/cds-astro/cds-moc-rust/tree/main/crates/cli"
            },
            "release_url": "https://pypi.org/project/moc-cli/0.5.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Command-line to create and manipulate HEALPix Multi-Order Coverages maps (MOCs)",
            "version": "0.5.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15724911,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "c0b86d7e3114afde0527bac7358d363a",
                    "sha256": "1ab77f54abecbfbf852906b12d0c9bbde3243e2928befd1b1037c754d4d634a3"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.3-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
                "has_sig": false,
                "md5_digest": "c0b86d7e3114afde0527bac7358d363a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10429465,
                "upload_time": "2022-11-10T11:18:13",
                "upload_time_iso_8601": "2022-11-10T11:18:13.497071Z",
                "url": "https://files.pythonhosted.org/packages/fd/9b/2855e052ff76669075fba67ca48b9f7a26b4dfa4da3abfe3195e1b6d906f/moc_cli-0.5.3-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "8edb4e299537698df408629877c32274",
                    "sha256": "e2b5a723ba2c6f4ef1aaaca449215268ffaa77dd664c2aac6a988e40cb0b377f"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.3-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "8edb4e299537698df408629877c32274",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5845347,
                "upload_time": "2022-11-10T14:19:36",
                "upload_time_iso_8601": "2022-11-10T14:19:36.243046Z",
                "url": "https://files.pythonhosted.org/packages/fe/c2/a527ac1b6f03e469db13ee9c571cefcfdfe1b27fa7445e2b9dbe6b762265/moc_cli-0.5.3-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "0a246e06a047a2d9ee8800804a11d196",
                    "sha256": "0d3ae763060f77d244dd4040f4c9544c6ab2714ebd0f211bcba7b786d53e0ccc"
                },
                "downloads": -1,
                "filename": "moc_cli-0.5.3-py3-none-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "0a246e06a047a2d9ee8800804a11d196",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5780482,
                "upload_time": "2022-11-10T10:50:51",
                "upload_time_iso_8601": "2022-11-10T10:50:51.868984Z",
                "url": "https://files.pythonhosted.org/packages/ca/b1/f21a89e3dd6d692e293afc4ea65076e9298be6bf319d9eac02028be37d24/moc_cli-0.5.3-py3-none-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}