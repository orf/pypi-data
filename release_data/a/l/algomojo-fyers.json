{
    "0.1": {
        "info": {
            "author": "Algomojo",
            "author_email": "support@algomojo.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 3"
            ],
            "description": "\r\nMetadata-Version: 2.1\r\n\r\nName: algomojo-fyers\r\n\r\nVersion: 0.1\r\n\r\nSummary: A functional python wrapper for  trading api\r\n\r\nHome-page: \r\n\r\nAuthor: Algomojo\r\n\r\nAuthor-email: support@algomojo.com\r\n\r\nLicense: MIT\r\n\r\nDescription: \r\n        ## ABOUT\r\n        A functional python wrapper for firststock trading api.\r\n        It is a python library for the [Algomojo Free API + Free Algo Trading Platform ](https://algomojo.com/). \r\n        It allows rapid trading algo development easily, with support for both REST-API interfaces. \r\n        Execute Orders in Reatime, Modify/Cancel Orders, Retrieve Orderbook, Tradebook, Open Positions, Squareoff Positions and much more functionalities. \r\n        For more details of each API behavior, Pease see the Algomojo API documentation.\r\n        \r\n        \r\n        ## License\r\n        \r\n         Licensed under the MIT License.\r\n\r\n        \r\n        ## Documentation\r\n        [Algomojo Rest API documentation ](https://algomojo.com/docs/python)\r\n        \r\n        \r\n        \r\n        \r\n        ## Installation\r\n        Install from PyPI\r\n        \r\n        \tpip install algomojo-fyers\r\n        \r\n        Alternatively, install from source. Execute setup.py from the root directory.\r\n        python setup.py install\r\n        \r\n        Always use the newest version while the project is still in alpha!\r\n        \r\n        \r\n        ## Usage Examples\r\n        In order to call Algomojo trade API, you need to sign up for an trading account with one of the partner broker and obtain API key pairs and enjoy unlimited access to the API based trading.\r\n         Replace api_key and api_secret_key with what you get from the web console.\r\n        \r\n        \r\n        \r\n        \r\n        ## Getting Started\r\n        \r\n        After downloading package import the package and create the object with api credentials\r\n        \r\n        \r\n        \tfrom algomojo import fyers\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ## Creating  Object\r\n        \r\n        For creating an object there are 3 arguments which would be passed\r\n        \r\n                 api_key : str\r\n                     User Api key (logon to algomojo account to find api credentials)\r\n                 api_secret : str\r\n                     User Api secret (logon to algomojo account to find api credentials)\r\n                 Broker : str\r\n                     This takes broker it generally consists 2 letters , EX: fyers--> fy,\r\n        \r\n        Sample:\r\n        \t\r\n        \tat=api(api_key=\"20323f062bb71ca6fbb178b4df8ac5z6\",\r\n        \t\t    api_secret=\"686786a302d7364d81badc233f1d22e3\",\r\n        \t\t    broker=\"fy\")\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ## Using Object Methods\r\n        obj.method(mandatory_parameters)  or obj.method(madatory_parameters+required_parameters)\r\n        \r\n        \r\n        # Avaliable Methods\r\n        \t\r\n        ### 1. place_order:  \r\n        \r\n        \t\tFunction with mandatory parmeters: \r\n        \t\t\t\tplace_order(ticker,qty,ordertype,action,product)\r\n        \t\t\r\n        \t\tFunction with all parametrs:       \r\n        \t\t\t\tplace_order(self,ticker,qty,ordertype,action,product,limit,stop,dscqty,stoploss,takeprofit)\r\n                 \t \r\n                        Sample :        \r\n        \t\t\t\tat.place_order(ticker=\"NSE:RELIANCE-EQ\",qty=\"1\",ordertype=\"2\",acti0n=\"1\",product=\"INTRADAY\")\r\n        \r\n        ### 2.place_multi_order(order_list)\r\n\r\n\t    Sample order_list: \r\n\t\t[ \r\n                {\r\n                \"order_refno\":\"1\",\r\n                \"user_apikey\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n                \"api_secret\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n                \"strg_name\": \"Test Strategy\",\r\n                \"ticker\":\"NSE:RELIANCE-EQ\",\r\n                \"qty\":\"1\",\r\n                \"ordertype\":\"2\",\r\n                \"action\":\"1\",\r\n                \"product\":\"INTRADAY\",\r\n                \"limitprice\":0,\r\n                \"stopprice\": 0,\r\n                \"validity\": \"DAY\",\r\n                \"dscqty\": 0,\r\n                \"offlineOrder\": \"False\",\r\n                \"stoploss\": 0,\r\n                \"takeprofit\": 0\r\n                },\r\n                {\r\n                \"order_refno\":\"2\",\r\n                \"strg_name\": \"Test Strategy\",\r\n                \"user_apikey\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n                \"api_secret\":\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n                \"ticker\":\"NSE:SBIN-EQ\",\r\n                \"qty\":\"1\",\r\n                \"ordertype\":\"2\",\r\n                \"action\":\"1\",\r\n                \"product\":\"INTRADAY\",\r\n                \"limitprice\":0,\r\n                \"stopprice\": 0,\r\n                \"validity\": \"DAY\",\r\n                \"dscqty\": 0,\r\n                \"offlineOrder\": \"False\",\r\n                \"stoploss\": 0,\r\n                \"takeprofit\": 0\r\n                }\r\n            ]\r\n\tSample function call:  \r\n\t\tat.place_multi_order(order_list)\r\n        \r\n       \r\n        \r\n        \t\t\r\n        ### 3. modify_order:\r\n        \r\n        \t\tFuntion with mandatory parameters:  \r\n        \t\t\t     \tmodify_order(orderno,qty)\r\n        \t\t\r\n        \t\tFunction with all parameters:\r\n        \t\t \t    modify_order(orderno,ordertype,action,qty,limit):\r\n        \t\t\r\n        \t\tSample for tradejini: `\t\t   \r\n        \t\t\t\tat.modify_order(orderno=\"1457896512\",\r\n\t\t\t\t\t\t        qty=\"70\",prc=\"600\")\r\n        \t\t\r\n        \t\t\r\n        \t\t\r\n        \r\n        \r\n        \r\n        ### 4. cancel_order\r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\tcancel_order(orderno)\r\n        \r\n        \t\tFunction with all parameters:          \r\n        \t\t\r\n        \t\t\t\tcancel_order(orderno)\r\n        \r\n        \t\tSample:             \r\n        \t\t\t\tat.cancel_order(orderno=\"4567891523\")\r\n\r\n        \r\n        \t\t\r\n        \r\n        ### 5. profile:\r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tprofile()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tprofile()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tprofile()\r\n        \t\t\t\t\t             \r\n        \r\n        ### 6. funds\r\n        \r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tfunds()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tfunds()\r\n        \t\t\t\t\t\r\n        \t        Sample:                              \r\n        \t\t\t\t\tat.funds()\r\n        \t\t                                    \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ### 7. holdings: \r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tholdings()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:       \r\n        \t\t\t\t\tholdings()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.holdings()\r\n        \r\n        \r\n        \r\n        ### 8. orderbook\r\n        \r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\t\torderbook()\r\n        \t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\torderbook()\r\n        \t\t\t\t\t\r\n        \t\tSample:                             \r\n        \t\t\t\t\tat.orderbook()\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        ### 9. tradebook\r\n        \r\n        \r\n        \t\tFuntion with mandatory parameters:   \r\n        \t\t\t\t\ttradebook()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\ttradebook()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.tradebook()\r\n        \r\n        \r\n        \r\n        \r\n        ### 10. positions\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tpositions()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tpositions()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.positions()\r\n        \r\n                    \r\n        \t\t\t\t\t\r\n        \r\n        \t\t\r\n        \t\t\r\n        \t\t\r\n        \r\n        \r\n        \r\n        \r\n        ### 11.SquareOffPosition\r\n\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tSquareOffPosition()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tSquareOffPosition()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.SquareOffPosition()\r\n        \r\n        \r\n        \r\n         ### 12.SquareOffAllPositions\r\n\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tSquareOffAllPositions()\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tSquareOffAllPositions()\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.SquareOffAllPositions()\r\n        \r\n        \r\n        ### 13.partial_position_conversion\r\n\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\t partial_position_conversion(ticker,positionside,convertyqty,fromm,to)\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\t partial_position_conversion(ticker,positionside,convertyqty,fromm,to)\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.partial_position_conversion(symbol=\"MCX:SILVERMIC20NOVFUT\",\r\n                                                                               positionSide=1,\r\n                                                                               convertQty=1,\r\n                                                                               convertFrom=\"INTRADAY\",\r\n                                                                               convertTo=\"CNC\")\r\n\r\n        \r\n        \r\n         ### 14.fetchtoken\r\n\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tfetchtoken(token)\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tfetchtoken(token)\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.fetchtoken(token=\"RELIANCE-EQ\")\r\n\r\n   \r\n         ### 15.get_quote\r\n\r\n                \r\n             \tFuntion with mandatory parameters:   \r\n        \t\t\t\t\tget_quote(symbol)\r\n        \t\t\t\t\t\r\n        \t\tFunction with all parameters:        \r\n        \t\t\t\t\tget_quote(symbol)\r\n        \t\t\t\t\t\r\n        \t\tSample:                              \r\n        \t\t\t\t\tat.get_quote(symbol=\"NSE:RELIANCE-EQ\")\r\n\r\n\r\n\r\n\r\n\r\n       \r\n    \r\n         \r\n        \r\n        \r\n        \r\n        \r\n        \r\nPlatform: UNKNOWN\r\nClassifier: License :: OSI Approved :: MIT License\r\nClassifier: Programming Language :: Python\r\nClassifier: Programming Language :: Python :: 2\r\nClassifier: Programming Language :: Python :: 3\r\nDescription-Content-Type: text/markdown\r\n\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://algomojo.com/docs/python",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "algomojo-fyers",
            "package_url": "https://pypi.org/project/algomojo-fyers/",
            "platform": null,
            "project_url": "https://pypi.org/project/algomojo-fyers/",
            "project_urls": {
                "Homepage": "https://algomojo.com/docs/python"
            },
            "release_url": "https://pypi.org/project/algomojo-fyers/0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A functional python wrapper for algomojo trading api",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13564359,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e602acd5997359c33d644c9c5a83e60e",
                    "sha256": "e945b5647c70f73fd1bd343997ffabe12d1b3ed777f590eaf93f390376e9436d"
                },
                "downloads": -1,
                "filename": "algomojo-fyers-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "e602acd5997359c33d644c9c5a83e60e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4968,
                "upload_time": "2022-04-20T05:38:32",
                "upload_time_iso_8601": "2022-04-20T05:38:32.589880Z",
                "url": "https://files.pythonhosted.org/packages/67/00/e0d1d3886790d4416c004567c6fa85759a51d6e90434895be779ab9befb5/algomojo-fyers-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}