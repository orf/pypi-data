{
    "0.1.0": {
        "info": {
            "author": "LinkerVision",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description": "# Dataverse SDK For Python\nDataverse is a MLOPs platform for assisting in data selection, data visualization and model training in comupter vision.\nUse Dataverse-SDK for Python to help you to interact with the Dataverse platform by Python. Currently, the library supports:\n  - Create Project with your input ontology and sensors\n  - Get Project by project-id\n  - Create Dataset from your AWS/Azure storage or local\n  - Get Dataset by dataset-id\n\n[Package (PyPi)](https://test.pypi.org/project/dataverse-sdk/)    |   [Source code](https://github.com/linkernetworks/dataverse-sdk)\n\n\n## Getting started\n\n### Install the package\n\n```\npip install dataverse-sdk\n```\n\n**Prerequisites**: You must have an Dataverse Platform Account and [Python 3.9+](https://www.python.org/downloads/) to use this package.\n\n### Create the client\n\nInteraction with the Dataverse site starts with an instance of the `DataverseClient` class. You need an email-account and its password to instantiate the client object.\n\n```Python\nfrom dataverse_sdk import *\nfrom dataverse_sdk.connections import get_connection\nclient = DataverseClient(\n    host=DataverseHost.STAGING, email=\"XXX\", password=\"***\"\n)\nassert client is get_connection()\n```\n\n## Key concepts\n\nOnce you've initialized a DataverseClient, you can interact with Dataverse from the initialized object.\n\n## Examples\n\nThe following sections provide examples for the most common DataVerse tasksm including:\n\n* [Create Project](#create-project)\n* [Get Project](#get-project)\n* [Create Dataset](#create-dataset)\n* [Get Dataset](#get-dataset)\n\n\n### Create Project\n\nThe `create_project` method will create project on the connected site with the defined ontology and sensors.\n\n```Python\nontology = Ontology(\n    name=\"test ot\",\n    image_type=OntologyImageType._2D_BOUNDING_BOX,\n    classes=[\n        OntologyClass(name=\"Pedestrian\", rank=1, color=\"#234567\"),\n        OntologyClass(name=\"Truck\", rank=2, color=\"#345678\"),\n        OntologyClass(name=\"Car\", rank=3, color=\"#456789\"),\n        OntologyClass(name=\"Cyclist\", rank=4, color=\"#567890\"),\n        OntologyClass(name=\"DontCare\", rank=5, color=\"#6789AB\"),\n        OntologyClass(name=\"Misc\", rank=6, color=\"#789AB1\"),\n        OntologyClass(name=\"Van\", rank=7, color=\"#89AB12\"),\n        OntologyClass(name=\"Tram\", rank=8, color=\"#9AB123\"),\n        OntologyClass(name=\"Person_sitting\", rank=9, color=\"#AB1234\"),\n    ],\n)\nsensors = [\n    Sensor(name=\"camera 1\", type=SensorType.CAMERA),\n    Sensor(name=\"lidar 1\", type=SensorType.LIDAR),\n]\nproject = client.create_project(name=\"test project\", ontology=ontology, sensors=sensors)\n```\n\n### Get Project\n\nThe `get_proejct` method retrieves the project from the connected site. The `id` parameter is the unique interger ID of the project, not its \"name\" property.\n\n```Python\nproject = client.get_project(id)\n```\n\n### Create Dataset\n\n* Use `create_dataset` to create dataset from **cloud storage**\n\n```Python\ndataset_data = {\n    \"data_source\": DataSource.Azure/Datasource.AWS,\n    \"storage_url\": \"storage/url\",\n    \"container_name\": \"azure container name\",\n    \"data_folder\": \"datafolder/to/vai_anno\",\n    \"sas_token\": \"azure sas token\",\n    \"name\": \"Dataset 1\",\n    \"type\": DatasetType.ANNOTATED_DATA,\n    \"generate_metadata\": False,\n    \"render_pcd\": False,\n    \"annotation_format\": AnnotationFormat.VISION_AI,\n    \"sequential\": False,\n    \"sensors\": project.sensors,\n}\ndataset = project.create_dataset(**dataset_data)\n```\n\n* Use `create_dataset` to create dataset from **your local directory**\n\n```Python\ndataset_data = {\n    \"data_source\": DataSource.SDK,\n    \"storage_url\" : \"\",\n    \"container_name\": \"\",\n    \"sas_token\":\"\",\n    \"data_folder\": \"/path/to/your_localdir\",\n    \"name\": \"Dataset Local Upload\",\n    \"type\": DatasetType.ANNOTATED_DATA,\n    \"generate_metadata\": False,\n    \"render_pcd\": False,\n    \"annotation_format\": AnnotationFormat.VISION_AI,\n    \"sequential\": False,\n    \"sensors\": project.sensors,\n    \"extra_annotations\" :['model_name']  #optional\n}\ndataset = project.create_dataset(**dataset_data)\n```\n\n## Get Dataset\n\nThe `get_dataset` method retrieves the dataset info from the connected site. The `id` parameter is the unique interger ID of the dataset, not its \"name\" property.\n\n```Python\ndataset = client.get_dataset(id)\n```\n\n\n## Troubleshooting\n\n\n## Next steps\n\n\n## Contributing\n\n\n\n## Links to language repos\n\n[Python Readme](https://github.com/linkernetworks/dataverse-sdk/tree/develop/python/README.md)\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dataverse-sdk",
            "package_url": "https://pypi.org/project/dataverse-sdk/",
            "platform": null,
            "project_url": "https://pypi.org/project/dataverse-sdk/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/dataverse-sdk/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.9, <4",
            "summary": "Dataverse SDK For Python",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15939191,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "489c023e4fa63c9aa62b9aec077ba513",
                    "sha256": "bfd474df7c68453496e6da84d8e8ca296bacf0e946047fcdfded20488998cfb4"
                },
                "downloads": -1,
                "filename": "dataverse_sdk-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "489c023e4fa63c9aa62b9aec077ba513",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9, <4",
                "size": 14380,
                "upload_time": "2022-11-30T08:21:26",
                "upload_time_iso_8601": "2022-11-30T08:21:26.296445Z",
                "url": "https://files.pythonhosted.org/packages/62/e8/e4a2028f50544a637e24480edc83cd875ebce3ebe91f79bbaaf95ee14263/dataverse_sdk-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "73d3e5fbbcae9f4b4b208700b78338bf",
                    "sha256": "562a9853b178ba631445e57973cde1f7118fba256236c37e68ecdf3939944bbf"
                },
                "downloads": -1,
                "filename": "dataverse-sdk-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "73d3e5fbbcae9f4b4b208700b78338bf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9, <4",
                "size": 12308,
                "upload_time": "2022-11-30T08:21:07",
                "upload_time_iso_8601": "2022-11-30T08:21:07.243648Z",
                "url": "https://files.pythonhosted.org/packages/7f/68/70ad832eb17188ce16ea2f64b4fc959f498198a0461d7b9cbb63380d2d02/dataverse-sdk-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}