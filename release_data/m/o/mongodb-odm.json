{
    "0.1a2": {
        "info": {
            "author": "Nayan Biswas",
            "author_email": "nayan32biswas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Software Development :: Build Tools"
            ],
            "description": "# ODM\n\n## Introduction\n\nThe purpose of this module is to do provide easy access to the database with the python object feature with MongoDB and pymongo. With pymongo that was very easy to make spelling mistakes of a collection name when you are doing database operation. This module provides you minimal ODM with a modeling feature so that you don\u2019t have to look up the MongoDB dashboard(Mongo Compass) to know about field names or data types.\n\n## Requirement\n\nSince this module is build top of pymongo and pydantic it's good have knowledge about those packages.\n\n## Example models\n\n```py\nfrom datetime import datetime\nfrom pymongo import ASCENDING, IndexModel\nfrom pydantic import EmailStr, Field\nfrom typing import Optional\n\nfrom app.odm.models import Document\n\n\nclass User(Document):\n    email: EmailStr = Field(...)\n    name: Optional[str] = Field(default=None)\n    photo_link: str = Field(default=None)\n\n    password: Optional[str] = Field(default=None)\n    last_login: datetime = Field(default_factory=datetime.utcnow)\n\n    created_at: datetime = Field(default_factory=datetime.utcnow)\n    updated_at: datetime = Field(default_factory=datetime.utcnow)\n\n    class Config:\n        collection_name = \"user\"\n        indexes = [\n            IndexModel([(\"email\", ASCENDING)], unique=True),\n        ]\n```\n\n## Creation\n\nTo create an object and call create method. Create method accept one boolean optional argument `get_obj`. If you want to pull full data and assign to the existing model then call `obj.create(get_obj=True)` It will recall database with returnd id and update value of existing model.\n\n```py\nuser = User(\n    email=\"demo@example.com\",\n    name=\"Example\",\n    password=\"hash-password\"\n)\nuser.create()\n```\n\n## Retrive Data\n\n```py\nusers = User.find()\nfor user in users:\n    print(user)\n```\n\nTo retrive data there is a function call **find**. It's return python Iterator. Unless you accessing the value the function will not execute any DB call.\n\n\nParamiter of **find**.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nayan32biswas/mongodb-odm",
            "keywords": "mongodb,mongo,odm,mongodb odm,pymongo,pymongo odm,pydantic,pydantic odm",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mongodb-odm",
            "package_url": "https://pypi.org/project/mongodb-odm/",
            "platform": null,
            "project_url": "https://pypi.org/project/mongodb-odm/",
            "project_urls": {
                "Homepage": "https://github.com/nayan32biswas/mongodb-odm"
            },
            "release_url": "https://pypi.org/project/mongodb-odm/0.1a2/",
            "requires_dist": [
                "pymongo",
                "pydantic"
            ],
            "requires_python": "",
            "summary": "This is a minimal ODM for MongoDB. Build top of pymongo and pydantic.",
            "version": "0.1a2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15650947,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "615fec133ca412fdafdbc5c41cb418c4",
                    "sha256": "b0c4bd8df510cb806a9ebcb9a69f18deb60477cf706a1e03b5586e24950bbf47"
                },
                "downloads": -1,
                "filename": "mongodb_odm-0.1a2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "615fec133ca412fdafdbc5c41cb418c4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10285,
                "upload_time": "2022-11-04T07:31:09",
                "upload_time_iso_8601": "2022-11-04T07:31:09.517640Z",
                "url": "https://files.pythonhosted.org/packages/e8/fd/8dac50436073a3fbd39bd19efd5fb626c925227cd9527fbd7c2fc1f61601/mongodb_odm-0.1a2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "404e2c07370f90aa2fdfade187e21282",
                    "sha256": "c1471aa6139e0e9f3a0856300110c3563eeaeee1b721c5aeb1caea491b32631f"
                },
                "downloads": -1,
                "filename": "mongodb-odm-0.1a2.tar.gz",
                "has_sig": false,
                "md5_digest": "404e2c07370f90aa2fdfade187e21282",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9689,
                "upload_time": "2022-11-04T07:31:11",
                "upload_time_iso_8601": "2022-11-04T07:31:11.493561Z",
                "url": "https://files.pythonhosted.org/packages/b1/18/598fa34d1b9da44ab8f7d576bc701d584d74c6d3ddddcdbc6e26423a2afe/mongodb-odm-0.1a2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}