{
    "0.1.1": {
        "info": {
            "author": "Willem Van Onsem",
            "author_email": "hapytexeu+gh@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 3.0",
                "Framework :: Django :: 3.1",
                "Framework :: Django :: 3.2",
                "Framework :: Django :: 4.0",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content"
            ],
            "description": "# Django-single-session\n\n[![PyPi version](https://badgen.net/pypi/v/django-single-session/)](https://pypi.python.org/pypi/django-single-session/)\n[![Documentation Status](https://readthedocs.org/projects/django-single-session/badge/?version=latest)](http://django-single-session.readthedocs.io/?badge=latest)\n[![PyPi license](https://badgen.net/pypi/license/django-single-session/)](https://pypi.python.org/pypi/django-single-session/)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nA Django app that enforces that a user has only one active session: if the user logs in on another browser/device, then the previous sessions will log out.\n\nThe app will also add an extra action to the `ModelAdmin` of the user model (if there is such `ModelAdmin`), that will alow to log out all sessions of a given (set of) user(s).\n\n## Installation\n\nThe package can be fetched as `django-single-session`, so for example with `pip` with:\n\n```shell\npip3 install django-single-session\n```\n\nOne can install the app by adding the `single_session` app to the `INSTALLED_APPS` setting:\n\n```python3\n# settings.py\n\n# ...\n\nINSTALLED_APPS = [\n    # ...,\n    'django.contrib.sessions',\n    # ...,\n    'single_session'\n    # ...\n]\n\nMIDDLEWARE = [\n    # ...,\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    # ...,\n    'django.contrib.auth.middleware.AuthenticationMiddlware',\n    # ...\n]\n\nSESSION_ENGINE = 'django.contrib.sessions.backends.db'\n```\n\nFor the `SESSION_ENGINE` setting, the database backend, `django.contrib.sessions.backends.db` should be used, since that is the one where the item is linking to.\n\nIn order to work properly, the `SessionMiddleware` and `AuthenticationMiddleware` will be necessary, or another middleware class that will add a `.session` and `.user` attribute on the\nrequest object and will trigger the `user_logged_in` and `user_logged_out` signals with the proper session and user.\n\nand running `migrate` to migrate the database properly:\n\n```shell\npython3 manage.py migrate single_session\n```\n\nThis will by default enforce that a user will only have *one* logged in session. This will *not* proactively logout existing sessions: only if the user logs in with another browser or device,\nthe old session(s) will be closed.\n\n## Configuration\n\nOne can disable the single session behavior by specifying the `SINGLE_USER_SESSION` setting in `settings.py` and thus setting this value to `False` (or any other value with truthiness `False`).\n\nThe toolo will also clean up *all* sessions of a user in case that user logs out. This thus means that if a user logs out on one browser/device, they will log out on all other browsers/devices as well. This functionality is still enabled if `SINGLE_USER_SESSION` is set to `False`. You can disable this by setting the `LOGOUT_ALL_SESSION` setting in `settings.py` to `False` (or any other value with truthiness `False`).\n\n## Logging out (other) users\n\nIf there is a `ModelAdmin` for the user model (if you use the default user model, then there is such `ModelAdmin`), and the `django.contrib.admin` package is installed,\nthen that `ModelAdmin` will have extra actions to log out normal users and admin users.\n\nYou can thus select users, and log these out with the \"*Log out the user on all sessions*\" action. This will invalidate all the sessions for (all) the selected user(s). In order to do this,\nthe `single_session.logout` permission is required, so only admin users and users with such permission can log out other users. Users with such permission can log out users, but\n*not* admin users.\n\nThere is an extra permission named `single_session.logout_all` to log out all users, including *admin* users. Users with such permission can thus also log out admin users, so it\nmight be better not to give such permission to all (staff) users.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.example.com/",
            "keywords": "",
            "license": "BSD-3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-single-session",
            "package_url": "https://pypi.org/project/django-single-session/",
            "platform": null,
            "project_url": "https://pypi.org/project/django-single-session/",
            "project_urls": {
                "Homepage": "https://www.example.com/"
            },
            "release_url": "https://pypi.org/project/django-single-session/0.1.1/",
            "requires_dist": [
                "Django (>=3.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "A Django app to enforce users to work only on one browser/device.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14619087,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6bcfed9d707c3458d831ffb18e0094d5",
                    "sha256": "5417c249665f679b7df6a79a9a89b6d7de7770963d6e52c149376a668a5a8a40"
                },
                "downloads": -1,
                "filename": "django_single_session-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6bcfed9d707c3458d831ffb18e0094d5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10517,
                "upload_time": "2022-08-02T00:33:12",
                "upload_time_iso_8601": "2022-08-02T00:33:12.258562Z",
                "url": "https://files.pythonhosted.org/packages/cc/c7/1234efd371d643b316fb2d333810b4a0f1c57329b7acd7c3f6974b17ace1/django_single_session-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b5580fd8aef9a196d89d89231059da8",
                    "sha256": "46d1ab6c85524ade3ab6e20b1185b3391cd05c2fefcecbc86152cee25cf47a5d"
                },
                "downloads": -1,
                "filename": "django-single-session-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1b5580fd8aef9a196d89d89231059da8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 14549,
                "upload_time": "2022-08-02T00:33:13",
                "upload_time_iso_8601": "2022-08-02T00:33:13.385295Z",
                "url": "https://files.pythonhosted.org/packages/e0/0b/d1ea855d693e7debe61c04640dae9825da098f8de66b33952a7c8a446547/django-single-session-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}