{
    "1.0.1": {
        "info": {
            "author": "Bennett Kanuka",
            "author_email": "bennett@climateengine.com",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Console",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# requests-iap2\nAuth class for [requests](https://github.com/kennethreitz/requests) used to authenticate HTTP requests to \nGoogle Cloud [Identity-Aware Proxy](https://cloud.google.com/iap/) using **user** credentials.\n\nThis is in contrast to most other IAP authentication libraries which use **service account** credentials.\n\nOriginal inspiration came from https://github.com/kiwicom/requests-iap \n\n## Installation\n\n```\npip install git+https://github.com/climateengine/requests-iap2@main\n```\n\n## Usage\n\n### Setup\nYou will need to have a Google Cloud project with IAP enabled and a user account with `IAP Webapp User` role.\n\nAdditionally, you will need to create 2 OAuth 2.0 client IDs in the Google Cloud Console:\none for the IAP server (created as a Web application) and one for the client application (created as a Desktop application).\nYou will need the client ID and secret for the client application.\n\nIf you have not already set up Application Default Credentials, you will need to do so with the following command:\n```shell\ngcloud auth login\ngcloud auth application-default login\n```\nYou should only have to do this once per machine.\n\n### Example\n\n```python\nimport requests\nfrom requests_iap2 import IAPAuth\n\n# This is the URL of the IAP-protected resource\nurl = \"https://stac-staging.climateengine.net/\"\n\n# Create a requests Session object and set the authentication handler\nsession = requests.Session()\nsession.auth = IAPAuth(\n    server_oauth_client_id=\"something.apps.googleusercontent.com\",  # optional\n    client_oauth_client_id=\"something_else.apps.googleusercontent.com\",\n    client_oauth_client_secret=\"client_secret_fjnclakjwencaiewnl\",\n)\n\nresp = session.get(url)\n\n# Alternatively, you can use the IAPAuth without a Session object\nresp = requests.get(url,\n                    auth=IAPAuth(\n                        server_oauth_client_id=\"something.apps.googleusercontent.com\",  # optional\n                        client_oauth_client_id=\"something_else.apps.googleusercontent.com\",\n                        client_oauth_client_secret=\"client_secret_fjnclakjwencaiewnl\"),\n                    )\n```\n\n### Caching\nCredentials are cached in a file specified by the optional `credentials_cache` parameter.\nThe default is `~/.requests_iap2_credentials.json`.\nIf this file exists, it will be used to load the credentials, and specifying `client_oauth_client_id` and \n`client_oauth_client_secret` will be optional. i.e. you won't need to specify these parameters again:\n\n```python\nimport requests\nfrom requests_iap2 import IAPAuth\n\nsession = requests.Session()\nsession.auth = IAPAuth()\n```\n\n## Development\n\n### Code formatting\n\n[black](https://github.com/ambv/black/)\n\n### Package versioning\n\nVersioning of this package is done through [setuptools-scm](https://github.com/pypa/setuptools_scm),\nwhich auto-generates the version number based on git tags and commits. setuptools-scm generates a\nunique version number for each commit in the repository according to\n[this scheme](https://github.com/pypa/setuptools_scm/#default-versioning-scheme).\n\nThe version of the package is read from `requests_iap2/_version.py`\n(which is generated by setuptools_scm during the package build) when running as a package, and derived\nfrom git when running from source.\n\n### Updating requirements.txt and test-requirements.txt\n\nSee `scripts/gen_requirements.sh`.\n\n### Releasing\n\nThis project uses [semantic versioning](https://semver.org/).\n\nFor a new minor version release (`X.X.0`), create a `vX.X.0` tag in main branch,\nand create a `vX.X` branch from the same commit for future patches to the minor version.\n\nFor patch versions, commit to and create `vX.X.Y` tags in the respective minor version branch.\n(e.g `v1.1.1`, `v1.1.2`.. tags in the `v1.1` branch)\n\nFor building the package and publishing it on PyPI, see `scripts/build_package.sh`\nand `scripts/publish_package.sh`.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/climateengine/requests-iap2",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "requests-iap2",
            "package_url": "https://pypi.org/project/requests-iap2/",
            "platform": null,
            "project_url": "https://pypi.org/project/requests-iap2/",
            "project_urls": {
                "Homepage": "https://github.com/climateengine/requests-iap2"
            },
            "release_url": "https://pypi.org/project/requests-iap2/1.0.1/",
            "requires_dist": [
                "requests",
                "google-auth",
                "google-auth-oauthlib",
                "build ; extra == 'dev'",
                "more-itertools (==5.0.0) ; extra == 'dev'",
                "pip-tools ; extra == 'dev'",
                "pytest (<5.0.0) ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "pytest-mock (<3.3) ; extra == 'dev'",
                "setuptools (>=42) ; extra == 'dev'",
                "setuptools-scm[toml] (>=5.0.2) ; extra == 'dev'",
                "tox ; extra == 'dev'",
                "twine ; extra == 'dev'",
                "wheel ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15477331,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6fc0537ac58c8fa3ff25e29bc9402522",
                    "sha256": "bd3c55a8024d2372ea56206d13e0a7405ae55e50e20446afdcdefa91c94758a2"
                },
                "downloads": -1,
                "filename": "requests_iap2-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6fc0537ac58c8fa3ff25e29bc9402522",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7335,
                "upload_time": "2022-10-20T13:46:27",
                "upload_time_iso_8601": "2022-10-20T13:46:27.950432Z",
                "url": "https://files.pythonhosted.org/packages/0d/a2/8110ca64c0e1072bf4e419c5d40be29ca25812f998d04ad8a0b5e43938b1/requests_iap2-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e08d0e49c9cd6e0f67cbd90e3504b211",
                    "sha256": "1cfde40126caa6a142e5a74381a1daf86b530d406152114f8322813cdb9b2ff0"
                },
                "downloads": -1,
                "filename": "requests-iap2-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "e08d0e49c9cd6e0f67cbd90e3504b211",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9410,
                "upload_time": "2022-10-20T13:46:30",
                "upload_time_iso_8601": "2022-10-20T13:46:30.402093Z",
                "url": "https://files.pythonhosted.org/packages/68/7c/20f9b126641e292ca2cc6c3643d13b8f13741b1a3f80d96940b3e6b96c99/requests-iap2-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}