{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Andreas Nogga <a.nogga@fz-juelich.de>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# NUCWF\n\nLibrary for online accessing, reading and writing A=3 and A=4 wave functions.\n\nWhen using the data files or software, please cite the original work:\n\n\n\n## Installation \n\nThe source code and examples are available at \nhttps://jugit.fz-juelich.de/a.nogga/nucwavef.git\n\nThe easiest way to install is using pip: \n```\npip install nucwf \n```\n\n## Usage\nThe package provides an interface to download the data files from our repository and to read the files and test.\nMore advanced options will be documented elsewhere.\nJupyter notebook downloading an example data base in `examples`.\nThis directory also includes some example scripts to modify the database locally.\n\nFor downloading specific files to a local directory, e.g.,  `$HOME/work/wftest` use \n```\nfrom nucwf import access\ntestdf=access.database(workdir=os.environ[\"HOME\"]+\"/work/wftest\")\n```\nThis downloads a pandas dataframe with the available wave function files and stores it into  `testdf` . The pandas dataframe can be printed using \n```\nimport pandas as pd  \npd.set_option('display.max_columns', None)\nprint(testdf.pddf)\n```\n\nDownloading wave function files of, e.g., row 4 and 9 of the table is done by \n```\nimport os \n# get file info from table \nrow=testdf.pddf.loc[[36]]\nwfid=row.to_dict('records')[0]\n# retrieve file\nhashname,uniquename=testdf.get_file(**wfid)\n# print name and file size \nprint(\"hashname:    \",hashname)\nprint(\"filesize:    \",os.path.getsize(hashname))\nprint(\"uniquename:  \",uniquename)\n```\nThe files are downloaded and gunzipped. They are partly also compressed using the ZFP compressors (see https://github.com/LLNL/zfp).\nUsing the files might require to install the corresponding HDF plugins (https://github.com/LLNL/H5Z-ZFP).\nThe local files will be first stored under their `hashname`.\nHowever, the python method also returns a suggestion for a unique file name `uniquename`\nthat includes the parameters of the file.  If wanted, users may rename the file using the provided `uniquename`. \n\nThe database contains two kinds to files: A=3 and A=4 wave functions.\nYou can read in and get some basic properties using the wavefilea4 constructor\n```\nwfa4=access.wavefilea4(hashname,printlevel=1)\n```\n\nA=3 wave functions can be tested similarly using the wavefilea3 constructor\n```\nwfa3=access.wavefilea3(hashname,printlevel=1)\n```\n\n\n\n\n\n\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "GNU General Public License v3 (GPLv3)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nucwf",
            "package_url": "https://pypi.org/project/nucwf/",
            "platform": null,
            "project_url": "https://pypi.org/project/nucwf/",
            "project_urls": {
                "Bug Tracker": "https://jugit.fz-juelich.de/a.nogga/nucwavef/issues",
                "Homepage": "https://jugit.fz-juelich.de/a.nogga/nucwavef"
            },
            "release_url": "https://pypi.org/project/nucwf/0.0.1/",
            "requires_dist": [
                "pandas",
                "requests",
                "numpy",
                "h5py",
                "hdf5plugin"
            ],
            "requires_python": ">=3.7",
            "summary": "Package to access nuclear wave functions and Faddeev- or Yakubovsky components for A=3 and 4 nuclei",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15955503,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "916c9a892f81d312e8fd348889e9c5ba",
                    "sha256": "e0516375a6c18fae421d8047a5baa1ab6f3b9b367cd4775848390e47d6fde4a9"
                },
                "downloads": -1,
                "filename": "nucwf-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "916c9a892f81d312e8fd348889e9c5ba",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 26797,
                "upload_time": "2022-12-01T13:53:03",
                "upload_time_iso_8601": "2022-12-01T13:53:03.176628Z",
                "url": "https://files.pythonhosted.org/packages/4e/e0/3f518078d0f847a61dd0e5b5ceb2f416ac3c26a96b882e847b1b594cac80/nucwf-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4eb05f691908ba0a0a543bd72549cb5e",
                    "sha256": "8b5d6b52ea35431a703944543db3245dce7dfd16a46b92a8a4c778cc9d70bc54"
                },
                "downloads": -1,
                "filename": "nucwf-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4eb05f691908ba0a0a543bd72549cb5e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 28151,
                "upload_time": "2022-12-01T13:53:04",
                "upload_time_iso_8601": "2022-12-01T13:53:04.632267Z",
                "url": "https://files.pythonhosted.org/packages/d9/35/f9cada1c9d6f7dd05667e4dda6b40d353648b73ff98bee0a9f627c558e80/nucwf-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}