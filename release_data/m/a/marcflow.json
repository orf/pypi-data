{
    "0.1": {
        "info": {
            "author": "zhv",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Marcflow\r\n\r\nMarcflow is a Python library for MARC (MAchine-Readable Cataloging) data\r\npreprocessing. It can be used to extract data from records that meet specified\r\ncriteria and convert the data to JSON.\r\n\r\n## General\r\n\r\n```\r\nmarcflow.select(statement)\r\n```\r\n\r\nSpecifies a scheme for parsing MARC records.\r\n\r\n**statement** (*str*): field-expr [condition-expr]\r\n\r\n- field-expr indicates the (sub)fields whose values will be\r\n  extracted.\r\n- condition-expr, if given, indicates the condition(s) that\r\n  (sub)fields must satisfy to be selected.\r\n\r\nReturns True if the parameter is a valid statement and False otherwise.\r\n\r\n```\r\nmarcpick.marc(source)\r\n```\r\n\r\nParses MARC records and extracts data based on specific criteria.\r\n\r\n**source** (*str* | *TextIO*): one or more MARC records\r\n\r\nReturns a generator that can be iterated over to obtain the extracted data.\r\n\r\n## Installation\r\n\r\n```\r\n$ pip install marcflow\r\n```\r\n\r\n## Usage\r\n\r\n```\r\n>>> from marcflow import MarcFlow\r\n>>> marcflow = MarcFlow()\r\n>>> # The wildcard _ (Low Line) represents any single character in tags,\r\n>>> # indicators and subfield codes.\r\n>>> statement = 'LDR 001 010a 5__a (200__a\\(?i\\)java & !200__a\\(?i\\)script) \\\r\n... | 606__a^JAVA'\r\n>>> marcflow.select(statement)\r\nTrue\r\n>>> with open('test.mrc', encoding='UTF-8') as fr:\r\n...     data = marcflow.marc(fr)\r\n...     next(data)\r\n```\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/turricula/marcflow",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "marcflow",
            "package_url": "https://pypi.org/project/marcflow/",
            "platform": null,
            "project_url": "https://pypi.org/project/marcflow/",
            "project_urls": {
                "Homepage": "https://github.com/turricula/marcflow"
            },
            "release_url": "https://pypi.org/project/marcflow/0.1/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "A Python library for MARC data preprocessing",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15273277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "76708f2e5a11bb46962e000ed5935d48",
                    "sha256": "fe8ee9941dce83fa009bf983a999d55cf52b5b05e64e7804d0cef14279f9f5c5"
                },
                "downloads": -1,
                "filename": "marcflow-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "76708f2e5a11bb46962e000ed5935d48",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 16946,
                "upload_time": "2022-10-01T05:20:26",
                "upload_time_iso_8601": "2022-10-01T05:20:26.791056Z",
                "url": "https://files.pythonhosted.org/packages/21/5a/a7d6349e939c29f2985d2a9cad13babe668091ae871ab6adaa8ea1775e06/marcflow-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}