{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "Umar Butler <umar@umar.au>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "Intended Audience :: Information Technology",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Topic :: Scientific/Engineering",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities",
                "Typing :: Typed"
            ],
            "description": "# orjsonl\n\n<a href=\"https://pypi.org/project/orjsonl/\" alt=\"PyPI Version\"><img src=\"https://img.shields.io/pypi/v/orjsonl\"></a> <a href=\"https://github.com/umarbutler/orjsonl/actions/workflows/ci.yml\" alt=\"Build Status\"><img src=\"https://img.shields.io/github/workflow/status/umarbutler/orjsonl/ci\"></a> <a href=\"https://app.codecov.io/gh/umarbutler/orjsonl\" alt=\"Code Coverage\"><img src=\"https://img.shields.io/codecov/c/github/umarbutler/orjsonl\"></a> <a href=\"https://pypistats.org/packages/orjsonl\" alt=\"Downloads\"><img src=\"https://img.shields.io/pypi/dm/orjsonl\"></a>\n\norjsonl is a simple, fast and lightweight Python library for loading, saving, streaming and appending [jsonl](https://jsonlines.org/) (also known as JSON Lines) files. It is powered by [orjson](https://github.com/ijl/orjson), the quickest and most correct json serializer currently available for Python.\n\n## Installation\n\norjsonl may be installed with `pip`:\n\n```bash\npip install orjsonl\n```\n\n## Usage\n\nThis code snippet demonstrates how jsonl files can be loaded, saved, appended and streamed with the [`load()`](#load), [`save()`](#save), [`append()`](#append) and [`stream()`](#stream) functions, respectively:\n\n```python\n>>> import orjsonl\n>>> data = [\n    {\"hello\" : \"world\"},\n    [1.1, 2.2, 3.3],\n    42,\n    True,\n    None\n]\n>>> orjsonl.save(path='test.jsonl', data=data)\n>>> orjsonl.load(path='test.jsonl')\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None]\n>>> orjsonl.append(path='test.jsonl', data=[(\"a\", \"b\", \"c\")])\n>>> [object_ for object_ in orjsonl.stream(path='test.jsonl')]\n[{'hello': 'world'}, [1.1, 2.2, 3.3], 42, True, None, ['a', 'b', 'c']]\n```\n\n### Load\n\n```python\ndef load(\n    path: str | bytes | int | os.PathLike\n) -> list[dict | list | int | float | str | bool | None]: ...\n```\n\n[`load()`](#load) deserializes a UTF-8-encoded jsonl file to a list of Python objects.\n\nThe only argument taken by this function is `path`, a path-like object giving the pathname (absolute or relative to the current working directory), or an integer file descriptor, of the jsonl file to be deserialized.\n\nThis function returns a `list` object comprised of deserialized `dict`, `list`, `int`, `float`, `str`, `bool` or `None` objects.\n\n### Stream\n\n```python\ndef stream(\n    path: str | bytes | int | os.PathLike\n) -> map: ...\n```\n\n[`stream()`](#stream) creates a map object that deserializes a UTF-8-encoded jsonl file to Python objects.\n\nThe only argument taken by this function is `path`, a path-like object giving the pathname (absolute or relative to the current working directory), or an integer file descriptor, of the jsonl file to be deserialized by the map object.\n\nThis function returns a `map` object that deserializes the jsonl file to `dict`, `list`, `int`, `float`, `str`, `bool` or `None` objects.\n\n### Save\n\n```python\ndef save(\n    path: str | bytes | int | os.PathLike,\n    data: Iterable\n) -> None: ...\n```\n\n[`save()`](#save) serializes an iterable of Python objects to a UTF-8-encoded jsonl file.\n\nThe first argument taken by this function is `path`, a path-like object giving the pathname (absolute or relative to the current working directory), or an integer file descriptor, of the jsonl file to be saved.\n\nThe second argument taken by this function is `data`, an iterable of Python objects to be serialized to the jsonl file.\n\n### Append\n\n```python\ndef append(\n    path: str | bytes | int | os.PathLike,\n    data: Iterable,\n    newline: bool = True\n) -> None: ...\n```\n\n[`append()`](#append) serializes and appends an iterable of Python objects to a UTF-8-encoded jsonl file.\n\nThe first argument taken by this function is `path`, a path-like object giving the pathname (absolute or relative to the current working directory), or an integer file descriptor, of the jsonl file to be appended.\n\nThe second argument taken by this function is `data`, an iterable of Python objects to be serialized and appended to the jsonl file.\n\nThe third argument taken by this function is `newline`, an optional Boolean flag that, if set to `False`, indicates that the jsonl file does not end with a newline and should, therefore, have one added before data is appended.\n\n## License\n\nThis library is licensed under the [MIT License](https://github.com/umarbutler/orjsonl/blob/main/LICENSE).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "json,jsonl,jsonlines,orjson",
            "license": "Copyright (c) 2022 Umar Butler  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "orjsonl",
            "package_url": "https://pypi.org/project/orjsonl/",
            "platform": null,
            "project_url": "https://pypi.org/project/orjsonl/",
            "project_urls": {
                "Bug Tracker": "https://github.com/umarbutler/orjsonl/issues",
                "Documentation": "https://github.com/umarbutler/orjsonl/blob/main/README.md",
                "Homepage": "https://github.com/umarbutler/orjsonl",
                "Source": "https://github.com/umarbutler/orjsonl"
            },
            "release_url": "https://pypi.org/project/orjsonl/0.1.0/",
            "requires_dist": [
                "orjson"
            ],
            "requires_python": ">=3.7",
            "summary": "A simple, fast and lightweight Python library for loading, saving, streaming and appending jsonl (also known as JSON Lines) files.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15802981,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "50f273ea76b1d4b766b0b486c2b90a87",
                    "sha256": "9df5aa734e650bd05f525e0e84f3070a5ae6cde2d8476b40afae5291008ea09f"
                },
                "downloads": -1,
                "filename": "orjsonl-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "50f273ea76b1d4b766b0b486c2b90a87",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 5194,
                "upload_time": "2022-11-17T15:19:00",
                "upload_time_iso_8601": "2022-11-17T15:19:00.607351Z",
                "url": "https://files.pythonhosted.org/packages/93/05/5923929a13ef891edd21ec1746564b5a6c337554352c8dd1d236317aeb0a/orjsonl-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6d5084d4d8f8e4eae555dd6cbdfb9005",
                    "sha256": "2d763701524aa5495208d418977dfec82e5ac662a4814df29e5b8f7c82e74eec"
                },
                "downloads": -1,
                "filename": "orjsonl-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "6d5084d4d8f8e4eae555dd6cbdfb9005",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5388,
                "upload_time": "2022-11-17T15:19:02",
                "upload_time_iso_8601": "2022-11-17T15:19:02.184910Z",
                "url": "https://files.pythonhosted.org/packages/bc/9d/7a6e01b638d2b5aca2004d53f5a41f3b6c78845e991624d4783fc2451b0a/orjsonl-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}