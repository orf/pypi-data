{
    "0.3.0": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.3.0/",
            "requires_dist": [
                "h2 (<4.0.0)",
                "alembic",
                "aiofiles",
                "appdirs",
                "authlib",
                "fastapi",
                "fsspec",
                "importlib-metadata",
                "itsdangerous",
                "jinja2",
                "pluggy",
                "prometheus-client",
                "python-multipart",
                "pyyaml",
                "requests",
                "sqlalchemy",
                "sqlalchemy-utils",
                "tenacity",
                "toml",
                "typer",
                "typing-extensions",
                "ujson",
                "uvicorn",
                "xattr",
                "zstandard",
                "adlfs ; extra == 'all'",
                "gcsfs (>=2021.10.1) ; extra == 'all'",
                "pamela ; extra == 'all'",
                "psycopg2 ; extra == 'all'",
                "s3fs ; extra == 'all'",
                "adlfs ; extra == 'azure'",
                "quetz-client ; extra == 'client'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "httpx (~=0.20.0) ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "pytest-mock ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "tbump ; extra == 'dev'",
                "gcsfs (>=2021.10.1) ; extra == 'gcs'",
                "pamela ; extra == 'pam'",
                "psycopg2 ; extra == 'postgre'",
                "s3fs ; extra == 's3'",
                "black ; extra == 'test'",
                "flake8 ; extra == 'test'",
                "httpx (~=0.20.0) ; extra == 'test'",
                "isort ; extra == 'test'",
                "pre-commit ; extra == 'test'",
                "pytest ; extra == 'test'",
                "pytest-asyncio ; extra == 'test'",
                "pytest-mock ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "tbump ; extra == 'test'"
            ],
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1d1e97816f357732a05fd7adc3c6a19a",
                    "sha256": "2f1927539b82ed6bd2a2582cc5ad7c9122145ab8315234c98df19d8bc4334b59"
                },
                "downloads": -1,
                "filename": "quetz_server-0.3.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1d1e97816f357732a05fd7adc3c6a19a",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 206989,
                "upload_time": "2022-02-04T13:53:17",
                "upload_time_iso_8601": "2022-02-04T13:53:17.890647Z",
                "url": "https://files.pythonhosted.org/packages/a4/19/4c7eb000d76111d35e4d043d2840b32602308d2d95bc96f61a35e6ff4baa/quetz_server-0.3.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "553f885f62179fb6e523e1cb2f320980",
                    "sha256": "9097bfed3156a33e1da092db4e1ebb828107d077f80b4706ca2293009a1b6e9e"
                },
                "downloads": -1,
                "filename": "quetz-server-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "553f885f62179fb6e523e1cb2f320980",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 542498,
                "upload_time": "2022-02-04T13:53:20",
                "upload_time_iso_8601": "2022-02-04T13:53:20.272763Z",
                "url": "https://files.pythonhosted.org/packages/ac/57/8b1ec9c52e173a15dce89b72ace691e617f727e262ad241ac1c976ccfef2/quetz-server-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.0": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.4.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5d5adca1121c5644278d637c349c7595",
                    "sha256": "268a318c4dbd83e909edf8b82bf2aade9a668b86f5cea4764e7b24dbf41cceb8"
                },
                "downloads": -1,
                "filename": "quetz_server-0.4.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5d5adca1121c5644278d637c349c7595",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 207596,
                "upload_time": "2022-03-14T19:49:40",
                "upload_time_iso_8601": "2022-03-14T19:49:40.608895Z",
                "url": "https://files.pythonhosted.org/packages/95/60/c7cd0f00832f5e7c492cc9815bb3ef48e6d8ceda37ccf713c56237b7d6ae/quetz_server-0.4.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "af34da7b663d406fae0012c981490e52",
                    "sha256": "a586b99cd5ae9d4a0f4088ad6aac5b4de7a0f362f833f0ee467b09f8fd4f7000"
                },
                "downloads": -1,
                "filename": "quetz-server-0.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "af34da7b663d406fae0012c981490e52",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 501318,
                "upload_time": "2022-03-14T19:49:38",
                "upload_time_iso_8601": "2022-03-14T19:49:38.679959Z",
                "url": "https://files.pythonhosted.org/packages/1b/3e/3e9846320d8a773678a1011ab90f504113fe473c1e64419974bc85a89f2d/quetz-server-0.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.1": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.4.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "357139a9a7929f7a87a9afd82b97c84d",
                    "sha256": "bc69b02aab70e0d4b8528e5233b6737f88adb7f0e0bd9ea80aa6d83751e6095e"
                },
                "downloads": -1,
                "filename": "quetz_server-0.4.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "357139a9a7929f7a87a9afd82b97c84d",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 207608,
                "upload_time": "2022-04-06T07:52:16",
                "upload_time_iso_8601": "2022-04-06T07:52:16.029259Z",
                "url": "https://files.pythonhosted.org/packages/65/fc/5eb3470d85f3052b8a6e59c60f918d3d06eb993a9d6854be3f5da12ba59e/quetz_server-0.4.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "eff3fe004ce0b4846aaad929fd9ab027",
                    "sha256": "bed9c3c6620359d8d9510847301cc9e00a361e1535ff8498006fc290d82e192d"
                },
                "downloads": -1,
                "filename": "quetz-server-0.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "eff3fe004ce0b4846aaad929fd9ab027",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 501839,
                "upload_time": "2022-04-06T07:52:13",
                "upload_time_iso_8601": "2022-04-06T07:52:13.761439Z",
                "url": "https://files.pythonhosted.org/packages/8e/f5/cc340a330f92a7026bfaaa0610c28c811ea001716505bb74dc2fe27ec4bc/quetz-server-0.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.2": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.4.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.4.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eacc469bbcb8a3335f7aaa3b71b3b4f6",
                    "sha256": "013c06317e54465f206bc912d1526d9ae29d58cde82aa6eff1efe3c0434ab617"
                },
                "downloads": -1,
                "filename": "quetz_server-0.4.2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eacc469bbcb8a3335f7aaa3b71b3b4f6",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 207610,
                "upload_time": "2022-04-07T07:32:46",
                "upload_time_iso_8601": "2022-04-07T07:32:46.772464Z",
                "url": "https://files.pythonhosted.org/packages/22/3e/4ac4c93559369494dc0611d1bd13cebe7498268f72181cf0119bda844972/quetz_server-0.4.2-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e80b2f8f6e4120c573f69d88c6900dac",
                    "sha256": "abc410254d11a250066b2cd933e115402bb17bc0e26922a0495f167c6bc3b0ab"
                },
                "downloads": -1,
                "filename": "quetz-server-0.4.2.tar.gz",
                "has_sig": false,
                "md5_digest": "e80b2f8f6e4120c573f69d88c6900dac",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 501898,
                "upload_time": "2022-04-07T07:32:45",
                "upload_time_iso_8601": "2022-04-07T07:32:45.176326Z",
                "url": "https://files.pythonhosted.org/packages/ef/b4/64c67297d9c33d601314665b3b2734fda8abf747e25018c175ff6656dac8/quetz-server-0.4.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.3": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.4.3/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.4.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "14ea9e3f8f0416f37ca4bee799cc86ef",
                    "sha256": "6db5295234713065d8ae48e0e2226416771ca69bd4b88536e9b8805c18896885"
                },
                "downloads": -1,
                "filename": "quetz_server-0.4.3-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "14ea9e3f8f0416f37ca4bee799cc86ef",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 208075,
                "upload_time": "2022-05-11T17:37:38",
                "upload_time_iso_8601": "2022-05-11T17:37:38.520884Z",
                "url": "https://files.pythonhosted.org/packages/9e/30/a626c23923deaf6ff32e23083fa87d0d688981aa361a057217419caa3db1/quetz_server-0.4.3-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "82317279fa3c391b97dd75e45ffbcbf8",
                    "sha256": "ef0d6390d52721da45796db6c5fc126753f145097a6575b1ec5fa513b44e1fc8"
                },
                "downloads": -1,
                "filename": "quetz-server-0.4.3.tar.gz",
                "has_sig": false,
                "md5_digest": "82317279fa3c391b97dd75e45ffbcbf8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 502715,
                "upload_time": "2022-05-11T17:37:36",
                "upload_time_iso_8601": "2022-05-11T17:37:36.323571Z",
                "url": "https://files.pythonhosted.org/packages/0d/8f/70c2fc76facc9b19d91a9844849358a58736ab9dffb8083f08a6df0e7479/quetz-server-0.4.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.4": {
        "info": {
            "author": "QuantStack & Quetz contributors",
            "author_email": "wolf.vollprecht@quantstack.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "![quetz header image](docs/assets/quetz_header.png)\n\n## The Open-Source Server for Conda Packages\n\n<table>\n<thead align=\"center\" cellspacing=\"10\">\n  <tr>\n    <th colspan=\"3\" align=\"center\" border=\"\">part of mamba-org</th>\n  </tr>\n</thead>\n<tbody>\n  <tr background=\"#FFF\">\n    <td align=\"center\">Package Manager <a href=\"https://github.com/mamba-org/mamba\">mamba</a></td>\n    <td align=\"center\">Package Server <a href=\"https://github.com/mamba-org/quetz\">quetz</a></td>\n    <td align=\"center\">Package Builder <a href=\"https://github.com/mamba-org/boa\">boa</a></td>\n  </tr>\n</tbody>\n</table>\n\n# Quetz\n\n[![Documentation Status](https://readthedocs.org/projects/quetz/badge/?version=latest)](https://quetz.readthedocs.io/en/latest/?badge=latest)\n\nThe quetz project is an open source server for conda packages.\nIt is built upon FastAPI with an API-first approach.\nA quetz server can have many users, channels and packages.\nWith quetz, fine-grained permissions on channel and package-name level will be possible.\n\nQuetz has an optional client `quetz-client` that can be used to upload packages to a quetz server instance.\n\n## Usage\n\nYou should have [mamba](https://github.com/mamba-org/mamba) or conda installed.\n\nGet `Quetz` sources:\n\n```bash\ngit clone https://github.com/mamba-org/quetz.git\n```\n\nThen create an environment:\n\n```bash\ncd quetz\nmamba env create -f environment.yml\nconda activate quetz\n```\n\nInstall `Quetz`:\n\n> Use the editable mode `-e` if you are developer and want to take advantage of the `reload` option of `Quetz`\n\n```bash\npip install -e .\n```\n\nUse the CLI to create a `Quetz` instance:\n\n```bash\nquetz run test_quetz --copy-conf ./dev_config.toml --dev --reload\n```\n\nLinks:\n\n* <http://localhost:8000/> - Login with your github account\n* <http://localhost:8000/api/dummylogin/alice>  - Login with test user, one of [alice | bob | carol | dave]\n* <http://localhost:8000/docs> - Swagger UI for this REST service\n\nDownload `xtensor` as test package:\n\n```bash\n./download-test-package.sh\n```\n\nRun test upload using quetz-client. (For testing purposes, an API key is created for the test user \"alice\" at server launch and is printed to the terminal, so use that for this example):\n\n```bash\nexport QUETZ_API_KEY=E_KaBFstCKI9hTdPM7DQq56GglRHf2HW7tQtq6si370\nquetz-client http://localhost:8000/api/channels/channel0 xtensor/linux-64/xtensor-0.16.1-0.tar.bz2 xtensor/osx-64/xtensor-0.16.1-0.tar.bz2\n```\n\nInstall the test package with conda:\n\n```bash\nmamba install --strict-channel-priority -c http://localhost:8000/get/channel0 -c conda-forge xtensor\n```\n\nOutput:\n\n```text\n...\n  Package  Version  Build          Channel                                                     Size\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  Install:\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n  xtensor   0.16.1  0              http://localhost:8000/get/channel0/osx-64                 109 KB\n  xtl       0.4.16  h04f5b5a_1000  conda-forge/osx-64                                         47 KB\n\n  Summary:\n\n  Install: 2 packages\n\n  Total download: 156 KB\n\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n...\n```\n\nBrowse channels: <http://localhost:8000/get/channel0/>\n\n## S3 Backend\n\nTo enable the S3 backend, you will first require the s3fs library:\n\n```bash\nmamba install -c conda-forge s3fs\n```\n\nThen add your access and secret keys to the `s3` section with your\n`config.toml`, like so:\n\n```ini\n[s3]\naccess_key = \"AKIAIOSFODNN7EXAMPLE\"\nsecret_key = \"wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\"\nurl = \"https://...\"\nregion = \"\"\nbucket_prefix=\"...\"\nbucket_suffix=\"...\"\n```\n\nBe sure to set the url and region field if not using AWS.\n\nChannels are created with the following semantics:\n\n```text\n{bucket_prefix}{channel_name}{bucket_suffix}\n```\n\nThe s3 backend is currently designed for one bucket per channel. It may be possible to put all channels in one bucket, but that will require some code tweaks\n\nIf you're using IAM roles, dont set `access_key` and `secret_key` or set them to empty strings `\"\"`.\n\n## Google OAuth 2.0 OpenID Connect\n\nTo enable auth via Google, you will need to register an application at: <https://console.developers.google.com/apis/credentials>\n\nThen add the client secret & ID to a `google` section of your `config.toml`:\n\n```ini\n[google]\nclient_id = \"EXAMPLEID420127570681-6rbcgdj683l3odc3nqearn2dr3pnaisq.apps.googleusercontent.com\"\nclient_secret = \"EXAMPLESECRETmD-7UXVCMZV3C7b-kZ9yf70\"\n```\n\n## PostgreSQL\n\nBy default, quetz will run with sqlite database, which works well for local tests and small local instances. However, if you plan to run quetz in production, we recommend to configure it with the PostgreSQL database. There are several options to install PostgreSQL server on your local machine or production server, one of them being the official PostgreSQL docker image.\n\n### Running PostgreSQL server with docker\n\nYou can the PostgresSQL image from the docker hub and start the server with the commands:\n\n```bash\ndocker pull postgres\ndocker run --name some-postgres -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -d postgres\n```\n\nThis will start the server with the user `postgres` and the password `mysecretpassword` that will be listening for connection on the port 5432 of localhost.\n\nYou can then create a database in PostgreSQL for quetz tables:\n\n```bash\nsudo -u postgres psql -h localhost -c 'CREATE DATABASE quetz OWNER postgres;'\n```\n\n### Deploying Quetz with PostgreSQL backend\n\nThen in your configuration file (such as `dev_config.toml`) replace the `[sqlalchemy]` section with:\n\n```ini\n[sqlalchemy]\ndatabase_url = \"postgresql://postgres:mysecretpassword@localhost:5432/quetz\"\n```\n\nFinally, you can create and run a new quetz deployment based on this configuration (we assume that you saved it in file `config_postgres.toml`):\n\n```bash\nquetz run postgres_quetz --copy-conf config_postgres.toml \n```\n\nNote that this recipe will create an ephemeral PostgreSQL database and it will delete all data after the `some-postgres` container is stopped and removed. To make the data persistent, please check the documentation of the `postgres` [image](https://hub.docker.com/_/postgres/)  or your container orchestration system (Kubernetes or similar).\n\n### Running tests with PostgreSQL backend\n\nTo run the tests with the PostgreSQL database instead of the default SQLite, follow the steps [above](#running-postgresql-server-with-docker) to start the PG server. Then create an new database:\n\n```bash\npsql -U postgres -h localhost -c 'CREATE DATABASE test_quetz OWNER postgres;'\n```\n\nYou will be asked to type the password to the DB, which you defined when starting your PG server. In the docker-based instructions above, we set it to `mysecretpassword`.\n\nTo run the tests with this database you need to configure the `QUETZ_TEST_DATABASE` environment variable:\n\n```bash\nQUETZ_TEST_DATABASE=\"postgresql://postgres:mysecretpassword@localhost:5432/test_quetz\" pytest -v ./quetz/tests\n```\n\n## Frontend\n\nQuetz comes with a initial frontend implementation. It can be found in quetz_frontend.\nTo build it, one needs to install:\n\n```bash\nmamba install 'nodejs>=14'\ncd quetz_frontend\nnpm install\nnpm run build\n# for development\nnpm run watch\n```\n\nThis will build the javascript files and place them in `/quetz_frontend/dist/` from where they are automatically picked up by the quetz server.\n\n## License\n\nWe use a shared copyright model that enables all contributors to maintain the copyright on their contributions.\n\nThis software is licensed under the BSD-3-Clause license. See the [LICENSE](LICENSE) file for details.\n\n## Using quetz\n\n### Create a channel\n\nFirst, make sure you're logged in to the web app.\n\nThen, using the swagger docs at `<deployment url>:<port>/docs`, POST to `/api/channels` with the name and description of your new channel:\n\n```json\n{\n  \"name\": \"my-channel\",\n  \"description\": \"Description for my-channel\",\n  \"private\": false\n}\n```\n\nThis will create a new channel called `my-channel` and your user will be the Owner of that channel.\n\n### Generate an API key\n\nAPI keys are scoped per channel, per user and optionally per package.\nIn order to generate an API key the following must be true:\n\n1. First, make sure you're logged in to the web app.\n2. The user must be part of the target channel (you might need to create a channel first, see the previous section on how to create a channel via the swagger docs)\n3. Go to the swagger docs at `<deployment url>:<port>/docs` and POST to `/api/api-keys`:\n\n    ```json\n    {\n      \"description\": \"my-test-token\",\n      \"roles\": [\n        {\n          \"role\": \"owner\",\n          \"channel\": \"my-channel\"\n        }\n      ]\n    }\n    ```\n\n4. Then, GET on `/api/api-keys` to retrieve your token\n5. Finally, set this value to QUETZ_API_KEY so you can use quetz-client to interact with the server.\n\n### Create a proxy channel\n\nA proxy channel \"mirrors\" another channel usually from a different server, so that the packages can be installed from the proxy as if they were installed directly from that server. All downloaded packages are cached locally and the cache is always up to date (there is no risk of serving stale packages). The reason to use the proxy channel is to limit traffic to the server of origin or to serve a channel that could be inaccessible from behind the corporate firewall.\n\nTo create a proxy channel use the properties `mirror_channel_url=URL_TO_SOURCE_CHANNEL` and `mirror_mode='proxy'` in the POST method of `/api/channels` endpoint. For example, to proxy the channel named `btel` from anaconda cloud server, you might use the following request data:\n\n```json\n{\n  \"name\": \"proxy-channel\",\n  \"private\": false,\n  \"mirror_channel_url\": \"https://conda.anaconda.org/btel\",\n  \"mirror_mode\": \"proxy\"\n}\n```\n\nYou may copy the data directly to the Swagger web interface under the heading POST `/api/channels` or use the cURL tool from command line. Assuming that you deployed a quetz server on port 8000 (the default) on your local machine, you could make the request with the following cURL command:\n\n```bash\nexport QUETZ_API_KEY=...\ncurl -X POST \"http://localhost:8000/api/channels\" \\\n    -H  \"accept: application/json\" \\\n    -H  \"Content-Type: application/json\" \\\n    -H  \"X-API-Key: ${QUETZ_API_KEY}\" \\\n    -d '{\"name\":\"proxy-channel\",\n         \"private\":false,\n         \"mirror_channel_url\":\"https://conda.anaconda.org/btel\",\n         \"mirror_mode\":\"proxy\"}'\n```\n\nwhere the value of `QUETZ_API_KEY` variable should be the API key that was printed when you created the quetz deployment or retrieved using the API as described in the section [Generate an API key](#generate-an-api-key).\n\nThen you can install packages from the channel the standard way using `conda` or `mamba`:\n\n```bash\nmamba install --strict-channel-priority -c http://localhost:8000/get/proxy-channel nrnpython\n```\n\n### Create a mirroring channel\n\nA mirror channel is an exact copy of another channel usually from a different (anaconda or quetz) server. The packages are downloaded from that server and added to the mirror channel. The mirror channel supports the standard Quetz API except requests that would add or modify the packages (POST `/api/channels/{name}/files`, for example). Mirror channels can be used to off load traffic from the primary server, or to create a channel clone on the company Intranet.\n\nCreating a mirror channel is similar to creating proxy channels except that you need to change the value of `mirror_mode` attribute from `proxy` to `mirror` (and choose a more suitable channel name obviously):\n\n```json\n{\n  \"name\": \"mirror-channel\",\n  \"private\": false,\n  \"mirror_channel_url\": \"https://conda.anaconda.org/btel\",\n  \"mirror_mode\": \"mirror\"\n}\n```\n\nor with cURL:\n\n```bash\nexport QUETZ_API_KEY=...\ncurl -X POST \"http://localhost:8000/api/channels\" \\\n    -H  \"accept: application/json\" \\\n    -H  \"Content-Type: application/json\" \\\n    -H  \"X-API-Key: ${QUETZ_API_KEY}\" \\\n    -d '{\"name\":\"mirror-channel\",\n         \"private\":false,\n         \"mirror_channel_url\":\"https://conda.anaconda.org/btel\",\n         \"mirror_mode\":\"mirror\"}'\n```\n\nMirror channels are read only (you can not add or change packages in these channels), but otherwise they are fully functional Quetz channels and support all standard read (GET) operations. For example, you may list all packages using GET `/api/channels/{channel_name}/packages` endpoint:\n\n```bash\ncurl http://localhost:8000/api/channels/mirror-channel/packages\n```\n\nIf packages are added or modified on the primary server from which they were pulled initially, they won't be updated automatically in the mirror channel. However, you can trigger such synchronisation manually using the PUT `/api/channels/{channel_name}/actions` endpoint:\n\n```bash\ncurl -X PUT localhost:8000/api/channels/mirror-channel/actions \\\n   -H \"X-API-Key: ${QUETZ_API_KEY}\" \\\n   -d '{\"action\": \"synchronize\"}'\n```\n\nOnly channel owners or maintainers are allowed to trigger synchronisation, therefore you have to provide a valid API key of a privileged user.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mamba-org/quetz",
            "keywords": "conda,mamba,server",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "quetz-server",
            "package_url": "https://pypi.org/project/quetz-server/",
            "platform": "Linux",
            "project_url": "https://pypi.org/project/quetz-server/",
            "project_urls": {
                "Homepage": "https://github.com/mamba-org/quetz"
            },
            "release_url": "https://pypi.org/project/quetz-server/0.4.4/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "The mamba-org server for conda packages",
            "version": "0.4.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15105624,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6dc059cc0fb448fca2955b55fe0d007b",
                    "sha256": "41779f6c2b2e3c2dfb49bd2a1d7db9c1bfd30a7a60dd23d44c04081fba8981b5"
                },
                "downloads": -1,
                "filename": "quetz_server-0.4.4-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6dc059cc0fb448fca2955b55fe0d007b",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.7",
                "size": 208253,
                "upload_time": "2022-05-19T15:18:53",
                "upload_time_iso_8601": "2022-05-19T15:18:53.937571Z",
                "url": "https://files.pythonhosted.org/packages/e1/71/b5b184b59518830b395e7cc9b1e45876d99ccc143d4f2ae66a9f1ae7faf1/quetz_server-0.4.4-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c361057153b9aa39eb4a428daa21f922",
                    "sha256": "50292c6998cddb89b4820f341c01370899f562e60d1563084a579b2091871821"
                },
                "downloads": -1,
                "filename": "quetz-server-0.4.4.tar.gz",
                "has_sig": false,
                "md5_digest": "c361057153b9aa39eb4a428daa21f922",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 502958,
                "upload_time": "2022-05-19T15:18:51",
                "upload_time_iso_8601": "2022-05-19T15:18:51.553289Z",
                "url": "https://files.pythonhosted.org/packages/33/be/d6df0fd66b411b5d59173602ad7e6923733f5cb4560e3eea755db2f78c1f/quetz-server-0.4.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}