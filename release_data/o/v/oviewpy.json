{
    "1.0": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15062732,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1865ee6acc0d397969a6f2d1261b3da0",
                    "sha256": "51e2ba475ee95d2e21f4369004d38833563f607fc4882ed4378ef442468d1a8d"
                },
                "downloads": -1,
                "filename": "OViewPy-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1865ee6acc0d397969a6f2d1261b3da0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 11510,
                "upload_time": "2022-07-20T08:08:40",
                "upload_time_iso_8601": "2022-07-20T08:08:40.293673Z",
                "url": "https://files.pythonhosted.org/packages/f0/4d/9d94a99de8f45b0f62e067baea2aa207cdbdb5c4367860e3e1ef67d01596/OViewPy-1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15062732,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ead452001f672b997a4c68d8fbc3a37",
                    "sha256": "6b5221e5d732db36ce55df50e033880f06bdac5c45df4f764e8a7644c6134eb1"
                },
                "downloads": -1,
                "filename": "OViewPy-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5ead452001f672b997a4c68d8fbc3a37",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 11465,
                "upload_time": "2022-07-20T08:11:22",
                "upload_time_iso_8601": "2022-07-20T08:11:22.454826Z",
                "url": "https://files.pythonhosted.org/packages/63/1b/adad78da2995b294548a35360415d3c99c6a6a0e764565ccc35cb64b116b/OViewPy-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15062732,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "320aa5e158e50334f8c7c48b71420b77",
                    "sha256": "80880d9f1e4549769c45750e26c979254156a1f1c9562974ca0fba14893b0e7b"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "320aa5e158e50334f8c7c48b71420b77",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15823,
                "upload_time": "2022-08-22T07:29:35",
                "upload_time_iso_8601": "2022-08-22T07:29:35.483717Z",
                "url": "https://files.pythonhosted.org/packages/5e/ce/6db3593bdd9c3222cd5044ec9e5062cccdcdb4ad0b6b71e6b2021566cd67/OViewPy-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.1": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15062732,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2c942a7cd830f67b75f05be038020d90",
                    "sha256": "0ba1dad5d7d06ede71a547291e86c0a9f71ca0042809f5d7a3040564033430c4"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2c942a7cd830f67b75f05be038020d90",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15826,
                "upload_time": "2022-08-22T08:18:13",
                "upload_time_iso_8601": "2022-08-22T08:18:13.972502Z",
                "url": "https://files.pythonhosted.org/packages/82/5b/20eb2fcec17f0a21cb52cd47422c912b355d2006a9bff6863991198cee58/OViewPy-1.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.2": {
        "info": {
            "author": "louis.li",
            "author_email": "louis.li@pilotgaea.com.tw",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: GIS"
            ],
            "description": "# PilotGaea O'View Map Server API for Python\r\n\r\n\u4f7f\u7528 PilotGaea O'View Map Server API for Python \u5728 Python \u4e2d\u8655\u7406O'View Map Server\u767c\u5e03\u7684\u5730\u5716\u548c\u5730\u7406\u7a7a\u9593\u6578\u64da\u3002\r\n\r\n\u9019\u500blibrary\u53ef\u8b80\u53d6\u3001\u7de8\u8f2f\u3001\u5206\u6790\u3001\u4e0a\u67b6\u7531O'View Map Server\u767c\u5e03\u4e4b\u5730\u5716\u5716\u50cf\u8207\u5411\u91cf\u8cc7\u6599\uff0c\u4e26\u53ef\u900f\u904eAPI\u64cd\u4f5c\u8f38\u51fa\u53ca\u767c\u4f48\u8655\u7406\u5f8c\u7684\u6210\u679c\u3002\r\n\r\n\u6b64library\u53ea\u652f\u63f4\u7531 O'View Map Server \u767c\u4f48\u7684\u5716\u8cc7\uff0c\u66ab\u4e0d\u652f\u63f4\u5916\u90e8\u8cc7\u6599\u8655\u7406\u3002\r\n\r\n## \u5b89\u88ddPliotGaea Python Module\r\n\r\n```shell\r\npip install OViewPy\r\n```\r\n\r\n## \u521d\u59cb\u5316Server\u7269\u4ef6\r\n\r\n\u672c\u7ae0\u7bc0\u70baPliotGaea Python Module\u7684\u8d77\u59cb\u9ede\uff0c\u5728\u57f7\u884c\u6240\u6709\u64cd\u4f5c\u524d\u9808\u5148\u521d\u59cb\u5316Server\u7269\u4ef6\uff0c\u63d0\u4f9bModule\u53d6\u5f97Map Server\u8cc7\u6e90\u7684\u76f8\u95dc\u9023\u7dda\u8cc7\u8a0a\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n```\r\n\r\n\u7d81\u5b9aServer\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u53d6\u5f97Server\u76f8\u95dc\u8cc7\u8a0a\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u53d6\u5f97\u76ee\u524dServer\u7248\u672c\r\nprint(\"OView Map Server Version\uff1a\",server.version)\r\n# \u53d6\u5f97WMTS URL\r\nprint(\"WMTS URL\uff1a\",server.wmtsURL)\r\n# \u53d6\u5f97WMS URL\r\nprint(\"WMS URL\uff1a\",server.wmsURL)\r\n# \u53d6\u5f97DoCommand URL\r\nprint(\"DoCommand URL\uff1a\",server.docmdURL)\r\n```\r\n\r\n### \u53d6\u5f97\u5716\u5c64\u5217\u8868\r\n\r\n\u7d81\u5b9aServer\u7269\u4ef6\u5f8c\uff0c\u53ef\u900f\u904e`getLayerList`\u53d6\u5f972D\u5716\u5c64\u5217\u8868\u8a73\u7d30\u8cc7\u8a0a\u3002<br/>\r\n\u4ea6\u53ef\u4f7f\u7528`getOViewLayerList`\u53d6\u5f973D\u5716\u5c64\u5217\u8868\u8a73\u7d30\u8cc7\u8a0a\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nlayerList = server.getLayerList()\r\nOViewLayerList = server.getOViewLayerList()\r\nfor list in layerList:\r\n    print(\"\u5716\u5c64\u540d\u7a31\uff1a\",list[\"layername\"],\"\u5716\u5c64\u985e\u5225\uff1a\",list[\"type\"])\r\nprint(\"===========================================\")\r\nfor list in OViewLayerList:\r\n    print(\"\u5716\u5c64\u540d\u7a31\uff1a\",list[\"layername\"],\"\u5716\u5c64\u985e\u5225\uff1a\",list[\"type\"])\r\n\r\n```\r\n\r\n### \u522a\u9664\u5716\u5c64\r\n\r\n\u5982\u679c\u60f3\u8981\u522a\u9664Server\u4e2d\u5df2\u5b58\u5728\u7684\u5716\u5c64\uff0c\u53ef\u900f\u904e`deleteLayer`\u8207`deleteOViewLayer`\u5206\u5225\u522a\u96642D\u53ca3D\u5716\u5c64\u3002\r\n> \u6ce8\u610f\uff01\u6b64\u522a\u9664\u7121\u6cd5\u5fa9\u539f\uff0c\u8acb\u8b66\u614e\u4f7f\u7528\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nserver.deleteLayer(layerName=\"ne_10m_lakes\")\r\nserver.deleteOViewLayer(layerName=\"ModelSet\")\r\n```\r\n\r\n### \u4e0a\u67b6\u5716\u5c64\r\n\r\n#### \u5c07\u5716\u7247\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\r\n\r\n\u900f\u904e`saveImageToServer`\u53ef\u5c07\u5716\u7247(JPG\u3001PNG\u7b49)\u4e0a\u67b6\u81f3Server\r\n\r\n> \u9700\u7279\u5225\u6ce8\u610f\uff0c\u4e0a\u67b6\u7684\u5716\u7247\u9700\u5728Server\u7aef\u76ee\u9304\u5e95\u4e0b\uff0c\u4e26\u6709\u76f8\u5c0d\u61c9\u7684World File\uff0c\u4e14\u78ba\u8a8d\u5716\u5c64\u540d\u7a31\u4e0d\u662f\u5df2\u5b58\u5728\u7684\u5716\u5c64\u3002\r\n\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| imageFilePath | string | None | \u5716\u7247\u6a94\u6848\u4f4d\u7f6e |\r\n| layerName | string | None | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\r\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\nfrom OViewPy.da import da\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\r\nboundary=GeoBoundary(147522.218692, 2422004.773002,\r\n                         351690.114369, 2813163.248085)\r\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\r\nimg = layer.getMapImage(\r\n    boundary=boundary,\r\n    crs=\"EPSG:3826\",\r\n    width=512,\r\n    height=512,\r\n    format=\"image/png\"\r\n)\r\n# \u5132\u5b58\u5716\u7247\uff0c\u4e26\u751f\u6210World File\r\nda.saveImg(\r\n    img=img,\r\n    savePath=\".\",\r\n    imgName=\"testImage\",\r\n    imgType=\"png\",\r\n    worldFile=True,\r\n    boundary=boundary\r\n)\r\n# \u5c07\u5716\u7247\u4e0a\u67b6\u81f3Server\r\nserver.saveImageToServer(\r\n    imageFilePath=\"D:\\\\NCHCProject\\\\jupyter_notebook\\\\testImage.png\",\r\n    layerName=\"testImage\",\r\n    epsg=3826\r\n)\r\n```\r\n\r\n#### \u5c07SHP File\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\r\n\r\n\u900f\u904e`saveVectorFileToServer`\u53ef\u5c07Shp File\u4e0a\u67b6\u81f3Server\r\n\r\n> \u9700\u7279\u5225\u6ce8\u610f\uff0c\u4e0a\u67b6\u7684Shp File\u9700\u5728Server\u7aef\u76ee\u9304\u5e95\u4e0b\uff0c\u4e26\u78ba\u8a8d\u5716\u5c64\u540d\u7a31\u4e0d\u662f\u5df2\u5b58\u5728\u7684\u5716\u5c64\u3002\r\n\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| VectorFilePath | string | None | Shp File\u4f4d\u7f6e |\r\n| layerName | string | None | \u4e0a\u67b6\u5f8c\u7684\u5716\u5c64\u540d\u7a31 |\r\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\nfrom OViewPy.da import da\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\r\n# \u8a2d\u5b9a\u641c\u5c0b\u689d\u4ef6\r\nsql = \"County_ID==64\"\r\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\r\nret = map.getVectorEmtity(epsg=3826,sql=sql)\r\n# \u5c07\u5411\u91cf\u8cc7\u6599\u5b58\u6210SHP\u6a94\r\nda.saveAsShapeFile(sourceGeo=ret[\"geo\"],sourceAttr=ret[\"attr\"],fileName=\"TestShp_Kh\")\r\n# \u5c07SHP\u6a94\u4e0a\u67b6\u81f3\u4f3a\u670d\u5668\r\nserver.saveVectorFileToServer(VectorFilePath=\"D:\\\\NCHCProject\\\\jupyter_notebook\\\\TestShp_Kh.shp\",layerName=\"TestShp_Kh\",epsg=3826)\r\n```\r\n\r\n## Layer Module (2D Layer)\r\n\r\n### \u53d6\u5f97\u5716\u5c64\u7269\u4ef6\r\n\r\n\u6b64Module\u5206\u70ba`RasterLayer`\u8207`VectorLayer`\u5169\u7a2e\u5716\u5c64\uff0c\u5728\u521d\u59cb\u5316\u5716\u5c64\u6642\u8acb\u9078\u64c7\u6b63\u78ba\u7684\u5716\u5c64\u5206\u985e\u3002<br/>\r\n\u7b2c\u4e00\u500b\u53c3\u6578(`server`)\u653e\u7f6e\u5df2\u7d81\u5b9a\u7684Server\u7269\u4ef6\uff0c\u7b2c\u4e8c\u500b\u53c3\u6578(`layerName`)\u653e\u7f6e\u8981\u53d6\u5f97\u7684\u5716\u5c64\u540d\u7a31\u3002<br/>\r\n\u53d6\u5f97\u5716\u5c64\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u900f\u904e``getLayerInfo``\u53d6\u5f97\u5716\u5c64\u76f8\u95dc\u8cc7\u8a0a\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import RasterLayer,VectorLayer\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nraster = RasterLayer(server=server,layerName=\"GlobalPreview_Rough\")\r\nvector = VectorLayer(server=server,layerName=\"Town_MOI\")\r\nprint(raster.layerInfo)\r\nprint(vector.layerInfo)\r\n```\r\n\r\n\u900f\u904e``getMapImage``\u53ef\u53d6\u5f97\u7d66\u5b9a\u7bc4\u570d\u5167\u7684\u5730\u5716\u5716\u7247\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n\r\n> \u6b64Function\u9069\u7528\u65bc`RasterLayer`\u8207`VectorLayer`\u3002\r\n\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5716\u7247\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u7247\u3002 |\r\n| width | int | 512 | \u5716\u7247\u5bec\u5ea6 |\r\n| height | int | 512 | \u5716\u7247\u9ad8\u5ea6 |\r\n| crs | string | EPSG:4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\r\n| format | string | image/png | \u5716\u7247\u683c\u5f0f |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\nfrom OViewPy.da import da\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\r\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\r\nimg = layer.getMapImage(\r\n    boundary=GeoBoundary(147522.218692, 2422004.773002,\r\n                         351690.114369, 2813163.248085),\r\n    crs=\"EPSG:3826\",\r\n    width=512,\r\n    height=512,\r\n    format=\"image/png\"\r\n)\r\n# \u986f\u793a\u5716\u7247\r\nda.showImg(img)\r\n```\r\n\r\n\u5982\u679c\u5716\u5c64\u7269\u4ef6\u70ba`VectorLayer`\uff0c\u53ef\u900f\u904e`getVectorEmtity`\u53d6\u5f97\u4e00\u5b9a\u7bc4\u570d\u5167\u7684\u5411\u91cf\u8cc7\u6599\u3002<br/>\r\n\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| bound | GeoBoundary/GeoPolygon | None | \u6b32\u53d6\u5f97\u5411\u91cf\u8cc7\u6599\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u5c64\u5411\u91cf\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\r\n| sql | string | \"\" | \u641c\u5c0b\u689d\u4ef6 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\r\n# \u8a2d\u5b9a\u641c\u5c0b\u689d\u4ef6\r\nsql = \"County_ID=64\"\r\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\r\nret = map.getVectorEmtity(epsg=3826,sql=sql)\r\nprint(\"Geo\uff1a\", ret[\"geo\"][0].ToDict())\r\nprint(\"Attr\uff1a\", ret[\"attr\"][0].ToDict())\r\n```\r\n\r\n## OViewLayer Module \r\n\r\n\u6b64Module\u5206\u70ba`TerrainLayer`\u3001`PipeLineLayer`\u3001`ModelLayer`\u3001`ModelSetLayer`\u7b494\u7a2e3D\u6a21\u578b\u5716\u5c64\u3002<br/>\r\n\u7b2c\u4e00\u500b\u53c3\u6578(`server`)\u653e\u7f6e\u5df2\u7d81\u5b9a\u7684Server\u7269\u4ef6\uff0c\u7b2c\u4e8c\u500b\u53c3\u6578(`layerName`)\u653e\u7f6e\u8981\u53d6\u5f97\u7684\u5716\u5c64\u540d\u7a31\u3002<br/>\r\n\u53d6\u5f97\u5716\u5c64\u7269\u4ef6\u5f8c\uff0c\u5373\u53ef\u900f\u904e``getLayerInfo``\u53d6\u5f97\u5716\u5c64\u76f8\u95dc\u8cc7\u8a0a\u3002\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer, PipeLineLayer, ModelLayer, ModelSetLayer\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nPipeLine = PipeLineLayer(server=server, layerName=\"TaichungPipeline\")\r\nModel = ModelLayer(server=server, layerName=\"ChungHsingBIM\")\r\nModelSet = ModelSetLayer(server=server, layerName=\"TaichungKMZ\")\r\nprint(Terrain.layerInfo)\r\nprint(PipeLine.layerInfo)\r\nprint(Model.layerInfo)\r\nprint(ModelSet.layerInfo)\r\n```\r\n\r\n### TerrainLayer\r\n\r\n#### getDEMMatrix\r\n\r\n`TerrainLayer`\u53ef\u900f\u904e`getDEMMatrix`\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u8cc7\u6599\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\r\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | boundary EPSG |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(\r\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nboundary = GeoBoundary(119.981273, 21.892673,\r\n                       122.010898, 25.424327)\r\nmatrix = Terrain.getDEMMatrix(boundary=boundary, cellDemSize=500, epsg=4326)\r\nprint(type(matrix))\r\n```\r\n\r\n#### hillshadeAnalysis\r\n\r\n\u53d6\u5f97\u5c71\u9ad4\u9670\u5f71\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\r\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | boundary EPSG |\r\n| azimuth | int | 30 | \u592a\u967d\u65b9\u4f4d\u89d2 |\r\n| altitude | int | 30 | \u592a\u967d\u9ad8\u5ea6\u89d2 |\r\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\r\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\r\n| width | int | 21600 | \u5716\u7247\u5bec |\r\n| height | int | 21600 | \u5716\u7247\u9ad8 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(\r\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nboundary = GeoBoundary(119.981273, 21.892673,\r\n                       122.010898, 25.424327)\r\nTerrain.hillshadeAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\r\n                          azimuth=150, altitude=60,\r\n                          savePath=\".\", fileName=\"defaultHillShade\", width=10800, height=21600)\r\n\r\n```\r\n\r\n#### slopeAnalysis\r\n\r\n\u53d6\u5f97\u5761\u5ea6\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\r\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | boundary EPSG |\r\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\r\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\r\n| width | int | 21600 | \u5716\u7247\u5bec |\r\n| height | int | 21600 | \u5716\u7247\u9ad8 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(\r\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nboundary = GeoBoundary(119.981273, 21.892673,\r\n                       122.010898, 25.424327)\r\nTerrain.slopeAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\r\n                      savePath=\".\", fileName=\"defaultSlope\", width=10800, height=21600)\r\n\r\n```\r\n\r\n#### aspectAnalysis\r\n\r\n\u53d6\u5f97\u5761\u5411\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70baGeoTiff\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\r\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | boundary EPSG |\r\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\r\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\r\n| width | int | 21600 | \u5716\u7247\u5bec |\r\n| height | int | 21600 | \u5716\u7247\u9ad8 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(\r\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nboundary = GeoBoundary(119.981273, 21.892673,\r\n                       122.010898, 25.424327)\r\nTerrain.aspectAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,\r\n                      savePath=\".\", fileName=\"defaultAspect\", width=10800, height=21600)\r\n\r\n```\r\n\r\n#### contourLineAnalysis\r\n\r\n\u53d6\u5f97\u7b49\u9ad8\u7dda\u5206\u6790\uff0c\u5206\u6790\u7d50\u679c\u5c07\u5b58\u70bapng/GeoJson\uff0c\u6b64Function\u7684\u53c3\u6578\u5982\u4e0b\uff1a\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| boundary | GeoBoundary | None | \u6b32\u53d6\u5f97\u5730\u5f62\u7db2\u683c\u7bc4\u570d\u3002 |\r\n| cellDemSize | int | 500 | \u5730\u5f62\u7db2\u683c\u6578\uff0c\u5c07\u53d6\u5f97n*n\u500b\u7db2\u683c\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | boundary EPSG |\r\n| savePath | string | \".\" | \u6a94\u6848\u5132\u5b58\u4f4d\u7f6e |\r\n| fileName | string | \"defaultDEM\" | \u6a94\u6848\u540d\u7a31 |\r\n| fileType | string | \"image\" | \u5132\u5b58\u985e\u578b\uff0c\"image\" / \"geojson\" |\r\n| width | int | 21600 | \u5716\u7247\u5bec |\r\n| height | int | 21600 | \u5716\u7247\u9ad8 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import TerrainLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nTerrain = TerrainLayer(\r\n    server=server, layerName=\"gebco_2021_geotiff_retransfer\")\r\nboundary = GeoBoundary(119.981273, 21.892673,\r\n                       122.010898, 25.424327)\r\nTerrain.contourLineAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,fileType=\"image\",\r\n                      savePath=\".\", fileName=\"defaultContourLine\", width=10800, height=21600)\r\nTerrain.contourLineAnalysis(boundary=boundary, cellDemSize=500, epsg=4326,fileType=\"geojson\",\r\n                      savePath=\".\", fileName=\"defaultContourLine\")\r\n```\r\n\r\n### OViewEmtityLayer\r\n\r\n\u9664\u4e86`TerrainLayer`\u5916\uff0c\u5176\u9918\u4e09\u7a2e\u5716\u5c64\u7686\u5c6c\u65bc`OViewEmtityLayer`\uff0c\u53ef\u900f\u904e`getVectorEmtity`\u53d6\u5f97\u5716\u5c64Emtity\u3002\r\n\u6b64Function\u53c3\u6578\u5982\u4e0b\uff1a\r\n\r\n| \u53c3\u6578\u540d\u7a31 | Type | \u9810\u8a2d\u503c | \u8aaa\u660e |\r\n| :-----: | :---: | :---: | :--: |\r\n| bound | GeoBoundary/GeoPolygon | None | \u6b32\u53d6\u5f97\u5411\u91cf\u8cc7\u6599\u7bc4\u570d\u3002\u5982\u672a\u7d66\u503c\uff0c\u5c07\u76f4\u63a5\u53d6\u5f97\u5b8c\u6574\u5716\u5c64\u5411\u91cf\u8cc7\u6599\u3002 |\r\n| epsg | int | 4326 | \u5ea7\u6a19\u53c3\u8003\u7cfb\u7d71 |\r\n| sql | string | \"\" | \u641c\u5c0b\u689d\u4ef6 |\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.oviewlayer import PipeLineLayer, ModelLayer, ModelSetLayer\r\n\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\nPipeLine = PipeLineLayer(server=server, layerName=\"TaichungPipeline\")\r\n# Model = ModelLayer(server=server, layerName=\"ChungHsingBIM\")\r\n# ModelSet = ModelSetLayer(server=server, layerName=\"TaichungKMZ\")\r\nret = PipeLine.getVectorEmtity()\r\nprint(\"Geo\uff1a\", ret[\"geo\"][0].ToDict())\r\nprint(\"Attr\uff1a\", ret[\"attr\"][0].ToDict())\r\n```\r\n\r\n## Data Access Module\r\n\r\n### \u4f7f\u7528\u8cc7\u6599\u8655\u7406\u6a21\u7d44\r\n\r\n\u6b64\u6a21\u7d44\u53ef\u5c07\u53d6\u5f97\u7684\u8cc7\u6599\u8f49\u63db\u6210Python\u5e38\u7528\u7684Numpy\u3001Shapely\u7b49\u8cc7\u6599\u683c\u5f0f\uff0c\u4ee5\u4f9b\u958b\u767c\u8005\u65b9\u4fbf\u8a08\u7b97\u3002\r\n\r\n#### \u5716\u7247(Bytes)\u8207Numpy Array\u8f49\u63db\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\nfrom OViewPy.da import da\r\nimport cv2\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nlayer = VectorLayer(server=server,layerName=\"Town_MOI\")\r\n# \u53d6\u5f97\u5716\u7247\uff0c\u53d6\u5f97\u6210\u529f\u6703\u56de\u50b3\u5716\u7247bytes\u8cc7\u6599\r\nimg = layer.getMapImage(\r\n    boundary=GeoBoundary(147522.218692, 2422004.773002,\r\n                         351690.114369, 2813163.248085),\r\n    crs=\"EPSG:3826\",\r\n    width=512,\r\n    height=512,\r\n    format=\"image/png\"\r\n)\r\n# \u5c07\u5716\u7247\u8f49\u63db\u6210Numpy Array\r\nnpArray = da.imgToNumPyArray(img)\r\n# \u900f\u904ecv2\u8b80\u53d6Numpy Array\r\nimage = cv2.imdecode(npArray, cv2.IMREAD_UNCHANGED)\r\n# \u8655\u7406\u6210\u9ad8\u65af\u6a21\u7cca\r\nblurred = cv2.GaussianBlur(image, (51, 51), 0)\r\n# \u5c07\u8655\u7406\u5f8c\u7684\u5716\u7247\u8f49\u6210jpg\u7de8\u78bc\r\nblurred = cv2.imencode('.jpg',blurred)[1]\r\n# \u5c07Numpy Array \u8f49\u56de Bytes\u683c\u5f0f\r\nblurred = da.numPyArrayToImg(blurred)\r\n# \u986f\u793a\u5716\u7247\r\nda.showImg(blurred)\r\n# \u5132\u5b58\u5716\u7247\r\nda.saveImg(img=blurred, savePath=\".\", imgName=\"\u9ad8\u65af\u6a21\u7cca\", imgType=\"jpg\")\r\n```\r\n\r\n#### \u5411\u91cf\u683c\u5f0f\u8f49\u63db\u6210Numpy Array\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\nfrom OViewPy.da import da\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nmap = VectorLayer(server=server, layerName=\"Town_MOI\")\r\n# \u8a2d\u5b9a\u7bc4\u570d\r\ngeo = GeoBoundary(147522.218692, 2422004.773002,\r\n                  351690.114369, 2813163.248085)\r\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\r\nret = map.getVectorEmtity(bound=geo,epsg=3826)\r\n# \u5c07\u5411\u91cf\u8cc7\u6599\u8f49\u63db\u6210Numpy\r\nnpRet = da.vectorEmtityToNumPyArray(ret[\"geo\"])\r\n# \u986f\u793a\u8cc7\u6599\u985e\u578b\r\nprint(type(npRet[0]))\r\n```\r\n\r\n#### \u5411\u91cf\u683c\u5f0f\u8f49\u63db\u6210Shapely\r\n\r\n```python\r\nfrom OViewPy.server import Server\r\nfrom OViewPy.layer import VectorLayer\r\nfrom OViewPy.varstruct import GeoBoundary\r\n\r\n# \u7d81\u5b9aServer\u7269\u4ef6\r\nserver = Server(url=\"http://127.0.0.1:8080\")\r\n# \u7d81\u5b9aLayer\u7269\u4ef6\r\nmap = VectorLayer(server=server,layerName=\"Town_MOI\")\r\n# \u8a2d\u5b9a\u7bc4\u570d\r\ngeo = GeoBoundary(147522.218692, 2422004.773002,\r\n                  351690.114369, 2813163.248085)\r\n# \u53d6\u5f97\u5411\u91cf\u8cc7\u6599\r\nret = map.getVectorEmtity(bound=geo)\r\n# \u5c07\u5411\u91cf\u8cc7\u6599\u8f49\u63db\u6210Numpy\r\nshpRet = da.vectorEmtityToShapely(ret[\"geo\"])\r\n# \u986f\u793a\u8cc7\u6599\u985e\u578b\r\nprint(type(shpRet[0]))\r\n```\r\n\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PilotGaea/OViewPy",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "OViewPy",
            "package_url": "https://pypi.org/project/OViewPy/",
            "platform": null,
            "project_url": "https://pypi.org/project/OViewPy/",
            "project_urls": {
                "Homepage": "https://github.com/PilotGaea/OViewPy"
            },
            "release_url": "https://pypi.org/project/OViewPy/1.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "PilotGaea O'View Map Server API for Python",
            "version": "1.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15062732,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "65c67726c25c0fb2ad29968d63ac7b4f",
                    "sha256": "a2dbe810a1efd054a7aa52f7070b0135e3205450edb1cfecf137184762efc28b"
                },
                "downloads": -1,
                "filename": "OViewPy-1.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "65c67726c25c0fb2ad29968d63ac7b4f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 16999,
                "upload_time": "2022-08-24T08:59:37",
                "upload_time_iso_8601": "2022-08-24T08:59:37.206730Z",
                "url": "https://files.pythonhosted.org/packages/20/a9/4f3287b153266bb3fc20501f6010b0ad4e13a33c319be940df18fda523a2/OViewPy-1.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}