{
    "0.9.1": {
        "info": {
            "author": "Studer Innotec SA",
            "author_email": "develop@studer-innotec.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Communications",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "Package **xcom485i**\n=========================\n\nPython library to access Studer-Innotec Xcom-485i device through Modbus RTU over a serial port\n\nPrerequisites\n----------------\n\nPlease read the complete documentation available on : `Studer Innotec SA`_ *-> Support -> Download Center -> Software and Updates -> Communication protocols Xcom-CAN*\n\nGetting Started\n----------------\n\n1. Package installation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code-block:: console\n\n    $ pip install xcom485i\n\n2. Hardware installation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- Connect your *Xcom-485i* (Studer side) to your installation using the cable provided with the device\n- Connect your *Xcom-485i* (External side) to your controller (personal computer, Raspberry Pi, etc.) using a *USB* to *RS-485* adapter\n- Please refer to the *Xcom-485i* manual for more information about commissioning the device\n\n3. Serial configuration\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThis package rely on `pyserial`_ standard package, in order to use the **xcom485i** package make sure to instantiate it like :\n\n.. code-block:: python\n\n    import serial\n\n    serial_port = serial.Serial(SERIAL_PORT_NAME, SERIAL_PORT_BAUDRATE, parity=serial.PARITY_EVEN, timeout=1)\n\n- where `SERIAL_PORT_NAME` is your serial port interface, for example set it to *'COM4'* (string argument) when using *Windows* otherwise you may set it to *'/dev/ttyUSB0/'* on *Linux*\n- where `SERIAL_PORT_BAUDRATE` is the baudrate used by your serial port interface (must be set to 9600, 19200, 38400 or 115200 according to *Xcom-485i* dip-switches)\n\n**Xcom-485i Dip switches baud rate selection**\n\n=====   =====   ===========\nN\u00b0 7    N\u00b0 8    Baudrate\n=====   =====   ===========\nOFF     OFF     9600   bps\nOFF     ON      19200  bps\nON      OFF     38400  bps\nON      ON      115200 bps\n=====   =====   ===========\n\n4. Address offset\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nSet the modbus offset corresponding to the internal dip-switches of your *Xcom-485i* device, it must be set to 0, 32, 64 or 128.\n\nIt is done when instantiate the *Xcom485i* class like :\n\n.. code-block:: python\n\n    xcom485i = Xcom485i(serial_port, OFFSET, debug=True)\n\n- where `serial_port` is the previously created object with *Serial*\n- where `OFFSET` is your actual modbus address offset set by the dip-switches inside your *Xcom-485i*\n- where `debug` enables you to get some useful console information for debugging purpose\n\n**Xcom-485i Dip switches address offset selection**\n\n=====   =====   ===============   ==============\nN\u00b0 1    N\u00b0 2    Address offset    Address range\n=====   =====   ===============   ==============\nOFF     OFF     0                 1 to 63\nOFF     ON      32                33 to 95\nON      OFF     64                65 to 127\nON      ON      128               129 to 192\n=====   =====   ===============   ==============\n\n5. Run an example from `/examples` folder\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nGo to */examples* folder with a terminal and execute this script\n\n.. code-block:: console\n\n    $ python ex_read_info.py\n\nCheck `client file`_ to understand it.\n\n6. Open documentation\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nOpen documentation from `Read The Docs`_\n\nWarnings\n----------------\n\n- **Please** check carefully the serial configuration, the *Xcom-485i* dip-switches configuration as well as the jumper for D+, D- and GND signals\n- **Use** devices addresses generated into `addresses file`_\n- It is strongly recommended **NOT** to spam the *Xcom-485i* with multiple requests. The correct way to communicate with the *Xcom-485i* is to send a request and to **wait** for the response before sending the next request. If no response comes from the *Xcom-485i* after a delay of 1 second, we can consider that the timeout is over and another request can be send. It is also how *Modbus RTU* is intended to work.\n\nAuthors\n----------------\n\n**Studer Innotec SA** - *Initial work* - `Studer Innotec SA`_\n\nLicense\n----------------\n\nThis project is licensed under the MIT License - see the `LICENSE`_ file for details\n\n.. External References:\n.. _Studer Innotec SA: https://www.studer-innotec.com\n.. _addresses file: https://xcom485i.readthedocs.io/en/latest/addresses.html\n.. _client file: https://xcom485i.readthedocs.io/en/latest/client.html\n.. _Read The Docs: https://xcom485i.readthedocs.io/en/latest/index.html\n.. _LICENSE: https://xcom485i.readthedocs.io/en/latest/license.html\n.. _pyserial: https://pyserial.readthedocs.io/en/latest/shortintro.html\n\n\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/studer-innotec/xcom485i",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "develop@studer-innotec.com",
            "name": "xcom485i",
            "package_url": "https://pypi.org/project/xcom485i/",
            "platform": "",
            "project_url": "https://pypi.org/project/xcom485i/",
            "project_urls": {
                "Documentation": "https://xcom485i.readthedocs.io/en/latest/index.html",
                "Homepage": "https://github.com/studer-innotec/xcom485i",
                "Issues tracker": "https://github.com/studer-innotec/xcom485i/issues",
                "Source Code": "https://github.com/studer-innotec/xcom485i"
            },
            "release_url": "https://pypi.org/project/xcom485i/0.9.1/",
            "requires_dist": [
                "uModbus (==1.0.3)",
                "pyserial (>=3.4)"
            ],
            "requires_python": ">=3.6.8",
            "summary": "Package that let easily interact with the Xcom-485i device over Modbus RTU",
            "version": "0.9.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 6827544,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a4f5a01760c5d73dd308ec31c46f82c1",
                    "sha256": "1ebd34c7d5b56d5cafe244ec6cedbdc917ba5c3f95e5f2363898a36036c0d3d2"
                },
                "downloads": -1,
                "filename": "xcom485i-0.9.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a4f5a01760c5d73dd308ec31c46f82c1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6.8",
                "size": 9063,
                "upload_time": "2020-03-17T10:03:55",
                "upload_time_iso_8601": "2020-03-17T10:03:55.266945Z",
                "url": "https://files.pythonhosted.org/packages/54/a2/beba763b5a69c5cec31d3076268f9cb5095f970e500a6186889a8135f4fe/xcom485i-0.9.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a5146b872986e1e468b7db5d0bcff7a2",
                    "sha256": "7c516e5b4119ce56887882946535ec6612d07940521c2f8ebe396d1a9f7c2be8"
                },
                "downloads": -1,
                "filename": "xcom485i-0.9.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a5146b872986e1e468b7db5d0bcff7a2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6.8",
                "size": 10174,
                "upload_time": "2020-03-17T10:03:57",
                "upload_time_iso_8601": "2020-03-17T10:03:57.689823Z",
                "url": "https://files.pythonhosted.org/packages/91/30/3ed630c037aa4cdbfbd0591b30e35d5c57820da034895464292a81e76fdc/xcom485i-0.9.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}