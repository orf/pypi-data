{
    "0.2.1": {
        "info": {
            "author": "Ronan Stokes, Databricks",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Software Development :: Testing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/databrickslabs/data-generator",
            "keywords": "",
            "license": "Databricks License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dbldatagen",
            "package_url": "https://pypi.org/project/dbldatagen/",
            "platform": null,
            "project_url": "https://pypi.org/project/dbldatagen/",
            "project_urls": {
                "Databricks Labs": "https://www.databricks.com/learn/labs",
                "Documentation": "https://databrickslabs.github.io/dbldatagen/public_docs/index.html",
                "Homepage": "https://github.com/databrickslabs/data-generator"
            },
            "release_url": "https://pypi.org/project/dbldatagen/0.2.1/",
            "requires_dist": null,
            "requires_python": ">=3.7.5",
            "summary": "Databricks Labs -  PySpark Synthetic Data Generator",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15959254,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "777eea55e4f2c9915031406c6ed502d6",
                    "sha256": "e3cb6fc530a0857078179515ad39d34266a6465d8b72c33e1a030264c54f7572"
                },
                "downloads": -1,
                "filename": "dbldatagen-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "777eea55e4f2c9915031406c6ed502d6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7.5",
                "size": 68451,
                "upload_time": "2022-10-10T06:46:04",
                "upload_time_iso_8601": "2022-10-10T06:46:04.718475Z",
                "url": "https://files.pythonhosted.org/packages/2b/b8/50e45b2678f4153e5ca49d70c4dc884661deae988f78fefe0adc815c601c/dbldatagen-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "afcdf3a71299fab909868d0fc32e1c1e",
                    "sha256": "c888de1e68b07928f4b977586018dfb54ceba725475dc303b926147074114c06"
                },
                "downloads": -1,
                "filename": "dbldatagen-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "afcdf3a71299fab909868d0fc32e1c1e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7.5",
                "size": 62894,
                "upload_time": "2022-10-10T06:46:06",
                "upload_time_iso_8601": "2022-10-10T06:46:06.495813Z",
                "url": "https://files.pythonhosted.org/packages/f4/dc/1a9376c38ffb231002c7f0024d29f882374e7512f5fda2aa7361b713e64f/dbldatagen-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "Ronan Stokes, Databricks",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Software Development :: Testing"
            ],
            "description": "# Databricks Labs Data Generator (`dbldatagen`) \n\n<!-- Top bar will be removed from PyPi packaged versions -->\n\n[![build](https://github.com/databrickslabs/dbldatagen/workflows/build/badge.svg?branch=master)](https://github.com/databrickslabs/dbldatagen/actions?query=workflow%3Abuild+branch%3Amaster)\n[![codecov](https://codecov.io/gh/databrickslabs/dbldatagen/branch/master/graph/badge.svg)](https://codecov.io/gh/databrickslabs/dbldatagen)\n[![downloads](https://img.shields.io/github/downloads/databrickslabs/dbldatagen/total.svg)](https://hanadigital.github.io/grev/?user=databrickslabs&repo=dbldatagen)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/databrickslabs/dbldatagen.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/databrickslabs/dbldatagen/context:python)\n\n## Project Description\nThe `dbldatgen` Databricks Labs project is a Python library for generating synthetic data within the Databricks \nenvironment using Spark. The generated data may be used for testing, benchmarking, demos and many \nother uses.\n\nIt operates by defining a data generation specification in code that controls \nhow the synthetic data is to be generated.\nThe specification may incorporate use of existing schemas, or create data in an adhoc fashion.\n\nIt has no dependencies on any libraries that are not already incuded in the Databricks \nruntime, and you can use it from Scala, R or other languages by defining\na view over the generated data.\n\n### Feature Summary\nIt supports:\n* Generating synthetic data at scale up to billions of rows within minutes using appropriately sized clusters \n* Generating repeatable, predictable data supporting the needs for producing multiple tables, Change Data Capture, \nmerge and join scenarios with consistency between primary and foreign keys\n* Generating synthetic data for all of the \nSpark SQL supported primitive types as a Spark data frame which may be persisted, \nsaved to external storage or \nused in other computations\n* Generating ranges of dates, timestamps and numeric values\n* Generation of discrete values - both numeric and text\n* Generation of values at random and based on the values of other fields \n(either based on the `hash` of the underlying values or the values themselves)\n* Ability to specify a distribution for random data generation \n* Generating arrays of values for ML style feature arrays\n* Applying weights to the occurrence of values\n* Generating values to conform to a schema or independent of an existing schema\n* use of SQL expressions in test data generation\n* plugin mechanism to allow use of 3rd party libraries such as Faker\n* Use within a Databricks Delta Live Tables pipeline as a synthetic data generation source\n\nDetails of these features can be found in the online documentation  -\n [online documentation](https://databrickslabs.github.io/dbldatagen/public_docs/index.html). \n\n## Documentation\n\nPlease refer to the [online documentation](https://databrickslabs.github.io/dbldatagen/public_docs/index.html) for \ndetails of use and many examples.\n\nRelease notes and details of the latest changes for this specific release\ncan be found in the Github repository\n[here](https://github.com/databrickslabs/dbldatagen/blob/release/v0.3.0/CHANGELOG.md)\n\n# Installation\n\nUse `pip install dbldatagen` to install the PyPi package\n\nWithin a Databricks notebook, invoke the following in a notebook cell\n```commandline\n%pip install dbldatagen\n```\n\nThis can be invoked within a Databricks notebook, a Delta Live Tables pipeline and even works on the Databricks \ncommunity edition.\n\nThe documentation [installation notes](https://databrickslabs.github.io/dbldatagen/public_docs/installation_notes.html) \ncontains details of installation using alternative mechanisms.\n\n## Compatibility \nThe Databricks Labs data generator framework can be used with Pyspark 3.1.2 and Python 3.8 or later. These are \ncompatible with the Databricks runtime 9.1 LTS and later releases.\n\nOlder prebuilt releases are tested against Pyspark 3.0.1 (compatible with the Databricks runtime 7.3 LTS \nor later) and built with Python 3.7.5\n\nFor full library compatibility for a specific Databricks Spark release, see the Databricks \nrelease notes for library compatibility\n\n- https://docs.databricks.com/release-notes/runtime/releases.html\n\n## Using the Data Generator\nTo use the data generator, install the library using the `%pip install` method or install the Python wheel directly \nin your environment.\n\nOnce the library has been installed, you can use it to generate a data frame composed of synthetic data.\n\nFor example\n\n```buildoutcfg\nimport dbldatagen as dg\nfrom pyspark.sql.types import IntegerType, FloatType, StringType\ncolumn_count = 10\ndata_rows = 1000 * 1000\ndf_spec = (dg.DataGenerator(spark, name=\"test_data_set1\", rows=data_rows,\n                                                  partitions=4)\n                            .withIdOutput()\n                            .withColumn(\"r\", FloatType(), \n                                             expr=\"floor(rand() * 350) * (86400 + 3600)\",\n                                             numColumns=column_count)\n                            .withColumn(\"code1\", IntegerType(), minValue=100, maxValue=200)\n                            .withColumn(\"code2\", IntegerType(), minValue=0, maxValue=10)\n                            .withColumn(\"code3\", StringType(), values=['a', 'b', 'c'])\n                            .withColumn(\"code4\", StringType(), values=['a', 'b', 'c'], \n                                           random=True)\n                            .withColumn(\"code5\", StringType(), values=['a', 'b', 'c'], \n                                           random=True, weights=[9, 1, 1])\n\n                            )\n                            \ndf = df_spec.build()\nnum_rows=df.count()                          \n```\nRefer to the [online documentation](https://databrickslabs.github.io/dbldatagen/public_docs/index.html) for further \nexamples. \n\nThe Github repository also contains further examples in the examples directory\n\n## Project Support\nPlease note that all projects released under [`Databricks Labs`](https://www.databricks.com/learn/labs)\n are provided for your exploration only, and are not formally supported by Databricks with Service Level Agreements \n(SLAs).  They are provided AS-IS and we do not make any guarantees of any kind.  Please do not submit a support ticket \nrelating to any issues arising from the use of these projects.\n\nAny issues discovered through the use of this project should be filed as issues on the Github Repo.  \nThey will be reviewed as time permits, but there are no formal SLAs for support.\n\n\n## Feedback\n\nIssues with the application?  Found a bug?  Have a great idea for an addition?\nFeel free to file an [issue](https://github.com/databrickslabs/dbldatagen/issues/new).\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/databrickslabs/data-generator",
            "keywords": "",
            "license": "Databricks License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dbldatagen",
            "package_url": "https://pypi.org/project/dbldatagen/",
            "platform": null,
            "project_url": "https://pypi.org/project/dbldatagen/",
            "project_urls": {
                "Databricks Labs": "https://www.databricks.com/learn/labs",
                "Documentation": "https://databrickslabs.github.io/dbldatagen/public_docs/index.html",
                "Homepage": "https://github.com/databrickslabs/data-generator"
            },
            "release_url": "https://pypi.org/project/dbldatagen/0.3.0/",
            "requires_dist": null,
            "requires_python": ">=3.8.10",
            "summary": "Databricks Labs -  PySpark Synthetic Data Generator",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15959254,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8f2fdeebe91d8c3118473c264969f06b",
                    "sha256": "c35c4f61569ea14ab490e44655836e8138426178bf2b1fcf9688f6f0908ed3d9"
                },
                "downloads": -1,
                "filename": "dbldatagen-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8f2fdeebe91d8c3118473c264969f06b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.10",
                "size": 69338,
                "upload_time": "2022-12-01T18:57:22",
                "upload_time_iso_8601": "2022-12-01T18:57:22.898684Z",
                "url": "https://files.pythonhosted.org/packages/fd/dd/6c22146aaf69fa56034510e912b3528353681796e30a9167e53c785dab5b/dbldatagen-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "589332d1497ed7ddb67272bfcf1a4cb0",
                    "sha256": "020abef3c05e4ead322904f06262e2843b4517762c03511719f07a6ae122ab5d"
                },
                "downloads": -1,
                "filename": "dbldatagen-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "589332d1497ed7ddb67272bfcf1a4cb0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.10",
                "size": 64533,
                "upload_time": "2022-12-01T18:57:24",
                "upload_time_iso_8601": "2022-12-01T18:57:24.384033Z",
                "url": "https://files.pythonhosted.org/packages/8c/98/6db019771475bfcba60d0cbf03184bd6e50c888c04132cb7112f353d4cd3/dbldatagen-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}