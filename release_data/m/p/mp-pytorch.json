{
    "0.1.1": {
        "info": {
            "author": "Ge Li @ ALR, KIT",
            "author_email": "ge.li@kit.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python :: 3"
            ],
            "description": "# MP_PyTorch: The Movement Primitives Package in PyTorch\n\nMP_PyTorch package focus on **Movement Primitives(MPs) on Imitation Learning(IL) and Reinforcement Learning(RL)** and provides convenient movement primitives interface implemented by PyTorch, including DMPs, ProMPs and [ProDMPs](https://arxiv.org/abs/2210.01531). \nUsers can also implement custom Movement Primitives according to the basis and phase generator. Further, advanced NN-based Movement Primitives Algorithm can also be realized according to the convenient PyTorch-based Interface.\nThis package aims to building a movement primitives toolkit which could be combined with modern imitation learning and reinforcement learning algorithm.  \n\n<!--\n## Dependencies:\npytorch, addict, numpy, matplotlib\n-->\n\n&nbsp;\n## Installation\n\nFor the installation we recommend you set up a conda environment or venv beforehand. \n\nThis package will automatically install the following dependencies: addict, numpy, pytorch and matplotlib.\n\n### 1. Install from PyPI\n```bash\npip install mp_pytorch\n```\n\n### 2. Install from source\n\n```bash \ngit clone git@github.com:ALRhub/MP_PyTorch.git\ncd mp_pytorch\npip install -e .\n```\n\nAfter installation, you can import the package easily.\n```bash\nimport mp_pytorch\nfrom mp_pytorch import MPFactory\n```\n\n&nbsp;\n## Quickstart\nFor further information, please refer to the [User Guide](./doc/README.md).\n\nThe main steps to create ProDMPs instance and generate trajectories are as follows:\n\n### 1. Edit configuration \nSuppose you have edited the required configuration.\nYou can view the demo and check how to edit the configuration in [Edit Configuration](./doc/02_config.md).\n```python\n# config, times, params, params_L, bc_time, bc_pos, bc_vel, demos = get_mp_utils(\"prodmp\", True, True)\n```\n\n### 2. Initial prodmp instance and update inputs\n```python\nmp = MPFactory.init_mp(**config)\nmp.update_inputs(times=times, params=params, params_L=params_L,\n                 bc_time=bc_time, bc_pos=bc_pos, bc_vel=bc_vel)\n\n# you can also choose to learn parameters from demonstrations.\nparams_dict = mp.learn_mp_params_from_trajs(times, demos)\n```\n\n### 3. Generate trajectories\n```python\ntraj_dict = mp.get_trajs(get_pos=True, get_pos_cov=True,\n                         get_pos_std=True, get_vel=True,\n                         get_vel_cov=True, get_vel_std=True)\n\n# for probablistic movement primitives, you can also choose to sample trajectories\nsamples, samples_vel = mp.sample_trajectories(num_smp=10)\n```\n\nThe structure of this package can be seen as follows:\n\n| Types                   | Classes                                  | Description                                                                  |\n|-------------------------|------------------------------------------|------------------------------------------------------------------------------|\n| **Phase Generator**     | `PhaseGenerator`                         | Interface for Phase Generators                                               |       \n|                         | `RhythmicPhaseGenerator`                 | Rhythmic phase generator                                                     |       \n|                         | `SmoothPhaseGenerator`                   | Smooth phase generator                                                       |       \n|                         | `LinearPhaseGenerator`                   | Linear phase generator                                                       |       \n|                         | `ExpDecayPhaseGenerator`                 | Exponential decay phase generator                                            |       \n| **Basis Generator**     | `BasisGenerator`                         | Interface for Basis Generators                                               |       \n|                         | `RhythmicBasisGenerator`                 | Rhythmic basis generator                                                     |       \n|                         | `NormalizedRBFBasisGenerator`            | Normalized RBF basis generator                                               |       \n|                         | `ProDMPBasisGenerator`                   | ProDMP basis generator                                                       |       \n| **Movement Primitives** | `MPFactory`                              | Create an MP instance given configuration                                    |       \n|                         | `MPInterface`                            | Interface for Deterministic Movement Primitives                              |       \n|                         | `ProbabilisticMPInterface`               | Interface for Probablistic Movement Primitives                               |        \n|                         | `DMP`                                    | Dynamic Movement Primitives                                                  |       \n|                         | `ProMP`                                  | Probablistic Movement Primitives                                             |        \n|                         | `ProDMP`                                 | [Probablistic Dynamic Movement Primitives](https://arxiv.org/abs/2210.01531) |        \n \n \n \n&nbsp;\n## Cite\nIf you interest this project and use it in a scientific publication, we would appreciate citations to the following information:\n```markdown\n@misc{Rofunc2022,\n      author = {Ge Li},\n      title = {MP_PyTorch: The Movement Primitives Package in PyTorch},\n      year = {2022},\n      publisher = {GitHub},\n      journal = {GitHub repository},\n      url = {https://github.com/ALRhub/MP_PyTorch},\n}\n```\n\n&nbsp;\n## Team\nMP_PyTorch is developed and maintained by the [ALR-Lab](https://alr.anthropomatik.kit.edu)(Autonomous Learning Robots Lab), KIT. \n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ALRhub/MP_PyTorch",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mp-pytorch",
            "package_url": "https://pypi.org/project/mp-pytorch/",
            "platform": null,
            "project_url": "https://pypi.org/project/mp-pytorch/",
            "project_urls": {
                "Homepage": "https://github.com/ALRhub/MP_PyTorch"
            },
            "release_url": "https://pypi.org/project/mp-pytorch/0.1.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "torch",
                "addict"
            ],
            "requires_python": "",
            "summary": "The Movement Primitives Package in PyTorch",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15916161,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8db60e551ebccd73077f0f399070a406",
                    "sha256": "7ae34581b8d66291b57d76c464cd95063aba712a51aa76a3df64795a64628200"
                },
                "downloads": -1,
                "filename": "mp_pytorch-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8db60e551ebccd73077f0f399070a406",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 44478,
                "upload_time": "2022-11-28T16:09:59",
                "upload_time_iso_8601": "2022-11-28T16:09:59.104125Z",
                "url": "https://files.pythonhosted.org/packages/87/47/1048ad64d239de70170504b2dc2a56d4dd76336280f03b22b48943ce3238/mp_pytorch-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2a2a4ba7154e9e4bf6e093204d9d6ff3",
                    "sha256": "060b617c3aa77b422c8179dc97b2bc2e4d6272b36d9f1e2642ced7cff68d2f8e"
                },
                "downloads": -1,
                "filename": "mp_pytorch-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2a2a4ba7154e9e4bf6e093204d9d6ff3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 33203,
                "upload_time": "2022-11-28T16:10:01",
                "upload_time_iso_8601": "2022-11-28T16:10:01.181876Z",
                "url": "https://files.pythonhosted.org/packages/6f/96/30081e8af1ec628b7e68493b917f2028a809c9264eff5407af0acbba52a4/mp_pytorch-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}