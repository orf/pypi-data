{
    "0.1.0": {
        "info": {
            "author": "Kristian Klemon",
            "author_email": "kristian.klemon@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "protenc\n=======\n\nprotenc is a library to simplify extraction of protein embeddings from various pre-trained models, including:\n\n* [ProtTrans](https://github.com/agemagician/ProtTrans) family\n* [ESM](https://github.com/facebookresearch/esm)\n* AlphaFold (coming soon\u2122)\n\nIt provides a programmatic Python API as well as a highly flexible bulk extraction script, supporting many input and\noutput formats.\n\n**Note:** the project is work in progress.\n\nUsage\n-----\n\n**Installation**\n\n```bash\npip install protenc\n```\n\n**Python API**\n\n```python\nimport protenc\nimport torch\n\n# List available models\nprint(protenc.list_models())\n\n# Instantiate a model\nmodel = protenc.get_model('esm2_t33_650M_UR50D')\n\nproteins = [\n  'MKTVRQERLKSIVRILERSKEPVSGAQLAEELSVSRQVIVQDIAYLRSLGYNIVATPRGYVLAGG',\n  'KALTARQQEVFDLIRDHISQTGMPPTRAEIAQRLGFRSPNAAEEHLKALARKGVIEIVSGASRGIRLLQEE'\n]\n\nbatch = model.prepare_sequences(proteins)\n\n# Move to GPU if available\nif torch.cuda.is_available():\n  model = model.to('cuda')\n  batch = protenc.utils.to_device(batch, 'cuda')\n\nfor embed in model(batch):\n  # Embeddings have shape [L, D] where L is the sequence length and D the \n  # embedding dimensionality.\n  print(embed.shape)\n  \n  # Derive a single per-protein embedding vector by averaging along the \n  # sequence dimension\n  embed.mean(0)\n```\n\n**Command-line interface**\n\nComing soon.\n\nDevelopment\n-----------\n\nClone the repository:\n\n```bash\ngit clone git+https://github.com/kklemon/protenc.git\n```\n\nInstall dependencies via [Poetry](https://python-poetry.org/):\n\n```bash\npoetry install\n```\n\nTodo\n----\n\n- [ ] Support for more input formats\n  - [X] CSV\n  - [ ] Parquet\n  - [ ] FASTA\n  - [ ] JSON\n- [ ] Support for more output formats\n  - [X] LMDB\n  - [ ] HDF5\n  - [ ] DataFrame\n  - [ ] Pickle\n- [ ] Large models support\n  - [ ] Model offloading\n  - [ ] Sharding\n- [ ] Support for more protein language models\n  - [ ] While ProtTrans family\n  - [ ] While ESM family\n    - [ ] AlphaFold (?)\n- [ ] Implement all remaining TODOs in code\n- [ ] Distributed inference\n- [ ] Maybe support some sort of optimized inference such as quantization\n  - This may be up to the model providers\n- [ ] Improve documentation\n- [ ] Support translation of gene sequences\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "protenc",
            "package_url": "https://pypi.org/project/protenc/",
            "platform": null,
            "project_url": "https://pypi.org/project/protenc/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/protenc/0.1.0/",
            "requires_dist": [
                "transformers (>=4.24.0,<5.0.0)",
                "lmdb (>=1.3.0,<2.0.0)",
                "torch (>=1.13.0,<2.0.0)",
                "pandas (>=1.5.2,<2.0.0)",
                "tqdm (>=4.64.1,<5.0.0)",
                "biopython (>=1.80,<2.0)",
                "sentencepiece (>=0.1.97,<0.2.0)"
            ],
            "requires_python": ">=3.8,<4.0",
            "summary": "Simplify extraction of protein embedding from various models.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15912680,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a6fc0e03f1ff12e66ed2cbf3a50d2315",
                    "sha256": "8052e980169df581c846b5fe0b0ee1c74e9e38dac3c397aa7a0169561cecdb1b"
                },
                "downloads": -1,
                "filename": "protenc-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a6fc0e03f1ff12e66ed2cbf3a50d2315",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 5068,
                "upload_time": "2022-11-28T10:53:59",
                "upload_time_iso_8601": "2022-11-28T10:53:59.927043Z",
                "url": "https://files.pythonhosted.org/packages/d9/75/e234a9c97107223e7a743d152038d639aab321f64c507bca2aa1b7bd8018/protenc-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4ad32eb9e7b8cd9da4a4c41031aa1d63",
                    "sha256": "fc7124e3df535ac24039500528ea4e3b70bdf20e7362acb63706c6ebddec17c9"
                },
                "downloads": -1,
                "filename": "protenc-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4ad32eb9e7b8cd9da4a4c41031aa1d63",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 5065,
                "upload_time": "2022-11-28T10:54:01",
                "upload_time_iso_8601": "2022-11-28T10:54:01.346019Z",
                "url": "https://files.pythonhosted.org/packages/bc/9d/0af8d2213aced344a5cfc1b0d64633d14fa6599ef87bfb93132b523bd14e/protenc-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}