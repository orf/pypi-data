{
    "102.0.0": {
        "info": {
            "author": "",
            "author_email": "Tim Cera <tim@cerazone.net>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": ".. image:: https://github.com/timcera/tsblender/actions/workflows/python-package.yml/badge.svg\n    :alt: Tests\n    :target: https://github.com/timcera/tsblender/actions/workflows/python-package.yml\n    :height: 20\n\n.. image:: https://img.shields.io/coveralls/github/timcera/tsblender\n    :alt: Test Coverage\n    :target: https://coveralls.io/r/timcera/tsblender?branch=master\n    :height: 20\n\n.. image:: https://img.shields.io/pypi/v/tsblender.svg\n    :alt: Latest release\n    :target: https://pypi.python.org/pypi/tsblender/\n    :height: 20\n\n.. image:: https://img.shields.io/pypi/l/tsblender.svg\n    :alt: BSD-3 clause license\n    :target: https://pypi.python.org/pypi/tsblender/\n    :height: 20\n\n.. image:: https://img.shields.io/pypi/dd/tsblender.svg\n    :alt: tsblender downloads\n    :target: https://pypi.python.org/pypi/tsblender/\n    :height: 20\n\n.. image:: https://img.shields.io/pypi/pyversions/tsblender\n    :alt: PyPI - Python Version\n    :target: https://pypi.org/project/tsblender/\n    :height: 20\n\ntsblender - Quick Guide\n=======================\nThe tsblender is a Python script to manipulate time-series on the command line\nor by function calls within Python.  Uses pandas (http://pandas.pydata.org/)\nor numpy (http://numpy.scipy.org) for any heavy lifting.\n\nRequirements\n------------\n* pandas - on Windows this is part scientific Python distributions like\n  Python(x,y), Anaconda, or Enthought.\n\n* mando - command line parser\n\nInstallation\n------------\nShould be as easy as running ``pip install tsblender`` or ``easy_install\ntsblender`` at any command line.  Not sure on Windows whether this will bring\nin pandas, but as mentioned above, if you start with scientific Python\ndistribution then you shouldn't have a problem.\n\nUsage - Command Line\n--------------------\nJust run 'tsblender --help' to get a list of subcommands::\n\n\n    usage: tsblender [-h]\n                     {accumulate, add_trend, aggregate, calculate_fdc,\n                     calculate_kde, clip, convert, convert_index,\n                     convert_index_to_julian, converttz, lag, correlation,\n                     createts, date_offset, date_slice, describe, dtw,\n                     equation, ewm_window, expanding_window, fill, filter, gof,\n                     normalization, pca, pct_change, peak_detection, pick,\n                     plot, rank, read, remove_trend, replace, rolling_window,\n                     stack, stdtozrxp, tstopickle, unstack, about} ...\n\n    positional arguments:\n      {accumulate, add_trend, aggregate, calculate_fdc, calculate_kde, clip,\n      convert, convert_index, convert_index_to_julian, converttz, lag,\n      correlation, createts, date_offset, date_slice, describe, dtw, equation,\n      ewm_window, expanding_window, fill, filter, gof, normalization, pca,\n      pct_change, peak_detection, pick, plot, rank, read, remove_trend,\n      replace, rolling_window, stack, stdtozrxp, tstopickle, unstack, about}\n\n    accumulate\n        Calculate accumulating statistics.\n    add_trend\n        Add a trend.\n    aggregate\n        Take a time series and aggregate to specified frequency.\n    calculate_fdc\n        Return the frequency distribution curve.\n    calculate_kde\n        Return the kernel density estimation (KDE) curve.\n    clip\n        Return a time-series with values limited to [a_min, a_max].\n    convert\n        Convert values of a time series by applying a factor and offset.\n    convert_index\n        Convert datetime to/from Julian dates from different epochs.\n    convert_index_to_julian\n        DEPRECATED: Use convert_index instead.\n    converttz\n        Convert the time zone of the index.\n    lag\n        Create a series of lagged time-series.\n    correlation\n        Develop a correlation between time-series and potentially lags.\n    createts\n        Create empty time series, optionally fill with a value.\n    date_offset\n        Apply an offset to a time-series.\n    date_slice\n        Print out data to the screen between start_date and end_date.\n    describe\n        Print out statistics for the time-series.\n    dtw\n        Dynamic Time Warping.\n    equation\n        Apply <equation_str> to the time series data.\n    ewm_window\n        Calculate exponential weighted functions.\n    expanding_window\n        Calculate an expanding window statistic.\n    fill\n        Fill missing values (NaN) with different methods.\n    filter\n        Apply different filters to the time-series.\n    gof\n        Will calculate goodness of fit statistics between two time-series.\n    normalization\n        Return the normalization of the time series.\n    pca\n        Return the principal components analysis of the time series.\n    pct_change\n        Return the percent change between times.\n    peak_detection\n        Peak and valley detection.\n    pick\n        Will pick a column or list of columns from input.\n    plot\n        Plot data.\n    rank\n        Compute numerical data ranks (1 through n) along axis.\n    read\n        Collect time series from a list of pickle or csv files.\n    remove_trend\n        Remove a 'trend'.\n    replace\n        Return a time-series replacing values with others.\n    rolling_window\n        Calculate a rolling window statistic.\n    stack\n        Return the stack of the input table.\n    stdtozrxp\n        Print out data to the screen in a WISKI ZRXP format.\n    tstopickle\n        Pickle the data into a Python pickled file.\n    unstack\n        Return the unstack of the input table.\n    about\n        Display version number and system information.\n\n    optional arguments:\n        -h, --help            show this help message and exit\n\nThe default for all of the subcommands is to accept data from stdin (typically\na pipe).  If a subcommand accepts an input file for an argument, you can use\n\"--input_ts=input_file_name.csv\", or to explicitly specify from stdin (the\ndefault) \"--input_ts='-'\".\n\nFor the subcommands that output data it is printed to the screen and you can\nthen redirect to a file.\n\nUsage - API\n-----------\nYou can use all of the command line subcommands as functions.  The function\nsignature is identical to the command line subcommands.  The return is always\na PANDAS DataFrame.  Input can be a CSV or TAB separated file, or a PANDAS\nDataFrame and is supplied to the function via the 'input_ts' keyword.\n\nSimply import tsblender::\n\n    from tsblender import tsblender\n\n    # Then you could call the functions\n    ntsd = tsblender.fill(method='linear', input_ts='tests/test_fill_01.csv')\n\n    # Once you have a PANDAS DataFrame you can use that as input to other\n    # tsblender functions.\n    ntsd = tsblender.aggregate(statistic='mean', agg_interval='daily', input_ts=ntsd)\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "time-series,parameter-estimation,tsproc,cli-app,baseflow,hydrology,python",
            "license": "BSD-3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tsblender",
            "package_url": "https://pypi.org/project/tsblender/",
            "platform": null,
            "project_url": "https://pypi.org/project/tsblender/",
            "project_urls": {
                "bitbucket": "https://bitbucket.org/timcera/tsblender/src/main/",
                "documentation": "https://timcera.bitbucket.io/tsblender/docs/index.html#tsblender-documentation",
                "github": "https://github.com/timcera/tsblender"
            },
            "release_url": "https://pypi.org/project/tsblender/102.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Command line script and Python library to manipulate time series.",
            "version": "102.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15588851,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "14ca45c212fcb4ab43c79929645d2939",
                    "sha256": "7d40b7e9114150b9b9ed6bd46f4dce5da4994beff5a5baf1e9ec9cab485cf917"
                },
                "downloads": -1,
                "filename": "tsblender-102.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "14ca45c212fcb4ab43c79929645d2939",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 77263282,
                "upload_time": "2022-10-30T18:47:54",
                "upload_time_iso_8601": "2022-10-30T18:47:54.761814Z",
                "url": "https://files.pythonhosted.org/packages/3e/94/b619d5235c84e7f9e37fff4b97a41faa105cdb4aec0664dce2d639f84ef9/tsblender-102.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}