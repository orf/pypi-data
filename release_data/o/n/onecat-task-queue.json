{
    "1.0.0": {
        "info": {
            "author": "DealiAxy",
            "author_email": "dealiaxy@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/deali/OneCat-TaskQueue",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "onecat-task-queue",
            "package_url": "https://pypi.org/project/onecat-task-queue/",
            "platform": "",
            "project_url": "https://pypi.org/project/onecat-task-queue/",
            "project_urls": {
                "Homepage": "https://gitee.com/deali/OneCat-TaskQueue"
            },
            "release_url": "https://pypi.org/project/onecat-task-queue/1.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "\u7b80\u5355\u5f02\u6b65\u4efb\u52a1\u961f\u5217\u3002\u7248\u672c[1.0.0]\u66f4\u65b0\u5185\u5bb9\uff1a\u53c8\u662f\u9020\u8f6e\u5b50\u7cfb\u5217\u54af\uff0cPython\u4e0a\u6709\u5f88\u591a\u6210\u719f\u5b8c\u5584\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217\u6846\u67b6\u53ef\u4ee5\u7528\uff0c\u6bd4\u5982Celery\uff0c\u6216\u8005RQ\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u4e0d\u81ea\u5e26\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u90fd\u9700\u8981\u4f7f\u7528Redis\u3001RabbitMQ\u4e4b\u7c7b\u7684\u6d88\u606f\u961f\u5217\u624d\u884c\uff0c\u6211\u7528\u5230\u5c0f\u9879\u76ee\u4e2d\u53c8\u4e0d\u9700\u8981\u9644\u5e26\u8fd9\u4e48\u591a\u4e1c\u897f\uff0c\u4e8e\u662f\u81ea\u5df1\u52a8\u624b\u6765\u5b9e\u73b0\u54af\u3002",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7758523,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "53e742744cf6ebf972c5a69ef749e2fb",
                    "sha256": "35ca22a5f4ca051a41c3e6f61624a90a20bc17783aa215a0dca504826847b8db"
                },
                "downloads": -1,
                "filename": "onecat_task_queue-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "53e742744cf6ebf972c5a69ef749e2fb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6731,
                "upload_time": "2020-07-22T15:27:12",
                "upload_time_iso_8601": "2020-07-22T15:27:12.473063Z",
                "url": "https://files.pythonhosted.org/packages/4e/ea/45c297491e8871a0a504716f1d16de00a4a1a380b8b772e0d1e90d303834/onecat_task_queue-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "DealiAxy",
            "author_email": "dealiaxy@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "\u53c8\u662f\u9020\u8f6e\u5b50\u7cfb\u5217\u54af\uff0cPython\u4e0a\u6709\u5f88\u591a\u6210\u719f\u5b8c\u5584\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217\u6846\u67b6\u53ef\u4ee5\u7528\uff0c\u6bd4\u5982Celery\uff0c\u6216\u8005RQ\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u4e0d\u81ea\u5e26\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u90fd\u9700\u8981\u4f7f\u7528Redis\u3001RabbitMQ\u4e4b\u7c7b\u7684\u6d88\u606f\u961f\u5217\u624d\u884c\uff0c\u6211\u7528\u5230\u5c0f\u9879\u76ee\u4e2d\u53c8\u4e0d\u9700\u8981\u9644\u5e26\u8fd9\u4e48\u591a\u4e1c\u897f\uff0c\u4e8e\u662f\u81ea\u5df1\u52a8\u624b\u6765\u5b9e\u73b0\u54af\u3002\n\n## \u601d\u8def\n1. \u5c06\u9700\u8981\u5f02\u6b65\u6267\u884c\u7684\u4efb\u52a1\u6dfb\u52a0\u5230\u961f\u5217\n2. \u81ea\u52a8\u4ece\u961f\u5217\u4e2d\u53d6\u51fa\u4efb\u52a1\uff0c\u521b\u5efa\u65b0\u7ebf\u7a0b\u6267\u884c\n3. \u4fdd\u5b58\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u548c\u8f93\u51fa\n4. \u4efb\u52a1\u5b8c\u6210\uff0c\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff0c\u5904\u7406\u8fd4\u56de\u7684\u6570\u636e\n5. \u4f7f\u7528\u8f93\u51fa\u91cd\u5b9a\u5411\u5904\u7406\u4efb\u52a1\u7684\u8f93\u51fa\n\n\n\n## Demo\n\u9644\u4e0a\u4f7f\u7528\u4efb\u52a1\u961f\u5217\u7684demo\u4ee3\u7801\uff1a\n```python\nif __name__ == '__main__':\n    task_queue = TaskQueue(output_redirect=True)\n\n\n    def fun1():\n        time.sleep(2)\n        return 1\n\n\n    def fun2():\n        time.sleep(3)\n        return 2\n\n\n    task_queue.put(Task(\n        func=fun1,\n        callback=lambda task, result: print(f'task1 result: {result}'),\n    ))\n    task_queue.put(Task(\n        func=fun2,\n        callback=lambda task, result: print(f'task2 result: {result}'),\n    ))\n\n\n    def custom_output(msg):\n        print(f'[custom] {msg}')\n\n\n    def fun3(num1, num2):\n        print(f'num1={num1}')\n        print(f'num2={num2}')\n        return num1 + num2\n\n\n    def callback(task_obj, result):\n        print(f'task3 result={result}')\n        output = task_obj.outputs\n        output.custom = custom_output\n        output.reset()\n        output.to_custom()\n\n\n    task_queue.put(Task(func=fun3, callback=callback, args=[2, 3]))\n\n    print('task queue run')\n    task_queue.run()\n    print('do other things...')\n\n    for i in range(0, 100):\n        print(i * i)\n```\n\n\n## wheel\u6784\u5efa\n\n```bash\npython3.6 setup.py sdist bdist_wheel\ntwine upload dist/* -u \"\u7528\u6237\u540d\" -p \"\u5bc6\u7801\"\n```\n\n\n\n\u4e0b\u9762\u5206\u6790\u4e00\u4e0b\u51e0\u4e2a\u5173\u952e\u90e8\u5206\u7684\u4ee3\u7801\u5b9e\u73b0\n\n\n## \u4f18\u5148\u7ea7\u961f\u5217\nPython\u6807\u51c6\u5e93\u5df2\u7ecf\u6709\u5b9e\u73b0\u597d\u7684\u4f18\u5148\u7ea7\u961f\u5217\u4e86\uff0c\u4f46\u662f\u5f53\u5728\u76f8\u540c\u4f18\u5148\u7ea7\u4e0b\u4f20\u5165\u540c\u6837\u7684\u5bf9\u8c61\u65f6\uff0c\u4ed6\u4f1a\u81ea\u52a8\u6bd4\u8f83\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u4e0d\u8fc7\u6211\u4eec\u7684Task\u7c7b\u6ca1\u6709\u5b9e\u73b0\u76f8\u5173\u7684\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u6240\u4ee5\u65e0\u6cd5\u6bd4\u8f83\u3002\n\n\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u8981\u4e0d\u5c31\u5728Task\u91cc\u9762\u5b9e\u73b0\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff0c\u8981\u4e0d\u5c31\u662f\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u6211\u9009\u62e9\u540e\u8005\u3002\n\n```python\nclass PriorityQueue:\n    \"\"\"\n    \u81ea\u5df1\u5b9e\u73b0\u7684\u4f18\u5148\u7ea7\u961f\u5217\uff0c\u4f7f\u7528\u4e86Python\u7684\u5806\n    \"\"\"\n    def __init__(self):\n        self._index = 0\n        self.queue = []\n\n    def push(self, priority, val):\n        heapq.heappush(self.queue, (priority, self._index, val))\n        self._index += 1\n\n    def pop(self):\n        return heapq.heappop(self.queue)[-1]\n\n    @property\n    def empty(self):\n        return len(self.queue) == 0\n```\n\n## \u8f93\u51fa\u91cd\u5b9a\u5411\n\u5176\u5b9e\u8fd9\u4e2a\u633a\u5751\u7684\u4e86\uff0c\u6bd5\u7adf\u662f\u5f02\u6b65\u4efb\u52a1\u961f\u5217\uff0c\u96be\u514d\u6d89\u53ca\u5230\u7ebf\u7a0b\u7684\u7ade\u4e89\u95ee\u9898\uff0c\u53c8\u6ca1\u529e\u6cd5\u5355\u72ec\u63a7\u5236\u6bcf\u4e2a\u4efb\u52a1\u7684\u8f93\u51fa\uff0c\u4e0d\u8fc7\u6211\u8fd8\u662f\u505a\u4e86\uff0c\u5c0f\u9879\u76ee\u7684\u8bdd\u8fd8\u662f\u53ef\u4ee5\u7528\u7684\uff08\u5176\u5b9e\u5c31\u662f\u61d2\u5f97\u79fb\u690d\u4e00\u4e0b\u5df2\u6709\u4ee3\u7801\uff09\n\n\u4ee3\u7801\u5982\u4e0b\uff0c\u540c\u6837\u662f\u4f7f\u7528\u961f\u5217\u6765\u5b9e\u73b0\u8f93\u51fa\u7f13\u51b2\u533a\uff0c\u5927\u5c0f\u53ef\u4ee5\u81ea\u5df1\u8c03\u6574\uff0c\u9ed8\u8ba4\u652f\u6301\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3001\u6587\u4ef6\u6216\u8005\u8fd4\u56de\u5217\u8868\u3002\n\n\u4e00\u822c\u91cd\u5b9a\u5411\u8f93\u51fa\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\u53ef\u4ee5\u8f93\u51fa\u5904\u7406\u51fd\u6570\uff0c\u76f4\u63a5\u7ed9Redirection\u7c7b\u7684custom \u5c5e\u6027\u8d4b\u503c\u5373\u53ef\u3002\n\n```python\nclass Redirection:\n    def __init__(self, buffer_size=512):\n        self.buffer = Queue(maxsize=512)\n        self._console = sys.stdout\n        # \u81ea\u5b9a\u4e49\u7684\u8f93\u51fa\u7aef\n        self.custom = None\n\n    def write(self, output_stream):\n        # \u52a0\u5165\u7f13\u51b2\u533a\u961f\u5217\n        self.buffer.put(output_stream)\n\n    def to_console(self):\n        sys.stdout = self._console\n        # \u51fa\u5217\n        while not self.buffer.empty():\n            print(self.buffer.get())\n\n    def to_file(self, file_path):\n        with open(file_path, 'w+') as f:\n            sys.stdout = f\n            while not self.buffer.empty():\n                print(self.buffer.get())\n            f.close()\n\n    def to_custom(self):\n        while not self.buffer.empty():\n            self.custom(self.buffer.get())\n\n    def to_list(self):\n        data = []\n        while not self.buffer.empty():\n            data.append(self.buffer.get())\n        return data\n\n    def flush(self):\n        self.buffer.empty()\n\n    def reset(self):\n        sys.stdout = self._console\n```\n\n## Task\u7c7b\n\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u5b9a\u4e49\u4efb\u52a1\u7c7b\uff0cTask\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a\n\n```python\nclass Task:\n    def __init__(self, func, callback=None, priority=Priority.MIDDLE, args=(), kwargs={}):\n        \"\"\"\n        Args:\n            func: \u9700\u8981\u6267\u884c\u7684\u51fd\u6570\n            callback:  \u6267\u884c\u5b8c\u7684\u56de\u8c03\u51fd\u6570\n            priority: \u4f18\u5148\u7ea7\n            *args:\n            **kwargs:\n        \"\"\"\n        self._id = uuid.uuid4().hex\n        self.function = func\n        self.callback = callback\n        self.priority = priority\n        self.args = args\n        self.kwargs = kwargs\n        # \u4efb\u52a1\u8fd0\u884c\u8fc7\u7a0b\u7684\u8f93\u51fa\uff0cstdout\u7684\u8f93\u51fa\n        self._outputs: Redirection = None\n\n    @property\n    def id(self):\n        return self._id\n\n    @property\n    def outputs(self) -> Redirection:\n        return self._outputs\n\n    @outputs.setter\n    def outputs(self, value: Redirection):\n        self._outputs = value\n\n    def run(self):\n        try:\n            if self.callback:\n                # \u56de\u8c03\u51fd\u6570\u539f\u578b callback(task_obj, result)\n                result = self.callback(self, self.function(*self.args, **self.kwargs))\n            else:\n                result = self.function(*self.args, **self.kwargs)\n            return result\n        except Exception as e:\n            if self.callback:\n                result = self.callback(self, e)\n            else:\n                result = e\n            return result\n```\n\n\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u5982\u4e0b\uff1a\n\n```python\ndef fun1(num1, num2):\n    print(f'num1={num1}')\n    print(f'num2={num2}')\n    return num1 + num2\n\nTask(\n    func=fun1,\n    callback=lambda task, result: print(f'task result: {result}'),\n)\n\n# \u4e5f\u53ef\u4ee5\u5199\u6210\u8fd9\u6837\nTask(\n    func=lambda num1, num2: num1 + num2,\n    callback=lambda task, result: print(f'task result: {result}'),\n    args=[2, 3]\n)\n```\n\n## \u4efb\u52a1\u961f\u5217\n\u6700\u540e\u662f\u5b9e\u73b0\u4efb\u52a1\u961f\u5217\uff0c\u4e5f\u5f88\u7b80\u5355\uff0c\u6839\u636e\u4efb\u52a1\u7684\u4f18\u5148\u7ea7\u8fdb\u884c\u8c03\u5ea6\u5373\u53ef\u3002\n\n```python\nclass TaskQueue:\n    \"\"\"\n    \u57fa\u4e8e\u7ebf\u7a0b\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217\n    todo \u4e0b\u6b21\u505a\u4e00\u4e2a\u57fa\u4e8e\u8fdb\u7a0b\u7684\u961f\u5217\uff0c\u5145\u5206\u5229\u7528\u591a\u6838CPU\u6027\u80fd\n    \"\"\"\n\n    def __init__(self, output_redirect=False):\n        self.queue = PriorityQueue()\n        self.output_redirect = output_redirect\n        self._redirect_objs = {}\n        self._results = {}\n\n    def put(self, task: Task):\n        \"\"\"\n        \u5c06task\u52a0\u5165\u4efb\u52a1\u5217\u8868\n        Args:\n            task:\n        Returns:\u8fd4\u56detask id\n        \"\"\"\n        self.queue.push(task.priority, task)\n        return task.id\n\n    def get(self):\n        return self.queue.pop()\n\n    def run(self):\n        while not self.queue.empty:\n            task = self.get()\n            # \u5f00\u542f\u65b0\u7ebf\u7a0b\n            t = threading.Thread(target=self._task_wrapper, name=task.id, args=[task])\n            self._log(f'Start thread {task.id}')\n            t.start()\n\n    def get_output(self, task_id: str) -> Redirection:\n        return self._redirect_objs.get(task_id, None)\n\n    def get_result(self, task_id: str):\n        return self._results.get(task_id, None)\n\n    @staticmethod\n    def _log(msg: str):\n        \"\"\"\u65e5\u5fd7\u8f93\u51fa\u63a5\u53e3\uff0c\u53ef\u4ee5\u66ff\u6362\u4e3a\u65e5\u5fd7\u7ec4\u4ef6\"\"\"\n        print(f'[TaskQueue] {msg}')\n\n    def _task_wrapper(self, task: Task):\n        if self.output_redirect:\n            if task.id in self._redirect_objs:\n                redirect_obj = self._redirect_objs[task.id]\n            else:\n                redirect_obj = Redirection(2048)\n                self._redirect_objs[task.id] = redirect_obj\n            # \u91cd\u5b9a\u5411\u8f93\u51fa\n            sys.stdout = redirect_obj\n            task.outputs = redirect_obj\n            result = task.run()\n            # \u6062\u590d\u9ed8\u8ba4\u8f93\u51fa\n            redirect_obj.reset()\n            self._log(f'Task finished. {task.id}')\n        else:\n            result = task.run()\n\n        # \u4fdd\u5b58\u7ed3\u679c\n        self._results[task.id] = result\n```\n\n\u6574\u4e2a\u9879\u76ee\u4ee3\u7801\u5c31\u5728\u8fd9\u4e86\uff0c\u5f88\u7b80\u5355\uff0c\u4e5f\u6709\u5f88\u591a\u4e0d\u8db3\u7684\u5730\u65b9\uff0c\u4e0d\u8fc7\u5c0f\u9879\u76ee\u7528\u7528\u52c9\u5f3a\u8fd8\u53ef\u4ee5\u5427~\n\n\u8fc7\u51e0\u5929\u53d1\u5e03\u5230pip\uff0c\u6709\u9700\u8981\u7684\u540c\u5b66\u76f4\u63a5pip\u5b89\u88c5\u5c31\u53ef\u4ee5\u4f7f\u7528\uff0c\u8bf7\u5173\u6ce8\u535a\u5ba2\u66f4\u65b0\u3002\n\n\n## \u53c2\u8003\u8d44\u6599\n- \u8fd0\u7b97\u7b26\u91cd\u8f7d [https://blog.csdn.net/goodlixueyong/article/details/52589979](https://blog.csdn.net/goodlixueyong/article/details/52589979)\n- [https://www.open-open.com/code/view/1433410658322](https://www.open-open.com/code/view/1433410658322)\n- Celery\u5f02\u6b65\u4efb\u52a1\u961f\u5217 [https://www.cnblogs.com/StitchSun/p/8552488.html](https://www.cnblogs.com/StitchSun/p/8552488.html)\n- https://zhuanlan.zhihu.com/p/37637660\n\n\n## \u6b22\u8fce\u4ea4\u6d41\n\u6211\u6574\u7406\u4e86\u4e00\u7cfb\u5217\u7684\u6280\u672f\u6587\u7ae0\u548c\u8d44\u6599\uff0c\u5728\u516c\u4f17\u53f7\u300c\u7a0b\u5e8f\u8bbe\u8ba1\u5b9e\u9a8c\u5ba4\u300d\u540e\u53f0\u56de\u590d linux\u3001flutter\u3001c#\u3001netcore\u3001android\u3001kotlin\u3001java\u3001python \u7b49\u53ef\u83b7\u53d6\u76f8\u5173\u6280\u672f\u6587\u7ae0\u548c\u8d44\u6599\uff0c\u540c\u65f6\u6709\u4efb\u4f55\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u516c\u4f17\u53f7\u540e\u53f0\u7559\u8a00~",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/deali/OneCat-TaskQueue",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "onecat-task-queue",
            "package_url": "https://pypi.org/project/onecat-task-queue/",
            "platform": "",
            "project_url": "https://pypi.org/project/onecat-task-queue/",
            "project_urls": {
                "Homepage": "https://gitee.com/deali/OneCat-TaskQueue"
            },
            "release_url": "https://pypi.org/project/onecat-task-queue/1.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "\u7b80\u5355\u5f02\u6b65\u4efb\u52a1\u961f\u5217\u3002\u7248\u672c[1.0.1] \u66f4\u65b0\u5185\u5bb9\uff1a\u53c8\u662f\u9020\u8f6e\u5b50\u7cfb\u5217\u54af\uff0cPython\u4e0a\u6709\u5f88\u591a\u6210\u719f\u5b8c\u5584\u7684\u5f02\u6b65\u4efb\u52a1\u961f\u5217\u6846\u67b6\u53ef\u4ee5\u7528\uff0c\u6bd4\u5982Celery\uff0c\u6216\u8005RQ\uff0c\u4e0d\u8fc7\u8fd9\u4e9b\u90fd\u4e0d\u81ea\u5e26\u6d88\u606f\u961f\u5217\u670d\u52a1\uff0c\u90fd\u9700\u8981\u4f7f\u7528Redis\u3001RabbitMQ\u4e4b\u7c7b\u7684\u6d88\u606f\u961f\u5217\u624d\u884c\uff0c\u6211\u7528\u5230\u5c0f\u9879\u76ee\u4e2d\u53c8\u4e0d\u9700\u8981\u9644\u5e26\u8fd9\u4e48\u591a\u4e1c\u897f\uff0c\u4e8e\u662f\u81ea\u5df1\u52a8\u624b\u6765\u5b9e\u73b0\u54af\u3002",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7758523,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6b0e69cdc50fe90b1983f4a0f655d694",
                    "sha256": "61b55def064f1919e343cb827208aa07debc9cfba3aeabab0981733d7c344115"
                },
                "downloads": -1,
                "filename": "onecat_task_queue-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "6b0e69cdc50fe90b1983f4a0f655d694",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6859,
                "upload_time": "2020-07-22T15:38:20",
                "upload_time_iso_8601": "2020-07-22T15:38:20.389820Z",
                "url": "https://files.pythonhosted.org/packages/26/97/e7ab87ab4964fa6c614f7a5a2aa36d73ed73da0c7b26bcf0fb14b7dd4c4b/onecat_task_queue-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}