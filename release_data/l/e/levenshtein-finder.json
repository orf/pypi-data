{
    "0.0.1": {
        "info": {
            "author": "lovit",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "levenshtein-finder",
            "package_url": "https://pypi.org/project/levenshtein-finder/",
            "platform": "",
            "project_url": "https://pypi.org/project/levenshtein-finder/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/levenshtein-finder/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "find similar word / sentences using levenshtein-distance",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10688304,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3b6f361fe817c7631d21480b41c04ac5",
                    "sha256": "559ca83cde84798f5042cbe790ccb0575a5c09b6cc3b14199cb1f1fe2a88384b"
                },
                "downloads": -1,
                "filename": "levenshtein_finder-0.0.1-py3.7.egg",
                "has_sig": false,
                "md5_digest": "3b6f361fe817c7631d21480b41c04ac5",
                "packagetype": "bdist_egg",
                "python_version": "0.0.1",
                "requires_python": null,
                "size": 24503,
                "upload_time": "2021-06-19T02:20:32",
                "upload_time_iso_8601": "2021-06-19T02:20:32.138808Z",
                "url": "https://files.pythonhosted.org/packages/f0/9f/7b4accda1f307659e7a9f3e3a13737ff57cd59fba6871c8dfce3e790e2b8/levenshtein_finder-0.0.1-py3.7.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "lovit",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "levenshtein-finder",
            "package_url": "https://pypi.org/project/levenshtein-finder/",
            "platform": "",
            "project_url": "https://pypi.org/project/levenshtein-finder/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/levenshtein-finder/1.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "find similar word / sentences using levenshtein-distance",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10688304,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ab83ba1395712d78f48634fac6eb697a",
                    "sha256": "475def970841a9d653fd39cb911a9705bd7675ccdc5cd92bb5fd5a1ab88c56b8"
                },
                "downloads": -1,
                "filename": "levenshtein_finder-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ab83ba1395712d78f48634fac6eb697a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10579,
                "upload_time": "2021-06-19T02:20:30",
                "upload_time_iso_8601": "2021-06-19T02:20:30.115137Z",
                "url": "https://files.pythonhosted.org/packages/34/e0/d5cc152998df08eea2730efa914be0f002c159445d3995198c3d7418d1cf/levenshtein_finder-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "27a5cd9cde7c5ef21337e2e1e8c7b089",
                    "sha256": "fafa190a6b728e316bfc086e1860de3f866fde0b9c8734bec2038dca86df0f88"
                },
                "downloads": -1,
                "filename": "levenshtein_finder-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "27a5cd9cde7c5ef21337e2e1e8c7b089",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7068,
                "upload_time": "2021-06-19T02:20:33",
                "upload_time_iso_8601": "2021-06-19T02:20:33.670856Z",
                "url": "https://files.pythonhosted.org/packages/b2/56/55ff547d1853f17c25e81823cdec182ddccd08e8e12b3e8ef3ce6afe9d82/levenshtein_finder-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "lovit",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Similar string search in Levenshtein-distance\n\n## Install\n\nfrom source\n```\ngit clone https://github.com/lovit/levenshtein_finder\ncd levenshtein_finder\npython setup.py install\n```\n\nfrom PyPI\n```\npip install levenshtein_finder\n```\n\n## Usage\n\n### Define Tokenizer\n\n`levenshtein_finder` provides two basic tokenizers.\n\nIn [1]\n```python\nfrom levenshtein_finder import CharacterTokenizer, BigramTokenizer\n\nchar_tokenizer = CharacterTokenizer()\nbigram_tokenizer = BigramTokenizer()\n\nchar_tokenizer.tokenize(\"abc de\")  # ['a', 'b', 'c', ' ', 'd', 'e']\nbigram_tokenizer.tokenize(\"abc de\")  # ['ab', 'bc', 'c ', ' d', 'de']\n\nchar_tokenizer.train(\"path/to/text\")  # or\nchar_tokenizer.train([\"list\", \"of\", \"words\"])\n```\n\nWhen you use word piece tokenizer in Huggingface's [`tokenizers`](https://github.com/huggingface/tokenizers), wrap the class instance with `WordpieceTokenizersWrapper`\n\nIn [2]\n```\nfrom tokenizers import BertWordPieceTokenizer\nfrom levenshtein_finder import WordpieceTokenizersWrapper\n\ntokenizer = WordpieceTokenizersWrapper(BertWordPieceTokenizer())\ntokenizer.train(\"path/to/text\")\ntokenizer.tokenize(\"abc\")  # [\"ab\", \"#c\"]\ntokenizer.encode(\"abc\"  # [53, 2]\ntokenizer.decode(tokenizer.tokenize(\"abc\"))  # \"abc\"\n```\n\nSet tokenizer which Levenshtein Finder uses. Default is `CharacterTokenizer`\n\nIn [3]\n```python\nfrom levenshtein_finder import LevenshteinFinder()\n\nfinder = LevenshteinFinder()\nfinder = LevenshteinFinder(BigramTokenizer())\nfinder = LevenshteinFinder(WordpieceTokenizersWrapper(BertWordPieceTokenizer()))\n```\n\n### Indexing\n\nIn [4]\n```python\nfinder = LevenshteinFinder()\nfinder.indexing(\"path/to/text\")\n\n# when you use CharacterTokenizer or BigramTokenizer, you can index with list of words\nfinder.indexing([\"list\", \"of\", \"words\"])\n```\n\n### Searching\n\nBasic search. The form of `similars` is `dict{term: distance}`.\n\nIn [5]\n```python\nfinder.search(\"query\")\n```\n\nIf you want to check details in searching, set `verbose=True`\n\nIn [6]\n```python\nfinder.search(\"\ubd84\uc2dd\ud68c\uacc4\", verbose=True)\n```\n\nOut [6]\n```\nquery               : \ubd84\uc2dd\ud68c\uacc4\ntokens              : ['\ubd84', '\uc2dd', '\ud68c', '\uacc4']\nnum data            : 132864\nnum 1st candidates  : 10137\nnum final candidates: 7\nnum similars        : 4\nelapsed time        : 0.00542903 sec\n[{'idx': 84243, 'data': '\ubd84\uc2dd\ud68c\uacc4', 'distance': 0},\n {'idx': 36211, 'data': '\ubd84\uc2dd\ud68c', 'distance': 1},\n {'idx': 113942, 'data': '\ubd84\uc2dd\ud68c\uacc4\uc124', 'distance': 1},\n {'idx': 114122, 'data': '\ubd84\uc11d\ud68c\uacc4', 'distance': 1}]\n```\n\n### For decomposing Korean to Jamo (NFKD)\n\nTo decompose Korean character to jamo components (`\uac10` -> [`\u3131`, `\u314f`, `\u3141`]), use `Normalizers`.\n\nIn [7]\n```python\nnormalizer = Normalizers.create_normalizer(unicodedata=True)\ntokenizer = CharacterTokenizer(normalizer=normalizer)\nfinder = LevenshteinFinder(tokenizer=tokenizer)\nfinder.indexing(\"text.txt\")\nfinder.search(\"\ubd84\uc2dd\ud68c\uacc4\", verbose=True)\n```\n\nOut [7]\n```\nquery               : \ubd84\uc2dd\ud68c\uacc4\ntokens              : ['\u1107', '\u116e', '\u11ab', '\u1109', '\u1175', '\u11a8', '\u1112', '\u116c', '\u1100', '\u1168']\nnum data            : 132864\nnum 1st candidates  : 125925\nnum final candidates: 4\nnum similars        : 2\nelapsed time        : 0.0863643 sec\n[{'idx': 84243, 'data': '\ubd84\uc2dd\ud68c\uacc4', 'distance': 0},\n {'idx': 114122, 'data': '\ubd84\uc11d\ud68c\uacc4', 'distance': 1}]\n```\n\n## Demo\n\n### Searching similar words\n\n`LevenshteinFinder` needs ` seconds`.\n\nIn [8]\n```python\nimport json\nwith open(\"data/nouns_from_financial_news.json\") as f:\n    words = list(json.load(f).keys())\n\nfinder = LevenshteinFinder()\nfinder.indexing(words)\nfinder.search(\"\ubd84\uc2dd\ud68c\uacc4\", verbose=True)\n```\n\nOut [8]\n```\nelapsed time        : 0.00542903 sec\n```\n\nBrute-force distance computation needs `1.495 seconds`\n\nIn [9]\n```python\nimport time\nfrom levenshtein_finder import levenshtein\n\nquery = '\ubd84\uc2dd\ud68c\uacc4'\n\nbegin_time = time.time()\ndistance = {word:levenshtein(word, query) for word in words}\nsearch_time = time.time() - begin_time\nprint('search time = {} sec'.format('%.3f'%search_time))\n\nsimilars = sorted(filter(lambda x:x[1] <= 1, distance.items()), key=lambda x:x[1])\nelapsed_time = time.time() - begin_time\nprint('total elapsed time = {} sec'.format('%.3f'%elapsed_time))\nprint(similars)\n```\n\nOut [9]\n```\nsearch time = 1.480 sec\ntotal elapsed time = 1.495 sec\n[('\ubd84\uc2dd\ud68c\uacc4', 0), ('\ubd84\uc2dd\ud68c', 1), ('\ubd84\uc2dd\ud68c\uacc4\uc124', 1), ('\ubd84\uc11d\ud68c\uacc4', 1)]\n```\n\n### Searching similar strings\n\nFind similar sentence from NSMC corpus (20M).\n\nIn [10]\n```python\nfinder = LevenshteinFinder()\nfinder.indexing(\"~/Korpora/nsmc/corpus.txt\")\nfinder.search(\"\uc74c\uc545\uc774 \uc8fc\uac00 \ub41c \ucd5c\uace0\uc758 \uc74c\uc545\uc601\ud654\", max_distance=1, verbose=True)\n```\n\nOut [10]\n```\nquery               : \uc74c\uc545\uc774 \uc8fc\uac00 \ub41c \ucd5c\uace0\uc758 \uc74c\uc545\uc601\ud654\ntokens              : ['\uc74c', '\uc545', '\uc774', ' ', '\uc8fc', '\uac00', ' ', '\ub41c', ' ', '\ucd5c', '\uace0', '\uc758', ' ', '\uc74c', '\uc545', '\uc601', '\ud654']\nnum data            : 200002\nnum 1st candidates  : 189663\nnum final candidates: 1\nnum similars        : 1\nelapsed time        : 0.123322 sec\n[{'idx': 6, 'data': '\uc74c\uc545\uc774 \uc8fc\uac00 \ub41c, \ucd5c\uace0\uc758 \uc74c\uc545\uc601\ud654', 'distance': 1}]\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/lovit/levenshtein_finder",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "levenshtein-finder",
            "package_url": "https://pypi.org/project/levenshtein-finder/",
            "platform": "",
            "project_url": "https://pypi.org/project/levenshtein-finder/",
            "project_urls": {
                "Homepage": "https://github.com/lovit/levenshtein_finder"
            },
            "release_url": "https://pypi.org/project/levenshtein-finder/1.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "find similar word / sentences using levenshtein-distance",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10688304,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "56ecd3935e269b2ab57d121bd29054cc",
                    "sha256": "be895db740fac66a185a8fbe79bd81a7be48caa0548aabfc0c0b81a60c8fafa6"
                },
                "downloads": -1,
                "filename": "levenshtein_finder-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "56ecd3935e269b2ab57d121bd29054cc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10577,
                "upload_time": "2021-06-19T02:23:21",
                "upload_time_iso_8601": "2021-06-19T02:23:21.692662Z",
                "url": "https://files.pythonhosted.org/packages/62/7d/23cfd25ac805f4ea30adbabeb8c5cb518a7d29e44eb1275b52f306667314/levenshtein_finder-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ecee4a09253dbb85a41526363dc201c6",
                    "sha256": "31539ac616f41f87d765501befa55ddf5390eadb0f4405397aba64c86d83dc1c"
                },
                "downloads": -1,
                "filename": "levenshtein_finder-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "ecee4a09253dbb85a41526363dc201c6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7085,
                "upload_time": "2021-06-19T02:23:22",
                "upload_time_iso_8601": "2021-06-19T02:23:22.979967Z",
                "url": "https://files.pythonhosted.org/packages/b1/a2/a752dbf3eb467dd99402056508e680ab22f4256558bd21bdc32f40d41b84/levenshtein_finder-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}