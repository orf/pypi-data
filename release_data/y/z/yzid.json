{
    "0.1.0": {
        "info": {
            "author": "cml",
            "author_email": "caimengli0660@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# [Yz-id](https://github.com/ml444/yz-id)\n--------------\n\n## Introduction\nAn ID generator for distributed microservices.\n\u4e00\u4e2a\u5206\u5e03\u5f0fID\u751f\u6210\u5668\u6846\u67b6\uff0c\u9002\u7528\u4e8e\u5fae\u670d\u52a1\u9886\u57df\u7684\u5168\u5c40ID\u751f\u6210\u3002\u57fa\u4e8esnowflake\u7684\u8bbe\u8ba1\u7406\u5ff5\uff0c\n\u8bbe\u8ba1\u51fa\u8fd9\u4e2a\u53ef\u81ea\u884c\u6839\u636e\u9700\u8981\u91cd\u65b0\u5206\u914d\u4e86\u5404\u90e8\u5206\u7684bit\u4f4d\u7684ID\u751f\u6210\u5668\u6846\u67b6\u3002\n\n\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\uff0c\u6574\u4f53\u7684\u4e1a\u52a1\u88ab\u62c6\u5206\u6210\u591a\u4e2a\u81ea\u6cbb\u7684\u5fae\u670d\u52a1\uff0c\u6bcf\u4e2a\u5fae\u670d\u52a1\u4e4b\u95f4\u9700\u8981\u901a\u8fc7\u7f51\u7edc\u8fdb\u884c\u901a\u4fe1\u548c\u4ea4\u4e92\uff0c\n\u7531\u4e8e\u7f51\u7edc\u7684\u4e0d\u786e\u5b9a\u6027\uff0c\u4f1a\u7ed9\u7cfb\u7edf\u5e26\u6765\u5404\u79cd\u5404\u6837\u7684\u4e0d\u4e00\u81f4\u95ee\u9898\uff0c\u4e3a\u4e86\u907f\u514d\u548c\u89e3\u51b3\u4e0d\u4e00\u81f4\u95ee\u9898\uff0c\n\u6700\u91cd\u8981\u7684\u6a21\u5f0f\u662f\u505a\u7cfb\u7edf\u4e4b\u95f4\u7684\u5b9e\u65f6\u6838\u5bf9\u548c\u4e8b\u540e\u6838\u5bf9\uff0c\u6838\u5bf9\u7684\u57fa\u7840\u5c31\u662f\u9886\u57df\u5bf9\u8c61\u53ca\u7cfb\u7edf\u95f4\u7684\u8bf7\u6c42\u9700\u8981\u6709\u552f\u4e00ID\u6765\u6807\u8bc6\u3002\n\n\u5728\u6e90\u7801\u7684`extras`\u4e2d\u5df2\u7ecf\u4e3e\u4f8b\u51fa\u4e09\u79cdID\u7ec4\u5408\u65b9\u5f0f\u65b9\u6848\u3002\n- \u3010Snowflake\u3011:\n\n    | \u7248\u672c | \u6beb\u79d2\u7ea7\u65f6\u95f4 | \u673a\u5668ID | \u5e8f\u5217\u53f7 |\n    | --- | --------- | ----- | ----- |\n    | 63  | 62-22     | 21-12 | 11-0  |\n\n- \u3010Sonyflake\u3011:\n\n    | \u7248\u672c | 10\u6beb\u79d2\u7ea7\u65f6\u95f4 | \u5e8f\u5217\u53f7 | \u673a\u5668ID |\n    | --- | ----------  | ----- | ----- |\n    | 63  | 62-24       | 23-16 | 15-0  |\n\n- \u3010Anonymous\u3011:\n    - \u3010\u6700\u5927\u5cf0\u503c\u3011\uff1a\n\n        | \u7248\u672c | \u7c7b\u578b | \u751f\u6210\u65b9\u5f0f | \u79d2\u7ea7\u65f6\u95f4 | \u5e8f\u5217\u53f7 | \u673a\u5668ID |\n        | --- | ---- | ------ | ------- | ------ |-------|\n        | 63  | 62   | 60-61  | 59-30   | 29-10 | 0-9   |\n\n    - \u3010\u6700\u5c0f\u7c92\u5ea6\u3011\uff1a\n\n        | \u7248\u672c | \u7c7b\u578b | \u751f\u6210\u65b9\u5f0f | \u6beb\u79d2\u7ea7\u65f6\u95f4 | \u5e8f\u5217\u53f7 | \u673a\u5668ID |\n        | --- | ---- | ------ | --------- | ------|-------|\n        | 63   | 62  | 60-61  | 59-20     | 19-10 | 0-9   |\n\n    \u751f\u6210\u65b9\u5f0f\uff1a(\u5d4c\u5165\u5f0f\uff0crestful\uff0c\u4e2d\u5fc3\u5206\u53d1\uff09\n    `anonymous`\u9002\u7528\u4e8e\u4e00\u4e9b\u6742\u7cc5\u7684\u67b6\u6784\u573a\u666f\uff0c\u53ef\u4ee5\u5e94\u5bf9\u5404\u79cd\u60c5\u666f\u4e0b\u7684ID\u751f\u6210\u65b9\u5f0f\u3002\n\n## Quick start\n\n**\u5b89\u88c5\u6a21\u5757**\n```shell\n$ pip install yzid\n```\n\u5982\u679c\u4e0a\u9762\u7684\u4e09\u79cd\u65b9\u6848\u9002\u7528\u4f60\u9700\u8981\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff1a\n```python\n# Anonymous:\nfrom yzid import get_id_service\ntime_epoch = 1610351662\nidsvc1 = get_id_service(time_epoch=time_epoch, machine_code=1)\nid1 = idsvc1.generate_id()\n\n# Snowflake\nfrom yzid import get_snowflake_service\ntime_epoch = 1610351662 * 1000\nidsvc2 = get_snowflake_service(time_epoch=time_epoch, machine_code=1)\nid2 = idsvc2.generate_id()\n\n# Sonyflake\nfrom yzid import get_sonyflake_service\ntime_epoch = 1610351662*100\nidsvc3 = get_sonyflake_service(time_epoch=time_epoch, machine_code=1)\nid3 = idsvc3.generate_id()\n```\n\n\u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ec4\u5408\u65b9\u6848\u3002\n\u81ea\u5b9a\u4e49\u7ec4\u5408ID\u7ec4\u6210\u793a\u4f8b\uff1a\n```python\nfrom yzid.core.service import IdService\n\n\ndef get_id_service(\n        time_epoch: int,\n        machine_code: int,\n        generate_method: int = 2,\n        mode_type: int = 1,\n        version: int = 0,\n):\n    \"\"\"\n\n    :param time_epoch:      \u65f6\u95f4\u8d77\u70b9\n    :param machine_code:    \u673a\u5668\u5e8f\u53f7\n    :param generate_method: (\u5d4c\u5165\u5f0f\uff0crestful\uff0c\u4e2d\u5fc3\u5206\u53d1\uff09\n    :param mode_type:       (\u6700\u5927\u5cf0\u503c\uff0c\u6700\u5c0f\u7c92\u5ea6)\n    :param version:\n    :return:\n    \"\"\"\n    _type = {\n        \"max_peak\": [\n            (\"machine\",     (10, machine_code)),  # (<name>: (<bit_count>, <default_value>))\n            (\"sequence\",    20),                  # (<name>: (<bit_count>, 0))\n            (\"duration\",    30),\n            (\"method\",      (2, generate_method)),\n            (\"type\",        (1, 1)),\n            (\"version\",     (1, version)),\n        ],\n        \"min_granularity\": [\n            (\"machine\",     (10, machine_code)),\n            (\"sequence\",    10),\n            (\"duration\",    40),\n            (\"method\",      (2, generate_method)),\n            (\"type\",        (1, 0)),\n            (\"version\",     (1, version)),\n        ]\n    }\n    structure = _type.get(\"max_peak\") if mode_type == 1 else _type.get(\"min_granularity\")\n\n    return IdService(\n        structure=structure,\n        time_epoch=time_epoch,\n        time_unit=1 if mode_type == 1 else 10**3,  # \u79d2\u7ea7\u548c\u6beb\u79d2\u7ea7\u7684\u9009\u62e9\n        time_name=\"duration\",\n        sequence_name=\"sequence\"\n    )\n```\n`structure`\u53c2\u6570\u5fc5\u987b\u662f\u6709\u5e8f\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5728\u8bbe\u8ba1\u7ec4\u5408\u65f6\uff0c\u4f4e\u4f4d\u5728\u524d\uff0c\u9ad8\u4f4d\u5728\u540e\uff1b\n\u547d\u540d\u5b57\u6bb5\u7684\u503c\u53ef\u4ee5\u662f`Tuple[int, int]`\u6216`int`\uff0c\u53ea\u6709\u5355\u4e2aint\u65f6\uff0c\u5373\u53ea\u6307\u5b9a\u8be5\u7ec4\u6210\u90e8\u5206\u5360\u7528\u7684\u4f4d\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a0\u3002\n\n`structure`\u91cc\u7684\u6240\u6709\u7ec4\u6210\u90e8\u5206\u7684\u4f4d\u6570\u603b\u548c\u5fc5\u987b\u4e3a64\uff0c\u5426\u5219\u62a5\u5f02\u5e38\u9519\u8bef\u3002\n\n\u5728ID\u7684\u7ec4\u6210\u90e8\u5206\u4e2d\uff0c\u6709\u4e24\u4e2a\u90e8\u5206\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u2014\u2014\u2014\u2014`\u65f6\u95f4`\u548c`\u5e8f\u5217\u53f7`\uff0c\u6240\u4ee5\u65e0\u8bba\u5728`structure`\u4e2d\u7684\u547d\u540d\u7ec4\u5408\u662f\u4ec0\u4e48\uff0c\n\u90fd\u5fc5\u987b\u5728\u5b9e\u4f8b\u5316\u65f6\u6307\u660e\u5b83\u4eec\u7684\u540d\u79f0\uff1a\n```python\ntime_name=\"duration\",\nsequence_name=\"sequence\"\n```\n\u8fd9\u6837\u7684`yzid`\u624d\u77e5\u9053\u9700\u8981\u5bf9\u54ea\u4e2a\u90e8\u5206\u8fdb\u884c\u65f6\u95f4\u64cd\u4f5c\u548c\u7d2f\u52a0\u64cd\u4f5c\u3002\n\n`time_unit`\u662f\u65f6\u95f4\u5355\u4f4d\uff0c\u4e3a\u4e86\u544a\u8bc9`yzid`\u662f\u4f7f\u7528\u79d2\u7ea7\u3001\u767e\u6beb\u79d2\u7ea7\u3001\u5341\u6beb\u79d2\u7ea7\u3001\u6beb\u79d2\u7ea7\u3001\u8fd8\u662f\u5fae\u79d2\u7ea7\u7684\uff1b\n`time_unit`\u5fc5\u987b\u662f\u5e95\u6570\u4e3a10\u7684\u6307\u6570\u503c\uff1a\n- \u79d2\u7ea7 = 10**0 \u6216 1\n- \u767e\u6beb\u79d2\u7ea7 = 10**1 \u6216 10\n- \u5341\u6beb\u79d2\u7ea7 = 10**2 \u6216 100\n- \u6beb\u79d2\u7ea7 = 10**3 \u6216 1000\n- \u5fae\u79d2\u7ea7 = 10**6 \u6216 1000000\n\n`time_epoch`\u662f\u8d77\u59cb\u65f6\u95f4\u6233\uff0c\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570\uff0c\u800c\u4e14\u9700\u8981\u8b66\u60d5\u3002\u4e00\u65e6\u542f\u7528\uff0c\u4e0d\u53ef\u53d8\u66f4\u3002\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210ID\u91cd\u590d\u3002\n\n## Documentation\n\n[\u6682\u65e0](https://github.com/ml444/yz-id/README.md).\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ml444/yz-id.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yzid",
            "package_url": "https://pypi.org/project/yzid/",
            "platform": "",
            "project_url": "https://pypi.org/project/yzid/",
            "project_urls": {
                "Homepage": "https://github.com/ml444/yz-id.git"
            },
            "release_url": "https://pypi.org/project/yzid/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "An ID generator for distributed microservices.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10185141,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc0f3048c64acd8812c838232c1f2f12",
                    "sha256": "9ce0dddd7f6b506d7d24b3a8a371969477a9649107dcdb59ba78a6e55f2e9c68"
                },
                "downloads": -1,
                "filename": "yzid-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dc0f3048c64acd8812c838232c1f2f12",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 17834,
                "upload_time": "2021-04-27T13:45:04",
                "upload_time_iso_8601": "2021-04-27T13:45:04.937903Z",
                "url": "https://files.pythonhosted.org/packages/c9/61/e6a1333746b882e56a2163ef69c51c9b845b7c5a1235358c1ced983a98aa/yzid-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}