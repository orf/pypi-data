{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "api,bps,bpsapi,python,python3,wrapper",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pybpsapi",
            "package_url": "https://pypi.org/project/pybpsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/pybpsapi/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pybpsapi/1.0.0/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.6",
            "summary": "This package is a Python wrapper for the BPS API. It supports all the five endpoints of the API, and also contains a good circular-checking system.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15778510,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c7ca116f1861bd200918f7388ce21a01",
                    "sha256": "adcbda61dc1a86ecde332d8dd093effd57fb45826d3209dede7c799c013a858d"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c7ca116f1861bd200918f7388ce21a01",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 2922,
                "upload_time": "2022-11-11T16:32:49",
                "upload_time_iso_8601": "2022-11-11T16:32:49.566943Z",
                "url": "https://files.pythonhosted.org/packages/b7/ef/ac06bef06d1854a11d1a7a6a36ab735e4db4ca9ac5bfb9cc3fe5a663ee7c/pybpsapi-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca62485e0ae103d67056cfdf208bd1f4",
                    "sha256": "86ff99f2e09943a4e6d9c68ad29ae6533db2f7cfd651a035e8a250e116f09b1e"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ca62485e0ae103d67056cfdf208bd1f4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 2393,
                "upload_time": "2022-11-11T16:32:51",
                "upload_time_iso_8601": "2022-11-11T16:32:51.207618Z",
                "url": "https://files.pythonhosted.org/packages/d6/80/143a33b410226069da02032b4d68f9021b827d08c95fa07c6cfe4c8b8823/pybpsapi-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "api,bps,bpsapi,python,python3,wrapper",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pybpsapi",
            "package_url": "https://pypi.org/project/pybpsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/pybpsapi/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pybpsapi/1.0.1/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.6",
            "summary": "This package is a Python wrapper for the BPS API. It supports all the five endpoints of the API, and also contains a good circular-checking system.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15778510,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e5e2032760b165ddfd351d6af5649f28",
                    "sha256": "faf3b5a552a21468945d4cf76639201f5e34e995ecf47a7db7e7c98042dc9eb8"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e5e2032760b165ddfd351d6af5649f28",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 2761,
                "upload_time": "2022-11-11T16:52:22",
                "upload_time_iso_8601": "2022-11-11T16:52:22.872697Z",
                "url": "https://files.pythonhosted.org/packages/45/3f/13c705df8718eb091ee0c6bebf157a922ab23a7606304138efc3498edb2d/pybpsapi-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "58b9391df2fe921b7c47f57d8f0a5eb9",
                    "sha256": "5b4e7ee3e943b78b6a9c5177668d9b58a6b0ad239bc6ac4ffec1fb8e3da09875"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "58b9391df2fe921b7c47f57d8f0a5eb9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 2394,
                "upload_time": "2022-11-11T16:52:25",
                "upload_time_iso_8601": "2022-11-11T16:52:25.514395Z",
                "url": "https://files.pythonhosted.org/packages/a1/97/c27ba536a1be03aca2e5ef176390ff9d156396275f13ba8ff42c81c68d01/pybpsapi-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "api,bps,bpsapi,python,python3,wrapper",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pybpsapi",
            "package_url": "https://pypi.org/project/pybpsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/pybpsapi/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pybpsapi/1.0.2/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.6",
            "summary": "This package is a Python wrapper for the BPS API. It supports all the five endpoints of the API, and also contains a good circular-checking system.",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15778510,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e614de30a6c336fb743d09eff6a26c46",
                    "sha256": "ba840c59b4f810b9e4f07de2ed2135aa142deef14a2a590d929be0a78b151b8f"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e614de30a6c336fb743d09eff6a26c46",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 5285,
                "upload_time": "2022-11-13T13:34:22",
                "upload_time_iso_8601": "2022-11-13T13:34:22.488521Z",
                "url": "https://files.pythonhosted.org/packages/0b/50/ee6934c5642bac6970e064b061d014dcf8a99c8fedbe7debdedd55f5f702/pybpsapi-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "09f158c3bab9a7ab6ae725e4174f172f",
                    "sha256": "01b059ddfb605c8165b17dc942fb689b232d6504e9e0f434a71fc5c1544a6b62"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "09f158c3bab9a7ab6ae725e4174f172f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5139,
                "upload_time": "2022-11-13T13:34:24",
                "upload_time_iso_8601": "2022-11-13T13:34:24.477560Z",
                "url": "https://files.pythonhosted.org/packages/18/82/3319f95e2c675ef00e4873fac3587ebee0417d25654887218a6d4d6796dc/pybpsapi-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "api,bps,bpsapi,python,python3,wrapper",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pybpsapi",
            "package_url": "https://pypi.org/project/pybpsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/pybpsapi/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pybpsapi/1.1.0/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.6",
            "summary": "This package is a Python wrapper for the BPS API. It supports all the five endpoints of the API, and also contains a good circular-checking system.",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15778510,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2b7fdce4c2c28be0fcdeabeefdf3834e",
                    "sha256": "1db21acef11bb4d31eff47e42cef5d9fe148a03c9df1802ba4ecd28e89cc4ab5"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2b7fdce4c2c28be0fcdeabeefdf3834e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 5752,
                "upload_time": "2022-11-13T18:11:58",
                "upload_time_iso_8601": "2022-11-13T18:11:58.920463Z",
                "url": "https://files.pythonhosted.org/packages/f5/cf/2e7c5eecc54f4e29e517ca94aed04551a5dce2619df196d1f13f56266ee2/pybpsapi-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c424aaf6c15e7b510366f16cbd463e4",
                    "sha256": "78ce481881fb53a8d20438869c1955ff8ecc6c116909453c089799924f4939d2"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8c424aaf6c15e7b510366f16cbd463e4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5992,
                "upload_time": "2022-11-13T18:12:00",
                "upload_time_iso_8601": "2022-11-13T18:12:00.991107Z",
                "url": "https://files.pythonhosted.org/packages/27/36/289b54f20555469a9285c3bdb7102bbba8e1a5efce25e5b197548717d4a1/pybpsapi-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# pybpsapi - Python bindings for the BPS Circular API\n\nWhat is `pybpsapi`?\n\n`pybpsapi` is a Python library that allows you to interact with the BPS Circular API. It is written in Python using the requests library.\nThis package also features a well maintained and tried and tested circular-checking system to check for new circulars.\n\n## Installation\n\n`pybpsapi` can be installed using pip:\n\n```bash\npip install pybpsapi\n```\n\n## Contributing\n\nContributions are welcome! Please feel free to open an issue or a pull request on the [GitHub repository](https://bpsapi.rajtech.me/r/python-package)\n\n\n## Documentation\n\n**The full documentation for the package can be found [here](https://bpsapi.rajtech.me/docs/category/python-package).**\n\n### The `API` class\n\nThe `API` class is the main class of the package. It is used to interact with the five endpoints of the BPS Circular API.\n\n---\n\n#### `API.latest(category: str | int)` \n\nThis method returns the latest circulars from the BPS Circular API.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the API class\napi = pybpsapi.API()\n\n# Get the latest circular from the `general` category\nlatest1 = api.latest(category=\"general\")\n\n# or you could use the category ID\nlatest2 = api.latest(category=41)\n\n# You can also get the cached version of the latest circular\nlatest3 = api.latest(category=\"general\", cached=True)\n\n\nprint(latest1, latest2)\n```\n\n---\n\n#### `API.list(category: str | int)`\n\nThis method returns a list of all the circulars in a category.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the API class\napi = pybpsapi.API()\n\n# Get the list of all the circulars in the `general` category\nlist1 = api.list(category=\"general\")\n\n# or you could use the category ID\nlist2 = api.list(category=41)\n\nprint(list1, list2)\n```\n\n---\n\n#### `API.search(query: str | int)`\n\nThis method returns a list of the most similar circular that matches the search query.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the API class\napi = pybpsapi.API()\n\n# Get the list of all the circulars in the `general` category\nsearch1 = api.search(query=\"mobile\")\n\n# or you could use the circular ID\nsearch2 = api.search(query=1216)\n\nprint(search1, search2)\n```\n\n---\n\n#### `API.getpng(url: str)`\nThis method returns the PNG image(es) of the circular.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the API class\napi = pybpsapi.API()\n\n# or you could use the circular URL\npng1 = api.getpng(url=\"https://bpsdoha.com/circular/category/38-circular-ay-2022-23?download=1215\")\n\nprint(png1)\n```\n\n### The `CircularChecker` class\n\nThe `CircularChecker` class is a bit more complicated than the `API` class. It is used to check for new circulars in a category.\n\n#### Parameters\n\n- `category` - The category to check for new circulars. Can be a category name (general|ptm|exam) or a category ID.\n- `url` (optional) - The BPS API URL to use. Defaults to `https://bpsapi.rajtech.me/v1`.\n- `cache_method` (optional) - The method to use to cache the latest circular. Can be `None` for memory, `pickle` to use a `.pickle` file, or `database` for a local SQLITE3 Database. Defaults to `memory`.\n- `debug` (optional) - Whether to enable debug mode. This enables access to the `set_cache` and `refresh cache` methods. Defaults to `False`.\n\n##### Keyword Arguments\n\n\nThe following keyword arguments must be passed when using the `database` cache method.\n- `db_name` - The name of the database to use. \n- `db_path` - The path to the database. \n- `db_table` - The name of the table to use. \n\nThe following keyword arguments must be passed when using the `pickle` cache method.\n- `pickle_path` - The path to the pickle file.\n- `pickle_name` - The name of the pickle file.\n\n\n---\n\n\n#### Initial `CircularChecker` setup\n\n```python\n# Import the module\nimport pybpsapi\n\n# A minimal instance of the CircularChecker class. Stores the cache in memory.\nchecker = pybpsapi.CircularChecker(category=\"general\")\n\n# An instance of the CircularChecker class that stores the cache in a pickle file.\nchecker2 = pybpsapi.CircularChecker(category=\"general\", cache_method=\"pickle\", pickle_path=\".\", pickle_name=\"cache.pickle\")\n\n# An instance of the CircularChecker class that stores the cache in a SQLITE3 database. The database must be created before using this, but the table will be created automatically.\nchecker3 = pybpsapi.CircularChecker(category=\"general\", cache_method=\"database\", db_name=\"cache.db\", db_path=\".\", db_table=\"cache\")\n```\n\n---\n\n#### `CircularChecker.check()`\n\nThis method checks for new circulars in the category. It returns a list of the new circular(s), if any.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\")\n\n# Check for new circulars\nnew_circulars = checker.check()\n\nprint(new_circulars)\n```\n\n---\n\n\n#### `CircularChecker.get_cache()`\n\nThis method returns the current cache of the CircularChecker instance.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\")\n\n# Get the current cache\ncache = checker.get_cache()\n\nprint(cache)\n```\n\n---\n\n#### `CircularChecker.set_cache(data: dict, title: str = \"circular_list\")`\n\nThis method sets the cache of the CircularChecker instance. This method is only available when `debug` is set to `True`.\n\nThe `data` parameter is the actual data to set as the cache.   \nThe `title` parameter is the title of the circular list. This is only used when using the `database` cache method. Defaults to `circular_list`.\n\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\", debug=True)\n\n# Set the cache\nchecker.set_cache(data={...})\n```\n\n---\n\n#### `CircularChecker.refresh_cache()`\n\nThis method refreshes the cache of the CircularChecker instance. This method is only available when `debug` is set to `True`.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\", debug=True)\n\n# Refresh the cache\nchecker.refresh_cache()\n```\n\n\n### The `CircularCheckerGroup` class\n\nThe `CircularCheckerGroup` class is used to check for new circulars in multiple categories at once.\n\n#### Parameters\n\n- `*args` - Pre-made `CircularChecker` objects can be directly passed to the `CircularCheckerGroup` class.\n- `**kwargs` - The only kwargs is `debug` which exposes the _checkers variable. Defaults to `False`.\n\n#### Setup\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\")\nchecker2 = pybpsapi.CircularChecker(category=\"ptm\")\n\n# Create an instance of the CircularCheckerGroup class\nchecker_group = pybpsapi.CircularCheckerGroup(checker, checker2)\n```\n\nor, you could use the `add` method to add `CircularChecker` objects to the `CircularCheckerGroup` object.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\")\nchecker2 = pybpsapi.CircularChecker(category=\"ptm\")\n\n# Create an instance of the CircularCheckerGroup class\nchecker_group = pybpsapi.CircularCheckerGroup()\n\n# Add the CircularChecker object to the CircularCheckerGroup object\nchecker_group.add(checker)\nchecker_group.add(checker2)\n```\n\nor, you could create a new `CircularChecker` object inside the `CircularCheckerGroup` object.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularCheckerGroup class\nchecker_group = pybpsapi.CircularCheckerGroup()\n\n# Create a new CircularChecker object inside the CircularCheckerGroup object\nchecker_group.create(category=\"general\")\nchecker_group.create(category=\"ptm\", cache_method=\"pickle\", pickle_path=\".\", pickle_name=\"cache.pickle\") # The kwargs are passed to the CircularChecker class\n```\n\n#### `CircularCheckerGroup.check()`\n\nThis method checks for new circulars in all the categories in the `CircularCheckerGroup` object. It returns a list of the new circular(s), if any.\n\n```python\n# Import the module\nimport pybpsapi\n\n# Create an instance of the CircularChecker class\nchecker = pybpsapi.CircularChecker(category=\"general\")\nchecker2 = pybpsapi.CircularChecker(category=\"ptm\")\n\n# Create an instance of the CircularCheckerGroup class\nchecker_group = pybpsapi.CircularCheckerGroup(checker, checker2)\n\n# Check for new circulars\nnew_circulars = checker_group.check()\n```\n\nThe returned variable will be a `dict` with each key being the name or id of the category with the list inside it.\n\n\n#### `CircularCheckerGroup.create(...)`\n\nThe `create()` method is used to create a `CircularChecker` object and add it to the group.\n\n##### Parameters\n\n- `category`: string | int. The category id or the there main category names of the circular you want to get. Can be one of 'general', 'ptm', 'exam' or an integer category ID. [Mandatory]\n- `url` (optional): string. The URL of the BPS Circular API instance you want to interact with. It is set to `https://bpsapi.rajtech.me` by default. [Optional]\n- `cache_method` (optional): string. The method to be used for caching. Can be one of 'pickle' or 'database'. Defaults to 'None' (Memory). [Optional]\n- `debug` (optional): bool. Whether to enable debug mode or not. Defaults to False. [Optional]\n- `**kwargs` (optional): Keyword arguments to be passed to the `CircularChecker` object.\n\n\n```python\n# Import the package\nimport pybpsapi\n\n# Create a CircularCheckerGroup object\ngroup = pybpsapi.CircularCheckerGroup(debug=True)\n\n# Create a CircularChecker object and add it to the group\ngroup.create(category=\"general\", cache_method=\"pickle\", pickle_path=\".\", pickle_name=\"cache\")\n\nprint(len(group.checkers)) # 1, since we added one checker to the group using the create() method\n```\n\n\n#### `CircularCheckerGroup.refresh_cache()`\n\nThe `refresh_cache()` method is used to refresh the cache of all the `CircularChecker` objects in the group.\n\nThis method does not take any parameters.\n\n```python\n# Import the package\nimport pybpsapi\n\n# Create a CircularChecker object\nchecker = pybpsapi.CircularChecker(category=\"general\")\n\n# Create a CircularCheckerGroup object\ngroup = pybpsapi.CircularCheckerGroup()\n\n# Add the checker to the group\ngroup.add(checker)\n\n# Refresh the cache\ngroup.refresh_cache()\n```\n\n#### `CircularCheckerGroup.add(...)`\n\n\nThe `add()` method is used to add a `CircularChecker` object to the group.\n\n\n##### Parameters\n\n- `checker`: A `CircularChecker` object. The object to be added to the group.\n- `*args` (optional): Multiple `CircularChecker` objects. These objects will be added to the group.\n\n\n```python\n# Import the package\nimport pybpsapi\n\n# Create a CircularChecker object\nchecker = pybpsapi.CircularChecker(category=\"general\")\nchecker2 = pybpsapi.CircularChecker(category=\"ptm\")\n\n# Create a CircularCheckerGroup object\ngroup = pybpsapi.CircularCheckerGroup()\n\n# Add the checker to the group\ngroup.add(checker, checker2)\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "api,bps,bpsapi,python,python3,wrapper",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pybpsapi",
            "package_url": "https://pypi.org/project/pybpsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/pybpsapi/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pybpsapi/1.1.1/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.6",
            "summary": "This package is a Python wrapper for the BPS API. It supports all the five endpoints of the API, and also contains a good circular-checking system.",
            "version": "1.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15778510,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ff88ca73e5c3a9274a18dfe65df77d09",
                    "sha256": "0ff0623861865c45f8373744c6ae1ae08acc367f423e87a6e23a8fbbf2dec177"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ff88ca73e5c3a9274a18dfe65df77d09",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 6317,
                "upload_time": "2022-11-15T16:47:38",
                "upload_time_iso_8601": "2022-11-15T16:47:38.523577Z",
                "url": "https://files.pythonhosted.org/packages/81/a7/e022774c32ff6104bb0b4b46b17d3ed2614e03940df62b63282dbd884cf9/pybpsapi-1.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "347f57262fb26e2572b4c07e1eeac4a2",
                    "sha256": "b89ac3c52e924dbf5654876cec5b0cd58deb5bad0dba14d16184c0a20607b939"
                },
                "downloads": -1,
                "filename": "pybpsapi-1.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "347f57262fb26e2572b4c07e1eeac4a2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 6756,
                "upload_time": "2022-11-15T16:47:40",
                "upload_time_iso_8601": "2022-11-15T16:47:40.208665Z",
                "url": "https://files.pythonhosted.org/packages/ff/0d/ed1105fe8e0e4fc7c0550dde57c423a4ddf5c3d627011a5a3f557e152eb7/pybpsapi-1.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}