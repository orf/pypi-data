{
    "1.0.0": {
        "info": {
            "author": "feng",
            "author_email": "709642236@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "async spider",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fspider",
            "package_url": "https://pypi.org/project/fspider/",
            "platform": "",
            "project_url": "https://pypi.org/project/fspider/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/fspider/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "\u57fa\u4e8easyncio\u5f02\u6b65\u722c\u866b\u7f51\u7edc\u6846\u67b6\uff0c\u4effscrapy",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12824500,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4802b3211b0cbd4ae1e76231863b636c",
                    "sha256": "a7c81ab8a811a088ef1938e09e5205f7abce889f4c7940a6c6c4a295767ce122"
                },
                "downloads": -1,
                "filename": "fspider-1.0.0-py3.8.egg",
                "has_sig": false,
                "md5_digest": "4802b3211b0cbd4ae1e76231863b636c",
                "packagetype": "bdist_egg",
                "python_version": "1.0.0",
                "requires_python": ">=3.7",
                "size": 88183,
                "upload_time": "2022-02-08T07:30:48",
                "upload_time_iso_8601": "2022-02-08T07:30:48.895915Z",
                "url": "https://files.pythonhosted.org/packages/39/60/dc2c9e22511b69cf81e652c216515a29637eca999b64b24a503b273a0284/fspider-1.0.0-py3.8.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f5d99f689873458fed603b7fc7d0b3d9",
                    "sha256": "d3b4b37ca71a1b409d3ee018925f74874e2092258b87fa6259a512f0f009dfdf"
                },
                "downloads": -1,
                "filename": "fspider-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f5d99f689873458fed603b7fc7d0b3d9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 25831,
                "upload_time": "2021-08-16T11:59:16",
                "upload_time_iso_8601": "2021-08-16T11:59:16.384226Z",
                "url": "https://files.pythonhosted.org/packages/0f/bb/1133739ea86e1e44e215f5fa06061e37ccccc3413d76dda5aa2170de7afd/fspider-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "feng",
            "author_email": "709642236@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python"
            ],
            "description": "# fspider\n\n#### \u4ecb\u7ecd\n\nfspider\u662f\u4e00\u6b3e\u57fa\u4e8epython\u539f\u751f\u534f\u7a0basyncio\u7684\u5f02\u6b65\u7f51\u7edc\u722c\u866b\u6846\u67b6\uff0c\u4eff\u7167scrapy\n\n#### \u8981\u6c42\n\npython>=3.7\n\n#### \u5b89\u88c5\n\n1.```pip install fspider```\n\n2.\u6216\u8005[\u70b9\u51fb\u4e0b\u8f7d](https://gitee.com/imflg) \u7136\u540e\u6267\u884c```python setup.py install```\n\n#### \u6559\u7a0b\n\n##### \u521b\u5efa\u9879\u76ee\n\nfspdier startproject \u547d\u4ee4\u6709\u4e24\u4e2a\u53c2\u6570-\u9879\u76ee\u540d\u79f0\u548c\u9879\u76ee\u8def\u5f84\n```fspdier startproject testspider .``` \u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efatestspider\u9879\u76ee\n\n```\ncd testspider\npython main.py\n```\n\n\u6267\u884c\u9ed8\u8ba4\u7684\u6d4b\u8bd5\u7528\u4f8b\n\n#### command\n\n\u5728\u547d\u4ee4\u884c\u7a97\u53e3\u4f7f\u7528fspider -h \u67e5\u770b\u652f\u6301\u7684\u547d\u4ee4\u53ca\u53c2\u6570\n\n- fspdier startproject -h\n- fspdier shell -h\n\n#### \u4e0a\u4e0b\u6587\u53d8\u91cf\n\n```\nfrom fspider import context\ncontext.spider.get()\n```\n\n\u76ee\u524d\u652f\u6301spider\u5bf9\u8c61\u7684\u83b7\u53d6\uff0c\u8fd9\u6837\u5c31\u4e0d\u5fc5\u5c06spider\u4e00\u76f4\u4f5c\u4e3a\u53c2\u6570\u6765\u4f20\u9012\u3002\n<span style=\"color:red\">\u6ce8\u610f:\u5fc5\u987b\u5728spider\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u5373\u65e0\u6cd5\u5728spider init \u91cc\u9762\u8c03\u7528</span>\n\n#### signals\n\n- spdier_opened\n- spider_closed\n\n\u4f7f\u7528\u65b9\u6cd5:\nspider \u9ed8\u8ba4\u7ed1\u5b9a\u4e86\u8fd9\u4e24\u4e2asignal \u4f60\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e24\u4e2a\u65b9\u6cd5\n\n```python\nasync def spider_opened(self):\n    self.logger.info('spider_opened!!!!!!!!!!!')\n\n\nasync def spider_closed(self):\n    self.logger.info('spider_closed ')\n    pass\n```\n\n\u5728\u5176\u4ed6\u5730\u65b9\u4f7f\u7528(sender\u53c2\u6570\u9ed8\u8ba4\u4f7f\u7528```context.spider.get()```)\n\n```python\nfrom fspider import signals\n\n\nasync def spider_opened():\n    pass\n\n\nsignals.connect(receiver=spider_opened, signal=signals.spider_opened)\n```\n\n#### spider middreware\n\nspider middreware \u662f\u7528\u6765\u5904\u7406spider\u7ed3\u679c\u7684\u7ec4\u4ef6 \u4e00\u4e2a\u7b80\u5355\u7684spider middreware \u5982\u4e0b\u6240\u793a\uff1a\n\n```python\nfrom fspider.http.response import Response\nfrom fspider.spidermiddlewares import SpiderMiddleware\nfrom fspider.utils.type import SpiderRequest\n\n\nclass TestSpiderMiddleware(SpiderMiddleware):\n    async def process_start_requests(self, result: SpiderRequest) -> SpiderRequest:\n        async for r in result:\n            print('process_start_requests', r)\n            yield r\n\n    async def process_spider_output(self, response: Response, result: SpiderRequest) -> SpiderRequest:\n        async for i in result:\n            print('process_spider_output', i)\n            yield i\n```\n\n\u4e4b\u540e\u4f60\u9700\u8981\u5728setting\u4e2d\u914d\u7f6e\u542f\u7528\uff1a\n\n```python\nSPIDER_MIDDLEWARES = {\n    'test.middlewares.TestSpiderMiddleware': 543,\n}\n```\n\n#### downloader middreware\n\ndownloader middreware \u662f\u7528\u6765\u5904\u7406request\u8bf7\u6c42\uff0c\u6700\u7ec8\u5f97\u5230response\u7684\u4e00\u7cfb\u5217\u7ec4\u4ef6\uff0c \u4e00\u4e2a\u7b80\u5355\u7684downloader middreware \u5982\u4e0b\u6240\u793a\n\n```python\nfrom typing import Union\nfrom fspider.downloadermiddlewares import DownloaderMiddleware\nfrom fspider.http.request import Request\nfrom fspider.http.response import Response\n\n\nclass TestDownloaderMiddleware(DownloaderMiddleware):\n    async def process_request(self, request: Request) -> Union[Request, Response, None]:\n        print('process_request', request)\n        return None\n\n    async def process_response(self, request: Request, response: Response) -> Union[Request, Response]:\n        print('process_response', response)\n        return response\n\n```\n\n\u4e4b\u540e\u4f60\u9700\u8981\u5728setting\u4e2d\u914d\u7f6e\u542f\u7528\uff1a\n\n```python\nDOWNLOADER_MIDDLEWARES = {\n    'test.middlewares.TestDownloaderMiddleware': 543,\n}\n```\n\n> DOWNLOADER_MIDDLEWARES \u4f1a\u5148\u987a\u5e8f\u6267\u884c\u5404\u4e2amiddlewares\u7684process_request\u65b9\u6cd5\uff0c\u4e4b\u540e\u5012\u53d9\u6267\u884cprocess_response\n\n#### \u5185\u7f6e downloader middreware\n\n##### RobotsTxtMiddleware\n\n##### DownloadTimeoutMiddleware\n\n##### DefaultHeadersMiddleware\n\n```python\nDEFAULT_REQUEST_HEADERS = {\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n    'Accept-Language': 'zh-CN,zh-HK;q=0.9,zh;q=0.8,en;q=0.7,la;q=0.6,ja;q=0.5',\n    'accept-encoding': 'gzip, deflate, br',\n}\n```\n\n##### HttpCompressionMiddleware\n\naiohttp \u4f1a\u6839\u636eresponse \u81ea\u52a8\u89e3\u538b\u6570\u636e\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u5b9e\u73b0\u8be5\u4e2d\u95f4\u4ef6 \uff08\u9ed8\u8ba4DEFAULT_REQUEST_HEADERS 'accept-encoding': 'gzip, deflate,\nbr'\uff0c\u63a5\u53d7\u538b\u7f29\u6570\u636e\uff0c\u4e0d\u9700\u8981\u7684\u8bdd\u53ef\u4ee5\u5220\u9664accept-encoding\uff09\n\n##### UserAgentMiddleware\n\n##### CookiesMiddleware\n\n##### DefaultDownloaderMiddleware\n\n#### Item Pipeline\n\n\u5f53spider \u6293\u53d6\u4e86item,\u5c06\u4f1a\u79fb\u4ea4\u5230 item pipeline ,\u6309\u7167\u987a\u5e8f\u6267\u884c\u76f8\u5e94\u7684\u7ec4\u4ef6 \u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684pipeline \u5982\u4e0b\u6240\u793a\uff1a\n\n```python\nimport logging\nimport typing\nfrom fspider.pipelines import Pipeline\nfrom fspider.utils.type import Item\n\n\nclass FspidertestPipeline(Pipeline):\n    async def process_item(self, item: Item) -> typing.Optional[Item]:\n        logging.info(item)\n        return item\n```\n\n- \u4f60\u5fc5\u987b\u5b9e\u73b0process_item\u65b9\u6cd5\n    - \u6bcf\u4e2apipeline\u90fd\u4f1a\u6267\u884c\u6b64\u65b9\u6cd5\u6765\u5904\u7406\n    - ```return item``` \u5c06\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eedpipeline \uff0c```return None```\u5c06\u4f1a\u505c\u6b62\u6267\u884c\u540e\u7eedpipiline\n\n- \u7136\u540e\u9700\u8981\u5728setting \u914d\u7f6e\u542f\u7528\uff1a\n\n```python\nITEM_PIPELINES = {\n    'fspidertest.pipelines.FspidertestPipeline': 300,\n}\n```\n\n##### MediaPipeline\n\n\u8fd9\u662f\u4e00\u4e2a\u7528\u6765\u5e76\u53d1\u5904\u7406image\u3001video\u7b49\u6587\u4ef6\u7684pipeline\uff0c\u5e76\u63d0\u4f9b\u4e86\u5e76\u53d1\u63a7\u5236\u3001\u5927\u5c0f\u9650\u5236\u3001\u4e0b\u8f7d\u65f6\u95f4\u4f30\u7b97\u3001\u8d85\u65f6\u7b49\u529f\u80fd \u9ed8\u8ba4\u914d\u7f6e\u53c2\u6570\n\n- meida_key\uff1a#item[meida_key] \u662f\u5c06\u8981\u4e0b\u8f7d\u7684url\u5217\u8868 \u9ed8\u8ba4\u503c\uff1amedia_urls\n- CONN_LIMIT\uff1a\u6700\u5927\u5e76\u53d1 \u9ed8\u8ba4\u503c\uff1a5\n- LIMIT_PER_HOST\uff1a\u5355\u4e2a\u57df\u540d\u6700\u5927\u5e76\u53d1 \u9ed8\u8ba4\u503c\uff1a2\n- file_dir\uff1a\u4fdd\u5b58\u76ee\u5f55 \u9ed8\u8ba4\u5f53\u524d\u76ee\u5f55\n- size_limit: \u6700\u5927\u6587\u4ef6\u9650\u5236 \u9ed8\u8ba4\uff1a1024 * 1024 * 1024 # 1GB\n- time_limit\uff1a\u6700\u5927\u65f6\u957f \u9ed8\u8ba4\uff1a10 * 60 # 10\u5206\u949f\n\nitem_completed \u65b9\u6cd5\uff1a\n> params  :\n>> ```results: typing.Union[str, Exception]```  \u8fd4\u56de\u6587\u4ef6\u4fdd\u5b58\u8def\u5f84\u6216\u8005exception <br>\n> > item\n\n> return ```item``` or ```None```\n\nexample:\n \n```python\n\nimport logging\nimport typing\nfrom fspider.pipelines.files import MediaPipeline\nfrom fspider.utils.type import Item\n\n\nclass FspidertestPipeline(MediaPipeline):\n    meida_key = 'images'\n    LIMIT_PER_HOST = 2\n\n    # async def process_item(self, item: Item) -> typing.Optional[Item]:\n    #     item = await super().process_item(item)\n    #     logging.info(item)\n    #     return item\n\n    async def item_completed(self, results: typing.Union[str, Exception], item: Item) -> Item:\n        item['media_path'] = [r for r in results if not isinstance(r, Exception)]\n        return item\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/flagang/fspider",
            "keywords": "async spider",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fspider",
            "package_url": "https://pypi.org/project/fspider/",
            "platform": "",
            "project_url": "https://pypi.org/project/fspider/",
            "project_urls": {
                "Homepage": "https://github.com/flagang/fspider"
            },
            "release_url": "https://pypi.org/project/fspider/1.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "\u57fa\u4e8easyncio\u5f02\u6b65\u722c\u866b\u7f51\u7edc\u6846\u67b6\uff0c\u4effscrapy",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12824500,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0bdb976e5db61d2dd05d1cef339955cc",
                    "sha256": "d9360256802d3f161141008771d18edb44b351487d417c4177ef90a91aac8cfe"
                },
                "downloads": -1,
                "filename": "fspider-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0bdb976e5db61d2dd05d1cef339955cc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29435,
                "upload_time": "2022-02-08T10:51:43",
                "upload_time_iso_8601": "2022-02-08T10:51:43.512923Z",
                "url": "https://files.pythonhosted.org/packages/5b/ed/c7c65a64c304e97f14d4ca933e408768840fca65cfad21bd8832ea3ec3c4/fspider-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}