{
    "2.1": {
        "info": {
            "author": "Matthew Einhorn",
            "author_email": "moiein2000@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: Microsoft :: Windows",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Topic :: Scientific/Engineering",
                "Topic :: System :: Hardware"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://matham.github.io/pybarst/",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "PyBarst",
            "package_url": "https://pypi.org/project/PyBarst/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyBarst/",
            "project_urls": {
                "Homepage": "http://matham.github.io/pybarst/"
            },
            "release_url": "https://pypi.org/project/PyBarst/2.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "An interface to Barst.",
            "version": "2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2238956,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4bba4797b210c6cbac2a9ea03b145d4a",
                    "sha256": "cc2c0b184de0b1ab7c4eab3108f90a4e431c456208101741a809033d22498026"
                },
                "downloads": -1,
                "filename": "PyBarst-2.1-cp27-cp27m-win32.whl",
                "has_sig": false,
                "md5_digest": "4bba4797b210c6cbac2a9ea03b145d4a",
                "packagetype": "bdist_wheel",
                "python_version": "cp27",
                "requires_python": null,
                "size": 2125892,
                "upload_time": "2016-07-22T21:18:28",
                "upload_time_iso_8601": "2016-07-22T21:18:28.241474Z",
                "url": "https://files.pythonhosted.org/packages/6f/ef/1afc99d660c7df51ed5d128dce94a71e1cb60dd85a5cdd6d3e0fa6ff85de/PyBarst-2.1-cp27-cp27m-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6295fdfd1193b59a3466501de707b884",
                    "sha256": "6797d489791bf34accca30123885b640dd7b2f27f29e00dd6167cc6144651c89"
                },
                "downloads": -1,
                "filename": "PyBarst-2.1-cp27-cp27m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "6295fdfd1193b59a3466501de707b884",
                "packagetype": "bdist_wheel",
                "python_version": "cp27",
                "requires_python": null,
                "size": 2394221,
                "upload_time": "2016-07-22T21:18:23",
                "upload_time_iso_8601": "2016-07-22T21:18:23.067416Z",
                "url": "https://files.pythonhosted.org/packages/37/21/a21a8e59ac0e58fd26fcc296e9dc1faee421a944796be04c721e3420261c/PyBarst-2.1-cp27-cp27m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fe72a8931314d348ce8ea08737350e37",
                    "sha256": "9a38bd4f4b2d566cd56f9cd033e0707f3cf690e3450ddf16b600633a5714ddb4"
                },
                "downloads": -1,
                "filename": "PyBarst-2.1-cp34-cp34m-win32.whl",
                "has_sig": false,
                "md5_digest": "fe72a8931314d348ce8ea08737350e37",
                "packagetype": "bdist_wheel",
                "python_version": "cp34",
                "requires_python": null,
                "size": 2122998,
                "upload_time": "2016-07-22T21:18:38",
                "upload_time_iso_8601": "2016-07-22T21:18:38.883862Z",
                "url": "https://files.pythonhosted.org/packages/96/b1/74cbb8d108d2f51749e9817b6620e81e63363447f3499bce1099f381913d/PyBarst-2.1-cp34-cp34m-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "faf72fe0ba5f96c326ff22404cccaa80",
                    "sha256": "0c71d3b3b29b555d02013f856d6afec15d9a04218dff258e728c59e1322df9c3"
                },
                "downloads": -1,
                "filename": "PyBarst-2.1-cp34-cp34m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "faf72fe0ba5f96c326ff22404cccaa80",
                "packagetype": "bdist_wheel",
                "python_version": "cp34",
                "requires_python": null,
                "size": 2389816,
                "upload_time": "2016-07-22T21:18:33",
                "upload_time_iso_8601": "2016-07-22T21:18:33.885980Z",
                "url": "https://files.pythonhosted.org/packages/2d/cc/bd8774f703a8629070e8396dfa9cbac0f73c3d43d37665c01a693010abdb/PyBarst-2.1-cp34-cp34m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ec5d8bfa683b0b1c209e316e5b780665",
                    "sha256": "2aba478094c35f3c79eff72fe3cc6f6ae01ee1dc142e36a9da9e189b0e5e2213"
                },
                "downloads": -1,
                "filename": "PyBarst-2.1.zip",
                "has_sig": false,
                "md5_digest": "ec5d8bfa683b0b1c209e316e5b780665",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13491,
                "upload_time": "2016-07-22T21:18:42",
                "upload_time_iso_8601": "2016-07-22T21:18:42.136478Z",
                "url": "https://files.pythonhosted.org/packages/4d/64/9acf748a552246f36397b8e094fddab2276ef4c93fecfc05d36c91d77659/PyBarst-2.1.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.1.dev0": {
        "info": {
            "author": "Matthew Einhorn",
            "author_email": "moiein2000@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: Microsoft :: Windows",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Topic :: Scientific/Engineering",
                "Topic :: System :: Hardware"
            ],
            "description": "PyBarst is a python bindings for the Barst client API.\n\nThis project provides a python interface to the Barst server project.\nBarst is a server which provides access to commonly used hardware in the lab,\ne.g. FTDI USB devices, RTV cameras, serial ports etc.\n\nThe wheels come with the Barst executable and therefore does not need\nto be installed separately. The path to the executable can be found in\n`pybarst.dep_bins`.\n\nFor more information: http://matham.github.io/pybarst/index.html\n\nTo install https://matham.github.io/pybarst/installation.html\n\n.. image:: https://ci.appveyor.com/api/projects/status/q9om4pu4og1kkdut/branch/master?svg=true\n    :target: https://ci.appveyor.com/project/matham/pybarst/branch/master\n    :alt: Appveyor status\n\n.. image:: https://img.shields.io/pypi/pyversions/pybarst.svg\n    :target: https://pypi.python.org/pypi/pybarst/\n    :alt: Supported Python versions\n\n.. image:: https://img.shields.io/pypi/v/pybarst.svg\n    :target: https://pypi.python.org/pypi/pybarst/\n    :alt: Latest Version on PyPI\n\nUsage example\n-------------\n\nStarting a server::\n\n    >>> # create a local server instance with a pipe named TestPipe. Since not\n    >>> # provided, the executable is searched for in pybarst.dep_bins and in\n    >>> # Program Files.\n    >>> server = BarstServer(pipe_name=r'\\\\.\\pipe\\TestPipe')\n    >>> # now actually create the server and start it running\n    >>> server.open_server()\n    >>> # Connect to a server running on remote computer named PC_Name using a pipe named TestPipe\n    >>> server2 = BarstServer(pipe_name=r'\\\\PC_Name\\pipe\\TestPipe')\n    >>> # now open the connection to the remote server\n    >>> server2.open_server()\n\nGet the current server time::\n\n    >>> server.clock()\n    (1.5206475727928106, 13045896424.049448)\n\nAn example using the RTV-4 video card::\n\n    >>> from pybarst.core.server import BarstServer\n    >>> from pybarst.rtv import RTVChannel\n\n    >>> server = BarstServer(pipe_name=r'\\\\.\\pipe\\TestPipe')\n    >>> server.open_server()\n    >>> print(server.get_manager('rtv'))\n    {'version': 1080L, 'chan': 1, 'chan_id': 'RTVMan'}\n\n    >>> # for the code below, there should be a RTV-4 like device connected, with\n    >>> # a port 0 available\n    >>> rtv = RTVChannel(server=server, chan=0, video_fmt='full_NTSC', frame_fmt='rgb24', lossless=False)\n    >>> rtv.open_channel()\n    >>> rtv.set_state(state=True)\n\n    >>> # data is a buffer containing the raw image data\n    >>> time, data = rtv.read()\n    >>> print(time, len(data), rtv.buffer_size)\n    (12865.015067682945, 921600, 921600L)\n    >>> time, data = rtv.read()\n    >>> print(time, len(data), rtv.buffer_size)\n    (12865.048412758983, 921600, 921600L)\n    >>> # remove any data queued, otherwise read will return any waiting data\n    >>> rtv.set_state(state=False, flush=True)\n\nA example using the windows serial port::\n\n    >>> from pybarst.core.server import BarstServer\n    >>> from pybarst.serial import SerialChannel\n\n    >>> server = BarstServer(pipe_name=r'\\\\.\\pipe\\TestPipe')\n    >>> server.open_server()\n    >>> print(server.get_manager('serial'))\n    {'version': 498139398L, 'chan': 0, 'chan_id': 'SerMan'}\n\n    >>> # for this example, COM3 should have a loopback cable connected to it.\n    >>> serial = SerialChannel(server=server, port_name='COM3', max_write=32, max_read=32)\n    >>> serial.open_channel()\n\n    >>> time, val = serial.write(value='How are you today?', timeout=10000)\n    >>> print(time, val)\n    (1931.5567431509603, 18)\n    >>> # read the exact number of chars written.\n    >>> time, val = serial.read(read_len=len('How are you today?'), timeout=10000)\n    >>> print(time, val)\n    (1931.5607736011307, 'How are you today?')\n\n    >>> serial.close_channel_server()",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://matham.github.io/pybarst/",
            "keywords": null,
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "PyBarst",
            "package_url": "https://pypi.org/project/PyBarst/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyBarst/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://matham.github.io/pybarst/"
            },
            "release_url": "https://pypi.org/project/PyBarst/2.1.dev0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "An interface to Barst.",
            "version": "2.1.dev0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 2238956,
        "urls": [],
        "vulnerabilities": []
    }
}