{
    "0.1.0": {
        "info": {
            "author": "Alexander Ignatov",
            "author_email": "yalishanda@abv.bg",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Build Tools"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/allexks/mynathon/archive/0.1.0.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/allexks/mynathon",
            "keywords": "maina,manqk,bg,stoyan kolev,jargon",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mynathon",
            "package_url": "https://pypi.org/project/mynathon/",
            "platform": "",
            "project_url": "https://pypi.org/project/mynathon/",
            "project_urls": {
                "Download": "https://github.com/allexks/mynathon/archive/0.1.0.tar.gz",
                "Homepage": "https://github.com/allexks/mynathon"
            },
            "release_url": "https://pypi.org/project/mynathon/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Mynathon - \u0415\u0437\u0438\u043a\u044a\u0442 \u0437\u0430 \u043c\u0430\u0439\u043d\u0438 \u0438 \u043c\u0430\u043d\u044f\u0446\u0438.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7443151,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8adbbc9b8ee3df7a7583fdbe62f1a32",
                    "sha256": "c705383f13202804a3f84f126745ac4e8194389498fc56586394d1ff5eed5501"
                },
                "downloads": -1,
                "filename": "mynathon-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f8adbbc9b8ee3df7a7583fdbe62f1a32",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5350,
                "upload_time": "2020-06-10T12:51:19",
                "upload_time_iso_8601": "2020-06-10T12:51:19.936891Z",
                "url": "https://files.pythonhosted.org/packages/66/f1/31fdf57b4da823988da8c894c2d5b8d6baa687377e1a75229f7c5b7e2a7e/mynathon-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f06588c3216e8c671fafbf3cd24cfb45",
                    "sha256": "f7a0f8aa926e12f8824cea0717b220259e0f604f02569dda16cbf7807a7dc005"
                },
                "downloads": -1,
                "filename": "mynathon-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f06588c3216e8c671fafbf3cd24cfb45",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4998,
                "upload_time": "2020-06-10T12:51:22",
                "upload_time_iso_8601": "2020-06-10T12:51:22.037288Z",
                "url": "https://files.pythonhosted.org/packages/d2/c4/c9aa588dc88a8787c032ace3dc1008d73f264f0a3c3e247c55d4adf5a43b/mynathon-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Alexander Ignatov",
            "author_email": "yalishanda@abv.bg",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development :: Build Tools"
            ],
            "description": "# Mynathon - \u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u043d\u0438\u044f\u0442 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0435\u043d \u0435\u0437\u0438\u043a \u0437\u0430 \u043c\u0430\u0439\u043d\u0438 \u0438 \u043c\u0430\u043d\u044f\u0446\u0438.\n\n![Build](https://github.com/allexks/mython/workflows/Python%20package/badge.svg)\n\n![\u041c\u043e\u043b\u044f](https://media.tenor.com/images/139208d8296e1e01a6e3fc41a14d624d/tenor.gif)\n\n## \u041a\u043b\u044e\u0447\u043e\u0432\u0438 \u0434\u0443\u043c\u0438\n* `True` => `\u0442\u0440\u044e`\n* `False` => `\u0431\u043e\u043c\u0431\u043e\u043a`\n* `and` => `\u0438`\n* `or` => `\u0438\u043b\u0438`\n* `not` => `\u043d\u0435`\n* `is` => `\u0435`\n* `None` => `\u043d\u0438\u0449\u043e`\n* `if` => `\u0430\u043a\u043e \u043c\u0430\u0439\u043d\u0430`\n* `elif` => `\u0430\u043a\u043e \u043f\u044a\u043a`\n* `else` => `\u0438\u043d\u0430\u0447\u0435`\n* `for` => `\u043d\u0430\u0447\u0438 \u0437\u0430`\n* `in` => `\u043f\u0440\u043e\u0431\u044f\u0433\u0432\u0430\u0449\u043e`\n* `while` => `\u043d\u0430\u0447\u0438 \u043c\u0430\u0439\u043d\u0430`\n* `break` => `\u0441\u043a\u0430\u043d\u0434\u0430\u043b`\n* `continue` => `\u0434\u0430\u0439\u043c\u0443 \u043e\u0449\u0435`\n* `raise` => `\u043c\u0430\u043d\u044f\u043a \u0438\u0441\u043a\u0430\u0448 \u0434\u0430 \u043c\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0448`\n* `assert` => `\u043c\u0430\u043d\u044f\u043a \u0442\u0438 \u0438\u0435\u0448 \u043b\u0438 \u0441\u0430`\n* `try` => `\u043f\u0440\u043e\u0431\u0432\u0430\u0439 \u043c\u0430\u0439\u043d\u0430`\n* `except` => `\u044f\u0431\u0430 \u0433\u0440\u044a\u043c\u043d\u0430 \u043c\u0438`\n* `finally` => `\u043a\u0430\u0442 \u0446\u044f\u043b\u043e`\n* `pass` => `\u043f\u0430\u0441`\n* `class` => `\u043a\u043b\u0430\u0441`\n* `def` => `\u043d\u0435\u043a\u0430`\n* `return` => `\u0433\u043e\u0442\u043e\u043e \u043c\u0430\u0439\u043d\u0430`\n* `yield` => `\u043c\u0435\u0442\u043d\u0438 \u043c\u0443`\n* `lambda` => `\u0433\u044a\u0440\u0446\u0438\u044f`\n* `from` => `\u043e\u0442`\n* `import` => `\u0434\u0430\u0439 \u043c\u0438`\n* `as` => `\u043a\u0430\u0442\u043e`\n* `with` => `\u043f\u0440\u0430\u0441\u043a\u0430\u0439`\n* `del` => `\u043c\u0430\u043d\u0438 \u0433\u043e \u0442\u043e\u0430 \u0431\u0435 \u043c\u0430\u0439\u043d\u0430`\n* `nonlocal` => `\u0441\u043e\u0444\u0438\u044f`\n* `global` => `\u043a\u0438\u0447\u0443\u043a\u0430`\n* `await` => `\u0438\u0437\u0447\u0430\u043a\u0430\u0439`\n* `async` => `\u043c\u043d\u043e\u0433\u043e\u043d\u0438\u0448\u043a\u043e\u0432\u043e`\n\n##  \u0418\u043d\u0441\u0442\u0430\u043b\u0430\u0446\u0438\u044f\n\n`$ pip3 install mynathon`\n\n##  \u0423\u043f\u043e\u0442\u0440\u0435\u0431\u0430\n\n`$ mynathon {\u0438\u043c\u0435_\u043d\u0430_mynathon_\u0441\u043a\u0440\u0438\u043f\u0442_\u0444\u0430\u0439\u043b\u0430}`\n\n##  \u041f\u0440\u0438\u043c\u0435\u0440\u0438\n### \u041f\u0440\u0438\u043c\u0435\u0440 1\n``` mynathon\n\u043d\u0435\u043a\u0430 \u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b(\u0447\u0438\u0441\u043b\u043e):\n    \u0430\u043a\u043e \u043c\u0430\u0439\u043d\u0430 \u0447\u0438\u0441\u043b\u043e < 0:\n        \u043c\u0430\u043d\u044f\u043a \u0438\u0441\u043a\u0430\u0448 \u0434\u0430 \u043c\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0448 ValueError(\"\u0415 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u043d\u043e \u0447\u0438\u0441\u043b\u043e\")\n    \u0430\u043a\u043e \u043f\u044a\u043a \u0447\u0438\u0441\u043b\u043e == 0 \u0438\u043b\u0438 \u0447\u0438\u0441\u043b\u043e == 1:\n        \u0433\u043e\u0442\u043e\u043e \u043c\u0430\u0439\u043d\u0430 1\n    \u0438\u043d\u0430\u0447\u0435:\n        \u0433\u043e\u0442\u043e\u043e \u043c\u0430\u0439\u043d\u0430 \u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b(\u0447\u0438\u0441\u043b\u043e - 1) * \u0447\u0438\u0441\u043b\u043e\n\nprint(f\"\u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b\u044a\u0442 \u043d\u0430 3 \u0435 {\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b(3)}, \u0430 \u043d\u0430 \u043d\u0443\u043b\u0430 \u0435 {\u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b(0)}\")\n\n\u043f\u0440\u043e\u0431\u0432\u0430\u0439 \u043c\u0430\u0439\u043d\u0430:\n    \u043f\u0440\u043e\u043c\u0435\u043d\u043b\u0438\u0432\u0430 = \u0444\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b(-1)\n\u044f\u0431\u0430 \u0433\u0440\u044a\u043c\u043d\u0430 \u043c\u0438 Exception \u043a\u0430\u0442\u043e \u043d\u0435\u0449\u043e:\n    print(\u043d\u0435\u0449\u043e)\n\u043a\u0430\u0442 \u0446\u044f\u043b\u043e:\n    print(\"\u0413\u043e\u0442\u043e\u0432 \u0441\u0438\")\n```\n\u041a\u043e\u0434\u044a\u0442 \u0435 \u0435\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u0435\u043d \u043d\u0430:\n``` python\ndef factorial(number):\n    if number < 0:\n        raise ValueError(\"\u0415 \u043d\u0435 \u043c\u043e\u0436\u0435 \u0441 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u043d\u043e \u0447\u0438\u0441\u043b\u043e\")\n    elif number == 0 or number == 1:\n        return 1\n    else:\n        return factorial(number - 1) * number\n\nprint(f\"\u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0435\u043b\u044a\u0442 \u043d\u0430 3 \u0435 {factorial(3)}, \u0430 \u043d\u0430 \u043d\u0443\u043b\u0430 \u0435 {factorial(0)}\")\n\ntry:\n    var = factorial(-1)\nexcept Exception e:\n    print(e)\nfinally:\n    print(\"\u0413\u043e\u0442\u043e\u0432 \u0441\u0438\")\n```\n### \u041f\u0440\u0438\u043c\u0435\u0440 2\n``` mynathon\n\u043e\u0442 math \u0434\u0430\u0439 \u043c\u0438 sqrt \u043a\u0430\u0442\u043e \u043a\u043e\u0440\u0435\u043d\n\n\u043d\u0435\u043a\u0430 \u043a\u043e\u0440\u0435\u043d\u0438\u0442\u0435_\u043d\u0430_\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e_\u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435(a, b, c):\n    \u0430\u043a\u043e \u043c\u0430\u0439\u043d\u0430 a == 0:\n        \u043c\u0430\u043d\u044f\u043a \u0438\u0441\u043a\u0430\u0448 \u0434\u0430 \u043c\u0435 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0448 ValueError(\"\u0423\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0435 \u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e!\")\n\n    \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430 = b*b - 4*a*c\n    \u043a\u043e\u0440\u0435\u043d_\u043e\u0442_\u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430 = \u043a\u043e\u0440\u0435\u043d(\u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430) \u0430\u043a\u043e \u043c\u0430\u0439\u043d\u0430 \u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430 >= 0 \u0438\u043d\u0430\u0447\u0435 \u043a\u043e\u0440\u0435\u043d(-\u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430)*1j\n\n    \u043a\u043e\u0440\u0435\u043d1 = (-b - \u043a\u043e\u0440\u0435\u043d_\u043e\u0442_\u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430) / (2 * a)\n    \u043a\u043e\u0440\u0435\u043d2 = (-b + \u043a\u043e\u0440\u0435\u043d_\u043e\u0442_\u0434\u0438\u0441\u043a\u0440\u0438\u043c\u0438\u043d\u0430\u043d\u0442\u0430\u0442\u0430) / (2 * a)\n\n    \u0433\u043e\u0442\u043e\u043e \u043c\u0430\u0439\u043d\u0430 \u043a\u043e\u0440\u0435\u043d1, \u043a\u043e\u0440\u0435\u043d2\n\n\u043a\u043e\u04401 = \u043a\u043e\u0440\u0435\u043d\u0438\u0442\u0435_\u043d\u0430_\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e_\u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435(1, -3, 2)\nprint(\"x^2 - 3x + 2 = 0 <=> x1 == {0}; x2 == {1}\".format(*\u043a\u043e\u04401))\n\n\u043a\u043e\u04402 = \u043a\u043e\u0440\u0435\u043d\u0438\u0442\u0435_\u043d\u0430_\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e_\u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435(1, 2, 5)\nprint(\"x^2 + 2x + 5 = 0 <=> x1 == {0}; x2 == {1}\".format(*\u043a\u043e\u04402))\n```\n\u041a\u043e\u0434\u044a\u0442 \u0435 \u0435\u043a\u0432\u0438\u0432\u0430\u043b\u0435\u043d\u0442\u0435\u043d \u043d\u0430:\n``` python\nfrom math import sqrt as root\n\ndef quadratic_roots(a, b, c):\n    if a == 0:\n        raise ValueError(\"\u0423\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435\u0442\u043e \u043d\u0435 \u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e!\")\n\n    discriminant = b*b = 4*a*c\n    sqrt_discriminant = root(discriminant) if discriminant >= 0 else root(-discriminant)*1j\n\n    root1 = (-b - sqrt_discriminant) / (2 * a)\n    root2 = (-b + sqrt_discriminant) / (2 * a)\n\n    return root1, root2\n\nroots1 = quadratic_roots(1, -3, 2)\nprint(\"x^2 - 3x + 2 = 0 <=> x1 == {0}; x2 == {1}\".format(*roots1))\n\nroots2 = quadratic_roots(1, 2, 5)\nprint(\"x^2 + 2x + 5 = 0 <=> x1 == {0}; x2 == {1}\".format(*roots2))\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/allexks/mynathon/archive/0.1.2.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/allexks/mynathon",
            "keywords": "maina,manqk,bg,stoyan kolev,jargon",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mynathon",
            "package_url": "https://pypi.org/project/mynathon/",
            "platform": "",
            "project_url": "https://pypi.org/project/mynathon/",
            "project_urls": {
                "Download": "https://github.com/allexks/mynathon/archive/0.1.2.tar.gz",
                "Homepage": "https://github.com/allexks/mynathon"
            },
            "release_url": "https://pypi.org/project/mynathon/0.1.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Mynathon - \u0415\u0437\u0438\u043a\u044a\u0442 \u0437\u0430 \u043c\u0430\u0439\u043d\u0438 \u0438 \u043c\u0430\u043d\u044f\u0446\u0438.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7443151,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "21b57408fc1410a4908af85ab46287c2",
                    "sha256": "b6623c46ed5173eb4ffcc7f0e4aef319d048c9926c841404b59a7ca149fca0cf"
                },
                "downloads": -1,
                "filename": "mynathon-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "21b57408fc1410a4908af85ab46287c2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5418,
                "upload_time": "2020-06-10T13:01:11",
                "upload_time_iso_8601": "2020-06-10T13:01:11.818805Z",
                "url": "https://files.pythonhosted.org/packages/da/cb/536fedf4e7fa1ff1a7f5b90ab325418992d3082d219221824d2e108f07bb/mynathon-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1a446ae152474a8227a4ecb22240d63c",
                    "sha256": "de8bc514cfc002b840f3d716159c79bcb88a70557cf056000614728b2f8cd032"
                },
                "downloads": -1,
                "filename": "mynathon-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1a446ae152474a8227a4ecb22240d63c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5083,
                "upload_time": "2020-06-10T13:01:13",
                "upload_time_iso_8601": "2020-06-10T13:01:13.620406Z",
                "url": "https://files.pythonhosted.org/packages/ce/71/84614e2cd69f211c3ed26f34d669570e482dc87a8b60bd3247e029c8c68d/mynathon-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}