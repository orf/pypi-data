{
    "0.1.1": {
        "info": {
            "author": "Parashar Dhapola",
            "author_email": "parashar.dhapola@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/parashardhapola/bartide",
            "keywords": "Text Mining,Barcode,nucleotide,sequencing,deduplicate",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bartide",
            "package_url": "https://pypi.org/project/bartide/",
            "platform": null,
            "project_url": "https://pypi.org/project/bartide/",
            "project_urls": {
                "Homepage": "https://github.com/parashardhapola/bartide"
            },
            "release_url": "https://pypi.org/project/bartide/0.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A Python package to extract, correct and analyze nucleotide barcodes from sequenced reads.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14641643,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d3a1c2edba4975a88b02c87286d0bdec",
                    "sha256": "4440cbe37debf1479b036072487b0f18463949539b5e1d1309d2df3e1c0018bc"
                },
                "downloads": -1,
                "filename": "bartide-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d3a1c2edba4975a88b02c87286d0bdec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11394,
                "upload_time": "2022-07-29T02:14:18",
                "upload_time_iso_8601": "2022-07-29T02:14:18.412509Z",
                "url": "https://files.pythonhosted.org/packages/56/b2/db2e13d0ced70d678885ac77d9cbac6646124da12858330da4be0c56d0a6/bartide-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Parashar Dhapola",
            "author_email": "parashar.dhapola@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/parashardhapola/bartide",
            "keywords": "Text Mining,Barcode,nucleotide,sequencing,deduplicate",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bartide",
            "package_url": "https://pypi.org/project/bartide/",
            "platform": null,
            "project_url": "https://pypi.org/project/bartide/",
            "project_urls": {
                "Homepage": "https://github.com/parashardhapola/bartide"
            },
            "release_url": "https://pypi.org/project/bartide/0.1.2/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "loguru",
                "editdistance",
                "tqdm",
                "pandas",
                "joblib",
                "seaborn",
                "upsetplot",
                "pytest ; extra == 'dev'",
                "pytest-pep8 ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "A Python package to extract, correct and analyze nucleotide barcodes from sequenced reads.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14641643,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f89e8bde26d4b5c66bea8b378cd4637f",
                    "sha256": "fe518b1efdf9ff3315debf09e7534daa774197b75bf626bd16d4d26a584a87c7"
                },
                "downloads": -1,
                "filename": "bartide-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f89e8bde26d4b5c66bea8b378cd4637f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12531,
                "upload_time": "2022-07-29T02:19:37",
                "upload_time_iso_8601": "2022-07-29T02:19:37.469459Z",
                "url": "https://files.pythonhosted.org/packages/8a/9e/edb9dfddfe5746277f1646164a289b31c4ab25ae7e0aa675da0c9aa79cae/bartide-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cff899c56f3bd653e1ab1170cc0ef399",
                    "sha256": "3da8a40d67703aa90a6137904daadf3df7419570cfe6a3d0ea4c16a47653d543"
                },
                "downloads": -1,
                "filename": "bartide-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "cff899c56f3bd653e1ab1170cc0ef399",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11166,
                "upload_time": "2022-07-29T02:19:39",
                "upload_time_iso_8601": "2022-07-29T02:19:39.230571Z",
                "url": "https://files.pythonhosted.org/packages/a4/99/c1af0147e689a7506ef27094dad0fd3120e51572c1810ac9afd37a773adf/bartide-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Parashar Dhapola",
            "author_email": "parashar.dhapola@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/parashardhapola/bartide",
            "keywords": "Text Mining,Barcode,nucleotide,sequencing,deduplicate",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bartide",
            "package_url": "https://pypi.org/project/bartide/",
            "platform": null,
            "project_url": "https://pypi.org/project/bartide/",
            "project_urls": {
                "Homepage": "https://github.com/parashardhapola/bartide"
            },
            "release_url": "https://pypi.org/project/bartide/0.2.0/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "loguru",
                "editdistance",
                "tqdm",
                "pandas",
                "joblib",
                "seaborn",
                "upsetplot",
                "pytest ; extra == 'dev'",
                "pytest-pep8 ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "A Python package to extract, correct and analyze nucleotide barcodes from sequenced reads.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14641643,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "03831de285ff24b48a6987825fde0899",
                    "sha256": "669d0442da890365d08620988dcbf1b584dcdc0152c3d795f360f32395127a1a"
                },
                "downloads": -1,
                "filename": "bartide-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "03831de285ff24b48a6987825fde0899",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12651,
                "upload_time": "2022-07-29T02:39:17",
                "upload_time_iso_8601": "2022-07-29T02:39:17.147552Z",
                "url": "https://files.pythonhosted.org/packages/54/2a/877468f9e6240a5d1df833c053b772337e613356f8cebe1df06b8b02012f/bartide-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f5b7576083b4c83d522d2894b27b6140",
                    "sha256": "6fc7b6a1e282e583bbe24da717cc8c95c9a90bca67a3d3f3318edc58bc8e5517"
                },
                "downloads": -1,
                "filename": "bartide-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f5b7576083b4c83d522d2894b27b6140",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11233,
                "upload_time": "2022-07-29T02:39:18",
                "upload_time_iso_8601": "2022-07-29T02:39:18.495593Z",
                "url": "https://files.pythonhosted.org/packages/63/83/48f8dc1591b57c5428e760975c2b45ff5b66a59a39e6ac0f47fa965c0cc5/bartide-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "Parashar Dhapola",
            "author_email": "parashar.dhapola@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/parashardhapola/bartide",
            "keywords": "Text Mining,Barcode,nucleotide,sequencing,deduplicate",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bartide",
            "package_url": "https://pypi.org/project/bartide/",
            "platform": null,
            "project_url": "https://pypi.org/project/bartide/",
            "project_urls": {
                "Homepage": "https://github.com/parashardhapola/bartide"
            },
            "release_url": "https://pypi.org/project/bartide/0.3.0/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "loguru",
                "editdistance",
                "tqdm",
                "pandas",
                "joblib",
                "seaborn",
                "upsetplot",
                "pytest ; extra == 'dev'",
                "pytest-pep8 ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "A Python package to extract, correct and analyze nucleotide barcodes from sequenced reads.",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14641643,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "41f7639fa54740b35e49a520a1b02eee",
                    "sha256": "c9c5dc7329208f29761d822a1b34db243f1b172d51c21664d5f36534b80de7fa"
                },
                "downloads": -1,
                "filename": "bartide-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "41f7639fa54740b35e49a520a1b02eee",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12958,
                "upload_time": "2022-08-03T12:32:15",
                "upload_time_iso_8601": "2022-08-03T12:32:15.329123Z",
                "url": "https://files.pythonhosted.org/packages/9c/6d/f61ce218feec5df1ce978ca3dca1ab7b0befbc6e0852f335c692204ce23b/bartide-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "50d8e09bab2a268c3c9a5a85369c74e6",
                    "sha256": "7bd40a1bcc8a13466c31ac0365e8dd41639ae10be5939e943d1400b530e5fcfe"
                },
                "downloads": -1,
                "filename": "bartide-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "50d8e09bab2a268c3c9a5a85369c74e6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11558,
                "upload_time": "2022-08-03T12:32:16",
                "upload_time_iso_8601": "2022-08-03T12:32:16.318868Z",
                "url": "https://files.pythonhosted.org/packages/cb/7d/d82d2b32dc41731a883e2bcb26a37cd84b081532fc5f51d57db5edd90f24/bartide-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "Parashar Dhapola",
            "author_email": "parashar.dhapola@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description": "[![PyPI version shields.io](https://img.shields.io/pypi/v/bartide.svg)](https://pypi.python.org/pypi/bartide/)\n[![PyPI license](https://img.shields.io/pypi/l/bartide.svg)](https://pypi.python.org/pypi/bartide/)\n\n# Bartide\n## Extract, correct and analyze barcodes from sequenced reads\n\n\n### INSTALLATION\n\nTo install Bartide you need to have Python version 3.9 or upwards. The suggest wasy to install Python is to use Miniconda:\nhttps://docs.conda.io/en/latest/miniconda.html\n\nUse the following command to install Bartide\n```\npip install bartide\n```\n\n#### Installation of NMSlib:\nEasiet way to install NMSlib is to use the precompiled version from conda-forge repo. This works across Linux, MacOS and Windows machines.\n```\nconda install -c conda-forge nmslib\n```\n\n### USAGE\n\n\n### 1. Extraction\n\nBarcodes are extracted from the sequencing reads using the Bartide\u2019s `BarcodeExtractor` class. This class is provided two input files, one for each end of paired-end sequencing, in FASTQ format. This class is designed to automatically extract the barcodes assuming that the barcodes are of the same lengths, they span the same position in the reads and the flanking sequence is constant. This is achieved by first summarizing the nucleotide composition at each position for all the reads (or a sample of reads). The flanking sequence will be dominated by a single nucleotide while the barcode should have variable base composition. This pattern is used to identify the position of barcodes and the flanking primer sequence. This behaviour can be overridden by providing the barcode length and the flanking primer sequence to `BarcodeExtractor`. Below we show an example of how to call the BarcodeExtractor class, and perform automatic flank identification.\n\n```\nimport bartide\n\nextractor = bartide.BarcodeExtractor(\n\t'sample1_read1.fastq.gz',\n\t'sample1_read2.fastq.gz'\n)\n\nextractor.identify_flanks()\n```\n\nAlternatively, users can provide the flanking sequence can the barcode length manually like below:\n\n```\nextractor = bartide.BarcodeExtractor(\n\t'sample1_read1.fastq.gz',\n\t'sample1_read2.fastq.gz',\n\tleft_flank='GTAGCC',\n\tright_flank='AGATCG',\n\tbarcode_length=27\n)\n```\n\n\nOnce the flank sequences and barcode length are determined, they are stored as `extractor.leftFlank`, `extractor.rightFlank` and `extractor.barcodeLength`. Now the barcodes can be extracted, and their frequency counted. The `BarcodeExtractor` class will compare the barcode sequence and its reverse complementary sequence from the other pair of the sequenced read. By default, there should not be more than 3 mismatches between the two sequences otherwise the extraction fails for that read. Users can change the maximum allowed mismatch value by using the `max_dist` parameter when calling `BarcodeExtractor`.\n\nThe actual extraction of barcodes is triggered by the following command:\n```\nextractor.count_barcodes()\n```\n\nUsers can access these uncorrected barcodes with the following command:\n```\nprint (extractor.rawCounts)\n```\n\t\t\t\nThis prints the barcodes and their frequencies as shown below:\n\n```\nTTGTAGGGGTGTGTTCTACCGGTAATT    2843\nGTGCTGGTAATGTGGGCGACGGTGGGG     913\nTTGGTGAAGCATAGTTCCGTGATTGAA     909\nTTCCATGACGTTAAATACCTCCTTATA     723\nATCTGGCGTCCAGCAGATATTAGTTTT     717\n                               ... \nAAGTTACATGCCGCAAAGGGTTCTTTG       1\nAAGGATGAATGACAAGGTGCTAGCCAT       1\nGGTACAAGGCGGGATTACCATGCATTG       1\nGTGCTGGAAATGTGGGCGACGGTGGGG       1\nAAGTCACATGCCGCAAAGTGTCCATTG       1\n```\n\n### 2. Error correction\n\nNext, the list obtained above may still contain barcodes that harbour sequencing errors. We assume that a barcode contains error(s) if it has less than three nucleotide difference with a higher abundance barcode. Since the pairwise comparison of all the barcodes can be computationally prohibitive, we use approximate nearest neighbour detection library \u2018nmslib\u2019 to efficiently identify similar barcodes. If an erroneous barcode is found, its frequency is added to the barcode with the nearest match. This functionality is implemented in the `SeqCorrect` class. Users can obtain the corrected barcode list, by running the following command:\n\n```\ncorrector = bartide.SeqCorrect()\ncorrector.run(extractor.rawCounts)\n```\n\nThe corrected list of barcodes is stored under `corrector.correctedCounts`. These barcodes can then be saved in CSV format table as shown below:\n\n```\ncorrector.save_to_csv('barcodes_freq_sample1.csv')\n```\n\nThe `SeqCorrect` class will by default, remove any barcode with a frequency of less than 20, as suggested previously (Naik et al., 2014). This behaviour can be overridden by changing the value of the `min_counts` parameter when calling `SeqCorrect`.\n\n### 3. Sample comparison, analysis and visualization\n\nOnce the corrected barcode frequencies are saved for all the samples, they can be compared using the `BarcodeAnalyzer` class. This class is initialized by providing the name, with full path, of the directory wherein all the CSV files were saved. The following command illustrates this:\n\n```\nanalyzer = bartide.BarcodeAnalyzer(\u2018barcodes_dir\u2019)\n```\n\t\nThis will lead to aggregation of all the barcodes across all the samples that can be accessed from a single table stored under `analyzer.barcodes`. Users can perform all the custom downstream analysis using this table as the starting point.\n\nBartide provides four essential plots that allow users to easily identify how the barcodes are shared across the sample.\n\nThe first plot is the \u2018Upset\u2019 that shows all the combinations of samples and the number of barcodes that overlap between them. This plot, compared to Venn diagrams, allow easy visualization of the overlaps and non-overlaps of barcodes. Please note that when using upset plots, we only look at the unique number of barcodes found in each of the samples and not their frequencies.\n\n```\nanalyzer.plot_upset()\n```\n<img src=\"./notebooks/images/upset_plot.png\" alt=\"upset_plot\" width=\"300\"/>\n\nSometimes due large difference in the number of barcodes captured, it might be difficult to easily identify the similarity or differences between the samples. To solve this, rather than using the absolute number of barcodes in a sample, the percentage overlap of barcodes from a sample with all other samples are used. This allows the barcodes from a sample to be defined in proportions and may allow insights into sample similarity that is otherwise to identify with absolute frequencies. The following command shows the proportions in form of a stacked barplot:\n\n```\nanalyzer.plot_stacked()\n```\n<img src=\"./notebooks/images/stacked_plot.png\" alt=\"stacked_plot\" width=\"300\"/>\n\nAn alternative way to deal with the situation wherein the absolute number of unique barcodes are quite different across the samples is to perform normalization by dividing the overlap value by the sum of the total barcodes from the two samples. The resulting normalized values can be visualized in form of a heatmap.\n\n```\nanalyzer.plot_overlap_heatmap()\n```\n<img src=\"./notebooks/images/overlap_heatmap.png\" alt=\"overlap_heatmap\" width=\"300\"/>\n\nIn all the above three plotting functions, we do not the frequencies of the barcodes, which are indicative of how dominant a particular barcode is in the samples. A weighted overlap of barcodes is calculated between two samples as following:\n\n$$\\sum_{b}^{B}\\left(S_b^i-S_b^j\\right)^2$$\n\nWherein, $S$ is a column-sum normalized matrix of samples (columns) and barcodes (rows) containing barcode frequencies, $i$ and $j$ are two samples, $b$ is a barcode in a set of barcodes $B$ that are present in either of the two samples or both. These overlap values are then plotted in form of a heatmap using the following function:\n\n```\nanalyzer.plot_weighted_heatmap()\n```\n<img src=\"./notebooks/images/weighted_heatmap.png\" alt=\"weighted_heatmap\" width=\"300\"/> \n\nTo save the images generated by the functions above, users can pass a value (path and name of the file where to save) to the `save_name` parameter.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/parashardhapola/bartide",
            "keywords": "Text Mining,Barcode,nucleotide,sequencing,deduplicate",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bartide",
            "package_url": "https://pypi.org/project/bartide/",
            "platform": null,
            "project_url": "https://pypi.org/project/bartide/",
            "project_urls": {
                "Homepage": "https://github.com/parashardhapola/bartide"
            },
            "release_url": "https://pypi.org/project/bartide/0.3.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "loguru",
                "editdistance",
                "tqdm",
                "pandas",
                "joblib",
                "seaborn",
                "upsetplot",
                "pytest ; extra == 'dev'",
                "pytest-pep8 ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "A Python package to extract, correct and analyze nucleotide barcodes from sequenced reads.",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14641643,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "701454c85eb12a6037f299adeb431982",
                    "sha256": "3b79aad4f2f856363b8215d667ae1d279f1f1ddb277f77d84fe0dd98afabaae4"
                },
                "downloads": -1,
                "filename": "bartide-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "701454c85eb12a6037f299adeb431982",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12956,
                "upload_time": "2022-08-03T12:44:58",
                "upload_time_iso_8601": "2022-08-03T12:44:58.773398Z",
                "url": "https://files.pythonhosted.org/packages/46/b1/785ac80366481666ca2ad53947f8b4a7008a1d2bc6c1ada3aa1d22c155f4/bartide-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ca37addd1f9f1095c1ffe6c80a757bf",
                    "sha256": "0c861060c1c322624eca84c37e3aeea8b75d6d3bd2b97cab882965d3ce410c16"
                },
                "downloads": -1,
                "filename": "bartide-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1ca37addd1f9f1095c1ffe6c80a757bf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11568,
                "upload_time": "2022-08-03T12:44:59",
                "upload_time_iso_8601": "2022-08-03T12:44:59.856762Z",
                "url": "https://files.pythonhosted.org/packages/7d/ea/2f08aa514d19c22cbc37df7b9ff9bb39fb3f5437ad007ef7f6ef3c90469b/bartide-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}