{
    "0.2.0": {
        "info": {
            "author": "Brendan C. Ward",
            "author_email": "bcward@astutespruce.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/brendan-ward/pymgl",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pymgl",
            "package_url": "https://pypi.org/project/pymgl/",
            "platform": null,
            "project_url": "https://pypi.org/project/pymgl/",
            "project_urls": {
                "Homepage": "https://github.com/brendan-ward/pymgl"
            },
            "release_url": "https://pypi.org/project/pymgl/0.2.0/",
            "requires_dist": [
                "pytest ; extra == 'test'",
                "pytest-benchmark ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "Pillow ; extra == 'test'",
                "python-dotenv ; extra == 'test'",
                "numpy ; extra == 'test'",
                "requests ; extra == 'test'",
                "pixelmatch ; extra == 'test'"
            ],
            "requires_python": ">=3.8",
            "summary": "Python wrapper for MapLibre GL native",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13980822,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d02eaedfaf14df5fa62b8cebe2b1e87d",
                    "sha256": "3d0e861940fe15628fe8ec3724b3c49f0ab27f682f2f65c400a377ee1cfee303"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.0-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "d02eaedfaf14df5fa62b8cebe2b1e87d",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": ">=3.8",
                "size": 2906868,
                "upload_time": "2022-04-06T01:27:17",
                "upload_time_iso_8601": "2022-04-06T01:27:17.907713Z",
                "url": "https://files.pythonhosted.org/packages/d1/22/c233da22f2d3dafbfce7737c22ff3527006df54125c9416f5b105bea22dd/pymgl-0.2.0-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e600e7eb442158b49fa2a930e31a001d",
                    "sha256": "2383b27cdbf67d212b49c49fb78e1c911ceaf95f088013db505636f10475d97d"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.0-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "e600e7eb442158b49fa2a930e31a001d",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.8",
                "size": 2906889,
                "upload_time": "2022-04-06T01:27:20",
                "upload_time_iso_8601": "2022-04-06T01:27:20.391379Z",
                "url": "https://files.pythonhosted.org/packages/71/6a/26272081d984def4a68da54ba2a726b2bf3e3cd24019d8c997b0887195a2/pymgl-0.2.0-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "901b0edf7588d643eab108c592ba2383",
                    "sha256": "eab753152fb8c9c2975c8a68c717e6fea5e4a029f8f3359d9b2d1c53c8b2e5ee"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.0-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "901b0edf7588d643eab108c592ba2383",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.8",
                "size": 2906856,
                "upload_time": "2022-04-06T01:27:22",
                "upload_time_iso_8601": "2022-04-06T01:27:22.624915Z",
                "url": "https://files.pythonhosted.org/packages/71/97/ee9c975e8bafe035956db072bee73dd07bbbb5aef69595da0e2222ab903f/pymgl-0.2.0-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "Brendan C. Ward",
            "author_email": "bcward@astutespruce.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/brendan-ward/pymgl",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pymgl",
            "package_url": "https://pypi.org/project/pymgl/",
            "platform": null,
            "project_url": "https://pypi.org/project/pymgl/",
            "project_urls": {
                "Homepage": "https://github.com/brendan-ward/pymgl"
            },
            "release_url": "https://pypi.org/project/pymgl/0.2.1/",
            "requires_dist": [
                "pytest ; extra == 'test'",
                "pytest-benchmark ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "Pillow ; extra == 'test'",
                "python-dotenv ; extra == 'test'",
                "numpy ; extra == 'test'",
                "requests ; extra == 'test'",
                "pixelmatch ; extra == 'test'"
            ],
            "requires_python": ">=3.8",
            "summary": "Python wrapper for MapLibre GL native",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13980822,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0953b178d73bc80feda07ef1be3075f8",
                    "sha256": "437c6406b8fab93450c8c5937e33241d6af7e56c111b7a72ff70a778e3505f55"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.1-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "0953b178d73bc80feda07ef1be3075f8",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": ">=3.8",
                "size": 2908866,
                "upload_time": "2022-04-19T18:33:39",
                "upload_time_iso_8601": "2022-04-19T18:33:39.097054Z",
                "url": "https://files.pythonhosted.org/packages/4d/04/25f3b970a8051b82bddc21389a4e9d679325771d03e98000f1dd725f6211/pymgl-0.2.1-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "301dbe4a8ed9e54e06f72e4411ada996",
                    "sha256": "05a99ade88428134267cf58eeffc2abe3ffa70c66cd0ef4a1fd873a6b57ba0d6"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.1-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "301dbe4a8ed9e54e06f72e4411ada996",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.8",
                "size": 2908901,
                "upload_time": "2022-04-19T18:33:41",
                "upload_time_iso_8601": "2022-04-19T18:33:41.076209Z",
                "url": "https://files.pythonhosted.org/packages/27/52/b928bcd51ea4860ba0e8c525075c8896ae1f06a0a53a7478229e5d8f3fe1/pymgl-0.2.1-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b1386dd9ae6eeac96c91f66ff713e205",
                    "sha256": "a06e937bec67795596c83b0a257a6edb9471a16f0a2d1a23135ddc5b6151aa7f"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.1-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "b1386dd9ae6eeac96c91f66ff713e205",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.8",
                "size": 2909036,
                "upload_time": "2022-04-19T18:33:42",
                "upload_time_iso_8601": "2022-04-19T18:33:42.626278Z",
                "url": "https://files.pythonhosted.org/packages/dd/92/fe198c137b394dba4744690140a5e0405f6dc0f0e4b28550dfd4681e284f/pymgl-0.2.1-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.2": {
        "info": {
            "author": "Brendan C. Ward",
            "author_email": "bcward@astutespruce.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# PyMGL: Maplibre GL Native Static Renderer for Python\n\nThis package provides an interface to `mapblibre-gl-native` to render Mapbox GL\nstyles to PNG images.\n\nWARNING: this package is under active development and the API may change without notice.\n\n## Goals\n\nThis package is intended to provide a lightweight interface to `maplibre-gl-native`\nfor rendering Mapbox GL to PNG image data using Python. This is particularly useful for\nserver-side rendering of maps for use in reports.\n\nThis package provides only the Python API for interacting with `maplibre-gl-native`;\nit does not provide higher-level functionality such as a web server or a CLI.\n\nFor a stand-alone service implmenting rendering functionality, see\n[mbgl-renderer](https://github.com/consbio/mbgl-renderer) (implemented in NodeJS).\n\n## Install\n\n### Supported operating systems\n\n#### MacOS 10.15+ (x86_64 only)\n\nWheels are available on PyPI:\n\n```bash\npip install pymgl\n```\n\nTo verify that it installed correctly, run the included test suite:\n\n```bash\npython -m pip install pytest Pillow numpy pixelmatch python-dotenv\npython -m pytest --pyargs pymgl -v\n```\n\n#### Ubuntu 20.04\n\nDue to the complexity of building manylinux wheels that include OpenGL and\nsuccessfully compile `maplibre-gl-native`, wheels are only available for Ubuntu 20.04.\n\nWheels are available on the release page in Github. Download and install from there.\n\nSomething like:\n\n```bash\npip install https://github.com/brendan-ward/pymgl/releases/download/<release>/pymgl-<release>-<Python version>-<Python version>-linux_x86_64.whl\n```\n\nYou also need to install the following runtime dependencies:\n\n```bash\napt-get install\n    libicu66 \\\n    libjpeg-turbo8 \\\n    libpng16-16 \\\n    libprotobuf17 \\\n    libuv1 \\\n    libx11-6 \\\n    libegl1 \\\n    libopengl0 \\\n    xvfb\n```\n\nYou must have Xvfb running in order to successfully use `pymgl`. You can\nsetup and run Xvfb manually, or wrap calls to python in `Xvfb-run`.\n\nTo verify that it installed correctly, run the included test suite:\n\n```bash\npython -m pip install pytest Pillow numpy pixelmatch python-dotenv\nxvfb-run -a --server-args=\"-screen 0 1024x768x24 -ac +render -noreset\" \\\n    python -m pytest --pyargs pymgl -v\n```\n\n#### Windows\n\nWindows is not and will not be supported.\n\n## Usage\n\nTo create a map object, you must always provide a Mapbox GL style JSON string or\nURL to a well-known style hosted by Mapbox or Maptiler:\n\n```Python\nfrom pymgl import Map\n\nstyle = \"\"\"{\n    \"version\": 8,\n    \"sources\": {\n        \"basemap\": {\n            \"type\": \"raster\",\n            \"tiles\": [\"https://services.arcgisonline.com/arcgis/rest/services/Ocean/World_Ocean_Base/MapServer/tile/{z}/{y}/{x}\"],\n            \"tileSize\": 256\n        }\n    },\n    \"layers\": [\n        { \"id\": \"basemap\", \"source\": \"basemap\", \"type\": \"raster\" }\n    ]\n}\"\"\"\n\nmap = Map(style, <height=256>, <width=256>, <ratio=1>, <longitude=0>, <latitude=0>, <zoom=0>, <token=None>, <provider=None>)\n```\n\nSee the [styles](#styles) section for more information about map styles.\n\nOther than style, all other parameters are optional with default values.\n\nNOTE: `style` and `ratio` cannot be changed once the instance is constructed.\n\nYou can use a well-known style instead of providing a style JSON string, but\nyou must also provide a token and identify the correct provider:\n\n```Python\nmap = Map(\"mapbox://styles/mapbox/streets-v11\", token=<mapbox token>, provider=\"mapbox\")\n```\n\nValid providers are `mapbox`, `maptiler`, and `maplibre`.\n\n### Map properties\n\nYou can set additional properties on the map instance after it is created:\n\n```Python\nmap.setCenter(longitude, latitude)\n\nmap.setZoom(zoom)\n\nmap.setSize(width, height)\n\nmap.setBearing(bearing)  # map bearing in degrees\n\nmap.setPitch(pitch)  # map pitch in degrees\n```\n\nYou can retrieve these values using attributes, if needed:\n\n```Python\nmap.size  # (width, height)\n\nmap.center  # (longitude, latitude)\n\nmap.zoom\n\nmap.bearing\n\nmap.pitch\n```\n\nYou can auto-fit the map to bounds instead of using center longitude / lantitude\nand zoom:\n\n```Python\nmap.setBounds(xmin, ymin, xmax, ymax, <padding=0>)\n```\n\nYou can register an image for use with your style by providing an ID,\nraw image bytes, width, height, pixel ratio, and indicate if it should be\ninterpreted as SDF:\n\n```\nmap.addImage(\"id\", img_bytes, width, height, <ratio=1>, <make_SDF=False>)\n```\n\nSee the [SDF image docs](https://docs.mapbox.com/help/troubleshooting/using-recolorable-images-in-mapbox-maps/) for more information about using SDF\nimages.\n\n### Rendering\n\nYou can render the map to PNG bytes:\n\n```Python\nimg_bytes = map.renderPNG()\n```\n\nThis returns `bytes` containing the RGBA PNG data.\n\nYou can render the map to a raw buffer as a numpy array (`uint8` dtype):\n\n```Python\narray = map.renderBuffer()\n```\n\nThe array is a sequence of RGBA values for each pixel in the image.\n\nThis may be useful if you are going to immediately read the image data into\nanother package such as `Pillow` or `pyvips` to combine with other image\noperations.\n\n### Map instances\n\nWARNING: you must manually delete the map instance if you assign a new map\ninstance to that variable, or this package will segfault (not yet sure why).\nThis problem does not occur if separate instances are assigned to separate\nvariables.\n\n```Python\n\nmap = Map(<style>, <width>, <height>)\n\ndel map  # must manually delete BEFORE creating a new instance assigned to this\n\nmap = Map(<style>, <width>, <height>)\n```\n\nFor this reason, you should consider using a context manager:\n\n```Python\nwith Map(<style>, <width>, <height>) as map:\n    map.renderPNG()\n```\n\nYou can also use the map instance to directly render to PNG, if you don't need\nto set other properties on the map instance:\n\n```\nMap(<style>, <width>, <height>).renderPNG()\n```\n\n## Styles\n\nPyMGL should support basic styles as of Mapbox GL JS 1.13.\n\n### Remote tilesets, sources, and assets\n\nRemote tilesets, tile sources, and assets (glyphs, sprites) should be well-supported.\nThese are loaded by the underlying C++ library outside our control. Invalid\nURLs will generally raise errors. However, network timeouts or incorrect formats\nmay cause the process to crash.\n\n### Local mbtiles\n\nLocal MBTiles are supported, but must be provided using an absolute path to the\nmbtiles file as the source `url` of a tileset; it must resolve to an actual file.\n\nLocal MBTiles are denoted with a `mbtiles://` URI prefix.\n\nExample:\n\n```json\n{\n    \"sources\": {\n        \"source_id\": {\n            \"url\": \"mbtiles:///<pymgl_root_dir>/tests/fixtures/geography-class-png.mbtiles\",\n            ...\n        }\n    },\n    \"layers\": [...],\n    ...\n}\n```\n\n### Local files\n\nGeoJSON files and other local file assets are supported, but must be provided\nusing an absolute path to the file source.\n\nExample:\n\n```json\n{\n    \"sources\": {\n        \"geojson\": {\n            \"type\": \"geojson\",\n            \"data\": \"file:///<pymgl_root_dir>/tests/fixtures/test.geojson\"\n        }\n    },\n    \"layers\": [...],\n    ...\n}\n\n```\n\nWARNING: providing a URI to tiles under the `tiles` key of a source is NOT currently supported by Maplibre GL Native;\nattempting to do so will fail.\n\n### Images\n\nYou must register the image with the map instance before rendering the map. See\n`map.addImage()` above.\n\n```json\n{\n    \"sources\": {...},\n    \"layers\": [\n        {\n            ...,\n            \"paint\": {\n                \"fill-pattern\": \"pattern\"\n            }\n        },\n    ]\n}\n```\n\nYou can use map images as fill patterns or icon images.\n\n### Unsupported features\n\nPyMGL does not support alternative projections or 3D terrain.\n\n## Developing\n\n### Dependencies:\n\n#### MacOS:\n\nDeveloping on MacOS requires the following binary libraries to be installed\nvia `homebrew`:\n\n-   cmake\n-   ninja\n\n#### Developing on Linux (Ubuntu 20.04) requires the following binary libraries:\n\n-   cmake\n-   ninja-build\n-   build-essential\n-   libcurl4-openssl-dev\n-   libicu-dev\n-   libpng-dev\n-   libprotobuf-dev\n-   libturbojpeg0-dev\n-   libx11-dev\n-   libegl-dev\n-   libopengl-dev\n-   xvfb\n\nTo run on Linux, XVFB must also be running; otherwise the process will segfault.\n\nSee `docker/Dockerfile` for more information.\n\n### PyBind11\n\nPyBind11 is used to provide bindings for Python against a C++ class that wraps\n`maplibre-gl-native` for easier rendering operations.\n\nIt is included here as a git submodule, per the [installation instructions](https://pybind11.readthedocs.io/en/stable/installing.html).\n\n```bash\ngit submodule add -b stable https://github.com/pybind/pybind11.git vendor/pybind11\n```\n\n### Maplibre-gl-native\n\nMaplibre-gl-native is included as a git submodule, and it includes many submodules\nof its own.\n\n```bash\ngit submodule add -b master https://github.com/maplibre/maplibre-gl-native vendor/maplibre-gl-native\n```\n\n### Git submodules\n\nRun\n\n```bash\ngit submodule update --init\n```\n\nWe only need some of the submodules under maplibre-gl-native. In particular,\nwe do not need `maplibre-gl-js` or Android / IOS dependencies.\n\nRun the following:\n\n```bash\ncd vendor/maplibre-gl-native\n\ngit submodule update --init --recursive \\\n    vendor/earcut.hpp \\\n    vendor/polylabel \\\n    vendor/protozero \\\n    vendor/wagyu \\\n    vendor/unique_resource \\\n    vendor/boost \\\n    vendor/eternal \\\n    vendor/googletest \\\n    vendor/mapbox-base \\\n    vendor/vector-tile\n```\n\nTo later update `maplibre-gl-native`:\n\n```bash\ncd vendor/maplibre-gl-native\ngit checkout main\ngit pull origin\n\ncd ../..\ngit commit -am \"update maplibre-gl-native\" to latest\n```\n\n### Architecture\n\nThis package is composed of 2 main parts:\n\n-   wrapper around Maplibre GL native classes to make constructing and managing\n    properties of the map easier\n-   Python bindings created using pybind11 against that wrapper\n\nThe wrapper is located in `src/map.cpp`.\n\n### Build\n\n#### C++ tests\n\nSee [tests/README](tests/README.md) for more information.\n\nBuilding using CMake directly is useful when building the C++ level tests of the\nMaplibre GL wrapper.\n\n```bash\nmkdir build\n\ncd build\n\ncmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug\n\nctest -V\n```\n\n#### Build Python extension\n\nThe Python `setup.py` script manages building the library and extension using\nCMake.\n\nFrom project root directory:\n\n```bash\n\npython setup.py build_ext --inplace\n```\n\n#### Docstrings / type information\n\nDocstrings are maintained in both `src/_pymgl.cpp` and `pymgl/__init__.pyi`.\n\nPython-friendly type annotations are maintained in `pymgl/__init__.pyi`.\n\nNote: `pymgl/__init__.pyi` is necessary to support autocompletion and tooltips\nin VSCode.\n\n## See also\n\n[mbgl-renderer](https://github.com/consbio/mbgl-renderer)\nprovides a NodeJS API, CLI, and server based on the NodeJS bindings to Mapbox GL Native.\n\n## Credits\n\nThis project was developed with the support of the\n[U.S. Fish and Wildlife Service](https://www.fws.gov/)\n[Southeast Conservation Adaptation Strategy](https://secassoutheast.org/) for\nuse in the\n[Southeast Conservation Blueprint Viewer](https://blueprint.geoplatform.gov/southeast/)\nand\n[South Atlantic Conservation Blueprint Simple Viewer](https://blueprint.geoplatform.gov/southatlantic/).\n\nThis project is made possible because of the\n[mapbox-gl-native](https://github.com/mapbox/mapbox-gl-native/) project by\n[Mapbox](https://www.mapbox.com/)\nby the efforts of the Maplibre community maintaining the open-source fork of that\nproject at [maplibre-gl-native](https://github.com/mapbox/mapbox-gl-native/).\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/brendan-ward/pymgl",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pymgl",
            "package_url": "https://pypi.org/project/pymgl/",
            "platform": null,
            "project_url": "https://pypi.org/project/pymgl/",
            "project_urls": {
                "Homepage": "https://github.com/brendan-ward/pymgl"
            },
            "release_url": "https://pypi.org/project/pymgl/0.2.2/",
            "requires_dist": [
                "pytest ; extra == 'test'",
                "pytest-benchmark ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "Pillow ; extra == 'test'",
                "python-dotenv ; extra == 'test'",
                "numpy ; extra == 'test'",
                "requests ; extra == 'test'",
                "pixelmatch ; extra == 'test'"
            ],
            "requires_python": ">=3.8",
            "summary": "Python wrapper for MapLibre GL native",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13980822,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "306695bc43dde49c1633dc9780ff7f8f",
                    "sha256": "cea5d20f11640798d0038a1582c0899f54583da55aa6c9eb4fc39c1976f78ed2"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.2-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "306695bc43dde49c1633dc9780ff7f8f",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": ">=3.8",
                "size": 2908630,
                "upload_time": "2022-05-30T19:08:46",
                "upload_time_iso_8601": "2022-05-30T19:08:46.365522Z",
                "url": "https://files.pythonhosted.org/packages/d5/d2/33b85e742f178098b2c99a5b1264dae9e3ba42da1c23516a06cd0fc7e60e/pymgl-0.2.2-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "49e815d18527c55db9e4f4ad308a0fa0",
                    "sha256": "3d3cef07ba4b28338a50f73494af8bb7cf05bcf1b25830eb7f8b16e0446299dd"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.2-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "49e815d18527c55db9e4f4ad308a0fa0",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.8",
                "size": 2908657,
                "upload_time": "2022-05-30T19:08:48",
                "upload_time_iso_8601": "2022-05-30T19:08:48.368821Z",
                "url": "https://files.pythonhosted.org/packages/b8/ef/6e8d79115ecc9528f8db7ab78522d65d205c0916fc1d023bb7a2c1128e01/pymgl-0.2.2-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "09d0e7caaa9edd6425b4af9b12211b24",
                    "sha256": "bcbb1d488e1c172bda450cb17f622f71925d159d2e4b632f7a255305fde3bb5a"
                },
                "downloads": -1,
                "filename": "pymgl-0.2.2-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "09d0e7caaa9edd6425b4af9b12211b24",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.8",
                "size": 2908630,
                "upload_time": "2022-05-30T19:08:49",
                "upload_time_iso_8601": "2022-05-30T19:08:49.974136Z",
                "url": "https://files.pythonhosted.org/packages/67/5d/b7b0fc7dfae605683fb5a2fe177e717928e70d767e59a849bc7da333d194/pymgl-0.2.2-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}