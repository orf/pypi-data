{
    "0.5.0": {
        "info": {
            "author": "Matthias Urlichs",
            "author_email": "matthias@urlichs.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: Trio",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": ".. image:: https://img.shields.io/badge/chat-join%20now-blue.svg\n   :target: https://gitter.im/python-trio/general\n   :alt: Join chatroom\n\n.. image:: https://img.shields.io/badge/docs-read%20now-blue.svg\n   :target: https://async_amqp.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://travis-ci.org/python-trio/async_amqp.svg?branch=master\n   :target: https://travis-ci.org/python-trio/async_amqp\n   :alt: Automated test status\n\n.. image:: https://codecov.io/gh/python-trio/async_amqp/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/python-trio/async_amqp\n   :alt: Test coverage\n\nasync_amqp\n==========\n\nThe ``async_amqp`` library is a pure-Python implementation of the `AMQP 0.9.1 protocol`_.\n\nBuilt on top of anyio_, it provides an API based on coroutines, making it easy to write highly concurrent applications.\n\nBug reports, patches and suggestions welcome! Just open an issue_ or send a `pull request`_.\n\nStatus\n------\n\nThe code works. Porting code that uses aioamqp (or even plain\npython-amqp) should be reasonably straightforward.\n\nAll tests from aioamqp have been ported and succeed.\n\n`async_amqp` was renamed from `asyncamqp`, but that was taken on pypi. `asyncamqp`\nwas renamed from `trio_amqp` but anyio support was deemed to be a good\nidea. `trio_amqp` in turn was forked from `aioamqp`.\n\n\ntests\n-----\n\nTo run the tests, you'll need to install the Python test dependencies::\n\n    pip install -r ci/requirements_dev.txt\n\nTests require an instance of RabbitMQ. You can start a new instance using docker::\n\n     docker run -d --log-driver=syslog -e RABBITMQ_NODENAME=my-rabbit --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management\n\nRabbitMQ requires a \"guest\" user (password \"guest\") with admin privileges.\n\nYou can run the tests with ``make test`` (requires ``pytest``).\n\n\ntests using docker-compose\n^^^^^^^^^^^^^^^^^^^^^^^^^^\nStart RabbitMQ using ``docker-compose up -d rabbitmq``. When RabbitMQ has started, start the tests using ``docker-compose up --build aioamqp-test``\n\n\nFuture work\n-----------\n\n* Add coverage reporting. Increase coverage (duh).\n\n* Try restarting a failed AMQP connection instead of cancelling everything.\n\n.. _AMQP 0.9.1 protocol: https://www.rabbitmq.com/amqp-0-9-1-quickref.html\n.. _Trio: https://github.com/python-trio/trio\n.. _anyio: https://github.com/agronholm/anyio\n.. _issue: https://github.com/python-trio/async_amqp/issues/new\n.. _pull request: https://github.com/python-trio/async_amqp/compare/",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/python-trio/async_amqp",
            "keywords": "asyncio,amqp,rabbitmq,aio,trio",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "async-amqp",
            "package_url": "https://pypi.org/project/async-amqp/",
            "platform": "all",
            "project_url": "https://pypi.org/project/async-amqp/",
            "project_urls": {
                "Homepage": "https://github.com/python-trio/async_amqp"
            },
            "release_url": "https://pypi.org/project/async-amqp/0.5.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "AMQP implementation using anyio",
            "version": "0.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10576627,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d11892fd94b7ee674652e3eecdde6f42",
                    "sha256": "d508e4cd79a8aece6873782e412f44fc004c524a8e465106297d934b1c95eed8"
                },
                "downloads": -1,
                "filename": "async_amqp-0.5.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d11892fd94b7ee674652e3eecdde6f42",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 55270,
                "upload_time": "2021-06-07T11:13:57",
                "upload_time_iso_8601": "2021-06-07T11:13:57.287078Z",
                "url": "https://files.pythonhosted.org/packages/d3/9d/5fed2f5331fbfcc5f1756add72011e807257321b3b9706bb106c1c71a9c0/async_amqp-0.5.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}