{
    "0.1": {
        "info": {
            "author": "",
            "author_email": "Emil van der Westhuizen <vdwemil@protonmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Django RAM\n\nRole based user access management for Django.\n\n# Requirements\n\n* Python 3.6+\n* Django 4.1, 4.0, 3.2, 3.1, 3.0\n\n# Installation\n\n    pip install django-ram\n    \nOptionally install with rest framework support:\n\n    pip install django-ram[rest_framework]\n\n    \nAdd `django_ram'` to your `INSTALLED_APPS` setting.\n```python\nINSTALLED_APPS = [\n    ...\n    'django_ram',\n]\n```\n\n    ./manage.py migrate\n\n# Overview\n\n## User Model\n\nAdd the `RolesMixin` to your user model.\n\n```python\nfrom django_ram.models import RolesMixin\n\n\nclass CustomUser(AbstractUser, RolesMixin):\n    pass\n```\n\nAlso remember to configure `AUTH_USER_MODEL` in your `settings.py` module.\n\n\n## Declarative Roles\nsome_app/roles.py\n\n```python\nfrom django_ram.definition import RoleDefinition\n\n\nclass AdminRole(RoleDefinition):\n    name = \"Admin\"\n    description = \"System administrator.\"\n\n\nclass AuthorRole(RoleDefinition):\n    name = \"Author\"\n    description = \"A writer of a book, article, or document.\"\n```\n\nRoles will be created (or updated) post migration to reflect role definitions in `roles.py` files.\n\nRole names have to be globally unique.\n\n\n## Django Admin\n\nRegister the admin class (or subclass it to expand functionality.)\n\n```python\nfrom django.contrib import admin\nfrom django_ram.admin import UserAdmin\n\n...\n\nadmin.site.register(YourUserModel, UserAdmin)\n```\n\n\n## Rest Framework Support\n\n```python\nfrom django_ram.rest_framework import HasRoleBasePermission, has_role\nfrom some_app.roles import AuthorRole\n\n\nclass HasAuthorRole(HasRoleBasePermission):\n    role_definition = AuthorRole\n\n\nclass PublicationViewSet(viewsets.ModelViewset):\n    permission_classes = [\n        has_role(AuthorRole),\n        #  Is equivelant to:\n        HasAuthorRole,\n    ]\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-ram",
            "package_url": "https://pypi.org/project/django-ram/",
            "platform": null,
            "project_url": "https://pypi.org/project/django-ram/",
            "project_urls": {
                "Bug Tracker": "https://github.com/vdwemil95/django-ram/issues",
                "Homepage": "https://github.com/vdwemil95/django-ram"
            },
            "release_url": "https://pypi.org/project/django-ram/0.1/",
            "requires_dist": [
                "django (>=3.0)",
                "djangorestframework (<=3.14.0,>=3.10.0) ; extra == 'rest_framework'"
            ],
            "requires_python": ">=3.6",
            "summary": "Django Role based Access Management.",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15756805,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ce72fa6a8d31deb08037528819cba9a5",
                    "sha256": "291c77694b0e2f32d88f4012eff1949254a0147c2de394c0bfa5dcb81aafa67c"
                },
                "downloads": -1,
                "filename": "django_ram-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ce72fa6a8d31deb08037528819cba9a5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7928,
                "upload_time": "2022-11-14T06:12:40",
                "upload_time_iso_8601": "2022-11-14T06:12:40.617142Z",
                "url": "https://files.pythonhosted.org/packages/08/c9/7a733d9a510f89e61f937631c7ff59e66fb4d23ef4b3aefac6f0672ac170/django_ram-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "42c42ed59cdab581f2603b1e75061f25",
                    "sha256": "9cff7754d0d391e7230cc5ed01df8ac54f3d34bf676c381a545386fca5100a3a"
                },
                "downloads": -1,
                "filename": "django-ram-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "42c42ed59cdab581f2603b1e75061f25",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 17462,
                "upload_time": "2022-11-14T06:12:43",
                "upload_time_iso_8601": "2022-11-14T06:12:43.293331Z",
                "url": "https://files.pythonhosted.org/packages/c3/70/e0b659e2cfe89a4ae2e91b63b96007a4fb09178901295701992fb3ec4ec9/django-ram-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}