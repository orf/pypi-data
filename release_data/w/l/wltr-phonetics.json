{
    "1.0.2": {
        "info": {
            "author": "Walter Avelino",
            "author_email": "walter.avelin@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Wltr Phonetics\n\n<a href=\"https://pypi.org/project/wltr-phonetics/\">\n  <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/wltr-phonetics\">\n</a>\n\n[![Build Status](https://travis-ci.com/walteravelino/Projetos.svg?branch=master)](https://travis-ci.com/walteravelino/Projetos)\n<img src = \"https://img.shields.io/github/languages/top/walteravelino/jca-cleansing-validate\">\n<a href=\"https://github.com/walteravelino/Projetos/blob/master/LICENSE\"><img src = \"https://img.shields.io/github/license/walteravelino/Projetos\"></a>\n\nWltrPhonetics \u00e9 uma biblioteca Python para algoritmos fon\u00e9ticos. \nOs seguintes algoritmos est\u00e3o dispon\u00edveis:\n\n * Soundex\n * Metaphone\n * Refined Soundex\n * Fuzzy Soundex\n * Lein\n * Matching Rating Approach\n\nAl\u00e9m disso, as seguintes m\u00e9tricas de dist\u00e2ncia:\n\n * Hamming\n * Levenshtein\n\n## Autor\n\n\ud83d\udc64 **Walter Avelino**\n\n- StackOverFlow [@walteravelino](https://stackoverflow.com/users/13001807/walter-avelino)\n- Github: [@walteravelino](https://github.com/walteravelino)\n- Linkedin: [@walteravelino](https://linkedin.com/in/walter-avelino-434197105)\n- DEV: [@walteravelino](https://dev.to/walteravelino)\n\n\n## \ud83d\udcdd Licen\u00e7a\n\nCopyright \u00a9 2020 [Walter Avelino](https://github.com/walteravelino). <br />\nOs projetos est\u00e3o sob a licen\u00e7a [MIT](https://github.com/walteravelino/Projetos/blob/master/LICENSE).\n\n\n## Instala\u00e7\u00e3o\n\n\nO m\u00f3dulo est\u00e1 dispon\u00edvel no PyPI, basta instalar pelo pip `pip install wltr-phonetics`.\n\n\n## Utiliza\u00e7\u00e3o\n\n```python\n>>> from wltr_phonetics import Soundex\n>>> soundex = Soundex()\n>>> soundex.phonetics('Walter')\n'W436'\n>>> soundex.phonetics('Waltie')\n'W430'\n>>> soundex.sounds_like('Walter', 'Waltie')\nFalse\n```\n\nA mesma API se aplica a todos os algoritmos, por exemplo:\n\n```python\n>>> from wltr_phonetics import Metaphone\n>>> metaphone = Metaphone()\n>>> metaphone.phonetics('discrimina\u00e7\u00e3o')\n'TSKRMNK'\n```\n\nVoc\u00ea tamb\u00e9m pode usar o m\u00e9todo `distance(word1, word2, metric='levenshtein')` para encontrar a dist\u00e2ncia entre 2 representa\u00e7\u00f5es fon\u00e9ticas.\n\n```python\n>>> from wltr_phonetics import RefinedSoundex\n>>> rs = RefinedSoundex()\n>>> rs.distance('Walter', 'Waltie')\n1\n>>> rs.distance('assign', 'assist', metric='hamming')\n2\n```\n\n## Cr\u00e9ditos\n\nO m\u00f3dulo foi amplamente baseado na implementa\u00e7\u00e3o de algoritmos fon\u00e9ticos encontrados em [Talisman.js](https://github.com/Yomguithereal/talisman) \"Node NLP library\".\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/walteravelino/wltr-phonetics",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wltr-phonetics",
            "package_url": "https://pypi.org/project/wltr-phonetics/",
            "platform": "",
            "project_url": "https://pypi.org/project/wltr-phonetics/",
            "project_urls": {
                "Homepage": "https://github.com/walteravelino/wltr-phonetics"
            },
            "release_url": "https://pypi.org/project/wltr-phonetics/1.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Wltr Phonetics \u00e9 uma biblioteca de algoritmos fon\u00e9ticos",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7604623,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4404978eabcf8ac3f72fade716616f6e",
                    "sha256": "2ea0ddeaf723fa9905d46ac23bb64a6410582a7406978e9afa989dbf0ef8f00d"
                },
                "downloads": -1,
                "filename": "wltr_phonetics-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4404978eabcf8ac3f72fade716616f6e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12401,
                "upload_time": "2020-07-01T09:38:40",
                "upload_time_iso_8601": "2020-07-01T09:38:40.824620Z",
                "url": "https://files.pythonhosted.org/packages/01/65/eb77adac878e492bcef9660d65bdcbf7cf39af5ea9b614533de71f08f058/wltr_phonetics-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b0eacc87da9bdd96f377b3df425e41dd",
                    "sha256": "51467a63a1bca417d269100afa21f3614e1900ecdea3ec2ef66dd3e108366317"
                },
                "downloads": -1,
                "filename": "wltr-phonetics-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "b0eacc87da9bdd96f377b3df425e41dd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8440,
                "upload_time": "2020-07-01T09:38:42",
                "upload_time_iso_8601": "2020-07-01T09:38:42.916193Z",
                "url": "https://files.pythonhosted.org/packages/a0/7b/48ff8c55490f1f5e64dea1a66e08fdede6130ddbbdea7c5c94796c3d8eac/wltr-phonetics-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}