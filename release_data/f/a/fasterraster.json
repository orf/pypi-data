{
    "0.0.1": {
        "info": {
            "author": "asenogles",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/asenogles/fasterraster",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fasterraster",
            "package_url": "https://pypi.org/project/fasterraster/",
            "platform": "",
            "project_url": "https://pypi.org/project/fasterraster/",
            "project_urls": {
                "Homepage": "https://github.com/asenogles/fasterraster"
            },
            "release_url": "https://pypi.org/project/fasterraster/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Fast multi-threaded raster operations with simple IO",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13090678,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8ffbf06b06d57c9051f6d3f0dc63303",
                    "sha256": "c19686ca645ac815de12c1e87ba64fbca636c9aa21479349f6dac47996dd8f40"
                },
                "downloads": -1,
                "filename": "fasterraster-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f8ffbf06b06d57c9051f6d3f0dc63303",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 24705,
                "upload_time": "2022-03-06T01:53:43",
                "upload_time_iso_8601": "2022-03-06T01:53:43.301160Z",
                "url": "https://files.pythonhosted.org/packages/c4/4a/d7c2796bc9417b7a1277b89bc83ecc32574fcac442e3707dbe736501c0ec/fasterraster-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "asenogles",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Faster-Raster\n\n***fasterraster*** is a fast multi-threaded python library for performing raster operations using [openMP](https://www.openmp.org/) and [numpy](https://numpy.org/) objects complete with simple IO.\n\n - Github repository: https://github.com/asenogles/fasterraster\n - PyPI: https://pypi.org/project/fasterraster\n - conda: https://anaconda.org/conda-forge/fasterraster\n\n## Motivation\n---\n***fasterraster*** was developed to quickly perform raster operations, enabling self-supervised learning for raster based analyses. ***fasterraster*** provides a cython wrapper for optimized [openMP](https://www.openmp.org/) *c* code. Data objects are handled by [numpy](https://numpy.org/) allowing for straightforward memory management. Currently only computation of visual/morphological features have been implemented however this is open to expansion in the future. All code is still in development and thus it is recommended to test fully before use.\n\n## Installation\n---\n***fasterraster*** has currently been tested on Linux and Microsoft windows operating systems. You will need python>=3.6 installed. It is recommended to install ***fasterraster*** within a virtual environment.\n### Install using pip\n\nTo install ***fasterraster*** from PyPI using pip:\n\n```console\npip install fasterraster\n```\n### Install from source\n\nTo build ***fasterraster*** from source, download this repository and run:\n```console\npython3 setup.py build_ext --inplace\n```\n**Note**: You will need to have the required build dependencies installed.\n\n## Example\n---\n```python\nimport timeit\nimport numpy as np\nimport fasterraster as fr\nfrom pathlib import Path\n\nNTESTS = 10\n\n# Load a .bil file containing a DEM\nfname = Path('./test_data/dem.bil')\ndem = fr.read(fname)\n\n# regular python implementation of hillshade function\n# from https://www.neonscience.org/resources/learning-hub/tutorials/create-hillshade-py\ndef py_hillshade(dem, cell_size, azimuth=330, altitude=30):\n    azimuth = 360.0 - azimuth\n\n    dem = dem / cell_size\n    x, y = np.gradient(dem)\n    slope = np.pi/2. - np.arctan(np.sqrt(x*x + y*y))\n    aspect = np.arctan2(-x, y)\n    azimuthrad = azimuth*np.pi/180.\n    altituderad = altitude*np.pi/180.\n \n    shaded = np.sin(altituderad)*np.sin(slope)\n    + np.cos(altituderad)*np.cos(slope) * np.cos(\n    (azimuthrad - np.pi/2.) - aspect)\n    \n    return 255*(shaded + 1)/2\n\n# Time hillshade computation using regular python\ntime = timeit.timeit(lambda: py_hillshade(dem.raster, dem.XDIM), number=NTESTS)\nprint(f'python hillshade averaged {time/NTESTS:.3f} seconds')\n\n# Time hillshade computation using fasterraster for num-threads\nnum_threads = [1,2,4,8]\nfor numt in num_threads:\n    time = timeit.timeit(lambda: fr.hillshade_faster_mp(dem.raster, numt), number=NTESTS)\n    print(f'hillshade averaged {time/NTESTS:.3f} seconds for {numt} threads')\n```\nExample output:\n```console\npython hillshade averaged 2.880 seconds\nhillshade averaged 0.081 seconds for 1 threads\nhillshade averaged 0.041 seconds for 2 threads\nhillshade averaged 0.034 seconds for 4 threads\nhillshade averaged 0.024 seconds for 8 threads\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/asenogles/fasterraster",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fasterraster",
            "package_url": "https://pypi.org/project/fasterraster/",
            "platform": "",
            "project_url": "https://pypi.org/project/fasterraster/",
            "project_urls": {
                "Homepage": "https://github.com/asenogles/fasterraster"
            },
            "release_url": "https://pypi.org/project/fasterraster/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Fast multi-threaded raster operations with simple IO",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13090678,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "30e79dac269fa20ff681ce089f6dab50",
                    "sha256": "81883d794d41cc0c6edd252088192447fe2065b04828dbbfec74b4f71e5903dc"
                },
                "downloads": -1,
                "filename": "fasterraster-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "30e79dac269fa20ff681ce089f6dab50",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 24707,
                "upload_time": "2022-03-06T01:59:46",
                "upload_time_iso_8601": "2022-03-06T01:59:46.932073Z",
                "url": "https://files.pythonhosted.org/packages/48/af/02816b3174411d25e7a952e7cb8c9e02e81d6b154d06a3fa3f3e3599762d/fasterraster-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}