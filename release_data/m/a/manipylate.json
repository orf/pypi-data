{
    "0.1.0": {
        "info": {
            "author": "Philip Heringlake",
            "author_email": "heringlake-public@mailbox.org",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python"
            ],
            "description_content_type": "text/markdown; charset=UTF-8",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bottom-bracket/manipylate",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "manipylate",
            "package_url": "https://pypi.org/project/manipylate/",
            "platform": "any",
            "project_url": "https://pypi.org/project/manipylate/",
            "project_urls": {
                "Homepage": "https://github.com/bottom-bracket/manipylate",
                "Source": "https://github.com/bottom-bracket/manipylate"
            },
            "release_url": "https://pypi.org/project/manipylate/0.1.0/",
            "requires_dist": [
                "importlib-metadata ; python_version < \"3.8\"",
                "setuptools ; extra == 'testing'",
                "pytest ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "Manipulate like plotting in python",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14362632,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "46d3fb495565bba9d4ea0c70e8659051",
                    "sha256": "0a9276bdfa3eeaf04a357ba901be180fd808d12b532ec9af2968e84b93889ed4"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "46d3fb495565bba9d4ea0c70e8659051",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9359,
                "upload_time": "2022-06-17T09:32:56",
                "upload_time_iso_8601": "2022-06-17T09:32:56.188236Z",
                "url": "https://files.pythonhosted.org/packages/18/4a/6ef82309b117c69b4194c79f8745060da27c8ac65eef1f1fb7b56c28679b/manipylate-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c6969c3261b7813b930458d75c670ed9",
                    "sha256": "da7267a3722a55863996523bfcf4003487f66dd0681f76e84e8a10c20d615f97"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "c6969c3261b7813b930458d75c670ed9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4447111,
                "upload_time": "2022-06-17T09:32:58",
                "upload_time_iso_8601": "2022-06-17T09:32:58.519118Z",
                "url": "https://files.pythonhosted.org/packages/fc/2c/a069149046ad22646bf1aed6b0dfc3bc8c933a0d1209c05e13db8bf7e51e/manipylate-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Philip Heringlake",
            "author_email": "heringlake-public@mailbox.org",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python"
            ],
            "description_content_type": "text/markdown; charset=UTF-8",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bottom-bracket/manipylate",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "manipylate",
            "package_url": "https://pypi.org/project/manipylate/",
            "platform": "any",
            "project_url": "https://pypi.org/project/manipylate/",
            "project_urls": {
                "Homepage": "https://github.com/bottom-bracket/manipylate",
                "Source": "https://github.com/bottom-bracket/manipylate"
            },
            "release_url": "https://pypi.org/project/manipylate/0.1.2/",
            "requires_dist": [
                "importlib-metadata ; python_version < \"3.8\"",
                "setuptools ; extra == 'testing'",
                "pytest ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "Manipulate like plotting in python",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14362632,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "06c7a8e23cdd3e4af15a89555ba99b6d",
                    "sha256": "b0fe0adf131cb1178e919f7c31dd681a00dc7c01d3b0ad3adf0f9677fa4dc372"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "06c7a8e23cdd3e4af15a89555ba99b6d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9405,
                "upload_time": "2022-06-27T15:53:46",
                "upload_time_iso_8601": "2022-06-27T15:53:46.846653Z",
                "url": "https://files.pythonhosted.org/packages/af/f2/9ce2803c8d62364479f2432a58cd725a61ed055f73b4ebde56002c95ff88/manipylate-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f4438c045490c1a0583ad58f1e763941",
                    "sha256": "15c4b73ce6416b126526b9e80f1865b8fd1953f60797a4667285f7f2924c95c9"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "f4438c045490c1a0583ad58f1e763941",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4447034,
                "upload_time": "2022-06-27T15:53:57",
                "upload_time_iso_8601": "2022-06-27T15:53:57.293950Z",
                "url": "https://files.pythonhosted.org/packages/58/4d/961c890d1c0a6b16a509893a17489787d89ea5fdbedbbd7b2ccdcf1f8c0c/manipylate-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Philip Heringlake",
            "author_email": "heringlake-public@mailbox.org",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python"
            ],
            "description": "---\nauthor: Philip Heringlake\ntitle: Manipulate in Python\n---\n\n# Description\n\nThe package repository is located at\n<https://github.com/bottom-bracket/manipylate>\n\nIn research we spend some time with plotting data, comparing measurement\nresults or testing the influence of parameter changes. Often the most\nintuitive approach is by looking at different plots. However, while\npython is great to create reproducible figures, I found no way to\nquickly create plots with which one can interact without changing the\ncode used to create the plot as in *mathematica's* `Manipulate`. The\nclosest one can get to this is `interact` from `ipywidgets` which is\nlimited to run in *Jupyter* notebooks.\n\n*Manipylate* shall provide the simplified functionalities from its\nbigger sibling *Manipulate*. The tasks I had in mind while writing the\ntool are:\n\n-   Plotting 1d and 2d cuts of multidimensional data and changing the\n    slice index with sliders\n-   Plot a function for changing parameters which one can modify\n    interactively\n\nI also wanted to keep things as simple as possible and be able to use\n*manipylate* outside `jupyter` notebooks.\n\n# Examples\n\nFirst we get the environment ready (leave out the lines starting with\n`%` for non-ipython shells).\n\n``` jupyter-python\n%matplotlib qt\n%load_ext autoreload\n%autoreload 2\nimport matplotlib as mpl\nfrom matplotlib import pyplot as plt\nimport numpy as np\nfrom manipylate import ifigure\n```\n\n``` example\nThe autoreload extension is already loaded. To reload it, use:\n  %reload_ext autoreload\n```\n\n## 1d cut through a 2d array\n\nLet's create some data:\n\n``` jupyter-python\nx = np.linspace(-5, 5, 200)\nX, Y = np.meshgrid(x, x)\ndata = np.sinc(X * Y**2)\n```\n\nThe figure is created by creating an `ifigure` object. We can then call\nits `add_plot` method to add an axis and a line plot. Here `axpos`\ndefines where the plot shall be placed, `x` is the *x*-axis data. `data`\nthe 2d array of which we want to plot a cut along the axis given by\n`plot_ax`, and `parameters` is a list of dimension parameters we want to\nchange using sliders.\n\nCalling `show` creates the figure. It needs to be called after all plots\nhave been added to the figure since here we'll create the sliders and\narange the slider axes (in case of execution outside jupyter).\n\n``` jupyter-python\nifig = ifigure(1,1)\nifig.add_plot(axpos=[0,0],x=x,data=data,parameters=['x'],plot_ax=1)\nifig.show()\n```\n\n![](docs/ex1.gif)\n\n### In jupyter notebook\n\nIn order to use the `ipywidget` widgets, we call `ifigure` with the\n`jupyterwidget` keyword argument.\n\n``` jupyter-python\nifig = ifigure(1,1,jupyterwidget=True)\nifig.add_plot(axpos=[0,0],x=x,data=data,parameters=['x'],plot_ax=1)\nifig.show()\n```\n\n![](docs/ex1a.gif)\n\n## Adding a second plot\n\n### In the same axis\n\nAxes are remembered by the `ifigure` object based on their position, so\nwe can call the same `add_plot` command with another dataset. Note that\nany keyword arguments are passed to `matplotlib.axes.plot`, so we can\nuse this to change the line style.\n\n``` jupyter-python\nifig = ifigure(1,1)\nifig.add_plot(axpos=[0,0],x=x,data=data,parameters=['x'],plot_ax=1)\nifig.add_plot(axpos=[0,0],x=x,data=-data,parameters=['x'],plot_ax=1,ls=':')\nifig.show()\n```\n\n![](docs/ex2.png)\n\nNote that here both plots share the same parameter. In the next example\nwe will see that if called with a different name, a new slider will be\ncreated.\n\n### As twinned axis\n\nSometimes I want to compare two different values (like amplitude and\nphase) over the same x axis. This can be done by passing the\n`twinx=True` to the `add_plot` method. Here I also use the `fix_lim`\nflag to prevent the phase axis from updating. Note that `add_plot`\nreturns a matplotlib axis instance which we can modify as usual (here\nsetting the y scale to logarithmic).\n\n``` jupyter-python\nfc = np.linspace(-5, 5, 50) ** 2 + 250\nx = np.linspace(200, 300, 120)\nFC, X = np.meshgrid(fc, x, indexing=\"ij\")\ndata = 1 / ((FC ** 2 - X ** 2 - 1j * X * 1) ** 2)\n\nifig = ifigure(1, 1)\nax = ifig.add_plot(axpos=[0, 0], x=x, data=np.abs(data), parameters=[\"fc\"], plot_ax=1)\nax.set_yscale(\"log\")\nifig.add_plot(\n    axpos=[0, 0],\n    x=x,\n    data=np.angle(data, deg=True),\n    parameters=[\"x\"],\n    plot_ax=1,\n    twinx=True,\n    ls=\":\",\n    fix_lim=True,\n)\nifig.show()\n```\n\n![](docs/ex3.gif)\n\n### As new axis\n\nIn order to add more than one subplots we adjust the `ifigure` creation.\nHere we also use another parameter for the second plot.\n\n``` jupyter-python\nfc = np.linspace(-5, 5, 50) ** 2 + 250\nx = np.linspace(200, 300, 120)\nFC, X = np.meshgrid(fc, x, indexing=\"ij\")\ndata = 1 / ((FC ** 2 - X ** 2 - 1j * X * 1) ** 2)\n\nifig = ifigure(2, 1)\nax = ifig.add_plot(axpos=[0, 0], x=x, data=np.abs(data), parameters=[\"fc\"], plot_ax=1)\nax.set_yscale(\"log\")\nifig.add_plot(\n    axpos=[1, 0],\n    x=fc,\n    data=np.abs(data),\n    parameters=[\"x\"],\n    plot_ax=0,\n    ls=\":\",\n)\nifig.show()\n```\n\n![](docs/ex4.png)\n\n## 2d cut trough nd array\n\nPlotting a 2d cut is nearly the same as a 1d line. `ifigure` creates an\n`imshow` plot when being passed data which has two more dimensions than\nthe number of parameters passed to the function. For the 2d plot we need\nto specify along which axes we want to cut by changing the `plot_ax`\nargument to a list of length 2.\n\n``` jupyter-python\nx = np.linspace(-5, 5, 200)\ny = np.linspace(-3, 3, 100)\nz = np.linspace(-4, 4, 80)\nX, Y ,Z = np.meshgrid(x, y, z,indexing='ij')\ndata = np.sinc(X * Y**2 * Z**3)\n\nifig=ifigure(1,1)\n\nifig.add_plot(axpos=[0,0],x=[x,y],data=data,parameters=['x'],plot_ax=[0,1])\nifig.show()\n```\n\n![](docs/ex5.gif)\n\n## Plotting a functions value\n\nThe `data` argument can be replaced by a function that returns either a\n1d array for a line plot or a 2d array for a map plot.\n\n### In 1d\n\nThe main difference to calling the plot on an array is that we do not\nneed to specify the `plot_ax` parameter but we need to define a range\nand step size for the slider, which is done by replacing the string\nargument in the parameter list by a list containing name,minimum,\nmaximum and step size.\n\n``` jupyter-python\nfc = 250\nx = np.linspace(200, 800, 120)\ndef lor(y):\n    return np.abs(1 / ((4*fc ** 2 - (x+y) ** 2 - 1j * x * 20) ** 2))\n\nifig = ifigure(1, 1)\nax = ifig.add_plot(axpos=[0, 0], x=x, data=lor, parameters=[[\"y\",-100,100,1]])\nax.set_yscale(\"log\")\nifig.show()\n```\n\n![](docs/ex6a.gif)\n\n### In 2d\n\n## Complex figure layout\n\nSince the subplot layout creation is based on `GridSpec`, we can create\nmore complicated layouts. We use the handy `numpy.s_` to create the\nexact slices to index the `GridSpec`.\n\n``` jupyter-python\nx = np.linspace(-5, 5, 200)\ny = np.linspace(-3, 3, 100)\nz = np.linspace(-4, 4, 80)\nX, Y ,Z = np.meshgrid(x, y, z,indexing='ij')\ndata = np.sinc(X * Y**2 + Z)\n\nifig = ifigure(6, 4,figsize=(12,8))\nax=ifig.add_plot(axpos=np.s_[0,:], x=x, data=data, parameters=[\"y\",'z'],plot_ax=0)\nax.set(xlabel='x')\nax=ifig.add_plot(axpos=np.s_[1,:2], x=y, data=data, parameters=[\"x\",\"z\"],plot_ax=1)\nax.set(xlabel='y')\nax=ifig.add_plot(axpos=np.s_[1,2:], x=z, data=data, parameters=[\"x\",\"y\"],plot_ax=2)\nax.set(xlabel='z')\nax=ifig.add_plot(axpos=np.s_[2::,:], x=[x,z], data=data, parameters=[\"y\"],plot_ax=[0,2])\nax.set(xlabel='x',ylabel='y')\nifig.show()\n```\n\n![](docs/ex7.gif)\n\n# TODOs\n\n## TODOs\n\n-   Comment and document code\n-   \n\n## Bugs\n\n## Missing Features\n\n-   add `convert_param` method to display physical parameter values\n    (e.g. 0-1\u03bcm instead of index values 1-51)\n-   3d plots ?\n-   choice for 2d plots (contour)\n",
            "description_content_type": "text/markdown; charset=UTF-8",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bottom-bracket/manipylate",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "manipylate",
            "package_url": "https://pypi.org/project/manipylate/",
            "platform": "any",
            "project_url": "https://pypi.org/project/manipylate/",
            "project_urls": {
                "Homepage": "https://github.com/bottom-bracket/manipylate",
                "Source": "https://github.com/bottom-bracket/manipylate"
            },
            "release_url": "https://pypi.org/project/manipylate/0.1.3/",
            "requires_dist": [
                "importlib-metadata ; python_version < \"3.8\"",
                "setuptools ; extra == 'testing'",
                "pytest ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "Manipulate like plotting in python",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14362632,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "71af414306b2dee327558f32d58b13fe",
                    "sha256": "3e1302065b107a06ad207b1189dae6fa10e3000a18825e39e057a9abc572c700"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "71af414306b2dee327558f32d58b13fe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15441,
                "upload_time": "2022-07-07T09:43:05",
                "upload_time_iso_8601": "2022-07-07T09:43:05.860898Z",
                "url": "https://files.pythonhosted.org/packages/92/e3/b330bf2b075a07e596f0a3fb7c147e8418125159805e3d7939492c71beea/manipylate-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ada585995e9da1b0da5ebae3393b549",
                    "sha256": "d570dedf9f8d6a8398e14d2bc8399a90d54a2b05ae92bdf843d71ab867306f96"
                },
                "downloads": -1,
                "filename": "manipylate-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "1ada585995e9da1b0da5ebae3393b549",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4448777,
                "upload_time": "2022-07-07T09:43:10",
                "upload_time_iso_8601": "2022-07-07T09:43:10.935226Z",
                "url": "https://files.pythonhosted.org/packages/8f/14/86aca9c3c40761f64ca3658bba5d7a54503f28a7a4f26d9b8c467e7b49f2/manipylate-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}