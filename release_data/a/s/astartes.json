{
    "0.0.0": {
        "info": {
            "author": "Jackson Burns",
            "author_email": "jburnsky@udel.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description": "<h1 align=\"center\">extended_train_test_split</h1> \n<h3 align=\"center\">Algorithmic train:test splitting for molecules, images, and arbitrary arrays.</h3>\n\n<p align=\"center\">  \n  <img alt=\"extended_train_test_splitlogo\" src=\"https://github.com/JacksonBurns/extended_train_test_split/blob/main/extended_train_test_split_logo.png\">\n</p> \n<p align=\"center\">\n  <img alt=\"GitHub Repo Stars\" src=\"https://img.shields.io/github/stars/JacksonBurns/extended_train_test_split?style=social\">\n  <img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/extended_train_test_split\">\n  <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/extended_train_test_split\">\n  <img alt=\"PyPI - License\" src=\"https://img.shields.io/github/license/JacksonBurns/extended_train_test_split\">\n</p>\n\n## Online Documentation\n[Click here to read the documentation](https://JacksonBurns.github.io/extended_train_test_split/)\n\n## Background\n\n### Rational Splitting Algorithms\nWhile much machine learning is done with a random choice between training/test/validation data, an alternative is the use of so-called \"rational\" splitting algorithms. These approaches use some similarity-based algorithm to divide data into sets. Some of these algorithms include Kennard-Stone, minimal test set dissimilarity, and sphere exclusion algorithms [as discussed by Tropsha et. al](https://pubs.acs.org/doi/pdf/10.1021/ci300338w) as well as the DUPLEX, OptiSim, D-optimal, as discussed in [Applied Chemoinformatics: Achievements and Future Opportunities](https://www.wiley.com/en-us/Applied+Chemoinformatics%3A+Achievements+and+Future+Opportunities-p-9783527806546). Some clustering-based splitting techniques have also been introduced, such as [DBSCAN](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1016.890&rep=rep1&type=pdf).\n\n## Splitting Algorithms\n - Random\n - Kennard-Stone (KS)\n - Minimal Test Set Dissimilarity\n - Sphere Exclusion\n - DUPLEX\n - OptiSim\n - D-Optimal\n - Density-Based Spatial Clustering of Applications with Noise (DBSCAN)\n\n## Extending Functionality\nAdding a new splitting method should take on this format:\n\n```python\nfrom sklearn.model_selection import train_test_split\n\ndef random(\n    X,\n    y=None,\n    test_size=None,\n    train_size=None,\n    random_state=None,\n    shuffle=True,\n    stratify=None,\n):\n    return train_test_split(\n        X,\n        y,\n        test_size=test_size,\n        train_size=train_size,\n        random_state=random_state,\n        shuffle=shuffle,\n        stratify=stratify,\n    )\n```\n\nIt can be as simple as a passthrough to a another `train_test_split`, or it can be an original implementation that results in X and y being split into two lists.\n\n\nAdding a new interface should take on this format:\n\n```python\nfrom extended_train_test_split import train_test_split\n\ndef train_test_split_INTERFACE(\n    INTERFACE_input,\n    INTERFACE_ARGS,\n    y: np.array = None,\n    test_size: float = 0.25,\n    train_size: float = 0.75,\n    splitter: str = 'random',\n    hopts: dict = {},\n    INTERFACE_hopts: dict = {},\n):\n    # turn the INTERFACE_input into an input X\n    # based on INTERFACE ARGS where INTERFACE_hopts\n    # specifies additional behavior\n    X = []\n    \n    # call train test split with this input\n    return train_test_split(\n        X,\n        y=y,\n        test_size=test_size,\n        train_size=train_size,\n        splitter=splitter,\n        hopts=hopts,\n    )\n```\n\n## JOSS Branch\n`paper.md` is stored in a separate branch aptly named `joss-paper`. To push changes from the `main` branch into the `joss-paper` branch, run the `Update JOSS Branch` workflow.\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/JacksonBurns/extended_train_test_split",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "astartes",
            "package_url": "https://pypi.org/project/astartes/",
            "platform": null,
            "project_url": "https://pypi.org/project/astartes/",
            "project_urls": {
                "Homepage": "https://github.com/JacksonBurns/extended_train_test_split"
            },
            "release_url": "https://pypi.org/project/astartes/0.0.0/",
            "requires_dist": [
                "AIMSim",
                "kennard-stone"
            ],
            "requires_python": "",
            "summary": "Algorithmic train:test splitting for molecules, images, and arbitrary arrays.",
            "version": "0.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13585531,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1161514db84e56249d28cb85797605c5",
                    "sha256": "ee520f0d34caab3361da1e4e2f77a31db00867fdc312c067c948e8da830a02be"
                },
                "downloads": -1,
                "filename": "astartes-0.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1161514db84e56249d28cb85797605c5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13331,
                "upload_time": "2022-04-22T01:34:22",
                "upload_time_iso_8601": "2022-04-22T01:34:22.888883Z",
                "url": "https://files.pythonhosted.org/packages/35/c5/61580f4943a8317789207de382e2383e625a0f4142edbf1591bee7484c21/astartes-0.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b9ccfb09f27999071229a02caa7a0ee",
                    "sha256": "5375a10ee6130e65e566933450e2e075fc8456dc0424fc02b6400a5de99e32dc"
                },
                "downloads": -1,
                "filename": "astartes-0.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0b9ccfb09f27999071229a02caa7a0ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6015,
                "upload_time": "2022-04-22T01:34:26",
                "upload_time_iso_8601": "2022-04-22T01:34:26.063523Z",
                "url": "https://files.pythonhosted.org/packages/15/36/594f0899bb13ef9e525214b99e333d8f57435e2b40055ca65b7270d20788/astartes-0.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}