{
    "0.0.11": {
        "info": {
            "author": "SheiUn",
            "author_email": "develop@sheiun.me",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Pedia Cloud API\n\nA third-party Python API for [Pedia Cloud Dictionary](https://pedia.cloud.edu.tw/)\n\n## Install\n\n```bash\npip install pedia-cloud\n```\n\n## Usage\n\n### Get all words and its meaning\n\n```python\n>>> from pedia_cloud import PediaDictionary\n>>> PediaDictionary.get_all(\"\u65e9\")\n[\u65e9, \u3117\u3120\u02c7, meanings count: 11]\n>>> PediaDictionary.get_all(\"\u597d\")\n[\u597d, \u310f\u3120\u02c7, meanings count: 14, \u597d, \u310f\u3120\u02cb, meanings count: 3]\n>>> PediaDictionary.get_all(\"\u65e9\")[0].meanings\n[{'type': '[\u540d]', 'def': '\u5929\u525b\u4eae\u7684\u6642\u5019...'}, ...]\n```\n\n### Get all possible part-of-speech\n\n```python\n>>> from pedia_cloud import PediaDictionary\n>>> PediaDictionary.get_all_poss(\"\u597d\")\nCounter({'\u526f': 7, '\u5f62': 3, '\u52d5': 3, '\u6b4e': 2, '\u540d': 2})\n```\n\n### A word\n\n```python\n>>> from pedia_cloud import PediaDictionary\n>>> word = PediaDictionary.get_one(\"\u597d\")\n>>> word\n\u597d, \u310f\u3120\u02c7, meanings count: 14\n>>> word.text\n'\u597d'\n>>> word.zuyin\n'\u310f\u3120\u02c7'\n>>> word.annotations\n['\u7f8e\u3001\u5584\uff0c\u7406\u60f3\u7684\u3002', '\u53cb\u611b\u7684\u3002', ...]\n>>> word.meanings\n[{'type': '[\u5f62]', 'def': '\u7f8e\u3001\u5584\uff0c...\n>>> word.filter_by_pos([\"\u526f\"])\n[{'type': '[\u526f]', 'def': '\u5f88\u3001\u975e\u5e38\u3002\u8868\u793a\u7a0b\u5ea6\u6df1...\n\n>>> word = PediaDictionary.get_one(\"\u56eb\")\n>>> word.has_meaning\nFalse\n>>> word.annotations\n['\u5b8c\u6574\u3001\u6574\u500b\u3002']\n>>> word.meanings\n[{'def': '\u53c3\u898b\u300c\u56eb\u5707\u300d\u689d\u3002'}]\n>>> word.meta\n{'bopomofo': '\u310f\u3128\u02ca', 'pinyin': 'h\u00fa', 'definitions': [{'def': '\u53c3\u898b\u300c\u56eb\u5707\u300d\u689d\u3002'}]}\n```\n\n## A meaning\n\n```python\n>>> meaning = word.meanings[0]\n>>> meaning\n{'type': '[\u5f62]', 'def': '\u7f8e\u3001\u5584 ...\n>>> meaning.pos\n'\u5f62'\n>>> meaning.full\n'\u7f8e\u3001\u5584\uff0c\u7406\u60f3\u7684\u3002\u5982\uff1a\u300c\u597d\u6771\u897f\u300d...\n>>> meaning.annotation\n'\u7f8e\u3001\u5584\uff0c\u7406\u60f3\u7684\u3002'\n```\n\n## Dictionary based idiom segmentation\n\n> I implement it by using pedia-cloud dictionary.  \n> This will be slow for long sentence due to api call.\n\n```python\n>>> from pedia_cloud import PediaDictionary\n>>> PediaDictionary.segment(\"\u4e00\u9cf4\u9a5a\u4eba\")\n['\u4e00', '\u9cf4', '\u9a5a\u4eba']\n>>> PediaDictionary.segment(\"\u532f\u96c6\u4e86\u4e16\u754c\u5404\u5730\u7684\u65b0\u805e\u4f86\u6e90\")\n['\u532f\u96c6', '\u4e86', '\u4e16\u754c', '\u5404', '\u5730', '\u7684', '\u65b0\u805e\u4f86\u6e90']\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/sheiun/pedia-cloud",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pedia-cloud",
            "package_url": "https://pypi.org/project/pedia-cloud/",
            "platform": "",
            "project_url": "https://pypi.org/project/pedia-cloud/",
            "project_urls": {
                "Homepage": "https://github.com/sheiun/pedia-cloud"
            },
            "release_url": "https://pypi.org/project/pedia-cloud/0.0.11/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "A third-party Python API for Pedia Cloud Dictionary",
            "version": "0.0.11",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8040565,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2dfdba34425fe8dbc3542e835d47e7a0",
                    "sha256": "61a828b2c73c92da91a6af6e52d984c90168145fa4bf43a603b7c14389610ee1"
                },
                "downloads": -1,
                "filename": "pedia-cloud-0.0.11.tar.gz",
                "has_sig": false,
                "md5_digest": "2dfdba34425fe8dbc3542e835d47e7a0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 5284,
                "upload_time": "2020-08-26T04:30:17",
                "upload_time_iso_8601": "2020-08-26T04:30:17.011280Z",
                "url": "https://files.pythonhosted.org/packages/76/bb/12bdef7d1f278e4cfa903c34931d4cdf68e03d957a1272c4ebdc5f41fd1a/pedia-cloud-0.0.11.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}