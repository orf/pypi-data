{
    "0.0.0": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.0/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5070eec163eb2de7df5553a7bf35a6ea",
                    "sha256": "3d65b14daaf11949c45d7d01097cd562f8b30cda815e7bbf32aad2d82eafd2ae"
                },
                "downloads": -1,
                "filename": "hundun-0.0.0-py3.10.egg",
                "has_sig": false,
                "md5_digest": "5070eec163eb2de7df5553a7bf35a6ea",
                "packagetype": "bdist_egg",
                "python_version": "0.0.0",
                "requires_python": ">=3.8",
                "size": 16303,
                "upload_time": "2021-12-22T04:24:56",
                "upload_time_iso_8601": "2021-12-22T04:24:56.132888Z",
                "url": "https://files.pythonhosted.org/packages/63/c1/f30636223d41022e60a68a30ee90f84691b7c3f3ceb7b1f610b2d29378ca/hundun-0.0.0-py3.10.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "69a3f695cc40fe9fa80233a101b1f04c",
                    "sha256": "ac0271480dbfc20327679c2a298b66743c045224a7f98e4cede4be4ab753a509"
                },
                "downloads": -1,
                "filename": "hundun-0.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "69a3f695cc40fe9fa80233a101b1f04c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 7469,
                "upload_time": "2021-12-22T04:24:53",
                "upload_time_iso_8601": "2021-12-22T04:24:53.835251Z",
                "url": "https://files.pythonhosted.org/packages/d8/ba/8edb0490c3fc8d5707241b4fc54d47957dfb3983a8a9326d631970621488/hundun-0.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9d8f3e7744b77e9117ba9d3530fe32bd",
                    "sha256": "240a272a63765db2d91ef682721066ef186ee5ad06de8b8819b7a607b93cb306"
                },
                "downloads": -1,
                "filename": "hundun-0.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9d8f3e7744b77e9117ba9d3530fe32bd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 5908,
                "upload_time": "2021-12-22T04:24:58",
                "upload_time_iso_8601": "2021-12-22T04:24:58.171284Z",
                "url": "https://files.pythonhosted.org/packages/21/71/d66aa98bb7aa73f21c7f88d5da508a509e47679f83e3cd1200411487a2f2/hundun-0.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.1/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "04bc79f8adfd3fda55f2171781a90fc1",
                    "sha256": "1437d17908fbbc477c86943d7a907aad3200cf5b89a475ef5ecaaca6767f6405"
                },
                "downloads": -1,
                "filename": "hundun-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "04bc79f8adfd3fda55f2171781a90fc1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 7490,
                "upload_time": "2021-12-22T05:32:54",
                "upload_time_iso_8601": "2021-12-22T05:32:54.727819Z",
                "url": "https://files.pythonhosted.org/packages/cf/b9/490c6af7ca855be3480564b6e800b7f887d70404d262a32bcbd574cc1797/hundun-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4196cb24cd27c79ebd5b384dc00a4330",
                    "sha256": "a4d539dfbada05f15ecee0ed7380b5da5cb7b3ff5049e5198e45441b372ceb73"
                },
                "downloads": -1,
                "filename": "hundun-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4196cb24cd27c79ebd5b384dc00a4330",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 5921,
                "upload_time": "2021-12-22T05:32:56",
                "upload_time_iso_8601": "2021-12-22T05:32:56.285766Z",
                "url": "https://files.pythonhosted.org/packages/72/91/ca71d48ac37738a2289aab8cc3b4d158ffc81099bda31ab42e95d13e8096/hundun-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.3/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cfb29194a5418e0fd9929d6e47187907",
                    "sha256": "af67516bdb2e711cd9141d55636dc9732690b7b5b3ffde713d994c253ed13b98"
                },
                "downloads": -1,
                "filename": "hundun-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cfb29194a5418e0fd9929d6e47187907",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10933,
                "upload_time": "2021-12-22T09:22:12",
                "upload_time_iso_8601": "2021-12-22T09:22:12.361221Z",
                "url": "https://files.pythonhosted.org/packages/ca/db/69f1ca154143f84870387ca61d983860701ce52a6bc90ab65427404f0b08/hundun-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a15c415a9d36e501c11081e7afa83ad8",
                    "sha256": "1bc4c87573bd426c4ec2b648d32271023f097498bd9d3edaf279c77bb39c15e1"
                },
                "downloads": -1,
                "filename": "hundun-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "a15c415a9d36e501c11081e7afa83ad8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 8299,
                "upload_time": "2021-12-22T09:22:14",
                "upload_time_iso_8601": "2021-12-22T09:22:14.029847Z",
                "url": "https://files.pythonhosted.org/packages/82/be/2fc1adb4100052655d1bde26f0f731eec4b60e9d24bc46a78a99912af56a/hundun-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.36": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.36/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.36",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "93a7545494c149ea9f2ad5040b12a2bc",
                    "sha256": "2cb6198f614f015c88b67c72a95fa80d810a2563dcecbcf8a2bf35490bd585f3"
                },
                "downloads": -1,
                "filename": "hundun-0.0.36-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "93a7545494c149ea9f2ad5040b12a2bc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 26338,
                "upload_time": "2022-01-16T10:24:01",
                "upload_time_iso_8601": "2022-01-16T10:24:01.482457Z",
                "url": "https://files.pythonhosted.org/packages/1a/a6/c1df07e3415ea4c2e5357bf65e3cb9f64cb591001b802201308222492845/hundun-0.0.36-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "eb9aac6a4cc10f5b4705d647b09b2fcf",
                    "sha256": "b0d98698cc7ee3e0081d1aae1e79ce9a50bbc3ebf7bea302f1431750231b1846"
                },
                "downloads": -1,
                "filename": "hundun-0.0.36.tar.gz",
                "has_sig": false,
                "md5_digest": "eb9aac6a4cc10f5b4705d647b09b2fcf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 24954,
                "upload_time": "2022-01-16T10:24:03",
                "upload_time_iso_8601": "2022-01-16T10:24:03.541807Z",
                "url": "https://files.pythonhosted.org/packages/49/dd/b1a5ccfc553d06554d960ada9be750a5c6d7e5626d633e3ce5ba828b9461/hundun-0.0.36.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.41": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.41/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.41",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "17f26ea1f4ce24404b0015d657c7cd61",
                    "sha256": "dc1e19e25da9175d8608f0203d90f041b9a668104930ec20c249b4d778e96515"
                },
                "downloads": -1,
                "filename": "hundun-0.0.41-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "17f26ea1f4ce24404b0015d657c7cd61",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 24111,
                "upload_time": "2022-01-18T02:20:52",
                "upload_time_iso_8601": "2022-01-18T02:20:52.392073Z",
                "url": "https://files.pythonhosted.org/packages/1d/7d/7eefc00ba4559df7fa1c1346635c8bb9b6c333ce161877d4bea90dc60da0/hundun-0.0.41-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "04aabbd7dad0307528c6d983be565f98",
                    "sha256": "68d802a467969bb14942d7011c94bd2a67cd2e12b81ed0e53a15662400dd30f4"
                },
                "downloads": -1,
                "filename": "hundun-0.0.41.tar.gz",
                "has_sig": false,
                "md5_digest": "04aabbd7dad0307528c6d983be565f98",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 25016,
                "upload_time": "2022-01-18T02:20:54",
                "upload_time_iso_8601": "2022-01-18T02:20:54.500669Z",
                "url": "https://files.pythonhosted.org/packages/3a/de/3748a877076d851b82e0b69b5d24529ff8983989f98c411e1ea20b42ed5b/hundun-0.0.41.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.7": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.0.7/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5fc4562a698671659c47ce3637f00610",
                    "sha256": "3ad8c7e199abd7785c3eb9a76189071dab210ee6fcbc2d3c54a8fcb7aacee002"
                },
                "downloads": -1,
                "filename": "hundun-0.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5fc4562a698671659c47ce3637f00610",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 12294,
                "upload_time": "2021-12-24T03:49:18",
                "upload_time_iso_8601": "2021-12-24T03:49:18.636895Z",
                "url": "https://files.pythonhosted.org/packages/60/d3/109703c39cf9cc7ee7b1910dc54c1ae214b8a9a2bfb6896698e5cad437f7/hundun-0.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "53803fc7def53e0bfef0ef47c8244f66",
                    "sha256": "988091962afb5738de69bc661dae5f969d5d45098de90495459c4489c32fe233"
                },
                "downloads": -1,
                "filename": "hundun-0.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "53803fc7def53e0bfef0ef47c8244f66",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 10585,
                "upload_time": "2021-12-24T03:49:20",
                "upload_time_iso_8601": "2021-12-24T03:49:20.710066Z",
                "url": "https://files.pythonhosted.org/packages/1f/90/f39a743fa32dd40acae46bdd1e559e381156a0220ebb7396bfba528150ca/hundun-0.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.36": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.1.36/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.1.36",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "838aa4b4eb5e1a499579889503b4b0ed",
                    "sha256": "86341613ba80b640063924e18bec4e614726badda7095473f7cf886082cd91eb"
                },
                "downloads": -1,
                "filename": "hundun-0.1.36-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "838aa4b4eb5e1a499579889503b4b0ed",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 25810,
                "upload_time": "2022-03-03T04:57:32",
                "upload_time_iso_8601": "2022-03-03T04:57:32.068470Z",
                "url": "https://files.pythonhosted.org/packages/e4/94/5291c86f3a3ac8276ef035e1535c609e3fb0ae87b8416bbaf1db4ed5b456/hundun-0.1.36-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "20edf25fcbe370345f7e7a8cb90fdb3d",
                    "sha256": "eab135a903cc81a5ef257b61e92801b00cf4686d8993d2e3eff56839c85b975a"
                },
                "downloads": -1,
                "filename": "hundun-0.1.36.tar.gz",
                "has_sig": false,
                "md5_digest": "20edf25fcbe370345f7e7a8cb90fdb3d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 18722,
                "upload_time": "2022-03-03T04:57:33",
                "upload_time_iso_8601": "2022-03-03T04:57:33.686310Z",
                "url": "https://files.pythonhosted.org/packages/23/89/5fc9885abefb85290d41f68ee494ca8d588d30f0f2603907ceb6588a22e7/hundun-0.1.36.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.38": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": null,
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.1.38/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.1.38",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e7779df856543f41d65016e203476e1b",
                    "sha256": "b8c05cc1a11768909010f45868cb8379a57c8e0787319c9370254a713753c1db"
                },
                "downloads": -1,
                "filename": "hundun-0.1.38-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e7779df856543f41d65016e203476e1b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 25912,
                "upload_time": "2022-05-20T11:53:06",
                "upload_time_iso_8601": "2022-05-20T11:53:06.403106Z",
                "url": "https://files.pythonhosted.org/packages/58/87/1b19075b7ae20f9721f683f11f62fb03067fca5c84fac3457063940df6f7/hundun-0.1.38-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6905629a879ebc016ebe1ff1334557a4",
                    "sha256": "fc2904655177f0e3bf465e5498f37705fda2f772fc050a82f6731a1a4292096f"
                },
                "downloads": -1,
                "filename": "hundun-0.1.38.tar.gz",
                "has_sig": false,
                "md5_digest": "6905629a879ebc016ebe1ff1334557a4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 18659,
                "upload_time": "2022-05-20T11:53:09",
                "upload_time_iso_8601": "2022-05-20T11:53:09.171235Z",
                "url": "https://files.pythonhosted.org/packages/ef/6e/575b414b61ed952fa4104f9effcd74dbfc531045fcfcada4f1d8bcf83149/hundun-0.1.38.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "kosh",
            "author_email": "llllbxg@gmial.com",
            "bugtrack_url": null,
            "classifiers": [
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description": "# hundun\n\nhundun is a python library for the exploration of chaos.   \nPlease note that this library is in beta phase.\n\n## Example\n\nImport the package's equation object.\n\n```python\nfrom hundun import Differential\n```\n\nThe important thing is to define `parameter()` and `equation()` as methods.\nCreating a differential equation is easy using `Differential`.\n\n![\\begin{array}{l}\n    \\dot{x}=\\sigma (y-x) \\\\\n    \\dot{y}=rx - y - xz \\\\\n    \\dot{z}=xy - bz\n\\end{array}](https://render.githubusercontent.com/render/math?math=%5CLarge+%5Cdisplaystyle+%5Cbegin%7Barray%7D%7Bl%7D%0A++++%5Cdot%7Bx%7D%3D%5Csigma+%28y-x%29+%5C%5C%0A++++%5Cdot%7By%7D%3Drx+-+y+-+xz+%5C%5C%0A++++%5Cdot%7Bz%7D%3Dxy+-+bz%0A%5Cend%7Barray%7D)\n\n```python\nclass Lorenz(Differential):\n\n    def parameter(self, s=10, r=28, b=8/3):\n        self.s, self.r, self.b = s, r, b\n        self.dim = 3\n\n    def equation(self, t, u):\n        s, r, b = self.s, self.r, self.b\n\n        x, y, z = u\n\n        x_dot = s*(y - x)\n        y_dot = r*x - y - x*z\n        z_dot = x*y - b*z\n\n        return x_dot, y_dot, z_dot\n```\n\nVarious methods can be used by creating an instance of `Lorenz`.\nAs a test, use `.solve_n_times` to solve the equation in 5000 steps.\n(This method uses RK4 by default.) \n\n```python\nl = Lorenz.on_attractor()\nl.solve_n_times(5000)\n```\n\nAt this time, you can get the time and orbit by using `.t_seq` and `.u_seq`.\n\n\nIt is possible to calculate the **Lyapunov exponent**(spectrum) from the orbit using `Lorenz` above.\nIn addition, a calculation method based on QR decomposition can be used by defining `jacobian()`(Jacoby matrix).\n\n```python\nclass Lorenz2(Lorenz):\n    def jacobian(self):\n        s, r, b = self.s, self.r, self.b\n        x, y, z = self.u\n\n        j = [[-s, s, 0],\n             [r-z, -1, -x],\n             [y, x, -b]]\n\n        return j\n```\n\n`calc_les` automatically determines and calculates.\n\n```python\nfrom hundun.lyapunov import calc_les\n\nles_seq, les = calc_les(Lorenz2)\n```\n\n\nAlso, you can easily draw by using `Drawing` of utils.\n\n```python\nfrom hundun.utils import Drawing\n\nd = Drawing(1, 2, three=1, number=True)\n\nd[0,0].plot(l.u_seq[:,0], l.u_seq[:,1], l.u_seq[:,2])\nd[0,0].set_axis_label('x', 'y', 'z')\n\nfor i in range(3):\n    d[0,1].plot(les_seq[:, i], label=fr'$\\lambda_{i+1}=${les[i]:>+8.3f}')\nd[0,1].legend(loc='center right')\nd[0,1].set_axis_label('step', r'\\lambda')\n\nd.show()\n```\n\n![fig:lorenz](https://github.com/llbxg/hundun/blob/main/docs/img/sample_lorenz_les.png?raw=true)\n\n\nCurrently, time series analysis methods are being added!\n\n\n# Documentation\n\n- [Installation](#Installation)   \n- [Exploration](#Exploration)   \n    - [Embedding](#Embedding-\u57cb\u3081\u8fbc\u307f)   \n    - [Estimate the time lag](#Estimate-the-time-lag)   \n    - [Estimate the generalized dimension](#Estimate-the-generalized-dimension)   \n    - [Estimate the acceptable minimum embedding dimension](#Estimate-the-acceptable-minimum-embedding-dimension)   \n    - [Visualization](#Visualization)   \n- [Equations](#Equations)   \n    - [Lorenz equation](#Lorenz-equation)   \n    - [Henon map](#Henon-map)   \n    - [Logistic map](#Logistic-map)   \n- [Dynamical systems](#Dynamical-Systems)   \n    - [Difference / Differential](#Difference--Differential)   \n- [Lyapunov exponents](#Lyapunov-exponents)   \n- [Synchronization](#synchronization)\n- [Roadmap](#Roadmap)   \n- [Dependencies](#Dependencies)   \n- [Reference](#Reference)   \n\n\n\n## Installation\n\nhundun can be installed via pip from PyPI.\n\n```bash\npip install hundun\n```\n\nTo use the latest code (unstable), checkout the dev branch and run above command in the main hundun directory.\n\n```python\npip install .\n```\n\n## Exploration\n### Introduction\nThe following example uses a 1-dim time series (x) obtained from the Lorenz equation. Equation were numerically integrated by Runge-Kutta method with a time with h=0.01 for 5000 time steps.\n\n![fig:embedding](https://github.com/llbxg/hundun/blob/main/docs/img/sample_lorenz_data.png?raw=true)\n\n```python\nu_seq = np.load('sample/data/lorenz_x.npy')\n```\n\n\n### Embedding (\u57cb\u3081\u8fbc\u307f)\nGenerate a time series using the embedding dimension `D` and the time lag `L`.   \n\n```Python\nfrom hundun import embedding\n```\n\nGenerate a time series by using `embedding(u_seq, T, D)` and plot the result.\n\n```python\ne_seq = embedding(u_seq, 10, 2)\n\nd = Drawing()\nd[0,0].plot(e_seq[:, 0], e_seq[:, 1])\nd[0,0].set_axis_label('x(t)', 'x(t+T)')\nd.show()\n```\n\n![fig:embedding](https://github.com/llbxg/hundun/blob/main/docs/img/sample_lorenz_embedding_2.png?raw=true)\n\nThe result of calculation with D=3 and shifting T is shown below.\n\n![fig:embedding](https://github.com/llbxg/hundun/blob/main/docs/img/sample_embedding.png?raw=true)\n\n### Estimate the time lag\n\n#### Autocorrelation Function\n```python\ndef acf(u_seq, tau):\n```\nCalculate the autocorrelation function from the time series data. \nFinds a point where the autocorrelation function can be considered 0.\n\nIn the example below, the time lag is determined based on Bartlett's formula.\nOther conditions include the first local minimums and 1/e or less.\n\n```python\nfrom hundun.exploration import acf, get_minidx_below_seq, bartlett\nfrom hundun.utils import Drawing\nimport numpy as np\n\n\nu_seq = np.load('lorenz_x.npy')\n\nrho_seq = acf(u_seq, 400)\nvar_seq = bartlett(rho_seq)\nidx_list = get_minidx_below_seq(rho_seq, var_seq)\n\n\nd = Drawing()\nfor i, idx in enumerate(idx_list):\n    d[0,0].plot(rho_seq[:, i], label='acf')\n    d[0,0].plot(var_seq[:, i], label='standard error')\n    d[0,0].scatter(idx, rho_seq[idx, i], zorder=10, marker='o')\nd[0,0].legend()\nd[0,0].axhline(0, color=\"black\", linewidth=0.5, linestyle='dashed')\nd[0,0].set_axis_label('Time~lag', 'Correlation~coefficient')\nd.show()\n```\n\n![fig:acf](https://github.com/llbxg/hundun/blob/main/docs/img/sample_acf.png?raw=true)\n\n\n#### Mutual Information\n```python\ndef mutual_info(u_seq, tau):\n```\nCreate a histogram from time series data and calculate mutual information.\n\n```python\nfrom hundun.exploration import mutual_info, get_bottom\nfrom hundun.utils import Drawing\nimport numpy as np\n\n\nu_seq = np.load('lorenz_x.npy')\n\nmi_seq = mutual_info(u_seq, 300)\nbottom = get_bottom(mi_seq)\n\nd = Drawing()\nfor i, idx in enumerate(bottom):\n    d[0,0].plot(mi_seq[:, i])\n    d[0,0].scatter(idx, mi_seq[idx, i])\nd[0,0].set_axis_label('Time~lag', 'Mutual~Information~[bit]')\nd.show()\n```\n\n![fig:mi](https://github.com/llbxg/hundun/blob/main/docs/img/sample_mi.png?raw=true)\n\n### Estimate the generalized dimension\n\n#### Grassberger-Procaccia Algorithm\n[[Grassberger_1983]](#Measuring-the-strangeness-of-strange-attractors) [[Grassberger_1983_2]](#Characterization-of-Strange-Attractors)   \n\n```python\ndef calc_correlation_dimention_w_gp(\n    e_seq, base=8, h_r=0.05, loop=200, batch_ave=10, normalize=True):\n```\n\nThe correlation dimension(D2) is obtained by calculating the correlation integral C(r).   \n\nAs an example, The result when fixed at T=1 is shown below.\n\n```python\nimport numpy as np\n\nfrom hundun.utils import Drawing\nfrom hundun import embedding\nfrom hundun.exploration import calc_correlation_dimention_w_gp\n\nu_seq = np.load('lorenz_x.npy')\n\nd= Drawing(1, 2)\n\nD_min, D_max = 1, 9\nD2s = []\nfor i in range(D_min, D_max+1):\n    e_seq = embedding(u_seq, 1, i)\n    D2, rs, crs = calc_correlation_dimention_w_gp(e_seq)\n    d[0,0].plot(np.log(rs), np.log(crs), label=f'${i}$: {D2:.3f}')\n    D2s.append(D2)\n\nd[0,0].legend()\nd[0,0].set_axis_label('\\log ~r', '\\log ~C(r)')\n\nd[0,1].plot(range(D_min, D_max+1), D2s)\nd[0,1].plot([1, D_max], [1, D_max],\n            color='black', linewidth=0.5, linestyle='dashed')\nd[0,1].set_aspect('equal')\nd[0,1].set_axis_label('Embedding ~dimension', 'Correlation ~dimension')\n\nd.show()\n```\n\n![fig:gp](https://github.com/llbxg/hundun/blob/main/docs/img/sample_calc_D_gp.png?raw=true)\n\nIn the GP-method, D2 is calculated directly from the attractor.\nIt cannot be evaluated accurately from 1-dim data.\nWhen calculating with 3-dim data, it can be calculated with some accuracy.\n\n```python\nl = Lorenz.on_attractor()\nl.solve_n_times(5000)\nu_seq = l.u_seq\n```\n![fig:gp_3dim](https://github.com/llbxg/hundun/blob/main/docs/img/sample_calc_D_gp_3dim.png?raw=true)\n\n#### Lyapunov dimension\nCalculate using `calc_lyapunov_dimension`.   \nSee here -> [[Lyapunov dimension]](#Lyapunov-dimension-1)\n\n### Estimate the acceptable minimum embedding dimension\n\n#### False Nearest Neighbors - Algorithm\n\n[[Kennel_1992]](#Determining-embedding-dimension-for-phase-space-reconstruction-using-a-geometrical-construction)\n\n```python\ndef fnn(u_seq, threshold_R=10, threshold_A=2, T=50, D_max=10):\n```\n\n```python\nimport numpy as np\nfrom hundun.utils import Drawing\nfrom hundun.exploration import fnn\n\nu_seq = np.load('lorenz_x.npy')\n\npercentage_list = fnn(u_seq)\n\nd = Drawing()\nd[0,0].plot(range(1, len(percentage_list)+1), percentage_list*100,\n            marker='.', markersize=10)\nd[0,0].axhline(1, color=\"black\", linewidth=0.5)\nd[0,0].set_axis_label('Dimension', 'False~NN~Percentage')\nd.show()\n```\n\n![fig:fnn](https://github.com/llbxg/hundun/blob/main/docs/img/sample_fnn.png?raw=true)\n\n#### Averaged False Neighbors - Algorithm\n\n[[Cao_1997]](#Practical-method-for-determining-the-minimum-embedding-dimension-of-a-scalar-time-series)\n\n```python\ndef afn(u_seq, T=1, D_max=10):\n```\n\n```python\nfrom itertools import cycle\n\nfrom hundun.utils import Drawing\nfrom hundun.exploration import afn\nimport matplotlib as mpl\nimport numpy as np\n\ncolor = cycle(mpl.rcParams['axes.prop_cycle'])\n\n\nu_seq = np.load('lorenz_x.npy')\nline, marker = {'E1':'solid', 'E2':'dashed'}, {'E1':'o', 'E2':'s'}\n\nd = Drawing()\nfor T in [1, 5, 10]:\n    Es = afn(u_seq, T=T)\n    c = next(color)['color']\n    for label, E in zip(['E1', 'E2'], Es):\n        d[0,0].plot(range(1, len(E)+1), E,\n                    marker=marker[label], markersize=5,\n                    label=f'{label}-{T}', linestyle=line[label], color=c)\n\nd[0,0].axhline(1, color=\"black\", linewidth=0.5)\n\nd[0,0].set_axis_label('Dimension', 'E1~&~E2')\nd[0,0].legend(loc='lower right')\nd.show()\n```\n\n![fig:afn](https://github.com/llbxg/hundun/blob/main/docs/img/sample_afn.png?raw=true)\n\n#### Wayland Test\n[[Wayland_1993]](#Recognizing-determinism-in-a-time-series)\n\n```python\nfrom hundun.exploration import wayland\nfrom hundun.utils import Drawing\nimport numpy as np\n\nu_seq = np.load('lorenz_x.npy')\n\nmedian_e_trans_ave = wayland(u_seq)\n\nd = Drawing()\nd[0,0].plot(range(1, len(median_e_trans_ave)+1), median_e_trans_ave)\nd[0,0].scatter(median_e_trans_ave.argmin()+1, median_e_trans_ave.min())\nd[0,0].set_axis_label('Dimension', 'median(E_{trans})')\nd[0,0].set_yscale('log')\nd.show()\n```\n\n![fig:wayland](https://github.com/llbxg/hundun/blob/main/docs/img/sample_wayland.png?raw=true)\n\n### Visualization\n#### Recurrence Plot\n```python\ndef calc_recurrence_plot(u_seq, rule=simple_threshold, *params, **kwargs):\n\ndef show_recurrence_plot(u_seq, rule=simple_threshold, cmap=False, *params, **kwargs):\n```\n\nCreate Recurrence Plot(RP) from time series data. \n`calc_~` returns the result of RP as a matrix.\n`show_~` displays the result.\n\n\n```python\nfrom hundun.exploration import show_recurrence_plot\nimport numpy as np\n\nu_seq = np.load('lorenz_x.npy')\n\nshow_recurrence_plot(u_seq)\n```\n\n![fig:rp1](https://github.com/llbxg/hundun/blob/main/docs/img/sample_rp.png?raw=true)\n\nThe drawing rule uses the simplest one(`simple_threshold`). \n\n```python\ndef simple_threshold(ds, theta=0.5):\n    if (d_max:=_np.max(ds))!=0:\n        pv = (ds/d_max>theta)*255\n        return pv\n    return ds\n```\n\nThis can be changed. The `rule` just takes a matrix and returns the matrix.\n\n\n```python\nfrom hundun.exploration import show_recurrence_plot\nimport numpy as np\n\n\ndef new_threshold(ds, func):\n    if (d_max:=np.max(ds))!=0:\n        pv = func(ds/d_max)*255\n        return np.uint8(pv)\n    return ds\n\n\nu_seq = np.load('lorenz_x.npy')\n\nshow_recurrence_plot(u_seq, cmap=True, rule=new_threshold, func=np.log)\n```\n\n\n![fig:rp2](https://github.com/llbxg/hundun/blob/main/docs/img/sample_rp_2.png?raw=true)\n\n\n## Equations\nSome equations have already been defined.   \n\n```python\nfrom hundun.equations import Lorenz, Henon, Logistic\n```\n\n### Lorenz equation\n[[Lorenz_1963]](#Deterministic-Nonperiodic-Flow)   \nBy default, `s=10, r=28, b=8/3` is set.\n\n![\\begin{array}{l}\n    \\dot{x}=s (y-x) \\\\\n    \\dot{y}=rx - y - xz \\\\\n    \\dot{z}=xy - bz\n\\end{array}](https://render.githubusercontent.com/render/math?math=%5CLarge+%5Cdisplaystyle+%5Cbegin%7Barray%7D%7Bl%7D%0A++++%5Cdot%7Bx%7D%3Ds+%28y-x%29+%5C%5C%0A++++%5Cdot%7By%7D%3Drx+-+y+-+xz+%5C%5C%0A++++%5Cdot%7Bz%7D%3Dxy+-+bz%0A%5Cend%7Barray%7D)\n\n`Lorenz` is a class that inherits from` Differential`.   \nThis class has a dimensionless time t and a variable u. For Lorenz, u = (x, y, z).   \n\n#### on_attractor\n```python\n@classmethod\ndef on_attractor(cls, t0=None, u0=None, h=0.01, *, T_0=5000, **params):\n```\n\nCalculate from a random initial position [0,1) and place the trajectory on the attractor.    \nBy default, 5000 steps are calculated.   \nBy setting `t0` and `u0`, the initial position can be set arbitrarily.   \n\n```python\nattractor = Lorenz.on_attractor()\n```\n\n\nThe calculation process is as shown in the figure from the blue point to the orange point.\n\n![fig:on_attractor](https://github.com/llbxg/hundun/blob/main/docs/img/set_on_attractor.png?raw=true)\n\n\n#### solve_n_times\n```python\ndef solve_n_times(self, n):\n```\n\nCalculate n times.   \nAfter the calculation, you can get the time and orbit by using `.t_seq` and `.u_seq`.\n\n```python\nl = Lorenz.on_attractor()\nl.solve_n_times(5000)\n\nu_seq, t_seq = l.u_seq, l.t_seq\n```\n\n### Henon map\n[[H\u00e9non_1976]](#A-two-dimensional-mapping-with-a-strange-attractor)   \nBy default, `a=1.4, b=0.3` is set. \n\n![\\begin{array}{l}\n    x_{t+1}=y_t +1-ax_t^2 \\\\\n    y_{t+1}=bx_t\n\\end{array}](https://render.githubusercontent.com/render/math?math=%5CLarge+%5Cdisplaystyle+%5Cbegin%7Barray%7D%7Bl%7D%0A++++x_%7Bt%2B1%7D%3Dy_t+%2B1-ax_t%5E2+%5C%5C%0A++++y_%7Bt%2B1%7D%3Dbx_t%0A%5Cend%7Barray%7D)\n\nSince Henon map has a basin of attraction, it is very important to select the initial value. You can check if it is in orbit by using `.inf`.\n\n```python\nwhile True:\n    henon = Henon.on_attractor()\n    if not henon.inf:\n        break\n```\n\n![fig:henon](https://github.com/llbxg/hundun/blob/main/docs/img/sample_henon.png?raw=true)\n\n### Logistic map\nBy default, `a=4.0` is set.\n\n\n[[May_1976]](#Simple-mathematical-models-with-very-complicated-dynamics)   \n\n![x_{t+1}=ax_t(1-x_t)](https://render.githubusercontent.com/render/math?math=%5CLarge+%5Cdisplaystyle+x_%7Bt%2B1%7D%3Dax_t%281-x_t%29)   \n\n![fig:logistic](https://github.com/llbxg/hundun/blob/main/docs/img/sample_logistic.png?raw=true)   \n\n\n## Dynamical Systems\nYou can create maps and equations by using `Difference` and `Differential` and analyze the created instance.\n\n### Difference / Differential\n```python\nfrom hundun import Difference, Differential\n```\n\nThere is no big difference between the two. \nThe difference in `.solve` is whether to map or use runge-kutta.\n\nThe important thing is to define `parameter()` and `equation()` as methods.\n\n#### parameter()\nYou must always define dimention(`self.dim`). (It is used to set the initial value and calculate the Lyapunov exponents.)   \n(1) If set `self.xxx`, can be used in `equation()`.\n\n#### equation()\nTwo arguments, time(`t`) and variable(`u`), are required.   \n\n(2) Since `u` is `self.dim`-dimensional variable, its value can be got using the unpack syntax.   \n(3) The return value does not have to be a vector.\n\n\n#### example\nHere is an example of defining Lorenz. This time, set the parameter `self.s` in `parameter()`. \nRefer to [[Lorenz equation]](#Lorenz-equation) for how to use it.\n\n```python\nclass Lorenz(Differential):\n\n    def parameter(self, s=10):\n        self.dim = 3\n        self.s = s  #(1)\n\n    def equation(self, t, u):\n        r, b = 28, 8/3\n        s = self.s  #(1)\n\n        x, y, z = u  #(2)\n\n        x_dot = s*(y - x)\n        y_dot = r*x - y - x*z\n        z_dot = x*y - b*z\n\n        return x_dot, y_dot, z_dot\n        # (3) OK:\n        #      np.array([x_dot, y_dot, z_dot])\n        #      [x_dot, y_dot, z_dot]\n```\n\n## Lyapunov exponents\nCalculate the Lyapunov exponents (Lyapunov spectrum).\n\n```python\nfrom hundun import calc_les\n```\n\n### calc_les\n```python\ndef calc_les(system, **options):\n```\n\nSpecify a `Difference` or `Differential` object for system. \n\n#### Difference\nJacobin is always required because it is calculated on the QR base. \n(In the case of 1-dim, a different method is used instead of QR-based to speed up the calculation.)\n\nAs an example, search for parameters of Henon. It is possible to estimate the range in which the LEs is positive.\n\n```python\nfrom itertools import product\n\nfrom hundun.equations.henon import Henon\nfrom matplotlib.colors import Normalize\nimport numpy as np\n\nfrom hundun import calc_les\nfrom hundun.utils import Drawing\n\n\nN_a, N_b = 50, 50\na_list = np.linspace(0, 2.1, N_a)\nb_list = np.linspace(0, 1.1, N_b)\n\nles_list = []\nfor a, b in product(a_list, b_list):\n    for _ in range(10):\n        try:\n            _, les = calc_les(Henon, b=b, a=a)\n            les_list.append(les)\n            break\n        except ValueError:\n            pass\n    else:\n        les_list.append((None, None))\nles = np.array(les_list).reshape(N_b, N_a, 2)\n\nd=Drawing(1, 2)\nfor i in range(2):\n    le = les[:,:,i]\n    sf = d[0,i].contourf(*np.meshgrid(a_list, b_list), le, cmap='jet',\n                         norm=Normalize(vmin=-2, vmax=1))\n    cb = d.fig.colorbar(sf, ax=d[0,i], orientation='horizontal')\n    d[0,i].set_axis_label('a', 'b')\n    d[0,i].set_title(f'$\\lambda_{i+1}$')\nd.show()\n```\n![fig:henon_les](https://github.com/llbxg/hundun/blob/main/docs/img/sample_henon_les.png?raw=true)\n\nAs an example, calculate the LE for parameter A of Logistic map.\n\n```python\nimport math\n\nfrom hundun import calc_les\nfrom hundun.equations import Logistic\nfrom hundun.utils import Drawing\n\n\nL, dh = 400+1, 0.01\n\nd = Drawing()\n\nle_list = []\nfor i in range(L):\n    a = i*dh\n    _, le = calc_les(Logistic, N=500, a=a)\n    le_list.append(le)\nd[0,0].plot([dh*i for i in range(L)], le_list)\n\nfor y in [0, math.log(2)]:\n    d[0,0].axhline(y, color=\"black\", linewidth=0.5)\n\nd[0,0].set_axis_label('a', '\\lambda')\nd[0,0].set_ylim(-5, 1)\nd.show()\n```\n\n![fig:lm_le](https://github.com/llbxg/hundun/blob/main/docs/img/sample_logistic_le_bif.png?raw=true)\n\n\n#### Differential\n\nAs an example, compare with and without Jacobian Matrix(`jacobian`). \n\n```python\nfrom hundun import calc_les\nfrom hundun.equations import Lorenz\nfrom hundun.utils import Drawing\n\n\nclass Lorenz_No_Jacobian(Lorenz):\n    def jacobian(self):\n        return None\n\n\nu0 = Lorenz.on_attractor().u\n\nd = Drawing(1, 2)\nfor j, system in enumerate([Lorenz, Lorenz_No_Jacobian]):\n    les_seq, les = calc_les(system, u0=u0)\n    for i, le in enumerate(les):\n        p, = d[0, j].plot(les_seq[:, i],\n                          label=fr'$\\lambda_{i+1}=$ {le:>+8.3f}')\n\n    d[0,j].legend(loc='center right')\n    d[0,j].set_axis_label('step', '\\lambda')\n    d[0,j].set_ylim(-16, 3)\nd.show()\n```\n![fig:henon](https://github.com/llbxg/hundun/blob/main/docs/img/sample_les_jaco_or_no.png?raw=true)\n\n### Lyapunov dimension\n\n```python\ndef calc_lyapunov_dimension(les):\n```\n\nCalculate the Lyapunov dimension from LEs.\n\n```python\nfrom hundun import calc_les, calc_lyapunov_dimension\nfrom hundun.equations import Lorenz\n\n\n_, les = calc_les(Lorenz)\nD_L = calc_lyapunov_dimension(les)\nprint(D_L)\n```\n```bash\n2.0673058796702217\n```\n\n## Synchronization\n\n### Synchronization class\nUse the `Synchronization` class to analyze chaos synchronization.\n\nSet the data transmitted by the oscillator with `.signal`. This class needs to define the sender and the receiver. In many papers, they are referred to as Drive and Response, but in this library they are referred to as `leading` and `supporting`. \n\nIn addition to taking `t` and `u` as arguments, methods can receive data. Any name is available.\n\n```python\nfrom hundun import Synchronization\nfrom hundun.equations import Lorenz\n\n\nclass Pecora(Lorenz, Synchronization):\n\n    def signal(self):\n        self.signal_sent = self.u[0]\n        return self.u[0]\n\n    def leading(self, t, u):\n        s, r, b = self.s, self.r, self.b\n\n        x, y, z = u\n\n        x_dot = s*(y - x)\n        y_dot = r*self.signal_sent  - y - self.signal_sent *z\n        z_dot = self.signal_sent *y - b*z\n\n        return x_dot, y_dot, z_dot\n\n    def supporting(self, t, u, signal_received):\n        x_rec = signal_received\n        s, r, b = self.s, self.r, self.b\n\n        x, y, z = u\n\n        x_dot = s*(y - x)\n        y_dot = r*x_rec  - y - x_rec *z\n        z_dot = x_rec *y - b*z\n\n        return x_dot, y_dot, z_dot\n```\n\n### one-way coupling\n```python\ndef coupling_oneway(o1, o2, N):\n```\n\nCalculate N times while connected. As a result, check how the difference in the internal state has changed.\n\n```python\nfrom hundun import coupling_oneway\nfrom hundun.utils import Drawing\nimport numpy as np\n\n\no1 = Pecora.on_attractor()\no2 = Pecora.on_attractor()\n\no1, o2 = coupling_oneway(o1, o2, 1000)\n\nd = Drawing()\nfor i in range(3):\n    e = o1.u_seq[:, i]-o2.u_seq[:, i]\n    d[0,0].plot(np.log(np.abs(e)), label=f'$e_{i+1}$')\nd[0,0].set_axis_label('step', 'error')\nd[0,0].legend()\nd.show()\n```\n\n![fig:henon_les](https://github.com/llbxg/hundun/blob/main/docs/img/sample_sync_error.png?raw=true)\n\n\n## To Do\n\n* Synchronization\n* Time series\n* Baisn of attraction\n* sample\n\n## Dependencies\n\n[{ Numpy }](https://numpy.org)\n[{ Scipy }](https://scipy.org)\n[{ Matplotlib }](https://matplotlib.org)\n\n\n## Reference\n\n#### Deterministic Nonperiodic Flow\n(1963) Edward N. Lorenz   \nDOI: 10.1175/1520-0469(1963)020<0130:DNF>2.0.CO;2\n\n#### A two-dimensional mapping with a strange attractor\n(1976) M. H\u00e9non   \nDOI: 10.1007/BF01608556\n\n#### Simple mathematical models with very complicated dynamics\n(1976) Robert M. May   \nDOI: 10.1038/261459a0\n\n#### Measuring the strangeness of strange attractors\n(1983) Peter Grassberger and Itamar Procaccia   \nDOI: 10.1016/0167-2789(83)90298-1\n\n####  Characterization of Strange Attractors\n(1983) Peter Grassberger and Itamar Procaccia   \nDOI: 10.1103/PhysRevLett.50.346\n\n#### Determining embedding dimension for phase-space reconstruction using a geometrical construction\n(1992) Matthew B. Kennel, Reggie Brown, and Henry D. I. Abarbanel   \nDOI: 10.1103/PhysRevA.45.3403   \n\n#### Practical method for determining the minimum embedding dimension of a scalar time series\n(1997) Liangyue Cao   \nDOI: 10.1016/S0167-2789(97)00118-8   \n\n#### Recognizing determinism in a time series\n(1993) Wayland, Richard and Bromley, David and Pickett, Douglas and Passamante, Anthony   \nDOI: 10.1103/PhysRevLett.70.580\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/llbxg/hundun",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "hundun",
            "package_url": "https://pypi.org/project/hundun/",
            "platform": "",
            "project_url": "https://pypi.org/project/hundun/",
            "project_urls": {
                "Homepage": "http://github.com/llbxg/hundun"
            },
            "release_url": "https://pypi.org/project/hundun/0.1.4/",
            "requires_dist": [
                "scipy",
                "matplotlib",
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "hundun is a python library for the exploration of chaos.",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13877112,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "381318bdd1862d1c65cfac64e40fa293",
                    "sha256": "a46ffb04c8d5b32fa6af91ef00cd81a3fcc890fb888d7c6b81b356ff401d62d6"
                },
                "downloads": -1,
                "filename": "hundun-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "381318bdd1862d1c65cfac64e40fa293",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 25769,
                "upload_time": "2022-01-19T06:14:20",
                "upload_time_iso_8601": "2022-01-19T06:14:20.881904Z",
                "url": "https://files.pythonhosted.org/packages/93/18/95481721d5cb84e5e31f529b5c3a625f5b6ed627048572bfb91329ccb5df/hundun-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c3d6938b84d2dc5b2c0299bfcc385993",
                    "sha256": "0d2621dd8857dc5eba39a616fb1968fbdf38b7cedd55045da9302b9f868f1c03"
                },
                "downloads": -1,
                "filename": "hundun-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "c3d6938b84d2dc5b2c0299bfcc385993",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 26841,
                "upload_time": "2022-01-19T06:14:22",
                "upload_time_iso_8601": "2022-01-19T06:14:22.799975Z",
                "url": "https://files.pythonhosted.org/packages/15/35/d3106248ad258985439816dd0284c6f4dc3b973bc382a0d6b1904dbe3d80/hundun-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}