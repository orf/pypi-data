{
    "2.0.2": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.0.2/",
            "requires_dist": [
                "redis (==3.5.3)",
                "aioredis (==1.3.1)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "uWSGI (==2.0.19.1)",
                "marshmallow (==3.12.1)",
                "pymongo (==3.12.0)",
                "requests (==2.25.1)",
                "loguru (==0.6.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "Babel (==2.9.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "dnspython (==2.1.0)",
                "dramatiq[watch] (==1.11.0)",
                "typer (==0.4.0)",
                "pdoc3 (==0.10.0)",
                "python-dotenv (==0.19.0)",
                "honcho (==1.0.1)",
                "trend-app-protect (==4.6.2)",
                "sendgrid (==6.9.1)",
                "cachetools (==5.0.0)",
                "opentelemetry-distro (==0.26b1)",
                "opentelemetry-instrumentation (==0.26b1)",
                "opentelemetry-exporter-otlp (==1.7.1)"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7a86e380e597f184cc0d985d5886ec34",
                    "sha256": "309fce3ba83e332858059622474b6ad042a038eb04713ae1adce15f8a5015a5c"
                },
                "downloads": -1,
                "filename": "licenseware-2.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7a86e380e597f184cc0d985d5886ec34",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 206361,
                "upload_time": "2022-03-16T20:21:33",
                "upload_time_iso_8601": "2022-03-16T20:21:33.692744Z",
                "url": "https://files.pythonhosted.org/packages/a3/f6/b629bacaf1784103daeec55b061156cda2c5f795b16ae54e42ad86e576df/licenseware-2.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e8f09e6dd479d7532b1d6058c50693aa",
                    "sha256": "b65e1cf68fdef893a87622843c1f40f259a93a1d259932984fb2108de76b2bcb"
                },
                "downloads": -1,
                "filename": "licenseware-2.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "e8f09e6dd479d7532b1d6058c50693aa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 151212,
                "upload_time": "2022-03-16T20:21:36",
                "upload_time_iso_8601": "2022-03-16T20:21:36.925111Z",
                "url": "https://files.pythonhosted.org/packages/9b/86/539edfe445fa42ec5af6b98ed0273c740bf1744f4d7e6600ef5e016e41f7/licenseware-2.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.3": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.0.3/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "Flask-Cors (==3.0.10)",
                "Flask (==2.0.3)",
                "PyJWT (==2.4.0)",
                "aioredis (==1.3.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq[watch] (==1.11.0)",
                "flask-restx (==0.5.1)",
                "honcho (==1.0.1)",
                "loguru (==0.6.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "marshmallow (==3.12.1)",
                "mongita (==1.1.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "trend-app-protect (==4.6.2)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "confluent-kafka (==1.9.0)",
                "opentelemetry-distro (==0.26b1)",
                "opentelemetry-instrumentation (==0.26b1)",
                "opentelemetry-exporter-otlp (==1.7.1)"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c27d1539fb3e4b7079918b696e8476b",
                    "sha256": "82f6c2ab96039ffbd4e5f7f7c2d896e34f38babde71bb574ae94ed83f464b7c9"
                },
                "downloads": -1,
                "filename": "licenseware-2.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8c27d1539fb3e4b7079918b696e8476b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 256309,
                "upload_time": "2022-09-30T16:25:26",
                "upload_time_iso_8601": "2022-09-30T16:25:26.055425Z",
                "url": "https://files.pythonhosted.org/packages/77/a8/a46811f418a8e50b6fc1cd7592e55af910aa42db7df9a611dff0ea17072f/licenseware-2.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "230bf26de771c2f83513b6fe870018f9",
                    "sha256": "0b290526f14c5f0ae1043f43c0d20702c19a4d9090436202e5f965f8b00ef86f"
                },
                "downloads": -1,
                "filename": "licenseware-2.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "230bf26de771c2f83513b6fe870018f9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 162167,
                "upload_time": "2022-09-30T16:25:28",
                "upload_time_iso_8601": "2022-09-30T16:25:28.459911Z",
                "url": "https://files.pythonhosted.org/packages/ad/b2/b0f4732ca9e9679288fd343987d2b3b4510a8f9031d70530b32ec3ea07fe/licenseware-2.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.1": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.1/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq[watch] (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e82f8e0e59f02e136c2f3eb5ba7f7144",
                    "sha256": "dcd2df8ec1727d2065ce622c2d6523b21bd61f621d153e198ab2d2510e7cb79e"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e82f8e0e59f02e136c2f3eb5ba7f7144",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 256372,
                "upload_time": "2022-10-03T08:48:43",
                "upload_time_iso_8601": "2022-10-03T08:48:43.216371Z",
                "url": "https://files.pythonhosted.org/packages/e0/13/80702c5a4dc393498f2cef22b374664bf1ed81924b00edb288edb59ef370/licenseware-2.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2f304246701bc16ebcaf44573e48ccf7",
                    "sha256": "69ebe289fd0ab79b628e2025e4cd410db12ea3da294ec7f0575e382224d2be0f"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2f304246701bc16ebcaf44573e48ccf7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 161957,
                "upload_time": "2022-10-03T08:48:45",
                "upload_time_iso_8601": "2022-10-03T08:48:45.077800Z",
                "url": "https://files.pythonhosted.org/packages/f4/ff/a721eb35409c0e9488c970f340934ac9819d39b1491c0f8e8b610d68b6e5/licenseware-2.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.10": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.10/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "87f63f7af47f3b607e321a09424b783e",
                    "sha256": "fc1e2afa072b04ac973f8977d8c7d9d2c2cd8a96396faf36faa2b32950edb989"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.10-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "87f63f7af47f3b607e321a09424b783e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 273878,
                "upload_time": "2022-11-10T19:53:30",
                "upload_time_iso_8601": "2022-11-10T19:53:30.675408Z",
                "url": "https://files.pythonhosted.org/packages/e9/6e/b15f86d579aa18b2955ddb9849e9fa2d9092705294809144cb5f0052e59c/licenseware-2.3.10-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "13f655ab71ab85ef65ef35364f80b7c7",
                    "sha256": "7dc3c52c367077212df1fa4f4dca767557801161ae3fb8d1561c89f6675cbee7"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.10.tar.gz",
                "has_sig": false,
                "md5_digest": "13f655ab71ab85ef65ef35364f80b7c7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170730,
                "upload_time": "2022-11-10T19:53:33",
                "upload_time_iso_8601": "2022-11-10T19:53:33.027495Z",
                "url": "https://files.pythonhosted.org/packages/61/13/b1ecc339a258f613b49f31b0b278cb60b73839c3a34f40e1571d54ff7d6d/licenseware-2.3.10.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.1rc0": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.1rc0/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "Flask-Cors (==3.0.10)",
                "Flask (==2.0.3)",
                "PyJWT (==2.4.0)",
                "aioredis (==1.3.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq[watch] (==1.11.0)",
                "flask-restx (==0.5.1)",
                "honcho (==1.0.1)",
                "loguru (==0.6.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "marshmallow (==3.12.1)",
                "mongita (==1.1.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "trend-app-protect (==4.6.2)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "confluent-kafka (==1.9.0)",
                "opentelemetry-distro (==0.26b1)",
                "opentelemetry-instrumentation (==0.26b1)",
                "opentelemetry-exporter-otlp (==1.7.1)"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.1rc0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dbb4d8d605e982ae63375c53d45b5a44",
                    "sha256": "079261d0e54cfe0d902f1b4f5ca8ed676f9ba600e0c49fc735799e00a0debb0d"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.1rc0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dbb4d8d605e982ae63375c53d45b5a44",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 256346,
                "upload_time": "2022-09-30T16:34:21",
                "upload_time_iso_8601": "2022-09-30T16:34:21.687377Z",
                "url": "https://files.pythonhosted.org/packages/df/bc/0d3c6e45ce0d3c4fc66ea01d45923a715db7d0fad75c7921550f381d759b/licenseware-2.3.1rc0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f15e0e410ca07a2d42469217c2c2819a",
                    "sha256": "e4fb7d2692b59477170f1007ebd5b91c110bae773450e042f7deef8d635b050a"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.1rc0.tar.gz",
                "has_sig": false,
                "md5_digest": "f15e0e410ca07a2d42469217c2c2819a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 162250,
                "upload_time": "2022-09-30T16:34:24",
                "upload_time_iso_8601": "2022-09-30T16:34:24.013655Z",
                "url": "https://files.pythonhosted.org/packages/e2/ee/c6b7dfc4fdba219bff6b4228f85fa6b069a542762c97f5c02fefb29b7b8e/licenseware-2.3.1rc0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.2": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.2/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dee202ef3b201881cb1c5d490b7aae48",
                    "sha256": "034b425e33dd31991838fcc407273df37c4daa400994e6b2847e8577266273f8"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dee202ef3b201881cb1c5d490b7aae48",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 256385,
                "upload_time": "2022-10-04T04:14:42",
                "upload_time_iso_8601": "2022-10-04T04:14:42.618038Z",
                "url": "https://files.pythonhosted.org/packages/84/69/0d67bb46bdb5ec107cc143581965e256af990c9c1005546d3eb439519ae8/licenseware-2.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bceca03ef0f2132459d8993ccf159df1",
                    "sha256": "c2884b5c79bcc19982e31d81d77ebca99a9cc21a17cd3e4eb9adc548cf1335e5"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "bceca03ef0f2132459d8993ccf159df1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 162020,
                "upload_time": "2022-10-04T04:14:44",
                "upload_time_iso_8601": "2022-10-04T04:14:44.664629Z",
                "url": "https://files.pythonhosted.org/packages/ae/12/29eea5d0378140a292d2b4a72c93dff5db8a29b17431568640da523367a3/licenseware-2.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.3": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.3/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9da377a77e689d70150fb1f9816b18e3",
                    "sha256": "099f99bddc2ed5a2c53d62b061ed61b511eaca336f7ed54a6566681558884a61"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9da377a77e689d70150fb1f9816b18e3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 268996,
                "upload_time": "2022-10-07T07:53:51",
                "upload_time_iso_8601": "2022-10-07T07:53:51.777015Z",
                "url": "https://files.pythonhosted.org/packages/bb/72/597a03d57f7a5beeecf95f49ec8ab963f8be79e41c441b269e1ade4b074f/licenseware-2.3.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "94bc53a5ba7889d4a47e212ba712fa80",
                    "sha256": "36b1e0fd849f03c572b2be92d4739b57713dcafd5540509a17ad8d82d9603991"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.3.tar.gz",
                "has_sig": false,
                "md5_digest": "94bc53a5ba7889d4a47e212ba712fa80",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168367,
                "upload_time": "2022-10-07T07:53:54",
                "upload_time_iso_8601": "2022-10-07T07:53:54.047341Z",
                "url": "https://files.pythonhosted.org/packages/cf/75/91d8b754900fc8f0d6adb5a3bf640d5b8c73a6b898df7018392da25bb7bb/licenseware-2.3.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.4": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.4/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ea8463c947a0ac946ac95239995aebdd",
                    "sha256": "cc594ef3cbb830391d5ce92412d36a027e28e11b2a9e5ef8fc35e213a70dad70"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ea8463c947a0ac946ac95239995aebdd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 269160,
                "upload_time": "2022-10-07T11:22:12",
                "upload_time_iso_8601": "2022-10-07T11:22:12.628828Z",
                "url": "https://files.pythonhosted.org/packages/57/91/3fc9f1b42cab7e56f55e0d499a1b94137432b63b789592c2807602a6bba6/licenseware-2.3.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c95fdaaf3032328f61a2e12d7f3d97f",
                    "sha256": "4836691d527477c63abf8c22a7246549ac74e677c4996a3fb05a64e79994d720"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.4.tar.gz",
                "has_sig": false,
                "md5_digest": "9c95fdaaf3032328f61a2e12d7f3d97f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168482,
                "upload_time": "2022-10-07T11:22:14",
                "upload_time_iso_8601": "2022-10-07T11:22:14.720620Z",
                "url": "https://files.pythonhosted.org/packages/8b/72/5ea5bcbd61f2e78e84c23a0ff15aa73fc5f05b999d559fc10beb2bf7f28b/licenseware-2.3.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.5": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.5/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cbc2da0de0c54da74427cc458fea145a",
                    "sha256": "1ef7a8bcf7131e7d3f5f56e775844d4ed28f3278057f8d4fb8d120401e9de20d"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cbc2da0de0c54da74427cc458fea145a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 269170,
                "upload_time": "2022-10-14T07:40:12",
                "upload_time_iso_8601": "2022-10-14T07:40:12.431092Z",
                "url": "https://files.pythonhosted.org/packages/9d/ab/c23f4bd579c476dd78efd17fe3f17bde0994689330f394ee85dff1955eaf/licenseware-2.3.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "efa25353039f7c2383509b26ee966a0a",
                    "sha256": "f72b16a8684c151b73bae6290df4b3a3d537a873fb802e54585e933cb42d4ff5"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.5.tar.gz",
                "has_sig": false,
                "md5_digest": "efa25353039f7c2383509b26ee966a0a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168487,
                "upload_time": "2022-10-14T07:40:14",
                "upload_time_iso_8601": "2022-10-14T07:40:14.933840Z",
                "url": "https://files.pythonhosted.org/packages/63/82/9bacf2e1772a34508eaba82d5bb148e2e383b350d2e3a320578c0a71f5cc/licenseware-2.3.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.6": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.6/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d22b8e0f7d955aacfd446e15caf6a26d",
                    "sha256": "76cf05107dd13ad3cfc398d0b432b6cbd282dd6d8e78d0d8f067cab102d9c24e"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d22b8e0f7d955aacfd446e15caf6a26d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 269172,
                "upload_time": "2022-10-19T04:31:03",
                "upload_time_iso_8601": "2022-10-19T04:31:03.603383Z",
                "url": "https://files.pythonhosted.org/packages/71/e5/bb4ce58aecda63082733fb49e11fa5283731913c2777b83bdd6f82744a66/licenseware-2.3.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "374a84d5d8c448fc347012290c1d47ec",
                    "sha256": "85fa40cb1d56d9efa1317fb179e00bd202500a172a3c00a858c532fbc741f0b8"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.6.tar.gz",
                "has_sig": false,
                "md5_digest": "374a84d5d8c448fc347012290c1d47ec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168464,
                "upload_time": "2022-10-19T04:31:05",
                "upload_time_iso_8601": "2022-10-19T04:31:05.642599Z",
                "url": "https://files.pythonhosted.org/packages/c2/ee/f24acb669eebcb4d70fff1f79d41435b789475f141761dc9e505347b4c04/licenseware-2.3.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.7": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.7/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "11a9b274d34d87df486f264279d9dd1e",
                    "sha256": "0d3a8e8e2dd8adb45f103715e27f9cb2597f378f5f203b1316d0ecdceae2744e"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "11a9b274d34d87df486f264279d9dd1e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 269178,
                "upload_time": "2022-10-21T07:05:26",
                "upload_time_iso_8601": "2022-10-21T07:05:26.700875Z",
                "url": "https://files.pythonhosted.org/packages/d8/97/a25b4247c0dd561710d7b587d8d3e94fa20a1ebf39dcf0fa6fa619ae4617/licenseware-2.3.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0ff5bd64c101d26fbf4f7d54ce12be40",
                    "sha256": "f399e6b893a213c66dd721b745d388698dee20c94d4b2f52eb1937a8ca904918"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.7.tar.gz",
                "has_sig": false,
                "md5_digest": "0ff5bd64c101d26fbf4f7d54ce12be40",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168519,
                "upload_time": "2022-10-21T07:05:29",
                "upload_time_iso_8601": "2022-10-21T07:05:29.037982Z",
                "url": "https://files.pythonhosted.org/packages/bf/c1/a3ef23afc246848e06c6538d9e7c78fa86c9739f8ae4a15720f5488539fe/licenseware-2.3.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.8": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.8/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d803b02203f6ad4b29c1169d68ac046a",
                    "sha256": "9c9cf1120391386520108d5b1d5c11cb36ef2f2aad63f949c01ded43498d8c35"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d803b02203f6ad4b29c1169d68ac046a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 270234,
                "upload_time": "2022-11-01T06:13:51",
                "upload_time_iso_8601": "2022-11-01T06:13:51.211612Z",
                "url": "https://files.pythonhosted.org/packages/57/56/e6992dbcfa4df5a0f846ce8d0cf79e300e9294a52afc59783b6bfd7aa529/licenseware-2.3.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "aea721f0826dfc49ddea7cf37bef30b4",
                    "sha256": "077b87568a2829673274613a40c31d0a1e126b8ab981c6307786001aea1b6b37"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.8.tar.gz",
                "has_sig": false,
                "md5_digest": "aea721f0826dfc49ddea7cf37bef30b4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170024,
                "upload_time": "2022-11-01T06:13:53",
                "upload_time_iso_8601": "2022-11-01T06:13:53.427251Z",
                "url": "https://files.pythonhosted.org/packages/1e/f6/f1a6ea887fc17f6af6943d198ff9ea0c403ae1d1f49005fbd1d4c2315c2c/licenseware-2.3.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.9": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.3.9/",
            "requires_dist": [
                "aioredis (==1.3.1)",
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.1.0)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.12.1)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.25.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.3.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e0b21436bc723e86efe726c7f0af80d8",
                    "sha256": "3046969afd65650c39b7516a1e6290dce943eb020e49db00a34b062775d253e9"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e0b21436bc723e86efe726c7f0af80d8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 273806,
                "upload_time": "2022-11-04T08:32:12",
                "upload_time_iso_8601": "2022-11-04T08:32:12.404438Z",
                "url": "https://files.pythonhosted.org/packages/1e/2c/88cf81f6f95be5886c50e6191b82e1acb697e78e9ec81c1a7e874d155130/licenseware-2.3.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c37e08ce981038cb4d34a2592c8ff788",
                    "sha256": "21687a273c59022f4444bae5436fec71718743cc64b4769ce12ddb83ab361916"
                },
                "downloads": -1,
                "filename": "licenseware-2.3.9.tar.gz",
                "has_sig": false,
                "md5_digest": "c37e08ce981038cb4d34a2592c8ff788",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170608,
                "upload_time": "2022-11-04T08:32:15",
                "upload_time_iso_8601": "2022-11-04T08:32:15.062456Z",
                "url": "https://files.pythonhosted.org/packages/e2/15/63f7b0d5a559d1355c6b803df3535e7bdc0e151495afd3123056cf0d9e5e/licenseware-2.3.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.0": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.0/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e05cb1ae8f77b447c65702f5fb39f4e",
                    "sha256": "b0454d5647a087b166f0399b30197471c35e0cfe98de94f09257305197c2960f"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9e05cb1ae8f77b447c65702f5fb39f4e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 273796,
                "upload_time": "2022-11-04T17:23:46",
                "upload_time_iso_8601": "2022-11-04T17:23:46.718603Z",
                "url": "https://files.pythonhosted.org/packages/e0/5a/acce88c3091971385d367afa99e6481563ce07ef4c00c0efd8f247f46b02/licenseware-2.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "75803f29371f0bd704683e1de2796859",
                    "sha256": "e0bb23a833f9151c29e105cae25e9f06989e46bd1d16cd1d8eee7f4bc0b70ed6"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "75803f29371f0bd704683e1de2796859",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170591,
                "upload_time": "2022-11-04T17:23:49",
                "upload_time_iso_8601": "2022-11-04T17:23:49.381842Z",
                "url": "https://files.pythonhosted.org/packages/ab/75/794d0b9258497d3e68e36d0d943958a83848a2507e033c0aa2b7efbae72b/licenseware-2.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.1": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.1/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "mongita (==1.1.1) ; extra == 'mongita'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "edf49ae95cfdf499b3e40e82825677a6",
                    "sha256": "4589c8f07c80231d2adba0a3350c98e204cd918185978b6ee379ce344f159746"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "edf49ae95cfdf499b3e40e82825677a6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 274318,
                "upload_time": "2022-11-14T08:55:55",
                "upload_time_iso_8601": "2022-11-14T08:55:55.253495Z",
                "url": "https://files.pythonhosted.org/packages/6e/86/f6fb7050e0435e32538318e744d97f840618c360cd01a5a27019a197ce2d/licenseware-2.4.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "485322c91e2692ac803986b93bab1d25",
                    "sha256": "5b1079de694af5cabe4f1c19b81f9177f173adbeabaaa2344f03e100d93fdceb"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "485322c91e2692ac803986b93bab1d25",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 171442,
                "upload_time": "2022-11-14T08:55:58",
                "upload_time_iso_8601": "2022-11-14T08:55:58.004151Z",
                "url": "https://files.pythonhosted.org/packages/02/91/fbee8993354983a9b20345e6685ee8386ae6a1d4981a767d93da3ca289aa/licenseware-2.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.2": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.2/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cf58073c249b62433e92b0d0f8488064",
                    "sha256": "7fd1bf08f4de1e9c23df920c11f340434aae0da8fc7ec592776b1f70a4dd0e50"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cf58073c249b62433e92b0d0f8488064",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 270672,
                "upload_time": "2022-11-15T11:41:07",
                "upload_time_iso_8601": "2022-11-15T11:41:07.672329Z",
                "url": "https://files.pythonhosted.org/packages/17/c4/60467b6766be0c3f2f9d896b71710059c31aa0400ffc796aa808665bb2ec/licenseware-2.4.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fbc98fecf1408ee9c39d9dad8109a294",
                    "sha256": "d5fb8faa356e7951fb6b0fd3720d9084811aae786f5a8dfb9c0cddf7402a6d87"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.2.tar.gz",
                "has_sig": false,
                "md5_digest": "fbc98fecf1408ee9c39d9dad8109a294",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 169912,
                "upload_time": "2022-11-15T11:41:10",
                "upload_time_iso_8601": "2022-11-15T11:41:10.397625Z",
                "url": "https://files.pythonhosted.org/packages/82/c2/1b0617514b5f63e4a2bf106c18b5d7846e939af6e482979826e36da04ffd/licenseware-2.4.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.3": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.3/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "prometheus-flask-exporter (~=0.20.3) ; extra == 'prometheus'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "596b064c44264466a2fafcc650259715",
                    "sha256": "ccba3a6f5180c2ab6ec542eb2e3c529cc98aabe9f6ddb056ecb024ec87fd84d3"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "596b064c44264466a2fafcc650259715",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 270865,
                "upload_time": "2022-11-21T08:53:25",
                "upload_time_iso_8601": "2022-11-21T08:53:25.933111Z",
                "url": "https://files.pythonhosted.org/packages/0b/a5/5cab9dcb14257a18032687b482e81a7e461d148d37dc772ae0223dd7b26b/licenseware-2.4.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ccca77224717da56e8eb3f55012cf0e8",
                    "sha256": "bd27b6a20bb6997e78cf0ef2691dd456411028154c4342b60031b84e9a0f3034"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ccca77224717da56e8eb3f55012cf0e8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170136,
                "upload_time": "2022-11-21T08:53:29",
                "upload_time_iso_8601": "2022-11-21T08:53:29.252030Z",
                "url": "https://files.pythonhosted.org/packages/57/03/08451e686533e2055caaff7fe9b5779c99886a3363e48b9e7a3a5ecff356/licenseware-2.4.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.4": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.4/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'all'",
                "trend-app-protect (==4.6.2) ; extra == 'all'",
                "confluent-kafka (==1.9.0) ; extra == 'all'",
                "honcho (==1.0.1) ; extra == 'all'",
                "opentelemetry-distro (==0.26b1) ; extra == 'all'",
                "dramatiq[watch] ; extra == 'all'",
                "prometheus-flask-exporter (~=0.20.3) ; extra == 'all'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'all'",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "prometheus-flask-exporter (~=0.20.3) ; extra == 'prometheus'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fd9c05548df84c4d80f4ffc3a5caf33b",
                    "sha256": "67b042100dcc670770c74cacf20c7f817b6e201b83cc95d48137d39c04ca7ec4"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fd9c05548df84c4d80f4ffc3a5caf33b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 270921,
                "upload_time": "2022-11-24T07:19:49",
                "upload_time_iso_8601": "2022-11-24T07:19:49.975776Z",
                "url": "https://files.pythonhosted.org/packages/4f/f4/eebad6b7d533c46c091ef7cefbb5e6876e8c8f1b9f44762d4654bdc32961/licenseware-2.4.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cc31f546b98472493bfa7f34d0ea2db7",
                    "sha256": "a215648ed07a6b9f4e8516ba950e3b1690a41a8f1c19b3834010b7aabcdb8444"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.4.tar.gz",
                "has_sig": false,
                "md5_digest": "cc31f546b98472493bfa7f34d0ea2db7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170211,
                "upload_time": "2022-11-24T07:19:52",
                "upload_time_iso_8601": "2022-11-24T07:19:52.625510Z",
                "url": "https://files.pythonhosted.org/packages/44/c5/e819168e86332dd25a0bf27df23897af1701ebe1e8b3627f61875685c82a/licenseware-2.4.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.5": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: Flask",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
                "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
                "Topic :: Internet :: WWW/HTTP :: WSGI",
                "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/2.4.5/",
            "requires_dist": [
                "Babel (==2.9.1)",
                "cachetools (==5.0.0)",
                "dnspython (==2.2.1)",
                "dramatiq (==1.11.0)",
                "Flask (==2.0.3)",
                "Flask-Cors (==3.0.10)",
                "flask-restx (==0.5.1)",
                "loguru (==0.6.0)",
                "marshmallow (==3.18.0)",
                "marshmallow-jsonschema (==0.11.1)",
                "openpyxl (==3.0.7)",
                "pandas (==1.2.4)",
                "pdoc3 (==0.10.0)",
                "pycryptodome (==3.14.1)",
                "PyJWT (==2.4.0)",
                "pymongo (==3.12.0)",
                "python-dotenv (==0.19.0)",
                "redis (==3.5.3)",
                "requests (==2.28.1)",
                "sendgrid (==6.9.1)",
                "typer (==0.4.1)",
                "uWSGI (==2.0.19.1)",
                "werkzeug (==2.0.3)",
                "prometheus-flask-exporter (~=0.20.3) ; extra == 'all'",
                "opentelemetry-distro (==0.26b1) ; extra == 'all'",
                "trend-app-protect (==4.6.2) ; extra == 'all'",
                "dramatiq[watch] ; extra == 'all'",
                "confluent-kafka (==1.9.0) ; extra == 'all'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'all'",
                "honcho (==1.0.1) ; extra == 'all'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'all'",
                "honcho (==1.0.1) ; extra == 'honcho'",
                "confluent-kafka (==1.9.0) ; extra == 'kafka'",
                "opentelemetry-distro (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-instrumentation (==0.26b1) ; extra == 'opentelemetry'",
                "opentelemetry-exporter-otlp (==1.7.1) ; extra == 'opentelemetry'",
                "prometheus-flask-exporter (~=0.20.3) ; extra == 'prometheus'",
                "trend-app-protect (==4.6.2) ; extra == 'trend-app'",
                "dramatiq[watch] ; extra == 'watchdog'"
            ],
            "requires_python": "==3.8.*",
            "summary": "Common utilities for licenseware.",
            "version": "2.4.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ce265efe744aaf5d781c0a510ab0bd2",
                    "sha256": "580bc8b509d718634616d5703ae5a61a2d8e136f7364309eb4b3725da2ba3de5"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5ce265efe744aaf5d781c0a510ab0bd2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.*",
                "size": 271220,
                "upload_time": "2022-12-05T06:25:10",
                "upload_time_iso_8601": "2022-12-05T06:25:10.399795Z",
                "url": "https://files.pythonhosted.org/packages/d8/0e/9e275dbe6de6cea928ce191e4b341845db185a398bba010fc14a156ca1e3/licenseware-2.4.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "96dde988985e822eb79a9ba15fa8a1b7",
                    "sha256": "0e81407f8525985a0ad913556f2d972c5829347894a92b7eed9acd8cc9baaf67"
                },
                "downloads": -1,
                "filename": "licenseware-2.4.5.tar.gz",
                "has_sig": false,
                "md5_digest": "96dde988985e822eb79a9ba15fa8a1b7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.*",
                "size": 170543,
                "upload_time": "2022-12-05T06:25:12",
                "upload_time_iso_8601": "2022-12-05T06:25:12.278750Z",
                "url": "https://files.pythonhosted.org/packages/68/8c/6694855d124a83d8c7c26970ea08c65a0415d0699cbd1078b3d63201b7f0/licenseware-2.4.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "3.0.0rc1": {
        "info": {
            "author": "Licenseware",
            "author_email": "contact@licenseware.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Licenseware SDK v3\n<img src=\"./coverage.svg\">\n\n\n\n# Contents\n\n1. [Developing](#Developing)\n2. [Uploaders](#Uploaders)\n3. [Reports](#Reports)\n4. [Report Components](#Report-Components)\n5. [Datatable](#Datatable)\n6. [Mongo Repository](#Mongo-Repository)\n7. [History](#History)\n8. [Kafka Streams](#pubsub) \n9. [Redis Get/Set](#redis) \n\n\n<a name=\"Developing\"></a>\n# Developing\n\n- clone the repository;\n- install virtualenv: `pip3 install virtualenv`;\n- create virtualenv: `virtualenv ./`;\n- activate virtualenv: `source ./bin/activate`;\n- [install these before requirements.txt](https://stackoverflow.com/questions/63859803/cant-install-xmlsec-using-pip-command);\n- install dependencies: `pip3 install -r requirements.txt`;\n- install dependencies: `pip3 install -r requirements-tests.txt`;\n- running tests: `make run-tests`;\n- install licenseware: `make install`;\n- uninstall licenseware: `make uninstall`;\n- build licenseware wheel: `make build`;\n- install from git latest: `pip3 install git+https://git@github.com/licenseware/licenseware-sdk-v3.git`; \n- install from git a specific release: `pip3 install git+https://git@github.com/licenseware/licenseware-sdk-v3.git@v3.0.0`;\n- pin a specific sdk release in requirements.txt: `git+https://git@github.com/licenseware/licenseware-sdk-v3.git@v3.0.0`;\n\n\n<a name=\"Uploaders\"></a>\n# Uploaders\n\nAn `uploader` is reponsible for handling files uploaded for processing. \nEach uploader will have it's own (mostly) unique attributes and actions. \nThese attributes and actions which define an uploader are needed to handle the file from the upload up to file processing handler.\n\n\nDefine uploader encryption parameters\n```py\n\nfrom licenseware import UploaderEncryptionParameters\n\nrv_tools_encryption_parameters = UploaderEncryptionParameters(\n    filepaths=[\"DeviceX\", \"encrypt_this(.*)_untilhere\"],\n    filecontent=[\"MachineName=(.*?)\"],\n    columns=[\"Device\", \"Host\"]\n)\n```\n\nData provided on `UploaderEncryptionParameters` will be used in data anonymization app for encrypting sensitive data locally before sending the date for processing.\n\n- `filepaths` - this will encrypt all files and folders which match the given parameters;\n- `filecontent` - this will encrypt all text like content that matched (`.txt`, `.xml`) in the same way `filepaths` does;\n- `columns` - this will encrypt all columns from the `.xlsx`, `.xls` or `.csv` given;\n\nThis is how the encryption will take place for `filepaths` and `filecontent`:\n- Given \"DeviceX\" will encrypt in filepath anywhere it finds \"DeviceX\" like: `/path/to/DeviceX` to `/path/to/slkjl9e`;  \n- Given \"Device-(.+?)\" will encrypt in filepath anywhere it finds regex match like: `/path/to/Device-SecretName` to `/path/to/Device-dasdia3i`;  \n\nThis is how the encryption will take place for `columns`:\n- Given the list of columns will encrypt all values;\n- Parameters can be given just as we did for `filepaths` and `filecontent` it can be either exact match `SpecificDeviceX` or regex match `SpecificDevice(.+?)`. The regex match will encrypt what it found between paranthesis. \n\nIf no encryption is needed don't provide any parameters this would be enough:\n```py\nrv_tools_encryption_parameters = UploaderEncryptionParameters()\n``` \nIf you need to encrypt only the columns:\n```py\nrv_tools_encryption_parameters = UploaderEncryptionParameters(\n    columns=[\"Device\", \"Host\"]\n)\n``` \nIn a similar way this can be done for `filepaths` and `filecontent`.\n\n\nDefine uploader validation parameters\n```py\n\nfrom licenseware import UploaderValidationParameters\n\nrv_tools_validation_parameters = UploaderValidationParameters(\n    required_input_type=\"excel\",\n    filename_contains=[\"rv\", \"tools\"],\n    filename_endswith=FileTypes.GENERIC_EXCEL # or just [\".xls\", \".xlsx\"],\n    required_sheets=[\"sheet1\", \"sheet2\"],\n    required_columns=[\"col1\", \"col2\"],\n    min_rows_number=1,\n    header_starts_at=0,\n    text_contains_all=None,\n    text_contains_any=None,\n    ignore_filenames=None,\n    buffer=15000,\n    filename_valid_message=\"File is valid\",\n    filename_ignored_message=\"File is ignored\",\n    regex_escape=True,\n    ignored_by_uup=False\n)\n\n```\nThese are all needed validation parameters, these may seem like a lot, but you'll only use one or two parameters per uploader.\n\n- `required_input_type` - this describes the type of file uploaded. Put the file extension like `.xlsx`, `.xlsx` (or `excel`), `.csv`, `.xml` etc;\n- `filename_contains` - at least one of the items in the list must be on the filename; \n- `filename_endswith` - at least one of the items in the list must end with `filename.endswith((\".xlsx\", etc,))`; \n- `required_sheets` - you can put here the required sheets/tabs the excel file needs to have. You can also provide alternative sheets to find like:\n`required_sheets=[[\"sheet1\", \"sheet2\"], [\"tab1\", \"tab2\"]]` - this way if at least one of the nested list of sheets has a match validation will succeed;\n- `required_columns` - this will look for all columns in all the excel sheets. You can also provide alternative columns just like we did for `required_sheets`;\n- `min_rows_number` - the minimum number of rows the excel or csv must have;\n- `header_starts_at` - some times header doesn't start from the top, here you can put the index where the header starts;\n- `text_contains_all` - this is used for text like files (anything you can open with notepad and understand the text), will check if all items are in the text;\n- `text_contains_any` - similar to `text_contains_all`, but will check if at least one item is found in text;\n- `ignore_filenames` - here you can put a list of filenames that should not be validated. These files will have status `skipped` in the validation response;\n- `buffer` - this sets the ammount of characters that will be loaded in memory for validation (default: 15000). Doing this we avoid loading the whole file in memory which can cause memory overflow; \n- `filename_valid_message` - you can change the message of a file which passed validation (default: \"File is valid\");\n- `filename_ignored_message` - you can change the message of a file which is in `ignore_filenames` field (default: \"File is ignored\");\n- `regex_escape` - the search is done mostly with regex which means that sometimes the text we search can contain regex queries and this may cause an incorect search. To avoid this `regex_escape` is default `True`, but you can change this to `False` if you have a special case;\n- `ignored_by_uup` - universal uploader app by default takes all the uploader metadata (uploader details, validation parameters, encryption parameters etc) and checks each file if it fits one specific uploader's metadata. Set `ignored_by_uup` to `False` if you want the uploader created to be ignored by universal uploader app.\n\nEach field is `optional` so we can reduce the above uploader's validation parameters to this:\n\n```py\nrv_tools_validation_parameters = UploaderValidationParameters(\n    filename_contains=[\"rv\", \"tools\"],\n    filename_endswith=FileTypes.GENERIC_EXCEL,\n    required_sheets=[\"sheet1\", \"sheet2\"],\n    required_columns=[\"col1\", \"col2\"]\n)\n```\n\nCreating the worker function which will handle the `event`\n\n```py\n\nfrom app.dependencies.workers import worker\nfrom licenseware import States, log\nfrom settings import config\n\nfrom .rv_tools_data_worker import ProcessRVToolsEvent\n\n\n@worker.task(name=\"rv_tools_worker\", queue=config.APP_ID)\ndef rv_tools_worker(event: dict):\n\n    from app.uploaders import registered_uploaders\n\n    log.info(\"Starting working\")\n    log.debug(event)\n\n    registered_uploaders.publish_processing_status(event, States.RUNNING)\n    try:\n        ProcessRVToolsEvent(event).run_processing_pipeline()\n    finally:\n        registered_uploaders.publish_processing_status(event, States.IDLE)\n        log.info(\"Finished working\")\n\n```\n\nThe worker function is responsibile for providing the processing information to you processing class and notify processing status to `registry-service`. \n\nThe `event` received will be a dictionary like this:\n\n```py\nevent = {\n    \"tenant_id\": tenant_id,\n    \"authorization\": authorization,\n    \"uploader_id\": uploader.uploader_id,\n    \"filepaths\": filepaths,\n    \"clear_data\": clear_data,\n    \"event_id\": event_id or validation_response.content.event_id,\n    \"app_id\": self.config.APP_ID,\n}\n```\n- `tenant_id` - the project id on which this upload was made;\n- `authorization` - in some cases you may need to request data from other apps, this will help making those requests on behalf of a user;\n- `uploader_id` - this `uploader_id` is unique the same as `app_id`;\n- `filepaths` - a list of filepaths which will need to be processed;\n- `clear_data` - bool which if is true you must delete previous processed data;\n- `event_id` - uuid unique to this processing request;\n- `app_id` - the unique app id which holds this uploader;\n\n\nIdeally the file process event handler (`ProcessUplaoderIdEvent`) would look something like this:\n\n```py\n# rv_tools_data_worker.py\n\nfrom typing import List\nfrom licenseware import HistoryLogger, WorkerEvent, get_mongodb_connection\nfrom settings import config\n\nclass ProcessRVToolsEvent(metaclass=HistoryLogger):\n    def __init__(self, event: dict) -> None:\n        self.event = WorkerEvent(**event)\n        self.db_connection = get_mongodb_connection(config)\n        self.config = config\n\n    def get_raw_data_from_file(self, filepath: str):\n        time.sleep(0.3)\n        print(\"Getting raw data from file\")\n\n    def extract_virtual_devices(self, raw_data: List[dict]):\n        time.sleep(0.1)\n        print(\"Extracting virtual devices\")\n\n    def save_virtual_devices(self, virtual_devices: List[dict]):\n        time.sleep(0.5)\n        print(\"Saving virtual devices\")\n\n    def run_processing_pipeline(self):\n        for fp in self.event.filepaths:\n            # Needed for history\n            self.filepath = fp\n            self.filename = os.path.basename(fp)\n            # The file processing pipeline\n            raw_data = self.get_raw_data_from_file(filepath=fp)\n            virtual_devices = self.extract_virtual_devices(raw_data)\n            self.save_virtual_devices(virtual_devices)\n\n```\n\n`HistoryLogger` - will log all methods from this class and save information related to the success/failure of the pipeline operation. This way it's easier to see which functions failed, why (traceback error is saved) on which tenant and so on.\n\n\nAttach to a new uploader what we defined up:\n\n```py\n\nfrom licenseware import FileTypes, NewUploader\nfrom settings import config\nfrom app.dependencies.db import redis_cache\nfrom .encryptor import rv_tools_encryption_parameters\nfrom .validator import rv_tools_validation_parameters\nfrom .worker import rv_tools_worker\n\nrv_tools_uploader = NewUploader(\n    name=\"RVTools\",\n    uploader_id=\"rv_tools\",\n    description=\"XLSX export from RVTools after scanning your Vmware infrastructure.\",\n    accepted_file_types=FileTypes.GENERIC_EXCEL,\n    worker=rv_tools_worker,\n    validation_parameters=rv_tools_validation_parameters,\n    encryption_parameters=rv_tools_encryption_parameters,\n    config=config,\n    redis_cache=redis_cache,\n)\n\n```\n\n- `config` - this object will contain common data for our application;\n- `NewUploader` - this object will `hold` all the information needed (metadata) for describing file(s) which will be uploaded for processing;\n- `UploaderValidationParameters` - this object will contain metadata needed to validate file(s);\n- `UploaderEncryptionParameters` - this object will contain metadata needed to encrypt sensitive data from file(s);\n- `FileTypes` - this contains all the file types we can process (.xml, .csv, .xlsx etc);\n\nThis list can grow depending on the requirements.\nIn the `NewUploader` object we gather all information about this uploader.\n\n- `name` - uploader name;\n- `description` - describe what this uploader does;\n- `uploader_id` - try to make this unique accross all apps;\n- `accepted_file_types` - the files extentions accepted  (will be displayed by frontend);\n- `config` - the instance of Config from settings.py;\n- `worker` - the function which will trigger the processing;\n- `free_quota_units` - the number of free quota units on the user free plan;\n- `used_collections` - a list of collections which will be used by the worker function to fill (this is used  on `clear_data` for tenant option);\n- `validation_parameters` - here we pass the instance of `UploaderValidationParameters` class;\n- `encryption_parameters` - here we pass the instance of `UploaderEncryptionParameters` class;\n- `flags`- here you can set a list of flags for this uploader. Flags will be imported from `constants` package (`from licenseware import Flags`);\n- `icon` - the icon of this uploader which will be displayed in frontend;\n- `filenames_validation_handler` - by default the validation is handled by `uploader.defaults.default_filenames_validation_handler` function. If you need to treat the filename validation in a different way you can always pass another function. The `filenames_validation_handler` function will receive the a list of strings as a first parameter and an instance of `UploaderValidationParameters` class and must return an instace of `uiresponses.FileValidationResponse`;\n- `filecontents_validation_handler` - by default the validation is handled by `uploader.defaults.default_filecontents_validation_handler` function. If you need to overwrite this functionality you can pass your custom `filecontents_validation_handler` function which will have the same signature as `default_filenames_validation_handler`;\n- Obs: for setting the state of the validation you need to use the States `from licenseware States`;\n- `registrable` - set it to False if this uploader doesn't need to be registered to registry-service;\n\n\n\nEach uploader created needs to be `registered`in the `uploaders/__init__.py` file:\n\n```py\n\nfrom app.dependencies.pubsub import producer\nfrom app.dependencies.db import mongodb_connection, redis_cache\nfrom app.services.defaults.registry_updater import registry_updater\nfrom licenseware import RegisteredUploaders\nfrom settings import config\n\nfrom .rv_tools.uploader import rv_tools_uploader\n\nuploaders = [rv_tools_uploader]\n\n\nregistered_uploaders = RegisteredUploaders(\n    uploaders,\n    registry_updater,\n    producer,\n    config,\n    redis_cache,\n    mongodb_connection,\n)\n\n```\n\nThe `registered_uploaders` will be imported on app startup in the `app/api/defaults/uploader_router.py` and will be used to auto generate api routes for each uploader.\n\nIf you want more control on how the upload is handled you can inherit from `RegisteredUploaders` and modify the methods you need. Make sure to update `app/api/defaults/uploader_router.py` if method names or params are changed.\n\n\n<a name=\"Reports\"></a>\n# Reports\n\nAfter the `Uploader` validates the files, the files are sent to processing and processed what remains is to provide useful insights by aggregating saved data resulted after processing in small digestable chunks of data.\nA report can contain one or more report components. \nEach report component has a corespondent front-end component which `knows` how to render it's data.\nThe same principles apply as with `Uploaders`.\n\n\n- Declare a new report\n\nBelow we contruct report filters. This step can be done after you have defined all report components.\n\n```py\n\nfrom licenseware import ReportFilter\n\nreport_filters = (\n        ReportFilter()\n        .add(\n            column=\"result\",\n            allowed_filters=[\n                ReportFilter.FILTER.EQUALS,\n                ReportFilter.FILTER.CONTAINS,\n                ReportFilter.FILTER.IN_LIST,\n            ],\n            allowed_values=[\"Verify\", \"Used\", \"Licensable\", \"Restricted\"],\n        )\n        .add(\n            column=\"total_number_of_cores\",\n            allowed_filters=[\n                ReportFilter.FILTER.EQUALS,\n                ReportFilter.FILTER.GREATER_THAN,\n                ReportFilter.FILTER.GREATER_OR_EQUAL_TO,\n                ReportFilter.FILTER.LESS_THAN,\n                ReportFilter.FILTER.LESS_OR_EQUAL_TO,\n            ],\n            column_type=ReportFilter.TYPE.STRING,\n            allowed_values=[\"Verify\", \"Used\", \"Licensable\", \"Restricted\"],\n        )\n        .add(\n            column=\"total_number_of_cores_intel\",\n            allowed_values=[\"Verify\", \"Used\", \"Licensable\", \"Restricted\"],\n        )\n    )\n\n```\n\nVariable `report_filters` will be an instance of `ReportFilter` which will make available the list of filters on `metadata` object.\nFor each column type if `allowed_filters` parameter is not filled the default filters for that column type will be added.\nIf `column_type` is not specified either, then `ReportFilter` will try to detect the type based on the other parameters.\nYou can take a look on the `ReportFilter` implementation to see how the defaults are applied. \nIn most cases you can get away by just providing the column name and allowed_values if needed.\n\n\n\n- Declaring the report\n\nUsing the `NewReport` class we fill the below parameters (filters can be filled later after you have defined all report components). \n\n```py\n\nfrom app.dependencies.db import mongodb_connection, redis_cache\nfrom app.report_components import report_components\nfrom licenseware import NewReport\nfrom settings import config\n\nfrom .filters import report_filters\n\ndevices_overview_report = NewReport(\n    name=\"Device Details\",\n    description=\"This report collects all the device information captured during processing.\",\n    report_id=\"device_details_report\",\n    filters=report_filters,\n    components=report_components,\n    config=config,\n    db_connection=mongodb_connection,\n    redis_cache=redis_cache,\n    connected_apps=[\n        \"ifmp-service\",\n        \"odb-service\",\n    ],\n)\n\n\ndevices_overview_report.attach(component_id=\"all_devices\")\n\n```\n\n- `connected_apps` - here provide app_id's on which this report depends. Data will be taken from both connected_apps to create the reports.\n\n\nOn this instance of the new report we will `attach` all the needed report components. \nIf `attach` is not used all provided `report_components` will be attached.\n\nYou can create custom filters on which report components you need to attach:\n\n```py\n\nfor rc in report_components:\n    if rc.component_id in [\"some_component_id1\", \"some_component_id2\"]:\n        devices_overview_report.attach(rc.component_id)\n\n```\n\nEach report created needs to be `registered`in the `reports/__init__.py` file:\n\n```py\nfrom settings import config\nfrom licenseware import RegisteredReports\n\nfrom .device_details.report import devices_overview_report\n\nreports = [devices_overview_report]\n\n\nregistered_reports = RegisteredReports(reports, config)\n\n```\n\nThe `registered_reports` will be imported on app startup in the `app/api/defaults/*_report_router.py` and will be used to auto generate api routes for each report.\n\nIf you want more control on how the reports are handled you can inherit from `RegisteredReports` and modify the methods you need. Make sure to update `app/api/defaults/*_report_router.py` if method names or params are changed.\n\n\n<a name=\"Report-Components\"></a>\n# Report Components \n\nA report can contain one or more report components. Here we declare a `summary` report component type.\n\n- Declaring report component attributes\n\n```py\n\nsummary = (\n    SummaryAttrs()\n    .attr(\n        value_key=\"missing_parent_details\", \n        value_description=\"Missing parent details\",\n        icon=Icons.FEATURES\n    )\n    .attr(value_key=\"unknown_types\")\n)\n\n```\nThis way we inform front-end that it needs to use the Summary UI component and it needs to fill the component data as described in `SummaryAttrs`.\n\n\n- Declaring report component style attributes\n\n```py\nstyles = (\n    StyleAttrs()\n    .width_one_third\n    .set(\"height\", \"full\")\n)\n```\nHere we specify additional information to front-end about report component looks.\n\n\nNext, we need to create a function which based on the parameters received will return component data from database. \n\n```py\n\ndef get_fmw_summary_component_data(*args, **kwargs):\n    return \"data from database\"\n\n```\n    \n- Declaring the report component\n\n\n```py\nfmw_summary_component = NewReportComponent(\n    title=\"Summary\", \n    component_id=\"fmw_summary\", \n    attributes=summary,\n    style_attributes=styles,\n    get_component_data_handler=get_fmw_summary_component_data,\n    config=config\n)\n```\n\nNow that we have declared report component attributes, style attributes and the `get_component_data_handler` function we are ready to attach it to the report created up.\n\n\n- Attaching a report component to a report\n```py \n\nfmw_deployment_report.attach(fmw_summary_component)\n\n```\n\n\nEach report component created needs to be `registered`in the `report_components/__init__.py` file:\n\n```py\nfrom settings import config\nfrom app.dependencies.db import redis_cache\nfrom licenseware import RegisteredComponents\n\nfrom .all_devices.component import all_devices_component\n\nreport_components = [all_devices_component]\n\n\nregistered_components = RegisteredComponents(report_components, redis_cache, config)\n\n```\n\n\nThe `registered_components` will be imported on app startup in the `app/api/defaults/*_report_component_router.py` and will be used to auto generate api routes for each report component.\n\nIf you want more control on how the report components are handled you can inherit from `RegisteredComponents` and modify the methods you need. Make sure to update `app/api/defaults/*_report_component_router.py` if method names or params are changed.\n\n\n<a name=\"Datatable\"></a>\n# Datatable\n\nWe have `uploaders` which handle files uploaded and sent to procesing, `reports` which take the data processed and show it to the user in a insightful way we also can provide a way for the user to manipulate/update the data processed using `datatable`. With Datatable we can provide `excel like` features on the web.\n\n\nOvewrite the `CrudHandler` methods if needed (in most cases you hopefully don't need to do that):\n\n```py\nfrom .crud_handler import CrudDeviceTable\n\nfrom app.common.infrastructure_service import InfraService\nfrom licenseware import (\n    Config,\n    CrudHandler,\n    MongoRepository,\n    insert_mongo_limit_skip_filters,\n)\nfrom settings import config\n\n\ndef get_data_without_foreign_key(\n    tenant_id: str,\n    repo: MongoRepository,\n    limit: int,\n    skip: int,\n    config: Config,\n):\n\n    pipeline = [\n        {\"$match\": {\"tenant_id\": tenant_id}},\n        {\n            \"$lookup\": {\n                \"from\": config.MONGO_COLLECTION.DATA,\n                \"localField\": \"is_dr_with\",\n                \"foreignField\": \"_id\",\n                \"as\": \"dr_members\",\n            }\n        },\n        {\n            \"$project\": {\n                \"_id\": 1,\n                \"is_child_to\": {\n                    \"$ifNull\": [{\"$arrayElemAt\": [\"$parents.name\", 0]}, None]\n                },\n                \"is_parent_to\": \"$children.name\",\n                \"is_dr_with\": \"$dr_members.name\",\n                \"is_part_of_cluster_with\": \"$cluster_members.name\",\n                \"capped\": 1,\n            }\n        },\n    ]\n\n    pipeline = insert_mongo_limit_skip_filters(skip, limit, pipeline)\n    return repo.execute_query(pipeline)\n\n\nclass CrudDeviceTable(CrudHandler):\n    def get(\n        self,\n        tenant_id: str,\n        authorization: str,\n        id: str,\n        foreign_key: str,\n        distinct_key: str,\n        limit: int,\n        skip: int,\n        repo: MongoRepository,\n    ):\n\n        if id is not None:\n            return repo.find_one(filters={\"_id\": id, \"tenant_id\": tenant_id})\n\n        if foreign_key is None:\n            return get_data_without_foreign_key(tenant_id, repo, limit, skip, config)\n\n        if distinct_key is not None:\n            return repo.distinct(distinct_key, filters={\"tenant_id\": tenant_id})\n\n        return repo.find_many(filters={\"tenant_id\": tenant_id}, limit=limit, skip=skip)\n\n    def put(\n        self,\n        tenant_id: str,\n        authorization: str,\n        id: str,\n        new_data: dict,\n        repo: MongoRepository,\n    ):\n\n        id = new_data.pop(\"_id\", None)\n        infra_service = InfraService(\n            data={**new_data, **{\"tenant_id\": tenant_id}},\n            event={\n                \"tenant_id\": tenant_id,\n                \"uploader_id\": \"editable_controller\",\n                \"event_id\": id,\n                \"filepath\": \"N/A\",\n                \"app_id\": config.APP_ID,\n            },\n            collection=repo.collection,\n        )\n        return infra_service.replace()\n\n    def delete(\n        self,\n        tenant_id: str,\n        authorization: str,\n        id: str,\n        repo: MongoRepository,\n    ):\n        return repo.delete_one(filters={\"_id\": id, \"tenant_id\": tenant_id})\n\n\n```\n\nDefine data table:\n\n```py\nfrom settings import config\nfrom licenseware import DataTable, ColumnTypes, CrudHandler\nfrom licenseware import ColumnTypes, DataTable\nfrom settings import config\n\ndevices_table = (\n    DataTable(\n        title=\"All Devices\",\n        component_id=\"device_table\",\n        crud_handler=CrudDeviceTable, # not needed if you didn't overwrite CrudHandler class\n        config=config,\n    )\n    .column(\"_id\", editable=False, visible=False)\n    .column(\"tenant_id\", editable=False, visible=False)\n    .column(\"name\", required=True)\n    .column(\"is_parent_to\", distinct_key=\"name\", foreign_key=\"name\")\n    .column(\"capped\", type=ColumnTypes.BOOL)\n    .column(\"device_type\", values=[\"Virtual\", \"Pool\",])\n    .column(\"total_number_of_processors\") # this will be type number because it has number in the field name\n    .column(\"oracle_core_factor\", type=ColumnTypes.NUMBER)\n    .column(\"model\") # default will be type string\n    .column(\"updated_at\", editable=False, type=ColumnTypes.DATE)\n    .column(\"raw_data\", editable=False, type=ColumnTypes.JSON)\n)\n\n```\n\nClass `CrudDeviceTable` is responsible for interacting with the database and providing the data required.\n\nUp we declare the table component metadata for `component_id=\"device_table\"`. \nThis is very similar to report attributes (ex: `BarHorizontalAttrs`).\nMethod `column` appends columns to table component. \nMethod `column` has the following parameters, most of them with sensible defaults:\n- `prop`: str - this is required, place the name of the field here;\n- `name`: str = None - if not filed, value will be computed from prop;\n- `values`: list = None - provide a list of values, a dropdown will appear in frontend;\n- `type`: ColumnTypes = None - if values is filled type will be automatically set to enum, if distinct_key and foreign_key are filled type will be set automatically to entity, otherwise a default type string will be set. Make sure to specify type for the other types not covered automatically if needed; \n- `editable`: bool = True - by default all fields are editable (the user can change the field data). If prop is one of \"tenant_id\", \"_id\", \"updated_at\" editable will be set automatically to False.\n- `visible`: bool = True - by default all fields are visible to the user. Same defaults apply as for editable.\n- `hashable`: bool = False - by default all fields are hashable. Same defaults apply as for editable.\n- `required`: bool = False - by default all fields not required. If prop is one of \"tenant_id\", \"_id\", \"updated_at\" editable will be set automatically to True.\n- `distinct_key`:str = None - here place the name of the field from which you want a list of unique items;\n- `foreign_key`:str = None  - here place the name of the foreign key field;\n\n\nEach datatable component created needs to be `registered`in the `datatables/__init__.py` file:\n\n```py\nfrom licenseware import RegisteredDataTables\nfrom settings import config\n\nfrom .devices_table import devices_table\nfrom .devices_table_simple import devices_table_simple\n\ndatatables = [devices_table, devices_table_simple]\n\nregistered_datatables = RegisteredDataTables(datatables, config)\n\n```\n\nThe `registered_datatables` will be imported on app startup in the `app/api/defaults/datatables_router.py` and will be used to auto generate api routes for each report datatable.\n\n\n<a name=\"Mongo-Repository\"></a>\n# Mongo Repository\n\nThe data to be useful needs to be saved somewhere that's where the `MongoRepository` class comes in handy.\nIt includes handling of mongo `ObjectId` field which is not json parsable + some custom handling.\n\nFirst import the repo implementation:\n```py\n\nfrom marshmallow import Schema, fields\nfrom settings import config\nfrom licenseware import MongoRepository\nfrom app.dependencies.db.mongo import get_mongo_db_connection\n\n\nclass EntitiesSchema(Schema):\n    entities = fields.List(fields.Raw, required=True)\n\n\ndef entities_validator(data):\n    data = EntitiesSchema(many=True if isinstance(data, list) else False).load(data)\n    return data\n\n\nclass SomeProcessingClass:\n\n    def __init__(self):\n        # Attention! \n        # Don't keep it at the module level as a global variable!\n        mongo_connection = get_mongo_db_connection(config)\n        self.repo = MongoRepository(\n            mongo_connection, \n            collection = config.MONGO_COLLECTION.DATA,\n            data_validator = entities_validator\n        )\n        # Now the `repo` is ready to use!\n\n    def some_func(self):\n        \n        inserted_data = repo.insert_one(\n            data={\"field_name\": \"some_data\"}\n        )\n\n```\n\nThe `data_validator` (entities_validator) needs to be a function which will `raise` an error if data is not as requested.\nYou can use any schema package you want marshmallow, pydantic even your own custom assertion on data it just needs to raise an error if data is not as intended.\n\nThe `data_validator` validator needs to return the data provided. \n\nWe specified the `collection` and `data_validator` function on instantiation, but we can provide other collection names or validators on the repo method parameters (not recommended).\n\nInsert some special data:\n```py\n\ndef custom_validator(data):\n    assert \"field_name\" in data.keys()\n    assert data[\"field_name\"] in [\"some_special_data\"]  \n    return data\n\n# somewhere in a class method\n\ninserted_data = self.repo.insert_one(\n    data={\"field_name\": \"some_special_data\"}\n    collection=\"SpecialCollection\",\n    data_validator=custom_validator\n)\n\n```\n\nIdeally you should create one repo per collection because this way you don't need to specify collection and data_validator each time you call a repo method.\n\nThe `data_validator` can be set to `None` while figuring out what to do with the data, but you will see a warning that the data inserted/updated/replaced has no validation. So, make sure you provide a `data_validator` function once you are ready. If you really don't need a data validator you could set `data_validator=\"ignore\"` this will bypass the data validation step (use it with care).\n\nNote that you could always create a new repo collection based on an existing created repo.\n\n```py\n\nrepo_data = MongoRepository(\n    mongo_connection, \n    collection = config.MONGO_COLLECTION.DATA,\n    data_validator = entities_validator\n)\n\n# later in the process you need another collection\n\nrepo_newcollection = MongoRepository(\n    repo_data.db_connection, \n    collection = \"CustomCollection\",\n    data_validator = \"ignore\"\n)\n\n```\n\nIf you need to create indexes or other extra configurations please create them on app startup (main.py file).\n\nCheckout `licenseware/repository/mongo_repository` for more information.\n\n\n<a name=\"History\"></a>\n# History\n\nIn order to have a history of the processing steps from begining to the end `licenseware.history.log` decorator can be used to decorate processing functions.\n\nRecomended way of using history:\n\n```py\n\nfrom typing import List\nfrom licenseware import WorkerEvent, HistoryLogger, get_mongodb_connection\nfrom settings import config\n\n\nclass ProcessUploaderIdEvent(metaclass=HistoryLogger):\n    def __init__(self, event: dict) -> None:\n        self.event = WorkerEvent(**event)\n        self.db_connection = get_mongodb_connection(config)\n        self.config = config  \n\n    # Here add processing funcs\n\n    def run_processing_pipeline(self):\n        for fp in self.event.filepaths:\n            # Needed for HistoryLogger\n            self.filepath = fp\n            self.filename = os.path.basename(fp)\n\n            # Here call the processing funcs in order\n```\n\n`ProcessUploaderIdEvent` will go in the uploader worker function as described on `Uploaders` section.\n\n\nAnother usage example:\n\n```py\n\nfrom settings import config\nfrom app.dependencies.db.mongo import get_mongo_db_connection\nfrom licenseware import MongoRepository\n\nclass InfraService:\n    def __init__(self):\n        self.event_id = str(uuid.uuid4())\n        self.filepath = \"./somefile\"\n        self.uploader_id = \"rv_rools\"\n        self.app_id = \"ifmp-service\"\n        self.tenant_id = str(uuid.uuid4())\n        mongo_connection = get_mongo_db_connection(config)\n        self.repo = MongoRepository(\n            mongo_connection, collection=config.MONGO_COLLECTION.DATA\n        )\n        self.config = config\n\n    @history.log\n    def update_relationships(self):\n        \"\"\"some docs\"\"\"\n        print(\"working\")\n        print(\"done\")\n\nresponse = InfraService().update_relationships()\n\n```\n\nFor history to work we need some basic information (event from worker information + the config from settings) to track the processing steps:\n- `event_id` \n- `filepath` \n- `uploader_id` \n- `app_id` \n- `tenant_id` \n- `repo`\n- `config`\n\nWhere the `history.log` decorator cannot be used you can create an instance of `History` class and call the following functions where needed:\n\n- `log_filename_validation` - if you are overwriting the default file names validation function;\n- `log_filecontent_validation` - - if you are overwriting the default file content validation function;\n- `log_success` - place it where function completed succesfully;\n- `log_failure` - place it where function failed to complete, an error occured;\n- `log_start_processing` and `log_end_processing` - are used in `publish_processing_status` to track the total processing time of the worker;\n\nCustom usage without using `history.log` decorator:\n\n```py\n\nimport traceback\nfrom settings import config\nfrom app.dependencies.db.mongo import get_mongo_db_connection\nfrom licenseware import History\n\n\nclass ProcessingClass:\n    def __init__(self, tenant_id, authorization, event_id, uploader_id, app_id):\n        mongo_connection = get_mongo_db_connection(config)\n\n        history_repo = MongoRepository(\n            mongo_connection, collection=config.MONGO_COLLECTION.HISTORY\n        )\n        self.history = History(\n            # etc fill needed params to History class\n        )\n\n\n    def some_processing_func(self, filepath: str):\n\n        try:\n            # processing stuff\n            self.history.log_success(\n                step=\"some_processing_func\",\n                filepath=\"./somecsv.csv\",\n                on_success_save=None,\n                func_source=\"app/some_package/some_module/some_processing_func\",\n            )\n        except Exception as err:\n            self.history.log_failure(\n                step=\"some_processing_func\",\n                filepath=filepath,\n                error_string=str(err),\n                traceback_string=str(traceback.format_exc()),\n                on_failure_save=\"Faled gathering data\",\n                func_source=\"app/some_package/some_module/some_processing_func\",\n            )\n\n```\n\nAs you can see this method is very verbose an ugly this is what `history.log` decorator does under the hood.\nI takes the required parameters and saves success and failures in encountered in a processing pipeline. \n\n\n<a name=\"pubsub\"></a>\n# Kafka Streams (Pub-Sub)\n\nBasic usage:\n\nOn the kafka broker side define topics(channels)\n\n```py\n\nfrom licensware import Topic, TopicType\nfrom confluent_kafka.admin import AdminClient\n\nadmin_client = AdminClient({'bootstrap.servers': 'mybroker'})\n\ntopic = Topic(admin_client)\n\ntopic.new(TopicType.USER_EVENTS)\ntopic.new(TopicType.APP_EVENTS)\n\ntopic.delete(TopicType.APP_EVENTS)\n\n\n```\n\nOn the app side define stream producer (publisher)\n\n```py\nfrom licenseware import Config, Producer\nfrom confluent_kafka import Producer as KafkaProducer\nfrom settings import config \n\ndef get_producer(config: Config):\n    producer_client_factory = lambda cfg: KafkaProducer(\n        {\n            \"bootstrap.servers\": cfg.KAFKA_BROKER_URL,\n            \"security.protocol\": cfg.KAFKA_SECURITY_PROTOCOL,\n        }\n    )\n    kafka_producer = Producer(producer_client_factory, config)\n    return kafka_producer\n\nproducer = get_producer(config)\n\ndata_stream = {\n    \"event_type\": EventType.ACCOUNT_CREATED,\n    \"tenant_id\": None,\n    \"etc\": \"data\",\n}\n\nproducer.publish(TopicType.USER_EVENTS, data_stream)\n\n```\nThe factory function is up to you to create it with the configurations you need.\nIf you want just the default one you can do `from licenseware import get_kafka_producer`.\nWe are using a factory function for getting the confluent kafka producer to reconnect in case the connection fails.\n\n\nYou can also define a consumer (subscriber)\n\n```py\nfrom licenseware import Config, Consumer\nfrom confluent_kafka import Consumer as KafkaConsumer\nfrom settings import config\n\n\ndef get_consumer(config: Config):\n    consumer_client_factory = lambda cfg: KafkaConsumer(\n        {\n            \"bootstrap.servers\": cfg.KAFKA_BROKER_URL,\n            \"group.id\": cfg.APP_ID,\n            \"security.protocol\": cfg.KAFKA_SECURITY_PROTOCOL,\n        }\n    )\n    kafka_consumer = Consumer(consumer_client_factory, config)\n    return kafka_consumer\n\n\nconsumer = get_consumer(config)\n\nconsumer.subscribe(TopicType.USER_EVENTS)\n\n\ndef account_created_handler(event):\n    return \"some processed data\"\n\n\nconsumer.dispatch(EventType.ACCOUNT_CREATED, account_created_handler)\n\n\nif __name__ == \"__main__\":\n    consumer.listen()\n\n```\nThe factory function is up to you to create it with the configurations you need.\nIf you want just the default one you can do `from licenseware import get_kafka_consumer`.\nWe are using a factory function for getting the confluent kafka consumer to reconnect in case the connection fails.\n\n\n\n\n<a name=\"redis\"></a>\n# Redis Get/Set\n\nFor various reasons we may need to set and get small temporary chunks of data from redis.\n\n\n```py\nfrom settings import config\nfrom licenseware import RedisCache\n\n\nrc = RedisCache(config)\n\n# expiry in seconds - put None for no expire date\nrc.set(key=\"apps:ifmp-service\", value={\"app\": {\"app_id\": \"ifmp-service\"}}, expiry=10)\nrc.set(key=\"apps:odb-service\", value={\"app\": {\"app_id\": \"odb-service\"}}, expiry=10)\n\n# get will return a list of matched keys results\nrc.get(\"apps:*\")\nrc.get(\"apps:odb-service\")\n\n# get key will return the value stored on that specific key\nrc.get_key(\"apps:odb-service\")\n\n```\n\nThis the redis_cache instance is already available in app/dependencies you can import it in app with `from app.dependencies.db import redis_cache`.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://licenseware.io/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "licenseware",
            "package_url": "https://pypi.org/project/licenseware/",
            "platform": null,
            "project_url": "https://pypi.org/project/licenseware/",
            "project_urls": {
                "Homepage": "https://licenseware.io/"
            },
            "release_url": "https://pypi.org/project/licenseware/3.0.0rc1/",
            "requires_dist": [
                "fastapi (~=0.78)",
                "loguru (~=0.6)",
                "marshmallow (==3.17.0)",
                "pydantic (==1.10.2)",
                "uvicorn (~=0.18)",
                "PyJWT (~=2.6) ; extra == 'all'",
                "prometheus-fastapi-instrumentator (~=5.9) ; extra == 'all'",
                "flower (==1.2.0) ; extra == 'all'",
                "coverage (<7) ; extra == 'all'",
                "pymongo (==4.2.0) ; extra == 'all'",
                "werkzeug ; extra == 'all'",
                "requests (~=2.28) ; extra == 'all'",
                "python-multipart (==0.0.5) ; extra == 'all'",
                "confluent-kafka (~=1.9) ; extra == 'all'",
                "black (==22.8.0) ; extra == 'all'",
                "pydantic[dotenv] ; extra == 'all'",
                "opentelemetry-sdk (~=1.13) ; extra == 'all'",
                "coverage-badge (<1) ; extra == 'all'",
                "pytest-mock (<3) ; extra == 'all'",
                "opentelemetry-instrumentation (~=0.34b0) ; extra == 'all'",
                "opentelemetry-api (~=1.13) ; extra == 'all'",
                "opentelemetry-exporter-jaeger (~=1.13) ; extra == 'all'",
                "honcho (==1.1.0) ; extra == 'all'",
                "redis (~=4.3) ; extra == 'all'",
                "pytest (<7) ; extra == 'all'",
                "pandas (~=1.2) ; extra == 'all'",
                "redis (~=4.3) ; extra == 'caching'",
                "flower (==1.2.0) ; extra == 'dashboard'",
                "pandas (~=1.2) ; extra == 'data'",
                "pydantic[dotenv] ; extra == 'dotenv'",
                "requests (~=2.28) ; extra == 'http'",
                "PyJWT (~=2.6) ; extra == 'jwt'",
                "confluent-kafka (~=1.9) ; extra == 'kafka'",
                "prometheus-fastapi-instrumentator (~=5.9) ; extra == 'metrics'",
                "pymongo (==4.2.0) ; extra == 'mongo'",
                "coverage-badge (<1) ; extra == 'testing'",
                "coverage (<7) ; extra == 'testing'",
                "pytest-mock (<3) ; extra == 'testing'",
                "pytest (<7) ; extra == 'testing'",
                "black (==22.8.0) ; extra == 'testing'",
                "honcho (==1.1.0) ; extra == 'testing'",
                "werkzeug ; extra == 'testing'",
                "opentelemetry-api (~=1.13) ; extra == 'tracing'",
                "opentelemetry-sdk (~=1.13) ; extra == 'tracing'",
                "opentelemetry-exporter-jaeger (~=1.13) ; extra == 'tracing'",
                "opentelemetry-instrumentation (~=0.34b0) ; extra == 'tracing'",
                "python-multipart (==0.0.5) ; extra == 'upload'"
            ],
            "requires_python": "",
            "summary": "Licenseware SDK which contains common functionality used in all apps",
            "version": "3.0.0rc1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15991821,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b5011089c4f05a73a4c2eab484971fb7",
                    "sha256": "366dc7bdc24c90868f2715c2d50c4f8c1cd70637966d68004549a1e498785392"
                },
                "downloads": -1,
                "filename": "licenseware-3.0.0rc1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b5011089c4f05a73a4c2eab484971fb7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 99580,
                "upload_time": "2022-10-25T07:02:10",
                "upload_time_iso_8601": "2022-10-25T07:02:10.312159Z",
                "url": "https://files.pythonhosted.org/packages/ef/76/b022d82cbadf6385ab856012d723eb900a909f0c1b43adf39549916f687d/licenseware-3.0.0rc1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b48d73e3afc6da2d012c2aa0d810ea44",
                    "sha256": "7648a0e627e36d2d57aa4c038104d9268b3350465ea13be0c22bb9ba86d90f7b"
                },
                "downloads": -1,
                "filename": "licenseware-3.0.0rc1.tar.gz",
                "has_sig": false,
                "md5_digest": "b48d73e3afc6da2d012c2aa0d810ea44",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 82839,
                "upload_time": "2022-10-25T07:02:12",
                "upload_time_iso_8601": "2022-10-25T07:02:12.259297Z",
                "url": "https://files.pythonhosted.org/packages/48/7f/4f0215c62b93fa5f350185f44504a8cc50d810bd6b5579073c671e9cdf55/licenseware-3.0.0rc1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}