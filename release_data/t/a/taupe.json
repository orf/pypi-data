{
    "0.0.1": {
        "info": {
            "author": "Mike Hucka",
            "author_email": "mhucka@caltech.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: POSIX",
                "Operating System :: POSIX :: Linux",
                "Operating System :: Unix",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "# Taupe<img width=\"70em\" align=\"right\" src=\"https://raw.githubusercontent.com/mhucka/taupe/main/.graphics/taupe-icon.png\">\n\nA simple program to extract the URLs of your tweets, retweets, replies, quote tweets, and \"likes\" from a personal Twitter archive.\n\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg?style=flat-square)](https://choosealicense.com/licenses/bsd-3-clause)\n[![Latest release](https://img.shields.io/github/v/release/mhucka/taupe.svg?style=flat-square&color=purple&label=Release)](https://github.com/mhucka/taupe/releases)\n\n\n## Table of contents\n\n* [Introduction](#introduction)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Known issues and limitations](#known-issues-and-limitations)\n* [Getting help](#getting-help)\n* [Contributing](#contributing)\n* [License](#license)\n* [Acknowledgments](#authors-and-acknowledgments)\n\n\n## Introduction\n\nWhen you [download your personal Twitter archive](https://help.twitter.com/en/managing-your-account/how-to-download-your-twitter-archive), you receive a [ZIP](https://en.wikipedia.org/wiki/ZIP_(file_format)) file. The contents are not necessarily in a format convenient for doing something with them. For example, you may want to send the URLs to the [Wayback Machine at the Internet Archive](https://archive.org/web/) or do something else with the URLs. For tasks like that, you need to extract URLs from your Twitter archive. That's the purpose of Taupe.\n\n_Taupe_ (a loose acronym of <ins><b>T</b></ins>witter <ins><b>a</b></ins>rchive <ins><b>U</b></ins>RL <ins><b>p</b></ins>ars<ins><b>e</b></ins>r) takes a Twitter archive ZIP file, extracts the URLs corresponding to your tweets, retweets, replies, quote tweets, and liked tweets, and outputs the results in a [comma-separated values (CSV)](https://en.wikipedia.org/wiki/Comma-separated_values) format that you can easily use with other software tools.\n\n\n## Installation\n\nThere are multiple ways of installing Taupe.  Please choose the alternative that suits you.\n\n### _Alternative 1: installing Taupe using `pipx`_\n\nYou can use [pipx](https://pypa.github.io/pipx/) to install Taupe. Pipx will install it into a separate Python environment that isolates the dependencies needed by Taupe from other Python programs on your system, and yet the resulting `taupe` command wil be executable from any shell &ndash; like any normal program on your computer. If you do not already have `pipx` on your system, it can be installed in a variety of easy ways and it is best to consult [Pipx's installation guide](https://pypa.github.io/pipx/installation/) for instructions. Once you have pipx on your system, you can install Taupe with the following command:\n```sh\npipx install taupe\n```\n\nPipx can also let you run Taupe directly using `pipx run taupe`, although in that case, you must always prefix every Taupe command with `pipx run`.  Consult the [documentation for `pipx run`](https://github.com/pypa/pipx#walkthrough-running-an-application-in-a-temporary-virtual-environment) for more information.\n\n\n### _Alternative 2: installing Taupe using `pip`_\n\nThe instructions below assume you have a Python 3 interpreter installed on your computer.  Note that the default on macOS at least through 10.14 (Mojave) is Python **2** &ndash; please first install Python version 3 and familiarize yourself with running Python programs on your system before proceeding further.\n\nYou should be able to install `taupe` with [`pip`](https://pip.pypa.io/en/stable/installing/) for Python&nbsp;3.  To install `taupe` from the [Python package repository (PyPI)](https://pypi.org), run the following command:\n```sh\npython3 -m pip install taupe\n```\n\nAs an alternative to getting it from [PyPI](https://pypi.org), you can use `pip` to install `taupe` directly from GitHub:\n```sh\npython3 -m pip install git+https://github.com/mhucka/taupe.git\n```\n\n_If you already installed Taupe once before_, and want to update to the latest version, add `--upgrade` to the end of either command line above.\n\n\n### _Alternative 3: installing Taupe from sources_\n\nIf  you prefer to install Taupe directly from the source code, you can do that too. To get a copy of the files, you can clone the GitHub repository:\n```sh\ngit clone https://github.com/mhucka/taupe\n```\n\nAlternatively, you can download the files as a ZIP archive using this link directly from your browser using this link: <https://github.com/mhucka/taupe/archive/refs/heads/main.zip>\n\nNext, after getting a copy of the files,  run `setup.py` inside the code directory:\n```sh\ncd taupe\npython3 setup.py install\n```\n\n\n## Usage\n\nIf the installation process described above is successful, you should end up with a program named `taupe` in a location where software is normally installed on your computer.  Running `taupe` should be as simple as running any other command-line program. For example, the following command should print a helpful message to your terminal:\n```shell\ntaupe --help\n```\n\nIf not given the option `--help` or `--version`, this program expects to be given a [personal Twitter archive file](https://help.twitter.com/en/managing-your-account/how-to-download-your-twitter-archive), either on the command line (as an argument) or on standard input (from a pipe or file redirection). Here's an example (and note this path is fake &ndash; substitute a real path on your computer when you do this!):\n```shell\ntaupe /path/to/twitter-archive.zip\n```\n\nThe URLs produced by `taupe` will be, by default, as they appear in the archive. If you want to [normalize the URLs](https://developer.twitter.com/en/blog/community/2020/getting-to-the-canonical-url-for-a-tweet) into the canonical form `https://twitter.com/twitter/status/TWEETID`, use the option `--canonical-urls` (`-c` for short):\n```shell\ntaupe -c /path/to/twitter-archive.zip\n```\n\n\n### The structure of the output\n\nThe output produced by `taupe` differs depending on whether you are extracting tweets or \"likes\".\n\n#### Tweets\n\nWhen using `--extract tweets` (the default), `taupe` produces a table with four columns.  Each row of the table corresponds to a type of event in the Twitter timeline: a tweet, a retweet, a reply to another tweet, or a quote tweet. The values in the columns provide details about the event. The following is a summary of the structure:\n\n| Column&nbsp;1 | Column 3 | Column 4 | Column 5 |\n|:-------------:|----------|--------|--------|\n| tweet timestamp in ISO format  | The type; one of `tweet`, `reply`, `retweet`, or `quote` | The&nbsp;URL of the tweet | (For type `reply`, `retweet` or `quote`.) The URL of the original or source tweet |\n\nEvery row of the table has a value for the first three columns. The fourth column only has a value when the event involves _someone else_'s tweet; i.e., for replies, retweets, and quote-tweets.\n\nHere is an example of the output:\n```text\n2022-11-05T18:57:00+00:00,tweet,https://twitter.com/twitter/status/1588948107139895296,\n2022-11-05T18:59:00+00:00,retweet,https://twitter.com/twitter/status/1588146224376463365,\n...\n```\n\n\n#### Likes\n\nWhen using the option `--extract likes`, the output will only contain one column: the URLs of the \"liked\" tweets. `taupe` cannot provide more detail because the Twitter archive format does not contain date/time information for \"likes\".\n\nHere is an example of the output when using `--extract likes` in combination with `--canonical-urls`:\n```\nhttps://twitter.com/twitter/status/1588146224376463365\nhttps://twitter.com/twitter/status/1588349144803905536\nhttps://twitter.com/twitter/status/1590475356976578560\nhttps://twitter.com/twitter/status/1583401617587863552\n...\n```\n\n\n### Other options recognized by `taupe`\n\nRunning `taupe` with the option `--help` will make it print help text and exit without doing anything else.\n\nThe option `--output` controls where `taupe` writes the output. If the value given to `--output` is `-` (a single dash), the output is written to the terminal (stdout). Otherwise, the value must be a file.\n\nIf given the `--version` option, this program will print its version and other information, and exit without doing anything else.\n\nIf given the `--debug` argument, `taupe` will output a detailed trace of what it is doing. The debug trace will be sent to the given destination, which can be `-` to indicate console output, or a file path to send the debug output to a file.\n\n\n## Known issues and limitations\n\nThis program assumes that the Twitter archive ZIP file is in the format which Twitter produced in mid-November 2022. Twitter probably used a different format in the past, and may change the format again in the future, so `taupe` may or may not work on Twitter archives obtained in different historical periods.\n\nThe Twitter archive format for \"likes\" contains only the tweet identifier and the text of the tweet; consequently, `taupe` cannot provide date/time information for this case.\n\nThis program does all its work in memory, which means that `taupe`'s ability to process a given archive depends on its size and how much RAM the computer has. It has only been tested with modest-sized archives. It is unknown how it will behave with exceptionally large archives.\n\n\n## Getting help\n\nIf you find a problem or have a request or suggestion, please submit it in [the GitHub issue tracker](https://github.com/mhucka/taupe/issues) for this repository.\n\n\n## Contributing\n\nI would be happy to receive your help and participation if you are interested.  Everyone is asked to read and respect the [code of conduct](CONDUCT.md) when participating in this project.  Please feel free to [report issues](https://github.com/mhucka/taupe/issues) or do a [pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests) to fix bugs or add new features.\n\n\n## License\n\nThis software is Copyright (C) 2022, by Michael Hucka and the California Institute of Technology (Pasadena, California, USA).  This software is freely distributed under a 3-clause BSD type license.  Please see the [LICENSE](LICENSE) file for more information.\n\n\n## Acknowledgments\n\nThis work is a personal project developed by the author, using computing facilities and other resources of the [California Institute of Technology Library](https://www.library.caltech.edu).\n\nThe [vector artwork](https://thenounproject.com/icon/bird-233023/) of a bird, used as the icon for this repository, was created by [Noe Araujo](https://thenounproject.com/noearaujo/) from the Noun Project.  It is licensed under the Creative Commons [CC-BY 3.0](https://creativecommons.org/licenses/by/3.0/) license.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mhucka/taupe",
            "keywords": "Python,applications",
            "license": "BSD 3-clause license",
            "maintainer": "",
            "maintainer_email": "",
            "name": "taupe",
            "package_url": "https://pypi.org/project/taupe/",
            "platform": null,
            "project_url": "https://pypi.org/project/taupe/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mhucka/taupe/issues",
                "Homepage": "https://github.com/mhucka/taupe",
                "Source Code": "https://github.com/mhucka/taupe"
            },
            "release_url": "https://pypi.org/project/taupe/0.0.1/",
            "requires_dist": [
                "aenum (>=3.1.0)",
                "commonpy (==1.9.5)",
                "plac (==1.3.5)",
                "rich (>=12.6.0)",
                "setuptools (==58.3.0)",
                "sidetrack (>=2.0.1)",
                "aenum (>=3.1.0) ; extra == 'dev'",
                "commonpy (==1.9.5) ; extra == 'dev'",
                "plac (==1.3.5) ; extra == 'dev'",
                "rich (>=12.6.0) ; extra == 'dev'",
                "setuptools (==58.3.0) ; extra == 'dev'",
                "sidetrack (>=2.0.1) ; extra == 'dev'",
                "pytest (>=6.2.5) ; extra == 'dev'",
                "pytest-cov (>=3.0.0) ; extra == 'dev'",
                "pytest-mock (>=3.7.0) ; extra == 'dev'",
                "flake8 (>=4.0.1) ; extra == 'dev'",
                "flake8-bugbear (>=22.4.25) ; extra == 'dev'",
                "flake8-builtins (>=1.5.3) ; extra == 'dev'",
                "flake8-comprehensions (>=3.8.0) ; extra == 'dev'",
                "flake8-executable (>=2.1.1) ; extra == 'dev'",
                "flake8-implicit-str-concat (>=0.3.0) ; extra == 'dev'",
                "flake8-pie (>=0.15.0) ; extra == 'dev'",
                "flake8-simplify (>=0.19.2) ; extra == 'dev'",
                "twine ; extra == 'dev'"
            ],
            "requires_python": ">=3.8",
            "summary": "Taupe: a tool to extract URLs from your personal Twitter archive",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15816730,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1bd7f60939781ea6ca6ad59b4c0640c2",
                    "sha256": "bd68f94e381e6112eff0bb55aa8a820bde79ad2a7b208691029c964698ba1cb9"
                },
                "downloads": -1,
                "filename": "taupe-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1bd7f60939781ea6ca6ad59b4c0640c2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 14334,
                "upload_time": "2022-11-18T16:02:29",
                "upload_time_iso_8601": "2022-11-18T16:02:29.201730Z",
                "url": "https://files.pythonhosted.org/packages/bf/df/e4831bbf7658ec6322c2daa309fe11e42e49d19d166e6c6447be2e69d832/taupe-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3ff26f20b9c59aa3226a65917ffd0297",
                    "sha256": "28e8ed1c5e95907a681c37802f6a9db480ea0f1ae0c5153f79f4aa128a0e69b9"
                },
                "downloads": -1,
                "filename": "taupe-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "3ff26f20b9c59aa3226a65917ffd0297",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 16921,
                "upload_time": "2022-11-18T16:02:31",
                "upload_time_iso_8601": "2022-11-18T16:02:31.982968Z",
                "url": "https://files.pythonhosted.org/packages/e0/ce/f01577ecb22d393776477842871b2d9e7ecebab8036e8072233e21747a71/taupe-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}