{
    "1.0.0": {
        "info": {
            "author": "TreeBen77",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# DiscordOAuth2.py\nUse Discord's OAuth2 effortlessly! Turns the auth code to a access token and the access token into scope infomation.\n\n> **Notice:** I don't know how to make my library work with `pip install` so you'll have to copy the source code and paste it into your workspace.\n\n### Using DiscordOAuth2.py with Flask\nYou can try out a working example here: https://DiscordOAuth2py.treeben77.repl.co\n```python\nfrom flask import Flask, redirect, request\nfrom discordoauth2 import discordOauth2\nimport os\n\napp = Flask('Discord OAuth2 Example')\nclient = discordOauth2(client=your-client-id, secret=\"your-client-secret\",\nredirect=\"your-redirect-url\", token=\"your-bot-token (optional)\")\n# Replace your-client-id with your application's client id, replace your-client-secret with your client secret and replace your-redirect-url with the url that discord will redirect users to once they complete OAuth2.\n# If you want to add users to a guild, insert a bot token with CREATE_INSTANT_INVITE permissions in the guilds you want to add users to.\n\n@app.route('/')\ndef main():\n  # Your OAuth2 url, you can make one a https://discord.dev\n  return redirect(\"https://discord.com/api/oauth2/authorize\")\n\n@app.route('/oauth2')\ndef oauth():\n  tokenObject = client.exchange_code(token=request.args.get('code'))\n  print(\"refresh token: \"+tokenObject.refresh_token)\n  \n  # returns basic data about the user, including username, avatar and badges, if the email scope was parsed, it will also return their email.\n  identify = tokenObject.access.identify()\n  # returns visible and hidden connections such as GitHub, YouTube or Twitter.\n  connections = tokenObject.access.connections()\n  # returns a list of guilds that the user is in\n  guilds = tokenObject.access.guilds()\n  # returns a member object for the provided guild\n  guilds_member = tokenObject.access.guilds_member(guilds[0][\"id\"])\n  # makes a user join a guild, bot token provided must have CREATE_INSTANT_INVITE in that guild\n  tokenObject.access.guilds_join(guild-id-here)\n\n  return f\"{identify}<br><br>{connections}<br><br>{guilds}<br><br>guild data for the first guild: {guilds_member}\"\n\napp.run(host=\"0.0.0.0\", port=8080)\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/TreeBen77/discordoauth2",
            "keywords": "flask,oauth2,discord,discord-api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "discord-oauth2.py",
            "package_url": "https://pypi.org/project/discord-oauth2.py/",
            "platform": null,
            "project_url": "https://pypi.org/project/discord-oauth2.py/",
            "project_urls": {
                "Homepage": "https://github.com/TreeBen77/discordoauth2"
            },
            "release_url": "https://pypi.org/project/discord-oauth2.py/1.0.0/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3.8",
            "summary": "Use Discord's OAuth2 effortlessly! Turns the auth code to a access token and the access token into scope infomation.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15979937,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "62a691c60f05d60017d70c8ea37bdf7c",
                    "sha256": "a4c621664e3e92055e65b5c8cc5de1330d7c38a3b0061d1421b33d93f95226fc"
                },
                "downloads": -1,
                "filename": "discord_oauth2.py-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "62a691c60f05d60017d70c8ea37bdf7c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 4440,
                "upload_time": "2022-12-03T17:02:25",
                "upload_time_iso_8601": "2022-12-03T17:02:25.751279Z",
                "url": "https://files.pythonhosted.org/packages/89/a3/0578c7009a8788fc269bbceb9044c38fb1df5a9af8d514bc77210fc4582d/discord_oauth2.py-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "066e2dfa766507a7117f3849559fb431",
                    "sha256": "36b956b14aa50e757fc752cba8fff13020be167dfce5b45fe27f021f161d06a4"
                },
                "downloads": -1,
                "filename": "discord-oauth2.py-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "066e2dfa766507a7117f3849559fb431",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 4088,
                "upload_time": "2022-12-03T17:02:27",
                "upload_time_iso_8601": "2022-12-03T17:02:27.334663Z",
                "url": "https://files.pythonhosted.org/packages/53/39/236eb56ffe7de680dfa141275ac050ffcb01fb1f479c96c4bf6de0f3ec8c/discord-oauth2.py-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}