{
    "0.1.0": {
        "info": {
            "author": "Yuki Chiba",
            "author_email": "yuki-chiba@outlook.jp",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tcgshuffle",
            "package_url": "https://pypi.org/project/tcgshuffle/",
            "platform": "",
            "project_url": "https://pypi.org/project/tcgshuffle/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/tcgshuffle/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "card shuffle method scorer.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13034396,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e893bc70d072c8ae89802c03526c8fc0",
                    "sha256": "3a1d0bec08624d9f7073ca8d139a60a4f8e8798b661056bbd0443eb5b44129f9"
                },
                "downloads": -1,
                "filename": "tcgshuffle-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e893bc70d072c8ae89802c03526c8fc0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2764,
                "upload_time": "2022-02-28T15:05:48",
                "upload_time_iso_8601": "2022-02-28T15:05:48.710347Z",
                "url": "https://files.pythonhosted.org/packages/08/00/a99b5ed795d77e5ad2607c2cf0c3077784680ea2233ddfcf989dc9e6edff/tcgshuffle-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Yuki Chiba",
            "author_email": "yuki-chiba@outlook.jp",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "## \u4f7f\u3044\u65b9\n```python\nfrom tcgshuffle import evaluate\nevaluate(\u8a55\u4fa1\u3057\u305f\u3044\u30b7\u30e3\u30c3\u30d5\u30eb\u95a2\u6570, \u30c7\u30c3\u30ad\u679a\u6570)\n```\n\n## \u51fa\u529b\n- position_prob_map: \u5143\u3005i\u756a\u76ee\u306b\u3042\u3063\u305f\u30ab\u30fc\u30c9\u304c\u3001\u30b7\u30e3\u30c3\u30d5\u30eb\u5f8c\u30c7\u30c3\u30ad\u5185\u306e\u3069\u3053\u306b\u79fb\u52d5\u3057\u305f\u983b\u5ea6\n- neighbor_prob_map: \u5143\u3005i\u756a\u76ee\u306b\u3042\u3063\u305f\u30ab\u30fc\u30c9\u3068j\u756a\u76ee\u306b\u3042\u3063\u305f\u30ab\u30fc\u30c9\u306b\u3064\u3044\u3066\u3001\u30b7\u30e3\u30c3\u30d5\u30eb\u5f8c\u306b\u305d\u308c\u3089\u304c\u96a3\u308a\u5408\u3063\u3066\u3044\u305f\u983b\u5ea6\n- position_badness: position_prob_map\u306e\u983b\u5ea6\u304c\u3001\u7406\u60f3\u983b\u5ea6(1 / \u30c7\u30c3\u30ad\u679a\u6570)\u3068\u3069\u306e\u7a0b\u5ea6\u4e56\u96e2\u3057\u3066\u3044\u308b\u304b\n- neighbor_badness: neighbor_prob_map\u3001\u7406\u60f3\u983b\u5ea6(1 / (\u30c7\u30c3\u30ad\u679a\u6570 - 1))\u3068\u3069\u306e\u7a0b\u5ea6\u4e56\u96e2\u3057\u3066\u3044\u308b\u304b\n- total_position_badness: \u7dcf\u5408\u8a55\u4fa1\u3068\u3057\u3066\u3001\u7406\u60f3\u983b\u5ea6\u30921\u3068\u3057\u305f\u5834\u5408\u306bposition_badness\u306e\u504f\u308a\u304c\u3069\u306e\u7a0b\u5ea6\u5927\u304d\u3044\u304b\u3092\u793a\u3059\uff08\u3082\u3063\u3068\u3082\u60aa\u3044\u6570\u5b57\u3092\u30c7\u30c3\u30ad\u679a\u6570\u5206\u53d6\u308a\u51fa\u3057\u5e73\u5747\u3057\u305f\u3082\u306e\uff09\n- total_neighbor_badness: \u7dcf\u5408\u8a55\u4fa1\u3068\u3057\u3066\u3001\u7406\u60f3\u983b\u5ea6\u30921\u3068\u3057\u305f\u5834\u5408\u306bneighbor_badness\u306e\u504f\u308a\u304c\u3069\u306e\u7a0b\u5ea6\u5927\u304d\u3044\u304b\u3092\u793a\u3059\uff08\u3082\u3063\u3068\u3082\u60aa\u3044\u6570\u5b57\u3092\u30c7\u30c3\u30ad\u679a\u6570\u5206\u53d6\u308a\u51fa\u3057\u5e73\u5747\u3057\u305f\u3082\u306e\uff09\n\n## \u30b7\u30e3\u30c3\u30d5\u30eb\u95a2\u6570\u5b9a\u7fa9\u65b9\u6cd5\n\n\u8aac\u660e\u6e96\u5099\u4e2d...\n\n### basic example 1\n1. \u30c7\u30a3\u30fc\u30eb\u30b7\u30e3\u30c3\u30d5\u30eb\uff086\u3064\u306e\u675f\uff09\n2. \u30d5\u30a1\u30ed\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff085\u56de\u9023\u7d9a\uff09\n3. \u30d2\u30f3\u30c9\u30a5\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff084\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u3059\u308b\u4f5c\u696d\u30921\u56de\uff09\n4. \u30d5\u30a1\u30ed\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff085\u56de\u9023\u7d9a\uff09\n5. \u30d2\u30f3\u30c9\u30a5\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff084\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u3059\u308b\u4f5c\u696d\u30921\u56de\uff09\n6. \u30ab\u30c3\u30c8\uff083\u5206\u5272\uff09\n```python\nfrom tcgshuffle import Deck, Shuffler, evaluate\ndef shuffle(d: Deck, s: Shuffler) -> Deck:\n    s.deal(d, [6])\n    s.fallow(d, 5, 0.1, 0.1)\n    s.over_hand(d, [4], 0.1)\n    s.fallow(d, 5, 0.1, 0.1)\n    s.over_hand(d, [4], 0.1)\n    s.cut(d, 3, 0.1)\n    return d\n\nposition_prob_map, neighbor_prob_map, position_badness, neighbor_badness, total_position_badness, total_neighbor_badness\\\n    = evaluate(shuffle, 60)\n```\ntotal_position_badness = 0.21536666666666665\ntotal_neighbor_badness = 0.21140000000000003\n\n### basic example 2\n1. \u30d2\u30f3\u30c9\u30a5\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff085\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u30014\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u30013\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u3001\u30fb\u30fb\u30fb\u306821\u56de\u884c\u3046\uff09\n```python\nfrom tcgshuffle import Deck, Shuffler, evaluate\ndef shuffle(d: Deck, s: Shuffler):\n    s.hindu(d, [5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5], 0.4)\n    return d\nposition_prob_map, neighbor_prob_map, position_badness, neighbor_badness, total_position_badness, total_neighbor_badness\\\n    = evaluate(shuffle, 60)\n```\ntotal_position_badness = 0.4182666666666666\ntotal_neighbor_badness = 13.671499999999998\n\n### advanced example 1\n1. \uff12\u675f\u306b\u5206\u3051\u308b\n2. \u305d\u308c\u305e\u308c\u306e\u675f\u3092\u30d5\u30a1\u30ed\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff088\u56de\u9023\u7d9a\uff09\n3. \uff12\u675f\u3092\u5408\u308f\u305b\u308b\uff08\u4e0a\u306b\u8f09\u305b\u308b\u3060\u3051\uff09\n```python\nfrom tcgshuffle import Deck, Shuffler, evaluate\ndef shuffle(d: Deck, s: Shuffler):\n    ds = s.split(d, 2, 0.1)\n    s.super_fallow(ds, 8, 0.1, 0.1)\n    d = s.merge(ds)\n    return d\nposition_prob_map, neighbor_prob_map, position_badness, neighbor_badness, total_position_badness, total_neighbor_badness\\\n    = evaluate(shuffle, 60)\n```\ntotal_position_badness = 1.2804000000000002\ntotal_neighbor_badness = 1.3671999999999995\n\n### advanced example 2\n1. \u30c7\u30a3\u30fc\u30eb\u30b7\u30e3\u30c3\u30d5\u30eb\uff086\u3064\u306e\u675f\uff09\n2. \u4ee5\u4e0b\u30923\u56de\u7e70\u308a\u8fd4\u3059\n   1. \u675f\u30922\u3064\u306b\u5206\u3051\u308b\uff08\u5143\u306e\u675f -> [A, B]\uff09\n   2. \u5404\u675f\u3092\u3055\u3089\u306b3\u3064\u306b\u5206\u3051\u308b\uff08A -> [A1, A2, A3], B -> [B1, B2, B3]\uff09\n   3. A1\u3068B1\u3001A2\u3068B2\u3001A3\u3068B3\u3092\u305d\u308c\u305e\u308c\u5408\u308f\u305b\u308b\n   4. A1+B1\u3001A2+B2\u3001A3+B3\u306b\u305d\u308c\u305e\u308c\u3001\u30d5\u30a1\u30ed\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff083\u56de\u9023\u7d9a\uff09\n   5. A1+B1\u3001A2+B2\u3001A3+B3\u3092\u5408\u308f\u305b\u308b\n   6. \u30d2\u30f3\u30c9\u30a5\u30fc\u30b7\u30e3\u30c3\u30d5\u30eb\uff084\u56de\u30b7\u30e3\u30ab\u30b7\u30e3\u30ab\u3059\u308b\u4f5c\u696d\u30923\u56de\u5b9f\u65bd\uff09\n```python\nfrom tcgshuffle import Deck, Shuffler, evaluate\ndef shuffle(d: Deck, s: Shuffler):\n    s.deal(d, [6])\n    for i in range(3):\n        sp2 = s.split(d, 2)\n        sp6 = s.super_split(sp2, 3)\n        pile1 = s.merge([sp6[0], sp6[3]])\n        pile2 = s.merge([sp6[1], sp6[4]])\n        pile3 = s.merge([sp6[2], sp6[5]])\n        s.fallow(pile1, 3, 0.1, 0.1)\n        s.fallow(pile2, 3, 0.1, 0.1)\n        s.fallow(pile3, 3, 0.1, 0.1)\n        d = s.merge([pile1, pile2, pile3])\n        s.hindu(d, [4, 4, 4], 0.1)\n    return d\nposition_prob_map, neighbor_prob_map, position_badness, neighbor_badness, total_position_badness, total_neighbor_badness\\\n    = evaluate(shuffle, 60)\n```\ntotal_position_badness = 0.23553333333333332\ntotal_neighbor_badness = 0.2083",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tcgshuffle",
            "package_url": "https://pypi.org/project/tcgshuffle/",
            "platform": "",
            "project_url": "https://pypi.org/project/tcgshuffle/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/tcgshuffle/0.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "card shuffle method scorer.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13034396,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "199a9f7c5485af2f4e6879b0f1a06995",
                    "sha256": "5266c30c46602d8d0f5423bd909b5bea88961061b74ea2f0d35698bbc006b220"
                },
                "downloads": -1,
                "filename": "tcgshuffle-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "199a9f7c5485af2f4e6879b0f1a06995",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5476,
                "upload_time": "2022-02-28T15:07:45",
                "upload_time_iso_8601": "2022-02-28T15:07:45.039876Z",
                "url": "https://files.pythonhosted.org/packages/e5/bf/2a4248afc8dd3fa3c16fd58133b0776bf688b94469e241e76f287aef5c9c/tcgshuffle-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}