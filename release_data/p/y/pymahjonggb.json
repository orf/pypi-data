{
    "0.2.0": {
        "info": {
            "author": "Yunlong Lu",
            "author_email": "luyunlong@pku.edu.cn",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ailab-pku/MahjongGB",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "PyMahjongGB",
            "package_url": "https://pypi.org/project/PyMahjongGB/",
            "platform": "",
            "project_url": "https://pypi.org/project/PyMahjongGB/",
            "project_urls": {
                "Homepage": "https://github.com/ailab-pku/MahjongGB"
            },
            "release_url": "https://pypi.org/project/PyMahjongGB/0.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A library for Fan Calculation of Mahjong in Chinese Standard Rule.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14753186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b5a6e2575c4b75027f97bd36cf810e88",
                    "sha256": "5cd182dbb5c90ea6d12deccdd4e273bae4af64f3fdff215cac8873f5f6251c7c"
                },
                "downloads": -1,
                "filename": "PyMahjongGB-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b5a6e2575c4b75027f97bd36cf810e88",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 51693,
                "upload_time": "2021-03-29T11:36:42",
                "upload_time_iso_8601": "2021-03-29T11:36:42.821359Z",
                "url": "https://files.pythonhosted.org/packages/84/a0/5b0c5ed56c4339b475e646ceefd1fc8d18294794f83d6f0ba5bbc822df55/PyMahjongGB-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "Yunlong Lu",
            "author_email": "luyunlong@pku.edu.cn",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ailab-pku/MahjongGB",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "PyMahjongGB",
            "package_url": "https://pypi.org/project/PyMahjongGB/",
            "platform": "",
            "project_url": "https://pypi.org/project/PyMahjongGB/",
            "project_urls": {
                "Homepage": "https://github.com/ailab-pku/MahjongGB"
            },
            "release_url": "https://pypi.org/project/PyMahjongGB/0.3.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A library for Fan Calculation of Mahjong in Chinese Standard Rule.",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14753186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "13666dee3ff227c85fdad6579231ca7d",
                    "sha256": "f343e78aeb0a83700d621ac3ca268f0520a1c2c28944735761c29d9d41257819"
                },
                "downloads": -1,
                "filename": "PyMahjongGB-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "13666dee3ff227c85fdad6579231ca7d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 50943,
                "upload_time": "2021-09-24T13:04:50",
                "upload_time_iso_8601": "2021-09-24T13:04:50.644885Z",
                "url": "https://files.pythonhosted.org/packages/22/28/b2b1a09f7be494779164a6da2b3a36889aeba7310dd5d4399de110f6c0a0/PyMahjongGB-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "Yunlong Lu",
            "author_email": "luyunlong@pku.edu.cn",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "Mahjong Fan Calculator Python\n=====\n\nREADME:[English](https://github.com/ailab-pku/PyMahjongGB/blob/master/README.md)|[\u4e2d\u6587](https://github.com/ailab-pku/PyMahjongGB/blob/master/README-zh.md)\n\n## Install\n```pip install PyMahjongGB```\n\n## Usage\n\n### MahjongFanCalculator\n\n```Python\nfrom MahjongGB import MahjongFanCalculator\n\n# \u7b97\u756a\u51fd\u6570\n((fanCount, fanName), ...) MahjongFanCalculator(\n    pack = ((packType, tileCode, offer), ...),\n    hand = (tileCode, ...),\n    winTile = tileCode,\n    flowerCount = int 0..8,\n    isSelfDrawn = bool,\n    is4thTile = bool,\n    isAboutKong = bool,\n    isWallLast = bool,\n    seatWind = int 0..3,\n    prevalentWind = int 0..3,\n\t[optional, default = False]verbose = bool)\n```\n\n- pack: The declared tiles. A tuple of tuples of three elements each:\n        packType of \"PENG\"/\"GANG\"/\"CHI\" for PUNG, KONG and CHOW,\n\t\ttileCode (see details below), middle tile in case of CHOW,\n\t\toffer, 1, 2, 3 for player on left/opposite/right who offers this tile in case of PUNG and KONG, 1, 2, 3 for which tile is offered in case of CHOW.\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- winTile: The winning tile to make Mahjong.\n- flowerCount: The number of the Flower and Season tiles.\n- isSelfDrawn: Whether the winning tile is self-drawn.\n- is4thTile: Whether the winning tile is the 4th tile.\n- isAboutKong: Whether the winning is about Kong. If the player wins by other's discard, it is Robbing the Kong. Otherwise, if the player wins by self-drawn, it is Out with Replacement Tile.\n- isWallLast: Whether the winning tile is the last one in tile wall. If self-drawn, it is Last Tile Draw. Otherwise, it is Last Tile Claim.\n- seatWind: Seat wind. The number 0, 1, 2, 3 represent East, South, West, and North respectively.\n- prevalentWind: Prevalent wind. The number 0, 1, 2, 3 represent East, South, West, and North respectively.\n- verbose: Default to False. If set to True, return format is (fan_point, cnt, fan_name, fan_name_en) instead of (fan_count, fan_name).\n- return: This function returns a tuple of tuples of two elements each: the fan count and fan name of each fan.\n\nTileCode Table:\n- W1 ~ W9 for CHARACTERS,\n- T1 ~ T9 for BAMBOOS,\n- B1 ~ B9 for DOTS,\n- F1 ~ F4 for WINDS,\n- J1 ~ J3 for DRAGONS,\n- H1 ~ H8 for FLOWERS and SEASONS.\n\n\n### MahjongShanten\n\n```Python\nfrom MahjongGB import MahjongShanten\n\n# \u8ba1\u7b97\u5411\u542c\u6570\nshanten MahjongShanten(\n    pack = ((packType, tileCode, offer), ...),\n    hand = (tileCode, ...))\n```\n\n- pack: The declared tiles. A tuple of tuples of three elements each:\n        packType of \"PENG\"/\"GANG\"/\"CHI\" for PUNG, KONG and CHOW,\n\t\ttileCode (see details below), middle tile in case of CHOW,\n\t\toffer, 1, 2, 3 for player on left/opposite/right who offers this tile in case of PUNG and KONG, 1, 2, 3 for which tile is offered in case of CHOW.\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns an integer: shanten.\n\n### ThirteenOrphansShanten\n\n```Python\nfrom MahjongGB import ThirteenOrphansShanten\n\n# \u8ba1\u7b97\u5341\u4e09\u5e7a\u5411\u542c\u6570\uff0c\u624b\u724c\u5fc5\u987b13\u5f20\n(shanten, useful) = ThirteenOrphansShanten(\n    hand = (tileCode, ...))\n```\n\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns a tuple: an integer shanten and a tuple consisting of tilecodes of useful tiles.\n\n### SevenPairsShanten\n\n```Python\nfrom MahjongGB import SevenPairsShanten\n\n# \u8ba1\u7b97\u4e03\u5bf9\u5411\u542c\u6570\uff0c\u624b\u724c\u5fc5\u987b13\u5f20\n(shanten, useful) = SevenPairsShanten(\n    hand = (tileCode, ...))\n```\n\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns a tuple: an integer shanten and a tuple consisting of tilecodes of useful tiles.\n\n### HonorsAndKnittedTilesShanten\n\n```Python\nfrom MahjongGB import HonorsAndKnittedTilesShanten\n\n# \u8ba1\u7b97\u5168\u4e0d\u9760\u5411\u542c\u6570\uff0c\u624b\u724c\u5fc5\u987b13\u5f20\n(shanten, useful) = HonorsAndKnittedTilesShanten(\n    hand = (tileCode, ...))\n```\n\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns a tuple: an integer shanten and a tuple consisting of tilecodes of useful tiles.\n\n### KnittedStraightShanten\n\n```Python\nfrom MahjongGB import KnittedStraightShanten\n\n# \u8ba1\u7b97\u7ec4\u5408\u9f99\u5411\u542c\u6570\uff0c\u624b\u724c\u5fc5\u987b10\u5f20\u6216\u800513\u5f20\n(shanten, useful) = KnittedStraightShanten(\n    hand = (tileCode, ...))\n```\n\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns a tuple: an integer shanten and a tuple consisting of tilecodes of useful tiles.\n\n### RegularShanten\n\n```Python\nfrom MahjongGB import RegularShanten\n\n# \u8ba1\u7b97\u57fa\u672c\u80e1\u578b\u7684\u5411\u542c\u6570\uff0c\u624b\u724c\u53ef\u4ee5\u662f1, 4, 7, 10, 13\u5f20\n(shanten, useful) = RegularShanten(\n    hand = (tileCode, ...))\n```\n\n- hand: The concealed tiles in hand. A tuple of tileCodes.\n- return: This function returns a tuple: an integer shanten and a tuple consisting of tilecodes of useful tiles.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ailab-pku/MahjongGB",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "PyMahjongGB",
            "package_url": "https://pypi.org/project/PyMahjongGB/",
            "platform": null,
            "project_url": "https://pypi.org/project/PyMahjongGB/",
            "project_urls": {
                "Homepage": "https://github.com/ailab-pku/MahjongGB"
            },
            "release_url": "https://pypi.org/project/PyMahjongGB/1.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "A library for Fan Calculation of Mahjong in Chinese Standard Rule.",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14753186,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b314443d68862ea18bd49625efcf5025",
                    "sha256": "fdd6afe9a16412f89d7bb563e04c430862aad35b4bb42b43763326847cdb8202"
                },
                "downloads": -1,
                "filename": "PyMahjongGB-1.1.0-cp37-cp37m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "b314443d68862ea18bd49625efcf5025",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.5",
                "size": 42150,
                "upload_time": "2022-08-14T03:49:24",
                "upload_time_iso_8601": "2022-08-14T03:49:24.427168Z",
                "url": "https://files.pythonhosted.org/packages/50/38/f4bde9249bcd63fe12ee937f337a6978b2a344c13b7d8afa67e433b2d7a7/PyMahjongGB-1.1.0-cp37-cp37m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "485a5484b5e1a47ee812cb754bd70eb8",
                    "sha256": "70c6c533bc38a289cfc45c806156edb782d517dff4a1f98c94fa8193a5acd88c"
                },
                "downloads": -1,
                "filename": "PyMahjongGB-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "485a5484b5e1a47ee812cb754bd70eb8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 52306,
                "upload_time": "2022-08-14T03:49:26",
                "upload_time_iso_8601": "2022-08-14T03:49:26.123972Z",
                "url": "https://files.pythonhosted.org/packages/e9/6f/be9050dd2b8b130d72e1f9760934d52a4e70adfa72f7c6b410d4876070b1/PyMahjongGB-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}