{
    "0.1.1": {
        "info": {
            "author": "M.Shaeri",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "[![Downloads](https://static.pepy.tech/personalized-badge/django-query-to-table?period=total&units=international_system&left_color=black&right_color=green&left_text=Downloads)](https://pepy.tech/project/django-query-to-table)\n\n### django-query-to-table is an easy to use django package to generate reporting html table from sql query.\n\nThe package contains single function named \"generateFromSql\" which accepts 12 arguments :\n\n* cursor : db cursor\n* title : The title of the report that will be shown on top of table\n* sqltext : The sql select query to retrieve data\n* footerCols : A list of columns name that you want to have Sum of values on footer . Example : ['amount','price']\n* htmlClass : Html CSS classes for the table\n* direction (default = \"ltr\") : Indicates direction of the report page.  \"ltr\"- Left to Right , \"rtl\" -  Right to Left\n* font (default = \"Tahoma\") : Font of title and table contents\n* totalText (default = \"Total\") : Title of footer row that will be the put below the first column.\n* rowIndex (default = False) : Indicates whether the table should have index column or not.\n* headerRowColor (default = '#eeeeee') :  The header (title) row background color.\n* evenRowColor (default = '#ffffff') :  The even rows background color.\n* oddRowColor (default = '#ffffff') :  The odd rows background color.\n\n\n\n## Installation\nTo install django-query-to-table using pip :\n\n```shell\npip install django-query-to-table\n```\n\n## Usage :\n\n\n```python\nfrom django.db import connection\nfrom django-query-to-table import DjangoQtt\n\n# view method\ndef listOfPersons(request):\n  cursor = connection.cursor()\n  reportTitle = \"Employee List\"\n  sqlQuery = \"SELECT FirstName as 'First Name', LastName as 'Last Name', phone as 'Phone Number', salary as 'Salary' FROM persons\"\n  columnsToBeSummarized = ['Salary']\n  fontName = \"Arial\"\n  cssClasses = \"reportTable container\"\n  headerRowBackgroundColor = '#ffeeee'\n  evenRowsBackgroundColor = '#ffeeff'\n  oddRowsBackgroundColor = '#ffffff'\n  table = DjangoQtt.generateFromSql(cursor, reportTitle, sqlQuery, columnsToBeSummarized, cssClasses\n                                  \"ltr\", fontName, \"Total Salary\", True,\n                                  headerRowBackgroundColor, evenRowsBackgroundColor, oddRowsBackgroundColor\n                                  )\n  # table is a string variable contianing the html table showing the query result\n  return table\n   \n ```\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://pypi.org/project/django-query-to-table/",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/birddevelper/django-query-to-table",
            "keywords": "Django,Report,HTML,Table,SQL",
            "license": "GNU",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-query-to-table",
            "package_url": "https://pypi.org/project/django-query-to-table/",
            "platform": null,
            "project_url": "https://pypi.org/project/django-query-to-table/",
            "project_urls": {
                "Download": "https://pypi.org/project/django-query-to-table/",
                "Homepage": "https://github.com/birddevelper/django-query-to-table"
            },
            "release_url": "https://pypi.org/project/django-query-to-table/0.1.1/",
            "requires_dist": [
                "Django"
            ],
            "requires_python": "",
            "summary": "A simple to use Django package to turn your sql query into a beautiful reporting html table",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15518878,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cc9b32be6468e26b777fbaf539f078bd",
                    "sha256": "4d4508e0710b03bb212b7f4ff04be96e5d6b4cebbf75fbed6ef92fb048afc834"
                },
                "downloads": -1,
                "filename": "django_query_to_table-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cc9b32be6468e26b777fbaf539f078bd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 2530,
                "upload_time": "2022-10-25T05:54:29",
                "upload_time_iso_8601": "2022-10-25T05:54:29.009530Z",
                "url": "https://files.pythonhosted.org/packages/5d/dc/1fc4418a75388d3e6afad5f85056ac7c472bccb341252b972c47a45720e6/django_query_to_table-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "53363aa70b5f15797bfe298f64839110",
                    "sha256": "dd262105872c8af367d52601466f59da686e3dcda719a3d1356af77e6643e992"
                },
                "downloads": -1,
                "filename": "django-query-to-table-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "53363aa70b5f15797bfe298f64839110",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2333,
                "upload_time": "2022-10-25T06:00:15",
                "upload_time_iso_8601": "2022-10-25T06:00:15.925457Z",
                "url": "https://files.pythonhosted.org/packages/57/d4/04ea177526dd5212a8cdf3d5527fb7e69513caf48969bd3b255fe394f63c/django-query-to-table-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}