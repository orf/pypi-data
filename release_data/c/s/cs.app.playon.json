{
    "20211212": {
        "info": {
            "author": "Cameron Simpson",
            "author_email": "cs@cskk.id.au",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
            "keywords": "python3",
            "license": "GNU General Public License v3 or later (GPLv3+)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cs.app.playon",
            "package_url": "https://pypi.org/project/cs.app.playon/",
            "platform": "",
            "project_url": "https://pypi.org/project/cs.app.playon/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"
            },
            "release_url": "https://pypi.org/project/cs.app.playon/20211212/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "PlayOn facilities, primarily access to the download API.",
            "version": "20211212",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13145302,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "81c4ee2d302933ff54bb2b68d0853fd5",
                    "sha256": "82f71815a673e97b2a575e7576b01e83c64e66f07fcd93da87c000b458375de4"
                },
                "downloads": -1,
                "filename": "cs.app.playon-20211212.tar.gz",
                "has_sig": false,
                "md5_digest": "81c4ee2d302933ff54bb2b68d0853fd5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14554,
                "upload_time": "2021-12-11T23:35:38",
                "upload_time_iso_8601": "2021-12-11T23:35:38.007460Z",
                "url": "https://files.pythonhosted.org/packages/18/61/75272748694fdc9fcd8de3b62555f2f38d00afff4725a592b52b8b0c02e2/cs.app.playon-20211212.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "20220311": {
        "info": {
            "author": "Cameron Simpson",
            "author_email": "cs@cskk.id.au",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Utilities"
            ],
            "description": "PlayOn facilities, primarily access to the download API.\nIncludes a nice command line tool.\n\n*Latest release 20220311*:\nBugfix criteria for refreshing the PlayOn state.\n\n## Function `main(argv=None)`\n\nPlayon command line mode;\nsee the `PlayOnCommand` class below.\n\n## Class `PlayOnAPI(cs.resources.MultiOpenMixin, cs.context.ContextManagerMixin)`\n\nAccess to the PlayOn API.\n\n*Method `PlayOnAPI.__getitem__(self, download_id: int)`*:\nReturn the recording `TagSet` associated with the recording `download_id`.\n\n*Method `PlayOnAPI.account(self, *a, **kw)`*:\nReturn account information.\n\n*Property `PlayOnAPI.auth_token`*:\nAn auth token obtained from the login state.\n\n*Method `PlayOnAPI.cdsurl_data(self, suburl, _method='GET', headers=None, **kw)`*:\nWrapper for `suburl_data` using `CDS_BASE` as the base URL.\n\n*Method `PlayOnAPI.download(self, *a, **kw)`*:\nDownload the file with `download_id` to `filename_basis`.\nReturn the `TagSet` for the recording.\n\nThe default `filename` is the basename of the filename\nfrom the download.\nIf the filename is supplied with a trailing dot (`'.'`)\nthen the file extension will be taken from the filename\nof the download URL.\n\n*Method `PlayOnAPI.from_playon_date(date_s)`*:\nThe PlayOn API seems to use UTC date strings.\n\n*Property `PlayOnAPI.jwt`*:\nThe JWT token.\n\n*Property `PlayOnAPI.login_state`*:\nThe login state, a `dict`. Performs a login if necessary.\n\n*Method `PlayOnAPI.queue(self, *a, **kw)`*:\nReturn the `TagSet` instances for the queued recordings.\n\n*Method `PlayOnAPI.recordings(self, *a, **kw)`*:\nReturn the `TagSet` instances for the available recordings.\n\n*Method `PlayOnAPI.service(self, service_id)`*:\nReturn the service `SQLTags` instance for `service_id`.\n\n*Method `PlayOnAPI.services(self, *a, **kw)`*:\nFetch the list of services.\n\n*Method `PlayOnAPI.startup_shutdown(self)`*:\nStart up: open and init the `SQLTags`, open the `FSTags`.\n\n*Method `PlayOnAPI.suburl_data(self, suburl, _base_url=None, _method='GET', headers=None, raw=False, **kw)`*:\nCall `suburl` and return the `'data'` component on success.\n\nParameters:\n* `suburl`: the API subURL designating the endpoint.\n* `_method`: optional HTTP method, default `'GET'`.\n* `headers`: hreaders to accompany the request;\n  default `{'Authorization':self.jwt}`.\nOther keyword arguments are passed to the `requests` method\nused to perform the HTTP call.\n\n*Method `PlayOnAPI.suburl_request(base_url, method, suburl)`*:\nReturn a curried `requests` method\nto fetch `API_BASE/suburl`.\n\n## Class `PlayOnCommand(cs.cmdutils.BaseCommand)`\n\nPlayon command line implementation.\n\nCommand line usage:\n\n    Usage: playon subcommand [args...]\n\n        Environment:\n          PLAYON_USER               PlayOn login name, default from $EMAIL.\n          PLAYON_PASSWORD           PlayOn password.\n                                    This is obtained from .netrc if omitted.\n          PLAYON_FILENAME_FORMAT  Format string for downloaded filenames.\n                                    Default: {playon.Series}--{playon.Name}--{resolution}--{playon.ProviderID}--playon--{playon.ID}\n          PLAYON_TAGS_DBURL         Location of state tags database.\n                                    Default: ~/var/playon.sqlite\n\n        Recording specification:\n          an int        The specific recording id.\n          all           All known recordings.\n          downloaded    Recordings already downloaded.\n          expired       Recording which are no longer available.\n          pending       Recordings not already downloaded.\n          /regexp       Recordings whose Series or Name match the regexp,\n                        case insensitive.\n\n      Subcommands:\n        account\n          Report account state.\n        dl [-j jobs] [-n] [recordings...]\n          Download the specified recordings, default \"pending\".\n          -j jobs   Run this many downloads in parallel.\n                    The default is 2.\n          -n        No download. List the specified recordings.\n        help [-l] [subcommand-names...]\n          Print the full help for the named subcommands,\n          or for all subcommands if no names are specified.\n          -l  Long help even if no subcommand-names provided.\n        ls [-l] [recordings...]\n          List available downloads.\n          -l        Long listing: list tags below each entry.\n          -o format Format string for each entry.\n          Default format: {playon.ID} {playon.HumanSize} {resolution} {playon.Series} {playon.Name} {playon.ProviderID} {status:upper}\n        q [-l] [recordings...]\n          List queued recordings.\n          -l        Long listing: list tags below each entry.\n          -o format Format string for each entry.\n          Default format: {playon.ID} {playon.Series} {playon.Name} {playon.ProviderID}\n        queue [-l] [recordings...]\n          List queued recordings.\n          -l        Long listing: list tags below each entry.\n          -o format Format string for each entry.\n          Default format: {playon.ID} {playon.Series} {playon.Name} {playon.ProviderID}\n        refresh [queue] [recordings]\n          Update the db state from the PlayOn service.\n        service [service_id]\n          List services.\n\n*Method `PlayOnCommand.cmd_account(self, argv)`*:\nUsage: {cmd}\nReport account state.\n\n*Method `PlayOnCommand.cmd_dl(self, argv)`*:\nUsage: {cmd} [-j jobs] [-n] [recordings...]\nDownload the specified recordings, default \"pending\".\n-j jobs   Run this many downloads in parallel.\n          The default is {DEFAULT_DL_PARALLELISM}.\n-n        No download. List the specified recordings.\n\n*Method `PlayOnCommand.cmd_ls(self, argv)`*:\nUsage: {cmd} [-l] [recordings...]\nList available downloads.\n-l        Long listing: list tags below each entry.\n-o format Format string for each entry.\nDefault format: {LS_FORMAT}\n\n*Method `PlayOnCommand.cmd_q(self, argv)`*:\nUsage: {cmd} [-l] [recordings...]\nList queued recordings.\n-l        Long listing: list tags below each entry.\n-o format Format string for each entry.\nDefault format: {QUEUE_FORMAT}\n\n*Method `PlayOnCommand.cmd_queue(self, argv)`*:\nUsage: {cmd} [-l] [recordings...]\nList queued recordings.\n-l        Long listing: list tags below each entry.\n-o format Format string for each entry.\nDefault format: {QUEUE_FORMAT}\n\n*Method `PlayOnCommand.cmd_refresh(self, argv)`*:\nUsage: {cmd} [queue] [recordings]\nUpdate the db state from the PlayOn service.\n\n*Method `PlayOnCommand.cmd_service(self, argv, locale='en_US')`*:\nUsage: {cmd} [service_id]\nList services.\n\n*Method `PlayOnCommand.run_context(self)`*:\nPrepare the `PlayOnAPI` around each command invocation.\n\n## Class `PlayOnSQLTags(cs.sqltags.SQLTags, cs.tagset.BaseTagSets, cs.resources.MultiOpenMixin, cs.context.ContextManagerMixin, collections.abc.MutableMapping, collections.abc.Mapping, collections.abc.Collection, collections.abc.Sized, collections.abc.Iterable, collections.abc.Container)`\n\n`SQLTags` subclass with PlayOn related methods.\n\n*Method `PlayOnSQLTags.__iter__(self)`*:\nYield recording `TagSet`s, those named `\"recording.*\"`.\n\nNote that this includes both recorded and queued items.\n\n*Method `PlayOnSQLTags.infer_db_url(envvar=None, default_path=None)`*:\nInfer the database URL.\n\nParameters:\n* `envvar`: environment variable to specify a default,\n  default from `DBURL_ENVVAR` (`PLAYON_TAGS_DBURL`).\n\n*Method `PlayOnSQLTags.recording_ids_from_str(self, *a, **kw)`*:\nConvert a string to a list of recording ids.\n\n*Method `PlayOnSQLTags.recordings(self)`*:\nYield recording `TagSet`s, those named `\"recording.*\"`.\n\nNote that this includes both recorded and queued items.\n\n## Class `Recording(cs.sqltags.SQLTagSet, cs.obj.SingletonMixin, cs.tagset.TagSet, builtins.dict, cs.dateutils.UNIXTimeMixin, cs.lex.FormatableMixin, cs.lex.FormatableFormatter, string.Formatter, cs.mappings.AttrableMappingMixin)`\n\nAn `SQLTagSet` with knowledge about PlayOn recordings.\n\n*Method `Recording.is_available(self)`*:\nIs a recording available for download?\n\n*Method `Recording.is_downloaded(self)`*:\nTest whether this recording has been downloaded\nbased on the presence of a `download_path` `Tag`.\n\n*Method `Recording.is_expired(self)`*:\nTest whether this recording is expired,\nwhich implies that it is no longer available for download.\n\n*Method `Recording.is_pending(self)`*:\nA pending download: available and not already downloaded.\n\n*Method `Recording.is_queued(self)`*:\nIs a recording still in the queue?\n\n*Method `Recording.is_stale(self, max_age=None)`*:\nTest whether this entry is stale\ni.e. the time since `self.last_updated` exceeds `max_age` seconds\n(default from `self.STALE_AGE`).\nNote that expired recordings are never stale\nbecause they can no longer be queried from the API.\n\n*Method `Recording.ls(self, ls_format=None, long_mode=False, print_func=None)`*:\nList a recording.\n\n*Method `Recording.nice_name(self)`*:\nA nice name for the recording: the PlayOn series and name,\nomitting the series if `None`.\n\n*Method `Recording.recording_id(self)`*:\nThe recording id or `None`.\n\n*Method `Recording.resolution(self)`*:\nThe recording resolution derived from the quality\nvia the `Recording.RECORDING_QUALITY` mapping.\n\n*Method `Recording.status(self)`*:\nReturn a short status string.\n\n# Release Log\n\n\n\n*Release 20220311*:\nBugfix criteria for refreshing the PlayOn state.\n\n*Release 20211212*:\nInitial release.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/cameron_simpson/css/commits/all",
            "keywords": "python3",
            "license": "GNU General Public License v3 or later (GPLv3+)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cs.app.playon",
            "package_url": "https://pypi.org/project/cs.app.playon/",
            "platform": null,
            "project_url": "https://pypi.org/project/cs.app.playon/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/cameron_simpson/css/commits/all"
            },
            "release_url": "https://pypi.org/project/cs.app.playon/20220311/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "PlayOn facilities, primarily access to the download API. Includes a nice command line tool.",
            "version": "20220311",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13145302,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7a5e66971b7713a69a7bcf5e4df21530",
                    "sha256": "232c85f666c0aba56288b774071852db2533b35246bc747a6053c9d081be2713"
                },
                "downloads": -1,
                "filename": "cs.app.playon-20220311.tar.gz",
                "has_sig": false,
                "md5_digest": "7a5e66971b7713a69a7bcf5e4df21530",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14923,
                "upload_time": "2022-03-11T01:08:16",
                "upload_time_iso_8601": "2022-03-11T01:08:16.247924Z",
                "url": "https://files.pythonhosted.org/packages/85/cf/966e24ceb2fa6d9eb2f295bee394650f8fe6862c23ad95c0b9e40967dd4a/cs.app.playon-20220311.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}