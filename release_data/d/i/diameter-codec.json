{
    "1.0.0": {
        "info": {
            "author": "Kresimir Popovic",
            "author_email": "kresimir.popovic@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# Diameter codec - encoder & decoder  \n- codec is based on RFC https://datatracker.ietf.org/doc/html/rfc6733  \n- no third party py libs dependencies  \n- very simple and straightforward to use  \n- python support: >= 3.6  \n  \n### How to setup dev env  \n- apt install python3.6   \n- apt install python3.6-venv  \n- source venv/bin/activate  \n- pip install -r requirements.txt  \n  \n### How to build project  \n- pyb -v\n\n### How to encode and decode Capabilities-Exchange message\n\timport os  \n\timport typing    \n\tfrom codec.diameter.diameter import DiameterHeader, Diameter, Avp  \n\tfrom codec.diameter.dictionary import DictionaryLayout, DefaultDictionaryLayout\t\n\tcer_request: typing.Tuple = (  \n      Avp(\"Product-Name\", \"hello\"),  \n      Avp(\"Origin-Realm\", \"zte.com.cn\"),  \n      Avp(\"Origin-Host\", \"dmtsrv001.zte.com.cn\"),  \n      Avp(\"Host-IP-Address\", \"192.168.0.1\"),  \n      Avp(\"Vendor-Id\", 10415),  \n      Avp(\"Product-Name\", \"dummy-product\"),  \n      Avp(\"Inband-Security-Id\", 1),  \n      Avp(\"Vendor-Specific-Application-Id\", (  \n         Avp(\"Vendor-Id\", 10415),  \n         Avp(\"Acct-Application-Id\", 1),  \n         Avp(\"Auth-Application-Id\", 1),  \n      )),  \n      Avp(\"Vendor-Specific-Application-Id\", (  \n         Avp(\"Auth-Application-Id\", 2),  \n         Avp(\"Acct-Application-Id\", 2),  \n         Avp(\"Vendor-Id\", 10415),  \n      )),  \n    )\n    header: DiameterHeader = DiameterHeader(application_id=0, command_code=257, avp_set=cer_request)\n    xml_dict_path: str = <path to diameter xml file>  \n\tdictionary_layout: DictionaryLayout = DefaultDictionaryLayout(xml_dict_path)  \n\tdiameter: Diameter = Diameter(dictionary_layout)\n    encoded_header: bytes = self.diameter.encode(header) #\tsend to TCP server     \n    decoded_header: DiameterHeader = diameter.decode(encoded_header) # decoded on TCP server\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.com/3gpp-toolbox/diameter-codec",
            "keywords": "diameter codec rfc6733",
            "license": "European Union Public Licence 1.2 (EUPL 1.2)",
            "maintainer": "",
            "maintainer_email": "",
            "name": "diameter-codec",
            "package_url": "https://pypi.org/project/diameter-codec/",
            "platform": "",
            "project_url": "https://pypi.org/project/diameter-codec/",
            "project_urls": {
                "Homepage": "https://gitlab.com/3gpp-toolbox/diameter-codec"
            },
            "release_url": "https://pypi.org/project/diameter-codec/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12217050,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3b2423bba4c0ab94780b5126dea13351",
                    "sha256": "ad3f2860e2c638eb2f4a5b307e2f977026538922a8abc99eb4ea032a43e0ced1"
                },
                "downloads": -1,
                "filename": "diameter_codec-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3b2423bba4c0ab94780b5126dea13351",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 12814,
                "upload_time": "2021-12-05T21:27:09",
                "upload_time_iso_8601": "2021-12-05T21:27:09.647733Z",
                "url": "https://files.pythonhosted.org/packages/52/b7/41f26f62642145edeb53afce3141e99aa7b53881a403999682ec7d66f109/diameter_codec-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1d48eb430a229fff3341dfef8c2e885c",
                    "sha256": "0f8c1d5fa148ed0d87de6e13b34516d6d62e942866ddb89d6971c945f8ada12f"
                },
                "downloads": -1,
                "filename": "diameter-codec-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1d48eb430a229fff3341dfef8c2e885c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 9332,
                "upload_time": "2021-12-05T21:27:10",
                "upload_time_iso_8601": "2021-12-05T21:27:10.880028Z",
                "url": "https://files.pythonhosted.org/packages/1e/0e/1e1134113aba695a001bd4dfaedc83b495cf222dc740b56b9f69c19b4a2f/diameter-codec-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}