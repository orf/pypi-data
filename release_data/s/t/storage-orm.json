{
    "1.1.0": {
        "info": {
            "author": "aarekuha",
            "author_email": "aarekuha@gmail.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aarekuha/storage-orm-cyberphysics",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "storage-orm",
            "package_url": "https://pypi.org/project/storage-orm/",
            "platform": null,
            "project_url": "https://pypi.org/project/storage-orm/",
            "project_urls": {
                "Download": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
                "Homepage": "https://github.com/aarekuha/storage-orm-cyberphysics"
            },
            "release_url": "https://pypi.org/project/storage-orm/1.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python for using in-memory storage with ORM",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15842495,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "205f3cbb7ddf02e7911ca9c9c09b6021",
                    "sha256": "efd84eedf4b1170ad08531382281ed85d69defd500c94a003f6a192f2249c51d"
                },
                "downloads": -1,
                "filename": "storage_orm-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "205f3cbb7ddf02e7911ca9c9c09b6021",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8212,
                "upload_time": "2022-11-18T13:04:44",
                "upload_time_iso_8601": "2022-11-18T13:04:44.606490Z",
                "url": "https://files.pythonhosted.org/packages/46/4b/10a358be0b13a22d220cd67fd632b073987ed157003fc190544a4c82333d/storage_orm-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.1": {
        "info": {
            "author": "aarekuha",
            "author_email": "aarekuha@gmail.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aarekuha/storage-orm-cyberphysics",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "storage-orm",
            "package_url": "https://pypi.org/project/storage-orm/",
            "platform": null,
            "project_url": "https://pypi.org/project/storage-orm/",
            "project_urls": {
                "Download": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
                "Homepage": "https://github.com/aarekuha/storage-orm-cyberphysics"
            },
            "release_url": "https://pypi.org/project/storage-orm/1.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python for using in-memory storage with ORM",
            "version": "1.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15842495,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fad1e56f2fd583ce9c0afcb7ebe18bf5",
                    "sha256": "a09dc0d88311606bb5e913c23d5e0d0df44bc110b4703d7932f8af856bc7f882"
                },
                "downloads": -1,
                "filename": "storage_orm-1.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "fad1e56f2fd583ce9c0afcb7ebe18bf5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8393,
                "upload_time": "2022-11-21T12:37:14",
                "upload_time_iso_8601": "2022-11-21T12:37:14.315320Z",
                "url": "https://files.pythonhosted.org/packages/95/99/5f6d8732c69f73051e0116e3aa8938e85351c3751ed62a93c43e7c111a74/storage_orm-1.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.2": {
        "info": {
            "author": "aarekuha",
            "author_email": "aarekuha@gmail.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aarekuha/storage-orm-cyberphysics",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "storage-orm",
            "package_url": "https://pypi.org/project/storage-orm/",
            "platform": null,
            "project_url": "https://pypi.org/project/storage-orm/",
            "project_urls": {
                "Download": "https://github.com/aarekuha/storage-orm-cyberphysics/archive/refs/heads/master.zip",
                "Homepage": "https://github.com/aarekuha/storage-orm-cyberphysics"
            },
            "release_url": "https://pypi.org/project/storage-orm/1.1.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python for using in-memory storage with ORM",
            "version": "1.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15842495,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aeeb79d36867d9699836cb40a706945e",
                    "sha256": "81da729f7df66c62f1bbd02800312a447909954b2c709ddf7a0cf2452538b495"
                },
                "downloads": -1,
                "filename": "storage_orm-1.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "aeeb79d36867d9699836cb40a706945e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8590,
                "upload_time": "2022-11-21T15:13:14",
                "upload_time_iso_8601": "2022-11-21T15:13:14.930652Z",
                "url": "https://files.pythonhosted.org/packages/8a/14/352f2ab6db8e51f68bfbbff968953fccf305c46e81dcb621ee0b0414e790/storage_orm-1.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.3": {
        "info": {
            "author": "aarekuha",
            "author_email": "aarekuha@gmail.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "#### StorageORM (CyberPhysics)\n##### \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\n```bash\n    pip install storage-orm\n```\n##### \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n- [redis-py](https://github.com/redis/redis-py)\n##### \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f ([\u0432\u0441\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b](examples/), [\u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440](examples/redis_1_single.py))\n1. \u0418\u043c\u043f\u043e\u0440\u0442 \u043a\u043b\u0430\u0441\u0441\u043e\u0432\n    ```python\n        from storage_orm import StorageORM\n        from storage_orm import RedisORM\n        from storage_orm import RedisItem\n        from storage_orm import OperationResult\n    ```\n1. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043c\u043e\u0434\u0435\u043b\u044c\n    ```python\n        class ExampleItem(RedisItem):\n            \"\"\"\n                \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u0442\u0438\u043f\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n                  (\u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435 \u0441\u0431\u043e\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0411\u0414 \u043f\u0440\u0438\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0442\u0438\u043f)\n            \"\"\"\n            date_time: int\n            any_value: float\n\n            class Meta:\n                \"\"\"\n                    \u0421\u0438\u0441\u0442\u0435\u043c\u043d\u044b\u0439 \u043f\u0440\u0435\u0444\u0438\u043a\u0441 \u0437\u0430\u043f\u0438\u0441\u0438 \u0432 Redis\n                    \u041a\u043b\u044e\u0447\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b \u0434\u043b\u044f\n                      \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0432 \u043c\u043e\u043c\u0435\u043d\u0442 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\n                \"\"\"\n                table = \"subsystem.{subsystem_id}.tag.{tag_id}\"\n    ```\n1. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 ORM \u043c\u043e\u0436\u043d\u043e \u0434\u0432\u0443\u043c\u044f \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438\n    1. \u041f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u0432 ORM\n        ```python\n            orm: StorageORM = RedisORM(host=\"localhost\", port=8379, db=1)\n        ```\n    1. \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 redis.Redis \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0435\u0433\u043e \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\n        ```python\n            redis: redis.Redis = redis.Redis(host=\"localhost\", port=8379, db=1)\n            orm: StorageORM = RedisORM(db=redis)\n        ```\n1. \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435/\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 (\u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432 Meta.table \u043c\u043e\u0434\u0435\u043b\u0438)\n    1. \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043c\u043e\u0434\u0435\u043b\u0438\n        ```python\n            example_item: ExampleItem = ExampleItem(\n                subsystem_id=3,\n                tag_id=15,\n                date_time=100,\n                any_value=17.\n            )\n        ```\n    1. \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0432\u0441\u0442\u0430\u0432\u043a\u0443 \u043c\u043e\u0436\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u0430\u043c\u0438\n        1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 save() \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430\n            ```python\n                operation_result: OperationResult = example_item.save()\n            ```\n        1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 save() StorageOrm\n            ```python\n                operation_result: OperationResult = orm.save(item=example_item)\n            ```\n        1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c **\u0433\u0440\u0443\u043f\u043f\u043e\u0432\u0443\u044e** \u0432\u0441\u0442\u0430\u0432\u043a\u0443 \u0437\u0430\u043f\u0438\u0441\u0435\u0439 ([\u043f\u0440\u0438\u043c\u0435\u0440 \u0433\u0440\u0443\u043f\u043f\u043e\u0432\u043e\u0439 \u0432\u0441\u0442\u0430\u0432\u043a\u0438](examples/redis_2_bulk_multiple.py))\n            ```python\n                operation_result: OperationResult = orm.bulk_create(\n                    items=[example_item1, example_item2]\n                )\n            ```\n1. \u0412\u044b\u0431\u043e\u0440\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0411\u0414\n    - \u0434\u043b\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 Meta.table\n        ```python\n            table = \"subsystem.{subsystem_id}.tag.{tag_id}\"\n                                     ^               ^\n        ```\n        , \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440\n        ```python\n            example_items: list[exampleitem] = exampleitem.get(subsystem_id=3, tag_id=15)\n        ```\n1. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 ([\u043f\u0440\u0438\u043c\u0435\u0440](examples/redis_3_using_multiple_connections.py))\n    - \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432 \u043c\u0435\u0442\u043e\u0434 StorageItem.using(db_instance=...) \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c\n      \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0411\u0414 Redis, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440\n        ```python\n            redis_another: redis.Redis = redis.Redis(host=\"localhost\", port=8379, db=17)\n            ...\n            result_of_operation: OperationResult = example_item.using(db_instance=redis_another).save()\n        ```\n\n\n##### \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432\n```bash\n    python -m venv venv\n    source ./venv/bin/activate\n    pip install redis\n\n    # \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0440\u0438\u043c\u0435\u0440\n    PYTHONPATH=\"${PYTHONPATH}:.\" python examples/redis_1_single.py\n\n    # \u041f\u0440\u0438\u043c\u0435\u0440 \u0433\u0440\u0443\u043f\u043f\u043e\u0432\u043e\u0439 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 (bulk)\n    PYTHONPATH=\"${PYTHONPATH}:.\" python examples/redis_2_bulk_multiple.py\n\n    # \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439\n    PYTHONPATH=\"${PYTHONPATH}:.\" python examples/redis_3_using_multiple_connections.py\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/CyberPhysics-Platform/storage-orm/archive/refs/heads/master.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/CyberPhysics-Platform/storage-orm",
            "keywords": "",
            "license": "Apache License, Version 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "storage-orm",
            "package_url": "https://pypi.org/project/storage-orm/",
            "platform": null,
            "project_url": "https://pypi.org/project/storage-orm/",
            "project_urls": {
                "Download": "https://github.com/CyberPhysics-Platform/storage-orm/archive/refs/heads/master.zip",
                "Homepage": "https://github.com/CyberPhysics-Platform/storage-orm"
            },
            "release_url": "https://pypi.org/project/storage-orm/1.1.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python for using in-memory storage with ORM",
            "version": "1.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15842495,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c79fdb2a5728bc5ca9d0d12572f63a43",
                    "sha256": "a64fe71d0ad41c9b7b76ca6e2adb1f7c4ced890bc6ae1898032971de393c204f"
                },
                "downloads": -1,
                "filename": "storage_orm-1.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "c79fdb2a5728bc5ca9d0d12572f63a43",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8592,
                "upload_time": "2022-11-21T15:50:24",
                "upload_time_iso_8601": "2022-11-21T15:50:24.493565Z",
                "url": "https://files.pythonhosted.org/packages/fc/0e/75d77d951a1c272e5f842d0e597db637e6d4f8de13e32801529fe3cadd38/storage_orm-1.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}