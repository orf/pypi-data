{
    "1.0.0": {
        "info": {
            "author": "Elena Sidorova",
            "author_email": "dskorinkin@hse.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "\n# Prereform2modern\n#### \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0442\u0435\u043a\u0441\u0442 \u0438\u0437 \u0434\u043e\u0440\u0435\u0444\u043e\u0440\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432 Py3.\n---\n### &emsp;&emsp;\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\n```python\npip install prereform2modern\n```\n\n### &emsp;&emsp;\u0417\u0430\u043f\u0443\u0441\u043a \u0438\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438:\n&emsp;\u0414\u043b\u0438\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\n```python\npython -m prereform2modern.translit_from_string \"\u041e\u043d\u044a \u0441\u0442\u043e\u044f\u043b\u044a \u043f\u043e\u0434\u043b\u0463 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e \u0441\u0442\u043e\u043b\u0430\"\n```\n```\n\u041e\u043d \u0441\u0442\u043e\u044f\u043b \u043f\u043e\u0434\u043b\u0435 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0430\n```\n\n&emsp;\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\n```python\ntranslit \"\u041e\u043d\u044a \u0441\u0442\u043e\u044f\u043b\u044a \u043f\u043e\u0434\u043b\u0463 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e \u0441\u0442\u043e\u043b\u0430\"\n```\n\n&emsp;\u0424\u043b\u0430\u0433 __-t__ \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0432 \u0441\u0442\u0430\u0440\u043e\u0439 \u043e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0438.\n```python\ntranslit -t \"\u041e\u043d\u044a \u0441\u0442\u043e\u044f\u043b\u044a \u043f\u043e\u0434\u043b\u0463 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e \u0441\u0442\u043e\u043b\u0430\"\n```\n\n```python\n\u041e\u043d{\u041e\u043d\u044a} \u0441\u0442\u043e\u044f\u043b{\u0441\u0442\u043e\u044f\u043b\u044a} \u043f\u043e\u0434\u043b\u0435{\u043f\u043e\u0434\u043b\u0463} \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u043e\u0433\u043e{\u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e} \u0441\u0442\u043e\u043b\u0430\n```\n\n### &emsp;&emsp;\u0417\u0430\u043f\u0443\u0441\u043a \u0438\u0437 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430:\n```python\nfrom prereform2modern import Processor\n```\n```python\norig_text = \"\u041e\u043d\u044a \u0441\u0442\u043e\u044f\u043b\u044a \u043f\u043e\u0434\u043b\u0463 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e \u0441\u0442\u043e\u043b\u0430\"\n```\n\n```python\ntext_res, changes, s_json = Processor.process_text(\n    text=orig_text,\n    show=False,\n    delimiters=False,\n    check_brackets=False\n    )\n```\n\n### &emsp;&emsp;\u0412\u044b\u0434\u0430\u0447\u0430\n* __text_res: str__\n\n&emsp;\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442.\n\n```python\nprint(text_res)\n```\n```\n\u041e\u043d \u0441\u0442\u043e\u044f\u043b \u043f\u043e\u0434\u043b\u0435 \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0430\n```\n\n* __changes: str__\n\n&emsp;\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f.\n\n```python\nprint(changes)\n```\n```\n\u041e\u043d\u044a --> \u041e\u043d\n\u0441\u0442\u043e\u044f\u043b\u044a --> \u0441\u0442\u043e\u044f\u043b\n\u043f\u043e\u0434\u043b\u0463 --> \u043f\u043e\u0434\u043b\u0435\n\u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e --> \u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u043e\u0433\u043e\n```\n\n* __str_json: str__\n\n&emsp;\u0421\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u0432\u0441\u0435\u0445 \u0441\u043b\u043e\u0432\u0430\u0445 \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u0445 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 json.\n\n```python\nimport json\njson.loads(s_json)\n```\n```python\n{'0': {'old_word': '\u041e\u043d\u044a', 'type': 'word', 'word': '\u041e\u043d'},\n'1': {'old_word': '', 'type': 'punct', 'word': ' '},\n'2': {'old_word': '\u0441\u0442\u043e\u044f\u043b\u044a', 'type': 'word', 'word': '\u0441\u0442\u043e\u044f\u043b'},\n'3': {'old_word': '', 'type': 'punct', 'word': ' '},\n'4': {'old_word': '\u043f\u043e\u0434\u043b\u0463', 'type': 'word', 'word': '\u043f\u043e\u0434\u043b\u0435'},\n'5': {'old_word': '', 'type': 'punct', 'word': ' '},\n'6': {'old_word': '\u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u0430\u0433\u043e', 'type': 'word', 'word': '\u043f\u0438\u0441\u044c\u043c\u0435\u043d\u043d\u043e\u0433\u043e'},\n'7': {'old_word': '', 'type': 'punct', 'word': ' '},\n'8': {'old_word': '', 'type': 'word', 'word': '\u0441\u0442\u043e\u043b\u0430'}}\n```\n\n\n### &emsp;&emsp;\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b\n```python\nmethod Processor.process_text(\n    text, show, delimiters, check_brackets\n    )\n```\n* __text: str__\n\n&emsp;\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u0432 \u0434\u043e\u0440\u0435\u0444\u043e\u0440\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0438.\n\n* __show: boolean__\n\n&emsp;\u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0437\u0430\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u0432 \u0434\u043e\u0440\u0435\u0444\u043e\u0440\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0438. \u0415\u0441\u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 `check_brackets=True`, \u0442\u043e \u0437\u0430\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u043b\u044e\u0431\u043e\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 show.\n\n* __delimiters: list \u0438\u0437 \u0442\u0440\u0435\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0442\u0438\u043f\u0430 str__\n\n&emsp;\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u043c\u0435\u043d\u0451\u043d\u043d\u044b\u0445 \u0441\u043b\u043e\u0432. \u041f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043f\u043e\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u0435\u0440\u0435\u0434 \u043d\u043e\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u043e\u043c, \u0430 \u0434\u0440\u0443\u0433\u0438\u0435 \u0434\u0432\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0432\u044b\u0434\u0435\u043b\u044f\u044e\u0442 \u0437\u0430\u043c\u0435\u043d\u0451\u043d\u043d\u043e\u0435 \u0441\u043b\u043e\u0432\u043e. \u0422\u0430\u043a, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043a\u043e\u0431\u043a\u0438:\n```python\ndelimiters=['', '{', '}']\ntext=\"\u043f\u0440\u0438\u043c\u0435\u0440\u044a\"\n```\n```python\n\u043f\u0440\u0438\u043c\u0435\u0440{\u043f\u0440\u0438\u043c\u0435\u0440\u044a}\n```\n\n&emsp;\u0418\u043b\u0438, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0435\u0433\u0438 XML (\u043f\u0440\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0435\u0433\u0430 \\<choice> \u0441\u043c. [\u0437\u0434\u0435\u0441\u044c](https://en.wikipedia.org/wiki/Text_Encoding_Initiative#Choice_tag)):\n```python\ndelimiters=['<choice><reg>', '</reg><orig>', '</orig></choice>']\n```\n```python\n<choice><reg>\u043f\u0440\u0438\u043c\u0435\u0440</reg><orig>\u043f\u0440\u0438\u043c\u0435\u0440\u044a</orig></choice>\n```\n\n* __check_brackets: boolean__\n\n&emsp;\u041f\u043e\u043c\u0435\u0447\u0430\u0435\u0442 \u0440\u0435\u0434\u0430\u043a\u0442\u043e\u0440\u0441\u043a\u0443\u044e \u043f\u0440\u0430\u0432\u043a\u0443.\n```python\ntext='\u041f\u0440\u043e\u0439\u0434\u044f \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u0442\u0430\u043a\u044a [\u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u0443\u044e], \u043e\u0444\u0438\u0446\u0456\u0430\u043d\u0441\u043a\u0443\u044e'\ndelimiters=['', '{', '}']\ncheck_brackets=True\n```\n```python\n\u041f\u0440\u043e\u0439\u0434\u044f \u043a\u043e\u043c\u043d\u0430\u0442\u0443, \u0442\u0430\u043a{\u0442\u0430\u043a\u044a} <choice original_editorial_correction='[\u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u0443\u044e]'><sic></sic>\n<corr>\u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c\u0443\u044e</corr></choice>, \u043e\u0444\u0438\u0446\u0438\u0430\u043d\u0441\u043a\u0443\u044e{\u043e\u0444\u0438\u0446i\u0430\u043d\u0441\u043a\u0443\u044e}\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/dhhse/prereform2modern",
            "keywords": "prereform contemporary orthography convertor Russian",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prereform2modern",
            "package_url": "https://pypi.org/project/prereform2modern/",
            "platform": "",
            "project_url": "https://pypi.org/project/prereform2modern/",
            "project_urls": {
                "Homepage": "https://github.com/dhhse/prereform2modern"
            },
            "release_url": "https://pypi.org/project/prereform2modern/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6.0,<4.0.0",
            "summary": "Pre-reform to contemporary orthography convertor for the Russian language",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7995701,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "638044afcf6136393378177c952164fb",
                    "sha256": "5bbcec3af88bea1d72978f1b30e4d66b6a28106db29edd4b65c827811c9bbdf7"
                },
                "downloads": -1,
                "filename": "prereform2modern-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "638044afcf6136393378177c952164fb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6.0,<4.0.0",
                "size": 1030888,
                "upload_time": "2020-08-18T15:44:26",
                "upload_time_iso_8601": "2020-08-18T15:44:26.013456Z",
                "url": "https://files.pythonhosted.org/packages/a3/3f/5a21aa40a86f150094f3415860d72c0c9ab468ddfa80204c1fdb7676019a/prereform2modern-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "57d486f2f7ab2c67675f8807a2482d93",
                    "sha256": "bfd85936a36630fd936edbd08c1658107457b8465fe10d7eb805c9f3993b4549"
                },
                "downloads": -1,
                "filename": "prereform2modern-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "57d486f2f7ab2c67675f8807a2482d93",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6.0,<4.0.0",
                "size": 1018203,
                "upload_time": "2020-08-18T15:44:29",
                "upload_time_iso_8601": "2020-08-18T15:44:29.142285Z",
                "url": "https://files.pythonhosted.org/packages/88/cf/01482909618389036c22654d4f34aa5fd8ca48e017a5a89565174fd7d26f/prereform2modern-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}