{
    "1.0": {
        "info": {
            "author": "Tim Schopf",
            "author_email": "tim.schopf@tum.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Information Analysis"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/sebischair/Lbl2Vec",
            "keywords": "",
            "license": "BSD 3-Clause \"New\" or \"Revised\" License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lbl2vec",
            "package_url": "https://pypi.org/project/lbl2vec/",
            "platform": "",
            "project_url": "https://pypi.org/project/lbl2vec/",
            "project_urls": {
                "Homepage": "https://github.com/sebischair/Lbl2Vec"
            },
            "release_url": "https://pypi.org/project/lbl2vec/1.0/",
            "requires_dist": [
                "pandas (>=1.3.0)",
                "numpy (>=1.21.0)",
                "swifter (>=1.0.9)",
                "gensim (>=4.0.1)",
                "scikit-learn (>=0.24.2)",
                "psutil (>=5.8.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "Lbl2Vec learns jointly embedded label, document and word vectors to retrieve documents with predefined topics from an unlabeled document corpus.",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10954414,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e232df0ffe77706f3609fa219cc283a",
                    "sha256": "2ab7c67235b4869ee037f9f6a73f052706959ea52f1c469d8c3a773b4041d7d2"
                },
                "downloads": -1,
                "filename": "lbl2vec-1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9e232df0ffe77706f3609fa219cc283a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10695,
                "upload_time": "2021-07-20T08:00:36",
                "upload_time_iso_8601": "2021-07-20T08:00:36.006722Z",
                "url": "https://files.pythonhosted.org/packages/0f/05/a929691471eace82a0a87b7c426e41338a7a4d54752896216a2db5759966/lbl2vec-1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0868935baffe1d6f8429ef3a1399f2fc",
                    "sha256": "bceed38f202d659b347c043c87036b012dcd3241a1474e98ecfd31d3cd76098a"
                },
                "downloads": -1,
                "filename": "lbl2vec-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0868935baffe1d6f8429ef3a1399f2fc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 11759,
                "upload_time": "2021-07-20T08:00:37",
                "upload_time_iso_8601": "2021-07-20T08:00:37.634033Z",
                "url": "https://files.pythonhosted.org/packages/84/27/35771fac3bc3c2cc957a0037d5dc10d6d807cc0d10eecb9daf782dab3345/lbl2vec-1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Tim Schopf",
            "author_email": "tim.schopf@tum.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Information Analysis"
            ],
            "description": "[![](https://img.shields.io/pypi/v/lbl2vec.svg)](https://pypi.org/project/lbl2vec/)\n[![](https://img.shields.io/pypi/l/lbl2vec.svg)](https://github.com/sebischair/Lbl2Vec/blob/main/LICENSE)\n[![Documentation Status](https://readthedocs.org/projects/lbl2vec/badge/?version=latest)](https://lbl2vec.readthedocs.io/en/latest/?badge=latest)\n\nLbl2Vec\n======= \n\nLbl2Vec is an algorithm for **unsupervised document classification** and **unsupervised document retrieval.** It automatically generates jointly embedded label, document and word vectors and returns documents of topics modeled by manually predefined keywords. Once you train the Lbl2Vec model you can:\n\n* Classify documents as related to one of the predefined topics.\n* Get similarity scores for documents to each predefined topic.\n* Get most similar predefined topic of documents.\n\nBenefits\n--------\n\n1. No need to label the whole document dataset for classification.\n2. No stop word lists required.\n3. No need for stemming/lemmatization.\n4. Works on short text.\n5. Creates jointly embedded label, document, and word vectors.\n\nHow does it work?\n-----------------\n\nThe key idea of the algorithm is that many semantically similar keywords can represent a topic. In the first step, the algorithm creates a joint embedding of document and word vectors. Once documents and words are embedded in a vector space, the goal of the algorithm is to learn label vectors from previously manually defined keywords representing a topic. Finally, the algorithm can predict the affiliation of documents to topics from *document vector <-> label vector* similarities. \n\n### The Algorithm\n**0. Use the manually defined keywords for each topic of interest.**\n>Domain knowledge is needed to define keywords that describe topics and are semantically similar to each other within the topics.\n\n| Basketball     | Soccer        | Baseball   |\n| :-------------:|:-------------:|:----------:|\n| NBA            | FIFA          | MLB        |\n| Basketball     | Soccer        | Baseball   |\n| LeBron         | Messi         | Ruth       |\n| ...            | ...           | ...        |\n\n\n**1. Create jointly embedded document and word vectors using [Doc2Vec](https://radimrehurek.com/gensim/models/doc2vec.html \"Gensim Doc2Vec\").**\n>Documents will be placed close to other similar documents and close to the most distinguishing words.\n\n![](https://raw.githubusercontent.com/sebischair/Lbl2Vec/main/images/Doc2Vec_example.png)\n\n**2. Find document vectors that are similar to the keyword vectors of each topic.**\n>Each color represents a different topic described by the respective keywords. \n\n![](https://raw.githubusercontent.com/sebischair/Lbl2Vec/main/images/Document_assignment_example.png)\n\n**3. Clean outlier document vectors for each topic.**\n>Red documents are outlier vectors that are removed and do not get used for calculating the label vector. \n\n![](https://raw.githubusercontent.com/sebischair/Lbl2Vec/main/images/Outlier_cleaning_example.png)\n\n**4. Compute the centroid of the outlier cleaned document vectors as label vector for each topic.**\n>Points represent the label vectors of the respective topics. \n\n![](https://raw.githubusercontent.com/sebischair/Lbl2Vec/main/images/Label_vectors_example.png)\n\n**5. Compute *label vector <-> document vector* similarities for each label vector and document vector in the dataset.**\n>Documents are classified as topic with the highest *label vector <-> document vector* similarity.\n\n![](https://raw.githubusercontent.com/sebischair/Lbl2Vec/main/images/Classification_example.png)\n\nInstallation\n------------\n\n```\npip install lbl2vec\n```\n    \nUsage\n-----\nFor detailed information visit the [Lbl2Vec API Guide](https://lbl2vec.readthedocs.io/en/latest/api.html#) and the [examples](https://github.com/sebischair/Lbl2Vec/tree/main/examples).\n\n``` \nfrom lbl2vec import Lbl2Vec\n```\n\n### Learn new model from scratch\n>Learns word vectors, document vectors and label vectors from scratch during Lbl2Vec model training.\n\n``` \n# init model\nmodel = Lbl2Vec(keywords_list=descriptive_keywords, tagged_documents=tagged_docs)\n# train model\nmodel.fit()\n```\n**Important parameters:**\n\n* `keywords_list`: iterable list of lists with descriptive keywords of type str. For each label at least one descriptive keyword has to be added as list of str.\n* `tagged_documents`: iterable list of [gensim.models.doc2vec.TaggedDocument](https://radimrehurek.com/gensim/models/doc2vec.html#gensim.models.doc2vec.TaggedDocument) elements. If you wish to train a new Doc2Vec model this parameter can not be None, whereas the `doc2vec_model` parameter must be None. If you use a pretrained Doc2Vec model this parameter has to be None. Input corpus, can be simply a list of elements, but for larger corpora, consider an iterable that streams the documents directly from disk/network.\n\n### Use word and document vectors from pretrained Doc2Vec model\n>Uses word vectors and document vectors from a pretrained Doc2Vec model to learn label vectors during Lbl2Vec model training.\n\n```\n# init model\nmodel = Lbl2Vec(keywords_list=descriptive_keywords, doc2vec_model=pretrained_d2v_model)\n# train model\nmodel.fit()\n```\n\n**Important parameters:**\n\n* `keywords_list`: iterable list of lists with descriptive keywords of type str. For each label at least one descriptive keyword has to be added as list of str.\n* `doc2vec_model`: pretrained [gensim.models.doc2vec.Doc2Vec](https://radimrehurek.com/gensim/models/doc2vec.html#gensim.models.doc2vec.Doc2Vec) model. If given a pretrained Doc2Vec model, Lbl2Vec uses the pre-trained Doc2Vec model from this parameter. If this parameter is defined, `tagged_documents` parameter has to be None. In order to get optimal Lbl2Vec results the given Doc2Vec model should be trained with the parameters \"dbow_words=1\" and \"dm=0\".\n\n\n### Predict label similarities for documents used for training\n>Computes the similarity scores for each document vector stored in the model to each of the label vectors.\n\n```\n# get similarity scores from trained model\nmodel.predict_model_docs()\n```\n\n**Important parameters:**\n\n* `doc_keys`: list of document keys (optional). If None: return the similarity scores for all documents that are used to train the Lbl2Vec model. Else: only return the similarity scores of training documents with the given keys.\n\n### Predict label similarities for new documents that are not used for training\n>Computes the similarity scores for each given and previously unknown document vector to each of the label vectors from the model.\n\n```\n# get similarity scores for each new document from trained model\nmodel.predict_new_docs(tagged_docs=tagged_docs)\n```\n\n**Important parameters:**\n\n* `tagged_docs`: iterable list of [gensim.models.doc2vec.TaggedDocument](https://radimrehurek.com/gensim/models/doc2vec.html#gensim.models.doc2vec.TaggedDocument) elements\n\n### Save model to disk\n``` \nmodel.save('model_name')\n``` \n\n### Load model from disk\n``` \nmodel = Lbl2Vec.load('model_name')\n``` \n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/sebischair/Lbl2Vec",
            "keywords": "",
            "license": "BSD 3-Clause \"New\" or \"Revised\" License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lbl2vec",
            "package_url": "https://pypi.org/project/lbl2vec/",
            "platform": "",
            "project_url": "https://pypi.org/project/lbl2vec/",
            "project_urls": {
                "Homepage": "https://github.com/sebischair/Lbl2Vec"
            },
            "release_url": "https://pypi.org/project/lbl2vec/1.0.1/",
            "requires_dist": [
                "pandas (>=1.3.0)",
                "numpy (>=1.21.0)",
                "swifter (>=1.0.9)",
                "gensim (>=4.0.1)",
                "scikit-learn (>=0.24.2)",
                "psutil (>=5.8.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "Lbl2Vec learns jointly embedded label, document and word vectors to retrieve documents with predefined topics from an unlabeled document corpus.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10954414,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "032a9d4be5cef27024435df233d0076c",
                    "sha256": "c1e1478811b4e391f6bc8cb6f46821bb24de2248823ce478649acff2bc054aa7"
                },
                "downloads": -1,
                "filename": "lbl2vec-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "032a9d4be5cef27024435df233d0076c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 12805,
                "upload_time": "2021-07-20T08:18:29",
                "upload_time_iso_8601": "2021-07-20T08:18:29.896423Z",
                "url": "https://files.pythonhosted.org/packages/f1/65/1945f6b5f27bd1d68d20136b9bafcfc6888eab8f6519268c3cf43f9aef1f/lbl2vec-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7fadac9300423a9cf62b1d59fd9fde8b",
                    "sha256": "dd4153822ddac547b8eca4980f7d239c715562484871df1f307f18a13c40b549"
                },
                "downloads": -1,
                "filename": "lbl2vec-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "7fadac9300423a9cf62b1d59fd9fde8b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 13856,
                "upload_time": "2021-07-20T08:18:31",
                "upload_time_iso_8601": "2021-07-20T08:18:31.306176Z",
                "url": "https://files.pythonhosted.org/packages/69/6c/89bcd05993f54c2094d1e25df7453dd59683f65ad085dd87269f7e7146ef/lbl2vec-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}