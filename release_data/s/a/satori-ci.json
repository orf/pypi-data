{
    "1.0.1": {
        "info": {
            "author": "",
            "author_email": "Satori CI CLI <info@satori-ci.com>",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "satori-ci",
            "package_url": "https://pypi.org/project/satori-ci/",
            "platform": null,
            "project_url": "https://pypi.org/project/satori-ci/",
            "project_urls": {
                "Homepage": "https://www.satori-ci.com"
            },
            "release_url": "https://pypi.org/project/satori-ci/1.0.1/",
            "requires_dist": [
                "pyyaml>=6.0",
                "requests>=2.27.1"
            ],
            "requires_python": ">=3.9",
            "summary": "Satori CI - Automated Software Testing Platform",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15781009,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9248933d591cc43b919b0d46cda2e00e",
                    "sha256": "d796a27278e5c1655d5a7486af69d1090a4698b420172b690b544f9c59f4b15e"
                },
                "downloads": -1,
                "filename": "satori_ci-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9248933d591cc43b919b0d46cda2e00e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 21124,
                "upload_time": "2022-11-01T19:23:35",
                "upload_time_iso_8601": "2022-11-01T19:23:35.047142Z",
                "url": "https://files.pythonhosted.org/packages/36/1a/a3cf1ccfcf6740a810b96a7d832279c6cb53ddd96db83a94d177c0e3dce0/satori_ci-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cd9e550cef6633936611c40024124c2",
                    "sha256": "899b79d27980c7a34482243bc0c62b37cd50ed17b0b426cd09aa43db6fac6236"
                },
                "downloads": -1,
                "filename": "satori-ci-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1cd9e550cef6633936611c40024124c2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 21333,
                "upload_time": "2022-11-01T19:23:36",
                "upload_time_iso_8601": "2022-11-01T19:23:36.847924Z",
                "url": "https://files.pythonhosted.org/packages/87/07/6d375e670dd8dc2e6cb177e1d37dbb1cb12001fa2c06838aa5f40ad3acbb/satori-ci-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "",
            "author_email": "Satori CI CLI <info@satori-ci.com>",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# 1. Five Ws (and one H)\n\n## 1.1 What is Satori CI?\n\nSatori CI is an automated software testing as a service. It asserts what the outputs of the programs will be. Consider the following example \"Hello World\" program in Python:\n\n```py\nprint(\"Hello World\")\n```\n\nIf we execute this program, we will see the following:\n\n```py\n$ ./hello_world.py\nHello World\n```\n\nWe can assert that the return code will be 0 and the standard output of this program will be Hello World:\n\n```yml\ntest:\n    assertReturnCode: 0\n    assertStdoutEqual: Hello World\n    python:\n    - [ ./hello_world.py ]\n```\n\n## 1.2 Why\n\nThis no code testing language will help you test your software throughout different stages of its development lifecycle. Playbooks can look both at source code and execution (more examples of this in the \"CI: Import\" section)\n\n## 1.3 Who\n\nTest engineers, software developers and security testers.\n\n## 1.4 When\n\nYou can attach it to your CI process (Satori CI), you can launch them manually (Satori Run), and you can launch them periodically (Satori Monitor)\n\n## 1.5 Where\n\nSatori can be used on your continuous integration, deployment and delivery tests.\n\n## 1.6 How to use it?\n\nFirst, login at https://www.satori-ci.com using your Github account to be able to use our CI cappabilities. Github will ask for confirmation for us to access to your repositories of choice. After accepting the conditions, you can get a token fromus at https://www.satori-ci.com/user-settings/ \n\nYou will use that token to setup your account with our CLI tool\n\n```sh\ngit clone git@github.com:satorici/satori-cli.git\ncd satori-cli/\napt install python3.10\npip3 install -f requirements.txt\n# TBD: pip3 install satori-cli\nsatori-cli config default YOUR_TOKEN\n```\n\n# 2. Playbooks\n\nAre used to assert software behaviors, wether they are source code files or live systems.\n\n## 2.1 Playbooks: Hello World\n\nTBC\n\n## 2.2 Playbooks: Import\n\nPlaybooks can import other local or remote playbooks. We keep at TBC a list of playbooks that can be referenced with the\n\n```yml\nimport:\n    - satori://code/trufflehog.yml\n\ntest:\n    assertStdoutEqual: \"Hello World\"\n    bash:\n    - [ echo \"Hello World\" ]\n```\n\nIs there a playbook that you would like us to incluide? Drop us a line at support@satori-ci.com\n\n# 3. CI\n\nCheck how your repositories are connected to our CI with. This command will show you what is our visibility on your repositories. We will tell you which ones are connected, if they have a playbook associated and what is their status.\nExample output:\n\n```sh\n$ satori-cli ci\nTBC\n```\n\n## 2.1 CI: Add a playbook file\nAdding a file named .satori.yml in your root directory, we will be used by your Github pushes to test your code. Lets suppose for example that you created a Hello World application, and you want to know that that will be the output every time you push new code:\n\n- .satori.yml:\n\n```yml\ntest:\n    assertStdoutEqual: \"Hello World\"\n    bash:\n    - [ echo \"Hello World\" ]\n```\n\n# Monitor\n\nCheck that your assets are correctly monitored. This command will check on the playbooks that are running with a crontab to monitor resources:\n`satori-cli monitor`\nExample output:\n\n```sh\nTBC\n```\n\n## Monitor: add a playbook to be executed at a certain rate\n\nPlaybook that define a rate are automatically included within the monitor functionality:\n\n- MonitorBlog.yml\n\n```yml\nsettings:\n  - name: Monitor Blog\n  - rate: TBC\n\ntest:\n  assertStdout: \"Hello World\"\n  blog:\n  - [ curl -s https://www.satori-ci.com/hello-world/ ]\n```\n\nThis will be checked every X minutes once you execute it. Example:\n\n```sh\n$ satori-cli run MonitorBlog.yml`\nTBC\n```\n\n## Monitor: stopping and running again a playbook\n\nYou will get a list with the `satori-cli monitor`, from where you will take the UUID. You can use that UUID with the `stop` and `run` subcommands\n\n```sh\n$ satori-cli stop UUID\nTBC\n```\n\n# Scan \nTBC\n\n### Scan all your commits\n\n```sh\n$ satori-cli scan GithubAccount/Repository -c 100\nTBC\n```\n\n# Playbooks:\n\nYou can see a list of public playbooks when at https://github.com/satorici/playbooks/\n\n```sh\n$ satori-cli playbooks\nPrivate playbooks:\nPublic Playbooks:\n```\n\n## Public playbooks:\n\nThey can be imported by playbooks that you have in your CI or on assets being Monitored.\n\n```sh\n$ satori-cli playbooks public\nURI                          | Name                                            \nsatori://code/trufflehog.yml | Trufflehog will search for secrets in your code \n...\n```\n\n## Private Playbooks:\n\nWe will store a copy of the playbooks that you have executed and show them to you whenever you execute the command:\n\n```sh\n$ satori-cli playbooks private\nType    | URI                                                     | Name           | Imports\nCI      | github://satorici/satori-cli/.satori.yml                |                |\nMonitor | github://satorici/playbooks/test/satori/monitor.yml     | Monitor Assets | monitorBlog.yml\nRun     | github://satorici/playbooks/test/satori/monitorBlog.yml | Monitor Blog   |\n...\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "satori-ci",
            "package_url": "https://pypi.org/project/satori-ci/",
            "platform": null,
            "project_url": "https://pypi.org/project/satori-ci/",
            "project_urls": {
                "Homepage": "https://www.satori-ci.com"
            },
            "release_url": "https://pypi.org/project/satori-ci/1.0.2/",
            "requires_dist": [
                "pyyaml>=6.0",
                "requests>=2.27.1"
            ],
            "requires_python": ">=3.9",
            "summary": "Satori CI - Automated Software Testing Platform",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15781009,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e71adc3ab15295a0ae00e440fac958b",
                    "sha256": "2ae488a3701020f5e33589b6d351f52fa4721ed2cb4e83ce6ff9f6a3a4462366"
                },
                "downloads": -1,
                "filename": "satori_ci-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2e71adc3ab15295a0ae00e440fac958b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 21601,
                "upload_time": "2022-11-15T21:40:13",
                "upload_time_iso_8601": "2022-11-15T21:40:13.001872Z",
                "url": "https://files.pythonhosted.org/packages/28/63/6478c97e5aa9e6aeb007c3939bbf34b8b99a4f2d20cedb9731817ec1dc98/satori_ci-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8cff69793c4127b6a87387ddec0bc79c",
                    "sha256": "7cc95319f5f6c5e56ab3099ac5b82e09220f6a82c77f3d8400669923caed376d"
                },
                "downloads": -1,
                "filename": "satori-ci-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "8cff69793c4127b6a87387ddec0bc79c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 21544,
                "upload_time": "2022-11-15T21:40:15",
                "upload_time_iso_8601": "2022-11-15T21:40:15.542647Z",
                "url": "https://files.pythonhosted.org/packages/21/e6/062c178f2bcb566580413ba019ceeeaffdbd7aa6106f5e6879cf3e9d8206/satori-ci-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}