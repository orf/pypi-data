{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Matthew Spah <spahmatthew@gmail.com>, Kristian Nilssen <krinilssen@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "python-mlb-statsapi",
            "package_url": "https://pypi.org/project/python-mlb-statsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/python-mlb-statsapi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/zero-sum-seattle/python-mlb-statsapi/issues",
                "Homepage": "https://github.com/zero-sum-seattle/python-mlb-statsapi"
            },
            "release_url": "https://pypi.org/project/python-mlb-statsapi/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "mlbstatsapi python wrapper",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16078703,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8ef0af7196fe306ae5d8a0f861dddcca",
                    "sha256": "dd073496eaabb875ddf7815fc4c7b522091a2c49cba22c1c363bd94b4392adde"
                },
                "downloads": -1,
                "filename": "python_mlb_statsapi-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8ef0af7196fe306ae5d8a0f861dddcca",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 50678,
                "upload_time": "2022-10-17T23:28:33",
                "upload_time_iso_8601": "2022-10-17T23:28:33.351320Z",
                "url": "https://files.pythonhosted.org/packages/69/c5/25e69b4713de3745ee084f4712ce5535b6d58ac98d594e10cc7fe40f7350/python_mlb_statsapi-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8e3225ae5b0e5a53fd74a368be3fc1f6",
                    "sha256": "d735f210104bab8324c7e076b12b7fe2997dcf6c13dff145ee9d6e355e0ca383"
                },
                "downloads": -1,
                "filename": "python-mlb-statsapi-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8e3225ae5b0e5a53fd74a368be3fc1f6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 30333,
                "upload_time": "2022-10-17T23:28:35",
                "upload_time_iso_8601": "2022-10-17T23:28:35.116055Z",
                "url": "https://files.pythonhosted.org/packages/37/a4/7267d643353ce22a412c99974bd21712703d1422937244219d97f652c074/python-mlb-statsapi-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "",
            "author_email": "Matthew Spah <spahmatthew@gmail.com>, Kristian Nilssen <krinilssen@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "python-mlb-statsapi",
            "package_url": "https://pypi.org/project/python-mlb-statsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/python-mlb-statsapi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/zero-sum-seattle/python-mlb-statsapi/issues",
                "Homepage": "https://github.com/zero-sum-seattle/python-mlb-statsapi"
            },
            "release_url": "https://pypi.org/project/python-mlb-statsapi/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "mlbstatsapi python wrapper",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16078703,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c5385086d5099d0ccb6a84d16087da66",
                    "sha256": "e91597ebd2398e5322c89294167ba58e9dc68cb172924b94daf87d96d5946e22"
                },
                "downloads": -1,
                "filename": "python_mlb_statsapi-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c5385086d5099d0ccb6a84d16087da66",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 55098,
                "upload_time": "2022-10-27T21:54:56",
                "upload_time_iso_8601": "2022-10-27T21:54:56.774246Z",
                "url": "https://files.pythonhosted.org/packages/d4/bd/0e8fe9d93ad59eaa47c102662ce7a688b20e48b952445f3bb62e1dcbe109/python_mlb_statsapi-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "849fc804b5e6b27f644bf68b72b08f44",
                    "sha256": "241d9604605ab584c8fca3ed39e15b789c417828d2315a51457221eabd9e214f"
                },
                "downloads": -1,
                "filename": "python-mlb-statsapi-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "849fc804b5e6b27f644bf68b72b08f44",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 33664,
                "upload_time": "2022-10-27T21:54:58",
                "upload_time_iso_8601": "2022-10-27T21:54:58.165653Z",
                "url": "https://files.pythonhosted.org/packages/5b/5e/675b9a47e8fd57dd702158e580ad2106b0628f7655901cfffa4ff4fd40c1/python-mlb-statsapi-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "",
            "author_email": "Matthew Spah <spahmatthew@gmail.com>, Kristian Nilssen <krinilssen@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "Copyright (c) 2018 The Python Packaging Authority Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "python-mlb-statsapi",
            "package_url": "https://pypi.org/project/python-mlb-statsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/python-mlb-statsapi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/zero-sum-seattle/python-mlb-statsapi/issues",
                "Homepage": "https://github.com/zero-sum-seattle/python-mlb-statsapi"
            },
            "release_url": "https://pypi.org/project/python-mlb-statsapi/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "mlbstatsapi python wrapper",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16078703,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "db83e54be34dcccc2043f8e74b90ac38",
                    "sha256": "4e395df35438d38c61527eea4f192083b537d7d6353b9b1c3e94cf02dddf6d0c"
                },
                "downloads": -1,
                "filename": "python_mlb_statsapi-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "db83e54be34dcccc2043f8e74b90ac38",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 55103,
                "upload_time": "2022-10-27T22:07:40",
                "upload_time_iso_8601": "2022-10-27T22:07:40.259347Z",
                "url": "https://files.pythonhosted.org/packages/46/d7/f67273809dd72491a61e661e41a111b3000d0b97f2564858e4fc247283ae/python_mlb_statsapi-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "221f296fd91afa0a95861bdf080652ae",
                    "sha256": "620eb734580e8fa8d61264ef9b89fe0c80237b554e0914f1dd65c02606f370ef"
                },
                "downloads": -1,
                "filename": "python-mlb-statsapi-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "221f296fd91afa0a95861bdf080652ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 33677,
                "upload_time": "2022-10-27T22:07:41",
                "upload_time_iso_8601": "2022-10-27T22:07:41.474502Z",
                "url": "https://files.pythonhosted.org/packages/9f/44/39f9ea0e1dc3d78e4036dc3b91fb7219bf18f804a765c33946c232a7751c/python-mlb-statsapi-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.9": {
        "info": {
            "author": "",
            "author_email": "Matthew Spah <spahmatthew@gmail.com>, Kristian Nilssen <krinilssen@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "<div align=\"center\">\n\n# Python MLB Stats API\n\n**The Unofficial Python Wrapper for the MLB Stats API**\n\n[![PyPI version](https://badge.fury.io/py/python-mlb-statsapi.svg)](https://badge.fury.io/py/python-mlb-statsapi)\n![Development Branch Status](https://github.com/zero-sum-seattle/python-mlb-statsapi/actions/workflows/build-and-test-mlbstatsapi-test.yml/badge.svg?event=push)\n![Periodic External Test Status](https://github.com/zero-sum-seattle/python-mlb-statsapi/actions/workflows/catch-and-report.yml/badge.svg?event=schedule)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/python-mlb-statsapi)\n![GitHub](https://img.shields.io/github/license/zero-sum-seattle/python-mlb-statsapi)\n\n<div align=\"left\">\n\n### *Copyright Notice*  \nThis package and its authors are not affiliated with MLB or any MLB team. This API wrapper interfaces with MLB's Stats API. Use of MLB data is subject to the notice posted at http://gdx.mlb.com/components/copyright.txt.\n\n###### This is an educational project so no commercial use. \n\n\n![MLB Stats API](https://user-images.githubusercontent.com/2068393/203456246-dfdbdf0f-1e43-4329-aaa9-1c4008f9800d.jpg)\n\n## Getting Started\n\n*Python-mlb-statsapi* is an unofficial MLB Stats API written in python 3.7+. It provides developers access to the MLB Stats API endpoint to pull information related to MLB Rosters, Teams, Players, stats and much more. All the information for getting started can be found in this README. However, a more detailed explanation can be found in our Docs section or in our Wiki.\n\n\n<div align=\"center\">\n\n### [Docs](https://github.com/zero-sum-seattle/python-mlb-statsapi/tree/development/docs) | [Examples](#examples) | [Wiki](https://github.com/zero-sum-seattle/python-mlb-statsapi/wiki) | [API](https://statsapi.mlb.com/) \n\n<div align=\"left\">\n\n## Installation\n```python\npython3 -m pip install -i https://test.pypi.org/simple/ python-mlb-statsapi\n```\n## Usage\n```python\npython3\n>>> mlb = mlbstatsapi.Mlb()\n>>> mlb.get_people_id(\"Ty France\")\n[664034]\n>>> stats = ['season', 'seasonAdvanced']\n>>> groups = ['hitting']\n>>> mlb.get_player_stats(664034, stats=stats, groups=groups)\n{'hitting': {'season': [HittingSeason], 'seasonadvanced': [HittingSeasonAdvanced] }}\n\n>>> mlb.get_team_id(\"Oakland Athletics\")\n[133]\n\n>>> stats = ['season', 'seasonAdvanced']\n>>> groups = ['pitching']\n>>> mlb.get_team_stats(133, stats, groups)\n{'pitching': {'season': [PitchingSeason], 'seasonadvanced': [PitchingSeasonAdvanced] }}\n```\n\n\n## Documentation\n\n### [People, Person, Players, Coaches](docs/people.md#class-mlb)\n* `Mlb.get_people_id(self, fullname: str, sport_id: int = 1, search_key: str = 'fullname', **params)` - Return Person Id(s) from fullname\n* `Mlb.get_person(self, player_id: int, **params)` - Return Person Object from Id\n* `Mlb.get_people(self, sport_id: int = 1, **params)` - Return all Players from Sport\n### [Draft](docs/drafts.md#class-mlb)\n* `Mlb.get_draft(self, year_id: int, **params)` - Return a draft for a given year\n### [Awards](docs/awards.md#class-mlb)\n* `Mlb.get_awards(self, award_id: int, **params)` - Return rewards recipinets for a given award\n### [Teams](docs/teams.md#class-mlb)\n* `Mlb.get_team_id(self, team_name: str, search_key: str = 'name', **params)` - Return Team Id(s) from name\n* `Mlb.get_team(self, team_id: int, **params)` - Return Team Object from Team Id\n* `Mlb.get_teams(self, sport_id: int = 1, **params)` - Return all Teams for Sport\n* `Mlb.get_team_coaches(self, team_id: int, **params)` - Return coaching roster for team for current or specified season\n* `Mlb.get_team_roster(self, team_id: int, **params)` - Return player roster for team for current or specified season\n### [Stats](docs/stats.md#class-mlb)\n* `Mlb.get_player_stats(self, person_id: int, stats: list, groups: list, **params)` - Return stats by player id, stat type and groups\n* `Mlb.get_team_stats(self, team_id: int, stats: list, groups: list, **params)` - Return stats by team id, stat types and groups\n* `Mlb.get_stats(self, stats: list, groups: list, **params: dict)` - Return stats by stat type and group args\n* `Mlb.get_players_stats_for_game(self, person_id: int, game_id: int, **params)` - Return player stats for a game\n### [Gamepace](#gamepace-examples)\n* `Mlb.get_gamepace(self, season: str, sport_id=1, **params)` - Return pace of game metrics for specific sport, league or team.\n### [Venues](docs/venues.md#class-mlb)\n* `Mlb.get_venue_id(self, venue_name: str, search_key: str = 'name', **params)` - Return Venue Id(s)\n* `Mlb.get_venue(self, venue_id: int, **params)` - Return Venue Object from venue Id\n* `Mlb.get_venues(self, **params)` - Return all Venues\n### [Sports](docs/sports.md#class-mlb)\n* `Mlb.get_sport(self, sport_id: int, **params)` - Return a Sport object from Id\n* `Mlb.get_sports(self, **params)` - Return all teams for Sport Id\n* `Mlb.get_sport_id(self, sport_name: str, search_key: str = 'name', **params)`- Return Sport Id from name\n### [Schedules](docs/schedules.md#class-mlb)\n* `Mlb.get_schedule(self, date: str, start_date: str, end_date: str, sport_id: int, team_id: int, **params)` - Return a Schedule\n### [Divisions](docs/divisions.md#class-mlb)\n* `Mlb.get_division(self, division_id: int, **params)` - Return a Divison \n* `Mlb.get_divisions(self, **params)` - Return all Divisions\n* `Mlb.get_division_id(self, division_name: str, search_key: str = 'name', **params)` - Return Division Id(s) from name\n### [Leagues](docs/leagues.md#class-mlb)\n* `Mlb.get_league(self, league_id: int, **params)` - Return a League from Id\n* `Mlb.get_leagues(self, **params)` - Return all Leagues\n* `Mlb.get_league_id(self, league_name: str, search_key: str = 'name', **params)` - Return League Id(s)\n### [Seasons](docs/seasons.md#class-mlb)\n* `Mlb.get_season(self, season_id: str, sport_id: int = None, **params)` - Return a season\n* `Mlb.get_seasons(self, sportid: int = None, **params)` - Return all seasons\n### [Standings](docs/standings.md#class-mlb)\n* `Mlb.get_standings(self, league_id: int, season: str, **params)` - Return standings\n### [Schedules](#schedule-examples)\n* `Mlb.get_schedule(self, date: str = None, start_date: str = None, end_date: str = None, sport_id: int = 1, team_id: int = None, **params)` - Return a Schedule from dates\n* `Mlb.get_scheduled_games_by_date(self, date: str = None,start_date: str = None, end_date: str = None, sport_id: int = 1, **params)` - Return game ids from dates\n### [Games](docs/games.md#class-mlb)\n* `Mlb.get_game(self, game_id: int, **params)` - Return the Game for a specific Game Id\n* `Mlb.get_game_play_by_play(self, game_id: int, **params)` - Return Play by play data for a game\n* `Mlb.get_game_line_score(self, game_id: int, **params)` - Return a Linescore for a game\n* `Mlb.get_game_box_score(self, game_id: int, **params)` - Return a Boxscore for a game\n\n## Examples\n\nLet's show some examples of getting stat objects from the API. What is baseball with out stats right?\n\n### MLB Stats\n\n#### Player Stats\nGet the Id(s) of the players you want stats for and set stat types and groups.\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> player = mlb.get_player_id(\"Ty France\")\n>>> types = ['season', 'career']\n>>> groups = ['hitting', 'pitching']\n```\nUse player.id and stat types and groups to return a stats dictionary\n```python\n>>> stat_dict = mlb.get_player_stats(player.id, stats=types, groups=groups )\n>>> season_hitting_stat = stat_dict['hitting']['season']\n>>> career_pitching_stat = stat_dict['pitching']['career']\n```\nPrint season hitting stats\n```python\n>>> for attribute, value in season_hitting_stat.stat.__dict__.items():\n...     print(attribute, value)\n>>>\n```\n#### Team stats\nGet the Team Id(s)\n```python\npython3\n>>> mlb = mlbstatsapi.Mlb()\n>>> team = mlb.get_team_id('Seattle Mariners')\n>>> print(team.id)\n[136]\n```\nSet the stat types and groups.\n```python\n>>> types = ['season', 'seasonAdvanced']\n>>> groups = ['hitting']\n```\nUse team.id and the stat types and groups to return season hitting stats\n```python\nstats = mlb.get_team_stats(team.id, stats=types, groups=groups)\nseason_hitting = stats['hitting']['season']\nadvanced_hitting = stats['hitting']['seasonadvanced']\n```\nPrint season and seasonadvanced stats\n```python\n>>> for attribute, value in season_hitting.stat.__dict__.items():\n...     print(attribute, value)\n>>>\n... for attribute, value in advanced_hitting.stat.__dict__.items():\n>>>     print(attribute, value)\n```\n### More stats examples\n#### Expected Stats\nGet player Id's\n```python\n>>> player = mlb.get_player_id('Ty France')\n```\nSet the stat type and group\n```python\n>>> stats = ['expectedStatistics']\n>>> group = ['hitting']\n```\nGet Stats\n```python\n>>> stats = mlb.get_player_stats(player, stats=stats, groups=group)\n>>> expectedstats = stats['hitting']['expectedstatistics']\n```\n#### vsPlayer\nGet pitcher and batter player Ids\n```\n>>> hitter = mlb.get_player_id('Ty France')\n>>> pitcher = mlb.get_player_id('Shoei Ohtani')\n```\nSet stat type, stat groups, and params\n```\n>>> stats = ['vsPlayer']\n>>> group = ['hitting']\n>>> params = {'opposingPlayerId': pitcher.id}\n```\nGet stats\n```\n>>> stats = self.mlb.get_player_stats(self.ty_france, stats=self.stats, groups=self.group, **self.params)\n```\n#### hotColdZones\nGet player Id's\n```python\n>>> hitter = mlb.get_player_id('Ty France')\n>>> pitcher = mlb.get_player_id('Shoei Ohtani')\n```\nSet the stat types and groups\n```python\n>>> type = ['hotColdZones']\n>>> hitting_group = ['hitting']\n>>> pitching_group = ['pitching']\n```\nThe stat groups pitching and hitting both return hotColdZones for a pitcher and hitter. hotColdZones are not assigned to a\nstat group because of issues related to the REST API. So hotColdZones will be assigned to the stat key in stats return dict.\n```python\n>>> hitting_hotcoldzones = mlb.get_player_stats(hitter.id, stats=type, groups=hitting_group)\n>>> pitching_hotcoldzones = mlb.get_player_stats(pitcher.id, stats=type, groups=pitching_group)\n```\nhotColdZones returns a list of the HotColdZones\n```python\n>>> ty_france_hotcoldzones = hitting_hotcoldzones['stats']['hotcoldzones'][0]\n>>> shoei_ohtani_hotcoldzones = pitching_hotcoldzones['stats']['hotcoldzones'][0]\n```\nLoop through the hotColdZone objects for Ty France\n```python\n>>> for zone in ty_france_hotcoldzones:\n>>>     print(zone.zone)\n>>>     print(zone.value)\n>>>             \n```\nLoop through the hotColdZone objects for Shoei Ohtani\n```python\n>>> for zone in shoei_ohtani_hotcoldzones:\n>>>     print(zonecodes.zone)\n>>>     print(zonecodes.value)\n>>>\n```\n#### Passing params\nGet Team Ids\n```python\npython3\n>>> mlb = mlbstatsapi.Mlb()\n>>> team = mlb.get_team_id('Seattle Mariners')\n```\nSet the stat types and groups.\n```python\n>>> types = ['season', 'seasonAdvanced']\n>>> groups = ['hitting']\n```\nPass season to get_team_stats()\n```python\nstats = mlb.get_team_stats(team.id, stats=types, groups=groups, season=2018)\n\nseason_hitting = stats['hitting']['season']\nadvanced_hitting = stats['hitting']['seasonadvanced']\n```\nseason should be 2018\n```python\nassertEqual(season_hitting.season == 2018)\nassertEqual(advanced_hitting.season == 2018)\n```\n\n### Gamepace examples\nGet pace of game metrics for specific sport, league or team.\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> season = 2021\n>>> gamepace = mlb.get_gamepace(season)\n```\n\n### Schedule Examples\nGet a schedule for given date\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> schedule = mlb.get_schedule_date('2022-10-13')\n```\nGet ScheduleDates from Schedule\n```python\ndates = schedule.dates\n```\nPrint Game status and Home and Away Teams\n```python\n>>> for date in dates:\n...     for game in date.games:\n...             print(game.status)\n...             print(game.teams.home)\n...             print(game.teams.away)\n```\n### Game Examples\nGet a Game for a given game id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> game = mlb.get_game(662242)\n```\nGet the weather for a game for a given game id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> game = mlb.get_game(662242)\n>>> weather = game.gamedata.weather\n>>>\n>>> print(weather.condition)\n>>> print(weather.temp)\n>>> print(weather.wind)\n```\nGet the current status of a game for a given game id\n```python\n>>> mlb = mlbstatsapi.mlb()\n>>> game = mlb.get_game(662242)\n>>>\n>>> linescore = game.livedata.linescore\n>>> hometeaminfo = game.gamedata.teams.home\n>>> awayteaminfo = game.gamedata.teams.away\n>>> hometeamstatus = linescore.teams.home\n>>> awayteamstatus = linescore.teams.away\n>>>\n>>> print(\"home: \", hometeaminfo.franchisename, hometeaminfo.clubname)\n>>> print(\"      runs:\", hometeamstatus.runs)\n>>> print(\"      hits:\", hometeamstatus.hits)\n>>> print(\"      errors:\", hometeamstatus.errors)\n>>> print(\"away: \", awayteaminfo.franchisename, awayteaminfo.clubname)\n>>> print(\"      runs:\", awayteamstatus.runs)\n>>> print(\"      hits:\", awayteamstatus.hits)\n>>> print(\"      errors:\", awayteamstatus.errors)\n>>> print(\"\")\n>>> print(\"inning:\", linescore.inninghalf, linescore.currentinningordinal)\n>>> print(\"balls:\", linescore.balls)\n>>> print(\"strikes:\", linescore.strikes)\n>>> print(\"Outs:\", linescore.outs)\n```\nGet the play by play, line score, and box score objects from a game\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> game = mlb.get_game(662242)\n>>>\n>>> play_by_play = game.livedata.plays\n>>> line_score = game.livedata.linescore\n>>> box_score = game.livedata.boxscore\n```\n#### Play by Play\nGet only the play by play for a given game id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> playbyplay = mlb.get_play_by_play(662242)\n```\n#### Line Score\nGet only the line score for a given game id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> linescore = mlb.get_line_score(662242)\n```\n#### Box Score\nGet only the box score for a given game id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> boxscore = mlb.get_box_score(662242)\n```\n\n### People Examples\nGet all Players for a given sport id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> sport_id = mlb.get_sport_id()\n>>> players = mlb.get_players(sport_id=sport_id)\n>>> for player in players:\n...     print(player.id)\n```\nGet a player id\n```python\n>>> player_id = mlb.get_player_id(\"Ty France\")\n>>> print(player_id[0])\n```\n\n### Team Examples\nGet a Team\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> team_ids = mlb.get_team_id(\"Seattle Mariners\")\n>>> team_id = team_ids[0]\n>>> team = mlb.get_team(team_id.id)\n>>> print(team.id)\n>>> print(team.name)\n```\nGet a Player Roster\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> team_id = 133\n>>> players = mlb.get_team_roster(team_id)\n>>> for player in players:\n        print(player.jerseynumber)\n```\nGet a Coach Roster\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> team_id = 133\n>>> coaches = mlb.get_team_coaches(team_id)\n>>> for coach in coaches:\n        print(coach.title)\n```\n\n### Draft Examples\nGet a draft for a year\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> draft_year = '2019'\n>>> draft = mlb.get_draft(draft_year)\n```\nGet Players from Draft\n```python\n>>> draftpicks = draft[0].picks\n>>> for draftpick in draftpicks:\n...     print(draftpick.id)\n...     print(draftpick.pickround)\n```\n\n### Award Examples\nGet awards for a given award id\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> retiredjersy = self.mlb.get_awards(award_id='RETIREDUNI_108')\n>>> for recipient in retiredjersy.awards:\n...     print (recipient.player.nameFirstLast, recipient.name, recipient.date)\n```\n\n### Venue Examples\nGet a Venue\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> vevue_ids = mlb.get_venue_id('PNC Park')\n>>> venue_id = venue_ids[0]\n>>> venue = mlb.get_team(venue.id)\n>>> print(venue.id)\n>>> print(venue.name)\n```\n\n### Sport Examples\nGet a Sport\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> sport_ids = mlb.get_sport_id('Major League Baseball')\n>>> sport_id = sport_ids[0]\n>>> sport = mlb.get_sport(sport_id)\n```\n\n### Division Examples\nGet a division\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> division = mlb.get_division(200)\n>>> print(division.name)\n```\n\n### League Examples\nGet a league\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> league = mlb.get_league(103)\n>>> print(league.name)\n```\n\n### Season Examples\nGet a Season\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> season = mlb.get_season(2018)\n>>> print(season.seasonid)\n```\n\n### Standings Examples\nGet a Standings\n```python\n>>> mlb = mlbstatsapi.Mlb()\n>>> standings = mlb.get_standings(103, 2018)\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "Copyright (c) 2018 The Python Packaging Authority  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
            "maintainer": "",
            "maintainer_email": "",
            "name": "python-mlb-statsapi",
            "package_url": "https://pypi.org/project/python-mlb-statsapi/",
            "platform": null,
            "project_url": "https://pypi.org/project/python-mlb-statsapi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/zero-sum-seattle/python-mlb-statsapi/issues",
                "Homepage": "https://github.com/zero-sum-seattle/python-mlb-statsapi"
            },
            "release_url": "https://pypi.org/project/python-mlb-statsapi/0.3.9/",
            "requires_dist": [
                "requests (>=2)",
                "requests-mock (>=1.10.0)"
            ],
            "requires_python": ">=3.7",
            "summary": "mlbstatsapi python wrapper",
            "version": "0.3.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16078703,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d0714a57c785bdea53411a464c18e8c9",
                    "sha256": "ac59c59f79f80ce3bb366655e3f628e05598159416364951222bdf435622e1ca"
                },
                "downloads": -1,
                "filename": "python_mlb_statsapi-0.3.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d0714a57c785bdea53411a464c18e8c9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 83537,
                "upload_time": "2022-12-12T20:45:46",
                "upload_time_iso_8601": "2022-12-12T20:45:46.270614Z",
                "url": "https://files.pythonhosted.org/packages/b1/d6/04eac321c46de0d2101f050ebcaed366015b3c4a19f56e6aa4d1aa5f8b17/python_mlb_statsapi-0.3.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "64e6aac754ce778d14cce6a4edb8d8fd",
                    "sha256": "520992c9c8f83c5a52811c935daf7cbb3c4750670d47ca9aa35100a06f877bad"
                },
                "downloads": -1,
                "filename": "python-mlb-statsapi-0.3.9.tar.gz",
                "has_sig": false,
                "md5_digest": "64e6aac754ce778d14cce6a4edb8d8fd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 60871,
                "upload_time": "2022-12-12T20:45:48",
                "upload_time_iso_8601": "2022-12-12T20:45:48.055243Z",
                "url": "https://files.pythonhosted.org/packages/2d/38/54dc34a2aa57c79b9425a5e9db0d7a03314fbcc496b50233b63914036bae/python-mlb-statsapi-0.3.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}