{
    "2.0.0": {
        "info": {
            "author": "VeteranCode",
            "author_email": "jacob.h.barrow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Penguin-Services\n[![Test Coverage](https://img.shields.io/badge/Test%20Coverage-100%25-success)](https://github.com/jacob-h-barrow/Penguin-Services)\n[![Security](https://img.shields.io/badge/Secure-True-informational)](https://github.com/jacob-h-barrow/Penguin-Services)\n[![Platform](https://img.shields.io/badge/Platform-Ubuntu%2020%2B-critical)](https://github.com/jacob-h-barrow/Penguin-Services)\n[![Python Version](https://img.shields.io/badge/Python-3.8%2B-critical)](https://github.com/jacob-h-barrow/Penguin-Services)\n[![MIT License](https://img.shields.io/badge/License-MIT-lightgrey)](https://github.com/jacob-h-barrow/Penguin-Services/blob/main/Penguin-Services.png)\n\n![Penguin-Services](https://user-images.githubusercontent.com/112576275/190166942-016ed0cc-e11c-4db5-8d09-40d5f894d6f1.png)\n\n- Created By Jacob H Barrow\n\n## Why Was It Created\n- Every time I start a new project, it seems that I reuse a lot of the same tools.\n- Ideally, this package would be a one-stop shop for all of my projects moving forward.\n\n## Critical Installation\n``` console\npenguin@services:~$ sudo apt install net-tools\n```\n\n## Short Tutorial\n``` python\n>>> from PenguinServices import DateRangeGenerator, Find, Terminal, makeFolder, getDate, fileHasher, Identifiers, openFile, pathExists, verifyFolder\n>>> # Linux alternatives are untested at the moment\n>>> # Examples but not all shown\n>>>\n>>> forward = DateRangeGenerator(15, 1, 2022, count=78)\n>>> backwards = DateRangeGenerator(15, 1, 2022, count=78, forward = False)\n>>> \n>>> for day in forward:\n>>>   print(day, end=\", \")\n>>>\n>>> for day in backwards:\n>>>   print(day, end=\", \")\n>>>\n>>> # Runs faster than find across a user directory. Still need to work out the code for dirSearch. Once that is solved, the code should be as fast as find for all scenarios.\n>>> # Experimental Option to make fileOptions provided by os.stat(path)\n>>> flatFiles = Find(\"/home/fox/Desktop/\", patterns = [r'^.*[.]py$'], patternThreshold = 100, ignoreHidden = True)\n>>> flatFiles() # get a list of files that were found\n>>>\n>>> makeFolder(\"/home/fox/LOG_STORAGE/\")\n>>> pathExists(\"/home/fox/\")\n>>> verifyFolder(\"/home/fox\")\n>>> data = openFile(\"/home/fox/test.txt\", splitLines = False)/\n>>>\n>>> # Terminal is experimental right now\n>>> ## Will be used like this\n>>> funcObjs = {idx: funcObj for idx, funcObj in enumerate([*funcObjs])}\n>>> shell = Terminal(funcObjs, prompt = \"Example@Linux$ \", errorMessage = \"Not heard!\")\n>>> shell.start()\n>>>\n>>> # Experimental right now: Identifiers, Terminal\n```\n\n### GetFiles\n- It's a replacement for find in Unix, but it will have more features\n- This code snippet will be crucial for modernizing SELinux, the firewall project next month, etc.\n- Still a prototype!!!\n\n## When Will More Tools Be Available\n- When I need a custom utility that is not available with this package it will be developed and uploaded.\n\n## Frequency Of Development\n- When my wife is at work I am developing. So close to six days a week!!\n\n## Remember\n- If you find this package helpful, follow mascots and join Dumbledore's Army!\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Penguin-Services",
            "package_url": "https://pypi.org/project/Penguin-Services/",
            "platform": null,
            "project_url": "https://pypi.org/project/Penguin-Services/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/Penguin-Services/2.0.0/",
            "requires_dist": [
                "dataclasses"
            ],
            "requires_python": "",
            "summary": "",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15960367,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3311e57136a6f95f500782db240e96d0",
                    "sha256": "fb16a4e6a983f8641e893ba6877f415355418ffe04e1fb8186f2bf3951147a9a"
                },
                "downloads": -1,
                "filename": "Penguin_Services-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3311e57136a6f95f500782db240e96d0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9933,
                "upload_time": "2022-12-01T20:36:25",
                "upload_time_iso_8601": "2022-12-01T20:36:25.284009Z",
                "url": "https://files.pythonhosted.org/packages/ab/c4/b92ee142b0805d6e5a3cfbbe51ac939a05f593283393b57dcba4a442d555/Penguin_Services-2.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}