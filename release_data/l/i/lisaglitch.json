{
    "1.2.1": {
        "info": {
            "author": "Jean-Baptiste Bayle",
            "author_email": "j2b.bayle@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# LISA Glitch\n\n[![pipeline status](https://gitlab.in2p3.fr/lisa-simulation/glitch/badges/master/pipeline.svg)](https://gitlab.in2p3.fr/lisa-simulation/glitch/-/commits/master)\n[![DOI](https://zenodo.org/badge/doi/10.5281/zenodo.6452904.svg)](https://doi.org/10.5281/zenodo.6452904)\n\nLISA Glitch is a Python package that generates glitch files compatible with [LISA Instrument](https://gitlab.in2p3.fr/lisa-simulation/instrument) and [LISANode](https://gitlab.in2p3.fr/j2b.bayle/LISANode). A glitch files contain one or more signals, which are injected in the instrumental simulation at various injections points (see below).\n\n* **Documentation for the latest stable release is available at <https://lisa-simulation.pages.in2p3.fr/glitch>**\n* Documentation for the current development version is available at <https://lisa-simulation.pages.in2p3.fr/glitch/master>\n\n## Contributing\n\n### Report an issue\n\nWe use the issue-tracking management system associated with the project provided by Gitlab. If you want to report a bug or request a feature, open an issue at <https://gitlab.in2p3.fr/lisa-simulation/glitch/-/issues>. You may also thumb-up or comment on existing issues.\n\n### Development environment\n\nWe strongly recommend to use [Python virtual environments](https://docs.python.org/3/tutorial/venv.html).\n\nTo setup the development environment, use the following commands:\n\n```shell\ngit clone git@gitlab.in2p3.fr:lisa-simulation/glitch.git\ncd glitch\npython -m venv .\nsource ./bin/activate\npython -m pip install --upgrade pip\npython -m pip install -r requirements.txt\n```\n\n### Workflow\n\nThe project's development workflow is based on the issue-tracking system provided by Gitlab, as well as peer-reviewed merge requests. This ensures high-quality standards.\n\nIssues are solved by creating branches and opening merge requests. Only the assignee of the related issue and merge request can push commits on the branch. Once all the changes have been pushed, the \"draft\" specifier on the merge request is removed, and the merge request is assigned to a reviewer. He can push new changes to the branch, or request changes to the original author by re-assigning the merge request to them. When the merge request is accepted, the branch is merged onto master, deleted, and the associated issue is closed.\n\n### Pylint and unittest\n\nWe enforce [PEP 8 (Style Guide for Python Code)](https://www.python.org/dev/peps/pep-0008/) with Pylint syntax checking, and correction of the code using the [pytest](https://docs.pytest.org/) testing framework. Both are implemented in the continuous integration system.\n\nYou can run them locally\n\n```shell\npylint lisaglitch/*.py\npython -m pytest\n```\n\n## Acknowledgements\n\nThe implementation of the flow, which is used for learning and sampling from the LISA Pathfinder distribution, is heavily based on the [neural spline flows](https://arxiv.org/abs/1906.04032) implementation provided by the authors: [nsflows](https://github.com/bayesiains/nflows) and also its orignal implentation: [nsf](https://github.com/bayesiains/nsf).\nWith some simplifications borrowed from [here](https://github.com/karpathy/pytorch-normalizing-flows) and [here](https://github.com/tonyduan/normalizing-flows/blob/master/nf/flows.py).\n\n## Use policy\n\nThere are currently no licenses associated with this project. However, we would like to foster open science in our community and share common tools. To this end, **we are making LISA Glitch available for full members of the [LISA Consortium](https://www.elisascience.org) to use in their research free of charge**.\n\nHowever, please keep in mind that developing and maintaining such a tool takes time and effort. Therefore, we would appreciate to be associated with you research.\n\n* Please cite the DOI (see badge above) and acknowledge the authors (below) in any publication\n* Do not hesitate to send an email for support and collaboration\n\n## Contact\n\n* Jean-Baptiste Bayle (j2b.bayle@gmail.com)\n* Eleonora Castelli (eleonora.castelli@nasa.gov)\n* Natalia Korsakova (korsakova@apc.in2p3.fr)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.in2p3.fr/lisa-simulation/glitch",
            "keywords": "",
            "license": "BSD-3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lisaglitch",
            "package_url": "https://pypi.org/project/lisaglitch/",
            "platform": null,
            "project_url": "https://pypi.org/project/lisaglitch/",
            "project_urls": {
                "Homepage": "https://gitlab.in2p3.fr/lisa-simulation/glitch"
            },
            "release_url": "https://pypi.org/project/lisaglitch/1.2.1/",
            "requires_dist": [
                "h5py",
                "numpy",
                "scipy",
                "matplotlib",
                "torch",
                "importlib-resources",
                "importlib-metadata"
            ],
            "requires_python": ">=3.7",
            "summary": "LISA Glitch generates glitch files to be injected in the instrument simulation with LISANode.",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15955312,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d3db60e301e0f2a825e9261e9fe2155a",
                    "sha256": "69fa69aa05b7ab705dd7c0b0720f5d19b5e5a47e84c36a3fffb291de34ad5e4b"
                },
                "downloads": -1,
                "filename": "lisaglitch-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d3db60e301e0f2a825e9261e9fe2155a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 26664,
                "upload_time": "2022-12-01T13:37:04",
                "upload_time_iso_8601": "2022-12-01T13:37:04.419775Z",
                "url": "https://files.pythonhosted.org/packages/67/12/122aed98d9af44e40ade08f904536563acde5df9ceb23554623968d79e5b/lisaglitch-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5c583befd2773c4a73188865ed548513",
                    "sha256": "22991c306725a6b15c81639b3a191be5882ae460a83cc1e867b8c58128146048"
                },
                "downloads": -1,
                "filename": "lisaglitch-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5c583befd2773c4a73188865ed548513",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 26634,
                "upload_time": "2022-12-01T13:37:06",
                "upload_time_iso_8601": "2022-12-01T13:37:06.086941Z",
                "url": "https://files.pythonhosted.org/packages/d6/df/d82b88824d4245f45bb3ac971b202356f39ff5dad6cad3dee63f2d6ce0a6/lisaglitch-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}