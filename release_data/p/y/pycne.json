{
    "0.1": {
        "info": {
            "author": "Adri\u00e1n Fern\u00e1ndez",
            "author_email": "48542598+fckingadrien@users.noreply.github.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "\ufeff<p align=\"center\">\n  <img width=\"275\" height=\"150\" src=\"https://i.imgur.com/Ta3Fx7Q.png \">\n</p>\n\n# PyCNE 0.1\n**PyCNE** es una librer\u00eda de Python que permite consultar f\u00e1cilmente informaci\u00f3n del Registro Electoral de Venezuela, extrayendo datos de la web oficial del CNE.\n\n## Instalaci\u00f3n\n\n Puedes instalar PyCNE utilizando el instalador de paquetes [pip](https://pip.pypa.io/en/stable/).\n```bash\npip install PyCNE\n```\n\n## Uso\nUna aplicaci\u00f3n sencilla de PyCNE se ver\u00eda as\u00ed:\n```python\nimport PyCNE\n\nconsulta = PyCNE.consulta('V',12345678)\n\nprint(consulta.info)\n```\n**\u00bfQu\u00e9 acabamos de hacer?**\n\n 1. Importamos la librer\u00eda a nuestro script.\n 2. Creamos una instancia de la **clase consulta** *(ver m\u00e1s abajo)*.\n 3. Imprimimos en pantalla la variable `consulta.info` para mostrar los datos obtenidos.\n\nA continuaci\u00f3n encontrar\u00e1s m\u00e1s informaci\u00f3n al respecto:\n\n### La clase consulta\nEs la clase principal del m\u00f3dulo PyCNE, al inicializar realiza una consulta \u2014tal como su nombre indica\u2014 a la web con los datos proporcionados. Por tanto, para poder extraer cualquier informaci\u00f3n, necesitaremos **crear una instancia** de esta clase.\n\n**Sintaxis:**\n```python\nconsulta = PyCNE.consulta(nacionalidad, cedula[,opciones])\n```\n**Par\u00e1metros:**\n| Nombre | Tipo | Descripci\u00f3n | Valor por defecto |\n|:---:|:---:|:---:|:---:|\n| ***nacionalidad*** | str | El prefijo correspondiente a la c\u00e9dula  a consultar. Acepta los valores **V** (venezolano) y **E** (extranjero).  | No tiene un valor por defecto. Es obligatorio especificarlo.\n| ***cedula*** | int | El n\u00famero de c\u00e9dula a consultar.| No tiene un valor por defecto. Es obligatorio especificarlo.\n| ***altmode*** | bool | Modo alternativo *(ver m\u00e1s abajo)*. |Por defecto es `False`\n| ***base_url*** | str | La URL base a la cual se realizar\u00e1 la consulta|`http://www.cne.gob.ve/...`\n\n### Modos de consulta\nExisten dos formas de extraer los datos: \n\n - El **modo normal** \u2014la manera m\u00e1s sencilla, r\u00e1pida y precisa\u2014 funciona a trav\u00e9s de la librer\u00eda *BeautifulSoup*. Se obtienen los datos realizando una b\u00fasqueda a partir de las etiquetas HTML y se a\u00f1aden a las variables correspondientes.\n - El **modo alternativo**, que no depende de la librer\u00eda *BeautifulSoup*, extrae el contenido de la consulta y elimina (mediante expresiones regulares) la informaci\u00f3n no deseada, para posteriormente separar los datos y a\u00f1adirlos a sus respectivas variables. \nGeneralmente, este modo es m\u00e1s lento y engorroso. Por tanto, no es recomendable usarlo a no ser que exista alg\u00fan problema que impida utilizar el modo normal.\n\n### \u00bfC\u00f3mo acceder a la informaci\u00f3n? (Variables)\nUna vez se crea la instancia, los datos de la consulta son almacenados en distintas variables. Para acceder a ellas debemos llamarlas utilizando la misma instancia que creamos previamente.\n\n| Variable | Tipo | Contenido | Ejemplo\n|:---:|:---:|:---:|:---:|\n| ***cedula*** | str | C\u00e9dula de la consulta realizada.  | `V-12345678`|\n| ***nombre*** | str | Nombre correspondiente a la c\u00e9dula.|`MARCOS EVANGELISTA P\u00c9REZ JIM\u00c9NEZ`|\n| ***estado*** | str | Estado del centro. |`DTTO. CAPITAL`|\n| ***municipio*** | str | Municipio del centro.|`MP. BLVNO LIBERTADOR`|\n| ***parroquia*** | str | Parroquia del centro.|`PQ. SUCRE`|\n| ***centro*** | str | Centro de votaci\u00f3n.|`COLEGIO DE CARACAS`|\n| ***direcci\u00f3n*** | str | Direcci\u00f3n del centro.|`SECTOR XXX AVENIDA XXX CALLE XXX`|\n\nAdicionalmente, toda la informaci\u00f3n de la consulta es recogida dentro de un diccionario de Python, de manera que se pueda acceder a ella con mayor facilidad:\n| Variable | Tipo | Descripci\u00f3n |\n|:---:|:---:|:---:|\n| ***info*** | dict* | Diccionario que contiene todas las variables anteriores.*|\n| ***info_json*** | json string | Similar a la variable **info**, pero en formato JSON.|  \n###### * de usarse la *clase multi*, la variable `info` pasar\u00eda de ser un diccionario a ser una *lista de diccionarios*.\n\n**Ejemplos:**\n```python\nimport PyCNE\n\nconsulta = PyCNE.consulta('V',12345678)\n\nprint(consulta.cedula)\n# Resultado: V-12345678\n\nprint(consulta.nombre)\n# Resultado: MARCOS EVANGELISTA P\u00c9REZ JIM\u00c9NEZ\n\nprint(consulta.info)\n# Resultado: {'cedula':'V-12345678',\n#\t\t\t  'nombre':'MARCOS EVANGELISTA P\u00c9REZ JIM\u00c9NEZ',\n#\t\t\t  'estado':'DTTO. CAPITAL',\n#\t\t\t  'municipio':'MP. BLVNO LIBERTADOR',\n#\t\t\t  'parroquia':'PQ. SUCRE',\n#\t\t\t  'centro':'COLEGIO DE CARACAS',\n#\t\t\t  'direccion':'SECTOR XXX AVENIDA XXX CALLE XXX'}\n```\n\n### La clase multi\nA veces, es necesario realizar el proceso con m\u00e1s de una c\u00e9dula. La **clase multi** es una clase hija de la *clase consulta*, que nos permitir\u00e1 consultar m\u00faltiples c\u00e9dulas sin la necesidad de crear infinitas instancias de la clase padre. \n\nEsta clase tomar\u00e1 las c\u00e9dulas de una **lista** y asignar\u00e1 los resultados a la variable `info` anteriormente mencionada, esta vez como una **lista de diccionarios** *(ver ejemplo m\u00e1s abajo)*.\n\n**Sintaxis:**\n```python\nconsulta = PyCNE.consulta.multi(cedulas[,opciones])\n```\n**Par\u00e1metros:**\n| Nombre | Tipo | Descripci\u00f3n | Valor por defecto |\n|:---:|:---:|:---:|:---:|\n| ***cedulas*** | list | Lista que contiene todas las c\u00e9dulas a consultar, en el formato: `V-123456789` o `E-123456789`| No tiene un valor por defecto. Es obligatorio especificarlo.\n| ***altmode*** | bool | Modo alternativo *(ver arriba)*. |Por defecto es `False`\n| ***base_url*** | str | La URL base a la cual se realizar\u00e1 la consulta|`http://www.cne.gob.ve/...`\n\n**Ejemplo:**\n```python\nimport PyCNE\n\ncedulas = ['V-12345678','V-87654321']\n\nconsulta = PyCNE.consulta.multi(cedulas)\n\nprint(consulta.info)\n```\nEl resultado de esta funci\u00f3n **print** ser\u00eda:\n```python\n[{'cedula':'V-12345678',\n'nombre':'MARCOS EVANGELISTA P\u00c9REZ JIM\u00c9NEZ',\n'estado':'DTTO. CAPITAL',\n'municipio':'MP. BLVNO LIBERTADOR',\n'parroquia':'PQ. SUCRE',\n'centro':'COLEGIO DE CARACAS',\n'direccion':'SECTOR XXX AVENIDA XXX CALLE XXX'},\n\n{'cedula':'V-87654321',\n'nombre':'JOS\u00c9 GREGORIO HERN\u00c1NDEZ CISNEROS',\n'estado':'TRUJILLO',\n'municipio':'MP. ANDR\u00c9S BELLO',\n'parroquia':'PQ. LA ESPERANZA',\n'centro':'COLEGIO DE TRUJILLO',\n'direccion':'SECTOR XXX AVENIDA XXX CALLE XXX'}]\n```\n## Errores y excepciones\n\n### Exception: La c\u00e9dula no se encuentra inscrita en el CNE (Error 0)\nEsta excepci\u00f3n ocurre cuando la c\u00e9dula consultada es una expresi\u00f3n v\u00e1lida, pero no aparece en los registros del CNE, por lo que es imposible extraer cualquier informaci\u00f3n.\n\nHabitualmente, detendr\u00eda el flujo de ejecuci\u00f3n; sin embargo, pueden ser ignoradas o tratadas mediante [try y except](https://docs.python.org/es/3/tutorial/errors.html).\n\n**IMPORTANTE:** Cuando esta excepci\u00f3n ocurre en una instancia de la **clase multi**, no se detiene el programa. El flujo de ejecuci\u00f3n contin\u00faa y las c\u00e9dulas que no se encuentran registradas se almacenan en una **lista**, a la cual se puede acceder a trav\u00e9s de las siguientes variables:\n| Variable | Tipo | Descripci\u00f3n |\n|:---:|:---:|:---:|\n| ***errors*** | list | Lista que contiene todas las c\u00e9dulas que no se encuentran registradas en el CNE.|\n| ***errors_json*** | json string | Similar a la variable **errors**, pero en formato JSON.|  \n\n**Ejemplo:**\n```python\nprint(consulta.errors)\n# Resultado: ['V-00000000','V-00000001']\n```\n\n### ConnectionError: No se ha podido establecer la conexi\u00f3n con el servidor (Error 1)\nEste error ocurre cuando no se logra llevar a cabo la consulta debido a problemas con la conexi\u00f3n, o a que la URL es incorrecta. \nEn este \u00faltimo caso, quiz\u00e1 ser\u00eda conveniente colocar la URL apropiada mediante el par\u00e1metro `base_url` en ambas clases. De lo contrario, no es recomendable alterar dicho valor.\n\n### Exception: Los par\u00e1metros de la consulta est\u00e1n vac\u00edos (Error 2)\nEsta excepci\u00f3n aparece cuando se lleva a cabo una consulta m\u00faltiple utilizando una lista vac\u00eda como par\u00e1metro.\n\n## Contribuciones\n\nLas contribuciones son bienvenidas. Si observas alg\u00fan problema o bug, o deseas sugerir alg\u00fan cambio, \u00a1si\u00e9ntete libre de comentarlo en la secci\u00f3n correspondiente!\n\n## Importante\n Toda la informaci\u00f3n que se puede extraer con esta librer\u00eda es **p\u00fablica**; sin embargo, no nos hacemos responsables por el uso que se le de a esta herramienta.\n \n## Licencia\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/fckingadrien",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "PyCNE",
            "package_url": "https://pypi.org/project/PyCNE/",
            "platform": "",
            "project_url": "https://pypi.org/project/PyCNE/",
            "project_urls": {
                "Homepage": "https://github.com/fckingadrien"
            },
            "release_url": "https://pypi.org/project/PyCNE/0.1/",
            "requires_dist": [
                "beautifulsoup4 (>=4.10.0)"
            ],
            "requires_python": "",
            "summary": "Librer\u00eda que permite consultar f\u00e1cilmente informaci\u00f3n del CNE (Venezuela)",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12555755,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4966c609c29b9a98698f7db4a4955e2e",
                    "sha256": "8e9ddd0d7a233427984a60f44f851e5a7fb32d456d5139b1b2d1a12a830952f8"
                },
                "downloads": -1,
                "filename": "PyCNE-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4966c609c29b9a98698f7db4a4955e2e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5857,
                "upload_time": "2022-01-12T23:59:04",
                "upload_time_iso_8601": "2022-01-12T23:59:04.070330Z",
                "url": "https://files.pythonhosted.org/packages/c4/1e/568bfcc3b0326c1f60c658edbc11bf1ddfc5d5ea9011ff212791a1e1bbc7/PyCNE-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7150c8969e1529f9bb168c4a0474a884",
                    "sha256": "d6d9d271e806d55f3295dd557876aab2680bb69461ae1fe6ca599afdaaca549e"
                },
                "downloads": -1,
                "filename": "PyCNE-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "7150c8969e1529f9bb168c4a0474a884",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6314,
                "upload_time": "2022-01-12T23:59:05",
                "upload_time_iso_8601": "2022-01-12T23:59:05.486470Z",
                "url": "https://files.pythonhosted.org/packages/27/ae/1e117fa6dc0a07be8c1a418190aa3f0393d2cb41daa233f47d1a1193ab74/PyCNE-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}