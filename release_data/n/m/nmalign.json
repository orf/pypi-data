{
    "0.0.1": {
        "info": {
            "author": "Robert Sachunsky",
            "author_email": "sachunsky@informatik.uni-leipzig.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bertsky/nmalign",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nmalign",
            "package_url": "https://pypi.org/project/nmalign/",
            "platform": null,
            "project_url": "https://pypi.org/project/nmalign/",
            "project_urls": {
                "Homepage": "https://github.com/bertsky/nmalign"
            },
            "release_url": "https://pypi.org/project/nmalign/0.0.1/",
            "requires_dist": [
                "rapidfuzz",
                "numpy",
                "click",
                "ocrd"
            ],
            "requires_python": "",
            "summary": "forced alignment of lists of string by fuzzy string matching",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15643270,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0f430d937024208ed8f90bf59251066f",
                    "sha256": "1c3a71b9b754b4ebdc16a9a1120b79c7768baf35efaaa8a4ec651300b6e642a2"
                },
                "downloads": -1,
                "filename": "nmalign-0.0.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0f430d937024208ed8f90bf59251066f",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 19519,
                "upload_time": "2022-05-09T16:59:14",
                "upload_time_iso_8601": "2022-05-09T16:59:14.682910Z",
                "url": "https://files.pythonhosted.org/packages/3c/0d/4ba4af97603d070aee963901a25826ee97668e3575ce86ce6a53ea5ca3b7/nmalign-0.0.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Robert Sachunsky",
            "author_email": "sachunsky@informatik.uni-leipzig.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bertsky/nmalign",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nmalign",
            "package_url": "https://pypi.org/project/nmalign/",
            "platform": null,
            "project_url": "https://pypi.org/project/nmalign/",
            "project_urls": {
                "Homepage": "https://github.com/bertsky/nmalign"
            },
            "release_url": "https://pypi.org/project/nmalign/0.0.2/",
            "requires_dist": [
                "rapidfuzz",
                "numpy",
                "click",
                "ocrd"
            ],
            "requires_python": "",
            "summary": "forced alignment of lists of string by fuzzy string matching",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15643270,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d37a62f07b64e96d608742fcc256c29c",
                    "sha256": "b37b796ae80e0b1c524278824c99560b722747829de5cf7c58443e5f9cec7907"
                },
                "downloads": -1,
                "filename": "nmalign-0.0.2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d37a62f07b64e96d608742fcc256c29c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 20233,
                "upload_time": "2022-10-19T17:59:57",
                "upload_time_iso_8601": "2022-10-19T17:59:57.954852Z",
                "url": "https://files.pythonhosted.org/packages/06/93/731579e2ebe70a9726f12dfcfb46466a1c3f20d34f25f1898705c937f0b7/nmalign-0.0.2-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bce0f5c85ebf6d5ff1c596add3bb72d4",
                    "sha256": "027e056089f12dcd089510be91d5db8c548639aca2f3c57a11471e58a83ab80b"
                },
                "downloads": -1,
                "filename": "nmalign-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "bce0f5c85ebf6d5ff1c596add3bb72d4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14698,
                "upload_time": "2022-10-19T17:59:59",
                "upload_time_iso_8601": "2022-10-19T17:59:59.933466Z",
                "url": "https://files.pythonhosted.org/packages/90/61/7fdd0c4b52d858a27ecaacc4473da53c7e10a22d6bfc0dfe832f61f3c3f9/nmalign-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Robert Sachunsky",
            "author_email": "sachunsky@informatik.uni-leipzig.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "[![PyPI version](https://badge.fury.io/py/nmalign.svg)](https://badge.fury.io/py/nmalign)\n\n# nmalign\n\n    forced alignment of lists of string by fuzzy string matching\n    \n  * [Introduction](#introduction)\n  * [Installation](#installation)\n  * [Usage](#usage)\n     * [standalone command-line interface nmalign](#standalone-command-line-interface-nmalign)\n     * [OCR-D processor interface ocrd-nmalign-merge](#ocr-d-processor-interface-ocrd-nmalign-merge)\n  * [Implementation](#implementation)\n\n## Introduction\n\nThis offers **forced alignment** of textlines by fuzzy string matching.\n(The implementation is based on [rapidfuzz cdist](https://maxbachmann.github.io/RapidFuzz/Usage/process.html#cdist).)\n\nIt combines all pairs of strings (i.e. text lines) from either side,\ncalculates their edit distance (assuming some of them are very similar),\nand assigns a mapping from one side to the other by iteratively\nselecting those pairs which have the next-smallest distance (and taking\nthem out of the search). \n\nThe mapping is not necessarily injective or surjective\n(because segments may be split or not match at all).\n\nThis can be used in OCR settings to align (pages or) lines when you have different\nsegmentation. For example, often ground truth data is only transcribed on\nthe page level, but OCR results are available on the line level with precise\ncoordinates. If GT and OCR text are close enough to each other, you could then\nmap the GT text to the predicted coordinates.\n\nIt offers:\n- an API (`nmalign.match`)\n- a standalone CLI (for strings / text files / list files)\n- an [OCR-D](https://ocr-d.de) compliant [workspace processor](https://ocr-d.de/en/spec/cli) (for [METS-XML](https://ocr-d.de/en/spec/mets)/[PAGE-XML](https://github.com/PRImA-Research-Lab/PAGE-XML) documents)\n\n\n## Installation\n\nCreate and activate a [virtual environment](https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments) as usual.\n\nTo install Python dependencies:\n\n    pip install -r requirements.txt\n\nTo install this module (along with Python dependencies), do:\n\n    pip install .\n\n## Usage\n\n### standalone command-line interface `nmalign`\n\n\n```\nUsage: nmalign [OPTIONS]\n\n  Force-align two lists of strings.\n\n  Computes string alignments between each pair among l1 and l2 (after optionally\n  normalising both sides).\n\n  Then iteratively searches the next closest pair, while trying to maintain\n  local monotonicity.\n\n  If splits are allowed and the score is already low, then searches for more\n  matches among l1 for the pair's right side sequence: If any subset of them can\n  be combined into a path such that the sum score is better than the integral\n  score, then prefers those assignments.\n\n  Stores the assigned result as a mapping from l1 to l2. (Unmatched or cut off\n  elements will be assigned -1.)\n\n  Prints the corresponding list indices and match scores [0.0,1.0] as CSV data.\n  (For subsequences, the start and end position will be appended.)\n\nlist to be replaced: [exactly 1 required]\n  --strings1 TUPLE               as strings\n  --files1 TUPLE                 as file paths of strings\n  --filelist1 FILENAME           as text file with file paths of strings\n\nlist of replacements: [exactly 1 required]\n  --strings2 TUPLE               as strings\n  --files2 TUPLE                 as file paths of strings\n  --filelist2 FILENAME           as text file with file paths of strings\n\nOther options:\n  -j, --processes INTEGER RANGE  number of processes to run in parallel\n                                 [1<=x<=32]\n  -N, --normalization TEXT       JSON object with regex patterns and\n                                 replacements to be applied before comparison\n  -x, --allow-splits             find multiple submatches if replacement scores\n                                 low\n  -s, --show-strings             print strings themselves instead of indices\n  -f, --show-files               print file names themselves instead of indices\n  -S, --separator TEXT           print this string between result columns\n                                 (default: tab)\n  --help                         Show this message and exit.\n```\n\nFor example:\n\n<details><summary>file input, index output</summary>\n<p>\n\n```\nnmalign --files1 GT.SELECTED/FILE_0094_*.gt.txt --files2 GT/FILE_0094_*.gt.txt\n0    -1    0.0\n1    -1    0.0\n2    0    91.78082\n3    1    100.0\n4    2    90.90909\n5    3    95.945946\n6    4    95.588234\n7    5    89.85507\n8    6    92.64706\n9    7    92.10526\n10    8    93.84615\n11    9    89.61039\n12    10    89.85507\n13    11    89.189186\n14    12    92.0\n15    13    96.969696\n16    14    95.38461\n17    15    90.41096\n18    16    91.25\n19    17    96.1039\n20    18    95.89041\n21    19    93.50649\n22    20    93.333336\n23    21    92.68293\n24    22    88.6076\n25    23    95.652176\n26    24    92.85714\n27    25    71.014496\n28    26    92.753624\n29    27    94.5946\n30    28    80.0\n31    29    89.393936\n32    30    83.333336\n33    31    97.01492\n34    32    94.366196\n35    33    89.333336\n36    34    100.0\n37    35    95.588234\n38    36    92.0\n39    37    87.5\n40    38    91.54929\n41    39    92.85714\n42    40    90.0\n```\n\n</p>\n</details>\n<details><summary>file input, string output</summary>\n<p>\n\n```\nzo \u017fo wbohim wotpalenym we jich nuzy a p\u017fchi natwarjenju ze w\u017fch\u011bch \u017ftro\u2e17\tzo \u017fo wbohim wotpalenym we jih nuzy a pihi natwarjenju ze w\u017fchech ftro-\t91.78082\nnow a podwolnje pomha\u017fche.\tnow a podwolnje pomha\u017fche.\t100.0\nWe l\u011bc\u017ae w\u00f3jny mjez pru\u017fkim kralom a raku\u017fkim kh\u011b\u017eorom 1866 na 13.\tWe l\u00f6cze w\u00f6jny mjez pru\u017fkim kralom a raku\u017ftim khezorom 1866 na 13.\t90.90909\njanuara rano we 4 hod\u017ainach wozjewi \u017fo we drjewjanej kh\u011b\u017ecy we Filipsdorfu\tjanuara rano we 4 hodzinach wozjewi \u017fo we drjewjanej khezcy we Filipsdorfu\t95.945946\npola Rumburka Mac\u017a Bo\u017ea khorej knje\u017enje Madlenje Kadec, jej prajicy:\tpola Rumburka Macz Boza khorej knjeznje Madlenje Kadec, jej prajicy:95.588234\n\u201eMoje d\u017a\u011bc\u017ao, z n\u011btka za\u017eije\" (twoja bolaca rana). We Filipsdorfu na\u2e17\t\u201eMoje dz\u00e9czo, z n\u00e9tka zazije\u201c (twoja bolaca rana). We Filipsdorfu na-\t89.85507\ntwari \u017fo wot l\u011bta 1870 z darow pobo\u017enych w\u011briwych wulka rjana cyrkej\ttwari \u017fo wot leta 1870 z darow pobozuych weriwych wulka rjana eyrkej92.64706\na Serbja k \u017fwj. Marji tam rad puc\u017auja.\ta Serbja \u00c9 fwj. Marji tam rad puczuja.\t92.10526\nDo Rumburka (1 hod\u017ainu wot Filipsdorfa daloko) Serbja hi\u017eom dl\u011bhe\tDo Rumburka (1 hodjinu wot Filipsdorfa daloko) Serbia hijom dlehe\t93.84615\nhac\u017e 100 l\u011bt na porciunkulu (na 1. a 2. augu\u017fc\u017ae) k kapucinarjam z proce\u017f\u017fio\u2e17\thaci 100 \u017fet na porciunkulu (na 1. a 2. auqu\u017fcze) \u00c9 kapucinarjam z proce\u017f\u017fiv-\t89.61039\nnom khod\u017aa: do \u017ftareje a noweje Krupki we C\u017eechach (k c\u017ae\u0155pjacomu J\u011b\u2e17\tnom khodja: do \u017ftareje a noweje Krupki we Czechach (f czetpjacomu J\u00e8-\t89.85507\nzu\u017fej na \u017fwjatym \u017fkhod\u017ae a k bolo\u017fc\u017aiwej Mac\u017aeri Bo\u017eej) dw\u00f3jcy za l\u011bto, na\tzu\u017fej na \u017fwjatym \u017fkhodze a \u00c9 bolo\u017fcziwej Maczeri Bozej) dw\u00f6jcy za Leto, na\t89.189186\n\u017fwjatki a na \u017fwj. d\u017ae\u0144 Marijnoho naroda (8. \u017feptembra), te\u017e tak do\u0142ho. Pr\u011b\u2e17\t\u017fwjatki a na fwj. dze\u00fc Marijnoho naroda (8. \u017feptembra), te\u017e tak dolho. Pre-\t92.0\nnja \u017ferb\u017fka putnica do Krupki b\u011b w\u011b\u017fta Korchowa z Nowo\u017flic (1754).\tnja \u017ferb\u017fka putnica do Krupki be we\u017fta Korchowa z Nowo\u017flic (1754).\t96.969696\nHdy\u017e we \u017feptembrje 1865 \u017ferb\u017fki proce\u017f\u017fion do Krupki d\u017a\u011b\u017fche a do\tHdyi we \u017feptembrje 1865 \u017ferb\u017fki proce\u017f\u017fion do Krupki dze\u017fche a do\t95.38461\nm\u011b\u017ftac\u017eka Gottleuby p\u017fchi\u0144d\u017ae, hanjachu a wu\u017fm\u011bchowachu pobo\u017enych Serbow.\tmi\u017ftaczka Gottleuby p\u017fchindze, hanjachu a wu\u017fm\u00e4chowachu pobozuych Serbow.\t90.41096\nKr\u00f3tki c\u017eas na to, na 4. oktobrje 1865, wulki d\u017a\u011bl m\u011b\u017ftac\u017eka \u017fo wotpali. M\u0142yn\u017fki\tKr\u00f3tki czas na to, na 4. oktobrje 1865, wulki dzel m\u00e9\u017ftaczka \u017fo wotpali. Mtyn\u017fei\t91.25\nmi\u017fchtr k. Jurij Wawrik z Khanjec, kotry\u017e b\u011b p\u017fchi proce\u017f\u017fionje poby\u0142, nahro\u2e17\tmi\u017fchtr k. Jurij Wawrik z Khanjec, kotryz be p\u017fchi proce\u017f\u017fionje pobyk, nahro\u2e17\t96.1039\nmad\u017ai za wotpalenych mjez Serbami 110 toleri a p\u017fchip\u00f3\u017f\u0142a je do Gottleuby\tmadzi za wotpalenych mjez Serbami 110 toleri a p\u017fchip\u00f6\u017fta je do Gottleuby\t95.89041\nz li\u017ftom: \u201eDar lubo\u017fc\u017ae za wotpalenych wot kathol\u017fkich Serbow, ki\u017e k\u00f3\u017ede l\u011bto\tz li\u017ftom: \u201eDar lubo\u017fcze za wotpalenych wot kathol\u017fkich Serbow, kiz k\u00f6zde l\u00e9to\t93.50649\np\u017fchez Gottleubu do Krupki puc\u017auja.\" Hdy\u017e \u017ferb\u017fki proce\u017f\u017fion we \u017fc\u017aehowacym\tp\u017fchez Gottleubu do Krupki puczuja.\u201c Hdyz \u017ferb\u017fki proce\u017f\u017fion we \u017fczehowaeym\t93.333336\nl\u011bc\u017ae 1866 \u017fo za\u017fy Gottleubje p\u017fchibli\u017ei, c\u017aehnjechu jomu m\u011b\u017fchc\u017aano\u017fta, luther\u017fki\tl\u00e9cze 1866 \u017fo za\u017fy Gottleubje p\u017fchiblizi, czehnjechu jomu me\u017fchczano\u017fta, luther\u017fki\t92.68293\nduchowny a \u017fchul\u017fke d\u017a\u011bc\u017ai nap\u017fchec\u017ao, powitachu j\u00f3n luboznje z ryc\u017eu a z kh\u011br\u2e17\tduchowny a \u017fchul\u017fke dz\u1ebdczi nap\u017fcheczo, powitachu j\u00f3n luboznje 3 ryczu a 3 kher\u2014\t88.6076\nlu\u017fchom a pod\u017aakowachu \u017fo za do\u017ftaty pjenje\u017eny dar. Knj. Jurij Wawrik\tlu\u017fchom a podzakowachu \u017fo za do\u017ftaty pjenjezuy dar. Knj. Jurij Wawrik\t95.652176\nnahromad\u017ai te\u017e we l\u011bc\u017ae 1865 mjez Serbami 60 toleri na wobnowjenjo Ma\u2e17\tnahromadzi te} we lecze 1865 mjez Serbami 60 toleri na wobnowjenjo Ma-\t92.85714\nrijnoho wo\u0142tarja we far\u017fkej cyrkwi w Krupcy. \u2014 T\u00f3n\u017famyn J. Wawrik na\u2e17\trijnoho woktarja we far\u017fkej cyrkwi w Krupcy. \u2014 T\u00f3n\t71.014496\ntwari z kublerjom Jakubom Kocorom na puc\u017au mjez Khanjecami a Swinja\u0155\u2e17\ttwari 3 kublerjom Jakubom Kocorom na puczu miez Khanjecami a Swinjat-\t92.753624\nnju rjanu kapa\u0142ku, kotru\u017e kniez bi\u017fkop Ludwik Forwerk na 9. \u017feptembra 1870\tnju riann kapalku, kotruz kniez bi\u017fkop Ludwik Forwerk na 9. \u017feptembra 1870\t94.5946\nwo\u017fwjec\u017ai.\two\u017fwieczi.\t80.0\n1866 zawjed\u017aechu \u017fo we Kulow\u017fkej \u017far\u017fkej cyrkwi mej\u017fke pobo\u017eno\u017fc\u017ae\t1866 zawjedzechu \u017fo we Kulow\u017fkej far\u017fkej eyrkwi mej\u017fke poboznofeze\t89.393936\nk c\u017ee\u017fc\u017ai Mac\u017aeri Bo\u017eej.\tk cze\u017fczi Maczeri Bozej.\t83.333336\n1867 na 10. novembra za\u0142o\u017ei knj. tachant\u017fki vikar Jakub Hermann (we\t1867 na 10. novembra zakozi knj. tachant\u017fki vikar Jakub Hermann (we97.01492\nw\u00f3jnje 1866 kathol\u017fki p\u00f3lny kap\u0142an pola \u017fak\u017fkoho w\u00f3j\u017ftwa) kathol\u017fke to\u2e17\tw\u00f6jnje 1866 kathol\u017fki p\u00f6lny kaplan pola \u017fak\u017fkoho w\u00f6j\u017ftwa) kathol\u017fke to\u2e17\t94.366196\nwar\u017ftwo rjemje\u017f\u0142ni\u017fkich we Budy\u017fchinje, kotre\u017e po t\u017fj\u00f3ch l\u011btach rjanu kh\u011b\u017eu\twar\u017ftwo rjemje\u017fkni\u017fkich we Budy\u017fchinje, kotrez po t\u017fj\u00f6ch Itah rjanu khezu\t89.333336\nna garbar\u017fkej ha\u017fy kupi.\tna garbar\u017fkej ha\u017fy kupi.\t100.0\nPo po\u017ftajenju \u017fak\u017fkoho mini\u017fter\u017ftwa \u017fo wot l\u011bta 1868 m\u011b\u017fto Budy\u017fchin\tPo po\u017ftajenju \u017fak\u017ftoho mini\u017fter\u017ftwa \u017fo wot leta 1868 me\u017fto Budy\u017fchin95.588234\nn\u011bm\u017fki wjacy njemjenuje \u201eBudi\u017f\u017fin\", ale \u201eBautzen\".\tn\u00e4m\u017fti wjacy njemjenuje \u201eBudi\u017f\u017fin\u201c, ale \u201eBautzen\u201c.\t92.0\nNa k\u00f3ncu l\u011bta 1867 p\u0142ac\u017ae\u017fche k\u00f3rc p\u017fche\u0144cy 7 tol. 7\u00bd n\u017fl.; ro\u017eki 3 tol.\tNa k\u00f6ncu l\u00e9ta 1867 placze\u017fche k\u00f6re p\u017fche\u00fccy 7 tol. 7\u00bd u\u017fl.; rozki 3 tol.\t87.5\n20 n\u017fl.; jec\u017emjenja 2 tol. 25 n\u017fl.; wow\u017fa 2 tol. 10 n\u017fl.; jah\u0142ow 7 tol.\t20 ufl.; jeczmjenja 2 tol. 25 u\u017fl.; wow\u017fa 2 tol. 10 u\u017fl.; jahkow 7 tol.\t91.54929\n20 n\u017fl.; hejdu\u017fche 5 tol. 25 n\u017fl.; kana butry 22\u00bd n\u017fl. \u2014 Na k\u00f3ncu l\u011bta\t20 ufl.; hejdu\u017fche 5 tol. 25 n\u017fl.; kana butry 22\u00bd nfl. \u2014 Na k\u00f6ncu l\u00e9ta\t92.85714\n1868: k\u00f3rc p\u017fche\u0144cy 6 tol.; ro\u017eki 4 tol. 22\u00bd nfl.; jec\u017emjenja 4 tol.;\t1868: k\u00f6re p\u017fche\u00fccy 6 tol.; rozki 4 tol. 22 \u00bd n\u017fl.; jeczmjenja 4 tol.;\t90.0\n```\n\n</p>\n</details>\n<details><summary>file input, filename output</summary>\n<p>\n\n```\nnmalign -f --files1 GT.SELECTED/FILE_0094_*.gt.txt --files2 GT/FILE_0094_*.gt.txt\nGT.SELECTED/FILE_0094_GT.SELECTED_region0000_region0000_line0000.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0013.gt.txt\t0.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0002_region0002_line0000.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0013.gt.txt\t0.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0000.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0013.gt.txt\t0.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0001.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0001.gt.txt\t91.89189\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0002.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0002.gt.txt\t100.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0003.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0003.gt.txt\t91.04478\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0004.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0004.gt.txt\t96.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0005.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0005.gt.txt\t95.652176\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0006.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0006.gt.txt\t90.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0007.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0007.gt.txt\t92.753624\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0008.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0008.gt.txt\t92.30769\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0009.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0009.gt.txt\t93.93939\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0010.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0010.gt.txt\t89.74359\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0011.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0011.gt.txt\t90.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0012.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0012.gt.txt\t89.333336\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0013.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0013.gt.txt\t92.10526\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0014.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0014.gt.txt\t97.01492\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0015.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0015.gt.txt\t95.454544\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0016.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0016.gt.txt\t90.54054\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0017.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0017.gt.txt\t91.358025\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0018.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0018.gt.txt\t96.15385\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0019.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0019.gt.txt\t95.945946\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0020.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0020.gt.txt\t93.589745\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0021.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0021.gt.txt\t93.42105\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0022.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0022.gt.txt\t92.77109\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0023.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0023.gt.txt\t88.75\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0024.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0024.gt.txt\t95.71429\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0025.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0025.gt.txt\t92.95775\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0026.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0026.gt.txt\t71.42857\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0027.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0029.gt.txt\t92.85714\nGT.SELECTED/FILE_0094_GT.SELECTED_region0005_region0005_line0028.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0002_FILE_0094_CROPPED_region0002_line0030.gt.txt\t94.666664\nGT.SELECTED/FILE_0094_GT.SELECTED_region0011_region0011_line0000.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0001.gt.txt\t81.818184\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0000.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0002.gt.txt\t89.55224\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0001.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0003.gt.txt\t84.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0002.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0004.gt.txt\t97.05882\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0003.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0005.gt.txt\t94.44444\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0004.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0006.gt.txt\t89.47369\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0005.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0007.gt.txt\t100.0\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0006.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0008.gt.txt\t95.652176\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0007.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0009.gt.txt\t92.15686\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0008.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0010.gt.txt\t87.671234\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0009.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0011.gt.txt\t91.666664\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0010.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0012.gt.txt\t92.95775\nGT.SELECTED/FILE_0094_GT.SELECTED_region0012_region0012_line0011.gt.txt\tGT/FILE_0094_GT_FILE_0094_CROPPED_region0003_FILE_0094_CROPPED_region0003_line0013.gt.txt\t90.14085\n```\n\n</p>\n</details>\n\n### [OCR-D processor](https://ocr-d.de/en/spec/cli) interface `ocrd-nmalign-merge`\n\nTo be used with [PAGE-XML](https://github.com/PRImA-Research-Lab/PAGE-XML) documents in an [OCR-D](https://ocr-d.de/en/about) annotation workflow.\n\n```\nUsage: ocrd-nmalign-merge [OPTIONS]\n\n  forced alignment of lists of string by fuzzy string matching\n\n  > Force-align the textlines text of both inputs for each page, then\n  > insert the 2nd into the 1st.\n\n  > Find file pairs in both input file groups of the workspace for the\n  > same page IDs.\n\n  > Open and deserialize PAGE input files, then iterate over the element\n  > hierarchy down to the TextLine level, looking at each first\n  > TextEquiv. (If the second input has no TextLines, but newline-\n  > separated TextEquiv at the TextRegion level, then use these instead.\n  > If either side has no lines, then skip that page.)\n\n  > Align character sequences in all pairs of lines for any combination\n  > of textlines from either side.\n\n  > If ``normalization`` is non-empty, then apply each of these regex\n  > replacements to both sides before comparison.\n\n  > Then iteratively search the next closest match pair. Remember the\n  > assigned result as mapping from first to second fileGrp.\n\n  > When all lines of the second fileGrp have been assigned, or the\n  > ``cutoff_dist`` has been reached, apply the mapping by inserting\n  > each line from the second fileGrp into position 0 (and `@index=0`)\n  > at the first fileGrp. Also mark the inserted TextEquiv via\n  > `@dataType=other` and `@dataTypeDetails=GRP`.\n\n  > (Unmatched or cut off lines will stay unchanged, except for their\n  > `@index` now starting at 1.)\n\n  > If ``allow_splits`` is true, then for each long bad match, spend\n  > some extra time searching for subsegmentation candidates, i.e. a\n  > sequence of multiple lines from the first fileGrp aligning with a\n  > single line from the second fileGrp. When such a sequence outscores\n  > the bad match, prefer the concatenated sequence over the single\n  > match when inserting results.\n\n  > Produce a new PAGE output file by serialising the resulting\n  > hierarchy.\n\nOptions:\n  -I, --input-file-grp USE        File group(s) used as input\n  -O, --output-file-grp USE       File group(s) used as output\n  -g, --page-id ID                Physical page ID(s) to process\n  --overwrite                     Remove existing output pages/images\n                                  (with --page-id, remove only those)\n  --profile                       Enable profiling\n  --profile-file                  Write cProfile stats to this file. Implies --profile\n  -p, --parameter JSON-PATH       Parameters, either verbatim JSON string\n                                  or JSON file path\n  -P, --param-override KEY VAL    Override a single JSON object key-value pair,\n                                  taking precedence over --parameter\n  -m, --mets URL-PATH             URL or file path of METS to process\n  -w, --working-dir PATH          Working directory of local workspace\n  -l, --log-level [OFF|ERROR|WARN|INFO|DEBUG|TRACE]\n                                  Log level\n  -C, --show-resource RESNAME     Dump the content of processor resource RESNAME\n  -L, --list-resources            List names of processor resources\n  -J, --dump-json                 Dump tool description as JSON and exit\n  -D, --dump-module-dir           Output the 'module' directory with resources for this processor\n  -h, --help                      This help message\n  -V, --version                   Show version\n\nParameters:\n   \"normalization\" [object - {}]\n    replacement pairs (regex patterns and regex backrefs) to be applied\n    prior to matching (but not on the result itself)\n   \"allow_splits\" [boolean - false]\n    allow line strings of the first input fileGrp to be matched by\n    multiple line strings of the second input fileGrp (so concatenate\n    all the latter before inserting into the former)\n```\n\nFor example:\n\n<details><summary>file input, index output</summary>\n<p>\n\n```\nocrd-nmalign-merge -I OCR-D-OCR,OCR-D-GT-SEG-BLOCK -O OCR-D-GT-SEG-LINE\n```\n\n</p>\n</details>\n\n## Implementation\n\n1. set up a matrix of shape _N,M_ (where _N_ is the number of strings\non the left-hand side, and _M_ is the number of strings on the right-hand side)\nand compute all pairwise similarity scores \u2013 using `rapidfuzz.process.cdist`\nwith metric `rapidfuzz.metric.Levenshtein.normalized_similarity`,\nwhich efficiently calculates global alignments (Needleman-Wunsch) in parallel.\n\n2. iteratively assign pairs _i,j_ (effectively adding a mapping from _i_ to _j_)\nby picking the best scoring pair among the rows and columns not already assigned.\n\n### Consistency (monotonicity)\n\nNa\u00efvely, best score means largest similarity. But it is easier for a short pair\nto be similar by chance than for a long pair of strings. And we want to start\nwith pairs that most certainly belong to each other. So the similarity must be\n**weighted** with the length of the string in question.\n\nMoreover, since realistically two sets of texts will likely differ slightly in\ntheir global _reading order_, but (more or less) retain local _line segmentation_,\nwe prioritise solutions which maintain **monotonicity**. \n\nSince this criterion becomes more important as the matrix gets completed and the\nactual string alignments become worse (and thus less reliable), we attenuate\nthe preference towards monotonicity by a sigmoid over _M_.\n\n### Splitting (subalignment)\n\nSometimes even the local _line segmentation_ is not retained between both sets\nof texts. Thus, strings will appear split on one side. To address that, there\nis an option to allow **splitting** the right-hand side:\n\nIf (during step 2.) the score is already too low, then search all remaining rows\nfor partial matches against column _j_ \u2013 again using `cdist`, but now with metric\n`rapidfuzz.fuzz.partial_ratio`, which efficiently calculates local alignments\n(if not exactly Smith-Waterman) in parallel.\n\nNote that for a subsegmentation of that column, we need a **spanning sequence**\nof mutually **non-overlapping** matches across some matching rows. To that end,\nfor all matches _i_ above some threshold, now proceed to compute their exact\nsubalignments of the string in column _j_ (again in parallel), and store their\ndistances into a matrix of shape _L,L_ (where _L_ is the length of that string)\nwith the start position as row and the end position as column, respectively.\nLikewise, store row indexes into a sister matrix.\n\nNext, determine the **shortest path** through the distance matrix (spanning\nfrom _0,0_ to _L,L_ monotonically).\n(In order to accommodate the case where subalignment matches are not already\nspanning perfectly, the distance matrix is filled with default distances\ncorresponding to random deletions of characters.)\n\nBacktrack that path among both matrices to determine the overall score, the\nlocal scores and row indexes _i_, and the local column string positions.\nIf the overall score does improve the global score for _j_, then assign\nall rows _i_ to subslices of _j_, respectively. (Otherwise continue with\nthe global assignment.)\n\n## Open Tasks\n\nIt may help to offer some interface allowing an interactive UI in the loop.\n\nAlso, if OCR confidence data is available on the input, this should be utilised.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bertsky/nmalign",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nmalign",
            "package_url": "https://pypi.org/project/nmalign/",
            "platform": null,
            "project_url": "https://pypi.org/project/nmalign/",
            "project_urls": {
                "Homepage": "https://github.com/bertsky/nmalign"
            },
            "release_url": "https://pypi.org/project/nmalign/0.0.3/",
            "requires_dist": [
                "rapidfuzz (>=2.0)",
                "numpy",
                "scipy",
                "click",
                "cloup",
                "ocrd",
                "joblib"
            ],
            "requires_python": "",
            "summary": "forced alignment of lists of string by fuzzy string matching",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15643270,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5aadb0d5f4241e417561e2223d40d654",
                    "sha256": "5c44278df92afd5dbf099ce880f9725d9f7b4522be24c08587968e0368e1400a"
                },
                "downloads": -1,
                "filename": "nmalign-0.0.3-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5aadb0d5f4241e417561e2223d40d654",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 26026,
                "upload_time": "2022-11-03T15:31:03",
                "upload_time_iso_8601": "2022-11-03T15:31:03.745381Z",
                "url": "https://files.pythonhosted.org/packages/3a/d3/cb3fd12a0049225fb022530325b6a1c07760ebccc65e751dce996d3b53c1/nmalign-0.0.3-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ad03d45dc400cac882aa4857acbac9c4",
                    "sha256": "db565ab5fc9058a5e3cfbfb64b44a689191d18140fe48018f8faef90adeeb92c"
                },
                "downloads": -1,
                "filename": "nmalign-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ad03d45dc400cac882aa4857acbac9c4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19992,
                "upload_time": "2022-11-03T15:31:05",
                "upload_time_iso_8601": "2022-11-03T15:31:05.978867Z",
                "url": "https://files.pythonhosted.org/packages/44/a3/836bec91acae7c412e39c9c6c90ca43daaa7b1fd50285d92ff1631330513/nmalign-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}