{
    "0.1.0": {
        "info": {
            "author": "Jakob Leibetseder",
            "author_email": "leibetsederjakob@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Maydmor/pydantic-computed",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pydantic-computed",
            "package_url": "https://pypi.org/project/pydantic-computed/",
            "platform": null,
            "project_url": "https://pypi.org/project/pydantic-computed/",
            "project_urls": {
                "Homepage": "https://github.com/Maydmor/pydantic-computed",
                "Repository": "https://github.com/Maydmor/pydantic-computed"
            },
            "release_url": "https://pypi.org/project/pydantic-computed/0.1.0/",
            "requires_dist": [
                "pydantic (>=1.10.2,<2.0.0)",
                "setuptools (>=65.6.3,<66.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "A new decorator for pydantic allowing you to define dynamic fields that are computed from other properties",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15930430,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2eb1598564454fed6bbf33bfba382a8d",
                    "sha256": "fb6007800348d176947a8328283910f7ff5f9be1459127b896495391f3185219"
                },
                "downloads": -1,
                "filename": "pydantic_computed-0.1.0-1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2eb1598564454fed6bbf33bfba382a8d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 3812,
                "upload_time": "2022-11-29T16:42:57",
                "upload_time_iso_8601": "2022-11-29T16:42:57.586319Z",
                "url": "https://files.pythonhosted.org/packages/35/27/d0df4c026b6c99bf4228d2a6443c0859e83e853d2f42dc0a534709c93f32/pydantic_computed-0.1.0-1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "17dd7358b42578fdd85d70cc4b221892",
                    "sha256": "00d5e519e0c4260ebf95e0e409a95675460fe47fcefec7681c23dd3f6b1e6083"
                },
                "downloads": -1,
                "filename": "pydantic_computed-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "17dd7358b42578fdd85d70cc4b221892",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 2954,
                "upload_time": "2022-11-29T15:20:09",
                "upload_time_iso_8601": "2022-11-29T15:20:09.760581Z",
                "url": "https://files.pythonhosted.org/packages/07/89/c736c42f83e08010e08efb9ea8226f9047a450f1455246bfde54cda2e7ff/pydantic_computed-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b59bdaa36de981224140b5a73c62d8a7",
                    "sha256": "715ce09cbbde91e988b5d8d6c29147aed6952070f3b08ee3433761ef93ebc4cb"
                },
                "downloads": -1,
                "filename": "pydantic_computed-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b59bdaa36de981224140b5a73c62d8a7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 2333,
                "upload_time": "2022-11-29T15:20:11",
                "upload_time_iso_8601": "2022-11-29T15:20:11.748166Z",
                "url": "https://files.pythonhosted.org/packages/1f/d3/8a26e838b4f845852b24e021bc64a76551aba13d528e9322b5d046c50ef7/pydantic_computed-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Jakob Leibetseder",
            "author_email": "leibetsederjakob@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# pydantic-computed\nA new decorator for pydantic allowing you to define dynamic fields that are computed from other properties.\n\n## Installation\n\nInstall the package by running\n```bash\npip install pydantic_computed\n```\n\n## Examples and use cases\n\n### A computed integer property\n```python\nfrom pydantic import BaseModel\nfrom pydantic_computed import Computed, computed\n\nclass ExampleModel(BaseModel):\n    a: int\n    b: int\n    c: Computed[int]\n\n    @computed('c')\n    def calculate_c(a: int, **kwargs):\n        return a + 1\n\nmodel = ExampleModel(a=1, b=2)\nprint(model.c) # Outputs 2\n```\n\n### Multiple properties as parameters\n\n```python\nfrom pydantic import BaseModel\nfrom pydantic_computed import Computed, computed\n\nclass ExampleModel(BaseModel):\n    a: int\n    b: int\n    c: Computed[int]\n\n    @computed('c')\n    def calculate_c(a: int, b: int):\n        return a + 1\n\nmodel = ExampleModel(a=1, b=2)\nprint(model.c) # Outputs 2\n```\n\nSince all properties are passed as **kwargs to calculate_c, we can use the property names for the parameters\n\n### Automatic type conversion\n\n```python\nfrom pydantic import BaseModel\nfrom pydantic_computed import Computed, computed\n\nclass ExampleModel(BaseModel):\n    a: int\n    b: int\n    c: Computed[str]\n\n    @computed('c')\n    def calculate_c(a: int, b: int):\n        return a + b\n\nmodel = ExampleModel(a=1, b=2)\nprint(model.c) # Outputs '3' as string\n```\n\nAutomatic type conversion happens for the returned value\n\n### Complex types\n\nSuppose you set up a FastAPI application where you have users and orders stored in a database.\nAll Models in the database have an automatically generated id.\nNow you want to be able to dynamically generate links to those objects.\nE.g. the user with id=3 is accessible on the endpoint http://my-api/users/3\nInstead of storing those links in the database you can simply generate them with the computed decorator.\nexample: \n\n```python\nfrom pydantic import BaseModel, Field\nfrom pydantic_computed import Computed, computed\n\nclass Link(BaseModel):\n    href: str\n    method: str\n\nclass SchemaLinked(BaseModel):\n    id: int\n    base_url: str\n    link: Computed[Link]\n    @computed('link')\n    def compute_link( id: int, base_url: str):        \n        return Link(href=f'{base_url}/{id}', method='GET')\n\nclass User(SchemaLinked):\n    base_url: str = Field('/users', exclude=True)\n    username: str\n\nclass Order(SchemaLinked):\n    base_url: str = Field('/orders', exclude=True)\n    user: User\n\nuser = User(id=3, username='exampleuser') \nuser.json()\n\"\"\"\n{\n    id: 3,\n    username: \"exampleuser\",\n    link: {\n        href: \"/users/3\",\n        method: \"GET\"\n    }\n}\n\"\"\"\norder = Order(id=2, user=user)\norder.json()\n\"\"\"\n{\n    id: 2,\n    link: {\n        href: \"/orders/2\",\n        method: \"GET\"\n    },\n    user: {\n        id: 3,\n        username: \"exampleuser\",\n        link: {\n            href: \"/users/3\",\n            method: \"GET\"\n        }\n    }\n}\n\"\"\"\n``` \n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Maydmor/pydantic-computed",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pydantic-computed",
            "package_url": "https://pypi.org/project/pydantic-computed/",
            "platform": null,
            "project_url": "https://pypi.org/project/pydantic-computed/",
            "project_urls": {
                "Homepage": "https://github.com/Maydmor/pydantic-computed",
                "Repository": "https://github.com/Maydmor/pydantic-computed"
            },
            "release_url": "https://pypi.org/project/pydantic-computed/0.1.1/",
            "requires_dist": [
                "pydantic (>=1.10.2,<2.0.0)",
                "setuptools (>=65.6.3,<66.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "A new decorator for pydantic allowing you to define dynamic fields that are computed from other properties",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15930430,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9ed77260ca4b3afa4ce6a3d155b24954",
                    "sha256": "9cc3d635267dff306cf1da708582358ebe0f76ed11b1a1d550d37ef7e7c6852a"
                },
                "downloads": -1,
                "filename": "pydantic_computed-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9ed77260ca4b3afa4ce6a3d155b24954",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 3810,
                "upload_time": "2022-11-29T16:44:13",
                "upload_time_iso_8601": "2022-11-29T16:44:13.225358Z",
                "url": "https://files.pythonhosted.org/packages/8c/59/8e4cb1a92d82107d7c2bdfb61caf5c2b031a309d246f3721ac7d4655489f/pydantic_computed-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9b6bf1ff9f2c6094eb0bbd21cbcf7a9f",
                    "sha256": "54a03da6488369e633634dbe448ada01f7550da1bf838c5a5be0c43688c39be0"
                },
                "downloads": -1,
                "filename": "pydantic_computed-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9b6bf1ff9f2c6094eb0bbd21cbcf7a9f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 3863,
                "upload_time": "2022-11-29T16:44:14",
                "upload_time_iso_8601": "2022-11-29T16:44:14.835933Z",
                "url": "https://files.pythonhosted.org/packages/ea/0c/429710529f77cf750e089038024fd7012b96efb966e6b4853a3abcc8fbf3/pydantic_computed-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}