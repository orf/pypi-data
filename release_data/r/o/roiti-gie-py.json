{
    "0.0.1b0": {
        "info": {
            "author": "Roiti LTD",
            "author_email": "opensource@roiti.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# gie-py\n\nPython client for the ALSI/AGSI APIs\n\nDocumentation of the API can be found on: <https://www.gie.eu/transparency-platform/GIE_API_documentation_v007.pdf>\n\nDocumentation of the client API can be found on: <https://roiti-ltd.github.io/gie-py/>\n\n### Installation\n\n```sh\npython -m pip install gie-py\n```\n\n### Usage\n\nThe package is split in two clients:\n\n1. GieRawClient: Returns data in raw JSON format.\n2. GiePandasClient: Returns parsed data in the form of a pandas DataFrame.\n\n```python\nimport asyncio\n\nfrom gie.gie_pandas_client import GiePandasClient\nfrom decouple import config\n\n\nasync def main():\n    \"\"\"\n    The following methods return pandas DataFrame, however you can use the\n    raw client \"raw_client = GieRawClient(api_key=Your API key)\" and you will get the results as\n    JSON parsed to a Python Object\n    \n    NOTE that every method available for AGSI is also available for ALSI\n    \"\"\"\n    pandas_client = GiePandasClient(api_key=config(\"API_KEY\"))\n\n    # You can specify the country, start date, end date, size (the number of results) in order to get country storage\n    await pandas_client.query_country_agsi_storage(\"AT\", start=\"2020-01-01\", end=\"2022-07-10\", size=60)\n\n    # You can run the query without any parameters (in order to get all countries result)\n    await pandas_client.query_country_alsi_storage()\n\n    # You can use this query in order to get all AGSI/ALSI EICs (Energy Identification Code)\n    await pandas_client.query_alsi_eic_listing()\n    \n    # Query which lists all the ALSI/AGSI news (without params)\n    await pandas_client.query_alsi_news_listing()\n    \n    # Query which lists the news for a specific country (using the url code)\n    await pandas_client.query_alsi_news_listing(43419)\n    \n    # Query which lists the data for a current facility storage (provide the storage name and params)\n    await pandas_client.query_agsi_facility_storage(\"ugs_haidach_astora\", start=\"2022-10-10\")\n    \n    # You can list the data for a current storage only using its name\n    await pandas_client.query_alsi_facility_storage(\"dunkerque\")\n    \n    # Query which lists the data for a current company (also date and size are by choice)\n    await pandas_client.query_agsi_company(\"astora\", size=60)\n    await pandas_client.query_alsi_company(\"dunkerque_lng\", size=200)\n    \n    # Query which lists the unavailability for a current country (country name, date, size are optional)\n    await pandas_client.query_agsi_unavailability(\"GB\", size=60)\n    await pandas_client.query_agsi_unavailability()\n    await pandas_client.query_alsi_unavailability(\"FR\")\n\n    await pandas_client.close_session()\n\n\n# set_event_loop_policy method is used in order to avoid EventLoopError for Windows\nasyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())\nasyncio.run(main())\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "ppetrov@roiti.com, ntoshev@roiti.com",
            "name": "roiti-gie-py",
            "package_url": "https://pypi.org/project/roiti-gie-py/",
            "platform": null,
            "project_url": "https://pypi.org/project/roiti-gie-py/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/roiti-gie-py/0.0.1b0/",
            "requires_dist": [
                "aiohttp (<4.0.0,>=3.8.0)",
                "pandas (<2,>=1.0)",
                "typing-extensions (<5,>=4.2.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "A library to query ALSI/AGSI data",
            "version": "0.0.1b0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15506286,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ac7b0073b8535cdbedecf9425befe586",
                    "sha256": "565f56738d73ff49379574218315ee8b9081c674423c5ef390c9c9597104cf70"
                },
                "downloads": -1,
                "filename": "roiti_gie_py-0.0.1b0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ac7b0073b8535cdbedecf9425befe586",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 3138,
                "upload_time": "2022-10-24T07:23:46",
                "upload_time_iso_8601": "2022-10-24T07:23:46.694678Z",
                "url": "https://files.pythonhosted.org/packages/88/99/198a635e4c44a48a4734b4fc8329f76170a0602a6d60f3f40df734f9d99c/roiti_gie_py-0.0.1b0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9d0da078772675cbb37833c7509719c3",
                    "sha256": "de6eb3a2c89c9b063a1ae3fb9620699a02b1b61c79cf6a5b28843d6ccf41ffd1"
                },
                "downloads": -1,
                "filename": "roiti-gie-py-0.0.1b0.tar.gz",
                "has_sig": false,
                "md5_digest": "9d0da078772675cbb37833c7509719c3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 3337,
                "upload_time": "2022-10-24T07:23:49",
                "upload_time_iso_8601": "2022-10-24T07:23:49.292608Z",
                "url": "https://files.pythonhosted.org/packages/5c/d9/e02387c237210cfdd6eef0afb04bea62d61c2a8930cd64b4633ca2839a5c/roiti-gie-py-0.0.1b0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}