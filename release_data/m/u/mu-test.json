{
    "1.1.9": {
        "info": {
            "author": "Michael",
            "author_email": "muebele@arizona.edu",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# UA-Lims-Tools\n\nProvides 2 sets of tools for use with clarity and it's endpoints: ClarityTools\nand StepTools.\n\n## Motivation\n\nTo create a set of tools to assist in script writing for Clarity.\n\n## Features\n\nUse ClarityTools as a means of interfacing with Clarity and it's endpoints.\n\n* get_samples will get all samples from a list of uris passed in.\n\n* get_arts_from_samples will get all artifact uris for the list of uris passed.\n\n* get_udfs will find all the udfs that should be attached to target.\n\n* set_reagent_label will set the reagent_label for all artifacts passed.\n\n* step_router will route a list of artifact_uris to a specified step.Use StepTools as a way of interacting with a Clarity step.*\n\n* get_artifacts will return all artifacts from the step.\n\n* get_process_data will retrieve the process data for the current step.\n\n* get_artifact_map creates a mapping of input artifacts to output artifacts.\n\n* set_artifact_udf sets the udfs of all analytes in the step.\n\n* get_artifacts_previous_step will map the current steps artifact uris to an ancestor artifact from the step passed to it.\n\n* get_assays will find the assays within the current protocol.## Code Example\n\npython\nfrom ua_lims_tools import ua_lims_tools\nclarity_api = ua_lims_tools.ClarityApi()\nstep_api = ua_lims_tools.StepTools()\n\n## Installation\n\nbash\npip install ua-lims-tools\n\n## Tests\n\nbash\npip install --update nose\ncd ./repo\ncd ./tests\nnosetests test_lims_tools.py\n\n## How to Use\n\nExamples of syntax for each method\n\npython\nclarity_api = ua_lims_tools.ClarityApi()\nsamples = clarity_api.get_samples(uris)\n\n* get_samples gets the samples from the passed in uris.\n* Arguments: uris is a list of sample endpoints to get.\n* Returns: a list of Sample dataclass objects with gotten sample's data.\n\n## Credits\n\n[sterns1](https://github.com/sterns1)\n[raflopjr](https://github.com/raflopjr)\n[RyanJohannesBland](https://github.com/RyanJohannesBland)\n\n## LicenseMIT\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/UACoreFacilitiesIT/UA-Clarity-Tools",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mu-test",
            "package_url": "https://pypi.org/project/mu-test/",
            "platform": null,
            "project_url": "https://pypi.org/project/mu-test/",
            "project_urls": {
                "Homepage": "https://github.com/UACoreFacilitiesIT/UA-Clarity-Tools"
            },
            "release_url": "https://pypi.org/project/mu-test/1.1.9/",
            "requires_dist": [
                "requests",
                "bs4",
                "lxml",
                "jinja2",
                "ua-clarity-api",
                "nose",
                "dataclasses"
            ],
            "requires_python": "",
            "summary": "API that interacts with Illumina's Clarity LIMS software at a higher level than requests.",
            "version": "1.1.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15843795,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "607f7a1b82bcccd7e9adb71c840876f1",
                    "sha256": "4ffe302416bf13ae64c096870ac875823e01a2d29675636505a457aeeedf9678"
                },
                "downloads": -1,
                "filename": "mu_test-1.1.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "607f7a1b82bcccd7e9adb71c840876f1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12049,
                "upload_time": "2022-11-21T17:59:06",
                "upload_time_iso_8601": "2022-11-21T17:59:06.823858Z",
                "url": "https://files.pythonhosted.org/packages/ef/e5/5b1967ad6758b643bf9ab8507652e9cd91b324d94592731b74ed360c127a/mu_test-1.1.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "70dd318a13b1ee650ea5dd93ae3981ea",
                    "sha256": "bdb221c96fa0807eec460e8729c1dc50a80544be3513c7937eb87847cea4e010"
                },
                "downloads": -1,
                "filename": "mu_test-1.1.9.tar.gz",
                "has_sig": false,
                "md5_digest": "70dd318a13b1ee650ea5dd93ae3981ea",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11017,
                "upload_time": "2022-11-21T17:59:08",
                "upload_time_iso_8601": "2022-11-21T17:59:08.367817Z",
                "url": "https://files.pythonhosted.org/packages/ac/f1/1ee9f929c014e3631a568d8177a0b84720880121c358fbcb16b28892fcee/mu_test-1.1.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}