{
    "0.0.1": {
        "info": {
            "author": "Nagarajan Paramasivam",
            "author_email": "n.paramasivam@dkfz.de",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# smvplot\nsmvplot is a cmd line python tool to generate IGV-like screenshots.\n\n### Install\n - Clone the repository\n  ```\n  git clone https://github.com/NagaComBio/smvplot.git\n  ```\n - Use pip to install the local copy\n  ```\n  cd smvplot\n  pip install .\n  ```\n - Soon the package will be available via proper pip channel\n\n### Usage\n```\n$ smvplot --help\nusage: smvplot [-h] --bam_paths FILE --bam_names STR --ref FILE [--exclude_flag INT] [--map_quality INT] [--vcf FILE] [--bed FILE] [--annotations FILE] [--prefix PREFIX] [--window N] [--samtoolsbin N] [--tabixbin N]\n               [--plot_dir DIR]\n               [region]\n\nThis script generates a png file for each entry in a vcf file, a bed file or a manually specified region.\n\npositional arguments:\n  region              syntax either 'chr:start-end' or 'chr:center', use --vcf or --bed for more convenience\n\noptional arguments:\n  -h, --help          show this help message and exit\n  --bam_paths FILE    input list of bam files separated by comma. Maximum 3 BAM files\n  --bam_names STR     input list of names separated by comma. Same length as BAM files\n  --ref FILE          input reference genome file (fastq format)\n  --exclude_flag INT  Exclude the reads with corresponding SAM flags, [default = 3840]\n  --map_quality INT   Minimum mapping quality for the reads, [default = 20]\n  --vcf FILE          input vcf file ( as an alternative use --bed )\n  --bed FILE          input bed file ( as an alternative use --vcf )\n  --annotations FILE  annotation track indexed with tabix\n  --prefix PREFIX     target directory and file name prefix for generated output files\n  --window N          the output file for position X will show the region [X-window,X+window], [default = 100]\n  --samtoolsbin N     the path to the samtools binary, [default = samtools]\n  --tabixbin N        the path to the tabix binary, [default = tabix]\n  --plot_dir DIR      subfolder for the pdf plots\n  --out_format STR    Output format of the plot, [default = pdf]\n```\n\n### Example plots\nOn the GIAB samples\n\n1. For a single variant from a single BAM\n```\nsmvplot \n  --bam_paths HG001_merged.mdup.bam \\\n  --bam_names HG001 \\\n  --ref GRCh38_decoy_ebv_phiX_alt_hla_chr.fa \\\n  --plot_dir ~/smvplot_test \\\n  --prefix giab_HG001 \\\n  --out_format png\n  chr1:3339544\n```\n![](examples/giab_HG001_chr1_3339544.png)\n\n2. For a single variant from a TRIO (3 BAMs)\n\n```\nsmvplot \\\n  --bam_paths HG002_merged.mdup.bam,HG003_merged.mdup.bam,HG004_merged.mdup.bam \\\n  --bam_names HG002_Son,HG003_Father,HG004_Mother \\\n  --ref GRCh38_decoy_ebv_phiX_alt_hla_chr.fa \\\n  --plot_dir ~/smvplot_test \\\n  --prefix giab_HG00234 \\\n  --out_format png \\\n  chr1:783175\n```\n![](examples/giab_HG00234_chr1_783175.png)\n\n3. For multiple variants from a VCF/BED file\n\n```\nsmvplot \\\n  --bam_paths HG002_merged.mdup.bam,HG003_merged.mdup.bam,HG004_merged.mdup.bam \\\n  --bam_names HG002_Son,HG003_Father,HG004_Mother \\\n  --ref GRCh38_decoy_ebv_phiX_alt_hla_chr.fa \\\n  --plot_dir ~/smvplot_test \\\n  --prefix giab_HG00234 \\\n  --out_format png \\\n  --vcf giab_benchmark_variants.vcf # --bed giab_benchmark_variants.vcf\n```\n\n### Acknowledgements\nThe `visualize.py` was originally written for the tumor-control somatic variants in the [DKFZ somatic indel workflow](https://github.com/DKFZ-ODCF/IndelCallingWorkflow) by Philip Ginsbach and Ivo Buchhalter. Since it was really helpful in multiple projects and workflows, I have developed and expanded it into a python package for wider usage.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NagaComBio/smvplot",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "smvplot",
            "package_url": "https://pypi.org/project/smvplot/",
            "platform": null,
            "project_url": "https://pypi.org/project/smvplot/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NagaComBio/smvplot/issues",
                "Homepage": "https://github.com/NagaComBio/smvplot"
            },
            "release_url": "https://pypi.org/project/smvplot/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "smvplot is a cmd line python tool to generate IGV-like screenshots",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13567361,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fbadf7a476329240508c0cb852817b18",
                    "sha256": "b735d271c5426ddb27ae198a1f7902cbe9ae9cc827bd77dac54252f2a79e0901"
                },
                "downloads": -1,
                "filename": "smvplot-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "fbadf7a476329240508c0cb852817b18",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 9128,
                "upload_time": "2022-04-20T12:26:33",
                "upload_time_iso_8601": "2022-04-20T12:26:33.724745Z",
                "url": "https://files.pythonhosted.org/packages/72/bb/bf4a6b5da924fde3d5c51f2b1851ee8ef37b1cea84fd3b4748c98db522a8/smvplot-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}