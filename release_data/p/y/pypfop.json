{
    "0.1.0": {
        "info": {
            "author": "Joel Rivera",
            "author_email": "rivera@joel.mx",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.0",
                "Programming Language :: Python :: 3.1",
                "Programming Language :: Python :: 3.2",
                "Programming Language :: Python :: 3.3",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Text Processing :: Filters"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/cyraxjoe/pypfop",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "pypfop",
            "package_url": "https://pypi.org/project/pypfop/",
            "platform": "linux2,win32,cygwin,darwin",
            "project_url": "https://pypi.org/project/pypfop/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://bitbucket.org/cyraxjoe/pypfop"
            },
            "release_url": "https://pypi.org/project/pypfop/0.1.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Document preprocessor for Apache FOP.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9691777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "417b1c80ed519c0b60d8f2caa63f3bf5",
                    "sha256": "b55b78377e8e79fe73c0340a58b7f9559467a2cd73fce1f8c35041baa8610a5e"
                },
                "downloads": -1,
                "filename": "pypfop-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "417b1c80ed519c0b60d8f2caa63f3bf5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9845,
                "upload_time": "2013-01-26T23:08:27",
                "upload_time_iso_8601": "2013-01-26T23:08:27.129919Z",
                "url": "https://files.pythonhosted.org/packages/eb/c9/5a99ce3b52eb1021e7d8939e35c0bd1ea8ea6c1366ca2e829d764142976a/pypfop-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Joel Rivera",
            "author_email": "rivera@joel.mx",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.0",
                "Programming Language :: Python :: 3.1",
                "Programming Language :: Python :: 3.2",
                "Programming Language :: Python :: 3.3",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Text Processing :: Filters"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/cyraxjoe/pypfop",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "pypfop",
            "package_url": "https://pypi.org/project/pypfop/",
            "platform": "linux2,win32,cygwin,darwin",
            "project_url": "https://pypi.org/project/pypfop/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://bitbucket.org/cyraxjoe/pypfop"
            },
            "release_url": "https://pypi.org/project/pypfop/0.1.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Document preprocessor for Apache FOP.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9691777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "02c73c68efc60a57d82f01942ace94c9",
                    "sha256": "c608f2d98f8bd26a7b0e5889996e7611c567555e890b66b8f10b5503966271f0"
                },
                "downloads": -1,
                "filename": "pypfop-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "02c73c68efc60a57d82f01942ace94c9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10013,
                "upload_time": "2013-01-29T10:27:17",
                "upload_time_iso_8601": "2013-01-29T10:27:17.960116Z",
                "url": "https://files.pythonhosted.org/packages/9c/28/a0c24dd2bc3e9a9d0a3d099b71f451fbb90401b547b59ad36c2cf1a1b477/pypfop-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Joel Rivera",
            "author_email": "rivera@joel.mx",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.0",
                "Programming Language :: Python :: 3.1",
                "Programming Language :: Python :: 3.2",
                "Programming Language :: Python :: 3.3",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Text Processing :: Filters"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/cyraxjoe/pypfop",
            "keywords": null,
            "license": "Copyright 2013 Joel Rivera\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.",
            "maintainer": null,
            "maintainer_email": null,
            "name": "pypfop",
            "package_url": "https://pypi.org/project/pypfop/",
            "platform": "linux2,win32,cygwin,darwin",
            "project_url": "https://pypi.org/project/pypfop/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://bitbucket.org/cyraxjoe/pypfop"
            },
            "release_url": "https://pypi.org/project/pypfop/0.1.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Document preprocessor for Apache FOP.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9691777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0eb6c966d8df724ecf07012ba46bc698",
                    "sha256": "4748841a7398664a732811e171844ea41b20c936935caedb4cb8d7cb1ecc3ee0"
                },
                "downloads": -1,
                "filename": "pypfop-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "0eb6c966d8df724ecf07012ba46bc698",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10076,
                "upload_time": "2013-02-06T06:54:38",
                "upload_time_iso_8601": "2013-02-06T06:54:38.416393Z",
                "url": "https://files.pythonhosted.org/packages/29/a1/e5f8eedc5a4bd9323bb236a148422a8a574681b42602246aa1ff79229a64/pypfop-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Joel Rivera",
            "author_email": "rivera@joel.mx",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2.5",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Text Processing :: Filters"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cyraxjoe/pypfop",
            "keywords": "",
            "license": "Copyright 2013 Joel Rivera\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pypfop",
            "package_url": "https://pypi.org/project/pypfop/",
            "platform": "linux2,win32,cygwin,darwin",
            "project_url": "https://pypi.org/project/pypfop/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/cyraxjoe/pypfop"
            },
            "release_url": "https://pypi.org/project/pypfop/0.2.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Document preprocessor for Apache FOP.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9691777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a709eeb30e6cbb2d3ff555646922f445",
                    "sha256": "d1bfbbe547834fac8b6cfc6f860b0851715bb43bade1c1fd1a5c11aa76b4798a"
                },
                "downloads": -1,
                "filename": "pypfop-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a709eeb30e6cbb2d3ff555646922f445",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11938,
                "upload_time": "2013-02-22T06:55:56",
                "upload_time_iso_8601": "2013-02-22T06:55:56.102980Z",
                "url": "https://files.pythonhosted.org/packages/f3/98/a5aff66b35f9dc2f58acb7df027f1ae253c1853caf2aafd98da8ed1ef3c7/pypfop-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a1": {
        "info": {
            "author": "Joel Rivera",
            "author_email": "rivera@joel.mx",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Text Processing :: Filters"
            ],
            "description": ".. -*- rst -*-\n\nPython Preprocessor of the Formatting Objects Processor [pypfop]\n================================================================\n\nGenerate PDF files [1]_ based on `Apache FOP`_.\n\nInstallation\n------------\n\n1. Install pypfop::\n\n    pip install pypfop\n\n2. Install `Apache FOP`_:\n\n   #. Download the binary package of fop (preferably 2.6) either the  zip_ or tar_ package.\n   #. Decompress anywhere you like and set the environment variable ``FOP_CMD``\n      to the executable file ``fop`` on the decompressed folder or have the ``fop`` command\n      in your ``PATH``. [2]_\n\nQuick start\n-----------\n\nCreate a file named ``helloworld.fo.mako``:\n\n.. code-block:: mako\n\n  <%inherit file=\"letter-portrait.fo.mako\" />\n  <block>Hello ${name}!</block>\n\n\nAnd then in you python code:\n\n.. code-block:: python\n\n  import pypfop\n\n  pdf_path = pypfop.generate_document(\"helloworld.fo.mako\", {\"name\": \"Foo\"})\n  print(\"The document has been generated at {}\".format(pdf_path))\n\nAlternatively there is decorator based syntax:\n\n.. code-block:: python\n\n   import pypfop\n\n   document = pypfop.make_document_decorator()\n\n   @document(template=\"helloworld.fo.mako\")\n   def hello_world():\n       return {\"name\": \"Foo\"}\n\n   pdf_path = hello_world()\n\n   print(\"The document has been generated at {}\".format(pdf_path))\n\n\nHow does it work?\n-----------------\n\nIt does what the huge title is implying, preprocess a *higher* level template\nto generate *dynamically* an specific `XSL-FO`_ document, which then gets\nfed to `Apache FOP`_ and generate the expected output. So that means that\nthis packages *requires Java*  ``>_<'``, but fear not! It is almost transparent\nto the python application.\n\nIn general the internal workflow is::\n\n    template ->  mako -> apply css ->  xsl-fo ->  fop -> *Document*\n\n\n\nUsage\n-----\n\nThe Markup\n^^^^^^^^^^\n\nThe markup used to generate the documents is almost the same as the xsl-fo,\nthe only difference is that is not necessary to set the xml namespace to all\nthe elements, for example:\n\n.. code-block:: xml\n\n  <fo:table>\n   <fo:table-header>\n      <fo:table-row>\n         <fo:table-cell>\n           <fo:block>Project</fo:block>\n         </fo:table-cell>\n      </fo:table-row>\n   </fo:table-header>\n   <fo:table-body>\n      <fo:table-row>\n        <fo:table-cell>\n           <fo:block>pypfop</fo:block>\n       </fo:table-cell>\n      </fo:table-row>\n   </fo:table-body>\n  </fo:table>\n\ncan be written like this:\n\n.. code-block:: xml\n\n  <table>\n   <table-header>\n      <table-row>\n         <table-cell>\n           <block>Project</block>\n         </table-cell>\n      </table-row>\n   </table-header>\n   <table-body>\n      <table-row>\n        <table-cell>\n           <block>pypfopp</block>\n       </table-cell>\n      </table-row>\n   </table-body>\n  </table>\n\n\nThe higher level template language\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nCurrently the only supported template language is mako_. If for\nsome reason you don't like that templating language, it shouldn't be\nhard to extend to your favorite template language based in the implementation\nof mako (which is pretty straight forward) and hopefully contribute back\nto the project :).\n\nFor example, the previous table can be generated with this mako template\nassuming the `header` and `rows` variables are passed as parameters:\n\n\n.. code-block:: mako\n\n    <table>\n      <table-header>\n        <table-row>\n          % for name in header:\n          <table-cell>\n            <block>${name}</block>\n          </table-cell>\n          % endfor\n        </table-row>\n      </table-header>\n      <table-body>\n        % for row in rows:\n           <table-row>\n         % for cell in row:\n            <table-cell>\n              <block>${cell}</block>\n            </table-cell>\n         % endfor\n           </table-row>\n        % endfor\n      </table-body>\n    </table>\n\n\nSkeletons\n^^^^^^^^^\n\nThe previous examples are just fragments of a document. To be able to fully\ngenerate a document with metadata, paper size, margins, etc and to avoid the\nrepetitive work to write this kind of *base document* pypfop have the notion of\n*skeleton documents*, the purpose if this documents are to be inherited at each\ntemplate, at the time the implemented skeleton are:\n\n - ``pypfop/skeletons/mako/A4-landscape.fo.mako``\n - ``pypfop/skeletons/mako/A4-portrait.fo.mako``\n - ``pypfop/skeletons/mako/letter-landscape.fo.mako``\n - ``pypfop/skeletons/mako/letter-portrait.fo.mako``\n\n\nThose include place-holders for:\n\nMetadata:\n\n - title\n - author\n - subject\n - GENERATOR (by default \"PyPFOP\")\n\nThere is also a  mako block called ``rfooter`` and the body of your template will\nbe the body of the document.\n\nYou don't have to define anything else than the body of your own document but you\nstill have the option to override any of the metadata and your own footer region.\n\nTo be a fully functional template for pypfop the previous table need to be like this.\n\n\n``simple-table.fo.mako``:\n\n.. code-block:: mako\n\n    <%inherit file=\"simple-letter-base.fo.mako\" />\n    <table id=\"main-table\">\n      <table-header>\n        <table-row>\n          % for name in header:\n          <table-cell>\n            <block>${name}</block>\n          </table-cell>\n          % endfor\n        </table-row>\n      </table-header>\n      <table-body>\n        % for row in rows:\n           <table-row>\n         % for cell in row:\n            <table-cell>\n              <block>${cell}</block>\n            </table-cell>\n         % endfor\n           </table-row>\n        % endfor\n      </table-body>\n    </table>\n\n\n*The skeletons directory is set in the template directory path by default.*\n\n\nFormat and style with CSS\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nBeside the *higher level language* that define the content and layout of\nthe document, the style and formatting uses *CSS*, to be more specific it\ncan parse the rules that cssutils_ support, which are a very good subset\nof CSS2 and CSS3, for example it support things like ``:nth-child(X)``\nand ``@import url(XX)``.\n\nThe properties that can be set are the same as in the specification of xsl-fo,\ncheck out the section of `About XSL-FO syntax`_, with the only exception\nthat you can use classes as selectors, xsl-fo does not support the\n``class`` attribute, the pypfop parser is going to look for the\n``class`` attribute then substitute with the specific style and then remove\nthe ``class`` attribute.\n\nFor example I could define the style for the previous table in three files.\n\n*simple_table.css*:\n\n.. code-block:: css\n\n    @import url(\"general.css\");\n    @import url(\"colors.css\");\n\n    #main-table > table-header > table-row{\n        text-align: center;\n        font-weight: bold;\n    }\n\n    #main-table > table-header table-cell{\n        padding: 2mm 0 0mm;\n    }\n\n\n*general.css*:\n\n.. code-block:: css\n\n    flow[flow-name=\"xsl-region-body\"] {\n        font-size: 10pt;\n        font-family: Helvetica;\n    }\n\n*colors.css*:\n\n.. code-block:: css\n\n    #main-table> table-body > table-row > table-cell:first-child{\n        color: red;\n    }\n    #main-table> table-body > table-row > table-cell:nth-child(2){\n        color: blue;\n    }\n    #main-table> table-body > table-row > table-cell:nth-child(3){\n        color: cyan;\n    }\n    #main-table> table-body > table-row > table-cell:last-child{\n        color: green;\n    }\n\n\nGenerate the document\n^^^^^^^^^^^^^^^^^^^^^\n\nThere are a few different ways to generate a document.\n\n\nSingle function call\n%%%%%%%%%%%%%%%%%%%%\n\n.. code-block:: python\n\n  import pypfop\n\n  params = {\n     'header': ['Project', 'Website', 'Language', 'Notes'],\n     'rows': [\n       ('pypfop', 'https://github.com/cyraxjoe/pypfop',\n        'Python', 'Abstraction on top of Apache FOP'),\n       ('Apache FOP', 'https://xmlgraphics.apache.org/fop/',\n       'Java', '')\n     ]\n  }\n\n  doc_path = pypfop.generate_document(\n      \"sample-table.fo.mako\",\n      params,\n      \"simple_table.css\"\n  ) # returns the path of the generated file.\n\n  print(doc_path)\n\n\n\nDecorator based\n%%%%%%%%%%%%%%%\n\n.. code-block:: python\n\n  import pypfop\n\n  document = pypfop.make_document_decorator()\n\n  @document(\"simple-table.fo.mako\", \"simple_table.css\")\n  def simple_table():\n      return {\n         'header': ['Project', 'Website', 'Language', 'Notes'],\n         'rows': [\n           ('pypfop', 'https://github.com/cyraxjoe/pypfop',\n            'Python', 'Abstraction on top of Apache FOP'),\n           ('Apache FOP', 'https://xmlgraphics.apache.org/fop/',\n           'Java', '')\n         ]\n       }\n\n  doc_path = simple_table() # returns the path of the generated file.\n\n  print(doc_path)\n\n\n\nExplicit construction\n%%%%%%%%%%%%%%%%%%%%%%\n\n.. code-block:: python\n\n  import pypfop\n  import pypfop.templates.mako\n\n  tfactory = pypfop.templates.mako.Factory()\n  params = {\n    'header': ['Project', 'Website', 'Language', 'Notes'],\n    'rows': [\n      ('pypfop', 'https://github.com/cyraxjoe/pypfop',\n       'Python', 'Abstraction on top of Apache FOP'),\n      ('Apache FOP', 'https://xmlgraphics.apache.org/fop/', 'Java', '')\n    ]\n  }\n  doc_gen = pypfop.DocumentGenerator(tfactory('simple-table.fo.mako'), 'simple_table.css')\n  doc_path = doc_gen.generate(params) # returns the path of the generated file.\n  print(doc_path)\n\n\nSupported document formats\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIn the previous example we didn't define the output of the ``Document`` in\nthat case the default output of ``pdf`` is used, but the supported outputs\nare the almost the same as in `Apache FOP output formats`_.\n\n * pdf\n * rtf\n * tiff\n * png\n * pcl\n * ps\n * txt\n\n\nThe output format can be set in any of the supported methods:\n\n.. code-block:: python\n\n  # simple function call\n  pypfop.generate_document(\n      \"sample-table.fo.mako\", \"simple_table.css\", out_format='rtf'\n  )\n\n  # decorator based\n  @document(\"simple-table.fo.mako\", \"simple_table.css\", out_format='rtf')\n  def simple_table(): ...\n\n\n  # explicit method\n  doc_gen.generate(params, out_format='rtf')\n\n\nAbout XSL-FO syntax\n^^^^^^^^^^^^^^^^^^^\n\nAs you may have already noticed, it is required to know how to format xsl-fo\ndocuments which in most part are very similar to the HTML counterparts\n(except that anything needs to be in ``block`` tags), two of the best reference\nthat I could find online is in the `XML Bible`_ and the `Data 2 Type tutorial`_.\n\nHow about a CSS pre-processor and base generic styles?\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nI'm looking to add support for less_ or something similar and try to generalize\nthe styling of fonts, colors, tables, etc. Very much in the *bootstrap* sense\nof the things. If you are interested in something similar we can join forces\nand build something nice.\n\nWhy!\n----\n\nThe project used to be part of a larger project of one of my clients,\non which I decide early on that I will *only use python 3*, terrible decision\nif you want to generate pdf files easily or at least at the time (2012 I believe?)\nwhen the `Report Lab PDF Toolkit`_ was not yet available for Python 3 and I was looking\nto have some kind of *template* to the very rigid format of the average invoice\nand billing order, so pypfop came to relieve that pain.\n\n.. [1] Actually... you can generate more than PDFs as you will discover if you continue reading.\n.. [2] Actually... you can set the command at another level, check the ``pypfop.document_generator.DocumentGenerator`` class.\n\n.. _`Apache FOP`: https://xmlgraphics.apache.org/fop/\n.. _XSL-FO: https://en.wikipedia.org/wiki/XSL_Formatting_Objects\n.. _zip: https://www.apache.org/dyn/closer.cgi?filename=/xmlgraphics/fop/binaries/fop-2.6-bin.zip&action=download\n.. _tar: https://www.apache.org/dyn/closer.cgi?filename=/xmlgraphics/fop/binaries/fop-2.6-bin.tar.gz&action=download\n.. _`XML Bible`: http://www.ibiblio.org/xml/books/bible3/chapters/ch16.html\n.. _mako: http://www.makotemplates.org/\n.. _cssutils: http://pypi.python.org/pypi/cssutils\n.. _`Apache FOP output formats`: https://xmlgraphics.apache.org/fop/2.6/output.html\n.. _`Data 2 Type tutorial`: http://www.data2type.de/en/xml-xslt-xslfo/xsl-fo/\n.. _`Report Lab PDF Toolkit`: https://pypi.org/project/reportlab/\n.. _less: http://lesscss.org/1\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cyraxjoe/pypfop",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pypfop",
            "package_url": "https://pypi.org/project/pypfop/",
            "platform": "",
            "project_url": "https://pypi.org/project/pypfop/",
            "project_urls": {
                "Homepage": "https://github.com/cyraxjoe/pypfop"
            },
            "release_url": "https://pypi.org/project/pypfop/1.0a1/",
            "requires_dist": [
                "Mako (>=1.1.4,<2.0.0)",
                "cssutils (>=1.0.2,<2.0.0)",
                "cssselect (>=1.1.0,<2.0.0)",
                "lxml (>=4.6.2,<5.0.0)"
            ],
            "requires_python": ">=3.6,<4.0",
            "summary": "Document preprocessor for Apache FOP",
            "version": "1.0a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9691777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "86cafa97caa967b7491e411630123864",
                    "sha256": "58a1bfdea2bbdee6c181c7ff60b3298dfbc2544f6cd4fc47e85e554b9dfb282b"
                },
                "downloads": -1,
                "filename": "pypfop-1.0a1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "86cafa97caa967b7491e411630123864",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6,<4.0",
                "size": 17829,
                "upload_time": "2021-03-07T00:13:13",
                "upload_time_iso_8601": "2021-03-07T00:13:13.914865Z",
                "url": "https://files.pythonhosted.org/packages/87/26/c29979598361d77d047247949f67d443b211de4a8447895c19ce391c3ef1/pypfop-1.0a1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e31b9e35d18357a66d664e1942d5aaa6",
                    "sha256": "cfd7b951d6f8d6e61f33b1328529ba78e274130c360c2f1e14a7627148e0f92d"
                },
                "downloads": -1,
                "filename": "pypfop-1.0a1.tar.gz",
                "has_sig": false,
                "md5_digest": "e31b9e35d18357a66d664e1942d5aaa6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6,<4.0",
                "size": 18534,
                "upload_time": "2021-03-07T00:13:15",
                "upload_time_iso_8601": "2021-03-07T00:13:15.899887Z",
                "url": "https://files.pythonhosted.org/packages/0c/b2/46d7ef64462464276d50db65bc5c6e62619ce23b31f91c4f9c10d0d45f57/pypfop-1.0a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}