{
    "0.1.1": {
        "info": {
            "author": "XuMing",
            "author_email": "xuming624@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shibing624/labelit",
            "keywords": "labelit,active learning,label text,label image",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "labelit",
            "package_url": "https://pypi.org/project/labelit/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/labelit/",
            "project_urls": {
                "Homepage": "https://github.com/shibing624/labelit"
            },
            "release_url": "https://pypi.org/project/labelit/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "label text and image based on active learning.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16043837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4091456855d1fca5835188b88f7068c1",
                    "sha256": "a5c2675e7b22cfacdd2204e1caeef8f088d9dc311e9e0a62264e945aaad420b3"
                },
                "downloads": -1,
                "filename": "labelit-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4091456855d1fca5835188b88f7068c1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 57752,
                "upload_time": "2021-01-04T11:21:23",
                "upload_time_iso_8601": "2021-01-04T11:21:23.461780Z",
                "url": "https://files.pythonhosted.org/packages/4b/ae/7337d82d21623ae93630ab2331aecde34ce220aa35b2cbd2475e16da954e/labelit-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "XuMing",
            "author_email": "xuming624@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shibing624/labelit",
            "keywords": "labelit,active learning,label text,label image",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "labelit",
            "package_url": "https://pypi.org/project/labelit/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/labelit/",
            "project_urls": {
                "Homepage": "https://github.com/shibing624/labelit"
            },
            "release_url": "https://pypi.org/project/labelit/0.1.3/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "label text and image based on active learning.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16043837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ba7d6a9a0bf6e8162f248f886c3b4198",
                    "sha256": "33a6b99deccd0f4b9cf79ffd4156d4ff4bbb8a934bc443d2962ea9ef05be95d5"
                },
                "downloads": -1,
                "filename": "labelit-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ba7d6a9a0bf6e8162f248f886c3b4198",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 56254,
                "upload_time": "2022-12-06T06:05:47",
                "upload_time_iso_8601": "2022-12-06T06:05:47.945438Z",
                "url": "https://files.pythonhosted.org/packages/61/ff/4f976c23c8265a7a0dec68c7a552ad84f539675fbd644678cf9e1fd295fa/labelit-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "XuMing",
            "author_email": "xuming624@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shibing624/labelit",
            "keywords": "labelit,active learning,label text,label image",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "labelit",
            "package_url": "https://pypi.org/project/labelit/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/labelit/",
            "project_urls": {
                "Homepage": "https://github.com/shibing624/labelit"
            },
            "release_url": "https://pypi.org/project/labelit/0.1.4/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "label text and image based on active learning.",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16043837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1249184374474bf616b8329e132fa790",
                    "sha256": "8089c373384b6f39ba0928111f7eb8a657351d669a3a4f01c65452bb10107b8f"
                },
                "downloads": -1,
                "filename": "labelit-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "1249184374474bf616b8329e132fa790",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 55823,
                "upload_time": "2022-12-06T08:03:47",
                "upload_time_iso_8601": "2022-12-06T08:03:47.256370Z",
                "url": "https://files.pythonhosted.org/packages/99/61/1bd510714a3f1599c904e070878850939161111655dc95ff0c853229e255/labelit-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.5": {
        "info": {
            "author": "XuMing",
            "author_email": "xuming624@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Natural Language :: Chinese (Simplified)",
                "Natural Language :: Chinese (Traditional)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description": "# labelit\nlabel text and image based on active learning.\n\n# Active Learning Playground\n\n## Introduction\n\nThis is a python module for experimenting with different active learning\nalgorithms. There are a few key components to running active learning\nexperiments:\n\n*   Main experiment script is\n    [`run_experiment.py`](run_experiment.py)\n    with many flags for different run options.\n\n*   Supported datasets can be downloaded to a specified directory by running\n    [`utils/create_data.py`](utils/create_data.py).\n\n*   Supported active learning methods are in\n    [`sampling_methods`](sampling_methods/).\n\nBelow I will go into each component in more detail.\n\nDISCLAIMER: This is not an official Google product.\n\n## Setup\nThe dependencies are in [`requirements.txt`](requirements.txt).  Please make sure these packages are\ninstalled before running experiments.  If GPU capable `tensorflow` is desired, please follow\ninstructions [here](https://www.tensorflow.org/install/).\n\nIt is highly suggested that you install all dependencies into a separate `virtualenv` for\neasy package management.\n\n## Getting benchmark datasets\n\nBy default the datasets are saved to `/tmp/data`. You can specify another directory via the\n`--save_dir` flag.\n\nRedownloading all the datasets will be very time consuming so please be patient.\nYou can specify a subset of the data to download by passing in a comma separated\nstring of datasets via the `--datasets` flag.\n\n## Running experiments\n\nThere are a few key flags for\n[`run_experiment.py`](run_experiment.py):\n\n*   `dataset`: name of the dataset, must match the save name used in\n    `create_data.py`. Must also exist in the data_dir.\n\n*   `sampling_method`: active learning method to use. Must be specified in\n    [`sampling_methods/constants.py`](sampling_methods/constants.py).\n\n*   `warmstart_size`: initial batch of uniformly sampled examples to use as seed\n    data. Float indicates percentage of total training data and integer\n    indicates raw size.\n\n*   `batch_size`: number of datapoints to request in each batch. Float indicates\n    percentage of total training data and integer indicates raw size.\n\n*   `score_method`: model to use to evaluate the performance of the sampling\n    method. Must be in `get_model` method of\n    [`utils/utils.py`](utils/utils.py).\n\n*   `data_dir`: directory with saved datasets.\n\n*   `save_dir`: directory to save results.\n\nThis is just a subset of all the flags. There are also options for\npreprocessing, introducing labeling noise, dataset subsampling, and using a\ndifferent model to select than to score/evaluate.\n\n## Available active learning methods\n\nAll named active learning methods are in\n[`sampling_methods/constants.py`](sampling_methods/constants.py).\n\nYou can also specify a mixture of active learning methods by following the\npattern of `[sampling_method]-[mixture_weight]` separated by dashes; i.e.\n`mixture_of_samplers-margin-0.33-informative_diverse-0.33-uniform-0.34`.\n\nSome supported sampling methods include:\n\n*   Uniform: samples are selected via uniform sampling.\n\n*   Margin: uncertainty based sampling method.\n\n*   Informative and diverse: margin and cluster based sampling method.\n\n*   k-center greedy: representative strategy that greedily forms a batch of\n    points to minimize maximum distance from a labeled point.\n\n*   Graph density: representative strategy that selects points in dense regions\n    of pool.\n\n*   Exp3 bandit: meta-active learning method that tries to learns optimal\n    sampling method using a popular multi-armed bandit algorithm.\n\n### Adding new active learning methods\n\nImplement either a base sampler that inherits from\n[`SamplingMethod`](sampling_methods/sampling_def.py)\nor a meta-sampler that calls base samplers which inherits from\n[`WrapperSamplingMethod`](sampling_methods/wrapper_sampler_def.py).\n\nThe only method that must be implemented by any sampler is `select_batch_`,\nwhich can have arbitrary named arguments. The only restriction is that the name\nfor the same input must be consistent across all the samplers (i.e. the indices\nfor already selected examples all have the same name across samplers). Adding a\nnew named argument that hasn't been used in other sampling methods will require\nfeeding that into the `select_batch` call in\n[`run_experiment.py`](run_experiment.py).\n\nAfter implementing your sampler, be sure to add it to\n[`constants.py`](sampling_methods/constants.py)\nso that it can be called from\n[`run_experiment.py`](run_experiment.py).\n\n## Available models\n\nAll available models are in the `get_model` method of\n[`utils/utils.py`](utils/utils.py).\n\nSupported methods:\n\n*   Linear SVM: scikit method with grid search wrapper for regularization\n    parameter.\n\n*   Kernel SVM: scikit method with grid search wrapper for regularization\n    parameter.\n\n*   Logistc Regression: scikit method with grid search wrapper for\n    regularization parameter.\n\n*   Small CNN: 4 layer CNN optimized using rmsprop implemented in Keras with\n    tensorflow backend.\n\n*   Kernel Least Squares Classification: block gradient descient solver that can\n    use multiple cores so is often faster than scikit Kernel SVM.\n\n### Adding new models\n\nNew models must follow the scikit learn api and implement the following methods\n\n*   `fit(X, y[, sample_weight])`: fit the model to the input features and\n    target.\n\n*   `predict(X)`: predict the value of the input features.\n\n*   `score(X, y)`: returns target metric given test features and test targets.\n\n*   `decision_function(X)` (optional): return class probabilities, distance to\n    decision boundaries, or other metric that can be used by margin sampler as a\n    measure of uncertainty.\n\nSee\n[`small_cnn.py`](utils/small_cnn.py)\nfor an example.\n\nAfter implementing your new model, be sure to add it to `get_model` method of\n[`utils/utils.py`](utils/utils.py).\n\nCurrently models must be added on a one-off basis and not all scikit-learn\nclassifiers are supported due to the need for user input on whether and how to\ntune the hyperparameters of the model. However, it is very easy to add a\nscikit-learn model with hyperparameter search wrapped around as a supported\nmodel.\n\n## Collecting results and charting\n\nThe\n[`utils/chart_data.py`](utils/chart_data.py)\nscript handles processing of data and charting for a specified dataset and\nsource directory.\n\n\n# \u4e3b\u52a8\u5b66\u4e60\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6ca1\u6709\u7c7b\u6807\u7b7e\u7684\u6570\u636e\u76f8\u5f53\u4e30\u5bcc\u800c\u6709\u7c7b\u6807\u7b7e\u7684\u6570\u636e\u76f8\u5f53\u7a00\u5c11\uff0c\u5e76\u4e14\u4eba\u5de5\u5bf9\u6570\u636e\u8fdb\u884c\u6807\u8bb0\u7684\u6210\u672c\u53c8\u76f8\u5f53\u9ad8\u6602\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u8ba9\u5b66\u4e60\u7b97\u6cd5\u4e3b\u52a8\u5730\u63d0\u51fa\u8981\u5bf9\u54ea\u4e9b\u6570\u636e\u8fdb\u884c\u6807\u6ce8\uff0c\u4e4b\u540e\u6211\u4eec\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u9001\u5230\u4e13\u5bb6\u90a3\u91cc\u8fdb\u884c\u6807\u6ce8\uff0c\u518d\u5c06\u8fd9\u4e9b\u6570\u636e\u52a0\u5165\u5230\u8bad\u7ec3\u6837\u672c\u96c6\u4e2d\u5bf9\u7b97\u6cd5\u8fdb\u884c\u8bad\u7ec3\u3002\u8fd9\u4e00\u8fc7\u7a0b\u53eb\u505a\u4e3b\u52a8\u5b66\u4e60\u3002\n\n\u4e3b\u52a8\u5b66\u4e60\u65b9\u6cd5\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u5b66\u4e60\u5f15\u64ce\u548c\u9009\u62e9\u5f15\u64ce\u3002\u5b66\u4e60\u5f15\u64ce\u7ef4\u62a4\u4e00\u4e2a\u57fa\u51c6\u5206\u7c7b\u5668\uff0c\u5e76\u4f7f\u7528\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u5b66\u4e60\u5df2\u6807\u6ce8\u7684\u6837\u4f8b\uff0c\u8fdb\u800c\u63d0\u9ad8\u8be5\u5206\u7c7b\u5668\u7684\u6027\u80fd\uff0c\u800c\u9009\u62e9\u5f15\u64ce\u901a\u8fc7\u6837\u4f8b\u9009\u62e9\u7b97\u6cd5\u9009\u62e9\u4e00\u4e2a\u672a\u6807\u6ce8\u7684\u6837\u4f8b\u5e76\u5c06\u5176\u4ea4\u7531\u4eba\u7c7b\u4e13\u5bb6\u8fdb\u884c\u6807\u6ce8\uff0c\u518d\u5c06\u6807\u6ce8\u540e\u7684\u6837\u4f8b\u52a0\u5165\u5230\u5df2\u6807\u6ce8\u6837\u4f8b\u96c6\u3002\u5b66\u4e60\u5f15\u64ce\u548c\u9009\u62e9\u5f15\u64ce\u4ea4\u66ff\u5de5\u4f5c\uff0c\u7ecf\u8fc7\u591a\u6b21\u5faa\u73af\uff0c\u57fa\u51c6\u5206\u7c7b\u5668\u7684\u6027\u80fd\u9010\u6e10\u63d0\u9ad8\uff0c\u5f53\u6ee1\u8db3\u9884\u8bbe\u6761\u4ef6\u65f6\uff0c\u8fc7\u7a0b\u7ec8\u6b62\u3002\n\n# \u6837\u4f8b\u9009\u62e9\u7b97\u6cd5\n\u6839\u636e\u83b7\u5f97\u672a\u6807\u6ce8\u6837\u4f8b\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u4e3b\u52a8\u5b66\u4e60\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\u57fa\u4e8e\u6d41\u7684\u548c\u57fa\u4e8e\u6c60\u7684\u3002\n\n- \u57fa\u4e8e\u6c60(pool-based)\u7684\u4e3b\u52a8\u5b66\u4e60\u4e2d\u5219\u7ef4\u62a4\u4e00\u4e2a\u672a\u6807\u6ce8\u6837\u4f8b\u7684\u96c6\u5408\uff0c\u7531\u9009\u62e9\u5f15\u64ce\u5728\u8be5\u96c6\u5408\u4e2d\u9009\u62e9\u5f53\u524d\u8981\u6807\u6ce8\u7684\u6837\u4f8b\u3002\n- \u57fa\u4e8e\u6d41(stream-based)\u7684\u4e3b\u52a8\u5b66\u4e60\u4e2d\uff0c\u672a\u6807\u8bb0\u7684\u6837\u4f8b\u6309\u5148\u540e\u987a\u5e8f\u9010\u4e2a\u63d0\u4ea4\u7ed9\u9009\u62e9\u5f15\u64ce\uff0c\u7531\u9009\u62e9\u5f15\u64ce\u51b3\u5b9a\u662f\u5426\u6807\u6ce8\u5f53\u524d\u63d0\u4ea4\u7684\u6837\u4f8b\uff0c\u5982\u679c\u4e0d\u6807\u6ce8\uff0c\u5219\u5c06\u5176\u4e22\u5f03\u3002\u7531\u4e8e\u57fa\u4e8e\u6d41\u7684\u7b97\u6cd5\u4e0d\u80fd\u5bf9\u672a\u6807\u6ce8\u6837\u4f8b\u9010\u4e00\u6bd4\u8f83\uff0c\u9700\u8981\u5bf9\u6837\u4f8b\u7684\u76f8\u5e94\u8bc4\u4ef7\u6307\u6807\u8bbe\u5b9a\u9608\u503c\uff0c\u5f53\u63d0\u4ea4\u7ed9\u9009\u62e9\u5f15\u64ce\u7684\u6837\u4f8b\u8bc4\u4ef7\u6307\u6807\u8d85\u8fc7\u9608\u503c\uff0c\u5219\u8fdb\u884c\u6807\u6ce8\uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u9488\u5bf9\u4e0d\u540c\u7684\u4efb\u52a1\u8fdb\u884c\u8c03\u6574\uff0c\u6240\u4ee5\u96be\u4ee5\u4f5c\u4e3a\u4e00\u79cd\u6210\u719f\u7684\u65b9\u6cd5\u6295\u5165\u4f7f\u7528\u3002\u6b64\u5904\u4e0d\u518d\u4ecb\u7ecd\u3002\n\n## \u57fa\u4e8e\u6c60\u7684\u6837\u4f8b\u9009\u62e9\u7b97\u6cd5\n\n1. \u57fa\u4e8e\u4e0d\u786e\u5b9a\u5ea6\u7f29\u51cf\u7684\u65b9\u6cd5\n\n\u8fd9\u7c7b\u65b9\u6cd5\u9009\u62e9\u90a3\u4e9b\u5f53\u524d\u57fa\u51c6\u5206\u7c7b\u5668\u6700\u4e0d\u80fd\u786e\u5b9a\u5176\u5206\u7c7b\u7684\u6837\u4f8b\u8fdb\u884c\u6807\u6ce8\u3002\u8fd9\u7c7b\u65b9\u6cd5\u4ee5\u4fe1\u606f\u71b5\u4f5c\u4e3a\u8861\u91cf\u6837\u4f8b\u6240\u542b\u4fe1\u606f\u91cf\u5927\u5c0f\u7684\u5ea6\u91cf\uff0c\u800c\u4fe1\u606f\u71b5\u6700\u5927\u7684\u6837\u4f8b\u6b63\u662f\u5f53\u524d\u5206\u7c7b\u5668\u6700\u4e0d\u80fd\u786e\u5b9a\u5176\u5206\u7c7b\u7684\u6837\u4f8b\u3002\u4ece\u51e0\u4f55\u89d2\u5ea6\u770b\uff0c\u8fd9\u79cd\u65b9\u6cd5\u4f18\u5148\u9009\u62e9\u9760\u8fd1\u5206\u7c7b\u8fb9\u754c\u7684\u6837\u4f8b\u3002\n\n2. \u57fa\u4e8e\u7248\u672c\u7f29\u51cf\u7684\u65b9\u6cd5\n\n\u8fd9\u7c7b\u65b9\u6cd5\u9009\u62e9\u90a3\u4e9b\u8bad\u7ec3\u540e\u80fd\u591f\u6700\u5927\u7a0b\u5ea6\u7f29\u51cf\u7248\u672c\u7a7a\u95f4\u7684\u6837\u4f8b\u8fdb\u884c\u6807\u6ce8\u3002\u5728\u4e8c\u503c\u5206\u7c7b\u95ee\u9898\u4e2d\uff0c\u8fd9\u7c7b\u65b9\u6cd5\u9009\u62e9\u7684\u6837\u4f8b\u603b\u662f\u5dee\u4e0d\u591a\u5e73\u5206\u7248\u672c\u7a7a\u95f4\u3002\n\n\u4ee3\u8868\uff1aQBC\u7b97\u6cd5\n\nQBC\u7b97\u6cd5\u4ece\u7248\u672c\u7a7a\u95f4\u4e2d\u968f\u673a\u9009\u62e9\u82e5\u5e72\u5047\u8bbe\u6784\u6210\u4e00\u4e2a\u59d4\u5458\u4f1a\uff0c\u7136\u540e\u9009\u62e9\u59d4\u5458\u4f1a\u4e2d\u7684\u5047\u8bbe\u9884\u6d4b\u5206\u6b67\u6700\u5927\u7684\u6837\u4f8b\u8fdb\u884c\u6807\u6ce8\u3002\u4e3a\u4e86\u4f18\u5316\u59d4\u5458\u4f1a\u7684\u6784\u6210\uff0c\u53ef\u4ee5\u91c7\u7528Bagging,AdaBoost\u7b49\u5206\u7c7b\u5668\u96c6\u6210\u7b97\u6cd5\u4ece\u7248\u672c\u7a7a\u95f4\u4e2d\u4ea7\u751f\u59d4\u5458\u4f1a\u3002\n\n3. \u57fa\u4e8e\u6cdb\u5316\u8bef\u5dee\u7f29\u51cf\u7684\u65b9\u6cd5\n\n\u8fd9\u7c7b\u65b9\u6cd5\u8bd5\u56fe\u9009\u62e9\u90a3\u4e9b\u80fd\u591f\u4f7f\u672a\u6765\u6cdb\u5316\u8bef\u5dee\u6700\u5927\u7a0b\u5ea6\u51cf\u5c0f\u7684\u6837\u4f8b\u3002\u5176\u4e00\u822c\u8fc7\u7a0b\u4e3a\uff1a\u9996\u5148\u9009\u62e9\u4e00\u4e2a\u635f\u5931\u51fd\u6570\u7528\u4e8e\u4f30\u8ba1\u672a\u6765\u9519\u8bef\u7387\uff0c\u7136\u540e\u5c06\u672a\u6807\u6ce8\u6837\u4f8b\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6837\u4f8b\u90fd\u5206\u522b\u4f30\u8ba1\u5176\u80fd\u7ed9\u57fa\u51c6\u5206\u7c7b\u5668\u5e26\u6765\u7684\u8bef\u5dee\u7f29\u51cf\uff0c\u9009\u62e9\u4f30\u8ba1\u503c\u6700\u5927\u7684\u90a3\u4e2a\u6837\u4f8b\u8fdb\u884c\u6807\u6ce8\u3002\n\n\u8fd9\u7c7b\u65b9\u6cd5\u76f4\u63a5\u9488\u5bf9\u5206\u7c7b\u5668\u6027\u80fd\u7684\u6700\u7ec8\u8bc4\u4ef7\u6307\u6807\uff0c\u4f46\u662f\u8ba1\u7b97\u91cf\u8f83\u5927\uff0c\u540c\u65f6\u635f\u5931\u51fd\u6570\u7684\u7cbe\u5ea6\u5bf9\u6027\u80fd\u5f71\u54cd\u8f83\u5927\u3002\n\n4. \u5176\u5b83\u65b9\u6cd5\n\n- COMB\u7b97\u6cd5\uff1a\u7ec4\u5408\u4e09\u79cd\u4e0d\u540c\u7684\u5b66\u4e60\u5668\uff0c\u8fc5\u901f\u5207\u6362\u5230\u5f53\u524d\u6027\u80fd\u6700\u597d\u7684\u5b66\u4e60\u5668\u4ece\u800c\u4f7f\u9009\u62e9\u6837\u4f8b\u5c3d\u53ef\u80fd\u9ad8\u6548\u3002\n\n- \u591a\u89c6\u56fe\u4e3b\u52a8\u5b66\u4e60\uff1a\u7528\u4e8e\u5b66\u4e60\u95ee\u9898\u4e3a\u591a\u89c6\u56fe\u5b66\u4e60\u7684\u60c5\u51b5\uff0c\u9009\u62e9\u90a3\u4e9b\u4f7f\u4e0d\u540c\u89c6\u56fe\u7684\u9884\u6d4b\u5206\u7c7b\u4e0d\u4e00\u81f4\u7684\u6837\u4f8b\u8fdb\u884c\u5b66\u4e60\u3002\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u4e8e\u5904\u7406\u9ad8\u7ef4\u7684\u4e3b\u52a8\u5b66\u4e60\u95ee\u9898\u975e\u5e38\u6709\u6548\u3002\n\n- \u9884\u805a\u7c7b\u4e3b\u52a8\u5b66\u4e60\uff1a\u9884\u5148\u8fd0\u884c\u805a\u7c7b\u7b97\u6cd5\u9884\u5904\u7406\uff0c\u9009\u62e9\u6837\u4f8b\u65f6\u4f18\u5148\u9009\u62e9\u6700\u9760\u8fd1\u5206\u7c7b\u8fb9\u754c\u7684\u6837\u4f8b\u548c\u6700\u80fd\u4ee3\u8868\u805a\u7c7b\u7684\u6837\u4f8b\uff08\u5373\u805a\u7c7b\u4e2d\u5fc3\uff09\u3002\n\n# \u5e94\u7528\n## \u6587\u6863\u5206\u7c7b\u548c\u4fe1\u606f\u63d0\u53d6\n\u4ee5\u8d1d\u53f6\u65af\u65b9\u6cd5\u4f4d\u57fa\u51c6\u5206\u7c7b\u5668\uff0c\u4f7f\u7528\u57fa\u4e8e\u4e0d\u786e\u5b9a\u5ea6\u7f29\u51cf\u7684\u6837\u4f8b\u9009\u62e9\u7b97\u6cd5\u8fdb\u884c\u6587\u672c\u5206\u7c7b\u3002\n\n\u5c06EM\u7b97\u6cd5\u540c\u57fa\u4e8eQBC\u65b9\u6cd5\u7684\u4e3b\u52a8\u5b66\u4e60\u96c6\u5408\u3002EM\u7b97\u6cd5\u80fd\u591f\u6709\u6548\u7684\u5229\u7528\u672a\u6807\u6ce8\u6837\u4f8b\u4e2d\u7684\u4fe1\u606f\u63d0\u9ad8\u57fa\u51c6\u5206\u7c7b\u5668\u7684\u5206\u7c7b\u6b63\u786e\u7387\u3002\u800cQBC\u65b9\u6cd5\u80fd\u591f\u8fc5\u901f\u7f29\u51cf\u7248\u672c\u7a7a\u95f4\u3002\n\n## \u56fe\u50cf\u68c0\u7d22\n\u5229\u7528SVM\u4f5c\u4e3a\u57fa\u51c6\u5206\u7c7b\u5668\u7684\u4e3b\u52a8\u5b66\u4e60\u7b97\u6cd5\u6765\u5904\u7406\u56fe\u50cf\u68c0\u7d22\u3002\u8be5\u7b97\u6cd5\u91c7\u7528\u6700\u8fd1\u8fb9\u754c\u65b9\u6cd5\u4f5c\u4e3a\u6837\u4f8b\u9009\u62e9\u7b97\u6cd5\uff0c\u540c\u65f6\u5c06\u56fe\u50cf\u7684\u989c\u8272\u3001\u7eb9\u7406\u7b49\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u90e8\u5206\u7279\u5f81\u8fdb\u884c\u5b66\u4e60\u3002\n\n## \u5165\u4fb5\u68c0\u6d4b\n\u7531\u4e8e\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u8f83\u591a\u5730\u4f9d\u8d56\u4e13\u5bb6\u77e5\u8bc6\u548c\u6709\u6548\u7684\u6570\u636e\u96c6\uff0c\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528\u4e3b\u52a8\u5b66\u4e60\u7b97\u6cd5\u964d\u4f4e\u8fd9\u79cd\u4f9d\u8d56\u6027\u3002\n\n\n# Usage\n1. python3 label.py",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shibing624/labelit",
            "keywords": "labelit,active learning,label text,label image",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "labelit",
            "package_url": "https://pypi.org/project/labelit/",
            "platform": "Windows",
            "project_url": "https://pypi.org/project/labelit/",
            "project_urls": {
                "Homepage": "https://github.com/shibing624/labelit"
            },
            "release_url": "https://pypi.org/project/labelit/0.1.5/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "label text and image based on active learning.",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16043837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e00ccc9dd256e0a52db419671dc6e3fe",
                    "sha256": "a423694915db31cb391c113c3797d511abd9f0f60c4aa03742d9cda0bc4af8fc"
                },
                "downloads": -1,
                "filename": "labelit-0.1.5.tar.gz",
                "has_sig": false,
                "md5_digest": "e00ccc9dd256e0a52db419671dc6e3fe",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 55866,
                "upload_time": "2022-12-09T04:17:04",
                "upload_time_iso_8601": "2022-12-09T04:17:04.070200Z",
                "url": "https://files.pythonhosted.org/packages/fc/79/ae877010f5183be9104291e7480e2fbca5ddcfeeacecc9763fbfd9db4a9d/labelit-0.1.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}