{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "Abdulrasaq Lawani <me@zaqlabs.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Data Factory \nA simple to use python app for generating data of different types and configurations. Can be run as a module or used as library.\n\n## Usage Instruction as app\nUsage: dfac.py [OPTION...] [OUTPUT]...\nDatafactory generates random string of data for testing and other purposes.\n\nExamples:\n    dfac.py -t a -v n\n    dfac.py -t s -v u -x [filename]\n\nDESCRIPTION\nDatafactory generates random string of data for testing and other purposes.\n\n\nOPTIONS\n-t, --datatype\nOption for the data type to be generated. Below are the available datatypes.\n\n    Data Types\n        s, string \n            print out string as data type\n        a, array \n            print out array as data type \n\n\n-v, --valuetype\nOption for the type of value to be generated. Below are the available value type options.\n    \n    Value Types\n        For String data type\n            n, alphanumeric \n                print out string containing random values of latin alphabet and numbers\n            a, alphabet\n                print out random string alphabet in a mix of uppercase and lowercase.\n            u, upper\n                print out random string of alphabet in uppercase.\n            l, lower\n                print out random string of alphabet in lowercase.\n            y, alphasymbolic\n                print out random mix of alphabet and symbols.\n    \n        For Array data type\n            n, alphanumeric\n                print out array containing strings with random alphabets and numbers.\n            a, alphabet\n                print out array containing strings with random alphabets uppercase and lowercase.\n            u, upper\n                print out array containing strings with random alphabets uppercase.\n            l, lower\n                print out array containing strings with random alphabets containing lowercase.\n            y, alphasymbolic\n                print out array containing strings with random alphabets and symbols.\n            i, integer\n                print out array containing strings with random integer.\n            d, decimal\n                print out array containing strings with random decimal numbers.\n            o, symbolic\n                print out array containing string with random symbols.\n\n-0, --length\nOption to print out length of string or array.\n\n-L, --low\n(For Array types) Option to set minimum length of value.\n\n-H, --high\n(For Array types) Option to set maximum length of value.\n\n-x, --file\nPrint out generated value to file, if no name is provided output.txt is used.\n\n-h, --help\nPrint this help text.\n\n## Usage Instruction as library\n\nExamples:\nfrom core.StringGenerator import StringGenerator\nobject=StringGenerator(7,'AlphaNumeric')\nobject.generate()\n\nExample Output: \nhDCyDM6\n\nClass Available:\na. StringGenerator(length, type) [from core.StringGenerator]\nb .ArrayGenerator(length,type, low, high) [from core.ArrayGenerator]\n    low = lowest length of the data generated\n    high = highest length of the data generated  \n\n\nTypes available for ArrayGenerator:\n'AlphaNumeric',\n'Alphabet',\n'Alphabet_Upper',\n'Alphabet_Lower',\n'AlphaSymbolic',\n'Integer',\n'Decimal', \n'Symbolic'\n\nTypes available for StringGenerator:\n'AlphaNumeric',\n'Alphabet',\n'Alphabet_Upper',\n'Alphabet_Lower',\n'AlphaSymbolic'\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dfac",
            "package_url": "https://pypi.org/project/dfac/",
            "platform": null,
            "project_url": "https://pypi.org/project/dfac/",
            "project_urls": {
                "Bug Tracker": "https://github.com/sheunl/Data-Factory/issues",
                "Homepage": "https://github.com/sheunl/Data-Factory"
            },
            "release_url": "https://pypi.org/project/dfac/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.10",
            "summary": "A simple to use python app for generating data of different types and configurations.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15910037,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d2ecd7d08e4f326e2e36041841c37f09",
                    "sha256": "4dcd6f62075e56fea70697ee9027a304149a43f77c97b09d819fd45df8ef2f23"
                },
                "downloads": -1,
                "filename": "dfac-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d2ecd7d08e4f326e2e36041841c37f09",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 10545,
                "upload_time": "2022-11-28T04:54:53",
                "upload_time_iso_8601": "2022-11-28T04:54:53.437848Z",
                "url": "https://files.pythonhosted.org/packages/20/5c/f7eb1485f4034bec20bcb0d3ba235f59700b73a3e39c215f17ca841e4ee8/dfac-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "10542e53744a0b9514bb35bd46317223",
                    "sha256": "004a3ad4ab18ab150ff5d00bdf0fb3c002eeed4e2d5c93204b84946af714954c"
                },
                "downloads": -1,
                "filename": "dfac-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "10542e53744a0b9514bb35bd46317223",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 5475,
                "upload_time": "2022-11-28T04:54:55",
                "upload_time_iso_8601": "2022-11-28T04:54:55.425755Z",
                "url": "https://files.pythonhosted.org/packages/63/6d/c891dd14903425b77fdf73ba42c7bc0927e2e8a1983b985a39e50dc976cf/dfac-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}