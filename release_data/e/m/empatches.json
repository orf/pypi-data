{
    "0.1.0": {
        "info": {
            "author": "Talha Ilyas",
            "author_email": "mr.talhailyas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Mr-TalhaIlyas/EMPatches",
            "keywords": "python,extract image patches,merge image patches,patchify,sliding window",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "empatches",
            "package_url": "https://pypi.org/project/empatches/",
            "platform": null,
            "project_url": "https://pypi.org/project/empatches/",
            "project_urls": {
                "Homepage": "https://github.com/Mr-TalhaIlyas/EMPatches"
            },
            "release_url": "https://pypi.org/project/empatches/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Extract and Merge image patches for easy, fast and self-contained digital image processing and deep learning model training.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15560837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "110ff152ccbe59bcb937ae4e08ec64d0",
                    "sha256": "ee632321f2280de1028a0a6c69210a24802f481f05d1708507178c6ea824d3b2"
                },
                "downloads": -1,
                "filename": "empatches-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "110ff152ccbe59bcb937ae4e08ec64d0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3462,
                "upload_time": "2022-03-08T03:11:56",
                "upload_time_iso_8601": "2022-03-08T03:11:56.178117Z",
                "url": "https://files.pythonhosted.org/packages/8e/ce/0614ad9455d817eb5aa5b2fb9288b2e66b35bc66a6f3244a989e9ecda53e/empatches-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Talha Ilyas",
            "author_email": "mr.talhailyas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Mr-TalhaIlyas/EMPatches",
            "keywords": "python,extract image patches,merge image patches,patchify,sliding window",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "empatches",
            "package_url": "https://pypi.org/project/empatches/",
            "platform": null,
            "project_url": "https://pypi.org/project/empatches/",
            "project_urls": {
                "Homepage": "https://github.com/Mr-TalhaIlyas/EMPatches"
            },
            "release_url": "https://pypi.org/project/empatches/0.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Extract and Merge image patches for easy, fast and self-contained digital image processing and deep learning model training.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15560837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "59eead40deba689fd266bc66eac0510a",
                    "sha256": "66769785a8410a28843c8c98a96e6dd41441ac1ccab22eb42125f6bedb614c70"
                },
                "downloads": -1,
                "filename": "empatches-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "59eead40deba689fd266bc66eac0510a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3496,
                "upload_time": "2022-03-08T03:18:42",
                "upload_time_iso_8601": "2022-03-08T03:18:42.249484Z",
                "url": "https://files.pythonhosted.org/packages/47/a8/72d75fa9bd973821a2e45d224d0cbc3458abebea2bb44cca91a7e971db20/empatches-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Talha Ilyas",
            "author_email": "mr.talhailyas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Mr-TalhaIlyas/EMPatches",
            "keywords": "python,extract image patches,merge image patches,patchify,sliding window",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "empatches",
            "package_url": "https://pypi.org/project/empatches/",
            "platform": null,
            "project_url": "https://pypi.org/project/empatches/",
            "project_urls": {
                "Homepage": "https://github.com/Mr-TalhaIlyas/EMPatches"
            },
            "release_url": "https://pypi.org/project/empatches/0.1.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Extract and Merge image patches for easy, fast and self-contained digital image processing and deep learning model training.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15560837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f7e46acad83895cd5a3ecb2006d89741",
                    "sha256": "bdf02f9ece8877f619553aec6d22c3041368d96dd62e879c75e7d3b701d90ce4"
                },
                "downloads": -1,
                "filename": "empatches-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "f7e46acad83895cd5a3ecb2006d89741",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3667,
                "upload_time": "2022-06-15T00:02:11",
                "upload_time_iso_8601": "2022-06-15T00:02:11.513291Z",
                "url": "https://files.pythonhosted.org/packages/56/94/3c4b12220c560e42dfe86e084c124c49f481265d2853ff3d8f8ecb5723c5/empatches-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Talha Ilyas",
            "author_email": "mr.talhailyas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)\r\n [![Generic badge](https://img.shields.io/badge/Version-0.2.0-<COLOR>.svg)](https://shields.io/) [![Downloads](https://pepy.tech/badge/empatches)](https://pepy.tech/project/empatches)  [![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2FMr-TalhaIlyas%2FEMPatches&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=hits&edge_flat=false)](https://hits.seeyoufarm.com)\r\n\r\n# Extract and Merge Image Patches (EMPatches)\r\n\r\nExtract and Merge Batches/Image patches (tf/torch), fast and self-contained digital image processing and deep learning model training.\r\n\r\n* **Extract** patches\r\n* **Merge** the extracted patches to obtain the original image back.\r\n\r\n### *Update 0.2.0 (New Functionalities)*\r\n\r\n* Handling of `tensorflow`/`pytorch` **Batched images** of shape `BxCxHxW` -> `pytorch` or `BxHxWxC` -> `tf`. C can be any number not limited to just RGB channels.\r\n* **Modes** added for mergeing patches.\r\n    1. `overwrite`: next patch will overwrite the overlapping area of the previous patch.\r\n    2. `max` : maximum value of overlapping area at each pixel will be written.\r\n    3. `min`: minimum value of overlapping area at each pixel will be written.\r\n    4. `avg` : mean/average value of overlapping area at each pixel will be written.\r\n* Patching via providing **Indices**.\r\n* **Strided** patching thanks to [Andreasgejlm](https://github.com/Andreasgejlm)\r\n\r\n## Dependencies\r\n\r\n```\r\npython >= 3.6\r\nnumpy \r\nmath\r\n```\r\n\r\n# Usage\r\n\r\n## Extracting Patches\r\n```python\r\nfrom empatches import EMPatches\r\nimport imgviz # just for plotting\r\n\r\n# get image either RGB or Grayscale\r\nimg = cv2.imread('../digits.jpg')\r\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\r\n```\r\n\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/digit.jpg)\r\n\r\n```python\r\n# load module\r\nemp = EMPatches()\r\nimg_patches, indices = emp.extract_patches(img, patchsize=512, overlap=0.2)\r\n\r\n# displaying 1st 10 image patches\r\ntiled= imgviz.tile(list(map(np.uint8, img_patches)),border=(255,0,0))\r\nplt.figure()\r\nplt.imshow(tiled)\r\n```\r\n\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/patched.png)\r\n\r\n## Image Processing\r\nNow we can perform our operation on each patch independently and after we are done we can merge them back together.\r\n\r\n```python\r\n'''\r\npseudo code\r\n'''\r\n# do some processing, just store the patches in the list in same order\r\nimg_patches_processed = some_processing_func(img_patches)\r\n# or run your deep learning model on patches independently and then merge the predictions\r\nimg_patches_processed = model.predict(img_patches)\r\n'''For now lets just flip channels'''\r\nimg_patches[1] = cv2.cvtColor(img_patches[1], cv2.COLOR_BGR2RGB)\r\n```\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/patched_process.png)\r\n\r\n## Merging Patches via various `modes`\r\n\r\nAfter processing the patches if you can merge all of them back in original form as follows,\r\n\r\n```python\r\nmerged_img = emp.merge_patches(img_patches, indices, mode='max') # or\r\nmerged_img = emp.merge_patches(img_patches, indices, mode='min') # or\r\nmerged_img = emp.merge_patches(img_patches, indices, mode='overwrite') # or\r\nmerged_img = emp.merge_patches(img_patches, indices, mode='avg') # or\r\n# display\r\nplt.figure()\r\nplt.imshow(merged_img.astype(np.uint8))\r\nplt.title(Your mode)\r\n```\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/modesS.png)\r\n\r\n## Strided Patching\r\n\r\n```python\r\nimg_patches, indices = emp.extract_patches(img, patchsize=512, overlap=0.2, stride=128)\r\ntiled= imgviz.tile(list(map(np.uint8, img_patches)),border=(255,0,0))\r\nplt.figure()\r\nplt.imshow(tiled.astype(np.uint8))\r\nplt.title('Strided patching')\r\n```\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/stride.png)\r\n\r\n## Batched Patching\r\n\r\n### Things to know.\r\n\r\n* batch : Batch of images of shape either BxCxHxW -> pytorch or BxHxWxC -> tf\r\n                to extract patches from in list(list1, list2, ...),\r\n                where, list1->([H W C], [H W C], ...) and so on.\r\n* patchsize :  size of patch to extract from image only square patches can be\r\n             extracted for now.\r\n* overlap (Optional): overlap between patched in percentage a float between [0, 1].\r\n* stride (Optional): Step size between patches\r\n* type (Optional): Type of batched images tf or torch type\r\n\r\n* batch_patches : a list containing lists of extracted patches of images.\r\n* batch_indices : a list containing lists of indices of patches in order, whihc can be used \r\n            at later stage for 'merging_patches'.\r\n\r\n* merged_batch : a np array of shape BxCxHxW -> pytorch or BxHxWxC -> tf.\r\n\r\n\r\n### Extraction\r\n```python\r\nfrom empatches import BatchPatching\r\n\r\nbp = BatchPatching(patchsize=512, overlap=0.2, stride=None, typ='torch')\r\n# extracging\r\nbatch_patches, batch_indices = bp.patch_batch(batch) # batch of shape BxCxHxW, C can be any number 3 or greater\r\n\r\nplt.imshow(batch_patches[1][2])\r\nplt.title('3rd patch of 2nd image in batch')\r\n```\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/bp.png)\r\n\r\n### Merging\r\n```python\r\n# merging\r\n# output will be of shpae depending on typ variable\r\n# BxCxHxW -> torch or BxHxWxC -> tf\r\nmerged_batch = bp.merge_batch(batch_patches, batch_indices, mode='avg') \r\n\r\n# accessing the merged images\r\nplt.imshow(merged_batch[1,...].astype(np.uint8))\r\nplt.title('2nd merged image in batch')\r\n```\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/bm.png)\r\n\r\n\r\n## Patching via Providing Indices\r\n\r\n**NOTE** in this case merging is not supported.\r\n\r\n```python\r\nfrom empatches import patch_via_indices\r\n\r\nimg = cv2.imread('./digit.jpg')\r\nimg = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\r\nimg = cv2.resize(img, (1024, 512))\r\n\r\ni = [(0, 512, 0, 256),  # 1st patch dims/indices\r\n     (0, 256, 310, 922),# 2nd patch dims/indices\r\n     (0, 512, 512, 768)]# 3rd patch dims/indices\r\nimg_patches = patch_via_indices(img, indices)\r\n\r\n# plotting\r\ntiled= imgviz.tile(list(map(np.uint8, img_patches)),border=(255,0,0))\r\nplt.figure()\r\nplt.imshow(tiled.astype(np.uint8))\r\nplt.title('patching via providing indices')\r\n```\r\n\r\n![alt text](https://github.com/Mr-TalhaIlyas/EMPatches/raw/main/screens/p_via_indices.png)\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Mr-TalhaIlyas/EMPatches",
            "keywords": "python,extract image patches,merge image patches,patchify,sliding window",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "empatches",
            "package_url": "https://pypi.org/project/empatches/",
            "platform": null,
            "project_url": "https://pypi.org/project/empatches/",
            "project_urls": {
                "Homepage": "https://github.com/Mr-TalhaIlyas/EMPatches"
            },
            "release_url": "https://pypi.org/project/empatches/0.2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Extract and Merge Batches/Image patches (tf/torch) for easy, fast and self-contained digital image processing and deep learning model training.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15560837,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9f12d0493baaea6698a27edac33cb00b",
                    "sha256": "61dbc78813090fe2574a1796d2a1f87ae3fe15d894b5fd0dbbe8d91d78a02f19"
                },
                "downloads": -1,
                "filename": "empatches-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9f12d0493baaea6698a27edac33cb00b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6205,
                "upload_time": "2022-10-28T00:52:04",
                "upload_time_iso_8601": "2022-10-28T00:52:04.244561Z",
                "url": "https://files.pythonhosted.org/packages/b4/54/0d423c2f766065bb664fc6cbbee5b73d4d2dedaf343cdac03b3abb622655/empatches-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}