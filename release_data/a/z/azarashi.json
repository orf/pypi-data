{
    "0.6.6": {
        "info": {
            "author": "nbtk",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nbtk/azarashi",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "azarashi",
            "package_url": "https://pypi.org/project/azarashi/",
            "platform": null,
            "project_url": "https://pypi.org/project/azarashi/",
            "project_urls": {
                "Homepage": "https://github.com/nbtk/azarashi"
            },
            "release_url": "https://pypi.org/project/azarashi/0.6.6/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "QZSS DCR Decoder",
            "version": "0.6.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15685006,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c6c9ef0c1109aba149fc2201a05f3511",
                    "sha256": "eea3a54c193eb9180102a6d31b2ead9d75d76fcb230c76551545f4ab667150e3"
                },
                "downloads": -1,
                "filename": "azarashi-0.6.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c6c9ef0c1109aba149fc2201a05f3511",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 77039,
                "upload_time": "2022-04-08T15:28:17",
                "upload_time_iso_8601": "2022-04-08T15:28:17.522488Z",
                "url": "https://files.pythonhosted.org/packages/30/48/0e2ac8badf1a9197e8316e3838ef038c8bc8fcd5208e6d251677eef9714f/azarashi-0.6.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.7": {
        "info": {
            "author": "nbtk",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nbtk/azarashi",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "azarashi",
            "package_url": "https://pypi.org/project/azarashi/",
            "platform": null,
            "project_url": "https://pypi.org/project/azarashi/",
            "project_urls": {
                "Homepage": "https://github.com/nbtk/azarashi"
            },
            "release_url": "https://pypi.org/project/azarashi/0.6.7/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "QZSS DCR Decoder",
            "version": "0.6.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15685006,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "629ba5aa263648361d7071da85485f92",
                    "sha256": "462c2c7ab114a28354aa07e60e180a451e220847bb4933b871c9a181695c1f8f"
                },
                "downloads": -1,
                "filename": "azarashi-0.6.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "629ba5aa263648361d7071da85485f92",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 78992,
                "upload_time": "2022-06-22T12:18:24",
                "upload_time_iso_8601": "2022-06-22T12:18:24.599011Z",
                "url": "https://files.pythonhosted.org/packages/76/76/44982f65160137b3b71ac23cd7b5da18b15cfab5253a04ebedcb0b4b1015/azarashi-0.6.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.8": {
        "info": {
            "author": "nbtk",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Azarashi\nA QZSS DCR Decoder.\n\n## Description\nazarashi \u306f\u6e96\u5929\u9802\u885b\u661f\u307f\u3061\u3073\u304d\u304c\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u707d\u5bb3\u30fb\u5371\u6a5f\u7ba1\u7406\u901a\u5831\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30c7\u30b3\u30fc\u30c0\u30fc\u3067\u3059\u3002U-blox F9P \u3068 Sony Spresense \u304c\u51fa\u529b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u5f62\u5f0f\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Installation\n```\n$ pip install azarashi\n```\n\n## Preparation\n### U-blox F9P\n\u8a2d\u5b9a\u30c4\u30fc\u30eb U-center \u3067\u3001RXM-SFRBX \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u306f RXM-SFRBX \u30e1\u30c3\u30bb\u30fc\u30b8\u3092 USB \u306b\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u53c2\u8003\u8a2d\u5b9a\u624b\u9806\u3067\u3059\u3002\n```\nOpen U-center ->\n  View -> Configuration View ->\n    CFG (Configuration) -> Revert to default configuration -> Send\n    MSG (Messages) -> Messages -> 02-13 RXM-SFRBX ->\n      Check the \"USB\" box and type 1 in the \"on\" box -> Send\n    NMEA (NMEA Protocol) -> NMEA Version -> Select 4.11 -> Send\n    CFG (Configuration) -> Save current configuration -> Send\n```\n\u8a2d\u5b9a\u30c4\u30fc\u30eb U-center \u3067\u3001QZSS \u306e L1S \u30b7\u30b0\u30ca\u30eb\u53d7\u4fe1\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u306f GPS \u3068 QZSS \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3059\u3079\u3066\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u53c2\u8003\u8a2d\u5b9a\u624b\u9806\u3067\u3059\u3002\n```\nOpen U-center ->\n  View -> Generation 9 Configuration View -> GNSS Configuration ->\n    Check All the \"GPS\" and \"QZSS\" boxes ->\n  \u3000\u3000  Check the \"RAM\" and \"Flash\" boxes in the \"Write to layer\" ->\n \u3000\u3000\u3000\u3000   Send Configuration\n```\n\n### Sony Spresense\n[QZSS \u707d\u5371\u901a\u5831 (QZQSM) \u306e NMEA \u30bb\u30f3\u30c6\u30f3\u30b9\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002](https://developer.sony.com/develop/spresense/docs/arduino_tutorials_ja.html#_qzss_\u707d\u5371\u901a\u5831\u3092\u51fa\u529b\u3059\u308b)\n\n## CLI\nazarashi \u30b3\u30de\u30f3\u30c9\u306e\u6a19\u6e96\u5165\u529b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6d41\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### Hexadecimal\nazarashi \u30b3\u30de\u30f3\u30c9\u306b hex \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n```\n$ echo C6AF89A820000324000050400548C5E2C000000003DFF8001C00001185443FC | azarashi hex\n```\n\n### U-blox F9P\nstty \u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092 raw \u306b\u8a2d\u5b9a\u3057\u3001azarashi \u30b3\u30de\u30f3\u30c9\u306b ublox \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002USB \u3067\u306f\u306a\u304f UART \u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u9069\u5b9c stty \u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n```\n$ stty -F /dev/ttyACM0 raw\n$ cat /dev/ttyACM0 | azarashi ublox\n```\n\n### Sony Spresense\nstty \u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306b\u3057\u3001azarashi \u30b3\u30de\u30f3\u30c9\u306b spresense \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n```\n$ stty -F /dev/ttyUSB0\n$ cat /dev/ttyUSB0 | azarashi spresense\n```\n\n### --unique Option\n\u91cd\u8907\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u305b\u3093\u3002\n\n### --source Option\n\u30c7\u30b3\u30fc\u30c9\u524d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n## API\n### decode()\n```python\nazarashi.decode(msg, msg_type='hex')\n```\n\n* msg\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u306f bytes \u578b\u307e\u305f\u306f str \u578b\u3067\u3059\u3002\n\n* msg_type\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 'hex' \u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066 'ublox' \u307e\u305f\u306f 'spresense' \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002'ublox' \u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u30e1\u30c3\u30bb\u30fc\u30b8\u306f bytes \u578b\u3001'spresense' \u3092\u6307\u5b9a\u3057\u305f\u3068\u304d\u30e1\u30c3\u30bb\u30fc\u30b8\u306f str \u578b\u3067\u3059\u3002\n\n#### Example\n\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u5f97\u3089\u308c\u305f\u30ec\u30dd\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 print() \u306b\u308f\u305f\u3059\u3068\u3001\u30d2\u30e5\u30fc\u30de\u30f3\u30ea\u30fc\u30c0\u30d6\u30eb\u306a\u707d\u5bb3\u60c5\u5831\u3092\u8fd4\u3057\u307e\u3059\u3002\n```python\n>>> import azarashi\n>>> msg = 'C6AF89A820000324000050400548C5E2C000000003DFF8001C00001185443FC'\n>>> report = azarashi.decode(msg)\n>>> print(report)\n```\n```\n\u9632\u707d\u6c17\u8c61\u60c5\u5831(\u7dca\u6025\u5730\u9707\u901f\u5831)(\u767a\u8868)(\u8a13\u7df4/\u8a66\u9a13)\n*** \u3053\u308c\u306f\u8a13\u7df4\u3067\u3059 ***\n\u7dca\u6025\u5730\u9707\u901f\u5831\n\u5f37\u3044\u63fa\u308c\u306b\u8b66\u6212\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u767a\u8868\u6642\u523b: 3\u670810\u65e510\u66420\u5206\n\n\u9707\u592e\u5730\u540d: \u65e5\u5411\u7058\n\u5730\u9707\u767a\u751f\u6642\u523b: 10\u65e510\u66420\u5206\n\u6df1\u3055: 10km\n\u30de\u30b0\u30cb\u30c1\u30e5\u30fc\u30c9: 7.2\n\u9707\u5ea6(\u4e0b\u9650): \u9707\u5ea66\u5f31\n\u9707\u5ea6(\u4e0a\u9650): \u301c\u7a0b\u5ea6\u4ee5\u4e0a\n\u5cf6\u6839\u3001\u5ca1\u5c71\u3001\u5e83\u5cf6\u3001\u5c71\u53e3\u3001\u9999\u5ddd\u3001\u611b\u5a9b\u3001\u9ad8\u77e5\u3001\u798f\u5ca1\u3001\u4f50\u8cc0\u3001\u9577\u5d0e\u3001\u718a\u672c\u3001\u5927\u5206\u3001\u5bae\u5d0e\u3001\u9e7f\u5150\u5cf6\u3001\u4e2d\u56fd\u3001\u56db\u56fd\u3001\u4e5d\u5dde\n```\n\u30ec\u30dd\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001get_params() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n```python\n>>> from pprint import pprint\n>>> pprint(report.get_params())\n```\n```\n{'depth_of_hypocenter': '10km',\n 'disaster_category': '\u7dca\u6025\u5730\u9707\u901f\u5831',\n 'disaster_category_en': 'Earthquake Early Warning',\n 'disaster_category_no': 1,\n 'eew_forecast_regions': ['\u5cf6\u6839', '\u5ca1\u5c71', '\u5e83\u5cf6', '\u5c71\u53e3', '\u9999\u5ddd', '\u611b\u5a9b',\n                          '\u9ad8\u77e5', '\u798f\u5ca1', '\u4f50\u8cc0', '\u9577\u5d0e', '\u718a\u672c', '\u5927\u5206',\n                          '\u5bae\u5d0e', '\u9e7f\u5150\u5cf6', '\u4e2d\u56fd', '\u56db\u56fd', '\u4e5d\u5dde'],\n 'information_type': '\u767a\u8868',\n 'information_type_en': 'Issue',\n 'information_type_no': 0,\n 'magnitude': '7.2',\n 'message': b'\\xc6\\xaf\\x89\\xa8 \\x00\\x03$\\x00\\x00P@\\x05H\\xc5\\xe2\\xc0\\x00\\x00\\x00'\n            b'\\x03\\xdf\\xf8\\x00\\x1c\\x00\\x00\\x11\\x85D?\\xc0',\n 'message_header': None,\n 'message_type': 'DC Report (JMA)',\n 'notifications_on_disaster_prevention': ['\u5f37\u3044\u63fa\u308c\u306b\u8b66\u6212\u3057\u3066\u304f\u3060\u3055\u3044\u3002'],\n 'occurrence_time_of_eathquake': datetime.datetime(2022, 3, 10, 1, 0),\n 'preamble': 'C',\n 'raw': b'\\xaf\\x89\\xa8 \\x00\\x03$\\x00\\x00P@\\x05H\\xc5\\xe2\\xc0\\x00\\x00\\x00\\x03'\n        b'\\xdf\\xf8\\x00\\x1c\\x00\\x00\\x10',\n 'report_classification': '\u8a13\u7df4/\u8a66\u9a13',\n 'report_classification_en': 'Training/Test',\n 'report_classification_no': 7,\n 'report_time': datetime.datetime(2022, 3, 10, 1, 0),\n 'satellite_id': None,\n 'seismic_epicenter': '\u65e5\u5411\u7058',\n 'seismic_intensity_lower_limit': '\u9707\u5ea66\u5f31',\n 'seismic_intensity_upper_limit': '\u301c\u7a0b\u5ea6\u4ee5\u4e0a',\n 'sentence': 'C6AF89A820000324000050400548C5E2C000000003DFF8001C00001185443FC',\n 'timestamp': datetime.datetime(2022, 4, 8, 15, 8, 52, 930551)}\n```\n\u91cd\u8907\u3057\u3066\u53d7\u4fe1\u3057\u305f\u540c\u4e00\u60c5\u5831\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3069\u3046\u304b\u306f\u7b49\u4fa1\u6f14\u7b97\u5b50\u3067\u5224\u5225\u3067\u304d\u307e\u3059\u3002\n```python\n>>> msg2 = '9AAF89A820000324000050400548C5E2C000000003DFF8001C0000123FB3EB0'\n>>> report2 = azarashi.decode(msg2)\n>>> report == report2\n```\n```\nTrue\n```\n\n### decode_stream()\n```python\nazarashi.decode_stream(stream, msg_type='hex', callback=None, callback_args=(), callback_kwargs={}, unique=False)\n```\n\n* stream\n\nI/O\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092 open \u3057\u3066\u6e21\u3059\u3068\u304d\u306f\u3001\u4e8b\u524d\u306b stty \u30b3\u30de\u30f3\u30c9\u3067 'ublox' \u306a\u3089 raw \u30e2\u30fc\u30c9\u3001'spresense' \u306a\u3089\u30c6\u30ad\u30b9\u30c8\u30e2\u30fc\u30c9\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* msg_type\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f 'hex' \u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066 'ublox' \u307e\u305f\u306f 'spresense' \u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n* callback\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u305f\u3042\u3068\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3067\u3059\u3002None \u306e\u5834\u5408\u3001decode_stream() \u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u305f\u3073\u306b\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u3001decode_stream() \u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3044\u9650\u308a\u7e70\u308a\u8fd4\u3057\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3001\u305d\u306e\u305f\u3073\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u7d50\u679c\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\u4e0b\u8a18\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3067\u3059\u3002\n```python\ncallback(report, *callback_args, **callback_kwargs)\n```\n\n* calback_args\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u5f15\u6570\u3067\u3059\u3002\n\n* callback_kwargs\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u6e21\u3055\u308c\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u3059\u3002\n\n* unique\n\n\u91cd\u8907\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7121\u8996\u3057\u305f\u3044\u3068\u304d\u306f\u3001True \u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n#### Example\n\u6307\u5b9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30c7\u30b3\u30fc\u30c9\u3057\u305f\u30ec\u30dd\u30fc\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 print() \u306b\u6e21\u3057\u307e\u3059\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001stty \u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002U-blox \u306eGNSS\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f\u3001stty \u30b3\u30de\u30f3\u30c9\u306b raw \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n```python\nimport azarashi\nimport sys\n\nwith open('/dev/ttyACM0', mode='r') as f:\n    while True:\n        try:\n            azarashi.decode_stream(f,\n                                   msg_type='ublox',\n                                   callback=print)\n        except azarashi.QzssDcrDecoderException as e:\n            print(f'# [{type(e).__name__}] {e}\\n', file=sys.stderr)\n        except NotImplementedError as e:\n            print(f'# [{type(e).__name__}] {e}\\n', file=sys.stderr)\n```\n\n## Note\nIS-QZSS-DCR-010\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/nbtk/azarashi",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "azarashi",
            "package_url": "https://pypi.org/project/azarashi/",
            "platform": null,
            "project_url": "https://pypi.org/project/azarashi/",
            "project_urls": {
                "Homepage": "https://github.com/nbtk/azarashi"
            },
            "release_url": "https://pypi.org/project/azarashi/0.6.8/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "QZSS DCR Decoder",
            "version": "0.6.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15685006,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b5c05ac547719a1f27ee2e09625c72a",
                    "sha256": "80d3f7e0bc82668f4e468ef145671da66016de48f659e1fa16eddf64fb393b9b"
                },
                "downloads": -1,
                "filename": "azarashi-0.6.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1b5c05ac547719a1f27ee2e09625c72a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 79148,
                "upload_time": "2022-11-07T13:37:42",
                "upload_time_iso_8601": "2022-11-07T13:37:42.319669Z",
                "url": "https://files.pythonhosted.org/packages/8c/5b/ee27249d42250427b397134673c2cf1f8c05753d07d72b3d33e55839ea83/azarashi-0.6.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}