{
    "0.2.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3 :: Only",
                "Topic :: Scientific/Engineering :: Bio-Informatics"
            ],
            "description": "# make_prg\n\nA tool to create a PRG for input to [Pandora][pandora] and [Gramtools][gramtools] from a\nMultiple Sequence Alignment.\n\n[TOC]: #\n\n## Table of Contents\n- [Install](#install)\n  - [Conda](#conda)\n  - [Local](#local)\n  - [Container](#container)\n- [Usage](#usage)\n  - [CLI](#cli)\n  - [Nextflow](#nextflow)\n- [Input](#input)\n- [Changing parameters](#changing-parameters)\n\n## Install\n\n### PyPI\n\n```sh\npip install make_prg\n```\n\n### Conda\n\n[![Conda (channel only)](https://img.shields.io/conda/vn/bioconda/make_prg)](https://anaconda.org/bioconda/make_prg)\n[![bioconda version](https://anaconda.org/bioconda/make_prg/badges/platforms.svg)](https://anaconda.org/bioconda/make_prg)\n\nPrerequisite: [`conda`][conda] (and bioconda channel [correctly set up][channels])\n\n```sh\nconda install make_prg\n```\n\n### Local\n\nRequirements: `python>=3`\n\n```sh\ngit clone https://github.com/rmcolq/make_prg.git\ncd make_prg\npython -m pip install .\nmake_prg --help\n```\n\nTo additionally run the tests\n\n```shell\npython -m pip install nose hypothesis\nnosetests tests/\n```\n\nThis installs the CLI tool `make_prg`. The nextflow script `make_prg_nexflow.nf` assumes\nthat `make_prg` is installed.\n\n### Container\n\n[![Docker Repository on Quay](https://quay.io/repository/iqballab/make_prg/status \"Docker Repository on Quay\")](https://quay.io/repository/iqballab/make_prg)\n\nContainers for this tool are [hosted on quay.io][tags].\n\nAn example, of running it in a [Singularity][singularity] container would be\n\n```\ntag=\"latest\"\nURI=\"docker://quay.io/iqballab/make_prg:${tag}\"\nsingularity exec \"$URI\" make_prg --help\n```\n\nA list of the valid tags can be found [here][tags].\n\n## Usage\n\n### CLI\n\n```\n$ make_prg --help\nusage: make_prg <subcommand> <options>\n\nSubcommand entrypoint\n\noptional arguments:\n  -h, --help     show this help message and exit\n  -V, --version  show program's version number and exit\n  -v, --verbose  Run with high verbosity (debug level logging)\n\nAvailable subcommands:\n\n    from_msa     Make PRG from multiple sequence alignment\n```\n\n#### `from_msa`\n\n```\n$ make_prg from_msa --help\nusage: make_prg from_msa [options] <MSA input file>\n\npositional arguments:\n  MSA                   Input file: a multiple sequence alignment\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -f ALIGNMENT_FORMAT, --alignment_format ALIGNMENT_FORMAT\n                        Alignment format of MSA, must be a biopython AlignIO input alignment_format. See http://biopython.org/wiki/AlignIO. Default: fasta\n  -N MAX_NESTING, --max_nesting MAX_NESTING\n                        Maximum number of levels to use for nesting. Default: 5\n  -L MIN_MATCH_LENGTH, --min_match_length MIN_MATCH_LENGTH\n                        Minimum number of consecutive characters which must be identical for a match. Default: 7\n  -o OUTPUT_DIR, --outdir OUTPUT_DIR\n                        Output directory. Default: .\n  -n PRG_NAME, --prg_name PRG_NAME\n                        Prg file name. Default: MSA file name\n  -S SEQID, --seqid SEQID\n                        Sequence identifier to use for the output sequence/PRG. Default is the file name\n  --no_overwrite        Do not replace an existing prg file\n  -O OUTPUT_TYPE, --output-type OUTPUT_TYPE\n                        p: PRG, b: Binary, g: GFA, a: All. Combinations are allowed i.e., gb: GFA and Binary. Default: a\n  --log LOG             Path to write log to. Default is stderr\n```\n\n\n### Nextflow\n\nRequirements: [Nextflow][nf]\n\n```\n    Usage: nextflow run make_prg_nexflow.nf <arguments>\n\n    Required arguments:\n      --tsv_in  FILENAME  An index file of MSA to build PRGs of\n\n    Optional arguments:\n```\n\n\n## Input\n\nMultiple Sequence Alignment files for genes/dna sequences for which we wantPRGs, and an\ntab-separated index of these in the form:\n\n```\nsample_id       infile\nGC0000001   /absolute/path/to/GC0000001_na_aln.fa.gz\nGC0000002   /absolute/path/to/GC0000002_na_aln.fa\n```\n\n## Changing parameters\n\nThere are some parameters at the top of the nextflow file which could be changed but\nwhich I have not made command line parameters:\n\n```\nmax_nesting             This is the maximum number depth of bubbles in PRG, setting to 1 will allow variants, \\\\\n                        but no nesting\nmin_match_length        Controls graph complexity\nalignment_format        Any format accepted by biopython's AlignIO\nmax_forks_make_prg      If working on a cluster which allows unlimited parallel jobs per user, this will be \\\\\n                        used by nextflow to control maximum number of processes of this type that can run in \\\\\n                        parallel.\nmax_forks_make_fasta\n```\n\n[channels]: https://bioconda.github.io/user/install.html#set-up-channels\n[gramtools]: https://github.com/iqbal-lab-org/gramtools\n[nf]: https://www.nextflow.io/\n[pandora]: https://github.com/rmcolq/pandora\n[singularity]: https://sylabs.io/\n[tags]: https://quay.io/repository/iqballab/make_prg?tab=tags\n[conda]: https://conda.io\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/rmcolq/make_prg",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "make-prg",
            "package_url": "https://pypi.org/project/make-prg/",
            "platform": "",
            "project_url": "https://pypi.org/project/make-prg/",
            "project_urls": {
                "Homepage": "https://github.com/rmcolq/make_prg"
            },
            "release_url": "https://pypi.org/project/make-prg/0.2.0/",
            "requires_dist": [
                "biopython (>=1.70)",
                "numpy (>=1.14.0)",
                "scikit-learn (>=0.19.1)"
            ],
            "requires_python": "",
            "summary": "Build genome graphs (PRGs) from multiple sequence alignments",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12888765,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2fa1bfcf386d4a73486394b41dd59202",
                    "sha256": "b47930fad750770a2fe77d94bc8cf7f35a6ab658cb10223d9324e573abfc7cfd"
                },
                "downloads": -1,
                "filename": "make_prg-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2fa1bfcf386d4a73486394b41dd59202",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 32016,
                "upload_time": "2022-02-14T19:20:51",
                "upload_time_iso_8601": "2022-02-14T19:20:51.686878Z",
                "url": "https://files.pythonhosted.org/packages/94/f3/abefe9020492cee6f1f24a92c934ebdb20137cc8cdcda35793b24706130e/make_prg-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "58b96e61c43ef4a124ec5f6cc043f627",
                    "sha256": "65c6671dbc6c9e82073f193beaec35f3680b2ec25dfed61ffffb776ab693a060"
                },
                "downloads": -1,
                "filename": "make_prg-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "58b96e61c43ef4a124ec5f6cc043f627",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 28297,
                "upload_time": "2022-02-14T19:20:53",
                "upload_time_iso_8601": "2022-02-14T19:20:53.160907Z",
                "url": "https://files.pythonhosted.org/packages/91/bb/18f4e73791a7c670fc78cf8ac0ff1cc96bf297c5903cb61b8c95245c9eec/make_prg-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}