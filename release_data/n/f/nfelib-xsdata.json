{
    "0.9.0": {
        "info": {
            "author": "Rapha\u00ebl Valyi",
            "author_email": "\"raphael.valyi@akretion.com.br\"",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development :: Code Generators",
                "Topic :: Text Processing :: Markup :: XML"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/akretion/nfelib",
            "keywords": "e-invoicing,NFe,ERP,Odoo",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nfelib-xsdata",
            "package_url": "https://pypi.org/project/nfelib-xsdata/",
            "platform": null,
            "project_url": "https://pypi.org/project/nfelib-xsdata/",
            "project_urls": {
                "Homepage": "https://github.com/akretion/nfelib",
                "Source": "https://github.com/akretion/nfelib"
            },
            "release_url": "https://pypi.org/project/nfelib-xsdata/0.9.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "nfelib: electronic invoicing library for Brazil",
            "version": "0.9.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14635092,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b9752d07484d87c196981e8281763c25",
                    "sha256": "fcc8b970327366ce08f2c1aa2531f05e57ab8c7cf0627ba424e0a4e80f6abc7c"
                },
                "downloads": -1,
                "filename": "nfelib-xsdata-0.9.0.zip",
                "has_sig": false,
                "md5_digest": "b9752d07484d87c196981e8281763c25",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 844679,
                "upload_time": "2022-08-02T04:55:19",
                "upload_time_iso_8601": "2022-08-02T04:55:19.804666Z",
                "url": "https://files.pythonhosted.org/packages/08/9e/057277027edb0963eab6fd782d123edb878704c9b4e3b5ee94aad2e74727/nfelib-xsdata-0.9.0.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.1": {
        "info": {
            "author": "Rapha\u00ebl Valyi",
            "author_email": "\"raphael.valyi@akretion.com.br\"",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development :: Code Generators",
                "Topic :: Text Processing :: Markup :: XML"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/akretion/nfelib",
            "keywords": "e-invoicing,NFe,ERP,Odoo",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nfelib-xsdata",
            "package_url": "https://pypi.org/project/nfelib-xsdata/",
            "platform": null,
            "project_url": "https://pypi.org/project/nfelib-xsdata/",
            "project_urls": {
                "Homepage": "https://github.com/akretion/nfelib",
                "Source": "https://github.com/akretion/nfelib"
            },
            "release_url": "https://pypi.org/project/nfelib-xsdata/0.9.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "nfelib: electronic invoicing library for Brazil",
            "version": "0.9.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14635092,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "17794892dedccacbc278a95365346bef",
                    "sha256": "00082af7c385016aa7bc163a2ead31a37dd2cb4ec4cb03fdda0bef68721b2596"
                },
                "downloads": -1,
                "filename": "nfelib-xsdata-0.9.1.zip",
                "has_sig": false,
                "md5_digest": "17794892dedccacbc278a95365346bef",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 725497,
                "upload_time": "2022-08-02T23:27:20",
                "upload_time_iso_8601": "2022-08-02T23:27:20.759529Z",
                "url": "https://files.pythonhosted.org/packages/88/db/6ea3b7a5d72545380d50303ff366571b8ca09f6d6644befd707ae672bd9e/nfelib-xsdata-0.9.1.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.2": {
        "info": {
            "author": "Rapha\u00ebl Valyi",
            "author_email": "\"raphael.valyi@akretion.com.br\"",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development :: Code Generators",
                "Topic :: Text Processing :: Markup :: XML"
            ],
            "description": "[![Build Status](https://travis-ci.org/akretion/nfelib.svg?branch=master_gen_v4_00)](https://travis-ci.org/akretion/nfelib)\n\n[![nfelib](https://raw.githubusercontent.com/akretion/nfelib/master/ext/nfe.jpg)](https://github.com/akretion/nfelib/) by [![Akretion](https://raw.githubusercontent.com/akretion/nfelib/master/ext/akretion-logo2.png)](https://akretion.com/pt_BR)\n\n# nfelib Python Library\n\nA nfelib \u00e9 uma biblioteca para ler e gerir notas fiscais eletr\u00f4nicas brasileiras (NFe's). A nfelib n\u00e3o tem a pretens\u00e3o de solucionar toda burocracia do SPED sozinha, mas foca apenas na quest\u00e3o do parsing e da gera\u00e7\u00e3o da NFe.\n\n* Para transmitir as NFe's para a receita, aconselhamos a biblioteca Python Zeep, ou entao por examplo https://github.com/erpbrasil/erpbrasil.edoc.\n* E para imprimir o DANFE, \u00e9 possivel usar https://github.com/erpbrasil/erpbrasil.edoc.pdf\n\nNa Akretion queriamos algo modular, simples de se manter para usar com o ERP Odoo que adaptamos para as necessidades fiscais brasileiras. Tamb\u00e9m criamos outras bibliotecas semelhantes para os outros documentos eletr\u00f4nicos do SPED (e especialmente para NFS-e, MDFe, CTe, E-Social e SPED-Reinf, GNRE, BP-e).\n\nDurante anos usamos o https://github.com/aricaldeira/PySPED. Por\u00e9m no PySPED, o autor partiu para escrever e manter manualmente **mais de 10 000 de linhas de c\u00f3digo**, apenas nessa parte para montar o leiaute da NFe https://github.com/aricaldeira/PySPED/tree/master/pysped/nfe/leiaute. Mas isso ocasiona um custo de manuten\u00e7\u00e3o proibitivo a cada atualiza\u00e7\u00e3o dos esquemas sem falar que por se tratar de c\u00f3digo manual tem v\u00e1rios erros com as TAGs pouco usadas e na Akretion cansamos de escrever patch na urg\u00eancia no PySPED a cada vez que um cliente Odoo nosso n\u00e3o consegue transmitir uma NF'e. Na verdade o equivalente dessas 10 000 linhas de c\u00f3digo (anos de trabalho do autor) podem ser geradas por **esse \u00fanico comando** com a ferramenta [generateDS](http://www.davekuhlman.org/generateDS.html) usada por essa lib:\n\n```bash\ngenerateDS -o leiauteNFe.py leiauteNFe_v4.00.xsd\n```\n\nA nfelib permite de:\n\n* Gerir os XMLs dos documentos fiscais.\n* Validar os dados com **as mesmas valida\u00e7\u00f5es dos XSD's ao montar os objetos**, o que evita detectar os erros apenas ao transmitir o XML.\n* Importar XMLs e transforma-los em objetos Python. Usando um sistema de sub-classes, fica f\u00e1cil mapear esses objetos em outros objetos ou adicionar qualquer m\u00e9todo customizado.\n\nA nfelib \u00e9:\n\n* **Simples e confi\u00e1vel**. O c\u00f3digo \u00e9 gerido pelo generateDS a partir dos XSD's da Fazenda. Ele **reflete exatamente a especifica\u00e7\u00e3o fiscal** da vers\u00e3o do esquema escolhida sem que voc\u00ea deva se perguntar qual \u00e9 o grau de ader\u00eancia do c\u00f3digo.\n* Compat\u00edvel com **Python 3** (e com Python 2 se botar patches no generateDS e usar uma versao anterior)\n* Capaz de carregar **v\u00e1rias vers\u00f5es dos esquemas**. Isso pode ser bem \u00fatil ao receber uma nota fiscal com um leiaute antigo.\n\nAl\u00e9m disso, usando outros recursos do GenerateDS, \u00e9 poss\u00edvel ir al\u00e9m dessa biblioteca nfelib e gerir automaticamente o modelo de dados do ERP pelo menos no ERP Odoo que tem um framework bastante poderoso. Sendo assim, \u00e9 possivel montar dinamicamente as telas do usu\u00e1rio, a gera\u00e7\u00e3o do XML ou a importa\u00e7\u00e3o do XML quase que sem escrever c\u00f3digo (apenas relacionar os campos mapeados com os campos j\u00e1 existentes do ERP). Fica ent\u00e3o bem mais razo\u00e1vel para manter quando tem que atualizar os esquemas e assim tamb\u00e9m fica finalmente poss\u00edvel manter os dados do SPED dentro do ERP com um custo de manuten\u00e7\u00e3o compat\u00edvel com o modelo open source.\n\nVoc\u00ea pode aprender mais sobre o generateDS [aqui](http://www.davekuhlman.org/generateDS.html)\n\n# Como Instalar\n\n```bash\npip install git+https://github.com/akretion/nfelib\n```\n# Gerir a lib novamente / processo de release\n**Muito importante:** as fonte estao mantido na branch **master**. Entao voce tem que fazer primeiro\n\n```\ngit checkout master\n```\n\nDepois seria poss\u00edvel rodar o generateDS manualmente em cada arquivo xsd do esquema que interessa. Porem \u00e9 interessante instalar essa pequena ferramenta https://github.com/akretion/erpbrasil.edoc.gen para automatizar as opera\u00e7\u00f5es. Depois da lib instalada (ela puxa o pacote GenerateDS), basta fazer:\n```bash\n# Download dos esquemas de NFe do portal da Fazenda: https://www.nfe.fazenda.gov.br/portal/listaConteudo.aspx?tipoConteudo=/fwLvLUSmU8=\n\n# Pacote de Libera\u00e7\u00e3o n\u00ba 9 (Novo leiaute da NF-e, NT 2020.005, 2020.006 e NT 2021.002). Publicado em 29/06/2021.\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u https://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=lhqXSmnywl4=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retConsStatServ|retConsSitNFe|retEnviNFe|retConsReciNFe|retInutNFe\" -d .\n\n# Pacote de Libera\u00e7\u00e3o Distribui\u00e7\u00e3o de DF-e v1.02 (Atualizado em 25/10/16)\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u https://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=n3Kn9%20YZNak=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"distDFeInt|retDistDFeInt\" -d .\n\n# Pacote de Libera\u00e7\u00e3o Evento Generico v1.01 (Atualizado em 30/05/2014)\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u   http://hom.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=YaiBe2csOmA=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retEnvEvento\" -d .\n\n# Pacote de Libera\u00e7\u00e3o Evento Canc v1.01 (30/05/2014)\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u  http://hom.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=MtjAJ1Rurjc=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retEnvEventoCancNFe\" -d .\n\n# Pacote de Libera\u00e7\u00e3o Evento CCe v1.01 (30/05/2014)\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u https://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=P/FXaGiLKo0=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retEnvCCe\" -d .\n\n# Pacote de Libera\u00e7\u00e3o Evento Manifesta Destinat\u00e1rio v1.01 (30/05/2014)\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u https://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=y2nVL6/GFlU=\n# mude o encoding desse arquivo xsd de iso-8859-1 para utf-8 e amaldi\u00e7oe o cara que usou iso-8859-1\niconv -f iso-8859-1 /tmp/generated/schemas/nfe/v4_00/retEnvConfRecebto_v1.00.xsd -t UTF-8 -o /tmp/generated/schemas/nfe/v4_00/retEnvConfRecebto_v1.00.xsd\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retEnvConfRecebto\" -d .\n\n# Consulta Cadastro - Pacote de Libera\u00e7\u00e3o No. 6t (21/03/2014)\"\nerpbrasil-edoc-gen-download-schema -n nfe -v v4.00 -u https://www.nfe.fazenda.gov.br/portal/exibirArquivo.aspx?conteudo=/KLQ3Wi0ckY=\nerpbrasil-edoc-gen-generate-python -n nfe -v v4.00 -i \"retConsCad\" -d .\n```\nDepois voc\u00ea pode olhar os arquivos Python geridos na pasta nfelib/v4_00/ e rodar os testes por examplo (`python3 -m pytest  tests -v`).\n\nSe voc\u00ea quiser criar uma nova vers\u00e3o do nfelib no Github, depois de gerir voce tem fazer um commit do README.md com a receita do bolo atualizada (essa parte) e dos testes atualizados.\nDepois voce tem que trocar de branch de novo para a branch onde fica o codigo gerido e gerir de novo:\n```bash\nrm -r nfelib\ngit checkout master_gen_v4_00\ngit merge master -X theirs\n# gera de novo com o script acima (erpbrasil-edoc-gen-generate-python...)\n# roda os tests para ver se esta tudo OK\npython3 -m pytest  tests -v\n# copia os schemas, por examplo com\nrm -r schemas/nfe\ncp -r /tmp/generated/schemas/nfe schemas/nfe\ngit add schemas\ngit add nfelib\n# ai vc pode fazer um commit e um push com as mudan\u00e7as (e 2 PRs para as branches master e master_gen_v4_00 eventualmente)\n```\n\n# Rodar os testes\n\n```bash\npython3 -m pytest  tests -v\n```\n\n# Como Usar\n\n```python\n  # nfelib permite ler os dados de uma nota fiscal, por exemplo no formato 4.00:\n  >>> from nfelib.v4_00 import leiauteNFe_sub as parser\n  # vamos importar o XML da nota e transforma-lo em objeto Python:\n  >>> nota = parser.parse(inputfile)\n  # agora podemos trabalhar em cima do objeto e fazer opera\u00e7oes como:\n  >>> nota.infNFe.emit.CNPJ\n  '03102552000172'\n  >>> len(nota.infNFe.det)\n  42\n  # (a nota tem 42 linhas)\n\n  # podemos tambem alterar os dados:\n  nota.infNFe.emit.CNPJ = ...\n\n  # e finalmente podemos exportar a nota num arquivo de novo por examplo\n  >>> with open(filename, 'w') as f:\n  >>>     parser.export(nota, nfeProc=False, stream=f)\n\n\n  # nfelib tamb\u00e9m permite de montar o XML de uma nota fiscal com todas valida\u00e7\u00f5es dos XSDs j\u00e1 nos objetos:\n  >>> from nfelib.v4_00 import retEnviNFe as leiauteNFe\n  >>> enderEmit=leiauteNFe.TEnderEmi(xLgr='NKwaAJ5ZJ49aQYmqBvxMhBzkGUqvtXnqusGEtjDzKCXPGwrEZCS8LGKHyBbV',\n  nro='11mzXHR8rZTgfE35EqfGhiShiIwQfLCAziFDXVgs3EjLSPkZkCvfGNLMEf5y',\n  xCpl='Fr3gSvoAeKbGpQD3r98KFeB50P3Gq14XBVsv5fpiaBvJ3HTOpREiwYGs20Xw',\n  xBairro='67LQFlXOBK0JqAE1rFi2CEyUGW5Z8QmmHhzmZ9GABVLKa9AbV0uFR0onl7nU',\n  cMun='9999999',\n  xMun='s1Cr2hWP6bptQ80A9vWBuTaODR1U82LtKQi1DEm3LsAXu9AbkSeCtfXJVTKG',\n  UF='RS',\n  CEP='88095550',\n  cPais=1058,\n  fone='12345678901324')\n\n  # se tentar montar algum objeto com algum dado inv\u00e1lido:\n  >>> emitente=leiauteNFe.emitType(enderEmit=enderEmit, CPF='Brazil is a f*cking bureaucracy', xNome='Raphael', IE='12345678901234', IEST='84', IM='zjfBnFVG8TBq8iW', CNAE='0111111', CRT='3')\n>>> leiauteNFe.emitType(enderEmit=enderEmit, CPF='Brazil is a f*cking bureaucracy', xNome='Raphael', IE='12345678901234', IEST='84', IM='zjfBnFVG8TBq8iW', CNAE='0111111', CRT='3')\n/home/rvalyi/DEV/nfelib-edocs-gen/nfelib/v4_00/leiauteNFe.py:5821: UserWarning: Value \"b'Brazil is a f*cking bureaucracy'\" does not match xsd maxLength restriction on TCpf\n  warnings_.warn('Value \"%(value)s\" does not match xsd maxLength restriction on TCpf' % {\"value\" : value.encode(\"utf-8\")} )\n/home/rvalyi/DEV/nfelib-edocs-gen/nfelib/v4_00/leiauteNFe.py:5824: UserWarning: Value \"b'Brazil is a f*cking bureaucracy'\" does not match xsd pattern restrictions: [['^([0-9]{11})$']]\n  warnings_.warn('Value \"%s\" does not match xsd pattern restrictions: %s' % (value.encode('utf-8'), self.validate_TCpf_patterns_, ))\n<nfelib.v4_00.leiauteNFe.emitType object at 0x7f623c4be748>\n\n  # para gerir o XML:\n  >>> import sys\n  >>> emitente.export(sys.stdout, 0)\n  <emitType>\n    <CPF>12345678901</CPF>\n    <xNome>Raphael</xNome>\n    <enderEmit>\n        <xLgr>NKwaAJ5ZJ49aQYmqBvxMhBzkGUqvtXnqusGEtjDzKCXPGwrEZCS8LGKHyBbV</xLgr>\n        <nro>11mzXHR8rZTgfE35EqfGhiShiIwQfLCAziFDXVgs3EjLSPkZkCvfGNLMEf5y</nro>\n        <xCpl>Fr3gSvoAeKbGpQD3r98KFeB50P3Gq14XBVsv5fpiaBvJ3HTOpREiwYGs20Xw</xCpl>\n        <xBairro>67LQFlXOBK0JqAE1rFi2CEyUGW5Z8QmmHhzmZ9GABVLKa9AbV0uFR0onl7nU</xBairro>\n        <cMun>9999999</cMun>\n        <xMun>s1Cr2hWP6bptQ80A9vWBuTaODR1U82LtKQi1DEm3LsAXu9AbkSeCtfXJVTKG</xMun>\n        <UF>RS</UF>\n        <CEP>88095550</CEP>\n        <cPais>1058</cPais>\n        <fone>12345678901324</fone>\n    </enderEmit>\n    <IE>12345678901234</IE>\n    <IEST>84</IEST>\n    <IM>zjfBnFVG8TBq8iW</IM>\n    <CNAE>0111111</CNAE>\n    <CRT>3</CRT>\n  </emitType>\n```\n\n# Uso no ERP Odoo\n\nPara cada documento eletr\u00f4nico para o qual existe esquema XSD's, a Akretion fez um repo Github com uma lib desse tipo.\nMas fomos al\u00e9m: eu tambem criei um gerador de modelos abstratos (mixins) Odoo, de forma que para os documentos fiscais complexos como a NFe vc tem um marshalling/unmarshalling automatico dos dados ate os modelos persistentes do ERP e se remapeando nos objetos nativos do Odoo https://github.com/akretion/generateds-odoo\n\nO uso dessa lib no Odoo para emitir e importar NFe's pode ser visto nesse m\u00f3dulo da OCA: https://github.com/OCA/l10n-brazil/tree/12.0/l10n_br_nfe\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/akretion/nfelib",
            "keywords": "e-invoicing,NFe,ERP,Odoo",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nfelib-xsdata",
            "package_url": "https://pypi.org/project/nfelib-xsdata/",
            "platform": null,
            "project_url": "https://pypi.org/project/nfelib-xsdata/",
            "project_urls": {
                "Homepage": "https://github.com/akretion/nfelib",
                "Source": "https://github.com/akretion/nfelib"
            },
            "release_url": "https://pypi.org/project/nfelib-xsdata/0.9.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "nfelib: electronic invoicing library for Brazil",
            "version": "0.9.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14635092,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3b4b7cd9dfa734d5849b5c68f9084941",
                    "sha256": "2461214ad07ee3efaa48ec88bd8f41e333f3abd71289f84b2dcff7b778d34d33"
                },
                "downloads": -1,
                "filename": "nfelib-xsdata-0.9.2.zip",
                "has_sig": false,
                "md5_digest": "3b4b7cd9dfa734d5849b5c68f9084941",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 725510,
                "upload_time": "2022-08-02T23:35:54",
                "upload_time_iso_8601": "2022-08-02T23:35:54.078831Z",
                "url": "https://files.pythonhosted.org/packages/af/01/f69d30b9d64f94abc05ddf980ef4926594be72a73d572f0fbe6ed5a14b21/nfelib-xsdata-0.9.2.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}