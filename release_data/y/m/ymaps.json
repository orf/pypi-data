{
    "0.2": {
        "info": {
            "author": "",
            "author_email": "sfkan6 <sfkan6@yandex.ru>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ymaps",
            "package_url": "https://pypi.org/project/ymaps/",
            "platform": null,
            "project_url": "https://pypi.org/project/ymaps/",
            "project_urls": {
                "Homepage": "https://github.com/sfkan6/ymap-api"
            },
            "release_url": "https://pypi.org/project/ymaps/0.2/",
            "requires_dist": [
                "requests (==2.28.1)",
                "urllib3 (==1.26.12)"
            ],
            "requires_python": "",
            "summary": "Client for Yandex Maps API",
            "version": "0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15135417,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "25a8e09427727d6dfb1f859379fd5e97",
                    "sha256": "57ce6c1b06e78404c210c1da1ec8aec6adf8004b3131c95c440600913c421f36"
                },
                "downloads": -1,
                "filename": "ymaps-0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "25a8e09427727d6dfb1f859379fd5e97",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7343,
                "upload_time": "2022-09-02T11:18:20",
                "upload_time_iso_8601": "2022-09-02T11:18:20.435036Z",
                "url": "https://files.pythonhosted.org/packages/6f/56/aa72791f4ba34758ae6609db68bd1e7b81b48b6226969db0dfbec6396a35/ymaps-0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d39dd6fe66a4b0e4d12a8fc9276623e6",
                    "sha256": "84e008f5fa2c58ee6743ca6b4578da9130e0b2cd6e2913221160860bfdc73a96"
                },
                "downloads": -1,
                "filename": "ymaps-0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "d39dd6fe66a4b0e4d12a8fc9276623e6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8989,
                "upload_time": "2022-09-02T11:18:22",
                "upload_time_iso_8601": "2022-09-02T11:18:22.064889Z",
                "url": "https://files.pythonhosted.org/packages/98/db/9f753836039445c5f2b6a5dd41beb97a44fb8599c4a69712639cd3165f40/ymaps-0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1": {
        "info": {
            "author": "",
            "author_email": "sfkan6 <sfkan6@yandex.ru>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "# ymaps\n---------\n[![PyPI Version][pypi-image]][pypi-url]\n![GitHub][license]\n\n**`ymaps`** - \u044d\u0442\u043e \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f [API \u042f\u043d\u0434\u0435\u043a\u0441 \u041a\u0430\u0440\u0442](https://yandex.ru/dev/maps/mapsapi/) (\u041d\u0435\u043e\u0444\u0438\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439)\n\n\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0438 \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435:\n\n* SearchClient, SearchAsync - [\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f\u043c](https://yandex.ru/dev/maps/geosearch/?from=mapsapi)\n* GeocoderClient, GeocodeAsync - [\u0413\u0435\u043e\u043a\u043e\u0434\u0435\u0440](https://yandex.ru/dev/maps/geocoder/?from=mapsapi)\n* StaticClient, StaticAsync - [Static API](https://yandex.ru/dev/maps/staticapi/?from=mapsapi)\n\n\n\n---------\n\n## \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\n\n```\npip install ymaps\n```\n\n\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n* python 3.7+\n* [httpx](https://pypi.org/project/httpx/)\n\n---------\n## \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\n\n> \u0413\u0435\u043e\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0434\u043e\u043b\u0433\u043e\u0442\u0430 \u0438 \u0448\u0438\u0440\u043e\u0442\u0430\n\n> \\* - \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\n\n> \u0412\u0441\u0435 \u043d\u0435\u043e\u0431\u044f\u0437\u044f\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e \u0438\u043c\u0435\u043d\u0438\n\n\n### \u041a\u043b\u0438\u0435\u043d\u0442\u044b\n#### \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b:\n - api_key*, [\u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043a\u043b\u044e\u0447](https://developer.tech.yandex.ru/).\n - timeout, \u0442\u0430\u0439\u043c\u0430\u0443\u0442 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 1 \u0441\u0435\u043a\u0443\u043d\u0434\u0430.\n - lang, \u044f\u0437\u044b\u043a \u043e\u0442\u0432\u0435\u0442\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0443\u0441\u0441\u043a\u0438\u0439 (ru_RU), \u0435\u0441\u043b\u0438 \u0432 \u043c\u0435\u0442\u043e\u0434\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d 'tr_TR', \u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d 'tr_TR', \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430.\n\n\n> api_key \u0432 StaticClient \u043d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d, \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0439\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0435 \u043a\u043e\u043c\u043c\u0435\u0440\u0447\u0435\u0441\u043a\u0443\u044e \u0432\u0435\u0440\u0441\u0438\u044e.\n\n\n#### \u041f\u0440\u0438\u043c\u0435\u0440\u044b:\n```\n# api_key = 'key', timeout = 10, lang = 'en_RU'\nSearchClient('key', 10, 'en_RU')\n\n# api_key = 'key', timeout = 1, lang = 'ru_RU'\nGeocoderClient('key')\n\n# api_key = None, timeout = 1, lang = 'ru_RU'\nStaticClient() # api_key=None, timeout=1, lang='ru_RU'\n```\n\n### [SearchClient](https://yandex.ru/dev/maps/geosearch/doc/concepts/request.html)\n\u041f\u043e\u0438\u0441\u043a\u0430 \u043f\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f\u043c \u0438 \u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c (\u0442\u043e\u043f\u043e\u043d\u0438\u043c\u044b), \n[\u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430](https://yandex.ru/dev/maps/geosearch/doc/concepts/response_structure_toponyms.html).\n#### search()\n\n\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f\u043c \u0438\u043b\u0438 \u0442\u043e\u043f\u043e\u043d\u0438\u043c\u0430\u043c.\n\n- __query*__, \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0438\u0441\u043a\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n- __lang__, \u044f\u0437\u044b\u043a \u043e\u0442\u0432\u0435\u0442\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e ru_RU\n- __type__, \u0442\u0438\u043f\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432. geo \u2014 \u0442\u043e\u043f\u043e\u043d\u0438\u043c\u044b, biz \u2014 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0442\u0438\u043f\u0430 \u043f\u043e \u0442\u0435\u043a\u0441\u0442\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n- __ll__, \u0446\u0435\u043d\u0442\u0440 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430\n- __spn__, \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430\n- __bbox__, \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430, \u043f\u0440\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 bbox \u0438 ll+spn \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 bbox \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u043c\n- __rspn__, \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u00ab\u0436\u0435\u0441\u0442\u043a\u043e\u0433\u043e\u00bb \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e False (\u043d\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0442\u044c)\n- __results__, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 10\n- __skip__, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e), \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c, skip \u0434\u043e\u043b\u0436\u043d\u043e \u043d\u0430\u0446\u0435\u043b\u043e \u0434\u0435\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 results\n\n#### \u041f\u0440\u0438\u043c\u0435\u0440\u044b:\n```\nclient = SearchClient('api_key')\n\n\n# query\nclient.search('\u043b\u0435\u0431\u0435\u0434\u0438\u043d\u043e\u0435 \u043e\u0437\u0435\u0440\u043e')\nclient.search('55.750788,37.618534')\nclient.search('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15')\nclient.search('+7 495 739-70-70')\nclient.search('\u041e\u041e\u041e \u042f\u043d\u0434\u0435\u043a\u0441')\n\n# lang\nclient.search('\u041e\u041e\u041e \u042f\u043d\u0434\u0435\u043a\u0441', lang='ru_RU')\nclient.search('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15', lang='be_BY')\n\n# type\nclient.search('\u041e\u041e\u041e \u042f\u043d\u0434\u0435\u043a\u0441', lang='ru_RU', type='biz')\nclient.search('\u043b\u0435\u0431\u0435\u0434\u0438\u043d\u043e\u0435 \u043e\u0437\u0435\u0440\u043e', type='geo')\n\n# ll, spn (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e)\nclient.search('\u043f\u043b\u043e\u0449\u0430\u0434\u044c \u0420\u0435\u0432\u043e\u043b\u044e\u0446\u0438\u0438', ll=[37.618920, 55.756994], spn=[0.552069, 0.400552])\n\n# bbox\nclient.search('\u0422\u0435\u0430\u0442\u0440', bbox=[36.83, 55.67, 38.24, 55.91])\n\n# rspn, \u043d\u0435 \u0438\u0441\u043a\u0430\u0442\u044c \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u043c\u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438\nclient.search('\u0422\u0435\u0430\u0442\u0440', rspn=True, bbox=[36.83, 55.67, 38.24, 55.91])\n\n# results\nclient.search('\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f', results=25)\n\n# skip\nclient.search('\u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f', results=25, skip=25)\n\n\n# asynchronous\nclient = SearchAsync('api_key')\nawait client.search('\u041e\u041e\u041e \u042f\u043d\u0434\u0435\u043a\u0441', lang='ru_RU')\n```\n\n### [GeocoderClient](https://yandex.ru/dev/maps/geocoder/doc/desc/concepts/input_params.html)\n\n\u041f\u0440\u044f\u043c\u043e\u0435 \u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u0435 \u0433\u0435\u043e\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, [\u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430](https://yandex.ru/dev/maps/geocoder/doc/desc/reference/response_structure.html).\n#### geocode()\n\n\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u0430\u0434\u0440\u0435\u0441 \u0432 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n\n- __geocode*__, \u0442\u0435\u043a\u0441\u0442 \u043f\u043e\u0438\u0441\u043a\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n- __rspn__, \u043f\u0440\u0438\u0437\u043d\u0430\u043a \u00ab\u0436\u0435\u0441\u0442\u043a\u043e\u0433\u043e\u00bb \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e False (\u043d\u0435 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0442\u044c)\n- __ll__, \u0446\u0435\u043d\u0442\u0440 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430\n- __spn__, \u0440\u0430\u0437\u043c\u0435\u0440\u044b \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430\n- __bbox__, \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430, \u043f\u0440\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 bbox \u0438 ll+spn \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 bbox \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0431\u043e\u043b\u0435\u0435 \u043f\u0440\u0438\u043e\u0440\u0438\u0442\u0435\u0442\u043d\u044b\u043c\n- __format__, \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430 \u0433\u0435\u043e\u043a\u043e\u0434\u0435\u0440\u0430 xml, json; json \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \n- __results__, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e 10\n- __skip__, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0432 \u043e\u0442\u0432\u0435\u0442\u0435 (\u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441 \u043f\u0435\u0440\u0432\u043e\u0433\u043e), \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c, skip \u0434\u043e\u043b\u0436\u043d\u043e \u043d\u0430\u0446\u0435\u043b\u043e \u0434\u0435\u043b\u0438\u0442\u044c\u0441\u044f \u043d\u0430 results\n- __lang__, \u044f\u0437\u044b\u043a \u043e\u0442\u0432\u0435\u0442\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e ru_RU\n\n#### reverse()\n\n\u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u0435\u0442 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u0432 \u0430\u0434\u0440\u0435\u0441 \u043e\u0431\u044a\u0435\u043a\u0442\u0430.  \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u0435 \u0436\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0447\u0442\u043e \u0438 geocode() \u0438 \u0435\u0449\u0435:\n\n* __geocode*__, \u0433\u0435\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u044b \u043e\u0431\u044a\u0435\u043a\u0442\u0430\n* __sco__, \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0438 \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442, longlat \u2014 \u0434\u043e\u043b\u0433\u043e\u0442\u0430, \u0448\u0438\u0440\u043e\u0442\u0430, latlong \u2014 \u0448\u0438\u0440\u043e\u0442\u0430, \u0434\u043e\u043b\u0433\u043e\u0442\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e longlat\n* __kind__, \u0432\u0438\u0434 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0442\u043e\u043f\u043e\u043d\u0438\u043c\u0430 (house, street, metro, district, locality)\n\n#### \u041f\u0440\u0438\u043c\u0435\u0440\u044b:\n```\nclient = GeocoderClient('api_key')\n\n# geocode\nclient.geocode('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15')\n\n#reverse\nclient.reverse([37.611347, 55.760241])\n\n# format, kind\nclient.reverse([37.611347, 55.760241], format='xml', kind='street')\n\n# sco\nclient.reverse([55.760241, 37.611347], sco='latlong')\n\n# ll, spn (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u043d\u043e)\nclient.geocode('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15', ll=[30.301324, 59.951921], spn=[0.552069, 0.400552])\n\n# bbox\nclient.geocode('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15', bbox=[36.83, 55.67, 38.24, 55.91])\n\n\n# asynchronous\nclient = GeocodeAsync('api_key')\nawait client.geocode('\u0421\u0430\u043d\u043a\u0442-\u041f\u0435\u0442\u0435\u0440\u0431\u0443\u0440\u0433, \u0443\u043b. \u0411\u043b\u043e\u0445\u0438\u043d\u0430, 15')\n```\n\n### [StaticClient](https://yandex.ru/dev/maps/staticapi/doc/1.x/dg/concepts/input_params.html)\n\n\u0424\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043a\u0430\u0440\u0442\u044b \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432,\n\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bytes.\n\n#### getimage()\n\n- __ll*__, \u0446\u0435\u043d\u0442\u0440 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u0438\u0441\u043a\u0430, \u0434\u043e\u043b\u0433\u043e\u0442\u0430 \u0438 \u0448\u0438\u0440\u043e\u0442\u0430 \u0446\u0435\u043d\u0442\u0440\u0430 \u043a\u0430\u0440\u0442\u044b \u0432 \u0433\u0440\u0430\u0434\u0443\u0441\u0430\u0445\n- __l*__, \u043f\u0435\u0440\u0435\u0447\u0435\u043d\u044c \u0441\u043b\u043e\u0435\u0432, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0445 \u0442\u0438\u043f \u043a\u0430\u0440\u0442\u044b: map (\u0441\u0445\u0435\u043c\u0430), sat (\u0441\u043f\u0443\u0442\u043d\u0438\u043a), sat,skl (\u0433\u0438\u0431\u0440\u0438\u0434), trf (\u0421\u043b\u043e\u0439 \u043f\u0440\u043e\u0431\u043e\u043a)\n- __spn__, \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043f\u043e\u043a\u0430\u0437\u0430 \u043a\u0430\u0440\u0442\u044b \u043f\u043e \u0434\u043e\u043b\u0433\u043e\u0442\u0435 \u0438 \u0448\u0438\u0440\u043e\u0442\u0435 (\u0432 \u0433\u0440\u0430\u0434\u0443\u0441\u0430\u0445)\n- __z__, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u044b (0-17), \u0441\u043c\n- __size__, \u0448\u0438\u0440\u0438\u043d\u0430 \u0438 \u0432\u044b\u0441\u043e\u0442\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u044b (\u0432 \u043f\u0438\u043a\u0441\u0435\u043b\u0430\u0445)\n- __scale__, \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043a\u0430\u0440\u0442\u0435 (\u043e\u0442 1.0 \u0434\u043e 4.0)\n- __pt__, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0439 \u0438\u043b\u0438 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u0435\u0442\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u043d\u0430 \u043a\u0430\u0440\u0442\u0435\n- __pl__, \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043d\u0430\u0431\u043e\u0440 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u0433\u0435\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0444\u0438\u0433\u0443\u0440 (\u043b\u043e\u043c\u0430\u043d\u044b\u0445 \u0438 \u043c\u043d\u043e\u0433\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c \u043d\u0430 \u043a\u0430\u0440\u0442\u0435\n- __lang__, \u044f\u0437\u044b\u043a \u043e\u0442\u0432\u0435\u0442\u0430, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e ru_RU\n\n#### \u041f\u0440\u0438\u043c\u0435\u0440\u044b:\n\n```\nclient = StaticClient()\n\n# l\nclient.getimage([37.620070, 55.753630], l=['sat', 'skl'])\n\n# spn\nclient.getimage([37.620070, 55.753630], l=['sat', 'trf'], spn=[0.02, 0.02])\n\n# z scale\nclient.getimage([37.620070, 55.753630], z=12, scale=2.5)\n\n# size \nclient.getimage([37.620070, 55.753630], size=[450, 450])\n\n# pt\nclient.getimage([37.620070, 55.753630], pt=['37.620070,55.753630,pmwtm1', '37.62006,55.753632,pmwtm2'])\n\n# pl\nclient.getimage([37.620070, 55.753630], pl=['c:ec473fFF,f:00FF00A0,w:5,37.51,55.83', 'c:ec473fFF,f:00FF00A0,w:5,37.49,55.70,37.51,55.83'])\n\n\n# asynchronous\nclient = StaticAsync()\nawait client.getimage([37.620070, 55.753630], l=['sat', 'skl'])\n```\n\n\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435:\n```sh\nwith open('file.png', \"wb\") as f:\n\tf.write(response)\n```\n\n## Development setup\n\n```sh\n$ python3 -m venv venv\n$ . venv/bin/activate\n$ make deps\n$ tox\n```\n\n## License\n\n[MIT](https://choosealicense.com/licenses/mit/)\n\n<!-- Badges -->\n[pypi-image]: https://img.shields.io/pypi/v/ymaps?color=blue\n[pypi-url]: https://pypi.org/project/ymaps/\n\n[license]: https://img.shields.io/github/license/sfkan6/ymaps\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ymaps",
            "package_url": "https://pypi.org/project/ymaps/",
            "platform": null,
            "project_url": "https://pypi.org/project/ymaps/",
            "project_urls": {
                "Home": "https://github.com/sfkan6/ymaps"
            },
            "release_url": "https://pypi.org/project/ymaps/1.1/",
            "requires_dist": [
                "httpx>=0.23.0"
            ],
            "requires_python": ">=3.7",
            "summary": "Client for Yandex Maps API",
            "version": "1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15135417,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "81857cb2518a61ceaf099f71ae94855f",
                    "sha256": "253270dbe8251948875af2b4b16e63c829587bdc3667dca41bf692d091ab25d2"
                },
                "downloads": -1,
                "filename": "ymaps-1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "81857cb2518a61ceaf099f71ae94855f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 8528,
                "upload_time": "2022-09-18T17:39:43",
                "upload_time_iso_8601": "2022-09-18T17:39:43.762697Z",
                "url": "https://files.pythonhosted.org/packages/1c/dc/526121326e7be392bd4e7150ff3bc58bb58a340ced90ba838b21e3443f34/ymaps-1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "573da247e7e5a8bb1653c144531a22c2",
                    "sha256": "7db3637707b6754f8b37039804ac5ad471e9f70be67fe2295ee78772f546c812"
                },
                "downloads": -1,
                "filename": "ymaps-1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "573da247e7e5a8bb1653c144531a22c2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 6596,
                "upload_time": "2022-09-18T17:39:45",
                "upload_time_iso_8601": "2022-09-18T17:39:45.291150Z",
                "url": "https://files.pythonhosted.org/packages/91/da/a715516594ca0080bdbbd5436b42cfa9a5468f85b0a2e6003b855564e206/ymaps-1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}