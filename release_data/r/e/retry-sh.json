{
    "1.0.0": {
        "info": {
            "author": "invl, Alexey Matveev",
            "author_email": "shizacat@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development"
            ],
            "description_content_type": "text/x-rst; charset=UTF-8",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shizacat/retry",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "retry-sh",
            "package_url": "https://pypi.org/project/retry-sh/",
            "platform": null,
            "project_url": "https://pypi.org/project/retry-sh/",
            "project_urls": {
                "Homepage": "https://github.com/shizacat/retry"
            },
            "release_url": "https://pypi.org/project/retry-sh/1.0.0/",
            "requires_dist": [
                "decorator (>=5)"
            ],
            "requires_python": ">=3.6",
            "summary": "Easy to use retry decorator.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16007719,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "43dd37ac98010c7fafc5530cd97cec3d",
                    "sha256": "4a825dee5382406514d69f16d65a47f6b5f5f8cd811ebd6c5a12b3ca82f000ba"
                },
                "downloads": -1,
                "filename": "retry_sh-1.0.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "43dd37ac98010c7fafc5530cd97cec3d",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.6",
                "size": 5103,
                "upload_time": "2022-12-06T12:46:15",
                "upload_time_iso_8601": "2022-12-06T12:46:15.705932Z",
                "url": "https://files.pythonhosted.org/packages/6f/1c/1e59537112ed3f03f41db394cf8cb96e7a7ee79fd95ede510c1c6eaf6170/retry_sh-1.0.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8e83cb435f59db0161ede22816c90906",
                    "sha256": "51f4da8fd3a2bda8ec9c618bd7ebaa5e0cd8fa93089ea5c563bf870d326c5eff"
                },
                "downloads": -1,
                "filename": "retry-sh-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8e83cb435f59db0161ede22816c90906",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4261,
                "upload_time": "2022-12-06T12:46:17",
                "upload_time_iso_8601": "2022-12-06T12:46:17.874652Z",
                "url": "https://files.pythonhosted.org/packages/b0/77/659cb7c658e9f0543ce8a8fe52a33ba0ab819a5a6c9d3e5695ceae05e381/retry-sh-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.4": {
        "info": {
            "author": "invl, Alexey Matveev",
            "author_email": "shizacat@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development"
            ],
            "description": "retry\n=====\n\n.. image:: https://img.shields.io/pypi/v/retry.svg?maxAge=2592000\n        :target: https://pypi.python.org/pypi/retry/\n\n.. image:: https://img.shields.io/pypi/l/retry.svg?maxAge=2592000\n        :target: https://pypi.python.org/pypi/retry/\n\n.. image:: https://github.com/shizacat/retry/actions/workflows/python_package.yaml/badge.svg\n        :target: https://github.com/shizacat/retry/actions/workflows/python_package.yaml\n\n\nEasy to use retry decorator.\n\nStep side\n---------\n\nIt's fork: https://github.com/invl/retry\n\nMy changes had started from version 0.9.3 (see ChangeLog)\n\n\nFeatures\n--------\n\n- No external dependency (stdlib only).\n- (Optionally) Preserve function signatures (`pip install decorator`).\n- Original traceback, easy to debug.\n\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install retry-sh\n\n\nAPI\n---\n\nretry decorator\n^^^^^^^^^^^^^^^\n\n.. code:: python\n\n    def retry(exceptions=Exception, tries=-1, delay=0, max_delay=None, backoff=1, jitter=0, logger=logging_logger):\n        \"\"\"Return a retry decorator.\n\n        :param exceptions: an exception or a tuple of exceptions to catch. default: Exception.\n        :param tries: the maximum number of attempts. default: -1 (infinite).\n        :param delay: initial delay between attempts. default: 0.\n        :param max_delay: the maximum value of delay. default: None (no limit).\n        :param backoff: multiplier applied to delay between attempts. default: 1 (no backoff).\n        :param jitter: extra seconds added to delay between attempts. default: 0.\n                       fixed if a number, random if a range tuple (min, max)\n        :param logger: logger.warning(fmt, error, delay) will be called on failed attempts.\n                       default: retry.logging_logger. if None, logging is disabled.\n        \"\"\"\n\nVarious retrying logic can be achieved by combination of arguments.\n\n\nExamples\n\"\"\"\"\"\"\"\"\n\n.. code:: python\n\n    from retry import retry\n\n.. code:: python\n\n    @retry()\n    def make_trouble():\n        '''Retry until succeed'''\n\n.. code:: python\n\n    @retry(ZeroDivisionError, tries=3, delay=2)\n    def make_trouble():\n        '''Retry on ZeroDivisionError, raise error after 3 attempts, sleep 2 seconds between attempts.'''\n\n.. code:: python\n\n    @retry((ValueError, TypeError), delay=1, backoff=2)\n    def make_trouble():\n        '''Retry on ValueError or TypeError, sleep 1, 2, 4, 8, ... seconds between attempts.'''\n\n.. code:: python\n\n    @retry((ValueError, TypeError), delay=1, backoff=2, max_delay=4)\n    def make_trouble():\n        '''Retry on ValueError or TypeError, sleep 1, 2, 4, 4, ... seconds between attempts.'''\n\n.. code:: python\n\n    @retry(ValueError, delay=1, jitter=1)\n    def make_trouble():\n        '''Retry on ValueError, sleep 1, 2, 3, 4, ... seconds between attempts.'''\n\n.. code:: python\n\n    # If you enable logging, you can get warnings like 'ValueError, retrying in\n    # 1 seconds'\n    if __name__ == '__main__':\n        import logging\n        logging.basicConfig()\n        make_trouble()\n\nretry_call\n^^^^^^^^^^\n\n.. code:: python\n\n    def retry_call(f, fargs=None, fkwargs=None, exceptions=Exception, tries=-1, delay=0, max_delay=None, backoff=1,\n                   jitter=0,\n                   logger=logging_logger):\n        \"\"\"\n        Calls a function and re-executes it if it failed.\n\n        :param f: the function to execute.\n        :param fargs: the positional arguments of the function to execute.\n        :param fkwargs: the named arguments of the function to execute.\n        :param exceptions: an exception or a tuple of exceptions to catch. default: Exception.\n        :param tries: the maximum number of attempts. default: -1 (infinite).\n        :param delay: initial delay between attempts. default: 0.\n        :param max_delay: the maximum value of delay. default: None (no limit).\n        :param backoff: multiplier applied to delay between attempts. default: 1 (no backoff).\n        :param jitter: extra seconds added to delay between attempts. default: 0.\n                       fixed if a number, random if a range tuple (min, max)\n        :param logger: logger.warning(fmt, error, delay) will be called on failed attempts.\n                       default: retry.logging_logger. if None, logging is disabled.\n        :returns: the result of the f function.\n        \"\"\"\n\nThis is very similar to the decorator, except that it takes a function and its arguments as parameters. The use case behind it is to be able to dynamically adjust the retry arguments.\n\n.. code:: python\n\n    import requests\n\n    from retry.api import retry_call\n\n\n    def make_trouble(service, info=None):\n        if not info:\n            info = ''\n        r = requests.get(service + info)\n        return r.text\n\n\n    def what_is_my_ip(approach=None):\n        if approach == \"optimistic\":\n            tries = 1\n        elif approach == \"conservative\":\n            tries = 3\n        else:\n            # skeptical\n            tries = -1\n        result = retry_call(make_trouble, fargs=[\"http://ipinfo.io/\"], fkwargs={\"info\": \"ip\"}, tries=tries)\n        print(result)\n\n    what_is_my_ip(\"conservative\")\n\n\n\n",
            "description_content_type": "text/x-rst; charset=UTF-8",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/shizacat/retry",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "retry-sh",
            "package_url": "https://pypi.org/project/retry-sh/",
            "platform": null,
            "project_url": "https://pypi.org/project/retry-sh/",
            "project_urls": {
                "Homepage": "https://github.com/shizacat/retry"
            },
            "release_url": "https://pypi.org/project/retry-sh/1.0.4/",
            "requires_dist": [
                "decorator (>=5)"
            ],
            "requires_python": ">=3.6",
            "summary": "Easy to use retry decorator.",
            "version": "1.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16007719,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1368b702bd5898f1145fe0ce21ef59ed",
                    "sha256": "dfbd15c912543a6d171b65dff3c1aabf0b164257a7bf0089d0c83971d36eea9b"
                },
                "downloads": -1,
                "filename": "retry_sh-1.0.4-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1368b702bd5898f1145fe0ce21ef59ed",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.6",
                "size": 5103,
                "upload_time": "2022-12-06T12:51:24",
                "upload_time_iso_8601": "2022-12-06T12:51:24.720189Z",
                "url": "https://files.pythonhosted.org/packages/7a/32/608464934312d9ffa1142e14cf90874e661b067451ef44274deb974e3b4b/retry_sh-1.0.4-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7192e806ed1d935fb367f12da43391a3",
                    "sha256": "6c052e1e9c70809e79bcd4eb4c970ba8a4aa1b20a6bf224dea4f5a87f70f72d9"
                },
                "downloads": -1,
                "filename": "retry-sh-1.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "7192e806ed1d935fb367f12da43391a3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4229,
                "upload_time": "2022-12-06T12:51:26",
                "upload_time_iso_8601": "2022-12-06T12:51:26.392338Z",
                "url": "https://files.pythonhosted.org/packages/23/6f/9dafdddfa27f9514607a325759215429d90504bf422bd5aab9d7b30aeab2/retry-sh-1.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}