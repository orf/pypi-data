{
    "0.1": {
        "info": {
            "author": "skydownacai",
            "author_email": "932997367@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# aiocea  \u5f02\u6b65\u6570\u5b57\u8d27\u5e01\u4ea4\u6613\u6240\u63a5\u53e3\u6846\u67b6\n\naiocea\u662f \u57fa\u4e8easynico \u4e0eaiohttp\u7684\u6570\u5b57\u8d27\u5e01\u4ea4\u6613\u6240\u63a5\u53e3\u6574\u5408\u6846\u67b6\u3002\u8be5\u6846\u67b6\u5c01\u88c5\u4e86\u5e01\u5b89\u4ea4\u6613\u6240\u7684API(\u672a\u6765\u5c06\u652f\u6301\u66f4\u591a\u4ea4\u6613\u6240), \u5b9e\u73b0\u4e86\u4e32\u884c,\u5e76\u53d1, \u4e32\u884c\u4e0e\u5e76\u53d1\u6df7\u5408\u6267\u884c\u7684 \u7f51\u7edc\u8bf7\u6c42\u4efb\u52a1\u3002 \u8be5\u6846\u67b6\u903b\u8f91\u6e05\u6670\uff0c\n\n## Getting Started : \u5feb\u901f\u7406\u89e3\u6846\u67b6\u4e0e\u903b\u8f91\n\n\u4e00\u4e2a\u5f02\u6b65\u7f51\u7edc\u8bf7\u6c42\u79f0\u4e4b\u4e3a\u4e00\u4e2a\u4efb\u52a1(Task), \u6574\u4e2a\u6846\u67b6\u7684\u8c03\u7528\u662f\u4efb\u52a1\u9a71\u52a8\u578b\u7684\uff0c\u4e14\u5177\u6709\u6807\u51c6\u7684\u6d41\u7a0b\u3002\u4f46\u6846\u67b6\u7684\u8bbe\u8ba1\u4ecd\u7136\u63d0\u4f9b\u4e86\u8db3\u591f\u591a\u7684\u7075\u6d3b\u6027\u3002\u5b8c\u6210\u4efb\u4f55\u4e00\u4e2a\u7279\u5b9a\u7684\u52a0\u5bc6\u6570\u5b57\u8d27\u5e01\u63a5\u53e3\u8bf7\u6c42\u4efb\u52a1\u90fd\u8981\u7ecf\u8fc7\u4ee5\u4e0b\u51e0\u4e2a\u6b65\u9aa4: \n\n### 1. \u5b9e\u4f8b\u4ea4\u6613\u6240API\n\naiocea \u5728utils.py \u4e2d\u5c01\u88c5\u4e86\u4ea4\u6613\u6240Restful API\u8bf7\u6c42\u65b9\u6cd5(\u76ee\u524d\u4ec5\u652f\u6301\u5e01\u5b89)\u3002\u5176\u4e2d, \u5e01\u5b89\u4ea4\u6613\u6240\u4e3a\u7c7b`BinanceRestApi` \uff0c\u5b83\u5c01\u88c5\u4e86\u8bf7\u6c42\u5e01\u5b89\u4ea4\u6613\u6240Restful API\u65f6\u7684\u8bf7\u6c42\u65b9\u6cd5\u3002\u4f20\u5165\u4f60\u7684API_KEY\u4e0eAPI_SERECT\u5373\u53ef\u5b8c\u6210\u4e00\u4e2a\u4ea4\u6613\u6240API\u8bf7\u6c42\u5b9e\u4f8b\u3002\u5982\u4e0b\u4ee3\u7801:\n\n```python\nfrom utils import BinanceRestApi\nAPI = BinanceRestApi(api_key= \"your api key here\",\n\t\t\t\t\t api_secret=\"your api secret here\")\n```\n\n`BinanceRestApi` \u4e2d\u5b9a\u4e49\u4e86request\u65b9\u6cd5\u3002\u8c03\u7528\u8be5\u65b9\u6cd5\u8bf7\u6c42\u67d0\u4e2a\u7f51\u5740\u5c06\u4f1a\u5728\u8bf7\u6c42\u5934\u4e0equerystring\u4e2d\u6dfb\u52a0\u5e01\u5b89\u4ea4\u6613\u6240\u9700\u8981\u7279\u5b9a\u7684\u53c2\u6570\uff0c\u4ece\u800c\u5b9e\u73b0\u6570\u636e\u7684\u83b7\u53d6\u3002\n\n### 2. \u5b9a\u4e49\u4efb\u52a1\n\n\u5728aico\u4e2d,`Task`\u5b50\u7c7b,  `GatherTask` \u7c7b, `SerialTask` \u7c7b\uff0c \u90fd\u662f\u6846\u67b6\u6240\u8ba4\u53ef \u4efb\u52a1\u7c7b\u578b\u3002\u6211\u4eec\u7edf\u79f0\u4e3a\u4efb\u52a1\u6cdb\u578b`GenericTask`\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u9010\u4e2a\u9610\u8ff0\u3002\u6240\u6709`GenericTask` \u7c7b\u5bf9\u8c61\u90fd\u5177\u6709**result**\u5c5e\u6027\uff0c\u65b9\u4fbf\u5728\u5b8c\u6210\u4efb\u52a1\u540e\u8c03\u53d6\u7ed3\u679c\u3002\n\n#### `Task `\u53ca\u5176\u5b50\u7c7b\n\n\u5728tasks.py\u4e2d\u5b9a\u4e49\u4e86`Task`\u7c7b\u3002\u4efb\u4f55\u4e00\u4e2a\u7ee7\u627f\u81ea`Task`\u7c7b, \u4e14\u5728 async def \\__call__(self, *args, **kwargs) \u65b9\u6cd5\u4e2d\u5b9a\u4e49\u4e86\u5f02\u6b65\u8bf7\u6c42\u7ed3\u679c\u7684\u7c7b\uff0c\u90fd\u79f0\u4e4b\u4e3a\u67d0\u4e2a\u7279\u5b9a\u4efb\u52a1\u7c7b\u3002\u5982\u8bf7\u6c42\u5e01\u5b89\u5e01\u672c\u4f4d\u5408\u7ea6\u670d\u52a1\u5668ping: \n\n```python\nclass CoinMPing(Task):\n\t'''\n\t\u6d4b\u8bd5\u670d\u52a1\u5668\u8fde\u901a\n\t'''\n\tasync def __call__(self, *args, **kwargs):\n\t\tresponse = await self.binance_API.\\\n\t\trequest(method = \"GET\",url = BinanceRestApi.CoinM_BASE_URL + \"/dapi/v1/ping\")\n\t\treturn response\n\n\tdef __str__(self):\n\t\treturn  \"ping\u670d\u52a1\u5668\"\n```\n\n`Task`\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b, \u4ed6\u662f\u6574\u4e2a\u6846\u67b6\u6267\u884c\u4efb\u52a1\u7684\u6700\u5c0f\u5355\u5143\u3002\u5b83\u8981\u6c42\u6bcf\u4e2a\u5b50\u7c7b\u5b9e\u73b0async def \\__call__(self, *args, **kwargs) \u65b9\u6cd5\uff0c\u5b9a\u4e49\u5f02\u6b65\u8bf7\u6c42\u7684\u7ed3\u679c\uff0c\u5e76\u4f7f\u7528return\u8fd4\u56de, \u4ece\u800c\u5b8c\u6210\u5bf9\u67d0\u4e2a\u7279\u5b9a\u4efb\u52a1\u7684\u5b9a\u4e49\u3002\n\n\u4efb\u4f55\u7ee7\u627f\u81ea`Task`\u7684\u5b50\u7c7b\u5bf9\u8c61\u90fd\u6709\u4ee5\u4e0b\u5c5e\u6027\u548c\u65b9\u6cd5:\n\n1. **result :**  \n\n   \u8be5\u5c5e\u6027\u4fdd\u5b58\u8be5\u4efb\u52a1\u5728\u5f02\u6b65\u8bf7\u6c42\u6210\u529f\u540e\u7684\u8fd4\u56de\u7ed3\u679c\u5373async def \\__call__()\u4e2d\u7684return\u503c \u3002**\u7528\u6237\u4e0d\u53ef\u624b\u52a8\u8bbe\u7f6e,\u7531\u6846\u67b6\u7ef4\u62a4\u3002**\n\n2. **binance_API :**  \n\n   **\u8be5\u5c5e\u6027\u7684\u8bbe\u7f6e\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e0d\u540c\u7684API_KEY,API_SECRET\u540c\u65f6\u83b7\u53d6\u6570\u636e**\uff0c\u5b83\u662f`BinanceRestApi` \u7684\u5b9e\u4f8b, \u56e0\u6b64\u7528\u6237\u5728\u5b9a\u4e49`Task`\u5b50\u7c7b\u65f6\u5019\u53ef\u4ee5\u8c03\u7528\u8be5\u5c5e\u6027\u7684`request`\u65b9\u6cd5\uff0c\u5b9e\u73b0\u7279\u5b9aAPI\u4e0b\u7684\u7f51\u7edc\u8bf7\u6c42\u3002\u8be5\u5c5e\u6027\u7684\u9ed8\u8ba4\u503c\u5c06\u7ee7\u627f\u81ea\u7c7b\u53d8\u91cf `Task.default_binance_API` \u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u901a\u8fc7`Task.set_default_binance_API()`\u65b9\u6cd5\u6765\u8bbe\u7f6e\u7c7b\u53d8\u91cf\uff0c\u90a3\u4e48\u5728\u4e4b\u540e\u521b\u5efa\u7684 `Task`\u5b50\u7c7b\u5b9e\u4f8b\u7684**binance_API**\u5c5e\u6027\u90fd\u5c06\u7ee7\u627f\u8fd9\u4e2a\u503c\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7\u8bbe\u7f6e\u7c7b\u53d8\u91cf\u7684\u65b9\u6cd5\u5b9e\u73b0\u4e0d\u540c`Task`\u5b50\u7c7b\u5728\u521d\u59cb\u5316\u65f6\u62e5\u6709\u4e0d\u540c\u7684**binance_API**\u5c5e\u6027\u3002\n\n   ```python\n   from tasks import Task\n   from utils import  BinanceRestApi\n   from tasklists import CoinMPing\n\n\n   #\u5b9a\u4e49\u4e24\u4e2a\u4e0d\u540c\u7684API\u8bf7\u6c42\u63a5\u53e3\n   API1 = BinanceRestApi(api_key   = \"key_1\",\n   \t\t\t\t\t  api_secret= \"screte_1\")\n\n   API2 = BinanceRestApi(api_key   = \"key_2\",\n   \t\t\t\t\t  api_secret= \"screte_2\")\n\n   #\u8bbe\u7f6eTask\u5b50\u7c7b\u5b9e\u4f8b\u9ed8\u8ba4\u4f7f\u7528\u7684binanceRestApi\n\n   Task.set_default_binance_API(API1)\n\n   task1 = CoinMPing() # CoinMPing\u662f\u9884\u5b9a\u4e49\u597d\u7684Task\u5b50\u7c7b,\n\n   print(\"task1:\", task1.binance_API.api_key) # output: key_1\n\n   #\u66f4\u6362Task\u5b50\u7c7b\u5b9e\u4f8b\u9ed8\u8ba4\u4f7f\u7528\u7684binanceRestApi\n   Task.set_default_binance_API(API2)\n\n   task2 = CoinMPing() # CoinMPing\u662f\u9884\u5b9a\u4e49\u597d\u7684Task\u5b50\u7c7b,\n\n   print(\"task2:\", task2.binance_API.api_key) # output: key_2\n   ```\n\n3. \\__str__ : \u8be5\u65b9\u6cd5\u7528\u4e8e\u547d\u540d\u8fd9\u4e2a\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u5982\u82e5\u6ca1\u6709\u5b9e\u73b0\uff0c\u5c06\u7ee7\u627f\u81ea\u7236\u7c7b`Task`\u4e2d\u7684\u65b9\u6cd5 \n\n**aiocea \u5728tasklists.py \u91cc\u5df2\u7ecf\u5b9a\u4e49\u4e86\u5e38\u7528\u7684\u5e01\u5b89\u6570\u636e\u8bf7\u6c42\u4efb\u52a1\uff0c\u5728\u5927\u591a\u6570\u573a\u666f\u4e0b,\u76f4\u63a5\u5bfc\u5165\u4f7f\u7528\u5373\u53ef\u3002\u8fd4\u56de\u6570\u636e\u5747\u4e3a\u539f\u59cb\u8fd4\u56de\u6570\u636ejson\u5904\u7406\u540e\u7684\u7ed3\u679c\u3002**\n\n\n\n#### `GatherTask`  \u5e76\u53d1\u4efb\u52a1\u7c7b\n\n`GatherTask` \u7528\u4e8e\u5c06\u591a\u4e2a`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5305\u88c5\u6210\u4e00\u4e2a\u5e76\u53d1\u4efb\u52a1\u7c7b\u3002\u4f7f\u5f97\u5728\u6267\u884c\u7684\u65f6\u5019\u53ef\u4ee5\u5e76\u53d1\u6267\u884c\u3002\u6ce8\u610f,`GenericTask` \u662f\u4e09\u79cd\u4efb\u52a1\u7c7b\u578b\u7684\u7edf\u79f0\uff0c\u56e0\u6b64\u6211\u4eec\u5b9e\u9645\u4e0a\u4e0d\u4ec5\u53ef\u4ee5\u5c06\u591a\u4e2a\u5355\u72ec\u4efb\u52a1\u5305\u88c5\u6210\u4e00\u4e2a\u5e76\u884c\u4efb\u52a1\uff0c\u4e5f\u53ef\u4ee5\u5c06\u591a\u4e2a\u4e32\u884c\u4efb\u52a1\u5305\u88c5\u6210\u4e00\u4e2a\u5e76\u53d1\u4efb\u52a1\u3002\u5b9e\u4f8b\u5316\u4e00\u4e2a`GatherTask` \u975e\u5e38\u7b80\u5355\u3002\u53ea\u9700\u8981\u5728\u6784\u9020\u65f6,\u4f20\u5165\u591a\u4e2a`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5373\u53ef\u3002\u5982\u4e0b\u4f8b\u5b50:\n\n```python\nfrom tasks import GatherTask\nfrom tasklists import CoinMPing,CoinMServerTime\n\n#ping\u670d\u52a1\u5668\u4e0e\u83b7\u53d6\u670d\u52a1\u5668\u65f6\u95f4\u5e76\u53d1\u6267\u884c\ngathertask = GatherTask(CoinMPing(),\n                  CoinMServerTime())\n#\u5c55\u793a\u4efb\u52a1\ngathertask.show_tasks()\n# output:\n# \u5e76\u53d1\u4efb\u52a1(2):\n#     ping\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\n#     \u83b7\u53d6\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\u65f6\u95f4\n\n```\n\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7show_tasks()\u65b9\u6cd5\u5c55\u793a\u5f53\u524d\u5e76\u53d1\u4efb\u52a1\u7684\u4efb\u52a1\u961f\u5217\u3002\n\n`GatherTask` \u5177\u6709**result**\u5c5e\u6027\uff0c\u4ed6\u662f\u4f20\u5165\u7684\u6240\u6709`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5bf9\u5e94\u7684**result**\u5c5e\u6027\u6784\u6210\u7684\u5217\u8868\u3002\n\n\n\n#### `SerialTask`  \u4e32\u884c\u4efb\u52a1\u7c7b\n\n\u4e0e`GatherTask`\u7c7b\u578b\u7c7b\u4f3c\u3002`SerialTask`  \u7528\u4e8e\u5c06\u591a\u4e2a`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5305\u88c5\u6210\u4e00\u4e2a\u4e32\u884c\u4efb\u52a1\u7c7b\u3002\u4f7f\u5f97\u5728\u6267\u884c\u7684\u65f6\u5019\u4fdd\u8bc1\u662f\u540c\u6b65\u6267\u884c\u3002\u5b9e\u4f8b\u5316\u4e00\u4e2a`SerialTask`  \u975e\u5e38\u7b80\u5355\u3002\u53ea\u9700\u8981\u5728\u6784\u9020\u65f6,\u4f20\u5165\u591a\u4e2a`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5373\u53ef\u3002\u5982\u4e0b\u4f8b\u5b50:\n\n```python\nfrom tasks import SerialTask\nfrom tasklists import CoinMPing,CoinMServerTime\n\n#ping\u670d\u52a1\u5668\u4e0e\u83b7\u53d6\u670d\u52a1\u5668\u65f6\u95f4\u4e0d\u540c\u6267\u884c\nserialtask = SerialTask(CoinMPing(),\n                     CoinMServerTime())\n#\u5c55\u793a\u4efb\u52a1\nserialtask.show_tasks()\n# output:\n# \u4e32\u884c\u4efb\u52a1(2):\n#     ping\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\n#     \u83b7\u53d6\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\u65f6\u95f4\n```\n\n\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7show_tasks()\u65b9\u6cd5\u5c55\u793a\u5f53\u524d\u5e76\u53d1\u4efb\u52a1\u7684\u4efb\u52a1\u961f\u5217\u3002\n\n`SerialTask` \u5177\u6709**result**\u5c5e\u6027\uff0c\u4ed6\u662f\u4f20\u5165\u7684\u6240\u6709`GenericTask` \u5b9e\u4f8b\u5bf9\u8c61\u5bf9\u5e94\u7684**result**\u5c5e\u6027\u6784\u6210\u7684\u5217\u8868\u3002\n\n\n\n### 3. \u5b9a\u4e49\u4efb\u52a1\u961f\u5217\n\n\u5728aiocea\u4e2d, \u6267\u884c\u4efb\u52a1\u662f\u4ee5\u961f\u5217\u6a21\u578b\u4e3a\u6267\u884c\u7684\u3002\u6267\u884c\u5668\u5c06\u6839\u636e\u4e0d\u540c\u7684\u4efb\u52a1\u961f\u5217\u5b9e\u73b0\u4e0d\u540c\u5f62\u5f0f\u7684\u4efb\u52a1\u6267\u884c\u987a\u5e8f\u3002\u4efb\u52a1\u961f\u5217\u4e2d\u7684\u4efb\u52a1\n\naiocea\u5728taskoperator.py\u4e2d\u5df2\u7ecf\u9884\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u4e09\u79cd\u4efb\u52a1\u961f\u5217\u6a21\u578b:\n\n- `TaskQueue` \u5148\u8fdb\u5148\u51fa\u4efb\u52a1\u961f\u5217\n- `TaskStack` \u5148\u8fdb\u540e\u51fa\u4efb\u52a1\u6808\n- `TaskRing`   \u5148\u8fdb\u5148\u51fa\u5faa\u73af\u4efb\u52a1\u961f\u5217\u3002\u521a\u5bf9\u8c61\u7684\u751f\u6210\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570`iter_num` \u4e0e`iter_interval`\u5206\u522b\u8868\u793a\u4efb\u52a1\u961f\u5217\u5faa\u73af\u6b21\u6570\u4e0e\u6bcf\u6b21\u5faa\u73af\u540e\u7684sleep\u65f6\u95f4\u3002\n\n\u8fd9\u4e09\u79cd\u7c7b\u578b\u7edf\u79f0\u4e3a: \u6cdb\u578b\u4efb\u52a1\u961f\u5217`GenericTaskQueue`\u3002\n\n`GenericTaskQueue` \u4e0e `SerialTask`  ,`GatherTask`  \u7c7b\u90fd\u7ee7\u627f\u81ea `BaseMultiTaskOperate` \u8fd9\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u91cd\u8f7d\u4e86\\__add__ \u4e0e _\\_ sub__\u65b9\u6cd5\uff0c\u4f7f\u5f97\u6211\u4eec\u80fd\u591f\u4f7f\u7528\u52a0\u53f7\u4e0e\u51cf\u53f7\u6dfb\u52a0\u6216\u5220\u51cf\u4efb\u52a1\u3002\u5e76\u4e14\u90fd\u5177\u6709`add_tasks` \u65b9\u6cd5\u7528\u4e8e\u6dfb\u52a0\u4efb\u52a1\uff0c`show_tasks`\u65b9\u6cd5\u7528\u4e8e\u6253\u5370\u5f53\u524d\u4efb\u52a1\u3002\n\n\u4e0b\u9762\u7684\u5217\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u751f\u6210\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u3002\n\n```python\nfrom tasks import GatherTask,SerialTask\nfrom taskoperator import TaskRing\nfrom tasklists import *\n\n#\u5b9a\u4e49\u4e00\u4e2a\u5faa\u73af\u4efb\u52a1\u961f\u5217\nring = TaskRing()\n\n#\u5f80\u5faa\u73af\u4efb\u52a1\u961f\u5217\u6dfb\u52a0\u4efb\u52a1\nring += CoinMPing() #Task 0\nring += GatherTask(SerialTask(CoinMServerTime(),CoinMFetchTicker(symbol = \"BTCUSD_PERP\",\n                                                 pair   = \"BTCUSD\")),\n               SerialTask(CoinMServerTime(), CoinMFetchTicker(symbol=\"ETHUSD_PERP\",\n                                                  pair=\"ETHUSD\")))  #Task1\n#\u5c55\u793a\u5f53\u524d\u4efb\u52a1\nring.show_tasks()\n# output:\n# -------\u5f53\u524d\u4efb\u52a1\u961f\u5217(2)-------\n# Task 0\n# ping\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\n# Task 1\n# \u5e76\u53d1\u4efb\u52a1(2):\n#    \u4e32\u884c\u4efb\u52a1(2):\n#        \u83b7\u53d6\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\u65f6\u95f4\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP \u5b9e\u65f6\u4ef7\u683c\n#    \u4e32\u884c\u4efb\u52a1(2):\n#        \u83b7\u53d6\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\u65f6\u95f4\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:ETHUSD_PERP \u5b9e\u65f6\u4ef7\u683c\n#-----------------------\n```\n\n### 4. \u521b\u5efa\u4efb\u52a1\u6267\u884c\u5668,\u6dfb\u52a0\u4efb\u52a1\u961f\u5217, \u83b7\u5f97\u6267\u884c\u7ed3\u679c\n\n\u5728aiocea\u4e2d, \u6267\u884c\u961f\u5217\u4e2d\u7684\u4efb\u52a1\u3002\u90fd\u9700\u8981\u4efb\u52a1\u6267\u884c\u5668\u6765\u6267\u884c\uff0c\u5b83\u662f\u5b9a\u4e49\u5728taskoperator.py\u4e2d`TaskOperater`\u7c7b\u7684\u5bf9\u8c61\u3002\n\n\u4efb\u52a1\u6267\u884c\u5668\u5c06\u540c\u6b65\u6267\u884c\u6240\u6dfb\u52a0\u4efb\u52a1\u961f\u5217\u4e2d\u7684\u4efb\u52a1\uff0c\u6bcf\u6267\u884c\u5b8c\u4e00\u4e2a\u4efb\u52a1\uff0c\u8be5\u4efb\u52a1\u7684**result**\u5c5e\u6027\u5c06\u4ece**None** \u53d8\u4e3a\u5bf9\u5e94\u7684\u5f02\u6b65\u8bf7\u6c42\u7684\u7ed3\u679c\u3002\n\n\u4efb\u52a1\u6267\u884c\u5668\u7684\u6574\u4e2a\u6267\u884c\u8fc7\u7a0b\u7684\u6b65\u9aa4\u5982\u4e0b\u6240\u793a:\n\n1. \u7ed9\u6267\u884c\u5668\u6dfb\u52a0\u6267\u884c\u4efb\u52a1\u961f\u5217q\n2. \u5faa\u73af\u8c03\u7528q\u4e2d\\__next__\u65b9\u6cd5\uff0c\u83b7\u5f97\u5f53\u524d\u8981\u6267\u884c\u7684\u4efb\u52a1task\n3. \u5728\u4e8b\u4ef6\u5faa\u73afloop\u4e2d\u6267\u884c\u8be5\u4efb\u52a1\u5f02\u6b65\u56de\u8c03\u65b9\u6cd5\u5e76\u83b7\u5f97\u7ed3\u679c, \u5e76\u5c06task.result\u8bbe\u7f6e\u4e3a\u8be5\u7ed3\u679c\u3002\n4. \u5982\u82e5\u4efb\u52a1\u961f\u5217raise StopIteration\u3002\u505c\u6b62\u6267\u884c, \u5426\u5219\u91cd\u590d\u6b65\u9aa42\u3002\n\n\u5728`TaskOperater` \u5bf9\u8c61\u5177\u6709\u4ee5\u4e0b\u65b9\u6cd5\u6216\u5c5e\u6027:\n\n1. **taskqueue**\u5c5e\u6027\u3002 \u5373\u6267\u884c\u5668\u7684 \u6267\u884c\u4efb\u52a1\u961f\u5217\n\n2. `add_queue` \u65b9\u6cd5\u3002\u7528\u4e8e\u6dfb\u52a0\u4e00\u4e2a\u6267\u884c\u4efb\u52a1\u961f\u5217\u3002\u4f20\u5165\u503c\u5fc5\u987b\u4e3a\u6cdb\u578b\u4efb\u52a1\u961f\u5217`GenericTaskQueue`\u5bf9\u8c61\uff0c\u5e76\u8bbe\u7f6e\u4e3a**taskqueue**\u5c5e\u6027\u3002\u8be5\u65b9\u6cd5\u8fd4\u56de\u6267\u884c\u5668\u81ea\u8eab,\u5373self\u3002\n\n3. `run` \u65b9\u6cd5\u3002 \u6267\u884c\u6574\u4e2a\u8fd0\u884c\u6b65\u9aa4\u3002 \u5b8c\u6210\u65f6\u4efb\u52a1\u961f\u5217\u4e2d\u7684\u6240\u6709result\u5c5e\u6027\u5747\u4e3a\u8fd4\u56de\u7ed3\u679c\u3002\n\n4. `fishih_task_generator` \u65b9\u6cd5 :  \n\n   \u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570`exec_interval` \u8868\u793a\u6bcf\u4e2a\u4efb\u52a1\u961f\u5217\u4e2d\u6bcf\u4e2a\u4efb\u52a1\u6267\u884c\u540e\uff0csleep\u65f6\u95f4\u3002\n\n   \u8be5\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u5728\u6267\u884c\u6b65\u9aa43\u5b8c\u6210\u65f6, yield \u8be5\u4efb\u52a1\u5bf9\u8c61\u3002\n\n5. `runSingleTask` \u65b9\u6cd5\u3002 \u4f20\u5165\u4e00\u4e2a \u6cdb\u578b\u4efb\u52a1`GenericTask` \u5bf9\u8c61\u3002\u5728\u65b9\u6cd5\u5185\u751f\u6210\u4e00\u4e2a`TaskQueue` \u5bf9\u8c61\u4f5c\u4e3a\u6267\u884c\u5668\u7684\u6267\u884c\u4efb\u52a1\u961f\u5217\uff0c\u5e76\u5728\u4efb\u52a1\u961f\u5217\u4e2d\u6dfb\u52a0\u4f20\u5165\u7684\u4efb\u52a1\u5bf9\u8c61\u3002\u8be5\u65b9\u6cd5\u8fd4\u56de\u6267\u884c\u5668\u81ea\u8eab\uff0c\u5373self\u3002\n\n6. `repeatSingleTask` \u65b9\u6cd5\u3002 \u4f20\u5165\u4e00\u4e2a \u6cdb\u578b\u4efb\u52a1`GenericTask` \u5bf9\u8c61\u3002\u5728\u65b9\u6cd5\u5185\u751f\u6210\u4e00\u4e2a`TaskRing` \u5bf9\u8c61\u4f5c\u4e3a\u6267\u884c\u5668\u7684\u6267\u884c\u4efb\u52a1\u961f\u5217\uff0c\u5e76\u5728\u4efb\u52a1\u961f\u5217\u4e2d\u6dfb\u52a0\u4f20\u5165\u7684\u4efb\u52a1\u5bf9\u8c61\u3002\u8be5\u65b9\u6cd5\u8fd4\u56de\u6267\u884c\u5668\u81ea\u8eab\uff0c\u5373self\u3002\n\n\n\n\u4ee5\u4e0a\u4fbf\u662f\u6574\u4e2a\u6846\u67b6\u7684\u57fa\u7840\u903b\u8f91\u548c\u65b9\u6cd5\u3002\u66f4\u591a\u7684\u4f7f\u7528\u4e0e\u65b9\u6cd5\u8bf7\u53c2\u8003\u540e\u7eed\u7684API\u6587\u6863\u3002\u8be5\u6846\u67b6\u5b9e\u9645\u4e0a\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8fd8\u5b8c\u6210\u65e5\u5e38\u5176\u4ed6\u5f02\u6b65\u8bf7\u6c42\u7ed3\u679c\u3002\n\n## Examples : \u4f7f\u7528\u4f8b\u5b50\n\n#### \u83b7\u53d6\u670d\u52a1\u5668\u65f6\u95f4\n\n```python\nfrom taskoperator import TaskQueue,TaskOperater\nfrom tasklists import *\n\n#\u8bbe\u7f6e\u4efb\u52a1\u9ed8\u8ba4\u7684API\nTask.set_default_binance_API(\n   BinanceRestApi(api_key   = \"key_1\",\n\t\t\t      api_secret= \"screte_1\"))\n\n#\u5b9a\u4e49\u4e00\u4e2a\u4efb\u52a1\ntask = CoinMServerTime()\n#\u5b9a\u4e49\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\nq = TaskQueue()\n#\u5f80\u4efb\u52a1\u961f\u5217\u6dfb\u52a0\u4efb\u52a1\nq +=task #Task 0\n\n#\u5b9a\u4e49\u4e00\u4e2a\u6267\u884c\u5668\u5e76\u6dfb\u52a0\u4efb\u52a1\u961f\u5217\nop = TaskOperater().add_queue(q)\n\n#\u6267\u884c\u4efb\u52a1\u961f\u5217\u7684\u4efb\u52a1\nop.run()\n\n#\u83b7\u5f97\u4efb\u52a1\u7ed3\u679c\nprint(task.result)\n```\n\n#### \u6bcf\u79d2\u5faa\u73af\u83b7\u53d6Ticker\n\n```python\nfrom taskoperator import TaskRing,TaskOperater\nfrom tasklists import *\n\n#\u8bbe\u7f6e\u4efb\u52a1\u9ed8\u8ba4\u7684API\nTask.set_default_binance_API(\n   BinanceRestApi(api_key   = \"key_1\",\n\t\t\t      api_secret= \"screte_1\"))\n\n#\u5b9a\u4e49\u4e00\u4e2aTicker\u4efb\u52a1\ntask = CoinMFetchTicker(symbol = \"BTCUSD_PERP\",pair = \"BTCUSD\")\n\n#\u5b9a\u4e49\u4e00\u4e2a\u5faa\u73af\u4efb\u52a1\u961f\u5217\nq = TaskRing(iter_interval = 1) #\u5faa\u73af\u95f4\u9694\u4e3a1\u79d2\n\n#\u5f80\u4efb\u52a1\u961f\u5217\u6dfb\u52a0\u4efb\u52a1\nq += task #Task 0\n\n#\u5c55\u793a\u4efb\u52a1\u961f\u5217\nq.show_tasks()\n\nop = TaskOperater().add_queue(q)\n\n#\u6267\u884c\u4efb\u52a1\u961f\u5217\u7684\u4efb\u52a1\nfor task in op.fishih_task_generator():\n   print(task.result)\n\n#output:\n# -------\u5f53\u524d\u4efb\u52a1\u961f\u5217(1)-------\n# Task 0\n# \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP \u5b9e\u65f6\u4ef7\u683c\n# -----------------------\n# \u5b9a\u4e49\u4e00\u4e2a\u6267\u884c\u5668\u5e76\u6dfb\u52a0\u4efb\u52a1\u961f\u5217\n# [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '55163.4', 'time': 1618897014034}]\n# [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '55163.4', 'time': 1618897014034}]\n# [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '55163.4', 'time': 1618897014034}]\n# [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '55163.4', 'time': 1618897014034}]\n# ...\n```\n\n#### \u6bcf\u79d2\u5faa\u73af \u5e76\u53d1\u83b7\u53d6 \u670d\u52a1\u5668\u65f6\u95f4 \u4e0e Ticker\n\n```python\nfrom taskoperator import TaskRing,TaskOperater\nfrom tasks import GatherTask\nfrom tasklists import *\n\n#\u8bbe\u7f6e\u4efb\u52a1\u9ed8\u8ba4\u7684API\nTask.set_default_binance_API(\n   BinanceRestApi(api_key   = \"key_1\",\n\t\t\t      api_secret= \"screte_1\"))\n#\u5b9a\u4e49\u4e00\u4e2a\u5faa\u73af\u4efb\u52a1\u961f\u5217\nq = TaskRing(iter_interval = 1) #\u5faa\u73af\u95f4\u9694\u4e3a1\u79d2\n\n#\u5f80\u4efb\u52a1\u961f\u5217\u6dfb\u52a0\u5e76\u53d1\u4efb\u52a1\nq += GatherTask(CoinMServerTime(),\n            CoinMFetchTicker(symbol = \"BTCUSD_PERP\",pair = \"BTCUSD\"))\n\n#\u5c55\u793a\u4efb\u52a1\u961f\u5217\nq.show_tasks()\n\nfor task in TaskOperater().add_queue(q).fishih_task_generator():\n   print(task.result)\n\n#output:\n#-------\u5f53\u524d\u4efb\u52a1\u961f\u5217(1)-------\n#Task 0\n#\u5e76\u53d1\u4efb\u52a1(2):\n#    \u83b7\u53d6\u5e01\u5b89\u5e01\u672c\u4f4d\u670d\u52a1\u5668\u65f6\u95f4\n#    \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP \u5b9e\u65f6\u4ef7\u683c\n#-----------------------\n#[{'serverTime': 1618897355627}, [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '54927.5', 'time': #1618897355247}]]\n#[{'serverTime': 1618897356024}, [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '54925.0', 'time': #1618897356011}]]\n#[{'serverTime': 1618897356404}, [{'symbol': 'BTCUSD_PERP', 'ps': 'BTCUSD', 'price': '54925.0', 'time': #1618897356011}]]\n#...\n```\n\n#### \u4e32\u884c\u6267\u884ck\u7ebf\u83b7\u53d6\n\n```python\nfrom taskoperator import TaskQueue,TaskOperater\nfrom tasklists import CoinMFetchKline\nfrom utils import *\nfrom tasks import Task\nimport time\n\n#\u8bbe\u7f6e\u4efb\u52a1\u9ed8\u8ba4\u7684API\nTask.set_default_binance_API(\n   BinanceRestApi(api_key   = \"key_1\",\n\t\t\t      api_secret= \"screte_1\"))\n\n#\u5b9a\u4e49\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\nq = TaskQueue()\n\n#\u83b7\u53d6\u4e24\u4e2a\u5468\u671f\u7684k\u7ebf\nq += CoinMFetchKline(symbol = \"BTCUSD_PERP\",\n                 interval=\"1m\",\n                 limit  = 1,\n                 endTime = int(time.time()) * 1000)\nq += CoinMFetchKline(symbol = \"BTCUSD_PERP\",\n                 interval=\"1m\",\n                 limit  = 1,\n                 endTime = (int(time.time()) - 60) * 1000)\n\nq.show_tasks()\n\nfor task in TaskOperater().add_queue(q).fishih_task_generator():\n   print(task,\"finish!\")\n   print(task.result)\n#output: \n#-------\u5f53\u524d\u4efb\u52a1\u961f\u5217(2)-------\n#Task 0\n#\u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898005000>(limit 1)\n#Task 1\n#\u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618897945000>(limit 1)\n#-----------------------\n#\u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898005000>(limit 1) finish!\n#[[1618897980000, '54963.2', '54975.9', '54963.2', '54975.8', '2662', 1618898039999, '4.84281221', 73, #'2329', '4.23701807', '0']]\n#\u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618897945000>(limit 1) finish!\n#[[1618897920000, '54881.1', '54963.2', '54881.1', '54963.1', '17844', 1618897979999, '32.49263090', 320, #15905', '28.96235089', '0']]    \n```\n\n#### \u5e76\u53d1\u6267\u884c\u4e24\u4e2a\u5e01\u79cdk\u7ebf\u7684\u4e32\u884c\u83b7\u53d6\n\n```python\nfrom taskoperator import TaskQueue,TaskOperater\nfrom tasklists import CoinMFetchKline\nfrom utils import *\nfrom tasks import Task,SerialTask,GatherTask\nimport time\n\n#\u8bbe\u7f6e\u4efb\u52a1\u9ed8\u8ba4\u7684API\nTask.set_default_binance_API(\n   BinanceRestApi(api_key= \"WULDU3TzwOSNR0vRL3zPyumx06ji4O9YKeDM0JpzQA5Gnv6m4RvZMolKK9w8N1qk\",\n               api_secret=\"Hc3kKfgi7ZnBgkGCQ3vWmkJEsIsLJwhs8wM5tvL594nH3TvOKCw9V6f97vZLCtF2\")\n   )\n\n#\u5b9a\u4e49\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\nq = TaskQueue()\n\n#\u83b7\u53d6\u4e24\u4e2a\u5e01\u4e2d\u7684\u4e24\u4e2a\u5468\u671f\u7684k\u7ebf\u7684\u5e76\u53d1\u6267\u884c\n\nq += GatherTask(\n   #\u7b2c\u4e00\u4e2a\u5e01\u79cd\u7684\u4e24\u4e2ak\u7ebf\u4efb\u52a1\n   SerialTask(CoinMFetchKline(symbol = \"BTCUSD_PERP\",\n                 interval=\"1m\",\n                 limit  = 1,\n                 endTime = int(time.time()) * 1000),\n            CoinMFetchKline(symbol=\"BTCUSD_PERP\",\n                        interval=\"1m\",\n                        limit=1,\n                        endTime=int(time.time()) * 1000)\n            )\n   ,\n   SerialTask(CoinMFetchKline(symbol=\"ETHUSD_PERP\",\n                        interval=\"1m\",\n                        limit=1,\n                        endTime=int(time.time()) * 1000),\n            CoinMFetchKline(symbol=\"ETHUSD_PERP\",\n                        interval=\"1m\",\n                        limit=1,\n                        endTime=int(time.time()) * 1000)\n            )\n   )\n\nq.show_tasks()\n\nfor task in TaskOperater().add_queue(q).fishih_task_generator():\n   print(\"finish\")\n   BTC_Kline1 = task.result[0][0]\n   BTC_Kline2 = task.result[0][1]\n   ETH_Kline1 = task.result[1][0]\n   ETH_Kline2 = task.result[1][1]\n   print(BTC_Kline1)\n   print(BTC_Kline2)\n   print(ETH_Kline1)\n   print(ETH_Kline2)\n#output:\n#-------\u5f53\u524d\u4efb\u52a1\u961f\u5217(1)-------\n#Task 0\n#\u5e76\u53d1\u4efb\u52a1(2):\n#    \u4e32\u884c\u4efb\u52a1(2):\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898371000>(limit 1)\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:BTCUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898371000>(limit 1)\n#    \u4e32\u884c\u4efb\u52a1(2):\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:ETHUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898371000>(limit 1)\n#        \u83b7\u53d6\u5e01\u672c\u4f4d\u5408\u7ea6:ETHUSD_PERP 1m\u5468\u671f K\u7ebf<None to 1618898371000>(limit 1)\n#-----------------------\n#finish\n#[[1618898340000, '54962.4', '55016.4', '54962.4', '55016.4', '15264', 1618898399999, '27.75471862', 150, #'10905', '19.82837640', '0']]\n#[[1618898340000, '54962.4', '55016.4', '54962.4', '55016.4', '15284', 1618898399999, '27.79107142', 151, #'10925', '19.86472920', '0']]\n#[[1618898340000, '2118.17', '2120.31', '2118.17', '2119.90', '47561', 1618898399999, '224.39426159', 109, '27294', '128.79773623', '0']]\n#[[1618898340000, '2118.17', '2120.31', '2118.17', '2119.90', '47561', 1618898399999, '224.39426159', 109, #'27294', '128.79773623', '0']]\n\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/skydownacai/AIOCA",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aiocea",
            "package_url": "https://pypi.org/project/aiocea/",
            "platform": "",
            "project_url": "https://pypi.org/project/aiocea/",
            "project_urls": {
                "Homepage": "https://github.com/skydownacai/AIOCA"
            },
            "release_url": "https://pypi.org/project/aiocea/0.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A asynico io framework for crypto api",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10117044,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eccd63a37fd8f318f98b6e69376d816b",
                    "sha256": "01305e699ff5d74640f50e71e19af8d14aa82c6e59a3fdc29d96943b4e2ffb24"
                },
                "downloads": -1,
                "filename": "aiocea-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eccd63a37fd8f318f98b6e69376d816b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7164,
                "upload_time": "2021-04-20T09:05:43",
                "upload_time_iso_8601": "2021-04-20T09:05:43.958509Z",
                "url": "https://files.pythonhosted.org/packages/d3/63/988f26421527c3fd6014b2616fab1d1e6db12b45cd36084cdd97c985f447/aiocea-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "db605ea6f03bd2901dd3750786bc74cf",
                    "sha256": "99e9ee8824f79e215341c5db74cdbc3069570b15595b5b7fe47785fce252d8e2"
                },
                "downloads": -1,
                "filename": "aiocea-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "db605ea6f03bd2901dd3750786bc74cf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 8751,
                "upload_time": "2021-04-20T09:05:45",
                "upload_time_iso_8601": "2021-04-20T09:05:45.746190Z",
                "url": "https://files.pythonhosted.org/packages/c6/81/8d22a130ae621aff73c18b69be46661214d8283f3b860328bf67b05de2fa/aiocea-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}