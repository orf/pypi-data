{
    "0.1.1": {
        "info": {
            "author": "Chulhoon Kim",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering"
            ],
            "description": "# rgagui\r\n\r\n**rgagui** is a Python application that provides a graphic user interface \r\n(GUI) environment to manage a suite of tasks that interact with instruments. \r\n\r\nA user can write a task as a simple Python script and run the task \r\nby adding it to a \".taskconfig\" configuration file, \r\nand manage a task suite as a separate package, without \r\nmodification of the **rgagui** code.\r\n\r\nA task uses pre-defined interfaces to interact with **rgagui** for user input, \r\ntext output, real-time matplotlib plots, along with a remote command terminal \r\nto controls instruments.\r\n\r\nThis package is the underlying application engine for SRS Python Instrument library. \r\nTo use with supported SRS instruments, install `srs` package. `rgagui` package is \r\ninstalled as a dependency. \r\n   \r\n    pip install srs\r\n    \r\nIf you have trouble installing 'srs' package, due to dependency conflicts with \r\ninstalled Python packages, or prefer to use a virtual environment for cleaner \r\ninstallation, use a virtual environment.\r\n\r\n\r\nAfter successful installation, run `srs.rga` package for RGA application, \r\n\r\n    python -m srs.rga\r\n  \r\nConnect to an RGA, from the menu/Control, and select a task and press run button from the tool bar.\r\n\r\nFrom the terminal window, type 'rga.dir' to see available components, \r\ncommands, and methods. Type the following to see how it changes:\r\n\r\n    rga.scan.dir\r\n    rga.scan.initial_mass    \r\n    rga.scan.initial_mass = 10\r\n    rga.scan.initial_mass   \r\n\r\nLook through the Task config file to see how to organize instruments and tasks.\r\nIn the file, the line with 'name:' appears as the **rgagui** window title, \r\nthe lines with 'inst:' are the instruments you will use, \r\nand lines with 'task:' show in the rgagui menu bar under the menu/Tasks.\r\n\r\nReview the task files in the rga100/tasks directory to see how to a script written.\r\n\r\nWrite your own tasks for test and measurement!\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "instrument control,data acquisition,data visualization",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "rgagui",
            "package_url": "https://pypi.org/project/rgagui/",
            "platform": null,
            "project_url": "https://pypi.org/project/rgagui/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/rgagui/0.1.1/",
            "requires_dist": [
                "pyserial (>=3)",
                "pyqt5",
                "matplotlib"
            ],
            "requires_python": "",
            "summary": "GUI Interface for RGA Instruments and Tasks",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15964617,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "08c9ff6d77950832cb1d8ee521245bcb",
                    "sha256": "5adf7af496741fa28739cbd5f2d371c202d793820c7d129bd08c7050df643a03"
                },
                "downloads": -1,
                "filename": "rgagui-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "08c9ff6d77950832cb1d8ee521245bcb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 90573,
                "upload_time": "2022-12-02T01:46:50",
                "upload_time_iso_8601": "2022-12-02T01:46:50.921591Z",
                "url": "https://files.pythonhosted.org/packages/d0/b5/bddad483673a3bb344a0a34d307530cf8df9eaaea1b05b8760b23ba9d861/rgagui-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "10fb47215a14814d96292885da41a5ac",
                    "sha256": "78220c6f1afcd745b3ae66e917ce0633e3df08ea0294f4952ab8ad3c83c42190"
                },
                "downloads": -1,
                "filename": "rgagui-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "10fb47215a14814d96292885da41a5ac",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 83535,
                "upload_time": "2022-12-02T01:46:52",
                "upload_time_iso_8601": "2022-12-02T01:46:52.741097Z",
                "url": "https://files.pythonhosted.org/packages/49/9c/2c8de37ad151eade64ce37b459ff3d68f1cf9599347d5dcadb33e96de95b/rgagui-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}