{
    "1.0.0": {
        "info": {
            "author": "Matthew Burkard",
            "author_email": "matthewjburkard@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Typing :: Typed"
            ],
            "description": "<!--suppress HtmlDeprecatedAttribute -->\n<div align=center>\n  <h1>Cloud Eventful</h1>\n  <h3>Broker agnostic library to associate JSON Schemas to message broker topics.</h3>\n  <img src=\"https://img.shields.io/badge/License-MIT-blue.svg\"\n   height=\"20\"\n   alt=\"License: MIT\">\n  <img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\"\n   height=\"20\"\n   alt=\"Code style: black\">\n  <img src=\"https://img.shields.io/pypi/v/cloudeventful.svg\"\n   height=\"20\"\n   alt=\"PyPI version\">\n  <img src=\"https://img.shields.io/badge/coverage-100%25-success\"\n   height=\"20\"\n   alt=\"Code Coverage\">\n</div>\n\n## Install\n\nCloud Eventful is on PyPI and can be installed with:\n\n```shell\npoetry add cloudeventful\n```\n\nor\n\n```shell\npip install cloudeventful\n```\n\n## Usage\n\nThis library provides a `CloudEventful` class which can be used to generate\n[CloudEvents](https://cloudevents.io/) and associate\n[Pydantic](https://pydantic-docs.helpmanual.io/) models as the cloud event `data` field\non a per-topic basis.\n\n### Model Registration\n\nA model is associated with a pattern describing the topics it may be published to using\nthe `data_model` decorator.\n\n```python\nimport re\n\nfrom cloudeventful import CloudEventful\nfrom pydantic import BaseModel\n\nce = CloudEventful(api_version=\"1.0.0\", default_source=\"my/event/server\")\n\n\n@ce.data_model(re.compile(r\"/.*/coffee\"))\nclass Coffee(BaseModel):\n    flavor: str\n```\n\n### Cloud Event Generation\n\nOnce data models are registered, CloudEvent objects can be generated with an instance of\nthe generated model as the CloudEvent `data` property.\n\n```pycon\n>>> ce.event(Coffee(flavor=\"mocha\"))\nCloudEvent[ModelType](id='9b21a718-9dc1-4b56-a4ea-4e9911bc8ca6', source='my/event/server', specversion='1.0', type='Coffee', data=Coffee(flavor='mocha'), datacontenttype='application/json', dataschema='/Coffee', subject='Coffee', time=datetime.datetime(2022, 11, 19, 15, 33, 6, 39795))\n```\n\n### Publish\n\nA publish function can be registered with a `CloudEventful` instance to enforce topic\nintegrity at run time. This is done by setting the `publish_function` property on a\n`CloudEventful` instance.\n\nA publish function must accept at least a topic arg as a str and a data arg as a\nregistered data model.\n\nThen, the `CloudEventful` publish function can be used to wrap data models in a\nCloudEvent and publish them as JSON strings. Keyword args will be passed to the\nregistered publish function.\n\n# A complete Example using MQTT with Paho\n\n```python\nimport re\n\nfrom cloudeventful import CloudEventful\nimport paho.mqtt.client as mqtt\nfrom pydantic import BaseModel\n\nserver_id = \"my/event/server\"\n\nclient = mqtt.Client(server_id)\nclient.connect(\"127.0.0.1\")\n\nce = CloudEventful(\n    api_version=\"1.0.0\", default_source=server_id, publish_function=client.publish\n)\n\n\n@ce.data_model(re.compile(r\"/.*/drinks\"))\nclass Coffee(BaseModel):\n    flavor: str\n\n\n@ce.data_model(re.compile(r\"/.*/utensils\"))\nclass Pen(BaseModel):\n    color: str\n\n\n# Publish a data model wrapped in a cloud event.\nce.publish(\"/hot/drinks\", Coffee(flavor=\"mocha\"))\n# Raise `ValueError` because topic does not match pattern of this model.\nce.publish(\"/hot/drinks\", Pen(color=\"black\"))\n```\n\n## Support The Developer\n\n<a href=\"https://www.buymeacoffee.com/mburkard\" target=\"_blank\">\n  <img src=\"https://cdn.buymeacoffee.com/buttons/v2/default-blue.png\"\n       width=\"217\"\n       height=\"60\"\n       alt=\"Buy Me A Coffee\">\n</a>\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.com/mburkard/cloud-eventful",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cloudeventful",
            "package_url": "https://pypi.org/project/cloudeventful/",
            "platform": null,
            "project_url": "https://pypi.org/project/cloudeventful/",
            "project_urls": {
                "Homepage": "https://gitlab.com/mburkard/cloud-eventful",
                "Repository": "https://gitlab.com/mburkard/cloud-eventful"
            },
            "release_url": "https://pypi.org/project/cloudeventful/1.0.0/",
            "requires_dist": [
                "pydantic (>=1.10.2,<2.0.0)"
            ],
            "requires_python": ">=3.9,<4.0",
            "summary": "Broker agnostic library to associate JSON Schemas to message broker topics.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15833740,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a0115e5ae6b940dc04434e8a8f98bda4",
                    "sha256": "aa36c07d3bb359d950f5d89215a80821150b8c52a8d8a5cd9596915184bc648d"
                },
                "downloads": -1,
                "filename": "cloudeventful-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a0115e5ae6b940dc04434e8a8f98bda4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9,<4.0",
                "size": 7207,
                "upload_time": "2022-11-20T23:02:45",
                "upload_time_iso_8601": "2022-11-20T23:02:45.433061Z",
                "url": "https://files.pythonhosted.org/packages/5d/b7/4509ecf6052f12fb770519d5e2014173fbde71152479b63a710eb4ffaeea/cloudeventful-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3dec7c2c7875d37adcd946bf55620390",
                    "sha256": "8dd2afaea72ceb153b844f3142d23104b1377406eae74eb69b53a425940ee37a"
                },
                "downloads": -1,
                "filename": "cloudeventful-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "3dec7c2c7875d37adcd946bf55620390",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9,<4.0",
                "size": 7040,
                "upload_time": "2022-11-20T23:02:48",
                "upload_time_iso_8601": "2022-11-20T23:02:48.551712Z",
                "url": "https://files.pythonhosted.org/packages/47/25/e303c55866f8ccb61a156788e32214a630f63572a138c804ec4adfde0f01/cloudeventful-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}