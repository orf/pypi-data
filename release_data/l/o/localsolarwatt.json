{
    "0.6": {
        "info": {
            "author": "AlgorithmicEntropy",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Topic :: Software Development :: Build Tools"
            ],
            "description": "# LocalSolarWatt\nA python3 library to access the data of solar watt devices via local api  \nDisclaimer: This library uses an unofficial local api and could therefore break at any point\n\n# Overview\nThe package wraps both the kiwigrid energy manager api and the myReserve api.  \nData available:\n  - energy manager: current power, energy counters, diagnostics\n  - my reserve: hex status codes, current power (same as web interface)\n\nAs the myReserve api only returns small amount of data and gets polled by the web interface anyway,  \nit is the preferred option for realtime data.  \nPolling the energy manager to often could lead to reliability issues (untested).\n\n## Installation\n\n```\npip install LocalSolarWatt\n```\n\n## Usage\n```\nfrom LocalSolarWatt import EnergyManager, MyReserve, WorkUnits\n\n# create a new api objects\nenergy_api = EnergyManager('hostname or ip')\nmy_reserve_api = MyReserve('hostname or ip')\n\n# optional, change work units to Wh instead of kWh\nfrom SolarWattEnergyManagerAPI.units import WorkUnit\napi = EnergyManager('hostname or ip', work_unit=WorkUnits.Wh)\n\n# below functions work on both energy manager and my reserve\n# optional, change log level\napi.set_log_level('WARNING')\n\n# test the connection (returns bool based on success)\nstatus, data = api.test_connection()\n\n# pull data from the device (retuirn dictionary with power values)\nprint(api.pull_data())\n```\n\n# Tests:\nIf you want to run the tests locally make sure to set the following environment variables to correct IPs / hostnames\n```\nENERGY_MANAGER_HOST\nMY_RESERVE_HOST\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/SebastianWallat/SolarWattEnergyManagerAPI/archive/v_06.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/AlgorithmicEntropy/SolarWattEnergyManagerAPI",
            "keywords": "IOT,Solar,Local",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "LocalSolarWatt",
            "package_url": "https://pypi.org/project/LocalSolarWatt/",
            "platform": null,
            "project_url": "https://pypi.org/project/LocalSolarWatt/",
            "project_urls": {
                "Download": "https://github.com/SebastianWallat/SolarWattEnergyManagerAPI/archive/v_06.tar.gz",
                "Homepage": "https://github.com/AlgorithmicEntropy/SolarWattEnergyManagerAPI"
            },
            "release_url": "https://pypi.org/project/LocalSolarWatt/0.6/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": "",
            "summary": "python api wrapper for solar watt devices",
            "version": "0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14470032,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a435509a91be085fa2931588914a4ed9",
                    "sha256": "987ca322a6a606fa77deaf562d2a5606d0cecdcea143ddb4d6a6a3fe5169b3be"
                },
                "downloads": -1,
                "filename": "LocalSolarWatt-0.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a435509a91be085fa2931588914a4ed9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6329,
                "upload_time": "2022-07-18T13:46:54",
                "upload_time_iso_8601": "2022-07-18T13:46:54.858468Z",
                "url": "https://files.pythonhosted.org/packages/7e/a9/79ad72ae8d32d2900f690e95b40f9c0e4dc197a4be85030bec36033c1721/LocalSolarWatt-0.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e60b89bc9dcdc027c43102d9420fc779",
                    "sha256": "6ead93736d3f5ee62f4e6f873e22f7e31ed20549c4b8f316c57d0d67a8751d2a"
                },
                "downloads": -1,
                "filename": "LocalSolarWatt-0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "e60b89bc9dcdc027c43102d9420fc779",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4808,
                "upload_time": "2022-07-18T13:46:56",
                "upload_time_iso_8601": "2022-07-18T13:46:56.084964Z",
                "url": "https://files.pythonhosted.org/packages/51/82/5954e71345f3a43514cdf1baca0f396578a1465df7a4ee0927b5abfc9534/LocalSolarWatt-0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}