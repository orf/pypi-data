{
    "0.0.1": {
        "info": {
            "author": "blizhan",
            "author_email": "blizhan@icloud.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description": "# pycdoexpr\n\n![](static/digitize.jpg)\n\nCDO (Climate data operator) is a high-efficient command line tool for climate and meteorology data processing. This Python package helps to generate complicated cdo expr(computing expression) in a convenient and pythonic way.\n\n## Usage\n1. generate digitize expr (same as np.digitize)\n```python \nfrom pycdoexpr import cdoexpr\n\n# EX1: use digitize to generate WIND LEVEL expr\nwind_level_bins = [ 0.3,  1.6,  3.4,  5.5,  8. , 10.8, 13.9, 17.2,\\\n    20.8, 24.5, 28.5, 32.6, 36.9, 41.4, 46.1, 50.9, 56. , 61.3]\ncexpr = cdoexpr()\ncexpr.digitize(varname='WIND_LEVEL', right=False)\n```\n\n2. convert multi-level conditions string in python syntax to cdo expr \n```python\n\n# EX2: use conditions to generate WW (weather code) expr (https://www.jodc.go.jp/data_format/weather-code.html)\ns = '''\nif PRE1H > 0.001:\n    if TEM2 >= 3:\n        if PRE1H < 0.1:\n            WW = 51\n        elif PRE1H < 2.5:\n            WW = 61\n        elif PRE1H < 8:\n            WW = 62\n        else:\n            WW = 63\n    elif TEM2 >=0:\n        if PRE1H < 2.5:\n            WW = 66\n        else:\n            WW = 67\n    else:\n        if PRE1H < 0.1:\n            WW = 71\n        elif PRE1H < 0.2:\n            WW = 73\n        else:\n            WW = 75\nelse:\n    if VIS > 10000:\n        if TCC > 80:\n            WW = 3\n        elif TCC > 40:\n            WW = 2\n        else:\n            WW = 0\n    elif VIS >= 1000:\n        if RHU2 > 80:\n            WW = 45\n        elif RHU2 > 50:\n            WW = 48\n        else:\n            WW = 31\n    else:\n        if WS10 < 1:\n            WW = 45\n        else:\n            if RHU2 >=50:\n                WW = 45\n            else:\n                WW = 34\n'''\nexpr = cexpr.conditions(s, verbose=True)\nf\"cdo expr,'WW={expr}' infile outfile\"\n```\n![](static/conditions.jpg)\n\n## Benchmark\n\n> cdo expr vs (np.verctorize calc and xarray io)\n\n- [ ] TODO\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/blizhan/pycdoexpr",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pycdoexpr",
            "package_url": "https://pypi.org/project/pycdoexpr/",
            "platform": null,
            "project_url": "https://pypi.org/project/pycdoexpr/",
            "project_urls": {
                "Homepage": "https://github.com/blizhan/pycdoexpr"
            },
            "release_url": "https://pypi.org/project/pycdoexpr/0.0.1/",
            "requires_dist": [
                "numpy",
                "binarytree"
            ],
            "requires_python": ">=3.7",
            "summary": "A Python package helps to generate complicated cdo expr(computing expression) in pythonic way",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15849749,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "719a64c07a61fd4845f7abecef4d79fa",
                    "sha256": "1a41321cb4caae3ce7d7dd8bc45de19820427d1ca254876062c966eb5dd7de70"
                },
                "downloads": -1,
                "filename": "pycdoexpr-0.0.1.macosx-11.0-arm64.tar.gz",
                "has_sig": false,
                "md5_digest": "719a64c07a61fd4845f7abecef4d79fa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 7118,
                "upload_time": "2022-11-22T05:52:48",
                "upload_time_iso_8601": "2022-11-22T05:52:48.102003Z",
                "url": "https://files.pythonhosted.org/packages/1b/37/6304f9b9a2bf8e6c70886fc62f9d84e4e0327b53e6199dab6720a1e1998f/pycdoexpr-0.0.1.macosx-11.0-arm64.tar.gz",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f4f27813f05d4249e84635ebbabc2196",
                    "sha256": "70acc0bc2b665412f2b1c9258a5579c674be19c57cf1e8488017d3605c8aeb94"
                },
                "downloads": -1,
                "filename": "pycdoexpr-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f4f27813f05d4249e84635ebbabc2196",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 4361,
                "upload_time": "2022-11-22T05:52:45",
                "upload_time_iso_8601": "2022-11-22T05:52:45.769627Z",
                "url": "https://files.pythonhosted.org/packages/13/bc/c4d3c5307c7f9ed2c00b5dcbd9deed42b48191286099227dae8338cca658/pycdoexpr-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}