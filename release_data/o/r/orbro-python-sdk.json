{
    "0.15": {
        "info": {
            "author": "ORBRO",
            "author_email": "platform.dev@kong-tech.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: FastAPI",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820",
            "keywords": "orbro connect iot digitaltwin rtls",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "orbro-python-sdk",
            "package_url": "https://pypi.org/project/orbro-python-sdk/",
            "platform": null,
            "project_url": "https://pypi.org/project/orbro-python-sdk/",
            "project_urls": {
                "Homepage": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820"
            },
            "release_url": "https://pypi.org/project/orbro-python-sdk/0.15/",
            "requires_dist": [
                "SQLAlchemy (==1.4.27)",
                "pydantic (==1.8.2)",
                "redis (>=3.5.3)",
                "PyJWT (==2.3.0)",
                "httpx (==0.19.0)"
            ],
            "requires_python": ">=3.7",
            "summary": "ORBRO-Connect SDK for Python(FastAPI/Flask)",
            "version": "0.15",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15749249,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1a80e772b954a6d65f37f19ae9643258",
                    "sha256": "e0af8f9352dfb056ee699226c896ed6f0fa6b5d5601dc9359e2b60b2d6a93f1a"
                },
                "downloads": -1,
                "filename": "orbro_python_sdk-0.15-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1a80e772b954a6d65f37f19ae9643258",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 22598,
                "upload_time": "2022-11-11T05:10:25",
                "upload_time_iso_8601": "2022-11-11T05:10:25.723193Z",
                "url": "https://files.pythonhosted.org/packages/4c/b9/8bb60881ad58c703fff54affa9e2ce14182e3089a4af6acea8ddf25dfb7f/orbro_python_sdk-0.15-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8ba9dd9b1f23638216140235bde3e4d5",
                    "sha256": "546e41c1fecc18a5e6a74f807875d244317c6aeb893d406d47e0d26e5c848030"
                },
                "downloads": -1,
                "filename": "orbro-python-sdk-0.15.tar.gz",
                "has_sig": false,
                "md5_digest": "8ba9dd9b1f23638216140235bde3e4d5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 18769,
                "upload_time": "2022-11-11T05:10:28",
                "upload_time_iso_8601": "2022-11-11T05:10:28.179538Z",
                "url": "https://files.pythonhosted.org/packages/39/be/deed9e5b1a89b988e9b2e97251eee161fb93da3a27a21d8840f76328e579/orbro-python-sdk-0.15.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.17": {
        "info": {
            "author": "ORBRO",
            "author_email": "platform.dev@kong-tech.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: FastAPI",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820",
            "keywords": "orbro connect iot digitaltwin rtls",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "orbro-python-sdk",
            "package_url": "https://pypi.org/project/orbro-python-sdk/",
            "platform": null,
            "project_url": "https://pypi.org/project/orbro-python-sdk/",
            "project_urls": {
                "Homepage": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820"
            },
            "release_url": "https://pypi.org/project/orbro-python-sdk/0.17/",
            "requires_dist": [
                "SQLAlchemy (==1.4.27)",
                "pydantic (==1.8.2)",
                "redis (>=3.5.3)",
                "PyJWT (==2.3.0)",
                "httpx (==0.19.0)"
            ],
            "requires_python": ">=3.7",
            "summary": "ORBRO-Connect SDK for Python(FastAPI/Flask)",
            "version": "0.17",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15749249,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aa85c769dbb63309763d30c730e44171",
                    "sha256": "cac375510f73d4733f4433d20d866023b1a78174610d21ee327ddcee9800ec21"
                },
                "downloads": -1,
                "filename": "orbro_python_sdk-0.17-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "aa85c769dbb63309763d30c730e44171",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 22793,
                "upload_time": "2022-11-11T09:05:53",
                "upload_time_iso_8601": "2022-11-11T09:05:53.548281Z",
                "url": "https://files.pythonhosted.org/packages/23/70/8e78742ccadc8fe276680cddae1fc3ec19f6b346c592b5e9fc9dd783af2e/orbro_python_sdk-0.17-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "07fcb442f927edaa96525531b375f9c6",
                    "sha256": "bcfdf65ead00d420e985fa8691fd59630b635c9e3cce2d5ea5b314568d7d56f8"
                },
                "downloads": -1,
                "filename": "orbro-python-sdk-0.17.tar.gz",
                "has_sig": false,
                "md5_digest": "07fcb442f927edaa96525531b375f9c6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 18910,
                "upload_time": "2022-11-11T09:05:55",
                "upload_time_iso_8601": "2022-11-11T09:05:55.452311Z",
                "url": "https://files.pythonhosted.org/packages/c4/f9/2d91d9e484b688fb76497efc123dbeadc5887811eb06e4da19deda2e6d05/orbro-python-sdk-0.17.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.18": {
        "info": {
            "author": "ORBRO",
            "author_email": "platform.dev@kong-tech.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: FastAPI",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Topic :: Office/Business",
                "Topic :: Software Development :: Libraries",
                "Topic :: Utilities"
            ],
            "description": "# README #\n [ORBRO Platform](https://orbro.io)\ub294 \uc571\uc744 \uac1c\ubc1c\ud558\uae30 \uc704\ud55c \ub2e4\uc591\ud55c API\ub97c \uc81c\uacf5\ud558\uba70, \uc704\uc82f\uacfc \uc571 \ud615\ud0dc\ub85c ORBRO Platform \uc0c1\uc5d0 \ud558\ub098\uc758 \ud1b5\ud569\ub41c UI\ub85c \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc30\ud3ec\ub41c \uc571\ub4e4\uc740 ORBRO Platform\uc744 \uc0ac\uc6a9\ud558\ub294 \ubaa8\ub4e0 \uae30\uc5c5/\uae30\uad00/\uc0ac\uc6a9\uc790\uc5d0\uac8c \uacf5\uac1c\ud558\uac70\ub098 \ubcf8\uc778\uc774 \uc18c\uc18d\ud55c \uc870\uc9c1\uc5d0\uc11c\ub9cc \ud65c\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.  \n\n\ubcf8 \ud30c\uc774\uc36c SDK\ub294 FastAPI\uc640 Flask \ub4f1\uc758 \uc8fc\uc694 Python Web Framework\uc5d0\uc11c ORBRO Platform\uc758 Connect \uc571 \uac1c\ubc1c\uc744 \uc704\ud574 \ud50c\ub7ab\ud3fc \uc778\uc99d \uad00\ub9ac\ub97c \ud3b8\ud558\uac8c \ud574\uc8fc\uace0 \ud50c\ub7ab\ud3fc API\uc758 \ud638\ucd9c\uc744 \uac00\ub2a5\ud558\uac8c \ud569\ub2c8\ub2e4. \n\n### Requirements\n\n---\nPython 3.7+\n\n### Installation\n\n[PyPI][pypi] \uc744 \ud1b5\ud55c \uc124\uce58\ub97c \uad8c\uc7a5\ud569\ub2c8\ub2e4.\n\n```bash\n$ pip install orbro-python-sdk\n```\n\n### \uc2dc\uc791\ud558\uae30\n\n---\n####  SDK\uac00 \uc81c\uacf5\ud558\ub294 \uae30\ub2a5\n**ORBRO Connect Python SDK**\ub294 \uc544\ub798\uc640 \uac19\uc740 \uae30\ub2a5\ub4e4\uc774 \ub0b4\uc7a5\ub418\uc5b4\uc788\uac70\ub098 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.\n\n- `orbro_sdk`: FastAPI/Flask \ub4f1\uc758 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc73c\ub85c \ucd08\uae30\ud654\ub418\ub294 OrbroConnect class '\uc81c\uacf5'\n- `orbro_sdk.datastore`: SQLAlchemy/SQL \uae30\ubc18\uc758 Client \uc815\ubcf4 \uc800\uc7a5\uc18c, Dict/Redis \uae30\ubc18\uc758 Access Token \uc800\uc7a5\uc18c '\uc81c\uacf5' \n- `orbro_sdk.models`: Connect \uc571 \ud1a0\ud070, Lifecycle\uc5d0 \ub530\ub978 \uc124\uce58/\uc0ad\uc81c Request, Client \uc815\ubcf4 Mixin \ubaa8\ub378 '\uc81c\uacf5'\n- `orbro_sdk.fastapi.middleware`: FastAPI\uc6a9. Web/Mobile \ub4f1\uc774 SDK\ub97c \uc0ac\uc6a9\ud55c Connect \uc571(BE)\uc5d0 \uc694\uccad(Request)\ud560 \ub54c\uc758 \uc778\uc99d \uc804\ucc98\ub9ac \ubbf8\ub4e4\uc6e8\uc5b4 '\ub0b4\uc7a5'\n- `orbro_sdk.fastapi.api_router`: FastAPI\uc6a9. App Descriptor\uc5d0 \uba85\uc2dc\ub41c lifecycle.installed, lifecycle.uninstalled URL\uc5d0 \ub530\ub978 ORBRO \ud50c\ub7ab\ud3fc Webhook \ud638\ucd9c \uc694\uccad(Request) \ubc0f Client \uc815\ubcf4\uc5d0 \ub300\ud55c \ucc98\ub9ac '\ub0b4\uc7a5'\n- `orbro_sdk.fastapi.dependencies`: FastAPI\uc6a9. DI\ub85c \uc0ac\uc6a9\ud558\uae30\uc704\ud55c \uc778\uc99d, \uc800\uc7a5\uc18c, API \ud638\ucd9c\uc774 \uac00\ub2a5\ud55c AsyncWebClient\uc758 Dependencies '\uc81c\uacf5'\n\n####  App Descriptor\nconnect.json\uacfc \uac19\uc740 JSON \ud615\uc2dd\uc758 \uc571 Descriptor \ud30c\uc77c \uc791\uc131\uc744 \ud1b5\ud574 ORBRO Platform\uc5d0 Connect \uc571\uc744 \ubc30\ud3ec\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\nSDK \uae30\ubcf8\uc801\uc73c\ub85c ORBRO Platform\uc5d0\uc11c \ubc1c\uae09\ub41c  Client ID\uc640 Client Seceret\uacfc \ud558\ub2e8\uc758 \uc571 Descriptor \ud30c\uc77c\uc744 \uae30\ubc18\uc73c\ub85c \ub3d9\uc791\ud569\ub2c8\ub2e4.\n\ub354 \uc0c1\uc138\ud55c \ub0b4\uc6a9\uc740 [Developer Guide - ORBRO Connect](https://orbro.notion.site/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820)\uc5d0\uc11c \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.\n\n```json\n{\n  \"id\": \"com.kongtech.sdk.tester\",\n  \"name\": \"SDK Test App.\",\n  \"description\": \"\ub85c\uceec \ubc0f \uac1c\ubc1c \uc11c\ubc84\uc5d0\uc11c\uc758 SDK \ud14c\uc2a4\ud2b8\",\n  \"vendor\": {\n    \"name\": \"Kongtech\",\n    \"url\": \"https://home.orbro.io\"\n  },\n  \"baseUrl\": \"https://f5cd-210-97-92-56.ngrok.io\",\n  \"lifecycle\": {\n    \"installed\": \"/installed\",\n    \"uninstalled\": \"/uninstalled\",\n    \"enabled\": \"/enabled\",\n    \"disabled\": \"/disabled\"\n  },\n  \"scopes\": [\n    \"every\"\n  ],\n  \"modules\": {\n    \"webhooks\": [\n      {\n        \"event_name\": \"device:device_updated\",\n        \"callback_api\": \"https://f5cd-210-97-92-56.ngrok.io/webhook/device\",\n        \"property\": \"profile_id\",\n        \"value\": \"Fixed.UWB.Anchor\"\n      },\n      {\n        \"event_name\": \"device:device_updated\",\n        \"callback_api\": \"https://f5cd-210-97-92-56.ngrok.io/webhook/device\",\n        \"property\": \"profile_id\",\n        \"value\": \"Movable.IndoorCamera.RTLS\"\n      }\n    ]\n  },\n  \"version\": \"0.1\"\n}\n```\n\n####  \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \ubaa8\ub378 \uc815\uc758\nORBRO Platform\uc5d0\uc11c \uc571 \uc124\uce58/\uc0ad\uc81c \uc2dc\uc5d0 lifecycle webhook\uc73c\ub85c \uc804\ub2ec\ub418\ub294 \uc815\ubcf4\ub97c \uae30\ubc18\uc73c\ub85c \uc571\uc744 \uc124\uce58\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\uac00 \uad00\ub9ac\ub429\ub2c8\ub2e4.\n\n```python\nfrom orbro_sdk.models import ConnectAppClientInfoMixin\nfrom sqlalchemy.ext.declarative import declarative_base\nBase = declarative_base()\n\n# SQL Model\nclass ClientInfo(Base, ConnectAppClientInfoMixin):\n    pass\n\n'''\n    class ConnectAppClientInfoMixin:\n        \"\"\"Connect App Shared Secret Info\"\"\"\n        __tablename__ = 'connect_app_client_info'\n        id = Column(Integer, primary_key=True)\n        organization_id = Column(String(255), nullable=False)\n        shared_secret = Column(String(255), nullable=False)\n        subdomain = Column(String(255))\n        installed_user_id = Column(String(255))\n        created_time = Column(DateTime, default=func.now())\n        updated_time = Column(DateTime, default=func.now())\n'''\n```\n####  \uac1c\ubc1c(DEV) \ud658\uacbd\uc5d0\uc11c SDK \ucd08\uae30\ud654\ud558\uae30\nSDK\ub294 \ub85c\uceec(Local) \ub610\ub294 \uac1c\ubc1c(DEV) \ud658\uacbd\uc5d0\uc11c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \uc800\uc7a5\uc18c\ub97c sqlite\ub85c \ud1a0\ud070 \uc815\ubcf4 \uc800\uc7a5\uc18c\ub294 Dictionary\ub85c \uc790\ub3d9\uc73c\ub85c \ucd08\uae30\ud654\ud558\uae30 \ub54c\ubb38\uc5d0 [ngrok](https://ngrok.com/) \uac19\uc740 \ud130\ub110\ub9c1 \ub3c4\uad6c\ub97c \uc0ac\uc6a9\ud55c \ud638\uc2a4\ud305\uc744 \ud1b5\ud574 \ube60\ub974\uac8c \uac1c\ubc1c\uacfc \ud14c\uc2a4\ud2b8\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4.\n\n```python\nfrom fastapi import FastAPI\nfrom orbro_sdk import OrbroConnect\n\nCLIENT_ID = 'your-client-id'\nCLIENT_SECRET = 'your-client-secret'\n# \ubc1c\uae09\ubc1b\uc740 Open API \ud1a0\ud070\uc774 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\nOPEN_API_TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.e...'\n\napp = FastAPI()\nsdk = OrbroConnect(app, client_id=CLIENT_ID, client_secret=CLIENT_SECRET, open_api_token=OPEN_API_TOKEN)\n```\n\n####  \ud504\ub85c\ub355\uc158(PROD) \ud658\uacbd\uc5d0\uc11c SDK \ucd08\uae30\ud654\ud558\uae30\nSDK\ub294 \uc2a4\ud14c\uc774\uc9c0(STG), \ud504\ub85c\ub355\uc158(PROD) \ud658\uacbd\uc5d0\uc11c **\ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \uc800\uc7a5\uc18c\ub97c MySQL/PostgreSQL \ub4f1\uc758 \uad00\uacc4\ud615 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \ud1a0\ud070 \uc815\ubcf4 \uc800\uc7a5\uc18c\ub294 Redis\ub85c \uc0ac\uc6a9\ud558\ub294 \uac83\uc744 \uad8c\uc7a5**\ud569\ub2c8\ub2e4.\n\n```python\nfrom fastapi import FastAPI\nfrom orbro_sdk import OrbroConnect\nfrom orbro_sdk.models import ConnectAppClientInfoMixin\nfrom sqlalchemy import create_engine\nfrom sqlalchemy.orm import sessionmaker\nfrom sqlalchemy.ext.declarative import declarative_base\nimport redis\nimport logging\n\nCLIENT_ID = 'your-client-id'\nCLIENT_SECRET = 'your-client-secret'\nSQLALCHEMY_DATABASE_URL = 'postgresql://username:password@localhost:5432/your_app_db'\n\nhandler = logging.StreamHandler()\nhandler.setLevel(logging.WARNING)\nlogger = logging.getLogger()\nlogger.addHandler(handler)\n\nBase = declarative_base()\n\n# SQL Model\nclass ClientInfo(Base, ConnectAppClientInfoMixin):\n    pass\n\nengine = create_engine(\n    SQLALCHEMY_DATABASE_URL,\n    echo=True\n)\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\nRedis = redis.StrictRedis(host='localhost', port=6379, decode_responses=True)\n\n# \ubc1c\uae09\ubc1b\uc740 Open API \ud1a0\ud070\uc774 \uc874\uc7ac\ud558\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\nOPEN_API_TOKEN = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.e...'\napp = FastAPI()\nsdk = OrbroConnect(app, client_id=CLIENT_ID, client_secret=CLIENT_SECRET,\n                   db_session_maker=SessionLocal, client_info_model=ClientInfo, redis=Redis, \n                   open_api_token=OPEN_API_TOKEN)\nBase.metadata.create_all(bind=engine)\n\n```\n#### FastAPI : \uc778\uc99d Middleware\ub85c\ubd80\ud130 \ucc98\ub9ac\ub41c \uae30\ubcf8 \uc815\ubcf4 \uc5bb\uae30\n* Connect \uc571 SDK \uc778\uc99d \ubbf8\ub4e4\uc6e8\uc5b4\ub85c\ubd80\ud130 \ubaa8\ub4e0 API\uc5d0 \uae30\ubcf8\uc801\uc73c\ub85c \uc804\ub2ec\ub418\ub294 \uc815\ubcf4.\n* \uc778\uc99d\uc774 \ud544\uc694\ud55c API\ub294 Mobile\uc5d0\uc11c Header\uc5d0  { 'sub' : '{organization.subdomain}' } \ucd94\uac00\ud558\uc5ec \uc694\uccad \ud544\uc694.\n* \uc778\uc99d\uc774 \ud544\uc694\ud55c API\ub294 Web\uc5d0\uc11c Query Parameter\uc5d0 ?origin={origin} \ucd94\uac00\ud558\uc5ec \uc694\uccad \ud544\uc694.\n\n```python\nfrom fastapi import FastAPI, Request\n\napp = FastAPI()\n\n@app.get(\n    '/my-api'\n)\ndef get_middleware_auth_info(\n    request: Request\n):\n    # \uc778\uc99d\uc774 \uc131\uacf5\ud558\uba74 request\uc5d0\uc11c \uc544\ub798 \uc18d\uc131\uc73c\ub85c \uc811\uadfc \uac00\ub2a5\n    print(request.state.user)\n    '''\n        {\n            'email': '',        # API\ub97c \ud638\ucd9c\ud55c \uc720\uc800\uc758 \uc774\uba54\uc77c \uc815\ubcf4 \n            'origin': '',       # API\ub97c \ud638\ucd9c\ud55c \uc18c\uc18d\uc758 ORIGIN \uc815\ubcf4\n            'subdomain': ''     # API\ub97c \ud638\ucd9c\ud55c \uc18c\uc18d\uc758 \uc11c\ube0c\ub3c4\uba54\uc778 \uc815\ubcf4\n        }    \n    '''\n    return {'status_code': 200}\n```\n\n#### FastAPI : AsyncClient \ub514\ud39c\ub358\uc2dc\n* \ud50c\ub7ab\ud3fc\uc758 API\ub97c \ud638\ucd9c \ud560 \ub54c Connect \uc571 \uc124\uce58 \uc2dc\uc5d0 \uc0dd\uc131\ub41c Client \uc815\ubcf4\ub97c \ubc14\ud0d5\uc73c\ub85c Connect \uc571 BE \ud1a0\ud070\uc744 \uc0dd\uc131\ud558\uc5ec Dict\ub098 Redis\ub85c \uc800\uc7a5.\n* \ub514\ud39c\ub358\uc2dc\ub85c \uac00\uc838\uc654\uc744 \ub54c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubcc4\ub3c4\uc758 origin \ub610\ub294 \ud1a0\ud070 \ub9cc\ub8cc \uc2dc, \ubc1c\uae09/\uc0ad\uc81c \ucc98\ub9ac \ubd88\ud544\uc694.\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.fastapi.dependencies.client import get_async_client, AsyncWebClient\n\napp = FastAPI()\n\n@app.get(\n    '/get-async-client'\n)\nasync def get_async_client(\n        async_client: AsyncWebClient = Depends(get_async_client)\n):\n    # ORBRO Platform API \ud638\ucd9c\n    # [GET]\n    res = await async_client.get('/api/v1/users')\n    print(res.text)\n    # [PATCH]\n    body = {'name': 'ORBRO'}\n    res = await async_client.patch('/api/v1/users/<user_id>'.format(user_id='3a71428f-1aaf-4ccc-8fff-193934ed4d2a'),\n                                   data=body)\n    print(res.text)\n    # [PUT]\n    body = {'name': 'ORBRO'}\n    res = await async_client.put('/api/v1/users/<user_id>'.format(user_id='3a71428f-1aaf-4ccc-8fff-193934ed4d2a'),\n                                 data=body)\n    print(res.text)\n\n    # [POST]\n    body = {'name': 'ORBRO'}\n    res = await async_client.post('/api/v1/users', data=body)\n    print(res.text)\n\n    # [DELETE]\n    res = await async_client.delete('/api/v1/users/<user_id>'.format(user_id='3a71428f-1aaf-4ccc-8fff-193934ed4d2a'))\n    # \uc774\uc678 [HEAD], [OPTIONS] \uc81c\uacf5\ud568.\n    print(res.text)\n\n    return { 'status_code': 200, 'message': res.text }\n```\n\n#### FastAPI : OpenAPI\uc6a9 AsyncClient \ub514\ud39c\ub358\uc2dc\n* \ud50c\ub7ab\ud3fc\uc758 API\ub97c \ud638\ucd9c \ud560 \ub54c \uac1c\ubc1c\uc790\uac00 \uc18d\ud55c \uc18c\uc18d \uc815\ubcf4\ub97c \ubc14\ud0d5\uc73c\ub85c \ubc1c\uae09\ub41c Open API\uc6a9 \ud1a0\ud070\uc744 \ud1b5\ud558\uc5ec API \ud638\ucd9c.\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.fastapi.dependencies.client import get_openapi_async_client, AsyncWebClient\n\napp = FastAPI()\n\n@app.get(\n    '/get-openapi-async-client'\n)\nasync def get_openapi_async_client(\n        async_client: AsyncWebClient = Depends(get_openapi_async_client)\n):\n    # \ud50c\ub7ab\ud3fc API \ud638\ucd9c\n\n    # [GET]\n    res = await async_client.get('/api/v1/users')\n    print(res.text)\n    # [PATCH]\n    body = {'name': 'Dragon'}\n    res = await async_client.patch('/openapi/v1/users/<user_id>'.format(user_id='3a7f958f-154f-44ba-8f93-193934ed4d2a'),\n                                   data=body)\n    print(res.text)\n    # [PUT]\n    body = {'name': 'Dragon2'}\n    res = await async_client.put('/openapi/v1/users/<user_id>'.format(user_id='3a7f958f-154f-44ba-8f93-193934ed4d2a'),\n                                 data=body)\n    print(res.text)\n\n    # [POST]\n    body = {'name': 'New Dragon'}\n    res = await async_client.post('/openapi/v1/users', data=body)\n    print(res.text)\n\n    # [DELETE]\n    res = await async_client.delete('/openapi/v1/users/<user_id>'.format(user_id='1a2b3c4d'))\n    # \uc774\uc678 [HEAD], [OPTIONS] \uc81c\uacf5\ud568.\n    print(res.text)\n\n    return { 'status_code': 200, 'message': res.text }\n```\n\n#### FastAPI : Webhook \ub514\ud39c\ub358\uc2dc\n* App Descriptor\uc5d0 \uba85\uc2dc\ub41c webhooks\ub85c ORBRO Platform\uc5d0\uc11c Connect \uc571\uc73c\ub85c \uc694\uccad\ud558\ub294 \uc778\uc99d\uc5d0 \ub300\ud55c \ucc98\ub9ac\n\n```python\nfrom fastapi import FastAPI, Depends, Response\nfrom fastapi import Body\nfrom orbro_sdk.fastapi.dependencies.auth import webhook_auth_dep\n\napp = FastAPI()\n\n@app.post(\n    '/webhook/device'\n)\nasync def handle_webhook(\n        payload: dict = Body(...),\n        auth: dict = Depends(webhook_auth_dep)\n):\n    # Webhook \uba54\uc2dc\uc9c0\uac00 \ubcf4\ub0b4\ub294 \ub300\uc0c1 \uc571\uc758 \uc870\uc9c1(\uc18c\uc18d) UUID\n    org_id = auth.get('organization_id')\n    # Webhook \uba54\uc2dc\uc9c0\uac00 \ubcf4\ub0b4\ub294 \ub300\uc0c1 \uc571\uc758 \uc124\uce58 \uc0ac\uc6a9\uc790(Admin \uc774\uc0c1) UUID\n    user_id = auth.get('user_id')\n    print(f'{org_id} / {user_id}')\n\n    print(payload)\n\n    return Response(status_code=200)\n\n```\n\n#### FastAPI : \ud50c\ub7ab\ud3fc \uc778\uc99d \ud1a0\ud070 \ub514\ud39c\ub358\uc2dc\n* \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ubc1c\uae09\ubc1b\uc740 Access \ud1a0\ud070\uc5d0 \ub300\ud55c \uc778\uc99d \ucc98\ub9ac (ORBRO Platform API\ub97c \ud65c\uc6a9\ud55c \uc778\uc99d \uc704\uc784)\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.fastapi.dependencies.auth import request_auth_dep\n\napp = FastAPI()\n\n@app.get(\n    '/platform-access-token-authenticated-url'\n)\ndef platform_authenticated_url(\n    user: dict = Depends(request_auth_dep)\n):\n    print(user)\n    '''\n            {\n                \"uuid\": \"9ac14270-c141-423a-9883-504941d80f35\",\n                \"role\": \"HQ\",\n                \"status\": \"Activated\"\n            }\n    '''\n    return {'status_code': 200 }\n\n\n```\n\n#### FastAPI : \ud50c\ub7ab\ud3fc Connect \uc571 \uc778\uc99d \ud1a0\ud070 \ub514\ud39c\ub358\uc2dc\n* \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ubc1c\uae09\ubc1b\uc740 Connect \uc571 Access Token\ud1a0\ud070\uc5d0 \ub300\ud55c \uc778\uc99d \ucc98\ub9ac (ORBRO Platform API\ub97c \ud65c\uc6a9\ud55c \uc778\uc99d \uc704\uc784)\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.fastapi.dependencies.auth import request_connect_app_auth_dep\n\napp = FastAPI()\n\n@app.get(\n    '/connect-app-token-validation'\n)\ndef connect_authenticated_url(\n    app: dict = Depends(request_connect_app_auth_dep)\n):\n    print(app)\n    '''\n        {\n            \"id\": \"\",     # SharedSecret Table id\n            \"uuid\": \"\"\"   # \uc124\uce58\ud55c User\uc758 UUID\n            \"organization_id\": \"\" # \uc571\uc758 \uc18c\uc18d UUID \n            \"role\": \"\"    # \uc124\uce58\ud55c User\uc758 Role\n            \"status\": \"\"  # \uc124\uce58\ud55c User\uc758 status\n            \"scope\": \"\"   # \uc124\uce58\ud55c \uc571\uc758 Scope\n        }\n    '''\n\n    return {'status_code': 200}\n```\n\n#### FastAPI : \ud50c\ub7ab\ud3fc Open API \uc778\uc99d \ud1a0\ud070 \ub514\ud39c\ub358\uc2dc\n* \ud50c\ub7ab\ud3fc\uc5d0\uc11c \ubc1c\uae09\ubc1b\uc740 Open API \ud1a0\ud070\uc5d0 \ub300\ud55c \uc778\uc99d \ucc98\ub9ac (ORBRO Platform API\ub97c \ud65c\uc6a9\ud55c \uc778\uc99d \uc704\uc784)\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.fastapi.dependencies.auth import request_oauth_dep\n\napp = FastAPI()\n\n@app.get(\n    '/authenticated-open-api-url'\n)\ndef platform_open_api_authenticated_url(\n    user: dict = Depends(request_oauth_dep)\n):\n    print(user)\n    '''\n            {\n                \"uuid\": \"93817f70-c141-43fa-9883-504941d80f35\",\n                \"role\": \"HQ\",\n                \"status\": \"Activated\"\n            }\n    '''\n    return {'status_code': 200 }\n```\n\n#### FastAPI : \uc720\ud2f8\ub9ac\ud2f0 - \ud1a0\ud070 \uc800\uc7a5\uc18c \ub514\ud39c\ub358\uc2dc\n* \ud1a0\ud070 \uc800\uc7a5\uc18c\ub97c \ud1b5\ud55c \ud1a0\ud070 \uc800\uc7a5/\uc870\ud68c/\uc0ad\uc81c\uac00 \uac00\ub2a5\ud558\uac8c\ud558\ub294 \ub514\ud39c\ub358\uc2dc\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.models import ConnectAppToken\nfrom orbro_sdk.datastore import DictTokenDataStore, RedisTokenDataStore\nfrom typing import Union\n\napp = FastAPI()\n\n@app.get(\n    '/use-token-store'\n)\ndef handle_token(\n    token_store: Union[RedisTokenDataStore, DictTokenDataStore] = Depends(OrbroConnect.token_store_dep)\n):\n    # \uc124\uce58\ub41c \uc571\uc758 Connect \uc571 \ud1a0\ud070 \uc815\ubcf4\ub97c Organization UUID\ub85c \uc870\ud68c\n    app_token: ConnectAppToken = token_store.get_token('{organization.id}')\n    print(app_token.organization_id)\n    print(app_token.access_token)\n\n    # Connect \uc571 BE \ud1a0\ud070\uc744 \uc0dd\uc131 \ubc0f \uc800\uc7a5\n    token = OrbroConnect.token_util.issue_token('{shared_secret_key}', '{insatlled_user_uuid}')\n    token_store.set_token({\n        'organization_id': '',   # Connect \uc571 \ud1a0\ud070\uc744 \uc800\uc7a5\ud560 Organization ID,\n        'access_token': token      # \ubc1c\uae09\ud55c \ud1a0\ud070 \uc815\ubcf4\n    })\n\n    # Connect \uc571 BE \ud1a0\ud070\uc744 \uc0ad\uc81c\n    token_store.delete('{organization_uuid}')\n\n    return {'status_code': 200}\n```\n#### FastAPI : \uc720\ud2f8\ub9ac\ud2f0 - \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \uc800\uc7a5\uc18c \ub514\ud39c\ub358\uc2dc\n* \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \uc800\uc7a5\uc18c\ub97c \ud1b5\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4 \uc800\uc7a5/\uc870\ud68c/\uc0ad\uc81c\uac00 \uac00\ub2a5\ud558\uac8c\ud558\ub294 \ub514\ud39c\ub358\uc2dc\n\n```python\nfrom fastapi import FastAPI, Depends\nfrom orbro_sdk.datastore import ClientInfoDataStore\n\napp = FastAPI()\n\n@app.get(\n    '/use-client-datastore',\n    description=\"\uc571\uc758 \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\ub97c \ud578\ub4e4\ub9c1 \ud560 \ub54c \uc0ac\uc6a9\ud558\ub294 \ub514\ud39c\ub358\uc2dc\"\n)\ndef handle_client_info(\n    client_datastore: ClientInfoDataStore = Depends(OrbroConnect.client_info_store_dep)\n):\n\n    # \uc571\uc744 \uc124\uce58\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\ub97c Organization UUID\ub85c \uc870\ud68c\n    app_client_info: ClientInfo = client_datastore.get_by_organization_id('{organization.id}')\n\n    # \uc571\uc744 \uc124\uce58\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\ub97c Organization subdomain\uc73c\ub85c \uc870\ud68c\n    app_client_info: ClientInfo = client_datastore.get_by_subdomain('{organization.subdomain}')\n\n    # \uc571\uc744 \uc124\uce58\ud55c \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\ub97c \uc571\uc744 \uc124\uce58\ud55c User\uc758 UUID\ub85c \uc870\ud68c\n    app_client_info: ClientInfo = client_datastore.get_by_user_id('{user.id}')\n\n    # \uc77c\ubc18\uc801\uc73c\ub85c \uc571 \uc124\uce58/\uc0ad\uc81c \uc2dc, \ud074\ub77c\uc774\uc5b8\ud2b8 \uc815\ubcf4\uc758 \uc0dd\uc131\uacfc \uc0ad\uc81c\ub294 /installed \ub098 /installed\uac00 \ud638\ucd9c\ub420 \ub54c middleware\uc5d0\uc11c \uc790\ub3d9 \ucc98\ub9ac\ub428.\n    # \uc571 \uc124\uce58/\uc0ad\uc81c \uc678 \uc0ac\uc6a9\uc774 \ud544\uc694\ud558\uba74 \uc544\ub798\uc640 \uac19\uc774 \uc0ac\uc6a9\n    # \uc0dd\uc131\n    client_datastore.add({\n        'orgamization_id': '',    # \uc571\uc744 \uc124\uce58\ud55c \uc870\uc9c1(\uc18c\uc18d)\uc758 UUID\n        'shared_secret': '',      # \ud50c\ub7ab\ud3fc\uc5d0\uc11c \uc571 \ubc30\ud3ec \uc2dc, \uc0dd\uc131\ub41c shared_secret \ud0a4\n        'installed_user_id': '',  # \uc571\uc744 \uc124\uce58\ud55c \uc0ac\uc6a9\uc790\uc758 UUID\n        'subdomain': ''           # \uc571\uc744 \uc124\uce58\ud55c \uc870\uc9c1(\uc18c\uc18d)\uc758 \uc11c\ube0c \ub3c4\uba54\uc778\n    })\n    client_datastore.commit()\n\n    # \uc0ad\uc81c\n    deleted_app_client_info: ClientInfo = client_datastore.get_by_organization_id('{organization.id}')\n    client_datastore.delete(deleted_app_client_info)\n    client_datastore.commit()\n\n    return {'status_code': 200}\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820",
            "keywords": "orbro connect iot digitaltwin rtls",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "orbro-python-sdk",
            "package_url": "https://pypi.org/project/orbro-python-sdk/",
            "platform": null,
            "project_url": "https://pypi.org/project/orbro-python-sdk/",
            "project_urls": {
                "Homepage": "https://www.notion.so/ORBRO-Connect-7065dd4435264beebdeb52c7f7408820"
            },
            "release_url": "https://pypi.org/project/orbro-python-sdk/0.18/",
            "requires_dist": [
                "SQLAlchemy (==1.4.27)",
                "pydantic (==1.8.2)",
                "redis (>=3.5.3)",
                "PyJWT (==2.3.0)",
                "httpx (==0.19.0)"
            ],
            "requires_python": ">=3.7",
            "summary": "ORBRO-Connect SDK for Python(FastAPI/Flask)",
            "version": "0.18",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15749249,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4239b70694486b83e788cb8bcc16b0a7",
                    "sha256": "6bcc5fdf36896f1d29ecd02825a7c3edcd17df35e414ee58e3612b5c1e4a8c26"
                },
                "downloads": -1,
                "filename": "orbro_python_sdk-0.18-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4239b70694486b83e788cb8bcc16b0a7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 23115,
                "upload_time": "2022-11-13T05:21:24",
                "upload_time_iso_8601": "2022-11-13T05:21:24.973545Z",
                "url": "https://files.pythonhosted.org/packages/50/28/ddb605e9078dfdcf99a9d3eb2d6d8e7a79d2607cbc904a9e00b8cece7ec4/orbro_python_sdk-0.18-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c0cca9163f4737eec6e06e4b8db0388e",
                    "sha256": "7d9e04c05eaf38b506887ed9065dafcb076fbbfa7c501266ca0b02fd27fcdc6f"
                },
                "downloads": -1,
                "filename": "orbro-python-sdk-0.18.tar.gz",
                "has_sig": false,
                "md5_digest": "c0cca9163f4737eec6e06e4b8db0388e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 19527,
                "upload_time": "2022-11-13T05:21:27",
                "upload_time_iso_8601": "2022-11-13T05:21:27.419656Z",
                "url": "https://files.pythonhosted.org/packages/61/78/af9626d683602234ff3c06c5ee072219bd219db0872cf7b4c5bd45676c35/orbro-python-sdk-0.18.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}