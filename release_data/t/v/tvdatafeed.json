{
    "1.0.2": {
        "info": {
            "author": "@anojangra",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.youtube.com/c/StreamAlpha",
            "keywords": "historical data,tradingview,stock markets",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tvdatafeed",
            "package_url": "https://pypi.org/project/tvdatafeed/",
            "platform": "",
            "project_url": "https://pypi.org/project/tvdatafeed/",
            "project_urls": {
                "Homepage": "https://www.youtube.com/c/StreamAlpha"
            },
            "release_url": "https://pypi.org/project/tvdatafeed/1.0.2/",
            "requires_dist": [
                "pandas",
                "selenium",
                "websocket-client",
                "chromedriver-autoinstaller"
            ],
            "requires_python": "",
            "summary": "TradingView historical data downloader",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14910238,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b15ef84f3a1219119cafe87a126fd2dc",
                    "sha256": "6318fb84c1a730e9c7b8ea48450bdceabe21a5b570c00660af9da3c1675daa48"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b15ef84f3a1219119cafe87a126fd2dc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5882,
                "upload_time": "2021-05-12T13:51:54",
                "upload_time_iso_8601": "2021-05-12T13:51:54.354340Z",
                "url": "https://files.pythonhosted.org/packages/ce/23/6adf6a2c4105f32339b3cedac3e0a40a7cbe45813306b3a5e292d32134a3/tvdatafeed-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3865065ef601a027f732c4de342d5220",
                    "sha256": "64c868caa0e858d6bc2a16256855983741052f2516c55fd99764265e1a89827e"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "3865065ef601a027f732c4de342d5220",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5707,
                "upload_time": "2021-05-12T13:51:56",
                "upload_time_iso_8601": "2021-05-12T13:51:56.238341Z",
                "url": "https://files.pythonhosted.org/packages/f4/28/8e5b32d2326151782ac4c3639c01f87dd4fda95ea5b8eb61c02038453699/tvdatafeed-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.3": {
        "info": {
            "author": "@StreamAlpha",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/StreamAlpha/tvdatafeed/tree/develop",
            "keywords": "tvdatafeed,stock markets",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tvdatafeed",
            "package_url": "https://pypi.org/project/tvdatafeed/",
            "platform": "",
            "project_url": "https://pypi.org/project/tvdatafeed/",
            "project_urls": {
                "Homepage": "https://github.com/StreamAlpha/tvdatafeed/tree/develop"
            },
            "release_url": "https://pypi.org/project/tvdatafeed/1.0.3/",
            "requires_dist": [
                "pandas",
                "selenium",
                "websocket-client",
                "chromedriver-autoinstaller"
            ],
            "requires_python": "",
            "summary": "TradingView historical data downloader",
            "version": "1.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14910238,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "73a1a858731f095bef58978ed0c6d8f2",
                    "sha256": "ae130056553d98987be117acc252c82a7b85f0beb8cccbcc3a3aae870728ecd2"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "73a1a858731f095bef58978ed0c6d8f2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6970,
                "upload_time": "2021-06-01T15:28:57",
                "upload_time_iso_8601": "2021-06-01T15:28:57.390375Z",
                "url": "https://files.pythonhosted.org/packages/b1/50/6aa7cfda439f14033dda960720483e0b5086b461057e001cbc116920ebc3/tvdatafeed-1.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "14669c3fcdf364923edb8a3b402e4c80",
                    "sha256": "7a6287fc4362c045f37d14e99c357d5d8de8d3c0001882cdedc4abf033842bd4"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "14669c3fcdf364923edb8a3b402e4c80",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6340,
                "upload_time": "2021-06-01T15:28:58",
                "upload_time_iso_8601": "2021-06-01T15:28:58.787253Z",
                "url": "https://files.pythonhosted.org/packages/5d/43/4eab840e8bc111b4af65019804808a1c3609b8700a35f7b4696bd75eb860/tvdatafeed-1.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.4": {
        "info": {
            "author": "@StreamAlpha",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.youtube.com/watch?v=qDrXmb2ZRjo",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tvdatafeed",
            "package_url": "https://pypi.org/project/tvdatafeed/",
            "platform": "",
            "project_url": "https://pypi.org/project/tvdatafeed/",
            "project_urls": {
                "Homepage": "https://www.youtube.com/watch?v=qDrXmb2ZRjo"
            },
            "release_url": "https://pypi.org/project/tvdatafeed/1.0.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "TradingView historical data downloader",
            "version": "1.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14910238,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "64509531d58d3f0d79dfbd7afe2b726a",
                    "sha256": "a1add72297a1281e27218a0c89cc18490241fb9e0cdee558d3b8be2ace7a547b"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "64509531d58d3f0d79dfbd7afe2b726a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7108,
                "upload_time": "2021-07-03T17:08:06",
                "upload_time_iso_8601": "2021-07-03T17:08:06.063873Z",
                "url": "https://files.pythonhosted.org/packages/87/72/7c33df7b86905cc2723c47c0fd97efb275b4d86bf5bea7d4890caef72c30/tvdatafeed-1.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5989e9bd4258e91af150a7a1dcbcb49e",
                    "sha256": "d6e49f82743230b484cbd5ac7591e4d4c130a7d15137f9c9bad0ac7876d5f5a3"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "5989e9bd4258e91af150a7a1dcbcb49e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6392,
                "upload_time": "2021-07-03T17:08:08",
                "upload_time_iso_8601": "2021-07-03T17:08:08.286586Z",
                "url": "https://files.pythonhosted.org/packages/d9/5e/b4a56e4bacf747464e37626c0c8c86c8dfa54bd96d7ac6398e8cada65eb0/tvdatafeed-1.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.1": {
        "info": {
            "author": "@StreamAlpha",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/StreamAlpha/tvdatafeed/",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tvdatafeed",
            "package_url": "https://pypi.org/project/tvdatafeed/",
            "platform": "",
            "project_url": "https://pypi.org/project/tvdatafeed/",
            "project_urls": {
                "Funding": "https://www.buymeacoffee.com/StreamAlpha",
                "Homepage": "https://github.com/StreamAlpha/tvdatafeed/",
                "Source": "https://github.com/StreamAlpha/tvdatafeed/",
                "Telegram Channel": "https://t.me/streamAlpha",
                "Tracker": "https://github.com/StreamAlpha/tvdatafeed/issues",
                "YouTube": "https://youtube.com/StreamAlpha?sub_confirmation=1"
            },
            "release_url": "https://pypi.org/project/tvdatafeed/1.2.1/",
            "requires_dist": [
                "setuptools",
                "pandas",
                "selenium",
                "websocket-client",
                "chromedriver-autoinstaller"
            ],
            "requires_python": "",
            "summary": "TradingView historical data downloader",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14910238,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8224808d2b4598b9826f3b65ae571fda",
                    "sha256": "082c3088018dfbbc506b1d0869547d8c118eb8a198880b96f2d1f55a1b7f01f7"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8224808d2b4598b9826f3b65ae571fda",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9308,
                "upload_time": "2022-01-06T16:54:29",
                "upload_time_iso_8601": "2022-01-06T16:54:29.205765Z",
                "url": "https://files.pythonhosted.org/packages/3c/33/0a1045d8103f7d7d6cdbc04bc2c83e09b94898f7ad3ffaf111b71b711a3e/tvdatafeed-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9703bc3f38091665a2edc6ab761ebb64",
                    "sha256": "de3882869a78bd33015b830499178a069f0e9704245dcea77076062087f7c4b5"
                },
                "downloads": -1,
                "filename": "tvdatafeed-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9703bc3f38091665a2edc6ab761ebb64",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11331,
                "upload_time": "2022-01-06T16:54:30",
                "upload_time_iso_8601": "2022-01-06T16:54:30.876946Z",
                "url": "https://files.pythonhosted.org/packages/66/87/0a71bed842b166cbef43ed1790aa77aaf676bb74dee86df750755e7d6f42/tvdatafeed-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.1.0": {
        "info": {
            "author": "@StreamAlpha",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# **TvDatafeed**\n\nA simple TradingView historical Data Downloader. Tvdatafeed allows downloading upto 5000 bars on any of the supported timeframe.\n\nIf you found the content useful and want to support my work, you can buy me a coffee!\n[![](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/StreamAlpha)\n\n## Installation\n\nThis module is installed via pip:\n\n```sh\npip install tvdatafeed\n```\n\nor installing from github repo\n\n```sh\npip install --upgrade --no-cache-dir git+https://github.com/StreamAlpha/tvdatafeed.git\n```\n\nFor usage instructions, watch these videos-\n\nv1.2 tutorial with installation and backtrader usage\n\n[![Watch the video](https://img.youtube.com/vi/f76dOZW2gwI/hqdefault.jpg)](https://youtu.be/f76dOZW2gwI)\n\nFull tutorial\n\n[![Watch the video](https://img.youtube.com/vi/qDrXmb2ZRjo/hqdefault.jpg)](https://youtu.be/qDrXmb2ZRjo)\n\n---\n\n## About release 2.0.0\n\nVersion 2.0.0 is a major release and is not backward compatible. make sure you update your code accordingly. Thanks to [stefanomorni](https://github.com/stefanomorni) for contributing and removing selenium dependancy.\n\n## Usage\n\nImport the packages and initialize with your tradingview username and password.\n\n```python\nfrom tvDatafeed import TvDatafeed, Interval\n\nusername = 'YourTradingViewUsername'\npassword = 'YourTradingViewPassword'\n\ntv = TvDatafeed(username, password)\n```\n\nYou may use without logging in, but in some cases tradingview may limit the symbols and some symbols might not be available.\n\nTo use it without logging in\n\n```python\ntv = TvDatafeed()\n```\n\nwhen using without login, following warning will be shown `you are using nologin method, data you access may be limited`\n\n---\n\n## Getting Data\n\nTo download the data use `tv.get_hist` method.\n\nIt accepts following arguments and returns pandas dataframe\n\n```python\n(symbol: str, exchange: str = 'NSE', interval: Interval = Interval.in_daily, n_bars: int = 10, fut_contract: int | None = None, extended_session: bool = False) -> DataFrame)\n```\n\nfor example-\n\n```python\n# index\nnifty_index_data = tv.get_hist(symbol='NIFTY',exchange='NSE',interval=Interval.in_1_hour,n_bars=1000)\n\n# futures continuous contract\nnifty_futures_data = tv.get_hist(symbol='NIFTY',exchange='NSE',interval=Interval.in_1_hour,n_bars=1000,fut_contract=1)\n\n# crudeoil\ncrudeoil_data = tv.get_hist(symbol='CRUDEOIL',exchange='MCX',interval=Interval.in_1_hour,n_bars=5000,fut_contract=1)\n\n# downloading data for extended market hours\nextended_price_data = tv.get_hist(symbol=\"EICHERMOT\",exchange=\"NSE\",interval=Interval.in_1_hour,n_bars=500, extended_session=False)\n```\n\n---\n\n## Search Symbol\n\nTo find the exact symbols for an instrument you can use `tv.search_symbol` method.\n\nYou need to provide search text and optional exchange. This will return a list of macthing instruments and their symbol.\n\n```python\ntv.search_symbol('CRUDE','MCX')\n```\n\n---\n\n## Calculating Indicators\n\nIndicators data is not downloaded from tradingview. For that you can use [TA-Lib](https://github.com/mrjbq7/ta-lib). Check out this video for installation and usage instructions-\n\n[![Watch the video](https://img.youtube.com/vi/0MeHXJm9HRk/hqdefault.jpg)](https://youtu.be/0MeHXJm9HRk)\n\n---\n\n## Supported Time Intervals\n\nFollowing timeframes intervals are supported-\n\n`Interval.in_1_minute`\n\n`Interval.in_3_minute`\n\n`Interval.in_5_minute`\n\n`Interval.in_15_minute`\n\n`Interval.in_30_minute`\n\n`Interval.in_45_minute`\n\n`Interval.in_1_hour`\n\n`Interval.in_2_hour`\n\n`Interval.in_3_hour`\n\n`Interval.in_4_hour`\n\n`Interval.in_daily`\n\n`Interval.in_weekly`\n\n`Interval.in_monthly`\n\n---\n\n## Read this before creating an issue\n\nBefore creating an issue in this library, please follow the following steps.\n\n1. Search the problem you are facing is already asked by someone else. There might be some issues already there, either solved/unsolved related to your problem. Go to [issues](https://github.com/StreamAlpha/tvdatafeed/issues) page, use `is:issue` as filter and search your problem. ![image](https://user-images.githubusercontent.com/59556194/128167319-2654cfa1-f718-4a52-82f8-b0c0d26bf4ef.png)\n2. If you feel your problem is not asked by anyone or no issues are related to your problem, then create a new issue.\n3. Describe your problem in detail while creating the issue. If you don't have time to detail/describe the problem you are facing, assume that I also won't be having time to respond to your problem.\n4. Post a sample code of the problem you are facing. If I copy paste the code directly from issue, I should be able to reproduce the problem you are facing.\n5. Before posting the sample code, test your sample code yourself once. Only sample code should be tested, no other addition should be there while you are testing.\n6. Have some print() function calls to display the values of some variables related to your problem.\n7. Post the results of print() functions also in the issue.\n8. Use the insert code feature of github to inset code and print outputs, so that the code is displyed neat. !\n9. If you have multiple lines of code, use tripple grave accent ( ``` ) to insert multiple lines of code.\n\n   [Example:](https://docs.github.com/en/github/writing-on-github/creating-and-highlighting-code-blocks)\n\n   ![1659809630082](image/README/1659809630082.png)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/StreamAlpha/tvdatafeed/",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tvdatafeed",
            "package_url": "https://pypi.org/project/tvdatafeed/",
            "platform": null,
            "project_url": "https://pypi.org/project/tvdatafeed/",
            "project_urls": {
                "Funding": "https://www.buymeacoffee.com/StreamAlpha",
                "Homepage": "https://github.com/StreamAlpha/tvdatafeed/",
                "Source": "https://github.com/StreamAlpha/tvdatafeed/",
                "Telegram Channel": "https://t.me/streamAlpha",
                "Tracker": "https://github.com/StreamAlpha/tvdatafeed/issues",
                "YouTube": "https://youtube.com/StreamAlpha?sub_confirmation=1"
            },
            "release_url": "https://pypi.org/project/tvdatafeed/2.1.0/",
            "requires_dist": [
                "setuptools",
                "pandas",
                "websocket-client",
                "requests"
            ],
            "requires_python": "",
            "summary": "TradingView historical data downloader",
            "version": "2.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14910238,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69e187b1155c46ed6f38b3c17c385011",
                    "sha256": "ef8ca6a5cb0989c2f14824a68bd8d83e7395edf24f5982cb38ab097c1d6dc330"
                },
                "downloads": -1,
                "filename": "tvdatafeed-2.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "69e187b1155c46ed6f38b3c17c385011",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7582,
                "upload_time": "2022-08-27T17:12:45",
                "upload_time_iso_8601": "2022-08-27T17:12:45.612888Z",
                "url": "https://files.pythonhosted.org/packages/bb/af/2af73dacea5dd84568506900854bdcfd8d7a26c0b860fc5a868fc0d5371d/tvdatafeed-2.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7354005000615e581818a6fae3749dd",
                    "sha256": "0d653ffddf925cbe1abe473dbf647b1f3aa1a3e99f25b256f0447999de477fe1"
                },
                "downloads": -1,
                "filename": "tvdatafeed-2.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d7354005000615e581818a6fae3749dd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7409,
                "upload_time": "2022-08-27T17:12:48",
                "upload_time_iso_8601": "2022-08-27T17:12:48.330879Z",
                "url": "https://files.pythonhosted.org/packages/49/58/ccbba82cfa9254b74ebbd65ce83038bafb564b33ac765cbdc950d94f0719/tvdatafeed-2.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}