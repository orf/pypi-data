{
    "0.0.1": {
        "info": {
            "author": "Ant Gib",
            "author_email": "ant.gib@protonmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/antscloud/fretboardgtr/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fretboardgtr",
            "package_url": "https://pypi.org/project/fretboardgtr/",
            "platform": "",
            "project_url": "https://pypi.org/project/fretboardgtr/",
            "project_urls": {
                "Homepage": "https://github.com/antscloud/fretboardgtr/"
            },
            "release_url": "https://pypi.org/project/fretboardgtr/0.0.1/",
            "requires_dist": [
                "svgwrite"
            ],
            "requires_python": ">=3",
            "summary": "This is a package for creating chords and fretboard visualisation of scale in svg format.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7642802,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6a154a885575ef9d18dfb077a4403de5",
                    "sha256": "374d5772399ae843c71c1729dc22906406f1eb456b7a30dde21d5b5d2b2979a0"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6a154a885575ef9d18dfb077a4403de5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 22621,
                "upload_time": "2020-03-02T00:32:54",
                "upload_time_iso_8601": "2020-03-02T00:32:54.160863Z",
                "url": "https://files.pythonhosted.org/packages/e4/51/bd38d0ac87a6987e73300609825ff320e60bc855228c236cbbaffd5de688/fretboardgtr-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "267c5f6648325138ee63d35062d315b8",
                    "sha256": "a9297f3a1de194b5ef909dd2298eb18727c57620282eb734b6ddc88f855d90e8"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "267c5f6648325138ee63d35062d315b8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 7627,
                "upload_time": "2020-03-02T00:32:56",
                "upload_time_iso_8601": "2020-03-02T00:32:56.214781Z",
                "url": "https://files.pythonhosted.org/packages/24/4a/41f86a849a9edf95d513e48ae83802ec4bb1e6778f9a1453bbbc6b2dbde7/fretboardgtr-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Ant Gib",
            "author_email": "ant.gib@protonmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/antscloud/fretboardgtr/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fretboardgtr",
            "package_url": "https://pypi.org/project/fretboardgtr/",
            "platform": "",
            "project_url": "https://pypi.org/project/fretboardgtr/",
            "project_urls": {
                "Homepage": "https://github.com/antscloud/fretboardgtr/"
            },
            "release_url": "https://pypi.org/project/fretboardgtr/0.0.2/",
            "requires_dist": [
                "cssselect2 (>=0.3.0)",
                "lxml (>=4.5.1)",
                "Pillow (>=7.1.2)",
                "reportlab (>=3.5.42)",
                "svglib (>=1.0.0)",
                "svgwrite (>=1.4)",
                "tinycss2 (>=1.0.2)",
                "webencodings (>=0.5.1)"
            ],
            "requires_python": ">=3",
            "summary": "This is a package for creating chords and fretboard visualisation of scale in svg format.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7642802,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "23eec6cdd38d5085bc9697db6e28e020",
                    "sha256": "1dcbdfcd4ec46a58c63ea7f7ec2015f69ce5624f76bf1de709cc7ab712bde0ac"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "23eec6cdd38d5085bc9697db6e28e020",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 26142,
                "upload_time": "2020-06-10T13:29:52",
                "upload_time_iso_8601": "2020-06-10T13:29:52.825221Z",
                "url": "https://files.pythonhosted.org/packages/a3/b4/ef48c385699a465fe9270f9606345085dedcefbde761948a69cecee43d28/fretboardgtr-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1a00c04ab729478ef0f4b1d7b9afa6c1",
                    "sha256": "6265a7c22b3f6ba35354566222342eae2230255a269d78d753cc6d00df0b2326"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1a00c04ab729478ef0f4b1d7b9afa6c1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 12353,
                "upload_time": "2020-06-10T13:29:54",
                "upload_time_iso_8601": "2020-06-10T13:29:54.825658Z",
                "url": "https://files.pythonhosted.org/packages/8c/5e/6b9c4205813841a8ff0aa081156b97aa2228b9355007901c7d957d24d1bf/fretboardgtr-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Ant Gib",
            "author_email": "ant.gib@protonmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/antscloud/fretboardgtr/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fretboardgtr",
            "package_url": "https://pypi.org/project/fretboardgtr/",
            "platform": "",
            "project_url": "https://pypi.org/project/fretboardgtr/",
            "project_urls": {
                "Homepage": "https://github.com/antscloud/fretboardgtr/"
            },
            "release_url": "https://pypi.org/project/fretboardgtr/0.0.3/",
            "requires_dist": [
                "cssselect2 (>=0.3.0)",
                "lxml (>=4.5.1)",
                "Pillow (>=7.1.2)",
                "reportlab (>=3.5.42)",
                "svglib (>=1.0.0)",
                "svgwrite (>=1.4)",
                "tinycss2 (>=1.0.2)",
                "webencodings (>=0.5.1)"
            ],
            "requires_python": ">=3",
            "summary": "This is a package for creating chords and fretboard visualisation of scale in svg format.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7642802,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "86f57155748a7e89fe520f4612ceef4d",
                    "sha256": "30808548a8f315e4af570ed4ce1690dd6ef447b6e2879d233b4dd96fcbeb078c"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "86f57155748a7e89fe520f4612ceef4d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 27081,
                "upload_time": "2020-06-11T10:27:02",
                "upload_time_iso_8601": "2020-06-11T10:27:02.511396Z",
                "url": "https://files.pythonhosted.org/packages/4c/cd/6d1a1378dadaea0d98c47f4bb1069bf0f060c86c443356da41a6c2df4e43/fretboardgtr-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fd0650a4008c9942bd86148a98f91080",
                    "sha256": "6dccf0e5e8241f4ef4207bc3a8b97ea83b4f3a3a08aeced5ecab2b2ed90e617d"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "fd0650a4008c9942bd86148a98f91080",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 14015,
                "upload_time": "2020-06-11T10:27:05",
                "upload_time_iso_8601": "2020-06-11T10:27:05.718781Z",
                "url": "https://files.pythonhosted.org/packages/8f/d7/d823973c722736076c6260666e5553f6d371f21c8f13b228fc3e19fc92a4/fretboardgtr-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Ant Gib",
            "author_email": "ant.gib@protonmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# fretboardgtr\nThis is a python package to draw fretboard (scales) and guitar chord diagram in svg format based on notes of scales or in finger positions. \n\n## How to install \n    pip install fretboardgtr\n\n# ScaleGtr\n\n## How to import the class \n\n    from fretboardgtr import ScaleGtr\n\n## Example of use \n\n    F=ScaleGtr(scale=[\"G\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F#\"],root=\"G\")\n    F.customtuning(['E','A','D','G','B','E'])\n    F.draw()\n    F.save()\n\n:warning: The default name of the svg is default.svg. Be careful to not have a file with this name already existing.\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/scale_degree_name.svg\" width=70%  height=auto />\n</p>\n\nThe number in the image represents the degree of the scale, 1 is the root so it's G, 2 is the major second so A and so on. \n\nIf you want to show the note name instead :\n\n    F=ScaleGtr(scale=[\"G\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F#\"],root=\"G\")\n    F.customtuning(['E','A','D','G','B','E'])\n    F.theme(show_note_name=True)\n    F.draw()\n    F.save()\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/scale_note_name.svg\" width=70%  height=auto />\n</p>\n\n## Name of the svg \n    F.pathname('Test.svg')\n    F.pathname('Test\\Test.svg')\n\n\nFor the second example you have to create a folder with the name Test before. (Creation of the folder is not yet implemented)\n\n## Create the object \n\n    F=ScaleGtr(scale=[\"G\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F#\"],root=\"G\")\nIf no root precised, C by default. \nIf no scale precised, CEG (C major chord) precised.\n\n## Custom tuning\n    F.customtuning(['F','A','D','G','B','E'])\n    F.customtuning(['D','A','D','G','A','D'])\nYou can specify an array with all the note in your tunings ( DADGAD, Drop D and so on). The programm automatically calculate positions of the notes. \n\n## Custom theme \n\n    F.theme(show_note_name=True,color_scale=False)\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/scale_no_color.svg\" width=70%  height=auto />\n</p>\n\nYou can highly customize the fretboard with all the following variables :  \n                wf = 50 (width of fret)  \n                hf = 70 (height of fret)  \n                R = 20  (radius of circle )  \n                background_color = 'rgb(255,255,255)'  \n                fretcolor = 'rgb(150,150,150)'  \n                strings_color = 'rgb(0,0,0)'  \n                nut_color = 'rgb(0,0,0)'  \n                fretsize = 3  \n                string_same_size = False (If False first string bigger than the last)  \n                string_size = 3  \n                dot_color = 'rgb(200,200,200)'  \n                dot_color_stroke = 'rgb(0,0,0)' (small dots on the neck)  \n                dot_width_stroke = 2 (small dots on the neck)  \n                dot_radius = 7 (small dots on the neck)  \n                fontsize_bottom_tuning = 15 (fontsize of the tuning)  \n                fontsize_text = 20 (Fontsize of text in circle)  \n                open_circle_color = 'rgb(255,255,255)' (for open string)  \n                open_circle_stroke_color = 'rgb(0,0,0)' (for open string)  \n                open_circle_stroke_width = 3 (for open string)  \n                open_text_color = 'rgb(0,0,0)' (for open string)  \n                cross_color = 'rgb(0,0,0)' (Cross when doesn't play string )  \n                fontsize_cross = 20 (Cross when doesn't play string )  \n                fretted_circle_color = 'rgb(0,0,0)' (for fretted string)  \n                fretted_circle_stroke_color = 'rgb(0,0,0)' (for fretted string)  \n                fretted_circle_stroke_width = 3 (for fretted string)  \n                fretted_text_color = 'rgb(255,255,255)' (for fretted string)  \n                nut_height = 7  \n                show_nut = True  \n                first_fret = 0  \n                last_fret = 12  \n                show_tun = True  \n                show_ft = True  \n                color_scale = True (for the Scale class)  \n                open_color_scale=False (for the Scale class)\n                show_note_name = False (if show_not_name==True, show_degree_name is not considered )  \n                show_degree_name = True  \n                color_chord=True (for the ChordGtr class)  \n                open_color_chord=True (for the ChordGtr class)  \n\n\n  You can return to the default parameter by pass this argument : default_theme=True and execute. You can also recreate the object. \n\n  ## Custom color\n\n    F.set_color(root='yellow')\n    F.set_color(minorsecond='rgb(231, 0, 0)')\n\nThe available variables are the following : \nroot, minorsecond, majorsecond, minorthird, majorthird, perfectfourth, diminishedfifth, perfectfifth, minorsixth, majorsixth, minorseventh, majorseventh\n\nYou can pass a classic color string ('black','yellow' ..) or a rgb string ('rgb(231, 0, 0)' for example).\n\nYou can return to the default parameter by pass this argument : default_theme=True\n\n## draw\n\n    F.draw()\nDraw and fill the fretboard.\n\nYou can add an optionnal parameter to the draw method `F.draw(fingering=[1,2,3,4,5,6])` which draw the fingering like a guitar chord. All the theme parameters are not yet implemented. \n\n## Custom format \n\nYou can precise the format in which you want to save the file. The followings format are available : SVG, PNG BMP, PPM , JPG , JPEG, GIF, PDF. \n\n    F.save(extension='pdf')\n    F.save(extension='PNG')\n\n## ScaleFromName\n\nYou can also just draw a scale diagramm with the root and the name of the scale. The following modes are available : Ionian, Dorian, Phrygian, Lydian, Mixolydian, Aeolian, Locrian, Melodicminor, Dorianb9, Augmentedlydian, Lydianb7, Mixolydianb13, Locrianbec9, Altered, Harmonicminor, Locrianbec13, Ioniansharp5, Doriansharp11, Mixolydianb9b13, Lydianbec9, Superlocrianbb7, Wholetone, Majorpentatonic, Minorpentatonic, Majorblue, Minorblues, Halftonewholetone, Wholetonehalftone, Dominantbebop, Majorbebop.\n\n    from fretboardgtr import ScaleGtr, ScaleFromName\n\n    F=ScaleGtr(ScaleFromName(root='F#',mode='Ionian'))\n    F.customtuning(['E','A','D','G','B','E'])\n    F.pathname('TestScaleName.svg')\n    F.theme(show_note_name=True)\n    F.draw()\n    F.save()\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/TestScaleName.svg\" width=70%  height=auto />\n</p>\n\n## ChordFromName\n\nYou can also just draw a scale diagramm with the root and the type of the chord. The following type are availables : M, (b5), 11, 11#5, 11b5, 13, 13#5, 13b5, 5, 6, 6b5, 7, 7#5, 7b5, 7sus2, 7sus4, 9, 9#5, 9b5, 9sus2, 9sus4, aug, aug6, dim, dim(maj11), dim(maj13), dim(maj7), dim(maj9), dim11, dim13, dim6, dim7, dim9, m, m#5, m(maj11), m(maj11)#5, m(maj13), m(maj13)#5, m(maj7), m(maj7)#5, m(maj9), m(maj9)#5, m11, m11#5, m13, m13#5, m6, m6#5, m7, m7#5, m7b5, m9, m9#5, maj11, maj11#5, maj11b5, maj13, maj13#5, maj13b5, maj7, maj7#5, maj7b5, maj9, maj9#5, maj9b5, sus2, sus2(#5), sus2(b5), sus4, sus4(#5), sus4(b5).\n\n    from fretboardgtr import ScaleGtr, ChordFromName\n\n    F=ScaleGtr(ChordFromName(root='C',quality='M'))\n    F.customtuning(['D','A','D','G','A','D'])\n    F.pathname('TestChordName.svg')\n    F.draw()\n    F.save()\n\n <p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/TestChordName.svg\" width=70%  height=auto />\n</p>\n\n## Enharmonic\n\nYou can tell that you want enharmonic notes, for example in the D# mode there is 3 flat notes, the setenharmonic function is call and turns the scale into the more appropriate enharmonic scale\n\n    F=ScaleGtr(scale=['D#','F','G','G#','A#','C','D'] root='D#',enharmonic=True)\n    F.customtuning(['D','A','D','G','B','E'])\n    F.pathname('TestScaleNameEnhar.svg')\n    F.theme(show_note_name=True)\n    F.draw()\n    F.save()\n\n  <p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/TestScaleNameEnhar.svg\" width=70%  height=auto />\n</p>\n\n\n# ChordGtr\n\n## Example of use\n\n\n    F=ChordGtr(fingering=[0,3,2,0,1,0],root=\"C\")\n    F.customtuning(['F','A','D','G','B','E'])\n    F.draw()\n    F.save()\n\n:warning: The default name of the svg is default.svg. Be careful to not have a file with this name already existing.\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/chord_degree_name.svg\" width=30%  height=auto />\n</p>\n\nThe use of root is for the color of notes. By default it is set to 'C'. But if no color it has no influence. \n\nThe ChordGtr class has the same set_color(), theme(), save(), draw() methods as ScaleGtr.\n\n## Lefthand Support \n\n    F=ChordGtr(fingering=[3,3,2,0,1,0],root=\"C\",lefthand=True)\n    F.customtuning(['F','A','D','G','B','E'])\n    F.pathname('lefthandchord.svg')\n    F.draw()\n    F.save()\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/lefthandchord.svg\" width=30%  height=auto />\n</p>\n\n## background fill example\n\n\n    F=ChordGtr(fingering=[0,3,2,0,1,0],root=\"C\")\n    F.customtuning(['F','A','D','G','B','E'])\n    F.pathname('Test2.svg')\n    F.theme(show_note_name=True,background_color='rgb(70,70,70)')\n    F.draw()\n    F.save()\n\n<p align=\"center\">\n  <img src=\"https://github.com/antscloud/fretboardgtr/blob/master/img/chord_name_background.svg\" width=30%  height=auto />\n</p>\n\n\n## Todo \n- ~~enharmonics~~\n- ~~list of scales ( Major, Minor, Dorian ..)~~\n- ~~baseline-dominant problem~~\n- ~~save format~~\n-- ~~lefthand~~\n- fingering on scale like this fingering = [[5,8],[5,7],[5,7],[5,7],[5,8],[5,8]] to draw pentatonic for example.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/antscloud/fretboardgtr/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fretboardgtr",
            "package_url": "https://pypi.org/project/fretboardgtr/",
            "platform": "",
            "project_url": "https://pypi.org/project/fretboardgtr/",
            "project_urls": {
                "Homepage": "https://github.com/antscloud/fretboardgtr/"
            },
            "release_url": "https://pypi.org/project/fretboardgtr/0.0.4/",
            "requires_dist": [
                "cssselect2 (>=0.3.0)",
                "lxml (>=4.5.1)",
                "Pillow (>=7.1.2)",
                "reportlab (>=3.5.42)",
                "svglib (>=1.0.0)",
                "svgwrite (>=1.4)",
                "tinycss2 (>=1.0.2)",
                "webencodings (>=0.5.1)"
            ],
            "requires_python": ">=3",
            "summary": "This is a package for creating chords and fretboard visualisation of scale in svg format.",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7642802,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7026aa7b2f745a8db4f50f2661f10cb6",
                    "sha256": "90ad6a42aafebb9c8adc36ddd101c6d845e8a325bf794cee26e91f49a91f2cbc"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7026aa7b2f745a8db4f50f2661f10cb6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 32987,
                "upload_time": "2020-07-06T21:39:24",
                "upload_time_iso_8601": "2020-07-06T21:39:24.111090Z",
                "url": "https://files.pythonhosted.org/packages/7b/43/a4887ac5b5f3c3988b800de9657c7c4a28fa85ab5abe966593b4b6cb9dec/fretboardgtr-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "efc5990e9ad3e8d36a824f1ded854e2a",
                    "sha256": "ff924641ba732a61f15d6314536215c6ca02a09b75c868fb651d700364aaa657"
                },
                "downloads": -1,
                "filename": "fretboardgtr-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "efc5990e9ad3e8d36a824f1ded854e2a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 18823,
                "upload_time": "2020-07-06T21:39:25",
                "upload_time_iso_8601": "2020-07-06T21:39:25.821746Z",
                "url": "https://files.pythonhosted.org/packages/49/85/2c9c83e8f758a126e6aec697dc52d82152268ec0723e177bc3de991a0666/fretboardgtr-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}