{
    "0.1.0": {
        "info": {
            "author": "Frank Odom",
            "author_email": "fodom@plainsight.ai",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/fkodom/simple-cocotools",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "simple-cocotools",
            "package_url": "https://pypi.org/project/simple-cocotools/",
            "platform": null,
            "project_url": "https://pypi.org/project/simple-cocotools/",
            "project_urls": {
                "Homepage": "https://github.com/fkodom/simple-cocotools"
            },
            "release_url": "https://pypi.org/project/simple-cocotools/0.1.0/",
            "requires_dist": [
                "numpy",
                "scipy",
                "black ; extra == 'all'",
                "flake8 ; extra == 'all'",
                "isort ; extra == 'all'",
                "mypy ; extra == 'all'",
                "pycocotools ; extra == 'all'",
                "torch (>=1.8) ; extra == 'all'",
                "torchvision ; extra == 'all'",
                "tqdm ; extra == 'all'",
                "wget (>=3.2) ; extra == 'all'",
                "pytest ; extra == 'all'",
                "pytest-cov ; extra == 'all'",
                "pre-commit ; extra == 'all'",
                "pre-commit ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "pycocotools ; extra == 'dev'",
                "torch (>=1.8) ; extra == 'dev'",
                "torchvision ; extra == 'dev'",
                "tqdm ; extra == 'dev'",
                "wget (>=3.2) ; extra == 'dev'",
                "pytest ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'test'",
                "flake8 ; extra == 'test'",
                "isort ; extra == 'test'",
                "mypy ; extra == 'test'",
                "pycocotools ; extra == 'test'",
                "torch (>=1.8) ; extra == 'test'",
                "torchvision ; extra == 'test'",
                "tqdm ; extra == 'test'",
                "wget (>=3.2) ; extra == 'test'",
                "pytest ; extra == 'test'",
                "pytest-cov ; extra == 'test'"
            ],
            "requires_python": ">=3.7",
            "summary": "project_description",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15554350,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "812ef3d01c1e12570981dcec97ed13bd",
                    "sha256": "1c1d472e3e3542ab95619ae1d404b7916fdf7b305722d3a0ac500f094f288a09"
                },
                "downloads": -1,
                "filename": "simple_cocotools-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "812ef3d01c1e12570981dcec97ed13bd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 9825,
                "upload_time": "2022-10-27T15:01:37",
                "upload_time_iso_8601": "2022-10-27T15:01:37.866306Z",
                "url": "https://files.pythonhosted.org/packages/60/a8/ebda301d77f468956ec95acfa5510779e53c18b50728f6f79492f16e2f70/simple_cocotools-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f93673733f7ec6408b1f82badd32709d",
                    "sha256": "73e39efffba54090fc6e80e9ff9cff6a033991e5a16b4f006ab54b71176a7065"
                },
                "downloads": -1,
                "filename": "simple-cocotools-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f93673733f7ec6408b1f82badd32709d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 10601,
                "upload_time": "2022-10-27T15:01:39",
                "upload_time_iso_8601": "2022-10-27T15:01:39.087540Z",
                "url": "https://files.pythonhosted.org/packages/40/41/68136b15efa6a57d53e7f67911d185ef5fc85b9fad295ed3d9a79b1665b6/simple-cocotools-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0rc1": {
        "info": {
            "author": "Frank Odom",
            "author_email": "fodom@plainsight.ai",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# simple-cocotools\n\n[EXPERIMENTAL]\n\nA simple, modern alternative to `pycocotools`.\n\n\n## About\n\nWhy not just use [Pycocotools](https://github.com/cocodataset/cocoapi/tree/master/PythonAPI/pycocotools)?\n\n* Code is more readable and hackable.\n* Metrics are more transparent and understandable.\n* Evaluation is fast.\n* Only dependencies are `numpy` and `scipy`. No `cython` extensions. \n* Code is more modern (type annotations, linting, etc).\n\n\n## Install\n\n**TODO:** Publish as a PyPI package and update instructions here.\n\n### From Repo\n```bash\npip install \"simple-cocotools @ git+ssh://git@github.com/fkodom/simple-cocotools.git\"\n```\n\n### For Contributors\n```bash\n# Install all dev dependencies (tests etc.)\npip install \"simple-cocotools[all] @ git+ssh://git@github.com/fkodom/simple-cocotools.git\"\n\n# Setup pre-commit hooks\npre-commit install\n```\n\n\n## Usage\n\nExpects target annotations to have the same format as model predictions. (The format used by all `torchvision` detection models.)  You probably already have code to convert annotations into this format, since it's required to train most detection models.\n\nA minimal example:\n\n```python\nfrom torchvision.detection.models import maskrcnn_resnet50_fpn\nfrom simple_cocotools import CocoEvaluator\n\nevaluator = CocoEvaluator()\nmodel = maskrcnn_resnet50_fpn(pretrained=True).eval()\n\nfor images, targets in data_loader:\n    predictions = model(images)\n    evaluator.update(predictions, targets)\n\nmetrics = evaluator.summarize()\n\n```\n\n`metrics` will be a dictionary with format:\n```json\n{\n    \"box\": {\n        \"mAP\": 0.40,\n        \"mAR\": 0.41,\n        \"class_AP\": {\n            \"cat\": 0.39,\n            \"dog\": 0.42,\n            ...\n        },\n        \"class_AR\": {\n            # Same as 'class_AP' above.\n        }\n    }\n    \"mask\": {\n        # Same as 'box' above.\n    }\n}\n```\n\nFor a more complete example, see [`scripts/mask_rcnn_example.py`](./scripts/mask_rcnn_example.py).\n\n\n## Benchmarks\n\nI benchmarked against several `torchvision` detection models, which have [mAP scores reported on the PyTorch website](https://pytorch.org/vision/stable/models.html#object-detection-instance-segmentation-and-person-keypoint-detection).\n\nUsing a default score threshold of 0.5:\n\nModel        | Backbone          | box mAP<br>(official) | box mAP | box mAR | mask mAP<br>(official) | mask mAP | mask mAR \n-------------|-------------------|-----------------------|---------|---------|------------------------|----------|----------\nMask R-CNN   | ResNet50          | 37.9                  | 36.9    | 43.2    | 34.6                   | 34.1     | 40.0\nFaster R-CNN | ResNet50          | 37.0                  | 36.3    | 42.0    | -                      | -        | -\nFaster R-CNN | MobileNetV3-Large | 32.8                  | 39.9    | 35.0    | -                      | -        | -\n\nNotice that the mAP for `MobileNetV3-Large` is artificially high, since it has a much lower mAR at that score threshold.  After tuning the score threshold, so that mAP and mAR are more balanced:  \n\nModel        | Backbone          | Threshold | box mAP | box mAR | mask mAP | mask mAR \n-------------|-------------------|-----------|---------|---------|----------|----------\nMask R-CNN   | ResNet50          | 0.6       | 41.1    | 41.3    | 38.2     | 38.5\nFaster R-CNN | ResNet50          | 0.6       | 40.8    | 40.4    | -        | -\nFaster R-CNN | MobileNetV3-Large | 0.425     | 36.2    | 36.2    | -        | -\n\nThese scores are more reflective of model performance, in my opinion.  Mask R-CNN slightly outperforms Faster R-CNN, and there is a noticeable (but not horrible) gap between ResNet50 and MobileNetV3 backbones.  PyTorch docs don't mention what score thresholds were used for each model benchmark. \u00af\\\\_(\u30c4)_/\u00af\n\nIgnoring the time spent getting predictions from the model, evaluation is very fast.\n* **Bbox:** ~400 samples/second\n* **Bbox + mask:** ~100 samples/second\n* Using a Google Cloud `n1-standard-4` VM (4 vCPUs, 16 GB RAM).\n\n**Note:** Speeds are dependent on the number of detections per image, and therefore dependent on the model and score threshold.\n\n\n## How It Works\n\n**TODO:** Blog post on how `simple-cocotools` works.\n\n1. Match the predictions/labels together, maximizing the IoU between pairs with the same object class. SciPy's `linear_sum_assignment` method does most of the heavy lifting here.\n2. For each IoU threshold, determine the number of \"correct\" predictions from the assignments above.  Pairs with IoU < threshold are incorrect. \n3. For each image, count the number of total predictions, correct predictions, and ground truth labels for each object class and IoU threshold.  \n3. Compute AP/AR for each class from the prediction counts above.  Then compute mAP and mAR by averaging over all object classes.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/fkodom/simple-cocotools",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "simple-cocotools",
            "package_url": "https://pypi.org/project/simple-cocotools/",
            "platform": null,
            "project_url": "https://pypi.org/project/simple-cocotools/",
            "project_urls": {
                "Homepage": "https://github.com/fkodom/simple-cocotools"
            },
            "release_url": "https://pypi.org/project/simple-cocotools/0.1.0rc1/",
            "requires_dist": [
                "numpy",
                "scipy",
                "black ; extra == 'all'",
                "flake8 ; extra == 'all'",
                "isort ; extra == 'all'",
                "mypy ; extra == 'all'",
                "pycocotools ; extra == 'all'",
                "torch (>=1.8) ; extra == 'all'",
                "torchvision ; extra == 'all'",
                "tqdm ; extra == 'all'",
                "wget (>=3.2) ; extra == 'all'",
                "pytest ; extra == 'all'",
                "pytest-cov ; extra == 'all'",
                "pre-commit ; extra == 'all'",
                "pre-commit ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "pycocotools ; extra == 'dev'",
                "torch (>=1.8) ; extra == 'dev'",
                "torchvision ; extra == 'dev'",
                "tqdm ; extra == 'dev'",
                "wget (>=3.2) ; extra == 'dev'",
                "pytest ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "black ; extra == 'test'",
                "flake8 ; extra == 'test'",
                "isort ; extra == 'test'",
                "mypy ; extra == 'test'",
                "pycocotools ; extra == 'test'",
                "torch (>=1.8) ; extra == 'test'",
                "torchvision ; extra == 'test'",
                "tqdm ; extra == 'test'",
                "wget (>=3.2) ; extra == 'test'",
                "pytest ; extra == 'test'",
                "pytest-cov ; extra == 'test'"
            ],
            "requires_python": ">=3.7",
            "summary": "project_description",
            "version": "0.1.0rc1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15554350,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "29ff111400b8ec03442605563670886e",
                    "sha256": "1256614561f505dcecf7bb03cec4988608888b9cab94de121f073fd613665e33"
                },
                "downloads": -1,
                "filename": "simple_cocotools-0.1.0rc1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "29ff111400b8ec03442605563670886e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 9823,
                "upload_time": "2022-10-27T14:49:37",
                "upload_time_iso_8601": "2022-10-27T14:49:37.611916Z",
                "url": "https://files.pythonhosted.org/packages/9b/23/498a0f8209089822d91189cc5fcba92e7b3b46be3cb22450913d47523d0c/simple_cocotools-0.1.0rc1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0f312510460a0370c70aa91d7b84374b",
                    "sha256": "76077d29dd2646328795c2a7d5d472e207acc5e5a629f28099b78ecf2f624b3e"
                },
                "downloads": -1,
                "filename": "simple-cocotools-0.1.0rc1.tar.gz",
                "has_sig": false,
                "md5_digest": "0f312510460a0370c70aa91d7b84374b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 10531,
                "upload_time": "2022-10-27T14:49:38",
                "upload_time_iso_8601": "2022-10-27T14:49:38.891526Z",
                "url": "https://files.pythonhosted.org/packages/53/d1/5a491a248ce86e151f6667a2d6adef652a69e8d6c347196a2ef60841f25e/simple-cocotools-0.1.0rc1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}