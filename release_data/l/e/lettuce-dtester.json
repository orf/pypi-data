{
    "0.2.23": {
        "info": {
            "author": "Gabriel Falcao",
            "author_email": "gabriel@nacaolivre.org",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://lettuce.it",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lettuce-Dtester",
            "package_url": "https://pypi.org/project/lettuce-Dtester/",
            "platform": null,
            "project_url": "https://pypi.org/project/lettuce-Dtester/",
            "project_urls": {
                "Homepage": "http://lettuce.it"
            },
            "release_url": "https://pypi.org/project/lettuce-Dtester/0.2.23/",
            "requires_dist": [
                "sure",
                "fuzzywuzzy",
                "python-subunit",
                "colorama"
            ],
            "requires_python": "",
            "summary": "Behaviour Driven Development for python",
            "version": "0.2.23",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13928680,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "faee63dac2a17acf1dde0bfaa834ca34",
                    "sha256": "1e34a2221ba1d20871df885a27ac412c00bbf2275e565f36a25d91c2b12ec07d"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.23-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "faee63dac2a17acf1dde0bfaa834ca34",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 70471,
                "upload_time": "2022-04-08T03:08:33",
                "upload_time_iso_8601": "2022-04-08T03:08:33.351970Z",
                "url": "https://files.pythonhosted.org/packages/1e/35/385a771474387d06f6d5c840a2cf6879a8e8232bd221660e9ddbab12ae53/lettuce_Dtester-0.2.23-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b6e9edd1bf7f398cad1819caeabc1bee",
                    "sha256": "238d689b2ac46e91504ac1908e6fca36d7029ba3678c530febd0d83ff82fd4e0"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.23.tar.gz",
                "has_sig": false,
                "md5_digest": "b6e9edd1bf7f398cad1819caeabc1bee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 49589,
                "upload_time": "2022-04-08T03:08:35",
                "upload_time_iso_8601": "2022-04-08T03:08:35.102646Z",
                "url": "https://files.pythonhosted.org/packages/72/3d/19b2399cd25dfdba3538cd1da36f1fe1f19ceb3d971299c068cf811536b7/lettuce_Dtester-0.2.23.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.29": {
        "info": {
            "author": "Gabriel Falcao",
            "author_email": "gabriel@nacaolivre.org",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://lettuce.it",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lettuce-Dtester",
            "package_url": "https://pypi.org/project/lettuce-Dtester/",
            "platform": null,
            "project_url": "https://pypi.org/project/lettuce-Dtester/",
            "project_urls": {
                "Homepage": "http://lettuce.it"
            },
            "release_url": "https://pypi.org/project/lettuce-Dtester/0.2.29/",
            "requires_dist": [
                "sure",
                "fuzzywuzzy",
                "python-subunit",
                "colorama"
            ],
            "requires_python": "",
            "summary": "Behaviour Driven Development for python",
            "version": "0.2.29",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13928680,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6d8c45b30226c87c2f6f49c99687d522",
                    "sha256": "0f673c4169b0bce83f1e95a6aaf1045d7963483d82969b0603317d93b013ce58"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.29-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6d8c45b30226c87c2f6f49c99687d522",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 73157,
                "upload_time": "2022-04-08T09:46:40",
                "upload_time_iso_8601": "2022-04-08T09:46:40.703283Z",
                "url": "https://files.pythonhosted.org/packages/58/bb/bdfffd4e3d93c8f1b68ea30b398ea6b60832c38574b31650b864db0cb56c/lettuce_Dtester-0.2.29-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5626ad3b2fd2454df1cfd355fbcf4e45",
                    "sha256": "c1d76836c5d167db2b6d8afcb9a864528eb21a7483e94d43d5dbab42b33fb09b"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.29.tar.gz",
                "has_sig": false,
                "md5_digest": "5626ad3b2fd2454df1cfd355fbcf4e45",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 53407,
                "upload_time": "2022-04-08T09:46:43",
                "upload_time_iso_8601": "2022-04-08T09:46:43.359268Z",
                "url": "https://files.pythonhosted.org/packages/fa/61/8d06b74e600d9eb511b3c1b02efe8020700fb314014b377eaa7a46ea22d5/lettuce_Dtester-0.2.29.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.30": {
        "info": {
            "author": "Gabriel Falcao",
            "author_email": "gabriel@nacaolivre.org",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://lettuce.it",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lettuce-Dtester",
            "package_url": "https://pypi.org/project/lettuce-Dtester/",
            "platform": null,
            "project_url": "https://pypi.org/project/lettuce-Dtester/",
            "project_urls": {
                "Homepage": "http://lettuce.it"
            },
            "release_url": "https://pypi.org/project/lettuce-Dtester/0.2.30/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Behaviour Driven Development for python",
            "version": "0.2.30",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13928680,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "30a2a9547abd866f91bb50118ee96869",
                    "sha256": "f4aeb7034224bee49a754fa86b98b62ba477ff58ef9c3e7da8641862eaabefcd"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.30.tar.gz",
                "has_sig": false,
                "md5_digest": "30a2a9547abd866f91bb50118ee96869",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 57005,
                "upload_time": "2022-05-16T02:40:00",
                "upload_time_iso_8601": "2022-05-16T02:40:00.715667Z",
                "url": "https://files.pythonhosted.org/packages/bc/48/49d39b13bb3a25f25a07df8d875285170db1dd631cb2544b2eb01a7b7ecb/lettuce_Dtester-0.2.30.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.31": {
        "info": {
            "author": "Gabriel Falcao",
            "author_email": "gabriel@nacaolivre.org",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# \u73af\u5883\u8981\u6c42\n    python3.7 \u53ca\u4ee5\u4e0a pip install lettuce-Dtester\n# \u65b0\u589e\u6307\u4ee4\n    --lf, --ff, --cc, --tn II --last-failed, --failed-first, --clear-cache, --task-name\n\n    --lf: \u4ec5\u6267\u884c\u4e0a\u6b21\u672a\u901a\u8fc7\u7684\u6d4b\u8bd5\u6848\u4f8b\n\n    --ff: \u4f18\u5148\u6267\u884c\u672a\u901a\u8fc7\u7684\u6d4b\u8bd5\u6848\u4f8b\uff0c\u901a\u8fc7\u7684\u6d4b\u8bd5\u6848\u4f8b\u6ede\u540e\u6267\u884c\n\n    --cc: \u6e05\u9664case_cache\n\n    --tn: \u5728\u4e0d\u4e0e\u5176\u4ed6\u4e09\u4e2a\u547d\u4ee4\u4e00\u8d77\u4f7f\u7528\u65f6\u6307\u7684\u662f\u6307\u5b9a\u4efb\u52a1\u76ee\u5f55\u5373 festures\u6587\u4ef6\u5939\u4e0b\u7684\u76ee\u5f55\n\n    --lf --tn task_name: \u4ec5\u6267\u884c\u6307\u5b9a\u4efb\u52a1\u7684\u672a\u901a\u8fc7\u6848\u4f8b\n\n    --ff --tn task_name: \u4f18\u5148\u6267\u884c\u6267\u884c\u6307\u5b9a\u4efb\u52a1\u7684\u672a\u901a\u8fc7\u6848\u4f8b\n\n    --cc --tn task_name: \u5220\u9664\u6307\u5b9a\u4efb\u52a1\u6240\u6709\u7f13\u5b58\u6587\u4ef6\uff0c\u518d\u6b21\u6267\u884c\n\n    --cc --lf --tn task_name: \u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u4f1a\u4f18\u5148\u5220\u9664\u7f13\u5b58\u6587\u4ef6\uff0c\u5220\u9664\u540e\u65e0\u6cd5\u652f\u6301--lf\u6307\u4ee4\n\n    --cc --ff --tn task_name: \u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u4f1a\u4f18\u5148\u5220\u9664\u7f13\u5b58\u6587\u4ef6\uff0c\u5220\u9664\u540e\u65e0\u6cd5\u652f\u6301--ff\u6307\u4ee4\n\n# \u76ee\u5f55\u4fe1\u606f\n    \u5728\u6839\u76ee\u5f55\u4e0b\u751f\u6210case_cache\u76ee\u5f55\n    \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a\uff08\u4ee5\u672c\u6b21\u6267\u884c\u6848\u4f8b\u6587\u4ef6\u5939\u4e3afeatures/fee_test\u4e3e\u4f8b\uff09\n    |---case_cache\n        |---{task_name}_cache\n            |---{task_name}(\u4fdd\u5b58\u672c\u6b21\u6267\u884c\u7684py\u6587\u4ef6\uff0c\u7528\u4e8e\u540e\u7eed\u7684--ff, --lf\u6267\u884c)\n                |---...py(\u6307\u4ee3\u4fdd\u5b58\u7684py\u6587\u4ef6)\n            |---run_res(\u4fdd\u5b58\u6267\u884c\u7ed3\u679c)\n                |---error_case.feature\uff08\u4fdd\u5b58\u51fa\u9519\u6216\u8df3\u8fc7\u7684\u6848\u4f8b\u539f\u6587\uff09\n                |---failed_first_case.feature(\u4fdd\u5b58\u5168\u90e8\u6848\u4f8b\uff0c\u4f46\u662f\u51fa\u9519\u7684\u6d4b\u8bd5\u6848\u4f8b\u5728\u524d\u9762)\n                |---res.txt(\u4fdd\u5b58\u9519\u8bef\u6216\u8df3\u8fc7\u7684\u6d4b\u8bd5\u6848\u4f8b\u539f\u59cb\u4fe1\u606f\u5305\u542b\u62a5\u9519\u8be6\u60c5)\n            |---lf_res(\u4fdd\u5b58lf\u6267\u884c\u540e\u7ed3\u679c\uff0c\u4e0d\u6267\u884clf\u547d\u4ee4\u4e0d\u751f\u6210)\n                |---error_case.feature\n                |---failed_first_case.feature\n                |---res.txt\n            |---ff_res(\u4fdd\u5b58ff\u6267\u884c\u540e\u7ed3\u679c\uff0c\u4e0d\u6267\u884cff\u547d\u4ee4\u4e0d\u751f\u6210)\n                |---error_case.feature\n                |---failed_first_case.feature\n                |---res.txt\n    \n\n# \u4f7f\u7528\u65b9\u6cd5\n    \u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u5b58\u5728mian.py/run.py\u4f5c\u4e3a\u5165\u53e3:\n\n    import lettuce\n    import os\n    \n    \n    class HtmlRunner(lettuce.Runner):\n        def __init__(self, base_path, enable_html=False, html_filename=None, enable_email=False, recipients=None,\n                     smtp_host=None, smtp_port=None, credential=None, *args, **kwargs):\n            lettuce.Runner.__init__(self, base_path, *args, **kwargs)\n    \n    \n    def test_a():\n        run_path = lettuce.run_task('case_a')\n        base_path = os.path.join(os.path.dirname(os.curdir),\n                                 run_path)  # the path of .py and .feature\n        lettuce.world.task_path = base_path\n        tests_runner = HtmlRunner(base_path,\n                                  enable_html=True,\n                                  tags=(\"run\",),\n                                  enable_xunit=True,\n                                  verbosity=4)\n        tests_runner.run()\n    \n    \n    if __name__ == '__main__':\n        test_a()\n\n\n\n# \u4fee\u6539\u4fe1\u606f\n\n    \u65b0\u589e\u6587\u4ef6\uff1acacheprovider.py\n\n    \u4fee\u6539lettuce\uff1a__init__.py \u5f15\u7528\uff1a\n\n    from lettuce.cacheprovider import  build_failed_first_case, run_task\n\n    \u4fee\u6539lettuce/plugins/colored_shell_output.py \u6587\u4ef6\u83b7\u53d6\u6848\u4f8b\u4fe1\u606f\n\n\n    def wp(l):\n        if l.startswith(\"\\033[1;32m\"):\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[1;32m\")\n        if l.startswith(\"\\033[1;36m\"):\n            world.skip_flag = True\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[1;36m\")\n        if l.startswith(\"\\033[0;36m\"):\n            world.skip_flag = True\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[0;36m\")\n        if l.startswith(\"\\033[0;31m\"):\n            world.fail_flag = True\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[0;31m\")\n        if l.startswith(\"\\033[1;30m\"):\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[1;30m\")\n        if l.startswith(\"\\033[1;31m\"):\n            world.fail_flag = True\n            l = l.replace(\" |\", \"\\033[1;37m |\\033[0;31m\")   \n        return l\n    \n    \n    def wrt(what):\n        if six.PY2:\n            if isinstance(what, unicode):\n                what = what.encode('utf-8')\n        if six.PY3:\n            if isinstance(what, bytes):\n                print(what)\n                what = what.decode('utf-8')\n        world.case.append(what)\n        sys.stdout.write(what)\n\n    \u4fee\u6539registry.py\u751f\u6210\u7f13\u5b58\n    \u589e\u52a0build_case\u65b9\u6cd5\n    def case_data():\n        temp_list = list()\n        _case = world.case[:]\n        for i in _case:\n            a = i.replace(\"\\033[1;37m\", '')\n            a = a.replace(\"\\033[1;32m\", '')\n            a = a.replace(\"\\033[1;30m\", '')\n            a = a.replace(\"\\033[0m\", '')\n            a = a.replace(\"\\033[A\", '')\n            a = a.replace(\"\\033[0;36m\", '')\n            if not a.startswith(\"Feature\"):\n                if a in temp_list:\n                    ...\n                else:\n                    temp_list.append(a)\n                    yield a\n\n    def build_case(scenario):\n    \n        if world.fail_flag is True or world.skip_flag is True:\n            with open(f'{world.cache_path}/res.txt', 'a+', encoding='utf8') as f:\n                with open(f'{world.cache_path}/error_case.feature', 'a+', encoding='utf8') as c:\n                    for a in case_data():\n                        # \u6536\u96c6\u9519\u8bef\u6848\u4f8b\u8be6\u60c5\uff0c\u652f\u6301-lf\u6307\u4ee4\u6267\u884c\u4e0a\u6b21\u5931\u8d25\u7684\u6848\u4f8b\n                        if \"\\033[0;31m\" not in a and \"\\033[1;31m\" not in a:\n                            if \"#\" in a:\n                                c.write(a.split('#')[0].rstrip() + '\\n')\n                            elif \"|\" in a:\n                                c.write(a)\n                        # \u6536\u96c6\u9519\u8bef\u4fe1\u606f\uff0c\u4fdd\u5b58\u5728\u7ed3\u679c\u6587\u4ef6\n                        a = a.replace(\"\\033[0;31m\", 'error!')\n                        a = a.replace(\"\\033[1;31m\", 'error!')\n                        a = a.replace(\"\\033[1;41;33m\", '')\n                        f.write(f'{a}\\n')                        \n        else:\n            with open(f'{world.cache_path}/temp_case.feature', 'a+', encoding='utf8') as t:\n                for a in case_data():\n                    if \"#\" in a:\n                        t.write(a.split('#')[0].rstrip() + '\\n')\n                    elif \"|\" in a:\n                        t.write(a)\n        if world.fail_flag is True or world.skip_flag is True:\n            world.case_log_name = int(time.time())\n            with open(f'{world.cache_path}/res.txt', 'a+', encoding='utf8') as f:\n                f.write(f'\u65e5\u5fd7\u8be6\u60c5\u89c1\uff1a{world.case_log_name}')\n\n        world.fail_flag = False\n        world.skip_flag = False\n        world.case = []\n    \u4fee\u6539CallbackDict\u7c7b\uff0c\u5728\u6bcf\u6b21\u6267\u884c\u4e00\u6761\u6848\u4f8b\u5b8c\u6210\u540e\u589e\u52a0\u6784\u5efa\u7f13\u5b58\u51fd\u6570\n    class CallbackDict(dict):\n        def append_to(self, where, when, function):\n            if not any(_function_matches(o, function) for o in self[where][when]):\n                self[where][when].append(function)\n                if where == 'scenario' and when == 'after_each':\n                    self[where][when].append(build_case)\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://lettuce.it",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "lettuce-Dtester",
            "package_url": "https://pypi.org/project/lettuce-Dtester/",
            "platform": null,
            "project_url": "https://pypi.org/project/lettuce-Dtester/",
            "project_urls": {
                "Homepage": "http://lettuce.it"
            },
            "release_url": "https://pypi.org/project/lettuce-Dtester/0.2.31/",
            "requires_dist": [
                "python-subunit",
                "sure",
                "fuzzywuzzy",
                "colorama"
            ],
            "requires_python": "",
            "summary": "Behaviour Driven Development for python",
            "version": "0.2.31",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13928680,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fa5c7c5ebf761b6c10b2ae673bd3eef4",
                    "sha256": "76eb66fd60e2bb4aaf59333432c5e6d555133360b20b352ee7cca02487599a9a"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.31-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fa5c7c5ebf761b6c10b2ae673bd3eef4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 76333,
                "upload_time": "2022-05-25T03:43:36",
                "upload_time_iso_8601": "2022-05-25T03:43:36.136525Z",
                "url": "https://files.pythonhosted.org/packages/d2/01/a9a9b958f858955915195419c4ae8576385be360454ac632bee63d542c9e/lettuce_Dtester-0.2.31-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "58e58acdd6c6e2aa98a52b1e901efc8d",
                    "sha256": "80a9f018734b9057c64e98b7e9f35ad678482813d1e453fe5a7cd4737433f223"
                },
                "downloads": -1,
                "filename": "lettuce_Dtester-0.2.31.tar.gz",
                "has_sig": false,
                "md5_digest": "58e58acdd6c6e2aa98a52b1e901efc8d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 56758,
                "upload_time": "2022-05-25T03:43:38",
                "upload_time_iso_8601": "2022-05-25T03:43:38.035636Z",
                "url": "https://files.pythonhosted.org/packages/0f/bb/38325f5b1312474d2bf38017dbf04bd2216c1a444b095fb50abcf392ae72/lettuce_Dtester-0.2.31.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}