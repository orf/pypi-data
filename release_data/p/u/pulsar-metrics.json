{
    "0.1.0": {
        "info": {
            "author": "Adel Benlagra",
            "author_email": "abenlagra@rocketscience.one",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# pulsar-metrics\n\nAuthor: abenlagra@rocketscience.one\n\nPulsar-metrics is an open-source Python library for evaluating and monitoring data and concept drift with an extensive set of metrics. It also offers the possibility to use custom metrics defined by the user.\n\n## Getting started\n\n### Pulsar-metrics components\n\nThere are two core components in pulsar-metrics: metrics and analyzers\n\n#### Metrics\nAn API to calculate single metrics for data and concept drift. Metrics results are unified in a single data structure `MetricsResults` storing not only the metrics value, but also a couple of metadata related to the model and the data used for its calculation\n\n```\nMetricResults(metric_name=None, type='performance', model_id='model_1', model_version='1', data_id=None, feature=None, value=None, status=None, threshold=None, period_start=None, period_end=datetime.datetime(2022, 7, 1, 0, 0), eval_timestamp=datetime.datetime(2022, 9, 26, 10, 28, 27, 846122), conf_int=None)\n```\n\nThere are three types of metrics:\n\n- ***Data drift metrics*** for the calculation of ditributional changes of the features used in the model. The metrics included so far are:\n* Kullback-Leibler (KL) divergence\n* Wasserstein distance\n* T-test for location drift\n* Mann-Whitney U test\n* Levene test for dispersion drift\n* Kolmogorov-Smirnov test\n* Cramer von Mises test\n* Chi-square test for categorical features\n\nData drift metrics are implemented either in the `DriftMetric` (For the KL divergence and the Wasserstein distance) or `DriftTestMetric` classes.\n\n- ***Performance metrics*** for te calculation of the performance of classification and regression models. In particular, the following metrics are implemented:\n\n* Accuracy\n* Precision\n* Recall\n* f1-score\n* Log loss\n* AUC\n* AUCPR\n* Brier Score\n* Mean squarred error (MSE)\n* Mean absolute error (MAE)\n* Mean absolute percentage error (MAPE)\n* R-square score\n\nPerformance metrics are implemented in the `PerformanceMetric` class.\n\n- ***Custom metrics***. The user has the ability to define his own metric through the `@CustomMetric` decorator (see below for an example)\n\nAll three types of metrics inherit the `AbstractMetrics` class.\n#### Analyzers\n\nAn analyzer groups multiple metrics calculations in a single run. It allows to use which metrics to use and for which features.\n\n### Example usage\n\nTo use the library, you need a reference dataset, typically the training dataset, and an analysis dataset which we want to compare with former.\n\n\n#### Calculating a single metric\nFor a single metric, we first start by instantiating the appropriate metrics class by specifying the name of the metric (\"ttest\" in the example below)\n\n```python\nfrom pulsar_metrics.metrics.drift import DriftTestMetric\ndriftTest = DriftTestMetric(name = 'ttest', data = data_new, feature_name = feature_name)\n```\nThen we run the `.evaluate()` method to calculate the metric\n\n```python\ndriftTest.evaluate(alpha = 0.05, reference = data_ref[feature_name])\n```\n\nThe result is returned through the `.get_result()` method of te metric object\n\n```python\ndriftTest.get_result()\n```\n\n#### Using the analyzer\nWhen multiple metrics are required for different features, the analyzer allows one to calculate all the metrics at once.\n\nFirst, instantiate an analyzer object\n\n```python\nfrom pulsar_metrics.analyzers.base import Analyzer\nanalysis = Analyzer(name = 'First Analyzer', description='My first Analyzer', data = data_new)\n```\n\nThen add the metrics of interest\n\n```python\nanalysis.add_drift_metrics(metrics_list=['wasserstein', 'ttest', 'ks_2samp'], features_list=['Population', 'MedInc']);\nanalysis.add_performance_metrics(metrics_list=['accuracy'], y_name = 'clf_target');\n```\n\nThen, you can run the analyzer while optionnally specfyings options for each metrics as a dictionnary for the `options` keywords\n\n```python\nanalysis.run(data_ref = data_ref, options = {'ttest': {'alpha': 0.01, 'equal_var': False}})\n```\n\nIt then possible to get the results of the analysis as a pandas dataFrame\n\n```python\nanalysis.results_to_pandas()\n```\n\n![image](https://user-images.githubusercontent.com/105239615/206878435-b3bd2b8d-5196-45cd-9eb6-76d70e002c23.png)\n\n#### Creating a custom metric\nThe `@CustomMetric` decorator allows to transform any function to the `AbstractMetrics` class\n\n```python\nfrom pulsar_metrics.metrics.base import CustomMetric\n@CustomMetric\ndef test_custom(a, b, **kwargs):\n    return np.max(a - b)\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Rocket-Science-Development/pulsar_metrics",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pulsar-metrics",
            "package_url": "https://pypi.org/project/pulsar-metrics/",
            "platform": null,
            "project_url": "https://pypi.org/project/pulsar-metrics/",
            "project_urls": {
                "Homepage": "https://github.com/Rocket-Science-Development/pulsar_metrics"
            },
            "release_url": "https://pypi.org/project/pulsar-metrics/0.1.0/",
            "requires_dist": [
                "pandas (>=1.4.3,<2.0.0)",
                "scikit-learn (>=1.1.1,<2.0.0)",
                "pydantic (>=1.9.1,<2.0.0)",
                "DateTime (>=4.5,<5.0)",
                "scipy (>=1.7,<2.0)",
                "black (>=22.6.0,<23.0.0)"
            ],
            "requires_python": ">=3.9,<3.10",
            "summary": "Pulsar-metrics is an open-source Python library for evaluating and monitoring data and concept drift with an extensive set of metrics. It also offers the possibility to use custom metrics defined by the user.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16100930,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ed2af0f7bd0b1f1322e3bd1966193101",
                    "sha256": "edf27af1fa04561c535fdf56130cbec71562e3e82a694191d2bb3f9cd73382d4"
                },
                "downloads": -1,
                "filename": "pulsar_metrics-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ed2af0f7bd0b1f1322e3bd1966193101",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9,<3.10",
                "size": 10250,
                "upload_time": "2022-12-14T14:44:58",
                "upload_time_iso_8601": "2022-12-14T14:44:58.417590Z",
                "url": "https://files.pythonhosted.org/packages/21/e0/074939b3286c02dac1310cd03928dac41083e1a1bcc4a824d93c01f8b2c9/pulsar_metrics-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "313bd3ff3989b32652b88a4ec32e2086",
                    "sha256": "5af76d931e5bd1ccc4afd32b4faee52f035e7361554bf4e637aa0fa04b11048b"
                },
                "downloads": -1,
                "filename": "pulsar_metrics-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "313bd3ff3989b32652b88a4ec32e2086",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9,<3.10",
                "size": 9474,
                "upload_time": "2022-12-14T14:45:00",
                "upload_time_iso_8601": "2022-12-14T14:45:00.304771Z",
                "url": "https://files.pythonhosted.org/packages/9e/88/884465690b04fe9fad6d50689af178f0f8b1a4b803e24609cc5273c8cfe8/pulsar_metrics-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}