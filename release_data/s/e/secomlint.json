{
    "0.1.0": {
        "info": {
            "author": "Sofia Reis",
            "author_email": "sofiareis1994@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# SECOMlint\n\nLinter to measure compliance against [SECOM](https://tqrg.github.io/secom/) convention. SECOM is a convetion for making security commit messages more readable and structured. Check the [CONFIG.md](https://github.com/TQRG/secom/blob/main/CONFIG.md) file to know how to configure the template in your repository.\n\n<p align=\"center\">\n  <img width=\"600\" src=\"https://raw.githubusercontent.com/TQRG/secomlint/main/assets/secomlint.svg\">\n</p>\n\n## Installation\n\n```\npip install secomlint\npython -m spacy download en_core_web_lg\n```\n\n## Usage\n\n```\nsecomlint --help\n```\n```\nUsage: secomlint [OPTIONS]\n\n  Linter to check compliance against SECOM (https://tqrg.github.io/secom/).\n\nOptions:\n  --no-compliance        Show missing compliance.\n  --is-body-informative  Checks body for security information.\n  --score                Show compliance score.\n  --config TEXT          Rule configuration file path name.\n  --help                 Show this message and exit.\n```\n\n## Run tool\n\n`git log -1 --pretty=%B | secomlint` where `git log -1 --pretty=%B` gets the commit message of the local commit.\n\n* Check only the rules that are not in compliance: `git log -1 --pretty=%B | secomlint --no-compliance`\n* Calculate compliance score: `git log -1 --pretty=%B | secomlint --no-compliance --score`\n\n<p align=\"center\">\n  <img width=\"600\" src=\"https://raw.githubusercontent.com/TQRG/secomlint/main/assets/secomlint2.svg\">\n</p>\n\n\n## Configuration\n\nThe linter has a default configuration that can be overridden with a `.yml` file using the following syntax: \n\n```\nrule_name:\n    active: {true | false}\n    type: {0 - warning | 1 - error}\n    value: {string | regex}\n```\n\nAn example would be:\n\n```\nheader_starts_with_type:\n  active: true\n  type: 0\n  value: 'fix'\nmetadata_has_detection:\n  active: false\n```\nThe rule `header_starts_with_type` is active, outputs warnings and checks if header starts with type `fix`.\n\nThe rule `metadata_has_detection` was deactivated.\n\n```\ngit log -1 --pretty=%B | secomlint --config=config.yml\n```\n\n## Check if your body is informative\n\nIt is important that the body of security commit messages are somehow informative; secomlint checks your body for security-related keywords.\n\n```\ngit log -1 --pretty=%B | secomlint --is-body-informative\n```\n```\n\ud83d\udc4d Good to go! Extractor found the following security related words in the message's body:\n   - protocols\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/tqrg/secomlint",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "secomlint",
            "package_url": "https://pypi.org/project/secomlint/",
            "platform": null,
            "project_url": "https://pypi.org/project/secomlint/",
            "project_urls": {
                "Homepage": "https://github.com/tqrg/secomlint"
            },
            "release_url": "https://pypi.org/project/secomlint/0.1.0/",
            "requires_dist": [
                "spacy",
                "pyyaml"
            ],
            "requires_python": "",
            "summary": "A linter for security commit messages",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15864604,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ee8e0aa7c2558cea794c672e25caea7f",
                    "sha256": "658fd7959028054aded46bb3814d254d50c3ebb4dcf6fc1dcbc63f9547e684c3"
                },
                "downloads": -1,
                "filename": "secomlint-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ee8e0aa7c2558cea794c672e25caea7f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 27104,
                "upload_time": "2022-11-23T08:51:49",
                "upload_time_iso_8601": "2022-11-23T08:51:49.629591Z",
                "url": "https://files.pythonhosted.org/packages/e4/77/8b1305d551609a43ea8e85309da7e4df94986f95269ced93e0155eb7f56f/secomlint-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8d9b219a857f02d3ea84df6974274633",
                    "sha256": "fad8fcd2c6107cc41358f8cf8ad4e144f67d1ef126a903200ad0e687c1b78b58"
                },
                "downloads": -1,
                "filename": "secomlint-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8d9b219a857f02d3ea84df6974274633",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 25542,
                "upload_time": "2022-11-23T08:51:51",
                "upload_time_iso_8601": "2022-11-23T08:51:51.620141Z",
                "url": "https://files.pythonhosted.org/packages/79/8e/18d927006deadcf0937245594f269a387f77e31472417cd65d54d5fd6d98/secomlint-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}