{
    "2.5.1": {
        "info": {
            "author": "",
            "author_email": "Mate Soos <soos.mate@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: C++",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Topic :: Utilities"
            ],
            "description": "# pyunigen: bindings to the UniGen almost uniform sampler\n\nThis directory provides Python bindings to UniGen on the C++ level,\ni.e. when importing pycryptosat, the CryptoMiniSat solver becomes part of the\nPython process itself.\n\n## Installing\n\n```\npip install pyunigen\n```\n\n## Compiling\nIf you don't want to use the pip package, you can compile it as:\n\n```\napt-get install python-dev\ncd python\ngit clone https://github.com/msoos/cryptominisat\ngit clone https://github.com/meelgroup/arjun\ngit clone https://github.com/meelgroup/approxmc\ncd ..\npython -m build\n```\nYou will then find the files under \"dist/\".\n\n## Usage\n\nThe `pyunigen` module has one object, `Sampler` that has two functions\n`sample` and `add_clause`.\n\nThe funcion `add_clause()` takes an iterable list of literals such as\n`[1, 2]` which represents the truth `1 or 2 = True`. For example,\n`add_clause([1])` sets variable `1` to `True`.\n\nThe function `sample()` samples the system of equations that have been added\nwith `add_clause()`:\n\n```\n>>> from pyunigen import Sampler\n>>> c = Sampler()\n>>> c.add_clause([1, 5])\n>>> c.add_clause([10, 11, 12])\n>>> cells, hashes, samples = c.sample(num=2, sampling_set=range(1,5))\n>>> print(\"There are approx. \", cells*2**hashes, \" solutions over the sampling set. Samples: \", samples)\nThere are approx.  16  solutions over the sampling set. Samples:  [[1, -2, 3, -4], [1, 2, -3, -4]]\n```\n\nThe return value is a tuple of cells and hashes. Which gives how many solutions\nthere are, probabilistically approximately\n\nYou can give the following arguments to `Counter`:\n* `seed` -- sets the random seed\n* `verbosity` -- sets the verbosity of the system (default = 0)\n* `epsilon` -- Tolerance parameter, i.e. sets how approximate the returned count is. Default = 0.8\n* `delta` -- Confidence parameter, i.e. sets how probabilistically correct the returned count is. Default = 0.20\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "sat,model-counting",
            "license": "MIT License  Copyright (c) 2018 Meel Group Kuldeep Meel Mate Soos Daniel Freemont and others  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
            "maintainer": "",
            "maintainer_email": "Mate Soos <soos.mate@gmail.com>",
            "name": "pyunigen",
            "package_url": "https://pypi.org/project/pyunigen/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyunigen/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pyunigen/2.5.1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Bindings to UniGen, an approximate sampler",
            "version": "2.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15675822,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f4d05fc77e69f74b25800680d6220e84",
                    "sha256": "b78627fcdb4cfdb74a9572c28057b90a6aca0118441265c678d44bafaa3cb53b"
                },
                "downloads": -1,
                "filename": "pyunigen-2.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f4d05fc77e69f74b25800680d6220e84",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 464134,
                "upload_time": "2022-11-06T17:21:31",
                "upload_time_iso_8601": "2022-11-06T17:21:31.008792Z",
                "url": "https://files.pythonhosted.org/packages/53/70/48b2bcad24b81a36b362c655b25a46cc9a0fe4720b7a5e1e761a9bc0aa6c/pyunigen-2.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}