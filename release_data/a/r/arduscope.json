{
    "0.1": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "pyserial"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "766d82d6a0318ef3db2c21fedacf16b7",
                    "sha256": "70208c629afa04726041bf93e0e679cb1f416efe7e34c2d3242223c7111f93c6"
                },
                "downloads": -1,
                "filename": "arduscope-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "766d82d6a0318ef3db2c21fedacf16b7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9264,
                "upload_time": "2021-03-18T23:07:26",
                "upload_time_iso_8601": "2021-03-18T23:07:26.423758Z",
                "url": "https://files.pythonhosted.org/packages/a0/ab/3654d8e4054f753033609d167b302c73c00a08d949d4fa4aa1975ffd1656/arduscope-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "01432d89697237409055ae1ba13634d0",
                    "sha256": "9cbcffd80cbcda06ae038697c1a28e552c01005fff13bc7b893d4340a9641748"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "01432d89697237409055ae1ba13634d0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 12026,
                "upload_time": "2021-03-18T23:07:27",
                "upload_time_iso_8601": "2021-03-18T23:07:27.744623Z",
                "url": "https://files.pythonhosted.org/packages/2a/3a/fc3f51f69f67835f4cbf9799e11251ed2591feb38e95ab62347dbd65528f/arduscope-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.1.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "pyserial"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "85bf3dec02a89cd9737c4e2865add40f",
                    "sha256": "04adc8f5f151eaa87ea4f67540c26f2d2256ca74df142ae07526f3f6a876f5fa"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "85bf3dec02a89cd9737c4e2865add40f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 12208,
                "upload_time": "2021-03-20T05:24:20",
                "upload_time_iso_8601": "2021-03-20T05:24:20.325323Z",
                "url": "https://files.pythonhosted.org/packages/bc/97/aed6088211b5a12c91ceabd5e1847a3d2c823ae33e8cc67c947b1c25b22a/arduscope-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2d366a52c055d971550d54d99a2b42b4",
                    "sha256": "156437feef5f4b85ba998d7e9388e767110e2ff69a6257d72a182bfc9e9b4e55"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2d366a52c055d971550d54d99a2b42b4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 15485,
                "upload_time": "2021-03-20T05:24:22",
                "upload_time_iso_8601": "2021-03-20T05:24:22.257816Z",
                "url": "https://files.pythonhosted.org/packages/7c/06/ad91b072be28edc409a1b5af9dff9dbf934c0f81ba51c65fd0de30dcffe7/arduscope-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.1.2/",
            "requires_dist": [
                "numpy",
                "matplotlib (==3.4.2)",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e97197273493dc40af67aad0ecf477ea",
                    "sha256": "4fab45ccbb34958608e3aa2af11caccf06204337b44e0e9e5b062e3d2ca1c121"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e97197273493dc40af67aad0ecf477ea",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 12934,
                "upload_time": "2021-05-24T20:56:28",
                "upload_time_iso_8601": "2021-05-24T20:56:28.250781Z",
                "url": "https://files.pythonhosted.org/packages/ed/bc/8f19f7626139e642d8f60312d7cfb54f5ad0969be1b1e7b774295a2aab13/arduscope-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d87a13278ae662bd8a44aecad5d1574b",
                    "sha256": "136ef94c7602aaa99c2df9ac8ff28f741cba2729f52be685bb5d8fe76c837289"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "d87a13278ae662bd8a44aecad5d1574b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 63183,
                "upload_time": "2021-05-24T20:56:30",
                "upload_time_iso_8601": "2021-05-24T20:56:30.230779Z",
                "url": "https://files.pythonhosted.org/packages/9e/23/8a709ba3b3c42b0e743114ddc16c9b491b9436d36ba070cc630e1f54a884/arduscope-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.1.3/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ad856fc86d6787f29fa6ad5c0e96242",
                    "sha256": "e11b3cb0aa9e3d5fb0e49dff5cc9ecdaa4459995a40f3d07718136423f2ebd06"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1ad856fc86d6787f29fa6ad5c0e96242",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 12939,
                "upload_time": "2021-05-24T21:43:23",
                "upload_time_iso_8601": "2021-05-24T21:43:23.054783Z",
                "url": "https://files.pythonhosted.org/packages/f2/eb/9dc4d9a658a1a7a55894e89e9c1d6814173303c37544330917a634596a6b/arduscope-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5537d7c50b72d029dc2855264d844e68",
                    "sha256": "ff46e3aa374858da3189ff9bd38188b8b0e3f24e93f8ffe321338d797c35f36f"
                },
                "downloads": -1,
                "filename": "arduscope-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "5537d7c50b72d029dc2855264d844e68",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 63180,
                "upload_time": "2021-05-24T21:43:25",
                "upload_time_iso_8601": "2021-05-24T21:43:25.758786Z",
                "url": "https://files.pythonhosted.org/packages/72/bf/17e3055e7f9d3aa67c1bfff476ab021b634516754a9ee6188552d454e0bd/arduscope-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.2.0/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2446e821f463849f7a61e51d0286de60",
                    "sha256": "35c412913b7f9b23fb5bad865427ccb4a74dd5e4b7aa33af2e32afa0864855d6"
                },
                "downloads": -1,
                "filename": "arduscope-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2446e821f463849f7a61e51d0286de60",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 13068,
                "upload_time": "2021-05-27T15:45:36",
                "upload_time_iso_8601": "2021-05-27T15:45:36.374493Z",
                "url": "https://files.pythonhosted.org/packages/0a/62/d6be6982a12ac36fd7f8b64dfbb77ea225a9947eb94d0819f837bc7e6c02/arduscope-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e3ddec71cfbfb4ba2920032f35494bf",
                    "sha256": "0bebb0c0f1c125e7a4ca0562dc3b3de9fcb54e03f5ec1de4f1a86307f7c7366f"
                },
                "downloads": -1,
                "filename": "arduscope-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9e3ddec71cfbfb4ba2920032f35494bf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 63299,
                "upload_time": "2021-05-27T15:45:38",
                "upload_time_iso_8601": "2021-05-27T15:45:38.127415Z",
                "url": "https://files.pythonhosted.org/packages/5b/82/7a85343b27d2ce4bc1ef6856228f313d12ddeb856f560be148c876fe1681/arduscope-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.2.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a7b80c8e370f7afe6da306f41a5ee39f",
                    "sha256": "738651b83dd3ec1556967a39a9f4b13879c584ee77877fa7898beabe9100dd6a"
                },
                "downloads": -1,
                "filename": "arduscope-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a7b80c8e370f7afe6da306f41a5ee39f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 13095,
                "upload_time": "2021-06-01T21:56:30",
                "upload_time_iso_8601": "2021-06-01T21:56:30.437736Z",
                "url": "https://files.pythonhosted.org/packages/1b/82/d5245f88c6f9bc187d405dd86ccac02a2d4604fb12672f7be98e4859fed7/arduscope-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b8802921c75053954009634a6973737b",
                    "sha256": "1004fbd7b0f106ccdefe693c1421339237fd1b378aca52e02e28d316148c0af3"
                },
                "downloads": -1,
                "filename": "arduscope-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b8802921c75053954009634a6973737b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 63329,
                "upload_time": "2021-06-01T21:56:34",
                "upload_time_iso_8601": "2021-06-01T21:56:34.034400Z",
                "url": "https://files.pythonhosted.org/packages/e7/82/44e5657e6d80985978b62aee5721d534113828a1bc0dee83dda71dadecd4/arduscope-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.3.0/",
            "requires_dist": [
                "numpy",
                "scipy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2d44e7c00c843356762258b830ae61d5",
                    "sha256": "dedd09bc74bd7f29fdcbba0bec29d521625197b1c007ed3c1e4eade0aadc02e8"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2d44e7c00c843356762258b830ae61d5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 16925,
                "upload_time": "2021-06-12T06:25:22",
                "upload_time_iso_8601": "2021-06-12T06:25:22.512356Z",
                "url": "https://files.pythonhosted.org/packages/7c/4d/5a6662d36d2ac5d24e1d6a9c3ff92f28e295371cb55ef3fd244e883d3bf0/arduscope-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "285b7b14dbcf8e5ba4737427ae84a4a7",
                    "sha256": "296aa09d5b690aae7387b36a0e74717e2ffcdd34e381aacf1230c4e7aad25452"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "285b7b14dbcf8e5ba4737427ae84a4a7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 66327,
                "upload_time": "2021-06-12T06:25:24",
                "upload_time_iso_8601": "2021-06-12T06:25:24.227274Z",
                "url": "https://files.pythonhosted.org/packages/3f/07/9fe50ddcf53539d0c222f4cff64b3ae904f2e0cf6e12c50d086ab1379f87/arduscope-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.3.1/",
            "requires_dist": [
                "pyserial",
                "numpy",
                "scipy",
                "matplotlib",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "621c6ce4eece1bb0fb211e8605acf3aa",
                    "sha256": "d68847c9d0c8b5e86245fd7aeb0ea5e9190520037514e1282038647bed36ba54"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "621c6ce4eece1bb0fb211e8605acf3aa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 19140,
                "upload_time": "2021-06-12T07:23:42",
                "upload_time_iso_8601": "2021-06-12T07:23:42.306804Z",
                "url": "https://files.pythonhosted.org/packages/85/a9/28a3ae654eb977573e6a5c00410df0c58c8bd9308ccdf1f196f4644bbe92/arduscope-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5a77e13fc19df126f630549d909473aa",
                    "sha256": "2826d6c40509a2afa5e3ab17e813cb07bdafb431a8aebcc973ce9f4df219bf74"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5a77e13fc19df126f630549d909473aa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 70682,
                "upload_time": "2021-06-12T07:23:45",
                "upload_time_iso_8601": "2021-06-12T07:23:45.771290Z",
                "url": "https://files.pythonhosted.org/packages/04/03/f67f27dc0ccd653c3638e9748fae20b680c4c9bba7eb6f8761c5d81ef264/arduscope-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.2": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.3.2/",
            "requires_dist": [
                "numpy",
                "scipy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2301ef69ce43abea77894f35a7cfe145",
                    "sha256": "316819e02fd18105ccfc4262e9a6b31ed4ddbbab266f492b71b969c9e8598630"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2301ef69ce43abea77894f35a7cfe145",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 18994,
                "upload_time": "2021-06-16T23:56:32",
                "upload_time_iso_8601": "2021-06-16T23:56:32.454463Z",
                "url": "https://files.pythonhosted.org/packages/57/4a/ae794950baf64a097eabffa71a187bb579dd16edc3fab7d63973a3ddda32/arduscope-0.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9588d0022fea38648c0501053a9f2e96",
                    "sha256": "ec71e34f000dfdf768da319ef9dab9797edf8016157592a3077cfdebd7382b29"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "9588d0022fea38648c0501053a9f2e96",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 70993,
                "upload_time": "2021-06-16T23:56:40",
                "upload_time_iso_8601": "2021-06-16T23:56:40.807670Z",
                "url": "https://files.pythonhosted.org/packages/78/b5/745cfa876f7afb648ee491e0c761bb58ce90b52892a90d7c53a9501b34ba/arduscope-0.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.3": {
        "info": {
            "author": "Alejandro Ezequiel Mazzeo",
            "author_email": "ale.exactas@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License"
            ],
            "description": "# Arduscopio\n\nArduscopio es una interfaz Arduino-Python desarrollada para la adquisici\u00f3n de datos\nanal\u00f3gicos. El comportamiento de la interfaz imita algunas caracter\u00edsticas propias de un\nosciloscopio, tales como la funcionalidad de Trigger y el cambio de escala temporal.\n\nArduscopio surge como una iniciativa para facilitar la adquisici\u00f3n de datos en la materia\nLaboratorio 3 del Departamento de F\u00edsica de la Facultad de Ciencias Exactas y Naturales de\nla UBA.\n\nA partir de la versi\u00f3n 0.3 el proyecto cuenta adem\u00e1s con un generador de funciones que \ntrabaja mediante la placa de sonido y un m\u00f3dulo de ajuste para se\u00f1ales peri\u00f3dicas.\n\n![Screenshot](https://raw.githubusercontent.com/alemazzeo/arduscope/main/.images/arduscope_live.png)\n\n## Instalaci\u00f3n\n\n### Python\n\nEl paquete puede ser instalado utilizando [PIP](https://pypi.org/project/arduscope):\n\n```\npip install arduscope\n```\n\nEl paquete instala las siguientes dependencias en caso de no encontrarse presentes:\n\n- numpy\n- matplotlib\n- scipy\n- pyserial\n- tqdm\n\n### Arduino\n\nEl c\u00f3digo de Arduino puede ser descargado desde el repositorio del proyecto.\n\n[Click derecho en este link -> Guardar como][1]\n\nDebe ser cargado en una placa Arduino UNO (excluyente).\n**Ninguna fracci\u00f3n del c\u00f3digo fue pensada para ser compatible con otra placa.**\nCualquier funcionamiento del c\u00f3digo fuera de Arduino UNO es mera coincidencia.\n\n## Ejemplo de uso del Arduscopio\n\nLos elementos centrales del paquete son el objeto `Arduscope` (la interfaz entre Python y\nel Arduino)\ny el objeto `ArduscopeMeasure` (un contenedor para los resultados adquiridos). \n\nEn primer lugar debemos importar estas clases del paquete que instalamos:\n\n```python\nfrom arduscope import Arduscope, ArduscopeMeasure\n```\n\nLuego podemos crear una instancia del Arduscopio, indicando el puerto de conexi\u00f3n. Nos\nconviene utilizar el contexto `with ... as` para no olvidarnos de cerrar el puerto.\n\nArduino IDE nos muestra el nombre del puerto en la esquina inferior derecha.\n\nEn Windows los puertos suelen llamarse `\"COM1\"`, `\"COM2\"`, etc. En Linux el formato suele\nser `\"/dev/ttyUSB0\"` o parecido.\n\n```python\nwith Arduscope(port='/dev/ttyUSB0') as arduino:\n```\n\nEl objeto que instanciamos bajo el nombre arduino (podr\u00eda ser cualquier otro) tiene una\nserie de propiedades y m\u00e9todos.\n\nLa l\u00f3gica general es que las propiedades se configuren primero y luego se active la\nadquisici\u00f3n.\n\nSi el usuario olvida detener la adquisici\u00f3n y cambia una propiedad la adquisici\u00f3n se\ndetiene y reanuda autom\u00e1ticamente.\n\n```python\n  arduino.frequency = 2000  # Frecuencia de adquisici\u00f3n (en Hz)\n  arduino.pulse_width = 0.05  # Ancho del pulso digital (en Segundos)\n  arduino.trigger_value = 2.5  # Valor del trigger (en Volts)\n  arduino.amplitude = 5.0  # Amplitud de la se\u00f1al (en Volts)\n  arduino.n_channels = 2  # Cantidad de canales (1 a 6)\n  arduino.trigger_channel = \"A0\"  # Canal/Modo de trigger (ver apartado)\n  arduino.trigger_offset = 0.0  # Offset del trigger (en fracci\u00f3n de pantalla)\n```\n\nPara comenzar la adquisici\u00f3n se utiliza el m\u00e9todo `start_acquire()`.\n\nLa misma puede ser detenida mediante `stop_acquire()`.\n\nEstos m\u00e9todos no detienen la ejecuci\u00f3n principal del programa.\n\nEl m\u00e9todo `live_plot()` abre un gr\u00e1fico de Matplotlib y actualiza su contenido para cada\nnueva pantalla. Requiere que el modo ventana de Matplotlib se encuentre activo.\n\nHasta que el gr\u00e1fico no es cerrado la ejecuci\u00f3n principal se detiene, generando un momento\npara que el usuario vea los datos en tiempo real y decida si quiere continuar con su\nscript o detenerlo.\n\n```python\n  arduino.start_acquire()\n  arduino.live_plot()\n```\n\nA continuaci\u00f3n podemos trabajar con los datos adquiridos.\n\nEn primer lugar conviene asegurar que fueron adquiridas la cantidad de pantallas que\nnecesitamos. Para eso podemos usar la funci\u00f3n `wait_until(n_screens, timeout)`.\n\nEsta funci\u00f3n detiene la ejecuci\u00f3n principal hasta que el buffer de pantallas\ntenga `n_screens` almacenadas. Tambi\u00e9n podemos pasarle un par\u00e1metro opcional de `timeout`\npara que se produzca un error por tiempo l\u00edmite (en segundos).\n\n```python\n  arduino.wait_until(n_screens=50, timeout=None)\n```\n\nSi la cantidad de pantallas ya fue alcanzada al llamar esta funci\u00f3n el resultado ser\u00e1\ninmediato. Tambi\u00e9n podr\u00edamos detener la adquisici\u00f3n para que el buffer deje de\nsobreescribirse. Podemos hacerlo expl\u00edcitamente mediante la funci\u00f3n `stop_acquire` o\ndejar que el cierre del contexto `with` lo haga autom\u00e1ticamente.\n\nPodemos acceder al las mediciones realizadas mediante la propiedad `measure`.\nEsta propiedad nos devuelve un objeto `ArduscopeMeasure`, que es nuestro contenedor de\nresultados. \n\n```python\nmeasure = arduino.measure\n```\n\nEste objeto almacena los resultados obtenidos junto con el estado del Arduscopio al\nmomento de realizar la medici\u00f3n (las mismas propiedades que configuramos antes).\nTambi\u00e9n tiene un vector `x` generado a partir de la frecuencia que corresponde al eje\ntemporal. \n\nLos canales quedan almacenados en una lista y podemos recuperarlos mediante la propiedad \n`channels`. El formato para cada canal es `[cantidad de pantallas] x [puntos por pantalla]`.\nPodemos ver lo mencionado hasta ac\u00e1 con algunos ejemplos:\n\n```python\n# Eje temporal de la medici\u00f3n del canal A0\n>> measure.x[0]\n# Valor del trigger\n>> measure.trigger_value\n# Canal A0, pantalla m\u00e1s antigua\n>> measure.channels[0][0]\n# Canal A2, pantalla m\u00e1s reciente\n>> measure.channels[2][-1]\n# Canal A2, pantalla m\u00e1s reciente, primeros 50 puntos\n>> measure.channels[2][-1][0:50]\n# Canal A1, promedio de todas las pantallas\n>> measure.channels[1].mean(axis=0)\n# Canal A1, desviaci\u00f3n est\u00e1ndar de todas las pantallas\n>> measure.channels[1].std(axis=0)\n# Canal A0, promedio de las \u00faltimas 50 pantallas\n>> measure.channels[1][-50:].mean(axis=0)\n```\n\nObservando esos ejemplos podr\u00edamos hacer un gr\u00e1fico muy simple del siguiente modo:\n\n```python\nfig, ax = plt.subplots(1, 1, figsize=(8, 6))\nax.plot(measure.x[0], measure.channels[0].mean(axis=0), label='a0')\nax.plot(measure.x[1], measure.channels[1].mean(axis=0), label='a1')\nax.set_title(f\"Valor del trigger: {measure.trigger_value}V\")\nplt.show()\n```\n\nFinalmente podr\u00edamos querer almacenar una medici\u00f3n en un archivo. El objeto screen provee\nun m\u00e9todo `save` para facilitar esta tarea. El formato se decide a partir de la extensi\u00f3n\ndel archivo creado:\n\n```python\nmeasure.save(\"data.csv\")  # Formato CSV (separado por comas)\nmeasure.save(\"data.npz\")  # Formato NPZ (array comprimido de Numpy)\nmeasure.save(\"data.json\")  # Formato JSON (objeto de JavaScript)\n```\n\nPara recuperar una pantalla guardada vamos a crear un nuevo objeto `ArduscopeMeasure` del\nsiguiente modo:\n\n```python\nmeasure = ArduscopeMeasure.load(\"data.csv\")\n```\n\n### Ejemplo completo (s\u00f3lo Arduscopio)\n\n```python\nimport matplotlib.pyplot as plt\nfrom arduscope import Arduscope\n# from arduscope import ArduscopeMeasure\n\nwith Arduscope(port='/dev/ttyUSB0') as arduino:\n    arduino.frequency = 1000\n    arduino.pulse_width = 0.2\n    arduino.trigger_value = 1.0\n    arduino.amplitude = 5.0\n    arduino.n_channels = 2\n    arduino.trigger_channel = \"D7OUT_HIGH\"\n    arduino.trigger_offset = 0.0\n\n    arduino.start_acquire()\n    arduino.live_plot()\n    arduino.wait_until(n_screens=10, timeout=None)\n\nmeasure = arduino.measure\n\nax: plt.Axes\nfig, ax = plt.subplots(1, 1, figsize=(8, 6))\nax.plot(measure.x[0], measure.channels[0].mean(axis=0), label='a0')\nax.plot(measure.x[1], measure.channels[1].mean(axis=0), label='a1')\nax.set_title(f\"Trigger: {measure.trigger_value}V\")\n\nplt.show()\n\nmeasure.save(\"data.csv\")  # Formato CSV (separado por comas)\nmeasure.save(\"data.npz\")  # Formato NPZ (array comprimido de Numpy)\nmeasure.save(\"data.json\")  # Formato JSON (objeto de JavaScript)\n\n# measure = ArduscopeMeasure.load(\"data.csv\")\n\n```\n\n## Ejemplo de uso del M\u00f3dulo de ajuste\n\nEl m\u00f3dulo de ajuste consiste en un m\u00e9todo principal `fit_signal` cuya tarea es ajustar \nfunciones peri\u00f3dicas de la forma:\n\n`f(x, amplitud, frecuencia, fase, offset)`\n\nCualquier funci\u00f3n que contenga esos 4 par\u00e1metros (m\u00e1s la variable independiente) puede \nser trabajada mediante este m\u00e9todo. Internamente realiza las siguientes tareas:\n\n  - Estima la amplitud como la diferencia entre el percentil 95 y 5 de los datos.\n    \n  - Estima el offset mediante el valor medio de la se\u00f1al.\n    \n  - Estima los par\u00e1metros iniciales de frecuencia y fase por 3 m\u00e9todos diferentes:\n      - Transformada r\u00e1pida de Fourier (con `rfft` de `scipy.fft`)\n      - Autocorrelaci\u00f3n de la se\u00f1al (con `correlate` de `scipy.signal.signaltools`)\n      - Interpolado y b\u00fasqueda de ceros (con `UnivariateSpline` de `scipy.interpolate`).\n        \n  - Utiliza el ajuste por cuadrados m\u00ednimos `curve_fit` de la librer\u00eda `scipy.optimize` \n    para los 3 conjuntos de par\u00e1metros iniciales y selecciona de entre todos el que \n    presenta el menor RMSE (ra\u00edz del error cuadr\u00e1tico medio).\n    \nPara utilizarla s\u00f3lo debemos indicar la funci\u00f3n objetivo (por ejemplo la funci\u00f3n `sine` \nque est\u00e1 definida en el propio m\u00f3dulo y las tiras de datos para `x` e `y`):\n\n```python\nimport numpy as np\nfrom arduscope import fit_signal, sine\n\n# ...\n# Adquisici\u00f3n y almacenamiento en variables `x` e `y`\n# ...\n\n# Ajuste de la se\u00f1al\nparams, stds, rmse = fit_signal(sine, x, y)\n```\n\nA continuaci\u00f3n podemos utilizar los par\u00e1metros obtenidos para generar una nueva curva:\n```python\n# Aumentamos la resoluci\u00f3n en x 20 veces\nx_fit = np.linspace(min(x), max(x), num=x.size*20)\n# Calculamos la funci\u00f3n de ajuste con los par\u00e1metros \u00f3ptimos\ny_fit = sine(x_fit, *params)\n```\n\n## Ejemplo de uso del generador de funciones\n\nEl generador de funciones hace uso intensivo del m\u00f3dulo `simpleaudio`. El mismo debe \nser instalado aparte. En Windows bastar\u00e1 con hacer: `pip install simpleaudio`.\nEn Linux deberemos instalar adem\u00e1s otras dependencias: \n`sudo apt-get install -y python3-dev libasound2-dev`\n\nEste generador de funciones preparar\u00e1 un sonido y lo repetir\u00e1 las veces que sea\nnecesario. La repetici\u00f3n sufre una peque\u00f1a demora entre ciclos, por lo que se recomienda \nconfigurar una duraci\u00f3n m\u00ednima del sonido mayor a los tiempos de adquisici\u00f3n esperados.\n\n```python\nfrom arduscope.wave_generator import WaveGenerator\n\n# Nuevo generador de funciones\nwg = WaveGenerator(duration=20)\n```\n\nLa configuraci\u00f3n s\u00f3lo puede realizarse mientras el sonido se encuentra detenido. Tenemos\nlos siguientes par\u00e1metros a nuestra disposici\u00f3n:\n\n```python\n# Propiedades del canal 1\nwg.channel1.amplitude = 1.0     # Amplitud (0.0 a 1.0)\nwg.channel1.frequency = 440     # Frecuencia (1 a 4000 en Hz)\nwg.channel1.phase = 0           # Fase en radianes\nwg.channel1.waveform = \"sine\"   # \"sine\", \"square\", \"triangle\"\nwg.channel1.enabled = True      # Canal encendido / apagado\n\n# Propiedades del canal 2\nwg.channel2.amplitude = 1.0   \nwg.channel2.frequency = 440   \nwg.channel2.phase = 0         \nwg.channel2.waveform = \"sine\" \nwg.channel2.enabled = True    \n```\n\nCuando queramos que un sonido se ejecute abriremos un contexto y dentro del mismo\nubicaremos las tareas a realizar. Por ejemplo, si queremos escuchar el sonido por 5\nsegundos podemos hacer lo siguiente\n\n```python\nimport time\nwith wg.play():\n    for i in range(5):\n        time.sleep(1.0)\n        print(f\"Transcurrieron {i+1} segundos\")\n``` \n\n### Ejemplo completo (Arduscopio + fit_signal + barrido de fase con WaveGenerator)\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom arduscope import Arduscope, fit_signal, sine\nfrom arduscope.wave_generator import WaveGenerator\n\n# Nuevo generador de funciones\nwg = WaveGenerator(duration=20)\n\n# Propiedades del canal 1\nwg.channel1.amplitude = 1.0     # Amplitud (0.0 a 1.0)\nwg.channel1.frequency = 440     # Frecuencia (1 a 4000 en Hz)\nwg.channel1.phase = 0           # Fase en radianes\nwg.channel1.waveform = \"sine\"   # \"sine\", \"square\", \"triangle\"\nwg.channel1.enabled = True      # Canal encendido / apagado\n\n# Propiedades del canal 2\nwg.channel2.amplitude = 1.0\nwg.channel2.frequency = 440\nwg.channel2.phase = 0\nwg.channel2.waveform = \"sine\"\nwg.channel2.enabled = True\n\n# Contexto para conectar / desconectar el Arduscopio\nwith Arduscope(port='/dev/ttyUSB0') as arduino:\n    # Configura los par\u00e1metros del Arduscopio\n    arduino.frequency = 8000  # Frecuencia de muestreo\n    arduino.trigger_value = 2.5  # Valor de trigger\n    arduino.amplitude = 5.0  # Amplitud m\u00e1xima de la se\u00f1al medida\n    arduino.n_channels = 2  # Cantidad de canales\n    arduino.trigger_channel = \"A0\"  # Modo del trigger\n    arduino.trigger_offset = 0.0  # Offset del trigger\n\n    # Barrido de fase\n    for phase in np.linspace(0, 90, 11):\n        # Configura la fase del canal 2\n        wg.channel2.phase = phase * np.pi / 180\n\n        # Inicia la reproducci\u00f3n del sonido\n        with wg.play():\n            # Inicia la adquisici\u00f3n\n            arduino.start_acquire()\n            # Espera 50 pantallas\n            arduino.wait_until(50)\n            # Detiene la adquisici\u00f3n\n            arduino.stop_acquire()\n            # Transfiere las mediciones a un contenedor\n            measure = arduino.measure\n\n            # Grafica los canales (con el mejor ajuste disponible)\n            fig: plt.Figure\n            ax: plt.Axes\n            fig, ax = plt.subplots(1, 1, figsize=(8, 6))\n\n            phases = []\n            for i in range(arduino.n_channels):\n                # Coordenada x (con el offset correspondiente a cada canal)\n                x = measure.x[i]\n                # Coordenada y promediada en las 50 pantallas\n                y = measure.channels[i].mean(axis=0)\n\n                # Realiza un ajuste\n                params, stds, rmse, = fit_signal(sine, x, y)\n\n                # Grafica el ajuste, los datos y usa el RMSE para dibujar errores\n                x_fit = np.linspace(min(x), max(x), num=x.size*20)\n                y_fit = sine(x_fit, *params)\n                ax.plot(x, y, ls='', marker='o', color=f\"C{i}\")\n                ax.plot(x_fit, y_fit, color=f\"C{i}\")\n                ax.fill_between(x_fit, y_fit-rmse, y_fit+rmse, color=f\"C{i}\", alpha=0.3)\n\n                # Recuerda la fase ajustada (para posterior comparaci\u00f3n)\n                phases.append(params[2])\n\n            # Calcula la diferencia de fase (corregida al intervalo -pi, pi)\n            phase_diff = ((phases[0] - phases[1]) - np.pi) % (2 * np.pi) - np.pi\n\n            # Imprime los resultados\n            print(f\"\\n\"\n                  f\"Expected phase: {phase:.1f}\\n\"\n                  f\"Measured phase: {phase_diff * 180 / np.pi:.1f}\")\n\n            plt.tight_layout()\n            plt.show()\n\n            # Borra el buffer antes de comenzar la siguiente medici\u00f3n\n            arduino.clear_buffer()\n``` \n\n[1]: https://raw.githubusercontent.com/alemazzeo/arduscope/main/arduscope/arduscope.ino\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alemazzeo/arduscope.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "arduscope",
            "package_url": "https://pypi.org/project/arduscope/",
            "platform": "",
            "project_url": "https://pypi.org/project/arduscope/",
            "project_urls": {
                "Homepage": "https://github.com/alemazzeo/arduscope.git"
            },
            "release_url": "https://pypi.org/project/arduscope/0.3.3/",
            "requires_dist": [
                "numpy",
                "scipy",
                "matplotlib",
                "pyserial",
                "tqdm"
            ],
            "requires_python": ">=3.6",
            "summary": "Un osciloscopio basado en Arduino + Python y orientado a laboratorios de ense\u00f1anza",
            "version": "0.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10737589,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "985e935784f11e44e021c3f5ef83c3a4",
                    "sha256": "3037ca85d5089572e87755dfbbde4b5a6f0a9677341616557b6a7fbd1ed198de"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "985e935784f11e44e021c3f5ef83c3a4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 19023,
                "upload_time": "2021-06-24T22:32:42",
                "upload_time_iso_8601": "2021-06-24T22:32:42.779042Z",
                "url": "https://files.pythonhosted.org/packages/68/20/5bed1956a3d9457c61e15c66e43b6039b6de5727c2639dc0f996b3c6c251/arduscope-0.3.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "50407e98417129a3ab467908503d6eb5",
                    "sha256": "483d9a3ebfb946131ef1d6dea871bd16787e999b6a4033b4603a334006b98c06"
                },
                "downloads": -1,
                "filename": "arduscope-0.3.3.tar.gz",
                "has_sig": false,
                "md5_digest": "50407e98417129a3ab467908503d6eb5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 71432,
                "upload_time": "2021-06-24T22:32:49",
                "upload_time_iso_8601": "2021-06-24T22:32:49.792814Z",
                "url": "https://files.pythonhosted.org/packages/ce/15/90ab5604eddabb14ba7260985b5262166ece1708fa9e33ff0b065d3019df/arduscope-0.3.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}