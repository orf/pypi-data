{
    "1.0": {
        "info": {
            "author": "Juan Carlos Miranda",
            "author_email": "juancarlos.miranda@udl.cat",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# AK_FRAEX - Azure Kinect Frame Extractor\n\nPython-based GUI tool to extract frames from video files produced with Azure Kinect cameras. Visit the project site\nat [https://pypi.org/project/ak-frame-extractor/](https://pypi.org/project/ak-frame-extractor/)\n\n![SOFTWARE_PRESENTATION](https://github.com/GRAP-UdL-AT/ak_frame_extractor/blob/main/docs/img/ak_frame_extractor_presentation.png?raw=true)\n\n## Contents\n\n1. Pre-requisites.\n2. Functionalities.\n3. Install and run.\n4. Files and folder description.\n5. Development tools, environment, build executables.\n\n## 1. Pre-requisites\n\n* Azure Kinect DK camera connected to the computer. Specifications can be seen in\n  the [manufacturer site](https://docs.microsoft.com/es-es/azure/kinect-dk/hardware-specification).\n* [SDK Azure Kinect](https://docs.microsoft.com/es-es/azure/kinect-dk/set-up-azure-kinect-dk) installed.\n* [pyk4a library](https://pypi.org/project/pyk4a/) installed. If the operating system is Windows, follow\n  this [steps](https://github.com/etiennedub/pyk4a/). You can find test basic examples with\n  pyk4a [here](https://github.com/etiennedub/pyk4a/tree/master/example).\n* In Ubuntu 20.04, we provide a script to install the camera drivers following the instructions\n  in [azure_kinect_notes](https://github.com/juancarlosmiranda/azure_kinect_notes).\n\n## 2. Functionalities\n\nThe functionalities of the software are briefly described. Supplementary material can be\nfound in [USER's Manual](https://github.com/GRAP-UdL-AT/ak_frame_extractor/blob/main/docs/USER_MANUAL_ak_frame_extractor_v1.md).\n\n* **[Dataset creation]**  This option creates a hierarchy of metadata. This hierarchy contains sub-folders that will be\n  used to store the extracted data.\n* **[Data Extraction]** The user can configure the parameters for extracting data frames from videos, such as: output\n  folder, number of frames to extract. The extraction can be done from one video or by processing a whole folder in\n  batch mode.\n* **[Data Migration]**  In this tab, we offer a tool for data migration in object labelling tasks. It is used to convert\n  files from .CSV format (generated with [Pychet Labeller](https://github.com/acfr/pychetlabeller))\n  to [PASCALVOC](https://roboflow.com/formats/pascal-voc-xml) format.\n\n* Data extracted and 3D cloud points can be retrieved from *\"your dataset metadata folder\"**.\n\n## 3. Install and run\n\n### 3.1 PIP quick install package\n\nCreate your Python virtual environment.\n\n```\npython3 -m venv ./ak_frame_extractor_venv\nsource ./ak_frame_extractor_venv/bin/activate\npip install --upgrade pip\n\npip install python -m ak-frame-extractor\npython -m ak_frame_extractor\n```\n\n### 3.2 Install and run virtual environments using scripts provided\n\n* [Linux]\n  Enter to the folder **\"ak_frame_extractor/\"**\n\nCreate virtual environment(only first time)\n\n```\n./creating_env_ak_frame_extractor.sh\n```\n\nRun script.\n\n```\n./ak_frame_extractor_start.sh\n```\n\n* [Windows]\n  Enter to the folder \"ak_frame_extractor/\"\n\nCreate virtual environment(only first time)\n\n```\nTODO_HERE\n```\n\nRun script from CMD.\n\n```\n./ak_frame_extractor_start.bat\n```\n\n## 4.3 Files and folder description\n\nFolder description:\n\n| Folders                    | Description            |\n|---------------------------|-------------------------|\n| docs/ | Documentation |\n| src/ | Source code |\n| win_exe_conf/ | Specifications for building .exe files with [Pyinstaller](https://pyinstaller.org)..|\n| tools/ | Examples of code to use data migrated. We offer scripts in MATLAB, Python, R. |\n| data/ | Video files recorded with Azure Kinect. |\n| . | . |\n\nFiles description:\n\n| Files                    | Description              | OS |\n|---------------------------|-------------------------|---|\n| activate_env.bat | Activate environments in Windows | WIN |\n| clean_files.bat | Clean files under CMD. | WIN |\n| ak_sm_recorder_main.bat | Executing main script | WIN |\n| build_pip.bat | Build PIP package to distribution | WIN |\n| build_win.bat | Build .EXE for distribution | WIN |\n| creating_env_ak_frame_extractor.sh | Automatically creates Python environments | Linux |\n| ak_frame_extractor_start.sh | Executing main script | Linux |\n| /src/ak_frame_extractor/__main__.py | Main function used in package compilation | Supported by Python |\n| /ak_frame_extractor_main.py | Python main function | Supported by Python |\n| setup.cfg | Package configuration PIP| Supported by Python |\n| pyproject.toml | Package description pip| Supported by Python |\n\n## 5. Development tools, environment, build executables\n\nSome development tools are needed with this package, listed below:\n\n* [Pyinstaller](https://pyinstaller.org).\n* [Opencv](https://opencv.org/).\n* [Curses for Python](https://docs.python.org/3/howto/curses.html) ```pip install windows-curses```.\n* [7zip](https://7ziphelp.com/).\n\n### 5.1 Notes for developers\n\nYou can use the __main__.py for execute as first time in src/ak_frame_extractor/_ _ main _ _.py Configure the path of\nthe project, if you use Pycharm, put your folder root like this:\n![ak_sm_recorder](https://github.com/GRAP-UdL-AT/ak_frame_extractor/blob/main/img/configuration_pycharm.png?raw=true)\n\n### 5.2 Creating virtual environment Linux\n\n```\npython3 -m venv ./venv\nsource ./venv/bin/activate\npip install --upgrade pip\npip install -r requirements_linux.txt\n```\n\n### 5.3 Creating virtual environment  Windows\n\n```\n%userprofile%\"\\AppData\\Local\\Programs\\Python\\Python38\\python.exe\" -m venv ./venv\nvenv\\Scripts\\activate.bat\npip install --upgrade pip\npip install -r requirements_windows.txt\n```\n\n** If there are some problems in Windows, follow [this](https://github.com/etiennedub/pyk4a/) **\n\n```\npip install pyk4a --no-use-pep517 --global-option=build_ext --global-option=\"-IC:\\Program Files\\Azure Kinect SDK v1.4.1\\sdk\\include\" --global-option=\"-LC:\\Program Files\\Azure Kinect SDK v1.4.1\\sdk\\windows-desktop\\amd64\\release\\lib\"\n```\n\n## 5.4 Building PIP package\n\nWe are working to offer Pypi support for this package. At this time this software can be built by scripts automatically.\n\n### 5.4.1 Build packages\n\n```\npy -m pip install --upgrade build\nbuild_pip.bat\n```\n\n### 5.4.2 Download PIP package\n\n```\npip install package.whl\n```\n\n### 5.4.3 Run ak_frame_extractor\n\n```\npython -m ak_frame_extractor.py\n```\n\n## 5.4 Building .EXE for Windows 10\n\n```\nbuild_win.bat\n```\n\nAfter the execution of the script, a new folder will be generated inside the project **\"/dist\"**. You can copy **\nak_frame_extracted_f/** or a compressed file **\"ak_frame_Extractor_f.zip\"** to distribute.\n\n### 5.6 Package distribution format\n\nExplain about packages distribution.\n\n| Package type | Package |  Url |  Description | \n|--------------|---------|------|------| \n| Windows      | .EXE    | .EXE | Executables are stored under build/ | \n| Linux        | .deb    | .deb | NOT IMPLEMENTED YET| \n| PIP          | .whl    | .whl | PIP packages are stored in build/ |\n\n## Authorship\n\nThis project is contributed by [GRAP-UdL-AT](http://www.grap.udl.cat/en/index.html). Please contact authors to report\nbugs juancarlos.miranda@udl.cat\n\n## Citation\n\nIf you find this code useful, please consider citing:\n[GRAP-UdL-AT/ak_frame_extractor](https://github.com/GRAP-UdL-AT/ak_frame_extractor/).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/GRAP-UdL-AT/ak_frame_extractor",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ak-frame-extractor",
            "package_url": "https://pypi.org/project/ak-frame-extractor/",
            "platform": null,
            "project_url": "https://pypi.org/project/ak-frame-extractor/",
            "project_urls": {
                "Bug Tracker": "https://github.com/GRAP-UdL-AT/ak_frame_extractor/issues",
                "Homepage": "https://github.com/GRAP-UdL-AT/ak_frame_extractor"
            },
            "release_url": "https://pypi.org/project/ak-frame-extractor/1.0/",
            "requires_dist": [
                "altgraph (==0.17.2)",
                "build (==0.7.0)",
                "colorama (==0.4.4)",
                "future (==0.18.2)",
                "lxml (==4.8.0)",
                "numpy (==1.22.2)",
                "opencv-python (==4.5.5.62)",
                "packaging (==21.3)",
                "pandas (==1.4.1)",
                "pefile (==2021.9.3)",
                "pep517 (==0.12.0)",
                "Pillow (==9.0.1)",
                "pyinstaller (==5.0.1)",
                "pyinstaller-hooks-contrib (==2022.4)",
                "pyk4a (==1.3.0)",
                "pyparsing (==3.0.9)",
                "python-dateutil (==2.8.2)",
                "python-version (==0.0.2)",
                "pytz (==2021.3)",
                "pywin32-ctypes (==0.2.0)",
                "scipy (==1.8.0)",
                "six (==1.16.0)",
                "tomli (==2.0.1)"
            ],
            "requires_python": ">=3.6",
            "summary": "Python-based GUI tool to extract frames from video files produced with Azure Kinect cameras.",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14066438,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d9a0cf45093d8f00d2bb7a16641ac4e0",
                    "sha256": "8d6670ff3da46c6a71d8aa78322ce47d32e50ca4da73e2ede45c3d52941418fe"
                },
                "downloads": -1,
                "filename": "ak_frame_extractor-1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d9a0cf45093d8f00d2bb7a16641ac4e0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 96827,
                "upload_time": "2022-06-08T07:56:35",
                "upload_time_iso_8601": "2022-06-08T07:56:35.081578Z",
                "url": "https://files.pythonhosted.org/packages/ea/7e/bf751552b5e8c0d480606f8a09bf9e375d6077e7636d087d80fd6fd9f166/ak_frame_extractor-1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "117facfbdb5e7b6f43544c1a801634f7",
                    "sha256": "bd7bee39af9532ba58fb9ecdf771bde8b190e34d1a09e52b5c9d7eb0abf8edd2"
                },
                "downloads": -1,
                "filename": "ak_frame_extractor-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "117facfbdb5e7b6f43544c1a801634f7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 88851,
                "upload_time": "2022-06-08T07:56:37",
                "upload_time_iso_8601": "2022-06-08T07:56:37.672265Z",
                "url": "https://files.pythonhosted.org/packages/ea/ac/46837ecddc1a35a3b59c7da6d79121331f719815a240e30315d08b96c8da/ak_frame_extractor-1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}