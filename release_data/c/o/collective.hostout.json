{
    "0.1.2": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://www.python.org/pypi/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://www.python.org/pypi/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.1.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "ZC Buildout recipe for deploying your buildout to a server",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1a4a5b9033ddfdc7e1fa6e86fdf8d737",
                    "sha256": "d6925a5b10e791c6a7a937ff1428e03e2d846dc0b4e4ff903d4be32735a99909"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1a4a5b9033ddfdc7e1fa6e86fdf8d737",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13289,
                "upload_time": "2009-04-28T03:11:55",
                "upload_time_iso_8601": "2009-04-28T03:11:55.120630Z",
                "url": "https://files.pythonhosted.org/packages/aa/eb/c522d94c1e62c04f7e2f4c42fa4830e30074c301b2ea3d9091ab7e261ea5/collective.hostout-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://www.python.org/pypi/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://www.python.org/pypi/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.1.3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "ZC Buildout recipe for deploying your buildout to a server",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cc7cbe31a7b6a99f74f613a239da06ab",
                    "sha256": "a85e9f7d41a8ff48cace6c326fea0a224995ebd38c8fda935066e85eb0c5fd05"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.1.3-py2.4.egg",
                "has_sig": false,
                "md5_digest": "cc7cbe31a7b6a99f74f613a239da06ab",
                "packagetype": "bdist_egg",
                "python_version": "2.4",
                "requires_python": null,
                "size": 29538,
                "upload_time": "2009-05-06T14:45:38",
                "upload_time_iso_8601": "2009-05-06T14:45:38.247114Z",
                "url": "https://files.pythonhosted.org/packages/9d/7f/7b459464c4fc5931d56dabfbac5039804f70ae79e1bd7c626f7a408e311f/collective.hostout-0.1.3-py2.4.egg",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://www.python.org/pypi/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://www.python.org/pypi/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.1.4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "ZC Buildout recipe for deploying your buildout to a server",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "740f4e3e5186720b074f11427a20cc9f",
                    "sha256": "9c9f33e6d265cc449448c1bfb0d93f74429efc136cbae46098e3f7d670d08496"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "740f4e3e5186720b074f11427a20cc9f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14003,
                "upload_time": "2009-06-06T17:54:08",
                "upload_time_iso_8601": "2009-06-06T17:54:08.112316Z",
                "url": "https://files.pythonhosted.org/packages/40/06/ebead331701fd9ad384eff9d39705404f5bf65481a0db909f7ff78e0f5b5/collective.hostout-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://www.python.org/pypi/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://www.python.org/pypi/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.9/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "one click deployment for buildout based applications",
            "version": "0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dac3fe471a41f994a41b4b5f56e465e3",
                    "sha256": "b498143bcf49fe5b7867feb4e29727dc828dc7120df7b8a8620a9f63f0af36d4"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "dac3fe471a41f994a41b4b5f56e465e3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17546,
                "upload_time": "2009-09-15T15:10:47",
                "upload_time_iso_8601": "2009-09-15T15:10:47.162767Z",
                "url": "https://files.pythonhosted.org/packages/10/3c/2e6cf8e8c10c10d132097da27166d78cd9fa1514c1fdefe6b710fc42ae70/collective.hostout-0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.1": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://www.python.org/pypi/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://www.python.org/pypi/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.9.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "one click deployment for buildout based applications",
            "version": "0.9.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c765e76f047397b2686fc07aa016f678",
                    "sha256": "61af608895d90636c00420ace774589ceb571247679864b8a96e29e14a310984"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.9.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c765e76f047397b2686fc07aa016f678",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 18260,
                "upload_time": "2009-09-16T17:09:57",
                "upload_time_iso_8601": "2009-09-16T17:09:57.517581Z",
                "url": "https://files.pythonhosted.org/packages/76/d2/9f921f0b96581788a909af6e696a1ef5988172ed2cd26c8fe78c2d92c7e2/collective.hostout-0.9.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.3": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.9.3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "one click deployment for buildout based applications",
            "version": "0.9.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e236a62df8824a25c13eead3fb66d1c1",
                    "sha256": "376d3c4fbd660aa3fb1065c6ad2208f23ab40b75dff7d0660f09f8afc8375b65"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.9.3.tar.gz",
                "has_sig": false,
                "md5_digest": "e236a62df8824a25c13eead3fb66d1c1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 36812,
                "upload_time": "2010-01-31T16:26:19",
                "upload_time_iso_8601": "2010-01-31T16:26:19.225963Z",
                "url": "https://files.pythonhosted.org/packages/9f/b0/4a7322d89588209d93d8fdc78b9cc09f4daa9b5e32a49dd8dc1e55d021de/collective.hostout-0.9.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.4": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/0.9.4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "collective.hostout will help you control multiple application environments\n    with the minimum amount of effort. You can manage local, staging and deployment environments\n    with one easy tool.",
            "version": "0.9.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "706d860989edbccbf375b62cd077ed0e",
                    "sha256": "714a60d114765691d007e21ad18eadc1d797799fa55e7c36c5bb84f921b8dbf3"
                },
                "downloads": -1,
                "filename": "collective.hostout-0.9.4.tar.gz",
                "has_sig": false,
                "md5_digest": "706d860989edbccbf375b62cd077ed0e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 36833,
                "upload_time": "2010-01-31T16:42:51",
                "upload_time_iso_8601": "2010-01-31T16:42:51.033493Z",
                "url": "https://files.pythonhosted.org/packages/de/7e/bbe12356080ea0e85af1e9c5ae7f0796bde684e1c353631e4fa48a844ffd/collective.hostout-0.9.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a1": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/1.0a1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "collective.hostout will help you control multiple application environments\n    with the minimum amount of effort. You can manage local, staging and deployment environments\n    with one easy tool.",
            "version": "1.0a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0617c3187c66a87183e6401db5d38df9",
                    "sha256": "a80caae3e414bf4a99e666492fe4a2e926289c2abbe0ecb7318fc7aeebedd622"
                },
                "downloads": -1,
                "filename": "collective.hostout-1.0a1.tar.gz",
                "has_sig": false,
                "md5_digest": "0617c3187c66a87183e6401db5d38df9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 24389,
                "upload_time": "2010-02-14T16:41:22",
                "upload_time_iso_8601": "2010-02-14T16:41:22.540603Z",
                "url": "https://files.pythonhosted.org/packages/5d/1c/9679463385e4d2560db45ed3db34d3ca46f4f4a0e254c3c32eca3151eb08/collective.hostout-1.0a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a2": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: Buildout",
                "Topic :: Utilities"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/1.0a2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "collective.hostout will help you control multiple application environments\n    with the minimum amount of effort. You can manage local, staging and deployment environments\n    with one easy tool.",
            "version": "1.0a2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4738cd4552363ed09acb09cc352cd612",
                    "sha256": "24e71c8a7e2697785fb38a06f4944ea7154ae16a0dbde3d66d4671f9b5c1b13c"
                },
                "downloads": -1,
                "filename": "collective.hostout-1.0a2.tar.gz",
                "has_sig": false,
                "md5_digest": "4738cd4552363ed09acb09cc352cd612",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 26580,
                "upload_time": "2010-05-26T17:37:22",
                "upload_time_iso_8601": "2010-05-26T17:37:22.913885Z",
                "url": "https://files.pythonhosted.org/packages/ed/cb/ddb40923f164c9643c293ffdc91769ace1aafc81ab129fbc907d8ce5794f/collective.hostout-1.0a2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a3": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: Buildout",
                "Topic :: Utilities"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/1.0a3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "collective.hostout will help you control multiple application environments\n    with the minimum amount of effort. You can manage local, staging and deployment environments\n    with one easy tool.",
            "version": "1.0a3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "423ea2188fd9cdef6a1566ad3c9d0d00",
                    "sha256": "204c6b2f4429373e2e3b48c5b437bc70f06c017a40e7f8505e6f32f211c35021"
                },
                "downloads": -1,
                "filename": "collective.hostout-1.0a3.tar.gz",
                "has_sig": false,
                "md5_digest": "423ea2188fd9cdef6a1566ad3c9d0d00",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 27073,
                "upload_time": "2010-06-02T18:12:41",
                "upload_time_iso_8601": "2010-06-02T18:12:41.707671Z",
                "url": "https://files.pythonhosted.org/packages/b4/b5/2e05048ccf022bfa001ef11daf232252d7ae1e58a181a2d40a47d5f95c5d/collective.hostout-1.0a3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a4": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: Buildout",
                "Topic :: Utilities"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://svn.plone.org/svn/collective/collective.hostout",
            "keywords": "buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://svn.plone.org/svn/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/1.0a4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "standardized deployment of zc.buildout based applications with Fabric",
            "version": "1.0a4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "de6158db5a7e524f2445fed82442ae25",
                    "sha256": "e2e6a33842ac44e8f8c58cf28dff56e53d7a9ac96b880f609d6f8f94142b7644"
                },
                "downloads": -1,
                "filename": "collective.hostout-1.0a4.tar.gz",
                "has_sig": false,
                "md5_digest": "de6158db5a7e524f2445fed82442ae25",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 47355,
                "upload_time": "2011-01-06T03:14:40",
                "upload_time_iso_8601": "2011-01-06T03:14:40.473732Z",
                "url": "https://files.pythonhosted.org/packages/84/28/f6e19edb9ea6bbe08734a25346cd330c753d533f15cc1889b8c84853a985/collective.hostout-1.0a4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0a5": {
        "info": {
            "author": "Dylan Jay",
            "author_email": "software@pretaweb.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: Buildout",
                "Topic :: Utilities"
            ],
            "description": "Hostout - standardised deployment of buildout_ based applications with Fabric_\n==============================================================================\n\nHostout gives you:\n\n- the ability to configure your Fabric_ commands from within buildout_\n- a framework for integrating different Fabric_ scripts via setup tools packages\n- an out of the box deployment command for buildout_ based applications\n- plugins to integrate deployment further such as  hostout.supervisor_ and \n  hostout.cloud_\n\n\n.. contents::\n\n\nOverview\n********\n\nHostout is a framework for managing remote buildouts via fabric scripts. It\nincludes many helpful built-in commands to package, deploy and bootstrap a\nremote server with based on your local buildout.\n\nHostout is built around two ideas :-\n\n1. Sharing your configuration of deployment for an application in the same\nbuildout_ you share with your developers in a team so where and how your applications \nis deployed is automated rather than documentation. \nDeployment then becomes a simple command by any member of the team.\n\n2. Sharing fabric scripts via PyPi so we don't have to reinvent ways\nto deploy or manage hosted applications\n\nIf you are already a user of Fabric and buildout but aren't interested in the built in hostout's built\nin ability to deploy then skip ahead to `Integrating Fabric into buildout`_.\n\nYou don't need to learn Fabric_ to use hostout but you will need to learn buildout_.\nThe good news is that many buildouts and snippets already exist for building django,\npylons, pyramid, plone, zope, varnish, apache, haproxy or whichever server side\ntechnology you want to deploy.\n\n\nTo Contribute\n*************\n\nTo contribute :-\n\n- Code repository: http://github.com/collective/collective.hostout\n- Questions and comments to http://github.com/collective/collective.hostout/issues\n- Report bugs at http://github.com/collective/collective.hostout/issues\n\n\nHostout deploy\n**************\n\nHostout deploy is a built-in Fabric command that packages your buildout and\nany development eggs you might have, copies them to the server, prepares\nthe server to run and then runs buildout remotely for you. This makes it simple\nto deploy your application.\n\nDevelopment buildout\n--------------------\n\nFor example, let's say we had the worlds simplest wsgi application ::\n    \n    from webob import Request, Response\n    \n    def MainFactory(global_config, **local_conf):\n        return MainApplication()\n    \n    class MainApplication(object):\n        \"\"\"An endpoint\"\"\"\n        \n        def __call__(self, environ, start_response):\n            request = Request(environ)\n            response = Response(\"Powered by collective.hostout!\")\n            return response(environ, start_response)\n \nWe keep this is a package in ``src/hellowsgi``.\nWe will create a buildout cfg file called ``base.cfg`` ::\n\n    [buildout]\n    parts = demo pasterini\n    develop =\n      src/hellowsgi\n    \n    [demo]\n    recipe=zc.recipe.egg\n    eggs =\n        PasteScript\n        hellowsgi    \n    \n    [pasterini]\n    recipe = collective.recipe.template\n    output = parts/demo/paster.ini\n    port = 8080\n    input = inline:\n        [server:main]\n        use = egg:Paste#http\n        host = 0.0.0.0\n        port = ${:port}\n        \n        [pipeline:main]\n        pipeline =\n            app\n        \n        [app:app]\n        use = egg:hellowsgi#main\n\nOnce we bootstrap and build this::\n\n  $> python bootstrap.py -c base.cfg\n  $> bin/buildout -c base.cfg\n  \nwe have a working wsgi app if you run ::\n\n  $> bin/paster serve parts/demo/paster.ini\n  \nProduction buildout\n-------------------\n\nNext you will create a \"production buildout\" which extends your base.cfg.\nThis might contain parts to install webservers, databases, caching servers etc.\n\nOur prod.cfg is very simple ::\n\n  [buildout]\n  extends = base.cfg\n  parts += supervisor\n  \n  [supervisor]\n  recipe=collective.recipe.supervisor\n  programs=\n    10 demo ${buildout:directory}/bin/paster [serve ${pasterini:outout}] ${buildout:directory} true\n\n  [pasterini]\n  port = 80\n\n\nDeployment buildout\n-------------------\n\nNow create a 3rd buildout file, called ``buildout.cfg``. This will be our development/deployment\nbuildout ::\n\n    [buildout]\n    extends = base.cfg\n    parts += host1\n     \n    [host1]\n    recipe = collective.hostout\n    host = myhost.com\n    hostos = ubuntu\n    user = myusername\n    path = /var/buildout/demo\n    buildout = prod.cfg\n    post-commands = bin/supervisord\n    \nThis buildout part will install a script which will deploy prod.cfg\nalong with hellowsgi to remote path /var/buildout/demo on our server myhost.com ::\n\n  $> bin/buildout\n  Develop: '.../example'\n  Uninstalling host1.\n  Installing demo.\n  Installing host1.\n\nAs part of the buildout process hostout will automatically determine the\nversions of all the eggs in your development buildout in a file\ncalled ``hostoutversions.cfg`` and will pin them for\nyou during deployment. This ensures that the production buildout will\nbe running the same software as you have tested locally. Remember to\nmanually version pin any additional eggs you use in your ``prod.cfg``\nas these will not be pinned for you.\n\nRunning hostout deploy for the first time\n-----------------------------------------\n\nThe ``bin/hostout`` command takes three kinds of parameters, ::\n\n hostout [hostname(s)] [commands] [command arguments]\n \nin our case we will run ::\n\n $> bin/hostout host1 deploy\n \nThe first thing will do is ask you your password and attempt to login in to your\nserver. It will then look for ``/var/buildout/demo/bin/buildout`` and when it doesn't\nfind it it will automatically run another hostout command called ``bootstrap``.\n\nBootstrap is further broken down into three commands, bootstrap_users,\nbootstrap_python and bootstrap_buildout. These will create an additional buildout-user\nto build and run your application, install basic system packages needed to\nrun buildout and install buildout into your remote path. It will attempt to\ndetect which version of linux your server is running to os python, but if this\nfails it will attempt to compile python from source. The version of python used\nwill match the major version of python which your development buildout uses.\n\nDeploying and re-deploying\n--------------------------\n\nOnce hostout bootstrap has ensured a working remote buildout, deployment will continue\nby running the following commands:\n  \n1. \"uploadeggs\": Any develop eggs are released as eggs and uploaded to the server. These will be\nuploaded directly into the buildout's buildout-cache/downloads/dist directory which buildout\nuses to find packages before looking up the package index.\nIt's very important the packages under development work when packaged, ie are capable of\nbeing packaged via \"python setup.py sdist\". A common mistake is when relying on setuptools\nto automatically detect which files should be included but not have the correct\nsetuptools SCM helpers installed if you are using git or hg e.g. for git do \"easy_install setuptools-git\".\nThis will also upload a \"pinned.cfg\" which contains the generated version numbers for\nthe packages under development that have been uploaded.\n\n2. \"uploadbuildout\": The relevant .cfg files and any files/directories in the \"include\"\nparameter are synced to the remote server.\n  \n3. \"buildout\": Upload a final \"pinned.cfg\" which includes the generated development\npackage versions pins + all the versions of all the dependencies of the development\nbuildout from where the system is being deployed from. These discovered pinned versions\nare recorded during the local buildout process by the hostout recipe and recorded in\na local \"hostoutversions.cfg\" file.\nBuildout is then run on the remote production buildout.\n\nIf you continue to develop your application you can run ``hostout deploy`` each time\nand it will only upload the eggs that have changed and buildout will only reinstall\nchanged parts of the buildout.\n\nIn our example above deployment would look something like this ::\n\n    $> bin/hostout host1 deploy\n    running clean\n    ...\n    creating '...example-0.0.0dev_....egg' and adding '...' to it\n    ...\n    Hostout: Running command 'predeploy' from 'collective.hostout'\n    ...\n    Hostout: Running command 'uploadeggs' from 'collective.hostout'\n    Hostout: Preparing eggs for transport\n    Hostout: Develop egg src/demo changed. Releasing with hash ...\n    Hostout: Eggs to transport:\n    \tdemo = 0.0.0dev-...\n    ...\n    Hostout: Running command 'uploadbuildout' from 'collective.hostout'\n    ...\n    Hostout: Running command 'buildout' from 'collective/hostout'\n    ...\n    Hostout: Running command 'postdeploy' from 'collective/hostout'\n    ...\n\nNow if you visit myhost.com you will see your web application shared with the world\n\nOther built-in Commands\n***********************\n\nHostout comes with a set of helpful commands. You can show this list by\nnot specifying any command at all. The list of commands will vary depending\non what fabfiles your hostout references. ::\n\n $> bin/hostout host1\n cmdline is: bin/hostout host1 [host2...] [all] cmd1 [cmd2...] [arg1 arg2...]\n Valid commands are:\n   bootstrap        : Install python and users needed to run buildout\n   bootstrap_python : \n   bootstrap_users  : create buildout and the effective user and allow hostout access\n   buildout         : Run the buildout on the remote server\n   deploy           : predeploy, uploadeggs, uploadbuildout, buildout and then postdeploy\n   postdeploy       : Perform any final plugin tasks\n   predeploy        : Install buildout and its dependencies if needed. Hookpoint for plugins\n   setowners        : Ensure ownership and permissions are correct on buildout and cache\n   run              : Execute cmd on remote as login user\n   sudo             : Execute cmd on remote as root user\n   uploadbuildout   : Upload buildout pinned to local picked versions + uploaded eggs\n   uploadeggs       : Any develop eggs are released as eggs and uploaded to the server\n\n\nThe run command is helpful to run quick remote commands as the buildout user on the remote host ::\n\n $> bin/hostout host1 run pwd\n Hostout: Running command 'run' from collective.hostout\n Logging into the following hosts as root:\n     127.0.0.1\n [127.0.0.1] run: sh -c \"cd /var/host1 && pwd\"\n [127.0.0.1] out: ...\n Done.\n\nWe can also use our login user and password to run quick sudo commands ::\n\n $> bin/hostout host1 sudo cat /etc/hosts \n Hostout: Running command 'sudo' from collective.hostout\n Logging into the following hosts as root:\n     127.0.0.1\n [127.0.0.1] run: sh -c \"cd /var/host1 && cat/etc/hosts\" \n [127.0.0.1] out: ...\n Done.\n\n\nDetailed Hostout Options\n************************\n\nBasic Options\n-------------\n\nhost\n  the IP or hostname of the host to deploy to. by default it will connect to port 22 using ssh.\n  You can override the port by using hostname:port\n\nuser\n  The user which hostout will attempt to login to your host as. Will read a users ssh config to get a default.\n\npassword\n  The password for the login user. If not given then hostout will ask each time.\n  \nidentity-file\n  A public key for the login user.\n\nextends \n  Specifies another part which contains defaults for this hostout\n  \nfabfiles\n  Path to fabric files that contain commands which can then be called from the hostout\n  script. Commands can access hostout options via hostout.options from the fabric environment.\n\n\nDeploy options\n--------------\n\nbuildout\n  The configuration file you which to build on the remote host. Note this doesn't have\n  to be the same .cfg as the hostout section is in but the versions of the eggs will be determined\n  from the buildout with the hostout section in. Defaults to buildout.cfg\n  \n\npath\n  The absolute path on the remote host where the buildout will be created.\n  Defaults to ~${hostout:effective-user}/buildout\n\npre-commands\n  A series of shell commands executed as root before the buildout is run. You can use this \n  to shut down your application. If these commands fail they will be ignored.\n  \npost-commands\n  A series of shell commands executed as root after the buildout is run. You can use this \n  to startup your application. If these commands fail they will be ignored.\n  \nsudo-parts\n  Buildout parts which will be installed after the main buildout has been run. These will be run\n  as root.\n\nparts\n  Runs the buildout with a parts value equal to this\n  \ninclude\n  Additional configuration files or directories needed to run this buildout\n   \nbuildout-cache\n  If you want to override the default location for the buildout-cache on the host\n\npython-version\n  The version of python to install during bootstrapping. Defaults to version\n  used in the local buildout.\n  \nhostos\n  Over which platform specific bootstrap_python command is called. For instance\n  if hostos=redhat, bootstrap_python_redhat will be called to use \"yum\" to\n  install python and other developer tools. This paramter is also used in\n  hostout.cloud_ to pick which VM to create.\n\n\nUsers and logins\n----------------\n\nThe bootstrap_users command is called as part of the bootstrap process which is called if no buildout has\nalready been bootstraped on the remote server. This command will login using \"user\" \n(the user should have sudo rights) and create two additional users and a group which joins them.\n\neffective-user\n  This user will own the buildouts var files. This allows the application to write to database files\n  in the var directory but not be allowed to write to any other part of the buildout code.\n  \nbuildout-user\n  The user which will own the buildout files. During bootstrap this user will be created and be given a ssh key\n  such that hostout can login and run buildout using this account.\n\nbuildout-group\n  A group which will own the buildout files including the var files. This group is created if needed in the bootstrap_users\n  command.\n\nIn addition the private key will be read from the location \"identity_file\" and be used to create \na password-less login for the \"buildout-user\" account by copying the public key into the \"authorized_keys\"\nfile of the buildout_user account. If no file exists for \"identity_file\" a DSA private key is created for you\nin the file \"${hostname}_key\" in the buildout directory.\nDuring a normal deployment all steps are run as the buildout-user so there is no need to use the \"user\" account\nand therefore supply a password. The exception to this is if you specify \"pre-deploy\", \"post-deploy\" or \"sudo-parts\" steps\nor have to bootstrap the server. These require the use of the sudo-capable \"user\" account.\nIf you'd like to share the ability to deploy your application with others, one way to do this is to simply\ncheckin the private key file specified by \"identity_file\" along with your buildout. If you do share deployment, \nremember to pin your eggs in your buildout so the result is consistent no matter where  it is deployed from. One trick \nyou can use to achieve this is to add \"hostoutversions.cfg\" to the \"extends\" of your buildout and commit\n\"hostoutversions.cfg\" to your source control as well.\n\n\n\nIntegrating Fabric into buildout\n********************************\n\nHostout uses fabric files. Fabric is an easy way to write python that\ncalls commands on a host over ssh.\n\n\nHere is a basic fabfile which will echo two variables on the remote server.\n\n\n>>> write('fabfile.py',\"\"\"\n...\n... from fabric import api\n... from fabric.api import run\n...\n... def echo(cmdline1):\n...    option1 = api.env.option1\n...    run(\"echo '%s %s'\" % (option1, cmdline1) )\n...\n... \"\"\")\n\nUsing hostout we can predefine some of the fabric scripts parameters\nas well as install the fabric runner. Each hostout part in your buildout.cfg\nrepresents a connection to a server at a given path.\n\n>>> write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = host1\n...\n... [host1]\n... recipe = collective.hostout\n... host = 127.0.0.1:10022\n... fabfiles = fabfile.py\n... option1 = buildout\n... user = root\n... password = root\n... path = /var/host1\n...\n... \"\"\" )\n\nIf you don't include your password you will be prompted for it later.    \n\nWhen we run buildout a special fabric runner will be installed called bin/hostout\n\n>>> print system('bin/buildout -N')\nInstalling host1.\nGenerated script '/sample-buildout/bin/hostout'.\n\n\n>>> print system('bin/hostout')\ncmdline is: bin/hostout host1 [host2...] [all] cmd1 [cmd2...] [arg1 arg2...]\nValid hosts are: host1\n\nWe can run our fabfile by providing the\n\n - host which refers to the part name in buildout.cfg.\n \n - command which refers to the method name in the fabfile\n \n - any other options we want to pass to the command\n \nNote: We can run multiple commands on one or more hosts using a single commandline.\n\nIn our example\n\n>>> print system('bin/hostout host1 echo \"is cool\"')\nHostout: Running command 'echo' from 'fabfile.py'\nLogging into the following hosts as root:\n    127.0.0.1\n[127.0.0.1] run: echo 'cd /var/host1 && buildout is cool'\n[127.0.0.1] out: ...\nDone.\n\nNote that we combined information from our buildout with\ncommandline paramaters to determine the exact command sent\nto our server.\n\nMaking a hostout plugin\n-----------------------\n\nIt can be very helpful to package up our fabfiles for others to use.\n\nHostout Plugins are eggs with three parts :-\n\n1. Fabric script\n\n2. A zc.buildout recipe to initialise the parameters of the fabric file commands\n\n3. Entry points for both the recipe and the fabric scripts\n\n>>>    entry_points = {'zc.buildout': ['default = hostout.myplugin:Recipe',],\n...                    'fabric': ['fabfile = hostout.myplugin.fabfile']\n...                    },\n\nOnce packaged and released others can add your plugin to their hostout e.g.\n\n>>> write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = host1\n...\n... [host1]\n... recipe = collective.hostout\n... extends = hostout.myplugin\n... param1 = blah\n... \"\"\" )\n\n>>> print system('bin/buildout')\n\n>>> print system('bin/hostout host1')\ncmdline is: bin/hostout host1 [host2...] [all] cmd1 [cmd2...] [arg1 arg2...]\nValid commands are:\n...\n   mycommand        : example of command from hostout.myplugin\n\nYour fabfile can get access parameters passed in the commandline by\ndefining them in your function. e.g. ::\n\n  def mycommand(cmdline_param1, cmdline_param2):\n      pass\n\nYour fabfile commands can override any of the standard hostout commands. For instance\nif you which your plugin to hook into the predeploy process then just add a predeploy\nfunction to your fabfile.py ::\n\n  def predeploy():\n     api.env.superfun()\n\nIt is important when overridding to call the \"superfun\" function so any overridden functions\nare also called.\n\nYou can also call any other hostout functions from your command ::\n\n  def mycommand():\n    api.env.hostout.deploy()\n\nThe options set in the buildout part are available via the Fabric api.env variable and also\nvia \"api.env.hostout.options\".\n\n\n\n\n\n#TODO Example of echo plugin\n\n\nUsing fabric plugins\n--------------------\n\nYou use commands others have made via the extends option.\nName a buildout recipe egg in the extends option and buildout will download\nand merge any fabfiles and other configuration options from that recipe into\nyour current hostout configuration.  The following are examples of built-in\nplugins.  Others are available on pypi.\n\nhostout.cloud_\n  Will create VM instances automatically for you on many popular hosting services such\n  as Amazon, Rackspace and Slicehost\n\nhostout.supervisor_\n  Will stop a supervisor before buildout is run and restart it afterwards. It provides\n  some short commands to quickly manage your applications from your hostout\n  commandline\n\n\n\n\nWhy hostout\n***********\n\nManaging multiple environments can be a real pain and a barrier to development.\nHostout puts all of the settings for all of your environments in an easy-to-manage format.\n\nCompared to\n\nSilverLining\n Hostout allows you to deploy many different kinds of applications instead of just wsgi based\n python apps. Buildout lets you define the installation of almost any kind of application.\n \nPuppet\n TODO\n \nmr.awesome\n TODO\n \nFabric\n TODO\n \nEgg Proxies\n   TODO\n\n \n\nUsing hostout with a python2.4 buildout\n***************************************\n\nHostout itself requires python2.6. However it is possible to use hostout with\na buildout that requires python 2.4 by using buildout's support for different\npython interpretters.\n\n>>> write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = host1\n...\n... [host1]\n... recipe = collective.hostout\n... host = 127.0.0.1:10022\n... python = python26\n...\n... [python26]\n... executable = /path/to/your/python2.6/binary\n...\n... \"\"\" )\n\nor alternatively if you don't want to use your local python you can get\nbuildout to build it for you.\n\n\n>>> write('buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = host1\n...\n... [host1]\n... recipe = collective.hostout\n... host = 127.0.0.1:10022\n... python = python26\n...\n... [python26]\n... recipe = zc.recipe.cmmi\n... url = http://www.python.org/ftp/python/2.6.1/Python-2.6.1.tgz\n... executable = ${buildout:directory}/parts/python/bin/python2.6\n... extra_options=\n...    --enable-unicode=ucs4\n...    --with-threads\n...    --with-readline\n...\n... \"\"\" )\n\n\n\nCredits\n*******\n\nDylan Jay ( software at pretaweb_ dot com )\n\n\n.. _recipe: http://pypi.python.org/pypi/zc.buildout#recipes\n.. _Fabric: http://fabfile.org\n.. _buildout: http://www.buildout.org\n.. _pretaweb: http://www.pretaweb.com\n.. _supervisord: http://supervisord.org/\n.. _libcloud: http://incubator.apache.org/libcloud/\n.. _hostout.cloud: http://pypi.python.org/pypi/hostout.cloud\n.. _hostout.supervisor: http://pypi.python.org/pypi/hostout.supervisor\n\n\n\n\nRelease History\n***************\n\n1.0a5 (2011-03-21)\n------------------\n\n- Made deployment steps more discrete. uploadbuildout, uploadeggs and buildout make sense to be called by themselves.\n  This changes the generated buildout .cfg files. [Dylan Jay]\n- Commands can now return values and have named arguments [Dylan Jay]\n- Changed how overridden commands called base command by introducing env.superfun [Dylan Jay, Adam Terrey]\n- Allow args to the buildout command [Dylan Jay]\n- added asbuildoutuser function decorator [Adam Terrey]\n- added an apt-get update as part of the bootstrap [Adam Terrey]\n- Put command and rsync command [Dylan Jay]\n- fix bootstrap_python to use specific dot version. [Dylan Jay]\n- Made file path names more robust when collecting files for hashing during getHostoutPackage [Adam Terrey]\n- remove buildout as a dep so scripts won't rebuild buildout script [Dylan Jay]\n- Normal buildout should no longer need sudo user, just buildout-user. [Dylan Jay, Adam Terrey]\n- Will bootstrap if no buildoutuser exists rather than ask for password [Adam Terrey]\n- Fixed typos in docs [Jean Jordaan]\n\n\n1.0a4 (2011-01-06)\n------------------\n- using decorators for setting user used for command\n- cleaned up user adding code. renamed to bootstrap_users\n- BUG: two hostout parts with different extends= values won't create two separate command stacks\n  but instead one combined one.\n- BUG: extends was global to all hostouts [Fulvio Casali]\n- merged hostout.ubuntu and hostout.redhat back into core. These are now deprecated.\n- broke bootstrap step into bootstrap_users bootstrap_python bootstrap_buildout\n- will install python from source if no specific os bootstrap_python available.\n- change default buildout path to /var/buildout/PARTNAME\n- hellowsgi demo included in code make for simple tests\n- os specific bootstrap installs much less. only what's needed for basic buildout\n- move to the github collective.\n- new \"shell\" parameter to specify which shell you want commands executed as.\n- improvements to setowners including suid for directories.\n- changes to make more freebsd friendly (Tom Lazar)\n- setowners on every deployment\n\n1.0a3 (unreleased)\n------------------\n- now using entrypoints for fabfiles\n\n1.0a2 (2010-05-27)\n------------------\n- plugins can now call commands in other plugins\n- use buildout-user and buildout-group to increase security of hosted code\n- added setowners command to reset permissions\n- added setaccess command to setup passwordless access\n- moved hostout.ubuntu and hostout.supervisor to seperate plugins\n- introduced initcommand to set user to particular plugin\n- identify-file default to hostname_key so unique to host\n- usign sdist zips instead of eggs to make cross platform\n- python2.6 compatibility fixes\n\n1.0a1 (2010-02-14)\n------------------\n- switched to python2.6 and fabric0.9\n\n\n0.9.4 (2009-01-31)\n------------------\n- commandline changed to allow multsite and arguments\n- mr.developer plugin\n- supervisor plugin\n- documentation clearer and more details\n- ssh tests now working\n- Nice listing of available commands\n\n0.9.3\n-----\n- Fixed how extends works\n- fabric commands have hostout in environment rather than argument\n- new command to reset permissions\n- fab_hosts etc is set for all commands\n- supervisor recipe now uses fabfile\n\n0.9.2 (2009-09-26)\n------------------\n- can extend from recipe directly instead of a buildout part\n- supervisor plugin recipe\n- fixed version pinning for recipes\n\n\n0.9.1 (2009-09-17)\n------------------\n- fix bug in lowering case of package names in versions\n\n\n0.9 (2009-09-15)\n----------------\n- new commandline to allow deploying to multiple hosts at once\n- ability to take defaults from another part using 'extends' option\n- fabfiles option to create your own hostout commands\n- moved hostout cfg generation to deployment time\n- egg releases hash of contents as version numbers and won't be built or uploaded unless changed\n- new parts option to only install specified parts\n- many option names simplified (backwards compatibility maintained)\n- pre-commmands now runs before buildout initialisation\n- buildout now run as 'effective-user' rather than root. pre and post commands still run as root\n- eggs released directly to the download cache rather than a seperate dist directory\n- version recognition only done once for all hostout parts\n\n\n0.1.3 (2009-05-06)\n------------------\n\n- Fixed getting fabfile as a resource when packaged as an egg\n- Allow for specifying extra configuration not in the buildout files\n\n0.1.2 (2009-04-24)\n------------------\n\nInitial release. Basic uploading of eggs and running of remote buildout.",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/collective/collective.hostout",
            "keywords": "buildout,zc.buildout,fabric,deploy,deployment,server,plone,django,host,hosting",
            "license": "GPL",
            "maintainer": null,
            "maintainer_email": null,
            "name": "collective.hostout",
            "package_url": "https://pypi.org/project/collective.hostout/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/collective.hostout/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://github.com/collective/collective.hostout"
            },
            "release_url": "https://pypi.org/project/collective.hostout/1.0a5/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "standardized deployment of zc.buildout based applications with Fabric",
            "version": "1.0a5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4706124,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca90aa0e7ab011caf182ceaa9b47b584",
                    "sha256": "9799bd5846944e729840aee29409621c954cb0f234e3ee7edd14fd5b0706dd36"
                },
                "downloads": -1,
                "filename": "collective.hostout-1.0a5.zip",
                "has_sig": false,
                "md5_digest": "ca90aa0e7ab011caf182ceaa9b47b584",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 70610,
                "upload_time": "2011-03-21T02:42:07",
                "upload_time_iso_8601": "2011-03-21T02:42:07.263885Z",
                "url": "https://files.pythonhosted.org/packages/4f/86/195122ccc831c213c72f075657b1ac0095e32d057ca175c7344148ff77a3/collective.hostout-1.0a5.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}