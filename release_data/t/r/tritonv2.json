{
    "0.2.0": {
        "info": {
            "author": "zhoubohan",
            "author_email": "zhoubohan@baidu.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# tritonv2\nA client library for promote triton official client\n\n## Installation\n\n```bash\npip install tritonv2==0.2.0\n```\n\n## Usage\n\nFirst, you need to create a client object.\n\n```python\nfrom tritonv2.client_factory import TritonClientFactory\nserver_url = \"localhost:8000\"\n\nhttp_client = TritonClientFactory.create_grpc_client(server_url)\nor\nasync with TritonClientFactory.create_http_aio_client(server_url) as http_aio_client\nor \ngrpc_client = TritonClientFactory.create_grpc_client(server_url)\nor\nasync with TritonClientFactory.create_grpc_aio_client(server_url) as grpc_aio_client\n```\nIn addition, you can set retry for grpc client:<br>\n```python\nclient = TritonClientFactory.create_grpc_client(server_url, num_retries=3,max_interval_secs=20,base_interval_secs=0.3)\n```\nfor http client we have default setting:<br>\n```python\nNUMBER_RETRIES = 3\nMAX_INTERVAL_SECS = 20\nBASE_INTERVAL_SECS = 0.3\n```\n\nNow you can easy use the client to send requests to the server.\n\nfor server:\n\n```python\nclient.server_live()\nclient.server_ready()\nclient.server_metadata()\n```\n\nfor model:\n\n```python\nclient.model_metadata(model_name)\nclient.model_config(model_name)\nclient.model_ready(model_name)\nclient.model_statistics(model_name)\n```\n\nfor infer:\n```python\nclient.model_infer(model_name, inputs, model_version, outputs)\nclient.stream_infer(inputs_iterator)\n```\n\nfor repository:\n```python\nclient.repository_index()\nclient.repository_model_load(model_name)\nclient.repository_model_unload(model_name)\n```\n\nfor system shared memory:\n```python\nclient.system_shared_memory_status()\nclient.system_shared_memory_register()\nclient.system_shared_memory_unregister()\n```\n\nfor cuda shared memory:\n```python\nclient.cuda_shared_memory_status()\nclient.cuda_shared_memory_register()\nclient.cuda_shared_memory_unregister()\n```\n\nfor trace setting:\n```python\nclient.trace_setting()\nclient.get_trace_settings()\n```\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://console.cloud.baidu-int.com/devops/icode/repos/baidu/themis/windmill-endpoint/tree/master",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tritonv2",
            "package_url": "https://pypi.org/project/tritonv2/",
            "platform": null,
            "project_url": "https://pypi.org/project/tritonv2/",
            "project_urls": {
                "Homepage": "https://console.cloud.baidu-int.com/devops/icode/repos/baidu/themis/windmill-endpoint/tree/master"
            },
            "release_url": "https://pypi.org/project/tritonv2/0.2.0/",
            "requires_dist": [
                "numpy (>=1.23.5)",
                "tenacity (>=8.1.0)",
                "tritonclient[all] (>=2.25.0)",
                "pydantic (>=1.10.2)"
            ],
            "requires_python": ">=3.7",
            "summary": "project descriptions here",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15911363,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5940495afb4ec9a52c9cf856275de85b",
                    "sha256": "933391b6454dff450b2eef875797b88e39c9cd83970fc141abf2f0ddeaff8277"
                },
                "downloads": -1,
                "filename": "tritonv2-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5940495afb4ec9a52c9cf856275de85b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 14193,
                "upload_time": "2022-11-28T08:27:28",
                "upload_time_iso_8601": "2022-11-28T08:27:28.331150Z",
                "url": "https://files.pythonhosted.org/packages/f0/8f/a21d0eabc0b31ae8ee9e6ccf99c8d9a8050a2f98c90450a565b227fb5576/tritonv2-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "722c719cd13d705554f717add18b3726",
                    "sha256": "a6bc19dd94976a80f745a7345846c3eb64f202305027d681106671cd83eabae0"
                },
                "downloads": -1,
                "filename": "tritonv2-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "722c719cd13d705554f717add18b3726",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 8692,
                "upload_time": "2022-11-28T08:27:30",
                "upload_time_iso_8601": "2022-11-28T08:27:30.777688Z",
                "url": "https://files.pythonhosted.org/packages/63/3d/66bbe83c0f425d43a589ae59ffa45a54c2cdfe903432ab7eae2242b1ee04/tritonv2-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}