{
    "4.1.0": {
        "info": {
            "author": "Carson",
            "author_email": "jackparadise520a@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Traditional)",
                "Natural Language :: English",
                "Operating System :: Microsoft",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
                "Topic :: Scientific/Engineering :: Astronomy",
                "Topic :: Scientific/Engineering :: Hydrology"
            ],
            "description": ".. sectnum::\n\nHistoricalWeatherTW \u53f0\u7063\u6b77\u53f2\u5929\u6c23\u722c\u87f2\n==============================================\n\nThis script is to crawl the information of `\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62 <https://e-service.cwb.gov.tw/HistoryDataQuery/index.jsp>`_ website\n\nData from `\u89c0\u6e2c\u8cc7\u6599\u67e5\u8a62\u7cfb\u7d71 <http://e-service.cwb.gov.tw/HistoryDataQuery/>`_\n\nUsage\n============\n\n#. Prepare `station.csv`_.\n\n    .. note:: station.csv (you can find it from the https://e-service.cwb.gov.tw/wdps/obs/state.htm)\n\n#. run the function of ``collect_weather_tw`` you will see the result!\n\n    .. code-block:: python\n\n        def collect_weather_tw(station_csv_path: Path, output_path,\n                               end_date: datetime.date, begin_date: datetime.date,\n                               query_format,\n                               convert2num):\n\n**You can refer to** `__init__.py`_ **for more help**\n\n    1. Prepare `config.yaml`_ and use this path as input parameter\n    #. run `__init__.py`_\n\nQUICKLY START\n---------------\n\n.. code-block:: python\n\n    from Carson.Tool.HistoricalWeatherTW import collect_weather_tw, QueryFormat\n    from pathlib import Path\n    import datetime\n    import os\n\n    if __name__ == '__main__':\n        STATION_CSV = '../config/CSV/station_test.csv'\n        OUTPUT_PATH = Path(f'../temp/year_result.csv')\n        BEGIN_DATE = datetime.date(2019, 10, 1)\n        END_DATE = datetime.date(2019, 10, 2)\n        QUERY_FORMAT = QueryFormat.DAY\n        CONVERT2NUM = True\n        collect_weather_tw(Path(STATION_CSV), OUTPUT_PATH,\n                           BEGIN_DATE, END_DATE,\n                           QUERY_FORMAT,\n                           CONVERT2NUM)\n        os.startfile(OUTPUT_PATH)\n\nData\n=============\n\n\u8cc7\u6599\u6703\u4ee5\u89c0\u6e2c\u7ad9ID+\u7ad9\u540d\u5132\u5b58\n\n.. note:: There have some non-numeric forms of the original data.\n    Such as indefinite wind direction V, rain track T, etc. the variable of ``CONVERT2NUM`` will replace them with numbers.\n\n\u8cc7\u6599\u6b04\u4f4d\u5982\u4e0b\n--------------------\n\n`ObsTime` \u89c0\u6e2c\u6642\u9593(LST) \n\n`StnPres` \u6e2c\u7ad9\u6c23\u58d3(hPa) \n\n`SeaPres`\t\u6d77\u5e73\u9762\u6c23\u58d3(hPa)\n\n`Temperature` \u6c23\u6eab(\u2103)\n\n`Tddewpoint` \u9732\u9ede\u6eab\u5ea6(\u2103)\n\n`RH` \u76f8\u5c0d\u6ebc\u5ea6(%)\n\n`WS` \u98a8\u901f(m/s)\n\n`WD` \u98a8\u5411(360degree)\n\n`WSGust` \u6700\u5927\u9663\u98a8(m/s)\n\n`WDGust` \u6700\u5927\u9663\u98a8\u98a8\u5411(360degree)\n\n`Precp` \u964d\u6c34\u91cf(mm)\n\n`PrecpHour` \u964d\u6c34\u6642\u6578(hr)\n\n`SunShine` \u65e5\u7167\u6642\u6578(hr)\n\n`GloblRad` \u5168\u5929\u7a7a\u65e5\u5c04\u91cf(MJ/\u33a1)\n\n`Visb` \u80fd\u898b\u5ea6(km)\n\nRelease note\n======================\n\nv4.0\n---------\n    Encapsulated as API\n\nv3.0\n---------\nFeatures:\n\n    - All outputs into a single file. (making it easier to use for SQL)\n    - The output header field will automatically grab the content on the web page (not use hard coding)\n    - You can choose the type of query (year, month, day) according to your needs.\n\nOther:\n\n    - Make the code easier to read.\n\nV2.0\n-------\n\n\u52a0\u5165\u5168\u53f0\u89c0\u6e2c\u7ad9\n\nV1.0\n---------\n\u7b2c\u4e00\u7248\n\n.. _`__init__.py`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/temp/Carson/Tool/HistoricalWeatherTW/__init__.py\n.. _`config.yaml`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/config.yaml\n.. _`station.csv`: https://github.com/CarsonSlovoka/HistoricalWeatherTW/blob/master/Carson/Tool/HistoricalWeatherTW/config/CSV/station.csv\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master/tarball/v4.1.0",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master",
            "keywords": "templates",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "carson-tool.HistoricalWeatherTW",
            "package_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/",
            "platform": "",
            "project_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/",
            "project_urls": {
                "Download": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master/tarball/v4.1.0",
                "Homepage": "https://github.com/CarsonSlovoka/HistoricalWeatherTW/tree/master"
            },
            "release_url": "https://pypi.org/project/carson-tool.HistoricalWeatherTW/4.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Bezier curve simulation (including reductions the dimension from 3 to 2)",
            "version": "4.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 6587547,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4793c54c0819de855b9fa1df2f4247b4",
                    "sha256": "014a9591196ee7481a9958812742d4a01bc74ddb91fe00ced2b356263e07e536"
                },
                "downloads": -1,
                "filename": "carson-tool.HistoricalWeatherTW-4.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4793c54c0819de855b9fa1df2f4247b4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6776,
                "upload_time": "2020-02-07T09:30:32",
                "upload_time_iso_8601": "2020-02-07T09:30:32.681037Z",
                "url": "https://files.pythonhosted.org/packages/e2/4d/fa7433a8cb20840f67fc068d968fffa4406c43a93af47a1b8fa06c2c7d34/carson-tool.HistoricalWeatherTW-4.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}