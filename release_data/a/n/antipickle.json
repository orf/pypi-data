{
    "0.1.0": {
        "info": {
            "author": null,
            "author_email": "Alex Rogozhnikov <find.on@my.personal.blog>",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "\n[![PyPI - Version](https://img.shields.io/pypi/v/antipickle.svg)](https://pypi.org/project/antipickle)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/antipickle.svg)](https://pypi.org/project/antipickle)\n\n-----\n\n# antipickle\n\n\n**when you want to use pickle, but you know you shouldn't**\n\nWhy? Because pickle isn't the right way to persist or share data, and we all know that.\n\nWhen it comes to practice, it takes time and effort to substitute pickle. <br />\n'Hmm, I can use json here. Or messagepack' &mdash; I thought on many occasions, and usually was wrong.\n\nSomething small but annoying was in the way: `datetime` that can't be stored or `np.array` that serializers don't know how to deal with. \nOr `set`, or even `bytes`. Or non-string key in the dictionary.\n\nAt this point I either had to give up and pickle it \nor allocate time on figuring out 'how do I make this storable'. \n\n`antipickle` helps me in avoiding this dilemma. \n\n\n`antipickle` is **restricted, safe, persistent, and platform-independent pickle**. It is convenient:\n```python\nimport antipickle\nantipickle.dump(data, 'data.antipickle')\nantipickle.dump(data, 's3://mybucket/data.antipickle')     # stores in s3 \nantipickle.dump(data, 's3://mybucket/data.antipickle.gz')  # will additionally gzip\n\n\nloaded_date = antipickle.load('s3://mybucket/data.antipickle.gz') # or local file\n```\n\n\n<!---\n\n**Table of Contents**\n\n- [Installation](#installation)\n- [License](#license)\n- [Comparison](#Comparison)\n\n--->\n\n## Installation\n\n```console\npip install antipickle\n```\n\nTo download/upload from s3: `pip install s3fs`.\n\n\n## Batteries included:\n\n`antipickle` supports python pieces commonly used for computations:\n\n- `bytes`, `str`, `int`, `float`, `complex`, `bool`, and `None`\n- `list`, `tuple`, `set` (all of them are stored as different entities)\n- `dict` (including integer keys and `tuple` keys)\n- `numpy` arrays (native `.npy` format used; `dtype=O` not supported)\n- `pandas` series and dataframe (using parquet serialization via `pyarrow`)\n- Any tree-formed structure of the above (no loops allowed)\n\nConfigurable support: `dataclasses` and `pydantic` classes.\n\n## What is it for\n\nLet's set up expectation bar:\n\n- `antipickle` is not super-compact, but it is quite ok\n- `antipickle` is not fast, but isn't slow either\n- `antipickle` is restricted, it wasn't designed to serialize just anything, it focuses on common types and cases for data people\n\n\nAt the same time:\n\n- `antipickle` is safe\n- `antipickle` is persistent\n- `antipickle` is very convenient\n- `antipickle` is easy to extend \n\n\n\n## When to (not) use pickle\n\n`Pickle` is a (de)serialization mechanism designed for interprocess communication or as a temporary storage. \n`pickle` has a good tradeoff of space- and time- efficiency and can serialize almost anything, including graphs with cycles.\n\nName `pickle` suggests you could use it for long-term preservation of data, but that's not true:\n`pickle`'s serialization is tied to an internal object representation, which is not guaranteed \nto be preserved in the next release (or even on a different OS).\nDevelopers of some packages (notably `scikit-learn`) provide some guarantees about being able to parse models \nthat were saved with previous 1-2 minor package releases. \n\nSecond, `pickle` is insecure. And unreadable. And pickles can be large. \nDuring unpickling they can do anything python can, i.e. anything at all.\nSo python docs [say](https://docs.python.org/3/library/pickle.html): `Only unpickle data you trust!`.\n\nThat said, `pickle` is extremely convenient and simple to use, and works in a short-term for many cases, \nso we all (python users) kinda doing that wrong pickling thing from time to time, because of convenience.\nAnd because very few of us are ready to spend time on figuring out proper serialization.\n\n## License\n\n`antipickle` is distributed under the terms of the [MIT](https://spdx.org/licenses/MIT.html) license.\n\n## Other\n\n`antipickle` builds upon `python-messagepack` (the only dependency) and supports all maintained python versions (Python 3.7+)\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "antipickle",
            "package_url": "https://pypi.org/project/antipickle/",
            "platform": null,
            "project_url": "https://pypi.org/project/antipickle/",
            "project_urls": {
                "Documentation": "https://github.com/arogozhnikov/antipickle#readme",
                "Issues": "https://github.com/arogozhnikov/antipickle/issues",
                "Source": "https://github.com/arogozhnikov/antipickle"
            },
            "release_url": "https://pypi.org/project/antipickle/0.1.0/",
            "requires_dist": [
                "msgpack>=1.0.4"
            ],
            "requires_python": ">=3.7",
            "summary": "Like pickle. But different",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15637434,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "448c856803b7c0d6fc4bc95f92bf1ce2",
                    "sha256": "97e4b2e161cafc38aef759323e42983f9558c5078ef1106c5d68e44f474602ff"
                },
                "downloads": -1,
                "filename": "antipickle-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "448c856803b7c0d6fc4bc95f92bf1ce2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 8732,
                "upload_time": "2022-11-03T07:34:22",
                "upload_time_iso_8601": "2022-11-03T07:34:22.961567Z",
                "url": "https://files.pythonhosted.org/packages/9a/ff/ae5ab5addd8e0ebd5ca012c808602fcb59b64ca545e1d3266820de806a1f/antipickle-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "bf07915d55ca81cb01053f3c092f05ca",
                    "sha256": "87fffbbaec8cd65672859a54098b048075a62af349683cbfdf1b563fccbd5282"
                },
                "downloads": -1,
                "filename": "antipickle-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bf07915d55ca81cb01053f3c092f05ca",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 10944,
                "upload_time": "2022-11-03T07:34:20",
                "upload_time_iso_8601": "2022-11-03T07:34:20.411277Z",
                "url": "https://files.pythonhosted.org/packages/24/70/60b4ec60c02fdae48c809cac2904d16689ac5c98ea636c6558e77998ca39/antipickle-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}