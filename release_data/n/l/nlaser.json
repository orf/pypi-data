{
    "0.0.1": {
        "info": {
            "author": "Andrey Ferubko and Ivan Krylov",
            "author_email": "ferubko1999@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "# NLaser\n\n![PyPI](https://img.shields.io/pypi/v/NLaser?color=orange) ![Python 3.8, 3.9, 3.10](https://img.shields.io/pypi/pyversions/NLaser?color=blueviolet) ![GitHub Pull Requests](https://img.shields.io/github/issues-pr/89605502155/N-PLS?color=blueviolet) ![License](https://img.shields.io/pypi/l/NLaser?color=blueviolet) ![Forks](https://img.shields.io/github/forks/89605502155/NLaser?style=social)\n\n**NLaser** - this module is a Python library for the N-PLS1 regression with L2-regularization.\n\n\n## Installation\n\nInstall the current version with [PyPI](https://pypi.org/project/):\n\n```bash\npip install NLaser\n```\n\nOr from Github:\n```bash\npip install https://github.com/89605502155/N-PLS/main.zip\n```\n\n## Usage\n\nYou can fit your own regression model. n_components - is a number of components of SVD decomposition and a is a parameter of L2-regularization. X_train - is a 3d-array. y_train -is a vector.\n\n```python\nfrom NLaser  import NLaser\n\nmodel=N_PLS(n_components=4, a=0.09)\nmodel.fit(X_train,y_train)\n#components of svd-decomposition\nw_i=model.w_i\nw_k=model.w_k\n#predict\ny_predicted=model.predict(X_test)\n```\n\n## Example\n\nYou can use this library with Scikit-learn library. For example, we can use GridSearchCV.\n\n*If you installed a module from PyPi, you should to import it like this: ``` from N_PLS import N_PLS  ```*\n\n*If from GitHub or source: ``` from N_PLS  import N_PLS  ```*\n\n```python\nfrom NLaser  import NLaser \nfrom sklearn.metrics import mean_squared_error\nfrom sklearn.metrics import r2_score, make_scorer\nimport sklearn\nfrom sklearn.model_selection import GridSearchCV\n\nnpls1=N_PLS()\n#you can use many error metrics\nscoring={'mse': make_scorer(mean_squared_error),'r2':'r2'}\nparametrsNames={'n_components': [4],\n                'a': np.logspace(-25, 25,num = 51)}\n\ngridCought=GridSearchCV(npls1, parametrsNames, cv=5, \n    scoring=scoring,refit='r2',return_train_score=True)\ngridCought.fit(X_train,y_train)\n#errors\nr2_p=gridCought.score(X_test.copy(), y_test.copy())\nmse_cv=gridCought.cv_results_[ \"mean_test_mse\" ]\nmse_c=gridCought.cv_results_[ \"mean_train_mse\" ]\nr2_cv=gridCought.cv_results_[ \"mean_test_r2\" ]\nr2_c=gridCought.cv_results_[ \"mean_train_r2\" ]\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/89605502155/N-PLS/archive/main.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/89605502155/N-PLS",
            "keywords": "",
            "license": "GNU General Public License v3.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "NLaser",
            "package_url": "https://pypi.org/project/NLaser/",
            "platform": null,
            "project_url": "https://pypi.org/project/NLaser/",
            "project_urls": {
                "Download": "https://github.com/89605502155/N-PLS/archive/main.zip",
                "Homepage": "https://github.com/89605502155/N-PLS"
            },
            "release_url": "https://pypi.org/project/NLaser/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "It is a Python library for the N-PLS1 regression with L2-regularization.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15921243,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5e35715d851142eb29c1ce522c4776a7",
                    "sha256": "99c7c474e185e73c480b6d9d307b5b51abe5baa5b04d0af2f7217d3096704e77"
                },
                "downloads": -1,
                "filename": "NLaser-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5e35715d851142eb29c1ce522c4776a7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15701,
                "upload_time": "2022-11-29T00:50:26",
                "upload_time_iso_8601": "2022-11-29T00:50:26.640819Z",
                "url": "https://files.pythonhosted.org/packages/79/e2/0db93482b6c9f3dd116dc50725a875f74c74c60370c8dfd3189005f2f90a/NLaser-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}