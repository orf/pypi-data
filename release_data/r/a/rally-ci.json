{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "rally-ci",
            "package_url": "https://pypi.org/project/rally-ci/",
            "platform": "",
            "project_url": "https://pypi.org/project/rally-ci/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/rally-ci/0.1.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 1615097,
        "urls": [],
        "vulnerabilities": []
    },
    "0.1.1a1": {
        "info": {
            "author": "UNKNOWN",
            "author_email": "UNKNOWN",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "UNKNOWN",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "rally-ci",
            "package_url": "https://pypi.org/project/rally-ci/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/rally-ci/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "UNKNOWN"
            },
            "release_url": "https://pypi.org/project/rally-ci/0.1.1a1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "UNKNOWN",
            "version": "0.1.1a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 1615097,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5b98efed4901458ed64973ef7cc3c2f4",
                    "sha256": "6b787fe3cc33991afb28e5699050340f20f69e65b1fe31dc505b234ac9aed4e9"
                },
                "downloads": -1,
                "filename": "rally-ci-0.1.1a1.tar.gz",
                "has_sig": true,
                "md5_digest": "5b98efed4901458ed64973ef7cc3c2f4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 21902,
                "upload_time": "2015-07-01T16:17:18",
                "upload_time_iso_8601": "2015-07-01T16:17:18.614536Z",
                "url": "https://files.pythonhosted.org/packages/d1/56/72174cfd9bbda321abd3e151acd401d2e56cea1c79d59541aeeddd155def/rally-ci-0.1.1a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.dev0": {
        "info": {
            "author": "UNKNOWN",
            "author_email": "UNKNOWN",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "UNKNOWN",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "rally-ci",
            "package_url": "https://pypi.org/project/rally-ci/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/rally-ci/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "UNKNOWN"
            },
            "release_url": "https://pypi.org/project/rally-ci/0.1.dev0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "UNKNOWN",
            "version": "0.1.dev0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 1615097,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "33b4daeed375a1f7f9c86eeb11381498",
                    "sha256": "a0c5ee2f8ef0f63faf230f09ee2f9232bc51f42478694800ae2bad8c13c2972a"
                },
                "downloads": -1,
                "filename": "rally-ci-0.1.dev0.tar.gz",
                "has_sig": true,
                "md5_digest": "33b4daeed375a1f7f9c86eeb11381498",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 16523,
                "upload_time": "2015-06-02T13:36:53",
                "upload_time_iso_8601": "2015-06-02T13:36:53.284697Z",
                "url": "https://files.pythonhosted.org/packages/5c/9d/d316304f5ab424993607e646095136f42fe06688d56a8fa6fb940c238656/rally-ci-0.1.dev0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.dev1": {
        "info": {
            "author": "UNKNOWN",
            "author_email": "UNKNOWN",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "Installing and Usage\n####################\n\nThe simplest way to install rally-ci is pull docker image.\n\nFirst you need to install docker. Installing docker in ubuntu may be done by following::\n\n    $ sudo apt-get update\n    $ sudo apt-get install docker.io\n    $ sudo usermod -a -G docker `id -u -n` # add yourself to docker group\n\nNOTE: re login is required to apply users groups changes and actually use docker.\n\nPull docker image::\n\n    $ docker pull rallyforge/rally-ci\n\nOr you may want to build rally-ci image from source::\n\n    $ cd ~/sources/rally-ci # cd to rally-ci sources on your system\n    $ docker build -t myrally .\n\nCreate volume-directory::\n\n    $ mkdir ~/rally-ci-volume\n\nThis directory will be used to store configuration and logs.\n\nRun in simulation mode\n**********************\n\n::\n\n    $ cd ~/rally-ci-volume\n    $ ln -s /etc/rally-ci/simulation-config.yaml config.yaml\n    $ docker run -p 10022:22 -p 10080:80 -v $HOME/rally-ci-volume:/home/rally rallyforge/rally-ci\n\nNow you can point your browser to http://localhost:10080/ and see a real time status of the service.\n\nRun in production mode\n**********************\n\nYou should create a ssh key and upload it to gerrit (https://review.openstack.org/)::\n\n    $ cd ~/rally-ci-volume\n    $ mkdir ~/.ssh\n    $ ssh-keygen -f .ssh/id_rsa # create ssh keypair\n    $ vi config.yaml # create configuration file\n    $ sudo chown -R 65510 .\n    $ sudo chmod -R g+w .\n    $ cat .ssh/id_rsa.pub # copy and paste this key to gerrit\n\nAnd run container::\n \n    $ docker run -p 10022:22 -p 10080:80 -v $HOME/rally-ci-volume:/home/rally rallyforge/rally-ci\n\nAll logs may be found in ~/rally-ci-volume/. You may want to see the rally-ci logs in real time::\n\n    $ tail -f ~/rally-ci-volume/rally-ci.err.log\n\nThe rally-ci service will listen tcp ports:\n\n* 10022 ssh service (for emergency situations)\n* 10080 web service (jobs logs and realtime status of the service)\n\nYou may expose web and ssh ports to any numbers. Just use \"-p 8080:80\" to expose web to\nport 8080 instead of 10080.\n\nConfiguration file\n##################\n\nStructure of configuration file\n*******************************\n\nConfiguration file is yaml object (dictionary). Each key of this object\nrepresents name of section. Value of this object represents configuraion\nof this section.\n\nNearly all objects contain \"module\" key. The value of this key is plugin\nto be used to do all work.\n\nStream section\n**************\n\nStream is plugin to be used for collecting events.\n\nAvailable stream plugins\n========================\n\nrallyci.streams.gerrit\n----------------------\n\nStandard stream for receiving gerrit events.\n\nSample config::\n\n    stream:\n        module: rallyci.streams.gerrit\n        username: joe\n        hostname: review.openstack.org\n        port: 29418\n\nrallyci.streams.fake\n--------------------\n\nUsed for testing. Will read events from file line by line.\n\nSample config::\n\n    stream:\n        module: rallyci.streams.fake\n        path: /path/to/json/file/with/events.json\n\n\nLoggers section\n***************\n\nLoggers are used to log scripts output.\n\nAvailable loggers\n=================\n\nrallyci.loggers.file\n--------------------\n\nLogs scripts output to local files.\n\nSample config::\n\n    loggers:\n      file:\n        module: rallyci.loggers.logfile\n        path: /store/log/rally-ci/\n\n\nEnvironments section\n********************\n\nEach environment performs some actions and export environment variables.\n\nAvailable environments\n======================\n\nrallyci.environments.event\n--------------------------\n\nThis environment is used to export gerrit event variables to script's env.\n\nSample config::\n\n    module: rallyci.environments.event\n    export-event:\n      GERRIT_PROJECT: change.project\n      GERRIT_REF: patchSet.ref\n\nrallyci.environments.dummy\n--------------------------\n\nSimple environment to export any static variables. Does not have any configuration at this level.\nAll configuration is done in \"jobs\" section (see full config example).\n\nSample config::\n\n      dummy:\n        module: rallyci.environments.dummy\n\n\nNodepools section\n*****************\n\nNodepools are used to manage worker nodes.\n\nAvailable nodepools\n===================\n\nrallyci.nodepools.fair\n----------------------\n\nReturn node with less running jobs.\n\nSample configuraion::\n\n    nodepools:\n      localdocker:\n        module: rallyci.nodepools.fair\n        tasks_per_node: 2\n        nodes:\n          - hostname: worker1.net\n            username: rally\n            port: 33\n          - hostname: worker1.net\n            username: admin\n            key: /home/rally/.ssh/superkey\n\nThe config above has two nodes in pool. First node has non standard ssh port.\n\n\nRunners section\n***************\n\nRunners are used to run scripts on VM's or containers created on nodes from nodepools.\nContainers or VM's are created by runner according to runner's configuration.\n\nAvailable runners\n=================\n\nrallyci.runners.docker\n----------------------\n\nRun jobs in docker containers. Build images from dockerfiles hardcoded in config::\n\n    runners:\n      localdocker:\n        nodepool: localdocker\n        module: rallyci.runners.docker\n        images:\n          ubuntu-dev: |\n            FROM ubuntu:14.04\n            MAINTAINER Sergey Skripnick <sskripnick@mirantis.com>\n            RUN apt-get update && apt-get install python2.7-dev\n            RUN useradd -u 65510 -m rally\n            USER rally\n            WORKDIR /home/rally\n            RUN mkdir openstack && cd openstack && \\\n                git clone git://git.openstack.org/openstack/rally.git\n\n\nrallyci.runners.fake\n--------------------\n\nUsed for testing. Does nothing but sleeping random delays. Always returns success.\n\nrallyci.runners.lxc\n-------------------\n\nWork in progress.\n\nrallyci.runners.virsh\n---------------------\n\nWork in progress.\n\nScripts section\n***************\n\nScripts may be used for running tests and building images.\n\nSample scripts section::\n\n    scripts:\n      git_checkout:\n        interpreter: /bin/bash -xe -s\n        data: |\n          cd $GERRIT_PROJECT && git checkout master && git pull\n          git fetch https://review.openstack.org/$GERRIT_PROJECT $GERRIT_REF\n          git checkout FETCH_HEAD && git rebase master\n      run_tox:\n        interpreter: /bin/bash -xe -s\n        data: |\n          tox -epy27\n\n\nJobs section\n************\n\nJobs definitions. Key is the name of job, value is configuration.\n\nConfiguration consist of following sections:\n\n* envs\n* runner\n\nSample jobs section::\n\n    jobs:\n      py27:\n        envs:\n          - name: event\n          - name: dummy\n            export:\n              RCI_TOXENV: py27\n        runner:\n          name: localdocker\n          image: ubuntu-dev\n          scripts:\n            - git_checkout\n            - run_tox\n\n\nProjects section\n****************\n\nThis sections descibes which jobs run for which projects::\n\n    projects:\n      \"openstack/nova\":\n        jobs:\n          - pep8\n          - py27\n      \"openstack/designate\"\n        jobs:\n          - py34\n          - rally\n\nFull working sample may be found in source code tree in file etc/sample-config.yaml.\n\nExample full configuration::\n\n    ---\n    stream:\n        module: rallyci.streams.gerrit\n        username: CHANGEME\n        hostname: review.openstack.org\n        port: 29418\n\n    loggers:\n      file:\n        module: rallyci.loggers.logfile\n        path: /home/rally/ci-logs/\n\n    environments:\n      event:\n        module: rallyci.environments.event\n        export-event:\n          GERRIT_PROJECT: change.project\n          GERRIT_REF: patchSet.ref\n      dummy:\n        module: rallyci.environments.dummy\n\n    nodepools:\n      localdocker:\n        module: rallyci.nodepools.fair\n        tasks_per_node: 2\n        nodes:\n          - hostname: localhost\n\n    runners:\n      localdocker:\n        nodepool: localdocker\n        module: rallyci.runners.docker\n        images:\n          ubuntu-dev: |\n            FROM ubuntu:14.04\n            MAINTAINER Sergey Skripnick <sskripnick@mirantis.com>\n            RUN apt-get update\n            RUN apt-get -y install git python2.7 bash-completion python-dev libffi-dev \\\n            libxml2-dev libxslt1-dev libssl-dev libpq-dev\n            RUN apt-get -y install python-pip\n            RUN pip install tox==1.6\n            RUN useradd -u 65510 -m rally\n            USER rally\n            WORKDIR /home/rally\n            RUN git config --global user.email \"rally-ci@mirantis.com\" && \\\n                git config --global user.name \"Mirantis Rally CI\"\n            RUN mkdir openstack && cd openstack && \\\n                git clone git://git.openstack.org/openstack/rally.git\n\n    scripts:\n      git_checkout:\n        interpreter: /bin/bash -xe -s\n        data: |\n          env\n          cd $GERRIT_PROJECT && git checkout master && git pull\n          git fetch https://review.openstack.org/$GERRIT_PROJECT $GERRIT_REF\n          git checkout FETCH_HEAD && git rebase master || true\n          git clean -fxd -e .tox -e *.egg-info\n          git diff --name-only master\n      tox:\n        interpreter: /bin/bash -xe -s\n        data:\n          cd $GERRIT_PROJECT && tox -e$RCI_TOXENV\n\n    jobs:\n      py27:\n        envs:\n          - name: event\n          - name: dummy\n            export:\n              RCI_TOXENV: py27\n        runner:\n          name: localdocker\n          image: ubuntu-dev\n          scripts:\n            - git_checkout\n            - tox\n\n    projects:\n      \"openstack/rally\":\n        jobs:\n         - py27\n\nThe configuration above will run tox -epy27 on each patch in openstack/rally.\n",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "UNKNOWN",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "rally-ci",
            "package_url": "https://pypi.org/project/rally-ci/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/rally-ci/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "UNKNOWN"
            },
            "release_url": "https://pypi.org/project/rally-ci/0.1.dev1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "UNKNOWN",
            "version": "0.1.dev1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 1615097,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f7313c55f579f72813ffcd6aa8521ef",
                    "sha256": "6912860d6098a6591703670fb3b32866b921a6df47dfe0ad9ec258207faf5aa6"
                },
                "downloads": -1,
                "filename": "rally-ci-0.1.dev1.tar.gz",
                "has_sig": true,
                "md5_digest": "6f7313c55f579f72813ffcd6aa8521ef",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 18981,
                "upload_time": "2015-07-01T12:22:04",
                "upload_time_iso_8601": "2015-07-01T12:22:04.625226Z",
                "url": "https://files.pythonhosted.org/packages/9e/ee/208e850133c3efc7d16b5eec3fcc5d77000ba03490cf0ac6b7b45d2fbdbd/rally-ci-0.1.dev1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}