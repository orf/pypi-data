{
    "10.0": {
        "info": {
            "author": "Sayad Pervez",
            "author_email": "pervez2504@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# ConsoleColorText Max-Loaded\r\n#### This module is used to change the color of text and background of the python console designed for *Windows Operating System.*\r\n___\r\n___\r\n# What's New ?\r\n### => Easier importing of functions.\r\n### => Functions updated to work with Dictionaries.\r\n### => 4 more functions added.\r\n### => Automatic package installation for unavailable libraries.\r\n### => Arguements are Case Insensitive.\r\n### => Increased error tolerance.\r\n___\r\n___\r\n# Importing Functions:\r\n#### `from ConsoleColorText import *` statement is used to import all necessary functions from Color_Console module.\r\n### This version contains the following functions which we'll be discussing shortly.\r\n#### $ __color()__\r\n#### $ __ctext()__\r\n#### $ __transTime()__\r\n#### $ __hackerMan()__\r\n#### $ __help()__\r\n___\r\n___\r\n# Color()\r\n#### **`color()`** is used to change the text color and background color of the whole python console.\r\n#### **`color ( text = \"bright white\" , bg = \"black\" , delay = 0.67 ,repeat = -1 , dict = {} )`** is the function header.\r\n#### **`text`** is used to specify the color of the text.\r\n#### **`bg`** is used to specify the color of the background.\r\n## The permitted colors are:\r\n#### 1.  *Black*\r\n#### 2.  *Blue*\r\n#### 3.  *Green*\r\n#### 4.  *Aqua*\r\n#### 5.  *Red*\r\n#### 6.  *Purple*\r\n#### 7.  *Yellow*\r\n#### 8.  *White*\r\n#### 9.  *Gray*\r\n#### 10. *Light Blue*\r\n#### 11. *Light Green*\r\n#### 12. *Light Aqua*\r\n#### 13. *Light Red*\r\n#### 14. *Light Purple*\r\n#### 15. *Light Yellow*\r\n#### 16. *Bright White*\r\n\r\n### **None of the arguements are case sensitive. Text color and background color cannot be the same.**\r\n___\r\n#### If a _**list**_ of permitted colors is passed to either **`text`** or **`bg`**, the colors change in accordance to their position in the list.\r\n```python\r\n# Constant background color with altering text color:\r\nli = [ 'black','bright white' ]\r\nprint(\"Hello World !\")\r\ncolor( li , 'aqua' )\r\n# This will make the text color of the console change to black and bright white alternatively and indefinitely\r\n# with it's background color set to aqua\r\n```\r\n```python\r\n# Constant text color with altering background color:\r\nli = [ 'black','bright white' ]\r\nprint(\"Hello World !\")\r\ncolor( 'aqua' , li )\r\n# This will make the background color of the console change to black and bright white alternatively and indefinitely\r\n# with it's text color set to aqua\r\n```\r\n___\r\n#### **`delay`** parameter is used to specify the time between two transitions. The **default value is set to 0.67 seconds** which can be changed.\r\n```python\r\n# Changing color transition time:\r\nli = [ 'black','bright white' ]\r\nprint(\"Hello World !\")\r\ncolor( 'aqua' , li , delay = 1 )\r\n# and hence the color transition would take 1 second.\r\n```\r\n___\r\n#### **`repeat`** parameter is used to specify the number of times the list of colors has to be repeated. The **default value is -1** which makes the color transition occur indefinitely. Note that if color transition is set to indefinite, the program will not move further ( The code next to it will not be executed ! ). **`repeat`** parameter would allow the code to proceed once the list is iterated the given number of times. Time taken for this is dependent on both **`delay`** and **`repeat`**.\r\n```python\r\n# repeating the color transition only certain number of times\r\nli = [ 'black','bright white' ]\r\nprint(\"Hello World !\")\r\ncolor( 'aqua' , li , delay = 1 , repeat = 2 )\r\n# The transition will be repeated two times with a time delay of 1 second each and hence would take 4 seconds\r\n# since the number of elements in the list is 2.\r\n```\r\n#### Total time required to complete transition can be found out by using **`transTime()`** which will be explained later.\r\n#### **`delay`** and **`repeat`** are optional parameters.\r\n___\r\n\r\n#### When the parameters of both \"text\" and \"bg\" are lists, the color transition is as follows:\r\n```python\r\n# When both text and bg recieve arguements that are of list type,\r\n# the corresponding text and bg colors are used as they are iterated\r\nprint(\"Hello World\")\r\ncolor( ['green','blue'] , ['black','bright white'] )\r\n# This would result in a console with the following text and bg color which repeats indefinitely\r\n# green text color with black as bg color\r\n# blue text color with bright white as bg color\r\n```\r\n#### **Note that if the size of two lists are different, an error will be thrown.**\r\n___\r\n#### A dictionary with valid color combinations can be passed to **`dict`** to get an output similar to the previous one using two lists.\r\n```python\r\n# Passing dictionary to color()\r\nDictionary={\r\n'green' : 'black' ,\r\n'blue' : 'bright white'\r\n}\r\ncolor( dict = Dictionary )\r\n# This output is similar to the previous one.\r\n```\r\n#### **Limitations in passing a dictionary:**\r\n#### A color in the key cannot be present in the value. So Don't mix the keys and values in a dictionary.\r\n#### _Reminder:_ *`dictionary ={ key1 : value1 , key2 : value2 }`* _Dictionary consists of key:value pairs_\r\n```python\r\nDictionary={\r\n'green' : 'black' ,\r\n'black' : 'bright white'\r\n}\r\nprint(\"Hello World\")\r\ncolor( dict=Dictionary )\r\n# This code would throw an error since 'black' is both in keys and values of the dictionary.\r\n```\r\n```python\r\nDictionary={\r\n'red'   : 'bright white',\r\n'black' : 'bright white'\r\n}\r\nprint(\"Hello World\")\r\ncolor( dict=Dictionary )\r\n# This code wouldn't throw an error since 'bright white' is only values and not in keys of the dictionary.\r\n```\r\n### **Thus repetition of colors is allowed but intermixing of keys and values of a dictionary are not permitted!**\r\n___\r\n___\r\n# ctext()\r\n#### **`ctext()`** is used to change the text and background color of only one line in the python console.\r\n#### **`ctext( String , text = \"white\" , bg = \"black\" , delay = 0 , repeat = 1 , dict = {} )`** is the function header.\r\n#### **`String`** is used to send the required string to be colored.\r\n#### **`text`** is used to specify the color of the text.\r\n#### **`bg`** is used to specify the color of the background.\r\n___\r\n## The permitted colors are:\r\n#### 1.  *Blue*\r\n#### 2.  *Green*\r\n#### 3.  *Red*\r\n#### 4.  *Magenta*\r\n#### 5.  *Yellow*\r\n#### 6.  *White*\r\n#### 7.  *Cyan*\r\n#### 8.  *Black* **only for background**\r\n### **None of the arguements are case sensitive. Text color and background color cannot be the same.**\r\n___\r\n> **Note:**\r\n>     _**`ctext()`** **requires two modules namely** **`colorama` and `termcolor`** **to work.\r\n>     Whenever you run ctext, the presence of these two modules are verified and imported automatically. If absent these two modules are automatically installed via pip. In such a case, good internet connection is recommended. If the installation process fails even in the presence of internet(the program will notify you!), try installing these two modules via pip manually.**_\r\n___\r\n## Similarities between ctext and color:\r\n#### **Parameters like `text`, `bg`, `delay`, `repeat` and `dict` work in a similar manner with slight exceptions which will be discussed later.**\r\n___\r\n## Exceptions:\r\n#### **`String`** parameter takes a string as an arguement and this line alone is printed with different colors as instructed by text and bg parameters. Passing a string alone to **`ctext()`** would be similar to **`print()`** statement.\r\n#### **`String` parameter is a mandatory one and should not be omitted\"**\r\n```python\r\nctext(\"Hello World\",\"Green\",'white') # This would affect only this line unlike color()\r\nctext(\"Hello World\") # This statement is similar to print()\r\n```\r\n___\r\n#### **The permitted colors are different for `color()` and `ctext()` and they were already mentioned above**\r\n___\r\n#### **`delay`** refers to the time between printing consecutive statements in a list. When a list is passed to text or bg, the **`String`** is printed in the respective colors one after the other depending on **`repeat`** parameter. The default value of **`delay`** is set to **0 units** and **`repeat`** is set to **1**\r\n___\r\n___\r\n# transTime()\r\n#### **`transTime`** is used to find the total time required to complete all color transitions. Only after all the transitions are complete, the code following **`color()`** or **`ctext()`** will be executed.\r\n#### **`transTime( n , delay , repeat , print = True )`** is the function header.\r\n#### Either the 'number of colors in the list or dictionary' or 'the list and dictionary itself' can be passed to **`n`**.\r\n#### **`delay`** parameter takes the delay value you are planning to use.\r\n#### **`repeat`** parameter takes the delay value you are planning to use.\r\n#### This function both prints and returns the total transition time. Not using the return value will not throw an error.\r\n#### **`print`** is an optional parameter which is set to True by default. If this is changed to False, **`transTime()`** would only return a value and not print anything on the console.\r\n```python\r\nDictionary = {\r\n'red'   : 'bright white',\r\n'black' : 'bright white'\r\n}\r\nli = ['red' , 'black']\r\nnumber_of_elements = 2\r\ntransTime(Dictionary,1,3)\r\ntransTime(li,1,3)\r\ntransTime(number_of_elements,1,3)\r\n# All this will result in the same output \"Total time required = 6 units\" and return 6\r\ntime = transTime(li,1,3,print=False) # This will only return a value and not print anything else\r\nprint(time) # This would print \"6\"\r\n```\r\n___\r\n___\r\n# hackerMan()\r\n#### This function is added just for fun in case if you wish to look like a hacker amongst your friends.\r\n#### This would make the text color 'green' and background 'black'.\r\n#### This takes no arguements. Just add this function at the beginning of your program !\r\n```python\r\nhackerMan()\r\nprint(\"ipconfig /flushdns\")\r\nprint(\"ping www.google.com\")\r\nprint(\"tracert www.google.com\")\r\nprint(\"bruteForce -library='n10' someone's_mail@gmail.com\")\r\n# All these statements will be printed in green with black background.\r\n```\r\n___\r\n___\r\n# help()\r\n#### **`help()`** will provide you the same information in a python console offline\r\n#### **`help( c = True )`** is the function header.\r\n#### If you use **`help()`** the text and background will start changing automatically based on a predefined instruction of colors after 30 seconds. If you find it disturbing, you can use **`help(False)`** to shut down the color transitions and display instructions in default color.\r\n___\r\n___\r\n#             Developed by SAYAD PERVEZ\r\n#             Email-Id : pervez2504@gmail.com\r\n___\r\n___\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/SayadPervez/Color_Console",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ConsoleColorText",
            "package_url": "https://pypi.org/project/ConsoleColorText/",
            "platform": null,
            "project_url": "https://pypi.org/project/ConsoleColorText/",
            "project_urls": {
                "Homepage": "https://github.com/SayadPervez/Color_Console"
            },
            "release_url": "https://pypi.org/project/ConsoleColorText/10.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Comprehensive Utility Library for changing the color of text and background of a python console.",
            "version": "10.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15919928,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8ea4ccd4a69fa02ecb78540f6c2bd7cb",
                    "sha256": "2845af47876ecd742f06123436513f05432d8bffecabe206c8d4d33ed78ab1c3"
                },
                "downloads": -1,
                "filename": "ConsoleColorText-10.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8ea4ccd4a69fa02ecb78540f6c2bd7cb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11119,
                "upload_time": "2022-11-28T22:42:24",
                "upload_time_iso_8601": "2022-11-28T22:42:24.289219Z",
                "url": "https://files.pythonhosted.org/packages/c2/9d/6a320f4c3c3540a2300f98d4e3f2a92cf280d17e05b919d864d000a04b80/ConsoleColorText-10.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "04a95b95a17281ded8ea2a75e5754989",
                    "sha256": "74779992b373e4ec1a964dd21429d92f5e68105525a5037a9532e5410bd6128f"
                },
                "downloads": -1,
                "filename": "ConsoleColorText-10.0.tar.gz",
                "has_sig": false,
                "md5_digest": "04a95b95a17281ded8ea2a75e5754989",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8331,
                "upload_time": "2022-11-28T22:42:25",
                "upload_time_iso_8601": "2022-11-28T22:42:25.994740Z",
                "url": "https://files.pythonhosted.org/packages/0b/6e/9127c02fc89553ffcf855f6add183b80992eb3163776d5539e88504f4a20/ConsoleColorText-10.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}