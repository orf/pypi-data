{
    "0.1.0": {
        "info": {
            "author": "Austin King",
            "author_email": "ozten@mozilla.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mozilla/PyHawk",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "PyHawk",
            "package_url": "https://pypi.org/project/PyHawk/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyHawk/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/mozilla/PyHawk"
            },
            "release_url": "https://pypi.org/project/PyHawk/0.1.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Python Libraries for HAWK\n==========================\n\nHawk_ is an HTTP authentication scheme using a message authentication code (MAC) algorithm to provide partial HTTP request cryptographic verification.\n\n.. _Hawk: https://github.com/hueniverse/hawk\n\nPyHawk is great for consuming or providing webservices from Python.\n\nUsage (Client Side)\n-------------------\n\nIf you had code that consumed a HAWK authenticated webservice,\nyou could do something like the following\n\n::\n\n    import hawk\n    import requests\n\n    # Hawk is secured with a shared secret\n    credentials = db.lookup_secrets(some_id)\n\n    # Prepare your request headers\n    header = hawk.client.header(url, 'GET', {\n        'credentials': credentials,\n        'ext': 'Yo Yo'})\n\n    # Which goes into Authorization field of HTTP headers\n    headers = [('Authorization', header['field'])]\n    res = requests.get(url, data=params, headers=headers)\n\n    response = { 'headers': res.headers }\n\n    # We can verify we're talking to our trusted server\n    verified = hawk.client.authenticate(response, credentials,\n                                        header['artifacts'],\n                                        {'payload': res.text})\n    if verified:\n        print res.text\n    else:\n        print \"Something fishy going on.\"\n        \nSee `sample_client.py`_ for details.\n\n.. _`sample_client.py`: https://github.com/mozilla/PyHawk/blob/master/sample_client.py\n\nUsage (Server side)\n-------------------\nIf you provide a webservice and want to do authentication via HAWK,\ndo something like the following:\n\n::\n\n\n    import hawk\n\n    # A callback function for looking up credentials\n    def lookup_hawk_credentials(id):\n        # Some collection of secrets\n        return db.lookup(id)\n\n    # req is a Request object from your webserver framework\n    if 'Hawk ' in req.headers['Authorization']:\n        return check_auth_via_hawk(req)\n    else:\n        return failure(req, res)\n\n    def check_auth_via_hawk(req):\n        server = hawk.Server(req, lookup_hawk_credentials)\n\n        # This will raise a hawk.util.HawkException if it fails\n        artifacts = server.authenticate()\n\n        # Sign our response, so clients can trust us\n        auth = server.header(artifacts,\n                                 { 'payload': payload,\n                                   'contentType': 'text/plain' })\n\n        headers = [('Content-Type', 'text/plain'),\n                       ('Server-Authorization', auth)]\n\n        start_response(status, headers)\n\n        return payload\n        \nSee `sample_server.py`_ for details.\n\n.. _`sample_server.py`: https://github.com/mozilla/PyHawk/blob/master/sample_client.py\n\n\nStatus\n------\n\nThis is under development, ready for adventurous users.\nThere doesn't appear to be a Python library for HAWK.\nLet me know if there is already a robust library.\n\nDevelopment\n-----------\n\nOptionally use `env` as a virtualenv\n\n::\n\n    virtualenv env\n    source env/bin/activate\n\n\nLocally install source:\n\n::\n\n    python setup.py develop\n\nUnit tests are in `hawk/tests`.\n\n::\n\n    python hawk/tests/test_*.py\n\n\nAdditionally, one can test compatibility:\n\nThe `compatibility/nodejs` directory has a server.js and a client.js (Node code) which are from HAWK's usage.js.\n\nTo test the server, do the following:\n\n1) python sample_server.py\n2) cd compatibility/nodejs/\n3) node client.js\n\nOutput should be \n\n::\n\n    Authenticated Request is 200 (OK)\n    Response validates (OK)\n    Unauthenticated request should 401 - (OK)\n\nNote: the port numbers in test_pyhawk.py and client.js must match.\n\nTo test the client, do the following:\n\n1) cd compatibility/nodejs/\n2) node server.js\n3) cd ../..\n4) python sample_client.py\n\nOutput should be\n\n::\n\n    Response validates (OK)\n\nPlan\n----\n\nIterate on a python library until it can communicate with the test client/server.\n\n1) \u2713 Write Server API\n2) \u2713 Write client API\n3) \u2713 Switch to callback style\n4) Improve code style\n5) Make API elegant\n6) Put a release together\n\nA source for inspiration on 4 and 5 should be macauthlib_, from the Mozilla Services team, which is basically PyHawk, before Hawk existed. (Thanks rfk!)\n\n.. _macauthlib: https://github.com/mozilla-services/macauthlib\n\nStatus\n------\n\nClient and Server APIs are working according to the Node.js implementation. W00t!\n\nPlease file issues for code style, bugs, etc.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 941251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a74b15ab5280c79b260272ac09f763ed",
                    "sha256": "5ef805ce6c71f865866d8b62c3b9cb47d53d658f313db79f37b0948d4123849f"
                },
                "downloads": -1,
                "filename": "PyHawk-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a74b15ab5280c79b260272ac09f763ed",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10412,
                "upload_time": "2013-08-06T17:58:39",
                "upload_time_iso_8601": "2013-08-06T17:58:39.567242Z",
                "url": "https://files.pythonhosted.org/packages/4d/1e/ca243d1b3ab431fd629f51f5bd8d3848f5c9d601d8d37f9bc8214799d2e1/PyHawk-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Austin King",
            "author_email": "ozten@mozilla.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mozilla/PyHawk",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "PyHawk",
            "package_url": "https://pypi.org/project/PyHawk/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyHawk/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/mozilla/PyHawk"
            },
            "release_url": "https://pypi.org/project/PyHawk/0.1.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Python Libraries for HAWK\n==========================\n\nHawk_ is an HTTP authentication scheme using a message authentication code (MAC) algorithm to provide partial HTTP request cryptographic verification.\n\n.. _Hawk: https://github.com/hueniverse/hawk\n\nPyHawk is great for consuming or providing webservices from Python.\n\nUsage (Client Side)\n-------------------\n\nIf you had code that consumed a HAWK authenticated webservice,\nyou could do something like the following\n\n::\n\n    import hawk\n    import requests\n\n    # Hawk is secured with a shared secret\n    credentials = db.lookup_secrets(some_id)\n\n    # Prepare your request headers\n    header = hawk.client.header(url, 'GET', {\n        'credentials': credentials,\n        'ext': 'Yo Yo'})\n\n    # Which goes into Authorization field of HTTP headers\n    headers = [('Authorization', header['field'])]\n    res = requests.get(url, data=params, headers=headers)\n\n    response = { 'headers': res.headers }\n\n    # We can verify we're talking to our trusted server\n    verified = hawk.client.authenticate(response, credentials,\n                                        header['artifacts'],\n                                        {'payload': res.text})\n    if verified:\n        print res.text\n    else:\n        print \"Something fishy going on.\"\n        \nSee `sample_client.py`_ for details.\n\n.. _`sample_client.py`: https://github.com/mozilla/PyHawk/blob/master/sample_client.py\n\nUsage (Server side)\n-------------------\nIf you provide a webservice and want to do authentication via HAWK,\ndo something like the following:\n\n::\n\n\n    import hawk\n\n    # A callback function for looking up credentials\n    def lookup_hawk_credentials(id):\n        # Some collection of secrets\n        return db.lookup(id)\n\n    # req is a Request object from your webserver framework\n    if 'Hawk ' in req.headers['Authorization']:\n        return check_auth_via_hawk(req)\n    else:\n        return failure(req, res)\n\n    def check_auth_via_hawk(req):\n        server = hawk.Server(req, lookup_hawk_credentials)\n\n        # This will raise a hawk.util.HawkException if it fails\n        artifacts = server.authenticate()\n\n        # Sign our response, so clients can trust us\n        auth = server.header(artifacts,\n                                 { 'payload': payload,\n                                   'contentType': 'text/plain' })\n\n        headers = [('Content-Type', 'text/plain'),\n                       ('Server-Authorization', auth)]\n\n        start_response(status, headers)\n\n        return payload\n        \nSee `sample_server.py`_ for details.\n\n.. _`sample_server.py`: https://github.com/mozilla/PyHawk/blob/master/sample_client.py\n\n\nStatus\n------\n\nThis is under development, ready for adventurous users.\nThere doesn't appear to be a Python library for HAWK.\nLet me know if there is already a robust library.\n\nDevelopment\n-----------\n\nOptionally use `env` as a virtualenv\n\n::\n\n    virtualenv env\n    source env/bin/activate\n\n\nLocally install source:\n\n::\n\n    python setup.py develop\n\nUnit tests are in `hawk/tests`.\n\n::\n\n    python hawk/tests/test_*.py\n\n\nAdditionally, one can test compatibility:\n\nThe `compatibility/nodejs` directory has a server.js and a client.js (Node code) which are from HAWK's usage.js.\n\nTo test the server, do the following:\n\n1) python sample_server.py\n2) cd compatibility/nodejs/\n3) node client.js\n\nOutput should be \n\n::\n\n    Authenticated Request is 200 (OK)\n    Response validates (OK)\n    Unauthenticated request should 401 - (OK)\n\nNote: the port numbers in test_pyhawk.py and client.js must match.\n\nTo test the client, do the following:\n\n1) cd compatibility/nodejs/\n2) node server.js\n3) cd ../..\n4) python sample_client.py\n\nOutput should be\n\n::\n\n    Response validates (OK)\n\nPlan\n----\n\nIterate on a python library until it can communicate with the test client/server.\n\n1) \u2713 Write Server API\n2) \u2713 Write client API\n3) \u2713 Switch to callback style\n4) Improve code style\n5) Make API elegant\n6) Put a release together\n\nA source for inspiration on 4 and 5 should be macauthlib_, from the Mozilla Services team, which is basically PyHawk, before Hawk existed. (Thanks rfk!)\n\n.. _macauthlib: https://github.com/mozilla-services/macauthlib\n\nStatus\n------\n\nClient and Server APIs are working according to the Node.js implementation. W00t!\n\nPlease file issues for code style, bugs, etc.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 941251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32335c80631a13eee7d706a9a73bc6d1",
                    "sha256": "f14cfa6d57011a78ebdf8028272646d2d6c2bd1b26b1c538fdf4d0d038195024"
                },
                "downloads": -1,
                "filename": "PyHawk-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "32335c80631a13eee7d706a9a73bc6d1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13039,
                "upload_time": "2013-08-06T18:07:04",
                "upload_time_iso_8601": "2013-08-06T18:07:04.529289Z",
                "url": "https://files.pythonhosted.org/packages/30/0c/0446f5620c893632bc8be753797a8cc529abd9f0efd9a2c5bd6fc16f98e2/PyHawk-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Austin King",
            "author_email": "ozten@mozilla.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mozilla/PyHawk",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "PyHawk",
            "package_url": "https://pypi.org/project/PyHawk/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyHawk/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/mozilla/PyHawk"
            },
            "release_url": "https://pypi.org/project/PyHawk/0.1.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Python libraries for the 'HAWK' HTTP authentication scheme",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 941251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "25e54d40d4e51f1ddcdd43a19d5ff263",
                    "sha256": "156564b01799e91657c72d3869dc72c7aa88b4153f291d83a991ffdcf4cecc20"
                },
                "downloads": -1,
                "filename": "PyHawk-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "25e54d40d4e51f1ddcdd43a19d5ff263",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12415,
                "upload_time": "2013-08-06T19:11:39",
                "upload_time_iso_8601": "2013-08-06T19:11:39.938503Z",
                "url": "https://files.pythonhosted.org/packages/2e/8d/1401f6c4d8aa95dceffd34fadc03c501a3d44e08990b5142398c99376a80/PyHawk-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Austin King",
            "author_email": "ozten@mozilla.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 2.6",
                "Programming Language :: Python :: 2.7",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "Python libraries for the 'HAWK' HTTP authentication scheme\n\nHawk is an HTTP authentication scheme using a message authentication code\n(MAC) algorithm to provide partial HTTP request cryptographic verification.\n\n https://github.com/hueniverse/hawk\n\nPyHawk is great for consuming or providing webservices from Python.",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mozilla/PyHawk",
            "keywords": null,
            "license": "UNKNOWN",
            "maintainer": null,
            "maintainer_email": null,
            "name": "PyHawk",
            "package_url": "https://pypi.org/project/PyHawk/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/PyHawk/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "https://github.com/mozilla/PyHawk"
            },
            "release_url": "https://pypi.org/project/PyHawk/0.1.3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Python libraries for the 'HAWK' HTTP authentication scheme",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 941251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0017be5e0c9d585d24c2fe8ab6ad1895",
                    "sha256": "5e9c25030d7bd0a3197031b1264aa129ca136f8d643bdef5759dc76409c1649b"
                },
                "downloads": -1,
                "filename": "PyHawk-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "0017be5e0c9d585d24c2fe8ab6ad1895",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12430,
                "upload_time": "2013-12-10T19:37:16",
                "upload_time_iso_8601": "2013-12-10T19:37:16.560999Z",
                "url": "https://files.pythonhosted.org/packages/3a/e2/b12d91ed22f9f447bac3fe15bb8ba26c923fecab522ffad337c14988d6e4/PyHawk-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}