{
    "0.1.0": {
        "info": {
            "author": "imacat",
            "author_email": "imacat@mail.imacat.idv.tw",
            "bugtrack_url": null,
            "classifiers": [
                "Framework :: Flask",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: System :: Systems Administration :: Authentication/Directory"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imacat/flask-digest-auth",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "flask-digest-auth",
            "package_url": "https://pypi.org/project/flask-digest-auth/",
            "platform": null,
            "project_url": "https://pypi.org/project/flask-digest-auth/",
            "project_urls": {
                "Bug Tracker": "https://github.com/imacat/flask-digest-auth/issues",
                "Homepage": "https://github.com/imacat/flask-digest-auth"
            },
            "release_url": "https://pypi.org/project/flask-digest-auth/0.1.0/",
            "requires_dist": [
                "flask",
                "flask-login ; extra == 'flask_login'"
            ],
            "requires_python": ">=3.10",
            "summary": "The Flask HTTP Digest Authentication project.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15901014,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "226c1ad99266c63a5991695af8694fd8",
                    "sha256": "8ab9176fb7c07b79514e5eace15b99ad076392cc23efdcb125ac50ed6a66daa1"
                },
                "downloads": -1,
                "filename": "flask_digest_auth-0.1.0-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "226c1ad99266c63a5991695af8694fd8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 14626,
                "upload_time": "2022-11-23T21:16:15",
                "upload_time_iso_8601": "2022-11-23T21:16:15.765976Z",
                "url": "https://files.pythonhosted.org/packages/e5/f8/2ce8c24a9503cbd6194470d1d99608cad00a1bcc45a9b89e4c7296fa270f/flask_digest_auth-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6556916fe6e8a958520c58be4591f43e",
                    "sha256": "ac082956a799699f54043d13ee0ebc89106337299f21c5df291073c13e1b6444"
                },
                "downloads": -1,
                "filename": "flask-digest-auth-0.1.0.tar.gz",
                "has_sig": true,
                "md5_digest": "6556916fe6e8a958520c58be4591f43e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 14158,
                "upload_time": "2022-11-23T21:16:17",
                "upload_time_iso_8601": "2022-11-23T21:16:17.329074Z",
                "url": "https://files.pythonhosted.org/packages/45/91/af1440cdbfba07fde94bdfe6cfe03f7a6043e90cde7abdaf0cdec131e950/flask-digest-auth-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "imacat",
            "author_email": "imacat@mail.imacat.idv.tw",
            "bugtrack_url": null,
            "classifiers": [
                "Framework :: Flask",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: System :: Systems Administration :: Authentication/Directory"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imacat/flask-digest-auth",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "flask-digest-auth",
            "package_url": "https://pypi.org/project/flask-digest-auth/",
            "platform": null,
            "project_url": "https://pypi.org/project/flask-digest-auth/",
            "project_urls": {
                "Bug Tracker": "https://github.com/imacat/flask-digest-auth/issues",
                "Homepage": "https://github.com/imacat/flask-digest-auth"
            },
            "release_url": "https://pypi.org/project/flask-digest-auth/0.1.1/",
            "requires_dist": [
                "flask",
                "flask-login ; extra == 'flask_login'"
            ],
            "requires_python": ">=3.7",
            "summary": "The Flask HTTP Digest Authentication project.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15901014,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d6af48bc290b51f107b83389363b90b8",
                    "sha256": "e57bd0e24897b0372bacd409be4bf012b14e9026686890cf5cffc6fc8ba222e5"
                },
                "downloads": -1,
                "filename": "flask_digest_auth-0.1.1-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "d6af48bc290b51f107b83389363b90b8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 14626,
                "upload_time": "2022-11-23T21:45:26",
                "upload_time_iso_8601": "2022-11-23T21:45:26.182290Z",
                "url": "https://files.pythonhosted.org/packages/26/d3/d0e376e4a69a01d94f5b888f136b9b81d2237bb2fc8efa6a74bbe928b613/flask_digest_auth-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e32ea78c6856ded1e0db55a3b0c54e91",
                    "sha256": "dbf78f753a804091a330541d4e4bb6d64817a06430ea645967f8772aea9450bd"
                },
                "downloads": -1,
                "filename": "flask-digest-auth-0.1.1.tar.gz",
                "has_sig": true,
                "md5_digest": "e32ea78c6856ded1e0db55a3b0c54e91",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 13436,
                "upload_time": "2022-11-23T21:45:29",
                "upload_time_iso_8601": "2022-11-23T21:45:29.860784Z",
                "url": "https://files.pythonhosted.org/packages/b0/06/09c4fa8630b40329e0627f7bcf4a4884da35782d17a36b71cf2d05b7747a/flask-digest-auth-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "imacat",
            "author_email": "imacat@mail.imacat.idv.tw",
            "bugtrack_url": null,
            "classifiers": [
                "Framework :: Flask",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: System :: Systems Administration :: Authentication/Directory"
            ],
            "description": "================================\nFlask HTTP Digest Authentication\n================================\n\n\nDescription\n===========\n\n*Flask-Digest-Auth* is an `HTTP Digest Authentication`_ implementation\nfor Flask_ applications.  It authenticates the user for the protected\nviews.\n\nHTTP Digest Authentication is specified in `RFC 2617`_.\n\n\nWhy HTTP Digest Authentication?\n-------------------------------\n\nHTTP Digest Authentication has the advantage that it does not send the\nactual password to the server, which greatly enhances the security.\nIt uses the challenge-response authentication scheme.  The client\nreturns the response calculated from the challenge and the password,\nbut not the original password.\n\nLog in forms has the advantage of freedom, in the senses of both the\nvisual design and the actual implementation.  You may implement your\nown challenge-response log in form, but then you are reinventing the\nwheels.  If a pretty log in form is not critical to your project, HTTP\nDigest Authentication should be a good choice.\n\nFlask-Digest-Auth works with Flask-Login_.  Log in protection can be\nseparated with the authentication mechanism.  You can create protected\nFlask modules without knowing the actual authentication mechanisms.\n\n\nFeatures\n--------\n\nThere are a couple of Flask HTTP digest authentication\nimplementations.  Flask-Digest-Auth has the following features:\n\n\nFlask-Login Integration\n#######################\n\nFlask-Digest-Auth features Flask-Login integration.  The views\ncan be totally independent with the actual authentication mechanism.\nYou can write a Flask module that requires log in, without specify\nthe actual authentication mechanism.  The application can specify\neither HTTP Digest Authentication, or the log in forms, as needed.\n\n\nSession Integration\n###################\n\nFlask-Digest-Auth features session integration.  The user log in\nis remembered in the session.  The authentication information is not\nrequested again.  This is different to the practice of the HTTP Digest\nAuthentication, but is convenient for the log in accounting.\n\n\nLog Out Support\n###############\n\nFlask-Digest-Auth supports log out.  The user will be prompted for\nnew username and password.\n\n\nLog In Bookkeeping\n##################\n\nYou can register a callback to run when the user logs in.\n\n\n.. _HTTP Digest Authentication: https://en.wikipedia.org/wiki/Digest_access_authentication\n.. _RFC 2617: https://www.rfc-editor.org/rfc/rfc2617\n.. _Flask: https://flask.palletsprojects.com\n.. _Flask-Login: https://flask-login.readthedocs.io\n\n\nInstallation\n============\n\nYou can install Flask-Digest-Auth with ``pip``:\n\n::\n\n    pip install Flask-Digest-Auth\n\nYou may also install the latest source from the\n`Flask-Digest-Auth GitHub repository`_.\n\n::\n\n    git clone git@github.com:imacat/flask-digest-auth.git\n    cd flask-digest-auth\n    pip install .\n\n.. _Flask-Digest-Auth GitHub repository: https://github.com/imacat/flask-digest-auth\n\n\nFlask-Digest-Auth Alone\n=======================\n\nFlask-Digest-Auth can authenticate the users alone.\n\nThe currently logged-in user can be retrieved at ``g.user``, if any.\n\n\nExample for Simple Applications with Flask-Digest-Auth Alone\n------------------------------------------------------------\n\nIn your ``my_app.py``:\n\n::\n\n    from flask import Flask, request, redirect\n    from flask_digest_auth import DigestAuth\n\n    app: flask = Flask(__name__)\n    ... (Configure the Flask application) ...\n\n    auth: DigestAuth = DigestAuth(realm=\"Admin\")\n    auth.init_app(app)\n\n    @auth.register_get_password\n    def get_password_hash(username: str) -> t.Optional[str]:\n        ... (Load the password hash) ...\n\n    @auth.register_get_user\n    def get_user(username: str) -> t.Optional[t.Any]:\n        ... (Load the user) ...\n\n    @app.get(\"/admin\")\n    @auth.login_required\n    def admin():\n        return f\"Hello, {g.user.username}!\"\n\n    @app.post(\"/logout\")\n    @auth.login_required\n    def logout():\n        auth.logout()\n        return redirect(request.form.get(\"next\"))\n\n\nExample for Larger Applications with ``create_app()`` with Flask-Digest-Auth Alone\n----------------------------------------------------------------------------------\n\nIn your ``my_app/__init__.py``:\n\n::\n\n    from flask import Flask\n    from flask_digest_auth import DigestAuth\n\n    auth: DigestAuth = DigestAuth()\n\n    def create_app(test_config = None) -> Flask:\n        app: flask = Flask(__name__)\n        ... (Configure the Flask application) ...\n\n        auth.realm = app.config[\"REALM\"]\n        auth.init_app(app)\n\n        @auth.register_get_password\n        def get_password_hash(username: str) -> t.Optional[str]:\n            ... (Load the password hash) ...\n\n        @auth.register_get_user\n        def get_user(username: str) -> t.Optional[t.Any]:\n            ... (Load the user) ...\n\n        return app\n\nIn your ``my_app/views.py``:\n\n::\n\n    from my_app import auth\n    from flask import Flask, Blueprint, request, redirect\n\n    bp = Blueprint(\"admin\", __name__, url_prefix=\"/admin\")\n\n    @bp.get(\"/admin\")\n    @auth.login_required\n    def admin():\n        return f\"Hello, {g.user.username}!\"\n\n    @app.post(\"/logout\")\n    @auth.login_required\n    def logout():\n        auth.logout()\n        return redirect(request.form.get(\"next\"))\n\n    def init_app(app: Flask) -> None:\n        app.register_blueprint(bp)\n\n\nFlask-Login Integration\n=======================\n\nFlask-Digest-Auth can work with Flask-Login.  You can write a Flask\nmodule that requires log in, without specifying the authentication\nmechanism.  The Flask application can specify the actual\nauthentication mechanism as it sees fit.\n\n``login_manager.init_app(app)`` must be called before\n``auth.init_app(app)``.\n\nThe currently logged-in user can be retrieved at\n``flask_login.current_user``, if any.\n\n\nExample for Simple Applications with Flask-Login Integration\n------------------------------------------------------------\n\nIn your ``my_app.py``:\n\n::\n\n    import flask_login\n    from flask import Flask, request, redirect\n    from flask_digest_auth import DigestAuth\n\n    app: flask = Flask(__name__)\n    ... (Configure the Flask application) ...\n\n    login_manager: flask_login.LoginManager = flask_login.LoginManager()\n    login_manager.init_app(app)\n\n    @login_manager.user_loader\n    def load_user(user_id: str) -> t.Optional[User]:\n        ... (Load the user with the username) ...\n\n    auth: DigestAuth = DigestAuth(realm=\"Admin\")\n    auth.init_app(app)\n\n    @auth.register_get_password\n    def get_password_hash(username: str) -> t.Optional[str]:\n        ... (Load the password hash) ...\n\n    @app.get(\"/admin\")\n    @flask_login.login_required\n    def admin():\n        return f\"Hello, {flask_login.current_user.get_id()}!\"\n\n    @app.post(\"/logout\")\n    @flask_login.login_required\n    def logout():\n        auth.logout()\n        # Do not call flask_login.logout_user()\n        return redirect(request.form.get(\"next\"))\n\n\nExample for Larger Applications with ``create_app()`` with Flask-Login Integration\n----------------------------------------------------------------------------------\n\nIn your ``my_app/__init__.py``:\n\n::\n\n    from flask import Flask\n    from flask_digest_auth import DigestAuth\n    from flask_login import LoginManager\n\n    auth: DigestAuth = DigestAuth()\n\n    def create_app(test_config = None) -> Flask:\n        app: flask = Flask(__name__)\n        ... (Configure the Flask application) ...\n\n        login_manager: LoginManager = LoginManager()\n        login_manager.init_app(app)\n\n        @login_manager.user_loader\n        def load_user(user_id: str) -> t.Optional[User]:\n            ... (Load the user with the username) ...\n\n        auth.realm = app.config[\"REALM\"]\n        auth.init_app(app)\n\n        @auth.register_get_password\n        def get_password_hash(username: str) -> t.Optional[str]:\n            ... (Load the password hash) ...\n\n        return app\n\nIn your ``my_app/views.py``:\n\n::\n\n    import flask_login\n    from flask import Flask, Blueprint, request, redirect\n    from my_app import auth\n\n    bp = Blueprint(\"admin\", __name__, url_prefix=\"/admin\")\n\n    @bp.get(\"/admin\")\n    @flask_login.login_required\n    def admin():\n        return f\"Hello, {flask_login.current_user.get_id()}!\"\n\n    @app.post(\"/logout\")\n    @flask_login.login_required\n    def logout():\n        auth.logout()\n        # Do not call flask_login.logout_user()\n        return redirect(request.form.get(\"next\"))\n\n    def init_app(app: Flask) -> None:\n        app.register_blueprint(bp)\n\nThe views only depend on Flask-Login, but not the actual\nauthentication mechanism.  You can change the actual authentication\nmechanism without changing the views.\n\n\nSetting the Password Hash\n=========================\n\nThe password hash of the HTTP Digest Authentication is composed of the\nrealm, the username, and the password.  Example for setting the\npassword:\n\n::\n\n    from flask_digest_auth import make_password_hash\n\n    user.password = make_password_hash(realm, username, password)\n\nThe username is part of the hash.  If the user changes their username,\nyou need to ask their password, to generate and store the new password\nhash.\n\n\nLog Out\n=======\n\nCall ``auth.logout()`` when the user wants to log out.\nBesides the usual log out routine, ``auth.logout()`` actually causes\nthe next browser automatic authentication to fail, forcing the browser\nto ask the user for the username and password again.\n\n\nLog In Bookkeeping\n=================#\n\nYou can register a callback to run when the user logs in, for ex.,\nlogging the log in event, adding the log in counter, etc.\n\n::\n\n    @auth.register_on_login\n    def on_login(user: User) -> None:\n        user.visits = user.visits + 1\n\n\nWriting Tests\n=============\n\nYou can write tests with our test client that handles HTTP Digest\nAuthentication.  Example for a unittest testcase:\n\n::\n\n    from flask_digest_auth import Client\n    from flask_testing import TestCase\n    from my_app import create_app\n\n    class MyTestCase(TestCase):\n\n        def create_app(self):\n            app: Flask = create_app({\n                \"SECRET_KEY\": token_urlsafe(32),\n                \"TESTING\": True\n            })\n            app.test_client_class = Client\n            return app\n\n        def test_admin(self):\n            response = self.client.get(\"/admin\")\n            self.assertEqual(response.status_code, 401)\n            response = self.client.get(\n                \"/admin\", digest_auth=(\"my_name\", \"my_pass\"))\n            self.assertEqual(response.status_code, 200)\n\n\nCopyright\n=========\n\n Copyright (c) 2022 imacat.\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\nAuthors\n=======\n\n| imacat\n| imacat@mail.imacat.idv.tw\n| 2022/11/23\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/imacat/flask-digest-auth",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "flask-digest-auth",
            "package_url": "https://pypi.org/project/flask-digest-auth/",
            "platform": null,
            "project_url": "https://pypi.org/project/flask-digest-auth/",
            "project_urls": {
                "Bug Tracker": "https://github.com/imacat/flask-digest-auth/issues",
                "Homepage": "https://github.com/imacat/flask-digest-auth"
            },
            "release_url": "https://pypi.org/project/flask-digest-auth/0.2.0/",
            "requires_dist": [
                "flask",
                "flask-login ; extra == 'flask_login'"
            ],
            "requires_python": ">=3.7",
            "summary": "The Flask HTTP Digest Authentication project.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15901014,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ced092383a6933ed07592c61a9bad54a",
                    "sha256": "95dd1e35151de1c583d93f5490d9489639b74dcd6751a8fa46c3a7e7af0eca93"
                },
                "downloads": -1,
                "filename": "flask_digest_auth-0.2.0-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "ced092383a6933ed07592c61a9bad54a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 16293,
                "upload_time": "2022-11-27T01:09:14",
                "upload_time_iso_8601": "2022-11-27T01:09:14.701260Z",
                "url": "https://files.pythonhosted.org/packages/37/cc/ae1e3d023288795a64b9646d662f0ca3a3960abbfc9d7b9b04a884efdf6f/flask_digest_auth-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2fe0c6558af22b3d2c203fa141e9ed22",
                    "sha256": "76c605c9b37d9c8d10dd91c74b1e938782c923c32a28db0f0e0b1c6cb35c2fb7"
                },
                "downloads": -1,
                "filename": "flask-digest-auth-0.2.0.tar.gz",
                "has_sig": true,
                "md5_digest": "2fe0c6558af22b3d2c203fa141e9ed22",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 16445,
                "upload_time": "2022-11-27T01:09:17",
                "upload_time_iso_8601": "2022-11-27T01:09:17.118661Z",
                "url": "https://files.pythonhosted.org/packages/23/7e/084e52226fd1f9308e0adcc321d30fceba47f63e1ae79808e741cea8c907/flask-digest-auth-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}