{
    "0.1.2": {
        "info": {
            "author": "AYMEN Mohammed",
            "author_email": "let.me.code.safe@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# py-redis-ratelimit\n\n A simple asynchronous rate limiter based on redis.\n\n### Requirements\n\n- python >= 3.7\n- redis >= 4.2.0\n\n### Installation\n\n```bash\npip install py-redis-ratelimit\n```\n\n### Examples\nBasic example:\n```python\n\nfrom redis.asyncio import Redis\nimport ratelimit, asyncio\n\nredis = Redis(decode_responses=True)\nlimiter = ratelimit.RateLimit(\n    redis, prefix=\"api_rate_limit\", rate=10, period=60, retry_after=20\n)\nprint(ratelimit.RateLimit.__doc__)  # print RateLimit class docstring\n\n\nasync def do_something():\n    await limiter.acquire(\n        identifier=\"do_something_function\"\n    )  # a unique identifier for the function. This let's RateLimit know what service/resource you are trying to access.\n    ...\n\n\nasync def main():\n    for x in range(40):\n        try:\n            print(\"Calling do_something() for the {}th time\".format(x + 1))\n            await do_something()\n        except ratelimit.FloodWait as e:\n            print(\"Exception:\", e.to_dict())\n            break\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n\n```\n\n# Contributing\nPull requests are always welcome!!\n# License\n\nMIT [License](https://github.com/AYMENJD/py-redis-ratelimit/blob/main/LICENSE)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/AYMENJD/py-redis-ratelimit",
            "keywords": "ratelimit,redis,flood,spam,asyncio",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Py-redis-ratelimit",
            "package_url": "https://pypi.org/project/Py-redis-ratelimit/",
            "platform": null,
            "project_url": "https://pypi.org/project/Py-redis-ratelimit/",
            "project_urls": {
                "Homepage": "https://github.com/AYMENJD/py-redis-ratelimit",
                "Source": "https://github.com/AYMENJD/py-redis-ratelimit",
                "Tracker": "https://github.com/AYMENJD/py-redis-ratelimit/issues"
            },
            "release_url": "https://pypi.org/project/Py-redis-ratelimit/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "A simple asyncio-based rate limiter for Python3 using Redis.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14169670,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b2cf18c51b0d332893c52fc9f39e0739",
                    "sha256": "f1c0e6422ca5cb31a19b185b1c87fb7461c375c284972011cd792619cec9bcad"
                },
                "downloads": -1,
                "filename": "Py-redis-ratelimit-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "b2cf18c51b0d332893c52fc9f39e0739",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 4121,
                "upload_time": "2022-06-18T05:52:33",
                "upload_time_iso_8601": "2022-06-18T05:52:33.342976Z",
                "url": "https://files.pythonhosted.org/packages/dc/82/c51275c824398dcb35108eca293823782c6ddf17a67467d1d9e0ff654001/Py-redis-ratelimit-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}