{
    "0.1.1.2": {
        "info": {
            "author": "",
            "author_email": "33TU <eetu@skid.tools>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zipgen",
            "package_url": "https://pypi.org/project/zipgen/",
            "platform": null,
            "project_url": "https://pypi.org/project/zipgen/",
            "project_urls": {
                "Homepage": "https://github.com/33TU/zipgen"
            },
            "release_url": "https://pypi.org/project/zipgen/0.1.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "A zip file generator.",
            "version": "0.1.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15704492,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cf6a1d351b76dcfef7c7973c18d96d41",
                    "sha256": "817870aff6e54da7eb66c1d31d489a0c4f2728a20b9d7559b27ce01fb0720452"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cf6a1d351b76dcfef7c7973c18d96d41",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13183,
                "upload_time": "2022-11-06T21:43:42",
                "upload_time_iso_8601": "2022-11-06T21:43:42.502925Z",
                "url": "https://files.pythonhosted.org/packages/b1/b3/2f9e11c1130f6dd7d2e4f9935fa6765b308ce033407bd884d4ae8b9863e3/zipgen-0.1.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "04691bfda9acdd1ef8ed443d3b062810",
                    "sha256": "c9a296b043ab594bc600735ed81c6e3424ebb936f1b289fdf4ba65d376ca5eea"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "04691bfda9acdd1ef8ed443d3b062810",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 11527,
                "upload_time": "2022-11-06T21:43:44",
                "upload_time_iso_8601": "2022-11-06T21:43:44.529944Z",
                "url": "https://files.pythonhosted.org/packages/90/53/1738b68abfd5b06f16353e7db353e6205eb75ce7514881df4e63d17316da/zipgen-0.1.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "",
            "author_email": "33TU <eetu@skid.tools>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zipgen",
            "package_url": "https://pypi.org/project/zipgen/",
            "platform": null,
            "project_url": "https://pypi.org/project/zipgen/",
            "project_urls": {
                "Homepage": "https://github.com/33TU/zipgen"
            },
            "release_url": "https://pypi.org/project/zipgen/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "A zip file generator.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15704492,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c27efb216b04b893be16873e330d0718",
                    "sha256": "d595f5111923d3e8a42ad48d830481b7ef525ce305e2eed2f056bf239729e003"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c27efb216b04b893be16873e330d0718",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13850,
                "upload_time": "2022-11-07T19:37:15",
                "upload_time_iso_8601": "2022-11-07T19:37:15.664222Z",
                "url": "https://files.pythonhosted.org/packages/9e/f8/97c3eeae853f4ad58cf6845d3a08af4afbaa3537b95714f605640ec9a293/zipgen-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "31825ef52ba72fed4d002a0ce21cf4eb",
                    "sha256": "5433d7a4d7af0f44cc18b95ad001df5cdac85125bf108d7f6bb80f278928e0f2"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "31825ef52ba72fed4d002a0ce21cf4eb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 12163,
                "upload_time": "2022-11-07T19:37:17",
                "upload_time_iso_8601": "2022-11-07T19:37:17.634769Z",
                "url": "https://files.pythonhosted.org/packages/b6/7d/34d606ed9ce44a5992f6ad06121f6b2c8370153205220b7be12a48cad004/zipgen-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "",
            "author_email": "33TU <eetu.programmer@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "# zipgen\n\nZipgen is a simple and performant zip archive generator for Python 3.7 and\nlater. It supports ZIP64, uncompressed and various compression formats such as:\nDeflated, Bzip and LZMA.\n\nZipgen supports synchronous asynchronous generation. Zipgen can zip archives\nfrom stream objects such as FileIO, BytesIO, generators and asynchronous\nStreamReader.\n\nZipgen also supports recursive creation of zip archives from existing folders.\nSynchronously or asynchronously.\n\nZip archives can be created using the ZipBuilder and ZipStreamWriter classes.\nZipBuilder provides methods that return byte generators. The ZipStreamWriter\nclass can be used to write directly to streams and to asynchronous streams,\nwhich provide a wait drain() method, such as asyncio.StreamWriter.\nZipStreamWriter uses ZipBuilder internally providing all of the same methods.\n\n## Command\n\nZipgen can also be used as a command:\n`python -m zipgen dest.zip file1.txt ./any/folder`.\n\nThe command supports adding several files or folders at once recursively.\nCompression method can be set with `--comp` option and comment can be set with\n`--comment`.\n\n# Install\n\n`python -m pip install zipgen`\n\n---\n\n## Sync ZipStreamWriter Example\n\n```py\nimport io\nimport zipgen\n\n\ndef create_sync() -> None:\n    # ZipStreamWriter provides more practical interface using ZipBuilder\n    # And it has has all the methods from ZipBuilder.\n\n    # Dot not call ZipStreamWriter.end() if with clause is used\n    with (\n            open(\"stream_sync.zip\", \"wb+\") as f,\n            zipgen.ZipStreamWriter(f) as zsw,\n    ):\n        # Add folders, library corrects path to correct format\n        zsw.add_folder(\"hello/world\")\n        zsw.add_folder(\"hello/from/stream\")\n        zsw.add_folder(\"//hello\\\\from//path/correcting\")\n        # => hello/from/path/correcting\n\n        # Add three buffers, default compression is COMPRESSION_STORED\n        zsw.add_buf(\"buf/buf1.txt\", b\"hello from buf1!\")\n        zsw.add_buf(\"buf/buf2.txt\", bytearray(b\"hello from buf2!\"))\n        zsw.add_buf(\"buf/buf3.txt\", memoryview(b\"hello from buf3!\"))\n\n        # Add self\n        zsw.add_io(\"self.py\", open(__file__, \"rb\"),\n                   compression=zipgen.COMPRESSION_DEFLATED)\n\n        # Add BytesIO\n        zsw.add_io(\"BytesIO.txt\", io.BytesIO(b\"hello from BytesIO!\"),\n                   compression=zipgen.COMPRESSION_BZIP2)\n\n        # Add generator\n        def data_gen():\n            for i in range(1, 100):\n                yield f\"hello from line {i}\\n\".encode()\n\n        zsw.add_gen(\"generator.txt\", data_gen(),\n                    compression=zipgen.COMPRESSION_LZMA)\n\n        # Walk files\n        zsw.walk(\"../src\", \"zipgen/src\",\n                 compression=zipgen.COMPRESSION_DEFLATED)\n\n        # Set comment\n        zsw.set_comment(\"created by stream_sync.py\")\n\n\nif __name__ == '__main__':\n    create_sync()\n```\n\n## Async ZipStreamWriter Example\n\n```py\nimport asyncio\nimport zipgen\n\n\nasync def create_async() -> None:\n    # Async methods end with suffix _async\n    # ZipStreamWriter supports regular Streams and asyncio.StreamWriter\n    # If stream provides awaitable .drain() method such as asyncio.StreamWriter, it will be awaited after each write.\n\n    # Dot not call ZipStreamWriter.end() if with clause is used\n    with (\n            open(\"stream_sync.zip\", \"wb+\") as f,\n            zipgen.ZipStreamWriter(f) as zsw,\n    ):\n        # Add folders, library corrects path to correct format\n        await zsw.add_folder_async(\"hello/world\")\n        await zsw.add_folder_async(\"hello/from/stream\")\n        await zsw.add_folder_async(\"//hello\\\\from//path/correcting\")\n        # => hello/from/path/correcting\n\n        # Add self\n        await zsw.add_io_async(\"self.py\", open(__file__, \"rb\"),\n                               compression=zipgen.COMPRESSION_DEFLATED)\n\n        # Add async generator\n        async def data_gen():\n            for i in range(1, 100):\n                await asyncio.sleep(0)\n                yield f\"hello from line {i}\\n\".encode()\n\n        await zsw.add_gen_async(\"generator.txt\", data_gen(),\n                                compression=zipgen.COMPRESSION_LZMA)\n\n        # Walk files\n        await zsw.walk_async(\"../src\", \"zipgen/src\", compression=zipgen.COMPRESSION_DEFLATED)\n\n        # Pipe process stdout\n        proc = await asyncio.subprocess.create_subprocess_exec(\n            \"echo\", \"hello from subprocess\",\n            stdout=asyncio.subprocess.PIPE,\n        )\n\n        if proc.stdout is not None:\n            await zsw.add_stream_async(\"echo.txt\", proc.stdout)\n\n        # Set comment\n        zsw.set_comment(\"created by stream_async.py\")\n\n\nif __name__ == '__main__':\n    asyncio.run(create_async())\n```\n\n## Sync ZipBuilder Example\n\n```py\nimport io\nimport zipgen\n\n\ndef create_sync() -> None:\n    # Creates builder_sync.zip synchronously using ZipBuilder.\n    # For asynchronous methods use methods with \"_async\" suffix.\n\n    b = zipgen.ZipBuilder()\n\n    with open(\"builder_sync.zip\", \"wb+\") as file:\n        # Add folders, library corrects path to correct format\n        file.write(b.add_folder(\"hello/world\"))\n        file.write(b.add_folder(\"hello/from/stream\"))\n        file.write(b.add_folder(\"//hello\\\\from//path/correcting\"))\n        # => hello/from/path/correcting\n\n        # Add three buffers, default compression is COMPRESSION_STORED\n        for buf in b.add_buf(\"buf/buf1.txt\", b\"hello from buf1!\"):\n            file.write(buf)\n\n        for buf in b.add_buf(\"buf/buf2.txt\", bytearray(b\"hello from buf2!\")):\n            file.write(buf)\n\n        for buf in b.add_buf(\"buf/buf3.txt\", memoryview(b\"hello from buf3!\")):\n            file.write(buf)\n\n        # Add self\n        for buf in b.add_io(\"self.py\", open(__file__, \"rb\"),\n                            compression=zipgen.COMPRESSION_DEFLATED):\n            file.write(buf)\n\n        # Add BytesIO\n        for buf in b.add_io(\"BytesIO.txt\", io.BytesIO(b\"hello from BytesIO!\"),\n                            compression=zipgen.COMPRESSION_BZIP2):\n            file.write(buf)\n\n        # Add generator\n        def data_gen():\n            for i in range(1, 100):\n                yield f\"hello from line {i}\\n\".encode()\n\n        for buf in b.add_gen(\"generator.txt\", data_gen(),\n                             compression=zipgen.COMPRESSION_LZMA):\n            file.write(buf)\n\n        # Walk files\n        for buf in b.walk(\"../src\", \"zipgen/src\",\n                          compression=zipgen.COMPRESSION_DEFLATED):\n            file.write(buf)\n\n        # Set comment\n        file.write(b.end(\"created by builder_sync.py\"))\n\n\nif __name__ == \"__main__\":\n    create_sync()\n```\n\n## Async ZipBuilder Example\n\n```py\nimport asyncio\nimport zipgen\n\n\nasync def create_async() -> None:\n    # Creates builder_sync.zip asynchronously using ZipBuilder.\n    # For synchronous methods use methods withour \"_async\" suffix.\n\n    b = zipgen.ZipBuilder()\n\n    with open(\"builder_async.zip\", \"wb+\") as file:\n        # Add self\n        async for buf in b.add_io_async(\"self.py\", open(__file__, \"rb\"),\n                                        compression=zipgen.COMPRESSION_DEFLATED):\n            file.write(buf)\n\n        # Add async generator\n        async def data_gen():\n            for i in range(1, 100):\n                await asyncio.sleep(0)\n                yield f\"hello from line {i}\\n\".encode()\n\n        async for buf in b.add_gen_async(\"generator.txt\", data_gen(),\n                                         compression=zipgen.COMPRESSION_LZMA):\n            file.write(buf)\n\n        # Walk files\n        async for buf in b.walk_async(\"../src\", \"zipgen/src\", compression=zipgen.COMPRESSION_DEFLATED):\n            file.write(buf)\n\n        # Pipe process stdout\n        proc = await asyncio.subprocess.create_subprocess_exec(\n            \"echo\", \"hello from subprocess\",\n            stdout=asyncio.subprocess.PIPE,\n        )\n\n        if proc.stdout is not None:\n            async for buf in b.add_stream_async(\"echo.txt\", proc.stdout):\n                file.write(buf)\n\n        # Set comment\n        file.write(b.end(\"created by builder_async.py\"))\n\n\nif __name__ == '__main__':\n    asyncio.run(create_async())\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zipgen",
            "package_url": "https://pypi.org/project/zipgen/",
            "platform": null,
            "project_url": "https://pypi.org/project/zipgen/",
            "project_urls": {
                "Homepage": "https://github.com/33TU/zipgen"
            },
            "release_url": "https://pypi.org/project/zipgen/0.1.3/",
            "requires_dist": [
                "typing-extensions ; python_version < \"3.8\""
            ],
            "requires_python": ">=3.7",
            "summary": "A zip file generator.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15704492,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f423076a5ffbbf543cbd51ac67248d41",
                    "sha256": "dd007e7a2c7ddcd38f240b2caa7e394e4f464e50b8be8633b95a8dcfc5d96626"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f423076a5ffbbf543cbd51ac67248d41",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 18363,
                "upload_time": "2022-11-08T23:16:29",
                "upload_time_iso_8601": "2022-11-08T23:16:29.934483Z",
                "url": "https://files.pythonhosted.org/packages/89/a9/406996a656ea0da748b2b1d9bc4bd3c80f6a89f0186a2d34df42886879e0/zipgen-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "476322265270a64fc5d1e9be26a6b4f1",
                    "sha256": "1910d34572a558fba81d1bb78dfa17fdcf2ee705c923160f5afc04e1139a6741"
                },
                "downloads": -1,
                "filename": "zipgen-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "476322265270a64fc5d1e9be26a6b4f1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 15153,
                "upload_time": "2022-11-08T23:16:32",
                "upload_time_iso_8601": "2022-11-08T23:16:32.017240Z",
                "url": "https://files.pythonhosted.org/packages/f7/44/cc476f053693276ccad3d9401d598fcc44c1866c6ef7e602e579c859bd5f/zipgen-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}