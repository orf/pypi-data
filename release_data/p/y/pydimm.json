{
    "0.0.1": {
        "info": {
            "author": "Ziqi Rong",
            "author_email": "rongziqi@sjtu.edu.cn",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Jck-R/pyDIMM",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyDIMM",
            "package_url": "https://pypi.org/project/pyDIMM/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyDIMM/",
            "project_urls": {
                "Homepage": "https://github.com/Jck-R/pyDIMM"
            },
            "release_url": "https://pypi.org/project/pyDIMM/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A Python Dirichlet Multinomial Mixture Model",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14431705,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a9251fbe9987fe7b99d29cae8af605c7",
                    "sha256": "e7b67f0d7d146e6ca377587b1d21eed225fc7ea9454813366c4a46b10cf0cbf9"
                },
                "downloads": -1,
                "filename": "pyDIMM-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a9251fbe9987fe7b99d29cae8af605c7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11276,
                "upload_time": "2022-07-09T03:50:51",
                "upload_time_iso_8601": "2022-07-09T03:50:51.770084Z",
                "url": "https://files.pythonhosted.org/packages/4e/8f/5ce51b694eea2859cddb0a45b594398f406ad6de74cfccefe49a3505d429/pyDIMM-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Ziqi Rong",
            "author_email": "rongziqi@sjtu.edu.cn",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "# pyDIMM\nA Python Dirichlet Multinomial Mixture Model.\n\n## Ready\n\n**Typically, if you import pyDIMM in your program, clibs will be automatically compiled, and you can skip this part.**\n\nWe need to first compile the files in `clibs`. The makefile has been provided.\n```console\ncd clibs && make\n```\n\nAlso, you can compile it by yourself using gcc. Compile `./clibs/pyDIMM_libs.c` by the instructions in the head of that file, and then you will get a `./clibs/pyDIMM_libs.so` file.  \n```console\ncd clibs && gcc -lm -shared -fPIC -o pyDIMM_libs.so pyDIMM_libs.c\n```\n\nCheck the files now.\n```\n\u2514\u2500\u2500\u2500pyDIMM\n    |\n    \u251c\u2500\u2500\u2500pyDIMM\n    |   \u251c\u2500\u2500\u2500__init__.py\n    |   \u251c\u2500\u2500\u2500class_DIMM.py\n    |   \u2514\u2500\u2500\u2500clibs\n    |       \u251c\u2500\u2500\u2500makefile\n    |       \u251c\u2500\u2500\u2500pyDIMM_libs.c\n    |       \u2514\u2500\u2500\u2500pyDIMM_libs.so\n    |\n    \u2514\u2500\u2500\u2500Some other files...\n```\n\n## How to use\n\nAll the methods are based on the class `DIMM`. You need an instance of `pyDIMM.DIMM` to get started.\n\n```python\nimport pyDIMM\n```\n\n- Example 1\n    ```python\n    dimm_0 = pyDIMM.DIMM(observe_data=your_data, n_components=3, alpha_init='kmeans')\n    ```\n- Example 2\n    ```python\n    dimm_1 = pyDIMM.DIMM(observe_data=your_data, n_components=5, alpha_init='manual', prior_label=your_label, print_log=True)\n    ```\n\n### Train (by EM algorithm)\n\nUse EM algorithm to train the model. The EM algorithm is written in C (yes, it's the code in `pyDIMM.c`, we use `ctypes` to implement that.).\n\n- Example\n    ```python\n    dimm_0.EM(max_iter=100, max_loglik_tol=1e-3, max_alpha_tol=1)\n    ```\n\nOK, the DIMM is already trained now. We need to get the result back. All the result information is in one dictionary.\n\n- Example\n    ```python\n    result_0 = dimm_0.get_model()\n    print(result_0)\n    ```\n    you're supposed to see\n    ```\n    {\n    'alpha': array([...]),\n    'pie': array([...]),\n    'delta': array([...]),\n    'loglik': ...,\n    'AIC': ...,\n    'BIC': ...\n    }\n    ```\n\nThat's all! You get it.  \n\n>Note:  \nOnce you get the trained DIMM model, the result parameters are stored in the DIMM instance. So every time you want to retrieve the result back, just call the `get_model()` method. (Only if you don't change the instance before, such as call `EM()` again. That will of course change the result stored.)\n\n### Predict\n\nSometimes you are not only want to fit a DIMM, but also want to use this model to predict some other data (If you don't want, forget it). Fortunately, we have the method `predict()`.\n\n- Example\n    ```python\n    predict_res = dimm_0.predict(another_data)\n    ```\n\nThen you'll get the predict result `label` and `delta` in the `predict_res` dictionary. Find the detail explanation in the doc in codes.\n\n### Save & Load\n\nAll information of your DIMM instance can be saved to `.npy` file and then can be loaded anytime and anywhere.\n- Example\n    ```python\n    dimm_0.save('./dimm_0_file')\n    ```\n    After this, a new file called `dimm_0_file.npy`(the postfix .npy is automatically added) will appear in your current folder. You can read from the file later.\n    ```python\n    dimm_load = pyDIMM.DIMM.load('./dimm_0_file.npy')\n    ```\n    \n## Contact\n\nZiqi Rong <rongziqi@sjtu.edu.cn>\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Jck-R/pyDIMM",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyDIMM",
            "package_url": "https://pypi.org/project/pyDIMM/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyDIMM/",
            "project_urls": {
                "Homepage": "https://github.com/Jck-R/pyDIMM"
            },
            "release_url": "https://pypi.org/project/pyDIMM/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A Python Dirichlet Multinomial Mixture Model",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14431705,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d6aad87af0eb9522c82e3d6d0c65db13",
                    "sha256": "590b66290c5411ac60c0223374caf4a0b2bb5876741773ba96ac3d1e7023df59"
                },
                "downloads": -1,
                "filename": "pyDIMM-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "d6aad87af0eb9522c82e3d6d0c65db13",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11312,
                "upload_time": "2022-07-14T06:05:52",
                "upload_time_iso_8601": "2022-07-14T06:05:52.769809Z",
                "url": "https://files.pythonhosted.org/packages/1d/d9/eb17ca47fc4f90828f3ef1c13811ed61b858bbfdd0b4e7138ca04cfa6c00/pyDIMM-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}