{
    "2021.12.2": {
        "info": {
            "author": "Roger M\u00e4hler",
            "author_email": "roger.mahler@hotmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Topic :: Software Development"
            ],
            "description": "# Riksdagens Protokoll Part-Of-Speech Tagging (Parla-Clarin Workflow)\n\nThis package implements Stanza part-of-speech annotation of `Riksdagens Protokoll` Parla-Clarin XML files.\n\n\n## Prerequisites\n\n- A bash-enabled environment (Linux or Git Bash on windows)\n- Git\n- Python 3.8.5^\n- GNU make (install i)\n\n# Parla-Clarin to penelope pipeline\n\n## How to install\n\n## How to configure\n\n## How to setup data\n\n### Riksdagens corpus\n\nCreate a shallow clone (no history) of repository:\n\n```bash\nmake init-repository\n```\n\nSync shallow clone with changes on origin (Github):\n\n```bash\nmake update-repositoryupdate_repository_timestamps\n```\n\nUpdate modified date of repository file. This is necessary since the pipeline uses last commit date of\neach XML-files to determine which files are outdated, whilst `git clone` sets current time.\n\n```bash\n$ make update-repository-timestamps\nor\n$ scripts/git_update_mtime.sh path-to-repository\n```\n\n## How to annotate speeches\n\n```bash\nmake annotate\nor\n$ nohup poetry run snakemake -j4 --keep-going --keep-target-files &\n```\n\nWindows:\n\n```bash\npoetry shell\nbash\nnohup poetry run snakemake -j4 -j4 --keep-going --keep-target-files &\n```\n\nRun a specific year:\n\n```bash\npoetry shell\nbash\nnohup poetry run snakemake --config -j4 --keep-going --keep-target-files &\n```\n## Install\n\n(This workflow will be simplified)\n\nVerify current Python version (`pyenv` is recommended for easy switch between versions).\n\nCreate a new Python virtual environment (sandbox):\n\n```bash\ncd /some/folder\nmkdir westac_parlaclarin_pipeline\ncd westac_parlaclarin_pipeline\npython -m venv .venv\nsource .venv/bin/activate\n```\n\nInstall the pipeline and run setup script.\n\n```bash\npip install westac_parlaclarin_pipeline\nsetup-pipeline\n```\n\n## Initialize local clone of Parla-CLARIN repository\n\n## Run PoS tagging\n\nMove to sandbox and activate virtual environment:\n\n```bash\ncd /some/folder/westac_parlaclarin_pipeline\nsource .venv/bin/activate\n```\n\nUpdate repository:\n\n```bash\nmake update-repository\nmake update-repository-timestamps\n```\n\nUpdate all (changed) annotations:\n\n```bash\nmake annotate\n```\n\nUpdate a single year (and set cpu count):\n\n```bash\nmake annotate YEAR=1960 CPU_COUNT=1\n```\n\n## Configuration\n\n\n```yaml\nwork_folders: !work_folders &work_folders\n  data_folder: /data/riksdagen_corpus_data\n\nparla_clarin: !parla_clarin &parla_clarin\n  repository_folder: /data/riksdagen_corpus_data/riksdagen-corpus\n  repository_url: https://github.com/welfare-state-analytics/riksdagen-corpus.git\n  repository_branch: main\n  folder: /data/riksdagen_corpus_data/riksdagen-corpus/corpus\n\nextract_speeches: !extract_speeches &extract_speeches\n  folder: /data/riksdagen_corpus_data/riksdagen-corpus-exports/speech_xml\n  template: speeches.cdata.xml\n  extension: xml\n\nword_frequency: !word_frequency &word_frequency\n  <<: *work_folders\n  filename: riksdagen-corpus-term-frequencies.pkl\n\ndehyphen: !dehyphen &dehyphen\n  <<: *work_folders\n  whitelist_filename: dehyphen_whitelist.txt.gz\n  whitelist_log_filename: dehyphen_whitelist_log.pkl\n  unresolved_filename: dehyphen_unresolved.txt.gz\n\nconfig: !config\n    work_folders: *work_folders\n    parla_clarin: *parla_clarin\n    extract_speeches: *extract_speeches\n    word_frequency: *word_frequency\n    dehyphen: *dehyphen\n    annotated_folder: /data/riksdagen_corpus_data/annotated\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://westac.se",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyriksprot-tagger",
            "package_url": "https://pypi.org/project/pyriksprot-tagger/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyriksprot-tagger/",
            "project_urls": {
                "Homepage": "https://westac.se",
                "Repository": "https://github.com/welfare-state-analytics/pyriksprot_tagger"
            },
            "release_url": "https://pypi.org/project/pyriksprot-tagger/2021.12.2/",
            "requires_dist": [
                "click (>=7.1.2,<8.0.0)",
                "snakefmt (>=0.3.1,<0.4.0)",
                "transformers (>=4.3.3,<5.0.0)",
                "dehyphen (>=0.3.4,<0.4.0)",
                "pygit2 (>=1.5.0,<2.0.0)",
                "cookiecutter (>=1.7.2,<2.0.0)",
                "pandas (>=1.2.3,<2.0.0)",
                "snakemake (>=6.0.5,<7.0.0)",
                "loguru (>=0.5.3,<0.6.0)",
                "pyriksprot (>=2021.9.8,<2022.0.0)",
                "stanza (>=1.2.3,<2.0.0)"
            ],
            "requires_python": "==3.8.5",
            "summary": "Pipeline that tags pyriksprot Parla-Clarin XML files",
            "version": "2021.12.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12327087,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "40b98307a2e0aa2dabb5bd9a4d639198",
                    "sha256": "64d7560e2cb8dd6e4e4cb0d343eaa18c9ca970a479d943ccb61963179ded2ca7"
                },
                "downloads": -1,
                "filename": "pyriksprot_tagger-2021.12.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "40b98307a2e0aa2dabb5bd9a4d639198",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "==3.8.5",
                "size": 27449,
                "upload_time": "2021-12-16T15:18:55",
                "upload_time_iso_8601": "2021-12-16T15:18:55.765234Z",
                "url": "https://files.pythonhosted.org/packages/5b/f6/295c9e6e7ead189e1e6dbde4ce9467828b6a4d023bd6aebad5fab485ec5b/pyriksprot_tagger-2021.12.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bda6eeff74c562bb3d8b5177e72ea0e4",
                    "sha256": "424727e5ab216fc097c1b050939f2194fc3acf392d9603d09c4982b00f4fcd0b"
                },
                "downloads": -1,
                "filename": "pyriksprot_tagger-2021.12.2.tar.gz",
                "has_sig": false,
                "md5_digest": "bda6eeff74c562bb3d8b5177e72ea0e4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "==3.8.5",
                "size": 22584,
                "upload_time": "2021-12-16T15:18:57",
                "upload_time_iso_8601": "2021-12-16T15:18:57.679935Z",
                "url": "https://files.pythonhosted.org/packages/22/e2/0bf376085380576a629022b753bcb46d2e3bc9653297a5d2a3b599c1ecce/pyriksprot_tagger-2021.12.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}