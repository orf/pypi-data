{
    "2.6.7": {
        "info": {
            "author": "ww166",
            "author_email": "ww166mail@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Documentation"
            ],
            "description": "### \u9879\u76ee\u7b80\u4ecb\n  - \u9879\u76ee\u4ee3\u53f7\uff1aEchoWall-\u56de\u97f3\u58c1\n  - \u9879\u76ee\u5b9a\u4f4d\uff1a\u901a\u7528\u6d88\u606f\u4e2d\u95f4\u4ef6\u517c\u5bb9\u5c42\n  - \u9879\u76ee\u529f\u80fd\uff1a\u6d88\u606f\u4e2d\u95f4\u4ef6\u914d\u7f6e\uff0c\u6d88\u606f\u3001\u6d88\u8d39\u8005\u3001\u751f\u4ea7\u8005\u7684\u7edf\u4e00\u5c01\u88c5\n  - \u8be6\u7ec6\u63cf\u8ff0\uff1a \u76ee\u524d\u4ec5\u9488\u5bf9 RocketMQ \u8fdb\u884c\u5c01\u88c5\u3002\n\n### rocket_mq\n- \u7248\u672c\n- python 3.6\n\n#### \u6253\u5305\u4e0e\u5b89\u88c5(whl)\n- \u6253\u5305: `python setup.py sdist bdist_wheel`\n- \u5b89\u88c5: `pip install echowall-2.6.0-py3-none-any.whl`\n\n#### \u6253\u5305\u4e0e\u5b89\u88c5(egg)\n- \u6253\u5305: python setup.py bdist_egg\n- \u5b89\u88c5 egg:\n    - \u89e3\u538b pf_mq_sdk-0.1-py3.6.egg \u6e90\u7801\u5305\n    - cd pf_mq_sdk-0.1-py3.6.egg\n    - python setup.py install\n\n#### \u4f9d\u8d56\u73af\u5883\n- librocketmq\n    - centos 7\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0-centos7.x86_64.rpm\n        sudo rpm -ivh rocketmq-client-cpp-2.2.0-centos7.x86_64.rpm\n    ```\n    - debian\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0.amd64.deb\n        sudo dpkg -i rocketmq-client-cpp-2.2.0.amd64.deb\n    ```\n    - macOS\n    ```\n        wget https://github.com/apache/rocketmq-client-cpp/releases/download/2.2.0/rocketmq-client-cpp-2.2.0-bin-release-darwin.tar.gz\n        tar -xzf rocketmq-client-cpp-2.2.0-bin-release-darwin.tar.gz\n        cd rocketmq-client-cpp\n        mkdir /usr/local/include/rocketmq\n        cp include/* /usr/local/include/rocketmq\n        cp lib/* /usr/local/lib\n        install_name_tool -id \"@rpath/librocketmq.dylib\" /usr/local/lib/librocketmq.dylib\n    ```\n- \u8be6\u7ec6\u6587\u6863\uff1a https://github.com/apache/rocketmq-client-python\n\n#### rocket_mq \u670d\u52a1\n- \u672c\u5730\u90e8\u7f72\n    - \u90e8\u7f72\u6587\u6863\uff1ahttps://hub.docker.com/r/xuchengen/rocketmq\n    - \u6ce8\u610f\u4e8b\u9879\uff1a\n    ``` # Linux \u6216 Mac \u5254\u9664 net \u542f\u52a8\u53c2\u6570\n        docker run -itd \\\n        --name=rocketmq \\\n        --hostname rocketmq \\\n        --restart=always \\\n        -p 8080:8080 \\\n        -p 9876:9876 \\\n        -p 10909:10909 \\\n        -p 10911:10911 \\\n        -p 10912:10912 \\\n        -v rocketmq_data:/home/app/data \\\n        -v /etc/localtime:/etc/localtime \\\n        -v /var/run/docker.sock:/var/run/docker.sock \\\n        xuchengen/rocketmq:latest\n    ```\n- \u5e38\u7528\u547d\u4ee4\n```\n    # \u8fdb\u5165docker\n    docker exec -it rocketmq /bin/bash\n    \n    # \u914d\u7f6e\u53c2\u8003 /home/app/rocketmq/conf/broker.conf\n    brokerClusterName = DefaultCluster\n    brokerName = broker-a\n    brokerId = 0\n    deleteWhen = 04\n    fileReservedTime = 48\n    brokerRole = ASYNC_MASTER\n    flushDiskType = ASYNC_FLUSH\n    autoCreateTopicEnable = True\n    namesrvAddr = 127.0.0.1:9876\n    brokerIP1 = 127.0.0.1 # \u5fc5\u586b\n    \n    # \u542f\u52a8\u547d\u4ee4\n    nohup /bin/sh /home/app/rocketmq/bin/mqnamesrv &\n    nohup /bin/sh /home/app/rocketmq/bin/mqbroker -c /home/app/rocketmq/conf/broker.conf -n 127.0.0.1:9876 &\n    \n    # \u670d\u52a1\u505c\u6b62\n    /bin/sh /home/app/rocketmq/bin/mqshutdown broker\n    /bin/sh /home/app/rocketmq/bin/mqshutdown namesrv\n```\n\n# \u4f7f\u7528\u65b9\u5f0f\n1. ### \u96c6\u6210 EchoWall \u9879\u76ee\n    1. requirements.txt \u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a \n        echowall\n        \u6216\u8005 \u76f4\u63a5 \n        ```shell\n        pip install echowall\n        ```\n    2. \u589e\u52a0MessageQueue\uff08Rocketmq server \u914d\u7f6e\uff09\n       ```\n       # \u6d88\u606f\u961f\u5217\u914d\u7f6e\u4fe1\u606f\n       MQ_HOST = 172.18.0.76\n       MQ_PORT = 9876\n       MQ_TIMEOUT = 6000\n       MQ_GROUP_NAME = SDB-GROUP-MAIN    \n       ```\n    3. flask\u9879\u76ee\u4e2d\uff0c\u914d\u7f6e\u6587\u4ef6\uff08config.py \uff09\u589e\u52a0\u5bf9\u5e94\u53d8\u91cf\u89e3\u6790\n       ```\n       #\u6d88\u606f\u961f\u5217\u914d\u7f6e\u4fe1\u606f\n       MQ_HOST = os.getenv(\"MQ_HOST\")\n       MQ_PORT = os.getenv(\"MQ_PORT\")\n       MQ_TIMEOUT = os.getenv(\"MQ_TIMEOUT\")\n       MQ_GROUP_NAME = os.getenv(\"MQ_GROUP_NAME\")`\n       ```\n    4. flask \u9879\u76ee\u4e2d\uff0c extensions.py \u589e\u52a0 echowall \u9879\u76ee\u7684 \u521d\u59cb\u5316\u53d8\u91cf\n        ``` python\n        from echowall import (\n            EWConfig,\n            EWClient\n        )\n        from base.app_context import auto_app_contexts\n\n        def init_main_mq():\n            \"\"\"\n                \u521d\u59cb\u5316 EchoWall\uff0c\u542f\u52a8\u751f\u4ea7\u8005\n            :return:\n            \"\"\"\n            from flask import current_app as app\n            from apps.commons.message_queue import set_message_record\n        \n            @auto_app_contexts()\n            def _fun(_app):\n                conf = EWConfig()\n                conf.host = _app.config['MQ_HOST']\n                conf.port = int(_app.config['MQ_PORT'])\n                conf.timeout = int(_app.config.get('MQ_TIMEOUT', '6000'))\n                conf.compress_level = 5\n        \n                # \u751f\u4ea7\u8005\u53d1\u9001\u91cd\u8bd5\n                conf.send_retry_count = 2\n                conf.send_retry_backoff = 1\n        \n                # \u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f\u843d\u5e93\n                conf.record_func = set_message_record\n                conf.record_only_success = False\n        \n                # \u6d88\u8d39\u76f8\u5173\n                conf.consumer_thread_count = 1\n        \n                rmq_client = EWClient(conf)\n        \n                group_name = app.config['MQ_GROUP_NAME']\n        \n                rmq_client.start_producer(group_name)\n        \n                return rmq_client\n        \n            return _fun(app)\n        ```\n    5. \u914d\u7f6etopic\uff08\u53c2\u89c1Topic\u547d\u540d\u89c4\u8303\uff09\n2. ### \u53d1\u9001\u6d88\u606f\n    ```python\n    try:\n        message = mq_client.new_message(MessageTopic.sdb_bu_main.value)\n        message.keys = 'send-1'\n        message.tags = 'send-1'\n        message.body = 'send-%s' % (str(datetime.datetime.now()))\n        send_message(message)\n    except Exception as e:\n        print(traceback.format_exc())\n    ```\n3. \u63a5\u6536\u6d88\u606f\n    1. \u5b9a\u4e49 \u5904\u7406\u6d88\u606f\u7684\u56de\u8c03\u51fd\u6570\n        ```python\n        import traceback\n        \n        from echowall import EWConsumeStatus\n        \n        from apps.extensions import ew\n    \n        @ew.pc_callback\n        def sdb_callback(msg):\n            try:\n                print(type(msg))\n                print(str(msg))\n                body = msg.body.decode('utf-8')\n                print('Message body is: {}'.format(body))\n                print(msg.latest_send_timestamp)\n                print(msg.version)\n                return EWConsumeStatus.CONSUME_SUCCESS\n            except Exception as e:\n                print(e)\n                print(traceback.format_exc())\n                return EWConsumeStatus.RECONSUME_LATER\n        ```\n    2. \u6ce8\u518c\u56de\u8c03\u51fd\u6570\uff0c\u542f\u52a8\u6d88\u8d39\u8005\n        ```python\n        # start push consumers example\n        settings = [\n            ('GID_1', 'TopicTest', '*', 'sdb_callback')\n        ]\n        ew = echo_wall\n        rmq_client.bind_echo_wall(ew)\n        rmq_client.set_push_consumers_with_echo_wall(settings)\n        rmq_client.start_push_consumers()\n        while True:\n            sleep(3)  \n        ```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "RocketMQ,MessageQueue",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "echowall",
            "package_url": "https://pypi.org/project/echowall/",
            "platform": null,
            "project_url": "https://pypi.org/project/echowall/",
            "project_urls": {
                "GitHub": "https://github.com/ww166/echowall"
            },
            "release_url": "https://pypi.org/project/echowall/2.6.7/",
            "requires_dist": [
                "rocketmq-client-python (==2.0.0)",
                "snowflake-id (==0.0.2)"
            ],
            "requires_python": "",
            "summary": "",
            "version": "2.6.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15911277,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6c5a52170d5a2d284ba838c3087e88dd",
                    "sha256": "ff282b23384c3d862433065c507aa45d016d601d92d5b99b3443d5339c4388ce"
                },
                "downloads": -1,
                "filename": "echowall-2.6.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6c5a52170d5a2d284ba838c3087e88dd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22688,
                "upload_time": "2022-11-28T08:12:12",
                "upload_time_iso_8601": "2022-11-28T08:12:12.009278Z",
                "url": "https://files.pythonhosted.org/packages/de/66/f5e5163203a25e2c77d80ce74906be9b4d9af7c3086bf7dad3cf26d84847/echowall-2.6.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "86f9a05d8087f7dc5057880f3939e4fc",
                    "sha256": "3790dda6a54678a590b7baa57ec417256c6f4b401b35546901ce38f5d0332e4e"
                },
                "downloads": -1,
                "filename": "echowall-2.6.7.tar.gz",
                "has_sig": false,
                "md5_digest": "86f9a05d8087f7dc5057880f3939e4fc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17458,
                "upload_time": "2022-11-28T08:12:13",
                "upload_time_iso_8601": "2022-11-28T08:12:13.630353Z",
                "url": "https://files.pythonhosted.org/packages/d4/f7/a062bd247d3fecd94d4599c50e75596d4782387c7af936d83c1591ac4ae6/echowall-2.6.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}