{
    "0.1.0": {
        "info": {
            "author": "Carnegie Mellon University",
            "author_email": "satya+group@cs.cmu.edu",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# WireGuard VPN networking for unprivileged network namespaces\n\nwireguard4netns is directly inspired by the awesome work of the authors of\n[slirp4netns](https://github.com/rootless-containers/slirp4netns). Instead of\nproviding generic user-mode networking for unprivileged network namespaces\nthrough libslirp, wireguard4netns brings network access to the containers\nthrough [wireguard-go](https://git.zx2c4.com/wireguard-go/about/), a userspace\nWireGuard VPN tunnel implementation.\n\n\n## Motivation\n\nWe were building a framework for developing Edge-Native applications (the\n[Sinfonia](https://github.com/cmusatyalab/sinfonia/) project) and for this we\nsplit applications into two primary components, a frontend that runs on the\nuser's device and a backend consisting of one or more services are deployed on\na nearby Kubernetes cluster (`cloudlet`).  We leverage WireGuard tunnels\nbetween the two to avoid having to expose deployed services to the world, the\nfrontend's network environment is as if it was part of the same deployment\ninside the same Kubernetes cluster and namespace as the backend.  This hides\nmost unnecessary network details from the application's frontend and provides\nvarious other advantages such as privacy and network mobility.\n\nThe main disadvantage was that root privileges are needed to create, configure\nand attach the in-kernel WireGuard interface to a network namespace. This\nrequired either sudo access by the user, or an administrator installed setuid\nroot binary helper. However slirp4netns showed the path to an alternative\napproach, create a tuntap interface inside the unprivileged network namespace\nand pass the control socket back to the default namespace where (in our case) a\nuserspace WireGuard implementation is started. All frontend traffic is then\nsent through the tunnel to a VPN endpoint on the nearby cloudlet which passes\nit along to the deployed namespace of the application's backend.\n\n## Building from source\n\nMake sure you initialize and update the wireguard-go git-submodule.\n\n```sh\n    git clone ... wireguard4netns\n    cd wireguard4netns/\n    git submodule update --init\n    poetry build\n```\n\nThis will download a copy of golang and build a custom `wireguard-go` binary\nwhich will be placed at `src/wireguard4netns/wireguard-go`. As long as that\nbinary is present it will not try to rebuild the wireguard-go code again.\n\nWe have to use a custom built version osf wireguard-go because starting it with\nan existing tunnel socket fd is really just an artifact of how it sets up the\ntuntap device and uapi socket in the foreground and then daemonizes itself,\npassing along the already open file descriptors. With our approach the tuntap\ndevice ends up in a different network namespace and wireguard-go is unable to\nquery or set the MTU. The relevant changes to avoid failing on MTU operations\nis in `wireguard-go.patch`.\n\nWe also needed to make sure the UAPI socket is placed in a user-writable\nlocation instead of `/var/run/wireguard`, this `socketDirectory` path is\nmodified through a custom linker flag that is set in `build.py` where we build\nthe binary.\n\n\n## Licenses\n\nwireguard4netns is MIT licensed\n\n    Copyright (c) 2022 Carnegie Mellon University\n    SPDX-License-Identifier: MIT\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy of\n    this software and associated documentation files (the \"Software\"), to deal in\n    the Software without restriction, including without limitation the rights to\n    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n    of the Software, and to permit persons to whom the Software is furnished to do\n    so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE.\n\nwireguard-go is MIT licensed\n\n    Copyright (C) 2017-2022 WireGuard LLC. All Rights Reserved.\n    License: MIT\n\n    see wireguard-go/LICENSE and wireguard-go/README.md\n\n\"WireGuard\" is a registered trademark of Jason A. Donenfeld.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "wireguard4netns",
            "package_url": "https://pypi.org/project/wireguard4netns/",
            "platform": null,
            "project_url": "https://pypi.org/project/wireguard4netns/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/wireguard4netns/0.1.0/",
            "requires_dist": [
                "attrs (>=22.1.0,<23.0.0)",
                "importlib-resources (>=5.0,<6.0)",
                "pyroute2 (>=0.7.3,<0.8.0)",
                "typing-extensions (>=4.4.0,<5.0.0); python_version < \"3.8\"",
                "wireguard-tools (>=0.1.1,<0.2.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "WireGuard VPN networking for unprivileged network namespaces",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16117461,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "694bbc533050448b9231393a7a564a1a",
                    "sha256": "0584938d9eb5888120d32ce659529e1bf8dbad5bae294a6006cdc13c94d0e465"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "694bbc533050448b9231393a7a564a1a",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": ">=3.7,<4.0",
                "size": 1090459,
                "upload_time": "2022-12-15T19:21:29",
                "upload_time_iso_8601": "2022-12-15T19:21:29.860464Z",
                "url": "https://files.pythonhosted.org/packages/a3/71/70c09fadb840282b1c9531463f8452c0c91105a8e56f0e639282a8326355/wireguard4netns-0.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "01136318948c6449710150e0b5be6cd7",
                    "sha256": "36dad61c05e903440aa74891a016072fa4e5ce2ae8367d64bfe621afa3b8350c"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "01136318948c6449710150e0b5be6cd7",
                "packagetype": "bdist_wheel",
                "python_version": "cp311",
                "requires_python": ">=3.7,<4.0",
                "size": 1090459,
                "upload_time": "2022-12-15T19:21:31",
                "upload_time_iso_8601": "2022-12-15T19:21:31.502523Z",
                "url": "https://files.pythonhosted.org/packages/3a/c6/21e577b63f047e445c281898cd74599fe14b6121f2f053089442fdb94b26/wireguard4netns-0.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2a664b2a87846eed34ef79a74b2d7bfa",
                    "sha256": "e06203c789889aac977a989bf3704cf86dd1f71e9782ac056535cd1d4a1b3f83"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "2a664b2a87846eed34ef79a74b2d7bfa",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.7,<4.0",
                "size": 1090471,
                "upload_time": "2022-12-15T19:21:33",
                "upload_time_iso_8601": "2022-12-15T19:21:33.247772Z",
                "url": "https://files.pythonhosted.org/packages/30/48/17a3ae50db2ce6ca7de4bacedc476e967702ee6e914eccf558fc061b8550/wireguard4netns-0.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "84638977235f12bdc847299b93a89914",
                    "sha256": "c8aad600d04a04d8f49526efd6fd85bf88206b8ddbf10c4d67354b72568da472"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "84638977235f12bdc847299b93a89914",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.7,<4.0",
                "size": 1090458,
                "upload_time": "2022-12-15T19:21:34",
                "upload_time_iso_8601": "2022-12-15T19:21:34.936955Z",
                "url": "https://files.pythonhosted.org/packages/89/5b/fcc286354e437864cc201fdb927b91ce4facccbec5b1520d9fc7f825085b/wireguard4netns-0.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "15f4c7802409233bf373e1cf8d0c1b9d",
                    "sha256": "6363e4aece9116c1308e0410e19f4a2fd7a77c934e7d0ab560b846951e632bdd"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "has_sig": false,
                "md5_digest": "15f4c7802409233bf373e1cf8d0c1b9d",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.7,<4.0",
                "size": 1090465,
                "upload_time": "2022-12-15T19:21:36",
                "upload_time_iso_8601": "2022-12-15T19:21:36.663720Z",
                "url": "https://files.pythonhosted.org/packages/bf/f1/40901d20474dc5e2bac936030aae3bf0727dd827fbb5eeb97a3d78544716/wireguard4netns-0.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux_2_5_x86_64.manylinux1_x86_64.manylinux2014_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7ed3fb3cbc065bd26a4e9d7fb2829677",
                    "sha256": "d519e9b8733b2f362ee65a6f3c7e3a1a8c0d2f86ed665e5844fd0ed5734b00dd"
                },
                "downloads": -1,
                "filename": "wireguard4netns-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "7ed3fb3cbc065bd26a4e9d7fb2829677",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 117071,
                "upload_time": "2022-12-15T19:21:38",
                "upload_time_iso_8601": "2022-12-15T19:21:38.003404Z",
                "url": "https://files.pythonhosted.org/packages/9a/b9/1a495fd5c2049f03349b8ff28c044bd0560f88b3540d426312048e377823/wireguard4netns-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}