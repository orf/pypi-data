{
    "1.0.0a3": {
        "info": {
            "author": "",
            "author_email": "bwilk315 <bwilk315@onet.pl>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": " GNU GENERAL PUBLIC LICENSE  Version 2, June 1991  Copyright (C) 1989, 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA  Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.  Preamble  The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Lesser General Public License instead.) You can apply it to your programs, too.  When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.  To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.  For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.  We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.  Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.  Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.  The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION  0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".  Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.  1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.  You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.  2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:  a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change. b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License. c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)  These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.  Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.  In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.  3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:  a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or, c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)  The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.  If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.  4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.  5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.  6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.  7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.  If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.  It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.  This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.  8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.  9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.  Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.  10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.  NO WARRANTY  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.  To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.  one line to give the program's name and an idea of what it does. Copyright (C) yyyy  name of author  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.  Also add information on how to contact you by electronic and paper mail.  If the program is interactive, make it output a short notice like this when it starts in an interactive mode:  Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.  This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.  The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.  You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:  Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  signature of Ty Coon, 1 April 1989 Ty Coon, President of Vice  This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cliserc",
            "package_url": "https://pypi.org/project/cliserc/",
            "platform": null,
            "project_url": "https://pypi.org/project/cliserc/",
            "project_urls": {
                "Homepage": "https://github.com/bwilk315/cliserc"
            },
            "release_url": "https://pypi.org/project/cliserc/1.0.0a3/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Simplex based client server communication",
            "version": "1.0.0a3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15615464,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "92b1a527e6ccb704fe9297613bcf5c0b",
                    "sha256": "23c8dda3066eb5d0a458e871374634f981aa9220809dd71de45785b845126d7c"
                },
                "downloads": -1,
                "filename": "cliserc-1.0.0a3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "92b1a527e6ccb704fe9297613bcf5c0b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 19869,
                "upload_time": "2022-09-17T08:45:29",
                "upload_time_iso_8601": "2022-09-17T08:45:29.742080Z",
                "url": "https://files.pythonhosted.org/packages/8c/34/5cb2f9b2709b005157f51758f15180cbca29740bb33daa678b62b68dea7a/cliserc-1.0.0a3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d2e574bdab36206af3e996bd53e36758",
                    "sha256": "aa5af91b42ceb4a20eef2b7aa3246afb2dc2722ffefa4f81e70bdff70d1cad71"
                },
                "downloads": -1,
                "filename": "cliserc-1.0.0a3.tar.gz",
                "has_sig": false,
                "md5_digest": "d2e574bdab36206af3e996bd53e36758",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 12562,
                "upload_time": "2022-09-17T08:45:31",
                "upload_time_iso_8601": "2022-09-17T08:45:31.635483Z",
                "url": "https://files.pythonhosted.org/packages/8a/f7/dd732887884532ca1761afcbdbc495cce392995afe338be8e0377e779d2a/cliserc-1.0.0a3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0b1": {
        "info": {
            "author": "",
            "author_email": "bwilk315 <bwilk315@onet.pl>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cliserc",
            "package_url": "https://pypi.org/project/cliserc/",
            "platform": null,
            "project_url": "https://pypi.org/project/cliserc/",
            "project_urls": {
                "Homepage": "https://github.com/bwilk315/cliserc",
                "License": "https://www.apache.org/licenses/LICENSE-2.0.txt"
            },
            "release_url": "https://pypi.org/project/cliserc/1.0b1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Simple client-server communication utility",
            "version": "1.0b1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15615464,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "89a3134de105ce4b2340492bb2d19b8a",
                    "sha256": "0bb38abfd8aaf79f7876ff3375eb7fda37de9cc1a9ef6e78cf87c1608832adea"
                },
                "downloads": -1,
                "filename": "cliserc-1.0b1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "89a3134de105ce4b2340492bb2d19b8a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 13746,
                "upload_time": "2022-11-01T19:13:46",
                "upload_time_iso_8601": "2022-11-01T19:13:46.742840Z",
                "url": "https://files.pythonhosted.org/packages/68/41/773b7577d25dcabc35a058101009305effd65c96e8d22667dd64fe6c90f8/cliserc-1.0b1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5a1ead481d90a6e6295aa4923ad715e",
                    "sha256": "3c62abd9995bbf19ced881c732edb44e1f8f2f4e606b0c5ee90ed73ac582a5a4"
                },
                "downloads": -1,
                "filename": "cliserc-1.0b1.tar.gz",
                "has_sig": false,
                "md5_digest": "d5a1ead481d90a6e6295aa4923ad715e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 13928,
                "upload_time": "2022-11-01T19:13:48",
                "upload_time_iso_8601": "2022-11-01T19:13:48.975627Z",
                "url": "https://files.pythonhosted.org/packages/17/6b/6941361a7284ecb150cd5e6bd916b2ca249584caa6ad384f4dc41a0d4508/cliserc-1.0b1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0b2": {
        "info": {
            "author": "",
            "author_email": "bwilk315 <bwilk315@onet.pl>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Cliserc\n### Description\n*Cliserc* stands for *Client-Server Communication* which may occur in both directions but not in the same time (collision risk). Module is designed to be handy and simple in use; these are accomplished by structure the main class has.\\\nMain class called *Simplex* is prepared to be either server or client, everything depends on settings that developer will choose during the initialization step.\nRemember that difference between server and client matters, for better understanding: server is an upgraded version of client (it has more privileges).\n### Documentation\nTo start using main class first import it:\n```python\nfrom cliserc.simplex import Simplex\n```\nAll members of _Simplex_ class are listed and described below:\n\n##### Constants\n- constant float **MIN_CONN_INTERVAL**\\\nMinimum time interval in seconds between client disconnection and connection to a server assuring the proper work of both sides.\n\n- constant int **RES_NULL**\\\nResponse type indicating the lack of response type in received data.\n\n- constant int **RES_OK**\\\nType of response included in incoming data if sender received lastly sent data properly.\n\n- constant int **RES_EXIT**\\\nResponse included in incoming data if sender wants to close connection.\n\n##### Constructor parameters\n- param string **host**\n\t- client\\\n\tIPv4 address of target server (local or global).\n\t- server\\\n\tAddress which will be binded with server.\n\n- param int **port**\n\t- client\\\n\tPort of cliserc-based service running on the target server.\n\t- server\\\n\tPort which will be forwarded to cliserc-based service running on server machine.\n\n- param bool **is_server**\\\n\tShould current instance of class act as server?\n\n- kwarg function(_BNot_, _float_) -> _BNot_ **on_send** = lambda _resp_, _dt_: BNot({\"response\": Simplex.RES_OK})\\\nCallback function taking two parameters from which first is the received data encoded in Bartek's Notation object and second is time in seconds since last receive operation. Learn more about Bartek's Notation by reading its [documentation](https://pypi.org/project/bnot/) on PyPI.\n\n- kwarg function() -> None **on_connect** = lambda: None\\\nFunction invoked when host estabilishes connection with a remote host.\n\n- kwarg function() -> None **on_refuse** = lambda: None\\\nCustom callback function called when remote host refuses a connection from current.\n\n- kwarg function(_int_) -> None **on_exit** = lambda _code_: None\\\nCallback invoked when connection is finished, its only parameter is set to exit status code which indicates if exit occurred due user wish or some error.\n\n- kwarg string **net_encoding** = \"utf-8\"\\\nEncoding used to encode data which is then sent over network.\n\n- kwarg float **timeout** = 4.0\\\nMaximum time in seconds for current host to wait for connection, after this time host will not continue trying to connect, if process occurs in other thread it will be closed.\n\n- kwarg int **buff_size** = 128\\\nAmount of bytes describing communication buffer length. Length of data encoded into Bartek's Notation which is then sent over network can not exceed this amount, otherwise exceeding part of data will not be sent thus whole data will be broken.\n\n- kwarg bool **show_log** = False\\\nIf set to true, useful and readable information about everything happening in the cliserc-based network communication.\n\n##### Class members\n- member tuple[2] **address**\\\nTuple containing two elements which are host IPv4 address and cliserc-based service port respectively, it forms a network socket ...\n\t- client\\\n\t... to which client will try to connect. \n\t- server\\\n\t... which server will be bonded with.\n\n- member int **sent_bytes**\\\n\tTotal amount of sent bytes during the current connection.\n\n- member int **recv_bytes**\\\n\tTotal amount of received bytes during the current connection.\n\n- member bool **listening**\n\t- server\\\n\tWhether server is ready and listening for connection.\n\n- member bool **connected**\\\n\tTells if the current host is connected with a remote one.\n\n- member function(bool) -> bool **connect**\n\t- client\\\n\tTries to connect to the server with _address_ socket. The only parameter defines if separate thread should be created for connection process (then current will be free).\n\n- member function() -> bool **start**\n\t- server\\\n\tTries to bind server with IPv4 address _host_ and start cliserc-based service on port _port_. Returns whether everything went well during execution of function.\n\n- member function(bool) -> bool **wait**\n\t- server\\\n\tWaits for incoming connection and starts client-handling loop as soon as it estabilishes the connection if there is no active one. If no connection come in _timeout_ seconds function terminates. The only parameter specifies if separate thread should be created for waiting process (current will be free). Returns if everything went well.\n\n- member function() -> None **close**\n\tCloses the connection with remote host by ...\n\t- client\\\n\t... setting WOD (wish of disconnection) flag, server will then read it and call its version of this function.\n\t- server\\\n\t... closing all sockets and terminating client handler (if thread for it was created).\n\n### Client example\n##### Preparation\nCreate class instance with client behavior:\n```python\nclient = Simplex(\n\thost\t\t= '127.0.0.1',\n\tport\t\t= 6000,\n\tis_server\t= False,\n\tshow_log\t= False,\n\ton_send\t\t= custom_on_send\n)\n```\nOn connection try client will try to connect to the host with address '127.0.0.1' (localhost) on port 6000, *on_send* keyword argument is set to custom function *custom_on_send* for processing received data and composing response, its value (callback function) must return Bartek's Notation object *BNot* (read more about this notation [here](https://pypi.org/project/bnot/)) which is then encoded and sent over network; callback contains two parameters: first typed *BNot* (received data as Bartek's Notation) and second typed *float* (Time between last data receive and current). As you can see you are going to manage data flow with only one function which is actually simple:\n```python\nfrom bnot import BNot  # Import notation manager.\n\ndef custom_on_send(resp: BNot, dt: float) -> BNot:\n\t\"\"\" Callback managing the data flow on client side \"\"\"\n\t# Get the message value, if it is not available return default.\n\tmsg = resp.get('msg', 'No he did not.')\n\t# Show message on screen.\n\tprint(f'Server sent a message: {msg}')\n\t# Response to server with status OK.\n\treturn BNot({'response': Simplex.RES_OK})\n```\nYou can exit connection by sending _RES_EXIT_ status instead.\n##### Testing\nIf everything is set up, try to connect:\n```python\n# If set to False (without another thread) current thread will\n# be blocked until communication with server closes or target server\n# is inaccessible.\nsuccess = client.connect(create_thread=True)\nprint('Current thread is now free!')\n```\nNow client will try to connect in another thread (current will be free), _success_ variable stores the boolean value that tells if connection was successful. You can always use _close_ member method to inform server about wish of disconnection, it works similarly to sending exit status presented in previous section.\n### Server example\n##### Preparation\nCreate class instance with server behavior:\n```python\nserver = Simplex(\n\thost\t\t= '127.0.0.1',\n\tport\t\t= 6000,\n\tis_server \t= True,\n\tshow_log\t= False,\n\ton_send\t\t= custom_on_send\n)\n```\nDefine data flow behaviour by defining a callback function:\n```python\nfrom time import sleep\nfrom bnot import BNot  # Import notation manager.\n\ndef custom_on_send(resp: BNot, dt: float) -> BNot:\n\t\"\"\" Callback managing the data flow on server side \"\"\"\n\tsleep(1)  # Limit transmission speed to 1/s.\n\t# Include message in response to client.\n    return BNot({\n\t\t'response': Simplex.RES_OK,\n\t\t'msg': 'Greetings!'\n\t})\n```\nOn _start_ method call, attempt to bind server with address 127.0.0.1 on port 6000 will occur:\n```python\nsuccess = server.start()\n```\nHere the *success* variable stores a boolean value which indicates whether server has started properly.\n##### Listening for client\nLet server start listening for incoming connection using _wait_ member method:\n```python\nif success:\n\t# If set to False (without additional thread) current will be blocked\n\t# until server closes connection with a client or gets timed out.\n\tserver.wait(create_thread=True)\n\tprint('This thread is free on my demand now!')\n# server.close()\n```\nThe way with another thread included is the best for programs where something has to run in parallel with waiting process. Uncomment _close_ function call if you do not create another thread: if everything happens in another thread and current is free, program will execute next lines including method call.\n### Summary\nCongratulations! you have just programmed a working server software. Experiment with client example explained above this example section. Personally I invented this module to exchange android sensors' data over network (android-pc communication) in my custom notation format (reference to module called [bnot](https://pypi.org/project/bnot/)) using my another module for getting android sensors data called [sendroid](https://pypi.org/project/sendroid/). I learned a lot during this journey, now module is in beta version and ready to test, if you have any problems please create an issue on [cliserc github page](https://github.com/bwilk315/cliserc).",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cliserc",
            "package_url": "https://pypi.org/project/cliserc/",
            "platform": null,
            "project_url": "https://pypi.org/project/cliserc/",
            "project_urls": {
                "Homepage": "https://github.com/bwilk315/cliserc",
                "License": "https://www.apache.org/licenses/LICENSE-2.0.txt"
            },
            "release_url": "https://pypi.org/project/cliserc/1.0b2/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Simple client-server communication utility",
            "version": "1.0b2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15615464,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ad26bfaa1f3d580fce1a1447c2d1870f",
                    "sha256": "38fed12f8701eabb3e9d3fe79354ae4267f089942bb856a535af349ce5a99de7"
                },
                "downloads": -1,
                "filename": "cliserc-1.0b2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ad26bfaa1f3d580fce1a1447c2d1870f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 13722,
                "upload_time": "2022-11-01T19:24:13",
                "upload_time_iso_8601": "2022-11-01T19:24:13.097022Z",
                "url": "https://files.pythonhosted.org/packages/0d/2d/3c331cc0086fa01ebb1c0c30c260d04e0941a6e159e85835aa3ce617e412/cliserc-1.0b2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d502412412e0e86eee4fbcd1a8585f43",
                    "sha256": "5261e00bf592e0972761ea55dcb28cb674e64d9f771d880015bd68723198595f"
                },
                "downloads": -1,
                "filename": "cliserc-1.0b2.tar.gz",
                "has_sig": false,
                "md5_digest": "d502412412e0e86eee4fbcd1a8585f43",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 13921,
                "upload_time": "2022-11-01T19:24:15",
                "upload_time_iso_8601": "2022-11-01T19:24:15.360233Z",
                "url": "https://files.pythonhosted.org/packages/c7/47/4252c62e851217400a81b7baacd59843ed4eae74e3f7f6719a234e2ecf8c/cliserc-1.0b2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}