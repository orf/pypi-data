{
    "2.0.0": {
        "info": {
            "author": "Alexander Shmakov",
            "author_email": "Alexanders101@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Environment :: GPU :: NVIDIA CUDA :: 11.3",
                "Environment :: GPU :: NVIDIA CUDA :: 11.6",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Operating System :: POSIX",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Physics",
                "Typing :: Typed"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Alexanders101/SPANet",
            "keywords": "",
            "license": "BSD-3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "spanet",
            "package_url": "https://pypi.org/project/spanet/",
            "platform": null,
            "project_url": "https://pypi.org/project/spanet/",
            "project_urls": {
                "Homepage": "https://github.com/Alexanders101/SPANet"
            },
            "release_url": "https://pypi.org/project/spanet/2.0.0/",
            "requires_dist": [
                "torch (>=1.10)",
                "numpy (>=1.22)",
                "h5py (>=3.7)",
                "numba (>=0.55)",
                "pytorch-lightning",
                "tqdm",
                "sympy",
                "pyyaml",
                "opt-einsum",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Symmetry Preserving Attention Networks",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15658267,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "262bd54ef12fa14e6c74c05dce0a924d",
                    "sha256": "aafdc2ae1d7709bce42ffdb4a1ad715b0df2e9bd5c14d9bea4735f02f7969a93"
                },
                "downloads": -1,
                "filename": "spanet-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "262bd54ef12fa14e6c74c05dce0a924d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 91119,
                "upload_time": "2022-10-31T19:56:23",
                "upload_time_iso_8601": "2022-10-31T19:56:23.267268Z",
                "url": "https://files.pythonhosted.org/packages/eb/1b/f8154de174f7edbcc76e222eb5a44f3289e35cd243e4af0cf1323ab31003/spanet-2.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "82f3bc04d704d4445cfb351f58832b2d",
                    "sha256": "4b41da504f07c32529b6ce06bcf0b985c4354b70b4267a5277a5bd1694ec2c28"
                },
                "downloads": -1,
                "filename": "spanet-2.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "82f3bc04d704d4445cfb351f58832b2d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 61199,
                "upload_time": "2022-10-31T19:56:25",
                "upload_time_iso_8601": "2022-10-31T19:56:25.050129Z",
                "url": "https://files.pythonhosted.org/packages/61/06/8c01621f234ccafc9ece74c14eaf1d5fed5d00571f01e09d666aea9816f8/spanet-2.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Alexander Shmakov",
            "author_email": "Alexanders101@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Environment :: GPU :: NVIDIA CUDA :: 11.3",
                "Environment :: GPU :: NVIDIA CUDA :: 11.6",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: BSD License",
                "Operating System :: POSIX",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Physics",
                "Typing :: Typed"
            ],
            "description": "# Symmetry Preserving Attention Networks\n\nA library for training and evaluation SPANets on jet reconstruction tasks. \nOriginally developed for `ttbar` analysis,\nthis library now supports arbitrary event topologies and symmetry groups.\n\n## Version 2 Update\n\nWe recently pushed an updated version 2 of this library which adds several new features.\n1. New configuration file format with more options on inputs and event topology.\n2. Allow for several different inputs, including global inputs for additional context.\n3. New Regression and Classification output heads for performing per-event or per-particle predictions.\n4. Gated transformers and linear layers for more robust networks. Less hyperparameter optimization.\n\n## Installation\nYou can install this package to use it outside of the repository after cloning.\n\n```bash\ngit clone https://github.com/Alexanders101/SPANet\ncd SPANet\npip install .\n```\n\nAlternatively, you can use `pip install -e .` to install in an editable mode.\n\n### Note\nThe configuration `ini` has been deprecated into a configuration `yaml`. The conversion should just be to change the syntax a bit, the values should remain the same. A conversion script is in the works.\n\nThe dataset format has also changed slighty, but old style datasets can be converted into a new style dataset using [`utils/convert_dataset.py`](utils/convert_dataset.py).\n\nThe old codebase may always be accesed here: [https://github.com/Alexanders101/SPANet/tree/v1.0](https://github.com/Alexanders101/SPANet/tree/v1.0)\n\n## Dependencies\n\nA list of the libraries necessary to fully train and evaluate SPANets. \nThese are only the minimum versions that we tested, other versions might work.\n\n| Library                                                 | Minimum Version |\n| ------------------------------------------------------- |-----------------|\n| python                                                  | 3.9             |\n| [numpy](https://pypi.org/project/numpy/)                | 1.22.1          |\n| [sympy](https://www.sympy.org/en/index.html)            | 1.11            |\n| [scikit_learn](https://scikit-learn.org/stable/)        | 1.1             |\n| [pytorch](https://pytorch.org/)                         | 1.12            |\n| [pytorch-lightning](https://www.pytorchlightning.ai/)   | 1.7             |\n| [opt_einsum](https://github.com/dgasmith/opt_einsum)    | 3.3.0           |\n| [h5py](https://pypi.org/project/h5py/)                  | 2.10            |\n| [numba](https://numba.pydata.org/)                      | 0.53.1          |\n\nWe have updated to using an anaconda environment for simpler dependency management.\nYou can create the environment locally with the following conda / mamba commands:\n```bash\nconda env create -p ./environment --file environment.yaml\nconda activate ./environment\n```\n\n## Example\nWe have provided a simple `ttbar` example in order to demonstrate how to\ndefine events, construct datasets, and train & evaluate a network.\n\n\n[Refer to this page for a detailed walk-through \nfor the `ttbar` example](docs/TTBar.md).\n\nThe full `ttbar` dataset may be downloaded here: http://mlphysics.ics.uci.edu/data/2021_ttbar/.\n\n## Usage\nUsing this library requires setting up several components. \nRefer to the following documentation pages in order to learn about the\nthe different setup components, or just follow the ttbar example.\n\n1. [Defining the event topology](docs/EventInfo.md).\n2. [Creating a training dataset](docs/Dataset.md).\n3. [Configuring training options](docs/Options.md).\n\n\n### Training\n\nOnce those steps are complete, you can begin training by \ncalling `spanet.train` with your chosen parameters. For more information\nsimply run `python -m spanet.train --help`\n\nYou can experiment with the provided example configuration and dataset\nfor some `ttbar` events by calling \n`python -m spanet.train -of options_files/full_hadronic_ttbar/example.json --gpus NUM_GPUS` \nwhere `NUM_GPUS` is the number of gpus available on your machine.\n\n### Evaluation\n\nOnce training is complete, you may evalute a network on\na testing dataset by running `spanet.test` with a path to your previously\ntrained network and a file on which to evalute on.\n\nFor example, after running the previous training run on `ttbar_example`, \nyou can evaluate the network again on the example dataset by running.\n`python -m spanet.test ./spanet_output/version_0 -tf data/full_hadronic_ttbar/example.h5`\n\nNote that the included example file is very small and you will likely not\nsee very good performance on it.\n\n## Citation\nIf you use this software for a publication, please cite the following:\\\n```bibtex\n@Article{10.21468/SciPostPhys.12.5.178,\n\ttitle={{SPANet: Generalized permutationless set assignment for particle physics  using symmetry preserving attention}},\n\tauthor={Alexander Shmakov and Michael James Fenton and Ta-Wei Ho and Shih-Chieh Hsu and Daniel Whiteson and Pierre Baldi},\n\tjournal={SciPost Phys.},\n\tvolume={12},\n\tpages={178},\n\tyear={2022},\n\tpublisher={SciPost},\n\tdoi={10.21468/SciPostPhys.12.5.178},\n\turl={https://scipost.org/10.21468/SciPostPhys.12.5.178},\n}\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Alexanders101/SPANet",
            "keywords": "",
            "license": "BSD-3-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "spanet",
            "package_url": "https://pypi.org/project/spanet/",
            "platform": null,
            "project_url": "https://pypi.org/project/spanet/",
            "project_urls": {
                "Homepage": "https://github.com/Alexanders101/SPANet"
            },
            "release_url": "https://pypi.org/project/spanet/2.0.1/",
            "requires_dist": [
                "torch (>=1.10)",
                "numpy (>=1.22)",
                "h5py (>=3.7)",
                "numba (>=0.55)",
                "pytorch-lightning",
                "tqdm",
                "sympy",
                "pyyaml",
                "opt-einsum",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Symmetry Preserving Attention Networks",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15658267,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "627df511068e5da33ab1e31d4dc4cb96",
                    "sha256": "1b339d246e1b1bafd6f7be5157093baad06cfb1880b15ec14b31ccdf47824d3f"
                },
                "downloads": -1,
                "filename": "spanet-2.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "627df511068e5da33ab1e31d4dc4cb96",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 93869,
                "upload_time": "2022-11-04T17:56:47",
                "upload_time_iso_8601": "2022-11-04T17:56:47.170218Z",
                "url": "https://files.pythonhosted.org/packages/83/dd/e6c394a5f940318f5cfa50aa1ed028f2941467c5932e485e808e00190375/spanet-2.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e84e44a294757e50039911e697ea4af6",
                    "sha256": "a8a568d2e7d4cf70603e2f4c2fdc9ff6e5e147053c02a3b16c9fc566ab8e42fa"
                },
                "downloads": -1,
                "filename": "spanet-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "e84e44a294757e50039911e697ea4af6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 63896,
                "upload_time": "2022-11-04T17:56:49",
                "upload_time_iso_8601": "2022-11-04T17:56:49.421568Z",
                "url": "https://files.pythonhosted.org/packages/3c/ae/4c3d45bde61a445e1f27b5824e803f7d1f43fd523258572238308b0600a1/spanet-2.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}