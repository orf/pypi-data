{
    "0.0.12": {
        "info": {
            "author": "AVALDATA",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: BSD License",
                "Natural Language :: Japanese",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.avaldata.co.jp/contact",
            "keywords": "AVALDATA acapy",
            "license": "3-Clause BSD License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "acapy",
            "package_url": "https://pypi.org/project/acapy/",
            "platform": "",
            "project_url": "https://pypi.org/project/acapy/",
            "project_urls": {
                "Homepage": "https://www.avaldata.co.jp/contact"
            },
            "release_url": "https://pypi.org/project/acapy/0.0.12/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "AVALDATA AcapLib2 Python wrapper.",
            "version": "0.0.12",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12296977,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c1457bf7c24640d52c73c9b0c7594633",
                    "sha256": "a56095801373736fd728ccfdd02cf11431a567bcc3d31ffc38f8ed4688353daf"
                },
                "downloads": -1,
                "filename": "acapy-0.0.12-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c1457bf7c24640d52c73c9b0c7594633",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 52016,
                "upload_time": "2021-04-12T05:44:13",
                "upload_time_iso_8601": "2021-04-12T05:44:13.833330Z",
                "url": "https://files.pythonhosted.org/packages/24/74/d15a80a08b28b05313feacecc0eaf0fb9701785d0a705d647ab388c901b4/acapy-0.0.12-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.18": {
        "info": {
            "author": "AVALDATA",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: BSD License",
                "Natural Language :: Japanese",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.avaldata.co.jp/contact",
            "keywords": "AVALDATA acapy AcapLib2",
            "license": "3-Clause BSD License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "acapy",
            "package_url": "https://pypi.org/project/acapy/",
            "platform": "",
            "project_url": "https://pypi.org/project/acapy/",
            "project_urls": {
                "Homepage": "https://www.avaldata.co.jp/contact"
            },
            "release_url": "https://pypi.org/project/acapy/0.0.18/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "acapy package (Python bindings for AVALDATA AcapLib2 )",
            "version": "0.0.18",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12296977,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0827b6594bcd25a9bfc22d2ccb1d0b0b",
                    "sha256": "356a609dcd68df6cd4620242031581246d609d73ec673cee0e80e1f586ee0ee3"
                },
                "downloads": -1,
                "filename": "acapy-0.0.18-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0827b6594bcd25a9bfc22d2ccb1d0b0b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 67254,
                "upload_time": "2021-07-13T04:31:30",
                "upload_time_iso_8601": "2021-07-13T04:31:30.232853Z",
                "url": "https://files.pythonhosted.org/packages/bf/7a/12cad3ec4c787b115a1b85c6fe5de1d67d213be5e817ec9f36ec5da29861/acapy-0.0.18-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "AVALDATA",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: BSD License",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.avaldata.co.jp/contact",
            "keywords": "AVALDATA acapy",
            "license": "3-Clause BSD License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "acapy",
            "package_url": "https://pypi.org/project/acapy/",
            "platform": "",
            "project_url": "https://pypi.org/project/acapy/",
            "project_urls": {
                "Homepage": "https://www.avaldata.co.jp/contact"
            },
            "release_url": "https://pypi.org/project/acapy/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "AVALDATA AcapLib2 Python wrapper.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12296977,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8a5925ff23ec8c2b09f61c28481287c0",
                    "sha256": "8fb37e46e7d921c5c07249328c6b9831bae87c9d9d65532ed486a7079f909f13"
                },
                "downloads": -1,
                "filename": "acapy-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8a5925ff23ec8c2b09f61c28481287c0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 2076,
                "upload_time": "2021-03-18T08:42:28",
                "upload_time_iso_8601": "2021-03-18T08:42:28.257150Z",
                "url": "https://files.pythonhosted.org/packages/82/28/8055122e1b1d1ed30349538c73d45735d4987800f0e5a5ff36d9bcb9718a/acapy-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "AVALDATA",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: BSD License",
                "Natural Language :: Japanese",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3.6"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.avaldata.co.jp/contact",
            "keywords": "AVALDATA acapy AcapLib2",
            "license": "3-Clause BSD License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "acapy",
            "package_url": "https://pypi.org/project/acapy/",
            "platform": "",
            "project_url": "https://pypi.org/project/acapy/",
            "project_urls": {
                "Homepage": "https://www.avaldata.co.jp/contact"
            },
            "release_url": "https://pypi.org/project/acapy/1.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "acapy package (Python bindings for AVALDATA AcapLib2 )",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12296977,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cef17763023b78bc552b509aa4923a2b",
                    "sha256": "18932b0649a8c11a8a647de5e4ddb592c6966d83f9af61d575912e3ebc17b2a0"
                },
                "downloads": -1,
                "filename": "acapy-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cef17763023b78bc552b509aa4923a2b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 67279,
                "upload_time": "2021-12-14T05:10:38",
                "upload_time_iso_8601": "2021-12-14T05:10:38.353902Z",
                "url": "https://files.pythonhosted.org/packages/05/d6/c38e47e3f3fdd3d35148be2311096439b8ebdb78bd62ded8aed83475e012/acapy-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0rc1": {
        "info": {
            "author": "AVALDATA",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: BSD License",
                "Natural Language :: Japanese",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3.6"
            ],
            "description": "acapy package (Python bindings for AVALDATA AcapLib2 )\n\n# Index\n\n- [**Installation**](#Installation)\n- [**Requirment**](#Requirment)\n- [**LICENSE**](#LICENSE)\n- [**AcaPy Class**](#AcaPy-Class)\n  - [Examples](#Examples)\n  - [Constructors](#Constructors)\n  - [Properties](#Properties)\n  - [Methods](#Methods)\n- [**GraphicsBox Class**](#GraphicsBox-Class)\n  - [Constructors](#Constructors-2)\n  - [Properties](#Properties-2)\n  - [Methods](#Methods-2)\n- [**Changelog**](#Changelog)\n\n\n\n# Installation\n\n```\npip install acapy\n```\n\n\n\n# Requirment\n\n- AcapLib2 (AVALDATA SDK)\n- numpy\n- Pillow\n\n\u203b\u30b5\u30f3\u30d7\u30eb\u306e\u5b9f\u884c\u306b\u306fOepnCV\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n<div style=\"page-break-after:always\"></div>\n\n# LICENSE\n\n```\nBSD 3-Clause License\n\nCopyright (c) 2021, AVALDATA\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n<div style=\"page-break-after:always\"></div>\n\n# AcaPy Class\n\nAcapLib2\u3092Python\u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n\n\n## Examples\n\n### Snap sample\n\n\u753b\u50cf\uff11\u679a\u3092\u7e70\u308a\u8fd4\u3057\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u9ad8\u901f\u306b\u753b\u50cf\u3092\u9023\u7d9a\u53d6\u8fbc\u3059\u308b\u5834\u5408\u306f\u3001[Grab sample](#Grab-sample)\u3092\u53c2\u7167\u4e0b\u3055\u3044\u3002\n\n```Python\nimport sys\n\nimport cv2\nimport acapy\n\n# AcaPy\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\ncapture = acapy.AcaPy()\n\nif capture.is_opened == False:\n    # \u30ad\u30e3\u30d7\u30c1\u30e3\u30dc\u30fc\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u306f\u7d42\u4e86\n    del(capture)\n    sys.exit(0)\n\n# ini\u30d5\u30a1\u30a4\u30eb\uff08\u30dc\u30fc\u30c9\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\uff09\u306e\u8aad\u8fbc\n# ini\u30d5\u30a1\u30a4\u30eb\u306f\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u30ab\u30e1\u30e9\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\ncapture.load_inifile(\"./AreaSensor_mono.ini\")\n\nwhile(True):\n    # \u753b\u50cf\u3092\uff11\u679a\u53d6\u5f97\n    ret, frame = capture.snap() # \u30ab\u30e9\u30fc\u306e\u3068\u304d\u306fBGR(OpenCV\u306eMat\u3068\u4e92\u63db)\n    # \u753b\u50cf\u306e\u8868\u793a\n    cv2.imshow (\"Image\", frame )\n\n    if cv2.waitKey(1) > 0:\n        # \u30ad\u30fc\u5165\u529b\u5f85\u3061\n        break\n\ncv2.destroyAllWindows()\n```\n\n<div style=\"page-break-after:always\"></div>\n\n### Grab sample\n\n\u9023\u7d9a\u7684\u306b\u753b\u50cf\u3092\u53d6\u308a\u8fbc\u307f\u307e\u3059\u3002\n\n```python\nimport sys\n\nimport cv2\nimport acapy\n\n# AcaPy\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\ncapture = acapy.AcaPy()\n\nif capture.is_opened == False:\n    # \u30ad\u30e3\u30d7\u30c1\u30e3\u30dc\u30fc\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3068\u304d\u306f\u7d42\u4e86\n    del(capture)\n    sys.exit(0)\n\n# ini\u30d5\u30a1\u30a4\u30eb\uff08\u30dc\u30fc\u30c9\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\uff09\u306e\u8aad\u8fbc\n# ini\u30d5\u30a1\u30a4\u30eb\u306f\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u30ab\u30e1\u30e9\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\ncapture.load_inifile(\"./AreaSensor_mono.ini\")\n\n# grab(\u9023\u7d9a\u753b\u50cf\u53d6\u8fbc)\u306e\u958b\u59cb\ncapture.grab_start()\n\nwhile(True):\n    \n    # \u524d\u56de\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u6b21\u304b\u3089\u4eca\u56de\u306e\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u3092\u53d6\u5f97\n    ret, frames, count, frame_no = capture.read_frames()# \u30ab\u30e9\u30fc\u306e\u3068\u304d\u306fBGR(OpenCV\u306eMat\u3068\u4e92\u63db)\n    if ret < 0:\n        # \u753b\u50cf\u30e1\u30e2\u30ea\u306e\u4e0a\u66f8\u304d\u304c\u767a\u751f\u3057\u3066\u3044\u308b\n        # ini\u30d5\u30a1\u30a4\u30eb\u306eUSER_MEMORY_NUM\u306e\u5024\u3001\u3082\u3057\u304f\u306fAcaPy\u30af\u30e9\u30b9\u306emem_num\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u3092\u5927\u304d\u304f\u3059\u308b\u3053\u3068\n        pass\n    elif ret == acapy.AcaPy.ERROR:\n        # \u30d5\u30ec\u30fc\u30e0\u30a8\u30f3\u30c9\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u767a\u751f\u6642\u3001Grab\u306e\u30eb\u30fc\u30d7\u505c\u6b62\n        break\n        \n    # \u6700\u5f8c\u306b\u53d6\u5f97\u3057\u305f\u753b\u50cf\u3092\u8868\u793a\n    cv2.imshow (\"Image\", frames[count - 1] )\n\n    if cv2.waitKey(1) > 0:\n        # \u30ad\u30fc\u5165\u529b\u5f85\u3061\n        break\n\n# grab(\u9023\u7d9a\u753b\u50cf\u53d6\u8fbc)\u306e\u505c\u6b62\ncapture.grab_stop()\n\ncv2.destroyAllWindows()\n```\n\n<div style=\"page-break-after:always\"></div>\n\n## Constructors\n\n\u30dc\u30fc\u30c9\u756a\u53f7\u3001\u30c1\u30e3\u30f3\u30cd\u30eb\u756a\u53f7\u3092\u6307\u5b9a\u3057\u3066\u3001\u753b\u50cf\u5165\u529b\u30dc\u30fc\u30c9\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u30dc\u30fc\u30c9\u304c\u30aa\u30fc\u30d7\u30f3\u51fa\u6765\u305f\u304b\u3069\u3046\u304b\u306f\u3001**is_opened**\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\ndef __init__(self, board_id: int = 0, ch: int = 1, debug_print: bool = True):\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d        | \u578b   | \u8aac\u660e                                                         |\n| ----------- | ---- | ------------------------------------------------------------ |\n| board_id    | int  | 0\u4ee5\u4e0a\u306e\u30dc\u30fc\u30c9\u756a\u53f7\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002                              |\n| ch          | int  | 1\u4ee5\u4e0a\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u756a\u53f7\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002                          |\n| debug_print | bool | True\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3001AcaPy\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306b\u30a8\u30e9\u30fc\u7b49\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a8\u30e9\u30fc\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002False\u3092\u6307\u5b9a\u3059\u308b\u3068\u4f55\u3082\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002 |\n\n## Properties\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u306f\u3001\u5024\u3092\u8a2d\u5b9a\u5f8c\u3001refrect_param()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u8a2d\u5b9a\u304c\u753b\u50cf\u5165\u529b\u30dc\u30fc\u30c9\u306b\u53cd\u6620\u3055\u308c\u307e\u3059\u3002\nrefrect_param()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u5fd8\u308c\u305f\u5834\u5408\u3001grab_start()\u30e1\u30bd\u30c3\u30c9\u5185\u3067refrect_param()\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n| Properties                    | Descriptoin                                                  | Get/Set | ini  parameter                           |\n| ----------------------------- | ------------------------------------------------------------ | :-----: | ---------------------------------------- |\n| acaplib2_version              | AcapLib2\u306eDLL\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                        |   \u25cf/-   |                                          |\n| a_cw_ccw                      | \u30a8\u30f3\u30b3\u30fc\u30c0A\u76f8\u306e\u56de\u8ee2\u65b9\u5411\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                        |   \u25cf/-   |                                          |\n| b_cw_ccw                      | \u30a8\u30f3\u30b3\u30fc\u30c0B\u76f8\u306e\u56de\u8ee2\u65b9\u5411\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                        |   \u25cf/-   |                                          |\n| bayer_enable                  | \u30d9\u30a4\u30e4\u30fc\u5909\u63db\u306e\u6709\u52b9\uff0f\u7121\u52b9\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   | USER_BAYER_ENABLE                        |\n| bayer_grid                    | \u30d9\u30a4\u30e4\u30fc\u5909\u63db\u958b\u59cb\u4f4d\u7f6e\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002           |   \u25cf/\u25cf   | USER_BAYER_GRID                          |\n| bayer_input_bit               | Bayer\u753b\u50cf\u306eBit\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                         |   \u25cf/\u25cf   | USER_BAYER_INPUT_BIT                     |\n| bayer_lut_data                | \u7de8\u96c6\u3059\u308bLUT\u30c7\u30fc\u30bf\u914d\u5217(\u30ea\u30b9\u30c8)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002            |   \u25cf/\u25cf   |                                          |\n| bayer_lut_edit                | BayerLUT\u306e\u7de8\u96c6\u3092\u958b\u59cb\u30fb\u505c\u6b62\u3057\u307e\u3059\u3002                           |   \u25cf/\u25cf   |                                          |\n| bayer_output_bit              | Bayer\u5909\u63db\u5f8c\u306eBit\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   | USER_BAYER_OUTPUT_BIT                    |\n| board_bit                     | \u30dc\u30fc\u30c9\u3067\u78ba\u4fdd\u3059\u308b\u753b\u50cf\u7528\u30e1\u30e2\u30ea\u306e\u30d3\u30c3\u30c8\u5e45\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002         |   \u25cf/-   | USER_GRABBER_BIT_DEPTH                   |\n| board_id                      | \u521d\u671f\u5316\u3055\u308c\u305f\u30dc\u30fc\u30c9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                           |   \u25cf/-   |                                          |\n| board_error                   | \u30dc\u30fc\u30c9\u30a8\u30e9\u30fc\u3092\u53d6\u5f97\u30fb\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002                           |   \u25cf/\u25cf   |                                          |\n| board_name                    | \u521d\u671f\u5316\u3055\u308c\u305f\u30dc\u30fc\u30c9\u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                           |   \u25cf/-   |                                          |\n| board_temp                    | \u57fa\u677f\u6e29\u5ea6\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                       |   \u25cf/-   |                                          |\n| buffer_zero_fill              | \u521d\u671f\u5316\u6642\u306b\u30d0\u30c3\u30d5\u30a1\u3092\u30bc\u30ed\u30af\u30ea\u30a2\u3059\u308b\u304b\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   |                                          |\n| camera_bit                    | \u30ab\u30e1\u30e9\u304b\u3089\u5165\u529b\u3059\u308b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_CAMERA_BIT_DEPTH                    |\n| camera_state                  | \u30ab\u30e1\u30e9\u306e\u63a5\u7d9a\u72b6\u614b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               |   \u25cf/-   |                                          |\n| capture_flag                  | \u30ad\u30e3\u30d7\u30c1\u30e3\u72b6\u6cc1\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                 |   \u25cf/-   |                                          |\n| cc_cycle                      | CC\u4fe1\u53f7\u306e\u5468\u671f[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   | USER_SW_TRIGGER_CYCLE                    |\n| cc_cycle_ex                   | CC\u4fe1\u53f7\u306e\u5468\u671f[100nsec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                    |   \u25cf/\u25cf   | USER_SW_TRIGGER_CYCLE                    |\n| cc_delay                      | CC\u4fe1\u53f7\u306e\u51fa\u529b\u9045\u5ef6\u6642\u9593[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002               |   \u25cf/\u25cf   | USER_CC_DELAY                            |\n| cc_enable                     | CC\u4fe1\u53f7\u51fa\u529b\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_SW_TRIGGER_ENABLE                   |\n| cc_out_no                     | CC\u4fe1\u53f7\u306e\u756a\u53f7(1\uff5e4)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   | USER_CL_CC_OUT_NO                        |\n| cc_polarity                   | CC\u4fe1\u53f7\u306e\u8ad6\u7406\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                             |   \u25cf/\u25cf   | USER_SW_TRIGGER_POLARITY                 |\n| cc1_polarity                  | CC1\u4fe1\u53f7\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                      |   \u25cf/\u25cf   | USER_CL_CC1_POLARITY                     |\n| cc2_polarity                  | CC2\u4fe1\u53f7\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                      |   \u25cf/\u25cf   | USER_CL_CC2_POLARITY                     |\n| cc3_polarity                  | CC3\u4fe1\u53f7\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                      |   \u25cf/\u25cf   | USER_CL_CC3_POLARITY                     |\n| cc4_polarity                  | CC4\u4fe1\u53f7\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                      |   \u25cf/\u25cf   | USER_CL_CC4_POLARITY                     |\n| cc_stop                       | \u753b\u50cf\u5165\u529b\u505c\u6b62\u5f8c\u3001CC\u51fa\u529b\u3092\u884c\u3046\u304b\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   | USER_CC_STOP                             |\n| cancel_initialize             | \u521d\u671f\u5316\u3068\u5185\u90e8\u30d0\u30c3\u30d5\u30a1\u78ba\u4fdd\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002           |   \u25cf/\u25cf   | USER_CANCEL_INITIALIZE                   |\n| ch                            | \u521d\u671f\u5316\u3055\u308c\u305f\u30c1\u30e3\u30f3\u30cd\u30eb\u756a\u53f7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                     |   \u25cf/-   |                                          |\n| channel_num                   | \u30dc\u30fc\u30c9\u306e\u7dcf\u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                         |   \u25cf/-   |                                          |\n| chatter_separate              | \u5916\u90e8\u30c8\u30ea\u30ac\u691c\u51fa\u7121\u52b9\u6642\u9593\u306e\u8a2d\u5b9a\u65b9\u6cd5\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_EXTERNAL_TRIGGER  _CHATTER_SEPARATE |\n| count_cc                      | CC\u4fe1\u53f7\u306e\u51fa\u529b\u56de\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               |   \u25cf/-   |                                          |\n| count_exttrig                 | EXTTRIG(\u5916\u90e8\u30c8\u30ea\u30ac)\u4fe1\u53f7\u306e\u5165\u529b\u56de\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002              |   \u25cf/-   |                                          |\n| count_fval                    | FVAL\u4fe1\u53f7\u306e\u5165\u529b\u56de\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                             |   \u25cf/-   |                                          |\n| count_lval                    | LVAL\u4fe1\u53f7\u306e\u5165\u529b\u56de\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                             |   \u25cf/-   |                                          |\n| custom                        | FPGA\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u884c\u308f\u308c\u305f\u756a\u53f7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                 |   \u25cf/-   |                                          |\n| cxp_acquision  _start_address | CXP\u898f\u683c\u306eAcquisitionStart\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002      |   \u25cf/\u25cf   | USER_CXP_ACQUISION  _START_ADDRESS       |\n| cxp_acquision  _start_value   | CXP\u898f\u683c\u306eAcquisitionStart\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u6307\u5b9a\u3059\u308b\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CXP_ACQUISION  _START_VALUE         |\n| cxp_acquision  _stop_address  | CXP\u898f\u683c\u306eAcquisitionStop\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002       |   \u25cf/\u25cf   | USER_CXP_ACQUISION  _STOP_ADDRESS        |\n| cxp_acquision  _stop_value    | CXP\u898f\u683c\u306eAcquisitionStop\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u6307\u5b9a\u3059\u308b\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CXP_ACQUISION  _STOP_VALUE          |\n| cxp_bitrate                   | CXP\u306e\u30d3\u30c3\u30c8\u30ec\u30fc\u30c8\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                        |   \u25cf/\u25cf   | USER_CXP_PHY_BITRATE                     |\n| cxp_link_speed                | CXP\u306e\u30ea\u30f3\u30af\u901f\u5ea6\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                          |   \u25cf/\u25cf   | USER_CXP_PHY_LINKSPEED                   |\n| cxp_pixel_format              | CXP\u898f\u683c\u306ePixelFormat\u30a2\u30c9\u30ec\u30b9\u306b\u6307\u5b9a\u3059\u308b\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CXP_PIXEL_FORMAT                    |\n| cxp_pixel  _format_address    | CXP\u898f\u683c\u306ePixelFormat\u30a2\u30c9\u30ec\u30b9\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002           |   \u25cf/\u25cf   | USER_CXP_PIXEL  _FORMAT_ADDRESS          |\n| data_mask_lower               | \u30ab\u30e1\u30e9\u30ea\u30f3\u30af\u30dd\u30fc\u30c8A\uff5eD\u306e\u30de\u30b9\u30af\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_DATA_MASK_LOWER                     |\n| data_mask_upper               | \u30ab\u30e1\u30e9\u30ea\u30f3\u30af\u30dd\u30fc\u30c8E\uff5eH\u306e\u30de\u30b9\u30af\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_DATA_MASK_UPPER                     |\n| device                        | \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                       |   \u25cf/-   |                                          |\n| dval_enable                   | \u30ab\u30e1\u30e9\u30c7\u30fc\u30bf\u5165\u529b\u6642\u306eDVAL\u4fe1\u53f7\u53c2\u7167\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_DVAL_SIGNAL_ENABLE                  |\n| encoder_abs_count             | \u30a8\u30f3\u30b3\u30fc\u30c0\u7d76\u5bfe\u30ab\u30a6\u30f3\u30bf\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                       |   \u25cf/-   |                                          |\n| encoder_abs_start             | \u7d76\u591a\u5024\u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u958b\u59cb\uff0f\u505c\u6b62\u306e\u5236\u5fa1\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   |                                          |\n| encoder_agr_count             | \u76f8\u5bfe\u4f4d\u7f6e\u30a8\u30f3\u30b3\u30fc\u30c0\u4f7f\u7528\u6642\u306e\u4e00\u81f4\u30d1\u30eb\u30b9\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002         |   \u25cf/-   |                                          |\n| encoder_all_count             | \u76f8\u5bfe\u4f4d\u7f6e\u30a8\u30f3\u30b3\u30fc\u30c0\u4f7f\u7528\u6642\u306e\u7dcf\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002         |   \u25cf/-   |                                          |\n| encoder_compare_reg_1         | \u30a8\u30f3\u30b3\u30fc\u30c0\u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf\uff11\u306e\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_ENCODER  _COMPARE_REG_1             |\n| encoder_compare_reg_2         | \u30a8\u30f3\u30b3\u30fc\u30c0\u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf2\u306e\u5024\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002              |   \u25cf/\u25cf   | USER_ENCODER  _COMPARE_REG_2             |\n| encoder_count                 | \u30a8\u30f3\u30b3\u30fc\u30c0\u76f8\u5bfe\u30ab\u30a6\u30f3\u30bf\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                       |   \u25cf/-   |                                          |\n| encoder_direction             | \u30a8\u30f3\u30b3\u30fc\u30c0\u5165\u529b\u30d1\u30eb\u30b9\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   | USER_ENCODER_PULSE                       |\n| encoder_enable                | \u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u6709\u52b9\uff0f\u7121\u52b9\uff0f\u4f7f\u7528\u65b9\u6cd5\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_ENCODER_ENABLE                      |\n| encoder_mode                  | \u30a8\u30f3\u30b3\u30fc\u30c0\u52d5\u4f5c\u30e2\u30fc\u30c9\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                     |   \u25cf/\u25cf   | USER_ENCODER_MODE                        |\n| encoder_phase                 | \u30a8\u30f3\u30b3\u30fc\u30c0\u5165\u529b\u30d1\u30eb\u30b9\u9078\u629e\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   | USER_ENCODER_PHASE                       |\n| encoder_start                 | \u5916\u90e8\u30c8\u30ea\u30ac\u3092\u30a8\u30f3\u30b3\u30fc\u30c0\u3067\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   | USER_ENCODER_START                       |\n| encoder_z_phase               | \u30a8\u30f3\u30b3\u30fc\u30c0\u8d77\u52d5\u306bZ\u76f8\u3092\u4f7f\u7528\u3059\u308b\u304b\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002    |   \u25cf/\u25cf   | USER_ENCODER_Z_PHASE                     |\n| exposure                      | CC\u4fe1\u53f7\u306e\u51fa\u529b\u5e45\uff08\u9732\u5149\u6642\u9593\uff09[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_SW_TRIGGER_WIDTH                    |\n| exposure_ex                   | CC\u4fe1\u53f7\u306e\u51fa\u529b\u5e45\uff08\u9732\u5149\u6642\u9593\uff09[100nsec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002      |   \u25cf/\u25cf   | USER_SW_TRIGGER_WIDTH                    |\n| express_link                  | PCI-Express\u30d0\u30b9\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30ea\u30f3\u30af\u5e45\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002        |   \u25cf/-   |                                          |\n| external_trigger_chatter      | \u5916\u90e8\u30c8\u30ea\u30ac\u691c\u51fa\u7121\u52b9\u6642\u9593[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_EXTERNAL_TRIGGER  _CHATTER          |\n| external_trigger_delay        | \u5916\u90e8\u30c8\u30ea\u30ac\u691c\u51fa\u9045\u5ef6\u6642\u9593[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_EXTERNAL_TRIGGER  _DELAY            |\n| external_trigger_enable       | \u5916\u90e8\u30c8\u30ea\u30ac\u306b\u4f7f\u7528\u3059\u308b\u4fe1\u53f7\u9078\u629e\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_EXTERNAL_TRIGGER  _ENABLE           |\n| external_trigger_mode         | \u5916\u90e8\u30c8\u30ea\u30ac\u3092\u4f7f\u7528\u3057\u3066CC\u4fe1\u53f7\u3092\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_EXTERNAL_TRIGGER  _POLARITY         |\n| fifo_full                     | FIFO\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                 |   \u25cf/-   |                                          |\n| fpga_temp                     | FPGA\u6e29\u5ea6\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                       |   \u25cf/-   |                                          |\n| fpga_version                  | FPGA\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                 |   \u25cf/-   |                                          |\n| freq_a                        | \u30a8\u30f3\u30b3\u30fc\u30c0A\u76f8\u306e\u5468\u6ce2\u6570(Hz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                      |   \u25cf/-   |                                          |\n| freq_b                        | \u30a8\u30f3\u30b3\u30fc\u30c0B\u76f8\u306e\u5468\u6ce2\u6570(Hz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                      |   \u25cf/-   |                                          |\n| freq_fval                     | FVAL\u306e\u5468\u6ce2\u6570(kHz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                              |   \u25cf/-   |                                          |\n| freq_lval                     | LVAL\u306e\u5468\u6ce2\u6570(kHz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                              |   \u25cf/-   |                                          |\n| freq_ttl1                     | TTL1\u306e\u5468\u6ce2\u6570(Hz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               |   \u25cf/-   |                                          |\n| freq_ttl2                     | TTL2\u306e\u5468\u6ce2\u6570(Hz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               |   \u25cf/-   |                                          |\n| freq_z                        | \u30a8\u30f3\u30b3\u30fc\u30c0Z\u76f8\u306e\u5468\u6ce2\u6570(Hz)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                      |   \u25cf/-   |                                          |\n| gpin_pol                      | GP_IN\u306e\u30ec\u30d9\u30eb\u3092Bit\u60c5\u5831\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002                         |   \u25cf/-   |                                          |\n| gpin_pin_sel                  | GP_IN\u30d4\u30f3\u5272\u8fbc\u307f\u30d4\u30f3\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                      |   \u25cf/\u25cf   | USER_GPIN_SEL                            |\n| gpout_pol                     | GP_OUT\u30d4\u30f3\u306e\u51fa\u529b\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   | USER_GPOUT_POL                           |\n| gpout_sel                     | GP_OUT\u30d4\u30f3\u306e\u51fa\u529b\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                     |   \u25cf/\u25cf   | USER_GPOUT_SEL                           |\n| handle                        | \u521d\u671f\u5316\u3055\u308c\u305f\u30dc\u30fc\u30c9\u30cf\u30f3\u30c9\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                     |   \u25cf/-   |                                          |\n| height                        | \u753b\u50cf\u5165\u529b\u30b5\u30a4\u30ba\u306e\u9ad8\u3055\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                     |   \u25cf/\u25cf   | USER_Y_SIZE, USER_Y_TOTAL_SIZE           |\n| infrared_enable               | RGBI\u306e\u6709\u52b9\uff0f\u7121\u52b9\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                         |   \u25cf/\u25cf   | USER_INFRARED_ENABLE                     |\n| interval_exttrig_1            | \u8a8d\u8b58\u3057\u305f\u5916\u90e8\u30c8\u30ea\u30ac\u9593\u9694\u306e\u6642\u9593\uff08\u30ab\u30a6\u30f3\u30c8\u5024\uff09\u306e\u6700\u65b0\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |   \u25cf/-   |                                          |\n| interval_exttrig_2            | \u8a8d\u8b58\u3057\u305f\u5916\u90e8\u30c8\u30ea\u30ac\u9593\u9694\u306e\u6642\u9593\uff08\u30ab\u30a6\u30f3\u30c8\u5024\uff09\u306e\uff12\u756a\u76ee\u306b\u65b0\u3057\u3044\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |   \u25cf/-   |                                          |\n| interval_exttrig_3            | \u8a8d\u8b58\u3057\u305f\u5916\u90e8\u30c8\u30ea\u30ac\u9593\u9694\u306e\u6642\u9593\uff08\u30ab\u30a6\u30f3\u30c8\u5024\uff09\u306e3\u756a\u76ee\u306b\u65b0\u3057\u3044\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |   \u25cf/-   |                                          |\n| interval_exttrig_4            | \u8a8d\u8b58\u3057\u305f\u5916\u90e8\u30c8\u30ea\u30ac\u9593\u9694\u306e\u6642\u9593\uff08\u30ab\u30a6\u30f3\u30c8\u5024\uff09\u306e4\u756a\u76ee\u306b\u65b0\u3057\u3044\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |   \u25cf/-   |                                          |\n| is_grab                       | Grab\u4e2d\u304b\u3069\u3046\u304b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                 |   \u25cf/-   |                                          |\n| is_opened                     | \u30dc\u30fc\u30c9\u306eOpen\u306b\u6210\u529f\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                 |   \u25cf/-   |                                          |\n| line_reverse                  | \u30ab\u30e1\u30e9\u304b\u3089\u5165\u529b\u3057\u305f\u30e9\u30a4\u30f3\u30c7\u30fc\u30bf\u306e\u5de6\u53f3\u53cd\u8ee2\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK  _LINE_REVERSE           |\n| interrupt_line                | \uff11\u30d5\u30ec\u30fc\u30e0\u5165\u529b\u30e9\u30a4\u30f3\u6570\u30ab\u30a6\u30f3\u30c8\u9593\u9694\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002       |   \u25cf/\u25cf   | USER_DATA_INTERRUT_LINE                  |\n| lval_delay                    | \u30ab\u30e1\u30e9\u304b\u3089\u5165\u529b\u3059\u308bLVAL\u306eX\u65b9\u5411\u9045\u5ef6\u91cf(clock)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK  _LVAL_DELAY             |\n| lvds_cclk_sel                 | \u30ab\u30e1\u30e9\u99c6\u52d5\u30af\u30ed\u30c3\u30af\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   | USER_LVDS_CCLK_SEL                       |\n| lvds_phase_sel                | \u5165\u529b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u4f4d\u76f8\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   | USER_LVDS_PAHSE_SEL                      |\n| lvds_synclt_sel               | SYNCLT\u30d4\u30f3\u306e\u5165\u51fa\u529b\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   |                                          |\n| mem_num                       | \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306e\u753b\u50cf\u9762\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   | USER_MEMORY_NUM                          |\n| narrow10bit_enable            | \u30c7\u30fc\u30bf\u8a70\u3081\u8ee2\u9001\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002         |   \u25cf/\u25cf   | USER_NARROW10BIT_ENABLE                  |\n| pocl_lite_enable              | PoCL-Lite\u30ab\u30e1\u30e9\u7528\u8a2d\u5b9a\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002  |   \u25cf/\u25cf   | USER_POCL_LITE_ENABLE                    |\n| power_state                   | \u30ab\u30e1\u30e9\u96fb\u6e90\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u53d6\u5f97\u30fb\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   |                                          |\n| power_supply                  | \u30ab\u30e1\u30e9\u3078\u306e\u7d66\u96fb\u72b6\u614b\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   |                                          |\n| pix_shift                     | \u30ab\u30e1\u30e9\u304b\u3089\u5165\u529b\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53f3\u30b7\u30d5\u30c8\u3059\u308b\u30d3\u30c3\u30c8\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_PIXEL_DATA_SHIFT                    |\n| reverse_dma_enable            | \u4e0a\u4e0b\u53cd\u8ee2DMA\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002            |   \u25cf/\u25cf   | USER_REVERSE_DMA_ENABLE                  |\n| rolling_shutter               | \u30ed\u30fc\u30ea\u30f3\u30b0\u30b7\u30e3\u30c3\u30bf\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   | USER_ROLLING_SHUTTER  _TRIGGER_ENABLE    |\n| scan_system                   | \u53d6\u8fbc\u3092\u884c\u3046\u30ab\u30e1\u30e9\u306e\u7a2e\u985e\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   | USER_INTERLACE_TYPE                      |\n| serial_no                     | \u30dc\u30fc\u30c9\u306e\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                           |   \u25cf/-   |                                          |\n| start_frame_no                | \u53d6\u8fbc\u3092\u958b\u59cb\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u756a\u53f7(1, 2, 3\u2026)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002     |   \u25cf/\u25cf   |                                          |\n| strobe_delay                  | \u30b9\u30c8\u30ed\u30dc\u4fe1\u53f7\u51fa\u529b\u9045\u5ef6\u6642\u9593[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002           |   \u25cf/\u25cf   | USER_STROBE_DELAY_COUNT                  |\n| strobe_enable                 | \u30b9\u30c8\u30ed\u30dc\u51fa\u529b\u4fe1\u53f7\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002       |   \u25cf/\u25cf   | USER_STROBE_ENABLE                       |\n| strobe_pol                    | \u30b9\u30c8\u30ed\u30dc\u306e\u6975\u6027\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                           |   \u25cf/\u25cf   | USER_STROBE_POLALITY                     |\n| strobe_time                   | \u30b9\u30c8\u30ed\u30dc\u4fe1\u53f7\u51fa\u529b\u6642\u9593[usec]\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002               |   \u25cf/\u25cf   | USER_STROBE_TIME_COUNT                   |\n| sync_ch                       | \u6307\u5b9a\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u53d6\u8fbc\u3092\u3069\u306ech\u306b\u540c\u671f\u3055\u308c\u308b\u304b\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_SYNC_CH                             |\n| sync_lt                       | CC\u4fe1\u53f7\u306e\u51fa\u529b\u3092SYNCLT\u5165\u529b\u306b\u540c\u671f\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_SYNC_LT                             |\n| tap_arrange                   | \u30ab\u30e1\u30e9\u5165\u529b\u30bf\u30c3\u30d7\u306e\u4e26\u3079\u66ff\u3048\u65b9\u6cd5\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002           |   \u25cf/\u25cf   | USER_CAMERALINK  _REARRANGEMENT_ENABLE   |\n| tap_arrange_x_size            | \u30ab\u30e1\u30e9\u304c\uff11\u30e9\u30a4\u30f3\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u7dcf\u753b\u7d20\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002   |   \u25cf/\u25cf   | USER_CAMERALINK  _REARRANGEMENT_XSIZE    |\n| tap_direction1                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap1\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_1           |\n| tap_direction2                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap2\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_2           |\n| tap_direction3                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap3\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_3           |\n| tap_direction4                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap4\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_4           |\n| tap_direction5                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap5\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_5           |\n| tap_direction6                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap6\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_6           |\n| tap_direction7                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap7\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_7           |\n| tap_direction8                | \u8907\u6570\u306e\u30bf\u30c3\u30d7\u5165\u529b\u3092\u884c\u3046\u6642\u3001Tap8\u306e\u5165\u529b\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_CAMERALINK_TAP_DIRECTON_8           |\n| tap_num                       | \u5165\u529b\u30bf\u30c3\u30d7\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                             |   \u25cf/\u25cf   | USER_X_TAPS_PER_CH                       |\n| timeout                       | grab_stop()\u30e1\u30bd\u30c3\u30c9\u306e\u30d5\u30ec\u30fc\u30e0\u5165\u529b\u5f85\u3061\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3092\u30df\u30ea\u79d2\u5358\u4f4d\u3067\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   | USER_TIMEOUT1                            |\n| trigger_enable                | CC\u4fe1\u53f7\u51fa\u529b\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002             |   \u25cf/\u25cf   | USER_SW_TRIGGER_ENABLE                   |\n| vertical_remap                | Y\u65b9\u5411\u7279\u6b8aDMA\u306e\u8a2d\u5b9a\uff0f\u7121\u52b9(0)\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002              |   \u25cf/\u25cf   | USER_VERTICAL_REMAP  _ENABLE             |\n| virtual_comport               | \u4eee\u60f3COM\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                              |   \u25cf/-   |                                          |\n| width                         | \u753b\u50cf\u5165\u529b\u30b5\u30a4\u30ba\u306e\u5e45\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                       |   \u25cf/\u25cf   | USER_X_SIZE                              |\n| x_delay                       | \u30ab\u30e1\u30e9\u5165\u529b\u306eX\u65b9\u5411\u9045\u5ef6\u91cf\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                  |   \u25cf/\u25cf   | USER_X_FRONT_PORCH                       |\n| y_delay                       | \u30ab\u30e1\u30e9\u5165\u529b\u306eY\u65b9\u5411\u9045\u5ef6\u884c\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                |   \u25cf/\u25cf   | USER_Y_FRONT_PORCH                       |\n| y_total                       | \u30ab\u30e1\u30e9\u304b\u3089\u5165\u529b\u3059\u308b\u884c\u6570\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002<br />y_total\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001\u5fc5\u305awidth\u2192y_total\u306e\u9806\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 |   \u25cf/\u25cf   | USER_Y_TOTAL_SIZE                        |\n\n\u203b\u8a2d\u5b9a\u5024\u306e\u8a73\u7d30\u306f\u3001AcapLib2\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u300cSDK-AcapLib2 Library Manual for Windows(OM15018*).pdf\u300d\u3092\u53c2\u7167\u9858\u3044\u307e\u3059\u3002\n\n<div style=\"page-break-after:always\"></div>\n\n## Methods\n\n| Methods                                                      | Descriptoin                                                  | AcapLib2 Function                      |\n| ------------------------------------------------------------ | ------------------------------------------------------------ | -------------------------------------- |\n| bgr2rgb(image)                                               | \u30ab\u30e9\u30fc\u753b\u50cf\u306e\u3068\u304d\u3001BGR\u304b\u3089RGB\u3078\u4e26\u3073\u3092\u5165\u308c\u66ff\u3048\u307e\u3059\u3002           |                                        |\n| count_reset()                                                | \u3059\u3079\u3066\u306e\u30ab\u30a6\u30f3\u30bf\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002                           |                                        |\n| cxp_link_reset()                                             | CoaXPress\u30ab\u30e1\u30e9\u3001\u30dc\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30ea\u30f3\u30af\u30ea\u30bb\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u3002    |                                        |\n| get_boardInfo()                                              | PC\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30dc\u30fc\u30c9\u4e00\u89a7\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002(static method) |                                        |\n| get_encoder()                                                | \u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               | AcapGetEncoder                         |\n| get_encoder_abs_multipoint(point_no)                         | \u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30b3\u30fc\u30c0\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u306e\u30dd\u30a4\u30f3\u30c8\u756a\u53f7\u306e\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |                                        |\n| get_external_trigger()                                       | \u5916\u90e8\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                               | AcapGetExternalTrigger                 |\n| get_frame_no()                                               | \u73fe\u5728\u306e\u753b\u50cf\u53d6\u5f97\u679a\u6570\uff081,2,3\u30fb\u30fb\u30fb\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002              |                                        |\n| get_gpout()                                                  | \u6c4e\u7528\u51fa\u529b(GPOUT)\u306e\u30ec\u30d9\u30eb\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                        | AcapGetGPOut                           |\n| get_image_data(index)                                        | \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306eIndex\u756a\u53f7\u3092\u6307\u5b9a\u3057\u3066\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |                                        |\n| get_last_error([error_reset])                                | \u6700\u5f8c\u306b\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                       |                                        |\n| get_line_trigger()                                           | \u30e9\u30a4\u30f3\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                             | AcapGetLineTrigger                     |\n| get_info(value_id[, memnum])                                 | \u8a2d\u5b9aID\u3092\u6307\u5b9a\u3057\u3066\u30dc\u30fc\u30c9\u306e\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                 |                                        |\n| get_shutter_trigger()                                        | \u30a8\u30ea\u30a2\u30bb\u30f3\u30b5\u30b7\u30e3\u30c3\u30bf\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002               | AcapGetShutterTrigger                  |\n| get_strobe()                                                 | \u30b9\u30c8\u30ed\u30dc\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                 | AcapGetStrobe                          |\n| grab_abort()                                                 | \u753b\u50cf\u5165\u529b\u3092\u5f37\u5236\u505c\u6b62\u3057\u307e\u3059\u3002                                   |                                        |\n| grab_start([input_num])                                      | \u753b\u50cf\u5165\u529b\u679a\u6570\u3092\u6307\u5b9a\u3057\u3001\u753b\u50cf\u5165\u529b\u3092\u958b\u59cb\u3057\u307e\u3059\u3002                 |                                        |\n| grab_stop()                                                  | \u753b\u50cf\u5165\u529b\u3092\u505c\u6b62\u3057\u307e\u3059\u3002                                       |                                        |\n| load_inifile(filename)                                       | \u30dc\u30fc\u30c9\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(*.ini)\u3092\u8aad\u8fbc\u3001\u30dc\u30fc\u30c9\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002    |                                        |\n| opt_link_reset()                                             | Opt-C:Link\u30dc\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30ea\u30f3\u30af\u30ea\u30bb\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u3002           |                                        |\n| print_acapy_values()                                         | \u30dc\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3078\u8868\u793a\u3057\u307e\u3059\u3002   |                                        |\n| print_last_error()                                           | \u6700\u5f8c\u306b\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u60c5\u5831\u3092\u30b3\u30de\u30f3\u30c9\u30d7\u30ed\u30f3\u30d7\u30c8\u3078\u8868\u793a\u3057\u307e\u3059\u3002   |                                        |\n| read([copy, wait_frame])                                     | grab_start()\u5f8c\u3001\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002             |                                        |\n| read_frames([copy])                                          | \u524d\u56de\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u306e\u6b21\u304b\u3089\u3001\u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |                                        |\n| refrect_param([force_execution])                             | \u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u8a2d\u5b9a\u3057\u305f\u5024\u3092\u30dc\u30fc\u30c9\u3078\u53cd\u6620\u3055\u305b\u307e\u3059\u3002               |                                        |\n| save_inifile(inifilename)                                    | \u30dc\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5024\u3092ini\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002          |                                        |\n| serial_close()                                               | \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30dd\u30fc\u30c8\u3092\u9589\u3058\u307e\u3059\u3002                               | AcapSerialClose                        |\n| serial_get_parameter()                                       | \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                       | AcapSerialGetParameter                 |\n| serial_open([baud_rate, data_bit, parity, stop_bit, flow])   | \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3001\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 | AcapSerialOpen  AcapSerialSetParameter |\n| serial_read([asc, time_out, buffer_size, end_str])           | \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u4fe1\u3057\u307e\u3059\u3002<br />\u53d7\u4fe1\u30d0\u30c3\u30d5\u30a1\u304c\u7a7a\u306b\u306a\u308b\u307e\u3067\u53d7\u4fe1\u3057\u307e\u3059\u3002 | AcapSerialRead                         |\n| serial_write(write_command[, asc, start_str, end_str])       | \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002                           | AcapSerialWrite                        |\n| set_encoder(enc_enable, enc_mode, enc_start, enc_phase, enc_direction, z_phase_enable, compare1, compare2) | \u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                                     | AcapSetEncoder                         |\n| set_encoder_abs_multipoint(point_no, abs_count)              | \u30a8\u30f3\u30b3\u30fc\u30c0\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u306e\u30dd\u30a4\u30f3\u30c8\u756a\u53f7\u3092\u6307\u5b9a\u3057\u3066\u3001\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |                                        |\n| set_external_trigger( exp_trg_en, ext_trg_mode, ext_trg_dly, ext_trg_chatter, timeout) | \u5916\u90e8\u30c8\u30ea\u30ac\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                                     | AcapSetExternalTrigger                 |\n| set_gpout(output_level)                                      | \u6c4e\u7528\u51fa\u529b(GPOUT)\u306e\u30ec\u30d9\u30eb\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                        | AcapSetGPOut                           |\n| set_info(value_id, value[, memnum])                          | \u30dc\u30fc\u30c9\u3078\u8a2d\u5b9aID\u3092\u6307\u5b9a\u3057\u3066\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002<br />\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u8a2d\u5b9a\u5024\u304c\u3042\u308b\u5834\u5408\u306f\u8a2d\u5b9a\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002 | AcapSetInfo                            |\n| set_line_trigger(exp_cycle, exposure, exp_pol)               | \u30e9\u30a4\u30f3\u30c8\u30ea\u30ac\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                                   | AcapSetLineTrigger                     |\n| set_power_supply(wait_time, value)                           | \u30ab\u30e1\u30e9\u30af\u30ed\u30c3\u30af\u78ba\u8a8d\u5f85\u6a5f\u6642\u9593(waite_time)\u3092msec\u3067\u6307\u5b9a\u3057\u3001\u7d66\u96fb\u306eON(1)/OFF(0)\u3092value\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |                                        |\n| set_shutter_trigger(exp_cycle, exposure, exp_pol, exp_unitt, cc_sel) | \u30a8\u30ea\u30a2\u30bb\u30f3\u30b5\u30b7\u30e3\u30c3\u30bf\u30c8\u30ea\u30ac\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                     | AcapSetShutterTrigger                  |\n| set_strobe(strobe_en, strobe_delay, strobe_time)             | \u30b9\u30c8\u30ed\u30dc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002                                       | AcapSetStrobe                          |\n| snap([copy])                                                 | \uff11\u30d5\u30ec\u30fc\u30e0\u306e\u53d6\u8fbc\u3092\u884c\u3044\u307e\u3059\u3002                                 |                                        |\n| wait_grab_start([timeout])                                   | Grab\u958b\u59cb\u3092\u5f85\u3061\u307e\u3059\u3002                                         |                                        |\n| wait_frame_end([timeout])                                    | \u73fe\u5728\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u5165\u529b\u5b8c\u4e86\u3092\u5f85\u3061\u307e\u3059\u3002                         |                                        |\n| wait_gpin([timeout])                                         | GPIN\u5272\u8fbc\u307f\u3092\u5f85\u3061\u307e\u3059\u3002                                       |                                        |\n| wait_grab_end([timeout])                                     | Grab(\u9023\u7d9a\u5165\u529b)\u306e\u5b8c\u4e86\u3092\u5f85\u3061\u307e\u3059\u3002                             |                                        |\n\n\u203b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n<div style=\"page-break-after:always\"></div>\n\n### bgr2rgb\u30e1\u30bd\u30c3\u30c9\n\n\u30ab\u30e9\u30fc\u30c7\u30fc\u30bf\u306eRGB\u306e\u4e26\u3073\u3092B,G,R\u304b\u3089R,G,B\u3078\u5165\u308c\u66ff\u3048\u307e\u3059\u3002\n\n```\ndef bgr2rgb(bgr_image : np.ndarray) -> np.ndarray:\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b         | \u8aac\u660e                                                  |\n| --------- | ---------- | ----------------------------------------------------- |\n| bgr_image | np.ndarray | numpy\u306endarray\u5f62\u5f0f\u306eB,G,R\u9806\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n ***\u623b\u308a\u5024***\n\nrgb_image\n\n| \u540d\u524d      | \u578b         | \u8aac\u660e                                                  |\n| --------- | ---------- | ----------------------------------------------------- |\n| rgb_image | np.ndarray | numpy\u306endarray\u5f62\u5f0f\u306eR,G,B\u9806\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n### count_reset\u30e1\u30bd\u30c3\u30c9\n\nFVAL/LVAL/\u5916\u90e8\u30c8\u30ea\u30ac/CC \u30ab\u30a6\u30f3\u30c8\u56de\u6570\u53ca\u3073\u3001\u5916\u90e8\u30c8\u30ea\u30ac\u9593\u9694\u30ab\u30a6\u30f3\u30bf1\uff5e4 \u306e\u30ab\u30a6\u30f3\u30bf\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u307e\n\u3059\u3002\n\n```\ndef count_reset(self) -> bool:\n```\n\n ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | bool | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### cxp_link_reset\u30e1\u30bd\u30c3\u30c9\n\n\u5bfe\u8c61\u306e\u30dd\u30fc\u30c8\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e1\u30e9\u306b\u5bfe\u3057\u3001\u30ab\u30e1\u30e9\u63a5\u7d9a\u78ba\u7acb(\u518d\u521d\u671f\u5316)\u3092\u884c\u3044\u307e\u3059\u3002\n\u203b\u30ab\u30e1\u30e9\u8a2d\u5b9a\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u623b\u308a\u307e\u3059\u306e\u3067\u3001LinkSpeed \u7b49\u30ab\u30e1\u30e9\u8a2d\u5b9a\u3092\u518d\u5ea6\u5b9f\u65bd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\ndef cxp_link_reset(self) -> bool:\n```\n\n ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | bool | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### get_boardInfo\u30e1\u30bd\u30c3\u30c9\n\n\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30dc\u30fc\u30c9\u60c5\u5831\u3092ACAPBOARDINFOEX\u69cb\u9020\u4f53\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetBoardInfoEx\u76f8\u5f53\n\n```\ndef get_boardInfo() -> Tuple[int, acaplib2.ACAPBOARDINFOEX]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, board_info)\n\n| \u540d\u524d       | \u578b                       | \u8aac\u660e                                   |\n| ---------- | ------------------------ | -------------------------------------- |\n| ret        | bool                     | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0               |\n| board_info | acaplib2.ACAPBOARDINFOEX | \u63a5\u7d9a\u3055\u308c\u305f\u30dc\u30fc\u30c9\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u305f\u69cb\u9020\u4f53 |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_encoder\u30e1\u30bd\u30c3\u30c9\n\n\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u30dc\u30fc\u30c9\u60c5\u5831\u3092ACAPBOARDINFOEX\u69cb\u9020\u4f53\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetEncoder\u76f8\u5f53\n\n```\ndef get_encoder(self) -> Tuple[int, int, int, int, int, int, int, int, int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, enc_enable, enc_mode, enc_start, enc_phase, enc_direction, z_phase_enable, compare1, compare2, comp2_count)\n\n| \u540d\u524d           | \u578b   | \u8aac\u660e                                                         |\n| -------------- | ---- | ------------------------------------------------------------ |\n| ret            | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                     |\n| enc_enable     | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u4f7f\u7528\u8a2d\u5b9a                                           |\n| enc_mode       | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u30e2\u30fc\u30c9                                             |\n| enc_start      | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u8d77\u52d5\u65b9\u6cd5                                           |\n| enc_phase      | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u30d1\u30eb\u30b9                                             |\n| enc_direction  | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u56de\u8ee2\u65b9\u5411                                           |\n| z_phase_enable | int  | Z \u76f8\u4f7f\u7528\u8a2d\u5b9a                                                 |\n| compare1       | int  | \u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf1(\u9045\u5ef6\u30d1\u30eb\u30b9\u8a2d\u5b9a)                                |\n| compare2       | int  | \u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf2(\u9593\u9694\u30d1\u30eb\u30b9\u8a2d\u5b9a)                                |\n| comp2_count    | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u30ab\u30a6\u30f3\u30c8\u5024<br />\u76f8\u5bfe\u30ab\u30a6\u30f3\u30c8\u3001\u6709\u52b9\u6642\uff1a\u7dcf\u30ab\u30a6\u30f3\u30c8\u6570<br />\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u3001\u6709\u52b9\u6642\uff1a\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u5024 |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_encoder_abs_multipoint\u30e1\u30bd\u30c3\u30c9\n\n\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u30fb\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```\ndef get_encoder_abs_multipoint(self, point_no : int) -> Tuple[int, int]:\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d     | \u578b   | \u8aac\u660e                                               |\n| -------- | ---- | -------------------------------------------------- |\n| point_no | int  | \u8a2d\u5b9a\u3059\u308b\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u306e\u756a\u53f7\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(0\uff5e255) |\n\n ***\u623b\u308a\u5024***\n\n(ret, abs_count)\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                           |\n| --------- | ---- | ------------------------------ |\n| ret       | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0       |\n| abs_count | int  | \u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u30fb\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u5024 |\n\n### get_external_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u5916\u90e8\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetExternalTrigger\u76f8\u5f53\n\n```\ndef get_external_trigger(self) -> Tuple[int, int, int, int, int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, exp_trg_en, ext_trg_mode, ext_trg_dly, ext_trg_chatter, timeout)\n\n| \u540d\u524d            | \u578b   | \u8aac\u660e                               |\n| --------------- | ---- | ---------------------------------- |\n| ret             | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0           |\n| exp_trg_en      | int  | \u5916\u90e8\u30c8\u30ea\u30ac \u4f7f\u7528\u8a2d\u5b9a                |\n| ext_trg_mode    | int  | \u5916\u90e8\u30c8\u30ea\u30ac\u30e2\u30fc\u30c9                   |\n| ext_trg_dly     | int  | \u5916\u90e8\u30c8\u30ea\u30ac \u691c\u51fa\u9045\u5ef6\u6642\u9593 (1us \u5358\u4f4d) |\n| ext_trg_chatter | int  | \u5916\u90e8\u30c8\u30ea\u30ac \u691c\u51fa\u7121\u52b9\u6642\u9593 (1us \u5358\u4f4d) |\n| timeout         | int  | \u691c\u51fa\u5f85\u6a5f\u6642\u9593 (1ms \u5358\u4f4d)            |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_frame_no\u30e1\u30bd\u30c3\u30c9\n\n\u5165\u529b\u30d5\u30ec\u30fc\u30e0\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetFrameNo\u76f8\u5f53\n\n```\ndef get_frame_no(self) -> Tuple[int, int, int , int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, frame_no, line, index)\n\n| \u540d\u524d     | \u578b   | \u8aac\u660e                                                     |\n| -------- | ---- | -------------------------------------------------------- |\n| ret      | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                 |\n| frame_no | int  | \u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                   |\n| line     | int  | \u30d5\u30ec\u30fc\u30e0\u5185\u306e\u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30e9\u30a4\u30f3\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002         |\n| index    | int  | \u6700\u5f8c\u306b\u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30e1\u30e2\u30ea\u756a\u53f7\uff081,2,3...\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n### get_gpout\u30e1\u30bd\u30c3\u30c9\n\nGPOUT\u306e\u72b6\u614b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetGPOut\u76f8\u5f53\n\n```\ndef get_gpout(self) -> Tuple[int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, dwOutputLevel)\n\n| \u540d\u524d          | \u578b   | \u8aac\u660e                                                         |\n| ------------- | ---- | ------------------------------------------------------------ |\n| ret           | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                     |\n| dwOutputLevel | int  | GPOUT \u51fa\u529b\u8a2d\u5b9a\u72b6\u614b\u3092\u5bfe\u5fdc\u3059\u308bBit \u3067\u683c\u7d0d\u3057\u307e\u3059\u3002<br/>0\uff1aOFF/1\uff1aON<br/>Bit0\uff1aGPOUT[1]\u30d4\u30f3 (GP_OUT1)<br/>Bit1\uff1aGPOUT[2]\u30d4\u30f3 (GP_OUT2)<br/>\uff1a<br/>Bit7\uff1aGPOUT[8]\u30d4\u30f3 |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_image_data\u30e1\u30bd\u30c3\u30c9\n\n\u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306eIndex\u756a\u53f7(0, 1, 2...)\u3092\u6307\u5b9a\u3057\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```\ndef get_image_data(self, index : int) -> Union[np.ndarray, None]:\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d  | \u578b   | \u8aac\u660e                                                  |\n| ----- | ---- | ----------------------------------------------------- |\n| index | int  | \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306eIndex\u756a\u53f7(0, 1, 2...)\u3092\u6307\u5b9a\u3057\u30ea\u307e\u3059\u3002 |\n\n ***\u623b\u308a\u5024***\n\nimage\n\n| \u540d\u524d  | \u578b         | \u8aac\u660e                                     |\n| ----- | ---------- | ---------------------------------------- |\n| image | np.ndarray | \u753b\u50cf\u30c7\u30fc\u30bf\u306fnumpy\u306endarray\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n### get_last_error\u30e1\u30bd\u30c3\u30c9\n\n\u6700\u5f8c\u306b\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetLastErrorCode\u76f8\u5f53\n\n```\ndef get_last_error(self, error_reset : bool = False) -> acaplib2.ACAPERRORINFO:\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d        | \u578b   | \u8aac\u660e                                                         |\n| ----------- | ---- | ------------------------------------------------------------ |\n| error_reset | bool | True: \u30a8\u30e9\u30fc\u60c5\u5831\u3092\u30ea\u30bb\u30c3\u30c8<br />False: \u30a8\u30e9\u30fc\u60c5\u5831\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u306a\u3044 |\n\n ***\u623b\u308a\u5024***\n\nerror_info\n\n| \u540d\u524d       | \u578b                     | \u8aac\u660e                                            |\n| ---------- | ---------------------- | ----------------------------------------------- |\n| error_info | acaplib2.ACAPERRORINFO | \u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u3092ACAPERRORINFO\u69cb\u9020\u4f53\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_line_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u30e9\u30a4\u30f3\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetLineTrigger\u76f8\u5f53\n\n```\ndef get_line_trigger(self) -> Tuple[int, int, int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, exp_cycle, exposure, exp_pol)\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                   |\n| --------- | ---- | ------------------------------------------------------ |\n| ret       | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                               |\n| exp_cycle | int  | \u9732\u5149\u5468\u671f\u30921\u03bcsec\u5358\u4f4d\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002                      |\n| exposure  | int  | \u9732\u5149\u6642\u9593\u30921\u03bcsec\u5358\u4f4d\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002                      |\n| exp_pol   | int  | \u51fa\u529b\u8ad6\u7406\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002<br />1:\u3000\u6b63\u8ad6\u7406<br />0:\u3000\u8ca0\u8ad6\u7406 |\n\n### get_info\u30e1\u30bd\u30c3\u30c9\n\n\u8a2d\u5b9aID\u3092\u6307\u5b9a\u3057\u3066\u3001\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetInfo\u76f8\u5f53\n\n```\ndef get_info(self, value_id : int, mem_num : int = 0) -> Tuple[int, int]:\n```\n\n ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d     | \u578b   | \u8aac\u660e                                                         |\n| -------- | ---- | ------------------------------------------------------------ |\n| value_id | int  | \u8a2d\u5b9aID                                                       |\n| mem_num  | int  | value_id\u306e\u5024\u306b\u3088\u308a\u4f7f\u7528\u65b9\u6cd5\u304c\u7570\u306a\u308a\u307e\u3059\u3002<br />\u8a73\u7d30\u306fAcapLib2\u30de\u30cb\u30e5\u30a2\u30eb\u306eAcapGetInfo\u95a2\u6570\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 |\n\n ***\u623b\u308a\u5024***\n\n(ret, value)\n\n| \u540d\u524d  | \u578b   | \u8aac\u660e                     |\n| ----- | ---- | ------------------------ |\n| ret   | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n| value | int  | \u53d6\u5f97\u3057\u305f\u8a2d\u5b9a\u5024           |\n\n<div style=\"page-break-after:always\"></div>\n\n### get_shutter_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u30b7\u30e3\u30c3\u30bf\u30c8\u30ea\u30ac\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetShutterTrigger\u76f8\u5f53\n\n```\ndef get_shutter_trigger(self) -> Tuple[int, int, int, int, int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, exp_cycle, exposure, exp_pol, exp_unit, cc_sel)\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                    |\n| --------- | ---- | --------------------------------------- |\n| ret       | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                |\n| exp_cycle | int  | CC\u5468\u671f\u30921\u03bcsec\u5358\u4f4d\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002         |\n| exposure  | int  | CC\u51fa\u529b\u5e45\u30921\u03bcsec\u5358\u4f4d\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002       |\n| exp_pol   | int  | \u51fa\u529b\u8ad6\u7406\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                  |\n| exp_unit  | int  | \u672a\u30b5\u30dd\u30fc\u30c8                              |\n| cc_sel    | int  | \u9732\u5149\u4fe1\u53f7\u3092\u51fa\u529b\u3059\u308bCC \u756a\u53f7\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n### get_strobe\u30e1\u30bd\u30c3\u30c9\n\n\u30b9\u30c8\u30ed\u30dc\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGetStrobe\u76f8\u5f53\n\n```\ndef get_strobe(self) -> Tuple[int, int, int, int]:\n```\n\n ***\u623b\u308a\u5024***\n\n(ret, strobe_en, strobe_delay, strobe_time)\n\n| \u540d\u524d         | \u578b   | \u8aac\u660e                                                         |\n| ------------ | ---- | ------------------------------------------------------------ |\n| ret          | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                     |\n| strobe_en    | int  | \u30b9\u30c8\u30ed\u30dc\u306e\u6709\u52b9(1)\uff0f\u7121\u52b9(0)\u72b6\u614b\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                 |\n| strobe_delay | int  | \u30b9\u30c8\u30ed\u30dc\u30d1\u30eb\u30b9\u304c\u51fa\u529b\u3055\u308c\u308b\u307e\u3067\u306e\u9045\u5ef6\u6642\u9593(1\u03bcsec\u5358\u4f4d)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n| strobe_time  | int  | \u30b9\u30c8\u30ed\u30dc\u3092\u51fa\u529b\u3059\u308b\u6642\u9593(1\u03bcsec\u5358\u4f4d)\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002              |\n\n<div style=\"page-break-after:always\"></div>\n\n### grab_abort\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u5165\u529b\u3092\u5f37\u5236\u505c\u6b62\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGrabAbort\u76f8\u5f53\n\n```\ndef grab_abort(self) -> int:\n```\n\n ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### grab_start\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u5165\u529b\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGrabStart\u76f8\u5f53\n\n```\ndef grab_start(self, input_num : int = 0) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                         |\n| --------- | ---- | ------------------------------------------------------------ |\n| input_num | int  | 0: \u9023\u7d9a\u5165\u529b<br />1: \u4e00\u753b\u9762\u5165\u529b<br />2\uff5e0xFFFFFFFF: \u6307\u5b9a\u679a\u5165\u529b |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### grab_stop\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u5165\u529b\u3092\u505c\u6b62\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapGrabStop\u76f8\u5f53\n\n```\ndef grab_stop(self) -> int:\n```\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### load_inifile\u30e1\u30bd\u30c3\u30c9\n\n\u30dc\u30fc\u30c9\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\uff08ini\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u8aad\u8fbc\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSelectFile\u76f8\u5f53\n\n```\ndef load_inifile(self, inifilename : str) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d        | \u578b   | \u8aac\u660e                                  |\n| ----------- | ---- | ------------------------------------- |\n| inifilename | str  | ini\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### opt_link_reset\u30e1\u30bd\u30c3\u30c9\n\nOpt-C:Link \u30dc\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u30ea\u30f3\u30af\u30ea\u30bb\u30c3\u30c8(\u518d\u521d\u671f\u5316)\u3092\u884c\u3044\u307e\u3059\u3002\n\n```\ndef opt_link_reset(self) -> bool:\n```\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### print_acapy_values\u30e1\u30bd\u30c3\u30c9\n\nAcaPy\u30af\u30e9\u30b9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5024\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n\n```\ndef print_acapy_values(self):\n```\n\n### print_last_error\u30e1\u30bd\u30c3\u30c9\n\n\u6700\u5f8c\u306b\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u60c5\u5831\u3092\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n\n```\ndef print_last_error(self) -> acaplib2.ACAPERRORINFO:\n```\n\n***\u623b\u308a\u5024***\n\nerror_info\n\n| \u540d\u524d       | \u578b                     | \u8aac\u660e                                            |\n| ---------- | ---------------------- | ----------------------------------------------- |\n| error_info | acaplib2.ACAPERRORINFO | \u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u3092ACAPERRORINFO\u69cb\u9020\u4f53\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n<div style=\"page-break-after:always\"></div>\n\n### read\u30e1\u30bd\u30c3\u30c9\n\ngrab_start\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001grab_start\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u306e\u9593\u3067\u5b9f\u884c\u3057\u3001\u73fe\u5728\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\uff11\u30d5\u30ec\u30fc\u30e0\u5206\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```\ndef read(self, copy : bool = False, wait_frame : bool = True) -> Tuple[int, Union[np.ndarray, None], int, int]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d       | \u578b   | \u8aac\u660e                                                         |\n| ---------- | ---- | ------------------------------------------------------------ |\n| copy       | bool | True: \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002<br />False:\u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u304c\u4e0a\u66f8\u304d\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 |\n| wait_frame | bool | True: \uff11\u30d5\u30ec\u30fc\u30e0\u5206\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u53d6\u5f97\u5b8c\u4e86\u3092\u5f85\u3063\u3066\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002<br />False:\uff11\u30d5\u30ec\u30fc\u30e0\u5206\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u53d6\u5f97\u5b8c\u4e86\u3092\u5f85\u305f\u305a\u306b\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\n(ret, frame, frame_no, line)\n\n| \u540d\u524d     | \u578b         | \u8aac\u660e                                                         |\n| -------- | ---------- | ------------------------------------------------------------ |\n| ret      | int        | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                     |\n| frame    | np.ndarray | \u53d6\u5f97\u3057\u305f\u753b\u50cf\u30c7\u30fc\u30bf<br />\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306e\u4e26\u3073\u306fB, G, R\u3068\u306a\u308a\u307e\u3059\u3002\uff08OpenCV\u3068\u540c\u7b49\uff09 |\n| frame_no | int        | grab_start\u304b\u3089\u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u6570\uff081, 2, 3...\uff09         |\n| line     | int        | \u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30e9\u30a4\u30f3\u6570                                       |\n\n<div style=\"page-break-after:always\"></div>\n\n### read_frames\u30e1\u30bd\u30c3\u30c9\n\ngrab_start\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u3001grab_start\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u306e\u9593\u3067\u5b9f\u884c\u3057\u3001\u524d\u56de\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u306e\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u73fe\u5728\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30ea\u30b9\u30c8\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30ab\u30e1\u30e9\u306e\u30d5\u30ec\u30fc\u30e0\u30ec\u30fc\u30c8\u304c\u901f\u3044\u5834\u5408\u3001\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u304c\u4e0a\u66f8\u304d\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001mem_num\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\uff08\u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306e\u753b\u50cf\u9762\u6570\uff09\u3092\u5927\u304d\u304f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\ndef read_frames(self, copy : bool = False) -> Tuple[int, Union[List[np.ndarray], None], int, int]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                                                         |\n| ---- | ---- | ------------------------------------------------------------ |\n| copy | bool | True: \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002<br />False:\u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\n(ret, frames, count, frame_no)\n\n| \u540d\u524d     | \u578b         | \u8aac\u660e                                                         |\n| -------- | ---------- | ------------------------------------------------------------ |\n| ret      | int        | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0<br />\u30c7\u30fc\u30bf\u4e0a\u66f8\u304d\u6642: \u4e0a\u66f8\u304d\u3055\u308c\u305f\u753b\u50cf\u679a\u6570\u3092\u8ca0\u306b\u3057\u305f\u5024 |\n| frames   | np.ndarray | \u524d\u56de\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u306e\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u73fe\u5728\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30ea\u30b9\u30c8\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002<br />\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306e\u4e26\u3073\u306fB, G, R\u3068\u306a\u308a\u307e\u3059\u3002\uff08OpenCV\u3068\u540c\u7b49\uff09 |\n| count    | int        | \u524d\u56de\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u306e\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u73fe\u5728\u53d6\u5f97\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u307e\u3067\u306e\u30d5\u30ec\u30fc\u30e0\u6570 |\n| frame_no | int        | grab_start\u304b\u3089\u5165\u529b\u304c\u5b8c\u4e86\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u6570\uff081, 2, 3...\uff09         |\n\n<div style=\"page-break-after:always\"></div>\n\n### refrect_param\u30e1\u30bd\u30c3\u30c9\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u8a2d\u5b9a\u3057\u305f\u5024\u3092\u753b\u50cf\u5165\u529b\u30dc\u30fc\u30c9\u306b\u53cd\u6620\u3057\u307e\u3059\u3002\n\n```\ndef refrect_param(self, force_execution : bool = False) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d            | \u578b   | \u8aac\u660e                                                         |\n| --------------- | ---- | ------------------------------------------------------------ |\n| force_execution | bool | True: \u5f37\u5236\u7684\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002<br />False:\u53cd\u6620\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### save_inifile\u30e1\u30bd\u30c3\u30c9\n\n\u30dc\u30fc\u30c9\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5024\u3092ini\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSelectFile\u76f8\u5f53\n\n```\ndef save_inifile(self, inifilename : str) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d        | \u578b   | \u8aac\u660e                              |\n| ----------- | ---- | --------------------------------- |\n| inifilename | str  | \u4fdd\u5b58\u3059\u308bini\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### serial_close\u30e1\u30bd\u30c3\u30c9\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u30dd\u30fc\u30c8\u3092\u30af\u30ed\u30fc\u30ba\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSerialClose\u76f8\u5f53\n\n```\ndef serial_close(self) -> int:\n```\n\n  ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### serial_get_parameter\u30e1\u30bd\u30c3\u30c9\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSerialGetParameter\u76f8\u5f53\n\n```\ndef serial_get_parameter(self) -> Tuple[int, int, int, int, int, int]:\n```\n\n  ***\u623b\u308a\u5024***\n\n(ret, baud_rate, data_bit, parity, stop_bit, flow)\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                               |\n| --------- | ---- | ---------------------------------- |\n| ret       | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0           |\n| baud_rate | int  | \u30dc\u30fc\u30ec\u30fc\u30c8\u3092\u4ee5\u4e0b\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n| data_bit  | int  | \u30c7\u30fc\u30bf\u30d3\u30c3\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002         |\n| parity    | int  | \u30d1\u30ea\u30c6\u30a3\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002             |\n| stop_bit  | int  | \u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002       |\n| flow      | int  | \u30d5\u30ed\u30fc\u5236\u5fa1\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002           |\n\n### serial_open\u30e1\u30bd\u30c3\u30c9\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u30dd\u30fc\u30c8\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSerialOpen\u3001AcapSerialSetParameter\u76f8\u5f53\n\n```\ndef serial_open(self, baud_rate : int = 9600, data_bit : int = 8, parity : int = 0, stop_bit : int = 0, flow : int = 0) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                         |\n| --------- | ---- | ------------------------------------------------------------ |\n| baud_rate | int  | \u30dc\u30fc\u30ec\u30fc\u30c8\u3092\u4ee5\u4e0b\u306e\u5024\u306e\u4e2d\u304b\u3089\u8a2d\u5b9a\u3057\u307e\u3059\u3002<br />9600, 19200, 38400, 57600, 115200 |\n| data_bit  | int  | \u30c7\u30fc\u30bf\u30d3\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u30018 \u306e\u307f\u8a2d\u5b9a\u53ef\uff09             |\n| parity    | int  | \u30d1\u30ea\u30c6\u30a3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u3001\u300c0 :\u306a\u3057\u300d \u306e\u307f\u8a2d\u5b9a\u53ef\uff09       |\n| stop_bit  | int  | \u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u3001\u300c0: 1bit\u300d \u306e\u307f\u8a2d\u5b9a\u53ef\uff09 |\n| flow      | int  | \u30d5\u30ed\u30fc\u5236\u5fa1\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u3001\u300c0 :\u306a\u3057\u300d \u306e\u307f\u8a2d\u5b9a\u53ef\uff09     |\n\n  ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### serial_read\u30e1\u30bd\u30c3\u30c9\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30b3\u30de\u30f3\u30c9\u306e\u53d7\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\u53d7\u4fe1\u306f\u30c7\u30fc\u30bf\u304c\u7a7a\u306b\u306a\u308b\u307e\u3067\u3001stop_bit\u306b\u306a\u308b\u307e\u3067\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306b\u306a\u308b\u307e\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSerialRead\u76f8\u5f53\n\n```\ndef serial_read(self, asc : bool = True, time_out : int = 100, buffer_size : int = 511, end_str : Union[str, None] = None) -> Tuple[int, str, int]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d        | \u578b   | \u8aac\u660e                                                         |\n| ----------- | ---- | ------------------------------------------------------------ |\n| asc         | bool | \u30b7\u30ea\u30a2\u30eb\u306b\u8aad\u8fbc\u3080(\u53d7\u4fe1)\u6587\u5b57\u306e\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<br />False: 16 \u9032\u6570(HEX)\u8868\u8a18<br />True: ASCII |\n| time_out    | int  | \u30c7\u30fc\u30bf\u30d3\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u30018 \u306e\u307f\u8a2d\u5b9a\u53ef\uff09             |\n| buffer_size | int  | \u30d1\u30ea\u30c6\u30a3\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u3001\u300c0 :\u306a\u3057\u300d \u306e\u307f\u8a2d\u5b9a\u53ef\uff09       |\n| end_str     | int  | \u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08\u73fe\u5728\u3001\u300c0: 1bit\u300d \u306e\u307f\u8a2d\u5b9a\u53ef\uff09 |\n\n  ***\u623b\u308a\u5024***\n\n(ret, read_command, read_bytes)\n\n| \u540d\u524d         | \u578b   | \u8aac\u660e                     |\n| ------------ | ---- | ------------------------ |\n| ret          | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n| read_command | str  | \u53d7\u4fe1\u3057\u305f\u6587\u5b57\u5217           |\n| read_bytes   | int  | \u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306e\u30d0\u30a4\u30c8\u6570 |\n\n<div style=\"page-break-after:always\"></div>\n\n### serial_write\u30e1\u30bd\u30c3\u30c9\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u30b3\u30de\u30f3\u30c9\u306e\u66f8\u8fbc\u307f(\u9001\u4fe1)\u3092\u884c\u3044\u307e\u3059\u3002\nAcapLib2\u306eAcapSerialWrite\u76f8\u5f53\n\n```\ndef serial_write(self, write_command : str, asc : bool = True, start_str : Union[str, None] = None, end_str : Union[str, None] = \"\\r\") -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d          | \u578b   | \u8aac\u660e                                                         |\n| ------------- | ---- | ------------------------------------------------------------ |\n| write_command | str  | \u30b7\u30ea\u30a2\u30eb\u306b\u9001\u4fe1\u3059\u308b\u30b3\u30de\u30f3\u30c9                                   |\n| asc           | bool | \u30b7\u30ea\u30a2\u30eb\u306b\u66f8\u8fbc\u3080(\u9001\u4fe1)\u6587\u5b57\u306e\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<br />False: 16 \u9032\u6570(HEX)\u8868\u8a18<br />True: ASCII |\n| start_str     | str  | asc \u304cTRUE \u306e\u5834\u5408\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002<br/>\u30b3\u30de\u30f3\u30c9\u306e\u958b\u59cb\u6587\u5b57\u5217(ASCII \u8868\u8a18)<br/>\u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u300cNone\u300d\u3092\u6307\u5b9a\u3057\u3066\u4e0b\u3055\u3044 |\n| end_str       | str  | asc \u304cTRUE \u306e\u5834\u5408\u306b\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002<br/>\u30b3\u30de\u30f3\u30c9\u306e\u7d42\u7aef\u6587\u5b57\u5217(ASCII \u8868\u8a18)<br/>\u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u300cNone\u300d\u3092\u6307\u5b9a\u3057\u3066\u4e0b\u3055\u3044 |\n\n  ***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_encoder\u30e1\u30bd\u30c3\u30c9\n\n\u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\nAcapLib2\u306eAcapSetEncoder\u76f8\u5f53\n\n```\ndef set_encoder(self, enc_enable : int, enc_mode : int, enc_start : int, enc_phase : int, enc_direction : int, z_phase_enable : int, compare1 : int, compare2 : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d           | \u578b   | \u8aac\u660e                                                         |\n| -------------- | ---- | ------------------------------------------------------------ |\n| enc_enable     | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u4f7f\u7528\u8a2d\u5b9a<br />0: \u7121\u52b9<br />1: \u6709\u52b9\uff08\u76f8\u5bfe\u30ab\u30a6\u30f3\u30c8\uff09<br />2: \u6709\u52b9\uff08\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\uff09 |\n| enc_mode       | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u30e2\u30fc\u30c9<br />0: \u30a8\u30f3\u30b3\u30fc\u30c0\u30b9\u30ad\u30e3\u30f3\u30e2\u30fc\u30c9<br />1: \u30a8\u30f3\u30b3\u30fc\u30c0\u30e9\u30a4\u30f3\u9078\u629e\u30e2\u30fc\u30c9 |\n| enc_start      | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u306e\u8d77\u52d5\u65b9\u6cd5<br/>0: \u30a8\u30f3\u30b3\u30fc\u30c0\u3092CPU \u3067\u8d77\u52d5<br />1: \u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u5916\u90e8\u30c8\u30ea\u30ac\u3067\u8d77\u52d5<br />2: \u30a8\u30f3\u30b3\u30fc\u30c0\u3092CPU \u3067\u8d77\u52d5\u3057\u3066\u3001\u5916\u90e8\u30c8\u30ea\u30ac\u3092\u4e00\u81f4\u30d1\u30eb\u30b9\u3068\u3057\u3066\u4f7f\u7528 |\n| enc_phase      | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u30d1\u30eb\u30b9<br/>0: AB\u76f8<br/>1: A\u76f8                      |\n| enc_direction  | int  | \u30a8\u30f3\u30b3\u30fc\u30c0\u56de\u8ee2\u65b9\u5411<br />0: CW<br/>1: CCW                     |\n| z_phase_enable | int  | Z \u76f8\u4f7f\u7528\u8a2d\u5b9a<br />0: \u4f7f\u7528\u3057\u306a\u3044<br />1: \u4f7f\u7528\u3059\u308b             |\n| compare1       | int  | \u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf1(\u9045\u5ef6\u30d1\u30eb\u30b9\u8a2d\u5b9a)<br />0 \uff5e 4,294,967,295        |\n| compare2       | int  | \u6bd4\u8f03\u30ec\u30b8\u30b9\u30bf2(\u9593\u9694\u30d1\u30eb\u30b9\u8a2d\u5b9a)<br />1 \uff5e 4,294,967,295        |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_encoder_abs_multipoint\u30e1\u30bd\u30c3\u30c9\n\n\u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u306e\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```\ndef set_encoder_abs_multipoint(self, point_no : int, abs_count : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                         |\n| --------- | ---- | ------------------------------------------------------------ |\n| point_no  | int  | \u8a2d\u5b9a\u3059\u308b\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u306e\u756a\u53f7\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002(0\uff5e255)           |\n| abs_count | int  | \u7d76\u5bfe\u30ab\u30a6\u30f3\u30c8\u30fb\u30de\u30eb\u30c1\u30dd\u30a4\u30f3\u30c8\u5024\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002<br />-2147483648 \uff5e 2147483647 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_external_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u5916\u90e8\u30c8\u30ea\u30ac\u306e\u7a2e\u5225\u3001\u691c\u51fa\u65b9\u6cd5\u306a\u3069\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nAcapLib2\u306eAcapSetExternalTrigger\u76f8\u5f53\n\n```\ndef set_external_trigger(self, exp_trg_en : int, ext_trg_mode : int, ext_trg_dly : int, ext_trg_chatter : int, timeout : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d            | \u578b   | \u8aac\u660e                                                         |\n| --------------- | ---- | ------------------------------------------------------------ |\n| exp_trg_en      | int  | \u5916\u90e8\u30c8\u30ea\u30ac\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u4fe1\u53f7\u306e\u9078\u629e<br />0 : \u7121\u52b9<br/>1 : TTL \u30c8\u30ea\u30ac<br/>2 : \u5dee\u52d5\u30c8\u30ea\u30ac(\u30a8\u30f3\u30b3\u30fc\u30c0\u3068\u5171\u7528)<br/>3 : \u65b0\u898f\u5dee\u52d5\u30c8\u30ea\u30ac<br/>4 : OPT \u30c8\u30ea\u30ac |\n| ext_trg_mode    | int  | \u5916\u90e8\u30c8\u30ea\u30ac\u30e2\u30fc\u30c9<br />0 : \u5916\u90e8\u30c8\u30ea\u30ac1 \u56de\u3067CC \u304c1 \u56de\u51fa\u529b\u3059\u308b\u30e2\u30fc\u30c9(\u9023\u7d9a\u5916\u90e8\u30c8\u30ea\u30ac\u30e2\u30fc\u30c9)<br/>1 : \u5916\u90e8\u30c8\u30ea\u30ac1 \u56de\u3067CC \u304c\u5468\u671f\u51fa\u529b\u3059\u308b\u30e2\u30fc\u30c9(\u5358\u767a\u5916\u90e8\u30c8\u30ea\u30ac\u30e2\u30fc\u30c9) |\n| ext_trg_dly     | int  | \u5916\u90e8\u30c8\u30ea\u30ac \u691c\u51fa\u9045\u5ef6\u6642\u9593 (1us \u5358\u4f4d)                           |\n| ext_trg_chatter | int  | \u5916\u90e8\u30c8\u30ea\u30ac \u691c\u51fa\u7121\u52b9\u6642\u9593 (1us \u5358\u4f4d)                           |\n| timeout         | int  | \u691c\u51fa\u5f85\u6a5f\u6642\u9593 (1ms \u5358\u4f4d)<br />1 \uff5e 4,294,967,295              |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_gpout\u30e1\u30bd\u30c3\u30c9\n\nGPOUT \u30d4\u30f3\u306e\u51fa\u529b\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\nAcapLib2\u306eAcapSetGPOut\u76f8\u5f53\n\n```\n def set_gpout(self, output_level : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d         | \u578b   | \u8aac\u660e                                                         |\n| ------------ | ---- | ------------------------------------------------------------ |\n| output_level | int  | \u5bfe\u5fdc\u3059\u308bBit \u306eGPOUT \u30d4\u30f3\u3092ON(High)/OFF(Low)\u3057\u307e\u3059\u3002<br />0\uff1aOFF/1\uff1aON<br/>Bit0\uff1aGPOUT[1]\u30d4\u30f3 (GP_OUT1)<br/>Bit1\uff1aGPOUT[2]\u30d4\u30f3 (GP_OUT2)<br/>\uff1a<br/>Bit7\uff1aGPOUT[8]\u30d4\u30f3 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_info\u30e1\u30bd\u30c3\u30c9\n\n\u8a2d\u5b9aID\u3092\u6307\u5b9a\u3057\u3066\u3001\u8a2d\u5b9a\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u540c\u69d8\u306e\u8a2d\u5b9a\u5024\u304c\u3042\u308b\u5834\u5408\u306f\u8a2d\u5b9a\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\nAcapLib2\u306eAcapSetInfo\u76f8\u5f53\n\n```\ndef set_info(self, value_id : int, value : int, mem_num : int = -1) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d     | \u578b   | \u8aac\u660e                                                         |\n| -------- | ---- | ------------------------------------------------------------ |\n| value_id | int  | \u8a2d\u5b9aID                                                       |\n| value    | int  | \u8a2d\u5b9a\u5024                                                       |\n| mem_num  | int  | value_id\u306e\u5024\u306b\u3088\u308a\u4f7f\u7528\u65b9\u6cd5\u304c\u7570\u306a\u308a\u307e\u3059\u3002<br />\u8a73\u7d30\u306fAcapLib2\u30de\u30cb\u30e5\u30a2\u30eb\u306eAcapSetInfo\u95a2\u6570\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_line_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u30e9\u30a4\u30f3\u30bb\u30f3\u30b5\u3078\u51fa\u529b\u3059\u308bCC \u4fe1\u53f7\u306e\u5468\u671f\u30fb\u5e45\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nAcapLib2\u306eAcapSetLineTrigger\u76f8\u5f53\n\n```\ndef set_line_trigger(self, exp_cycle : int, exposure : int, exp_pol : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                         |\n| --------- | ---- | ------------------------------------------------------------ |\n| exp_cycle | int  | CC \u51fa\u529b\u5468\u671f (1us \u5358\u4f4d) \u203bCoaXPress \u306e\u5834\u5408\u306f\u30c8\u30ea\u30ac\u30d1\u30b1\u30c3\u30c8\u3067\u3059\u3002<br />0 \uff5e 4,294,967,295 |\n| exposure  | int  | CC \u51fa\u529b\u5e45 (1us \u5358\u4f4d)<br />0 \uff5e 4,294,967,295                 |\n| exp_pol   | int  | \u51fa\u529b\u8ad6\u7406<br />0 : \u8ca0\u8ad6\u7406<br/>1 : \u6b63\u8ad6\u7406                      |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_power_supply\u30e1\u30bd\u30c3\u30c9\n\n\u30ab\u30e1\u30e9\u3078\u306e\u96fb\u6e90\u4f9b\u7d66\u3092\u5236\u5fa1\u3057\u307e\u3059\u3002\n\n```\ndef set_power_supply(self, value : int, wait_time : int = 3000) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                |\n| --------- | ---- | ----------------------------------- |\n| value     | int  | \u96fb\u6e90\u306eON/OFF<br />0: OFF<br />1: ON |\n| wait_time | int  | \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3092ms\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002  |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_shutter_trigger\u30e1\u30bd\u30c3\u30c9\n\n\u30a8\u30ea\u30a2\u30bb\u30f3\u30b5\u30b7\u30e3\u30c3\u30bf\u30c8\u30ea\u30ac\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSetShutterTrigger\u76f8\u5f53\n\n```\ndef set_shutter_trigger(self, exp_cycle : int, exposure : int, exp_pol : int, exp_unit : int, cc_sel : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d      | \u578b   | \u8aac\u660e                                                    |\n| --------- | ---- | ------------------------------------------------------- |\n| exp_cycle | int  | CC \u51fa\u529b\u5468\u671f (1us \u5358\u4f4d)<br />0 \uff5e 429,496,729            |\n| exposure  | int  | CC \u51fa\u529b\u5e45 (1us \u5358\u4f4d)<br />0 \uff5e 429,496,729              |\n| exp_pol   | int  | \u51fa\u529b\u8ad6\u7406<br />0 : \u8ca0\u8ad6\u7406<br/>1 : \u6b63\u8ad6\u7406                 |\n| exp_unit  | int  | \u672a\u30b5\u30dd\u30fc\u30c8                                              |\n| cc_sel    | int  | \u51fa\u529b\u3059\u308b\u756a\u53f7<br />1 : CC1 / 2 : CC2 / 3 : CC3 / 4 : CC4 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### set_strobe\u30e1\u30bd\u30c3\u30c9\n\n\u30b9\u30c8\u30ed\u30dc\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nAcapLib2\u306eAcapSetStrobe\u76f8\u5f53\n\n```\ndef set_strobe(self, strobe_en : int, strobe_delay : int, strobe_time : int) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d         | \u578b   | \u8aac\u660e                                                         |\n| ------------ | ---- | ------------------------------------------------------------ |\n| strobe_en    | int  | \u30b9\u30c8\u30ed\u30dc \u4f7f\u7528\u8a2d\u5b9a<br />0 : \u7121\u52b9 / 1 : \u6709\u52b9                   |\n| strobe_delay | int  | \u30b9\u30c8\u30ed\u30dc\u30d1\u30eb\u30b9\u304c\u51fa\u529b\u3055\u308c\u308b\u307e\u3067\u306e\u9045\u5ef6\u6642\u9593 (1us \u5358\u4f4d)<br />0 \uff5e 65,535 |\n| strobe_time  | int  | \u30b9\u30c8\u30ed\u30dc\u30d1\u30eb\u30b9\u3092\u51fa\u529b\u3059\u308b\u6642\u9593 (1us \u5358\u4f4d)<br />0 \uff5e 65,535     |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### snap\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u3092\uff11\u679a\u53d6\u8fbc\u307f\u307e\u3059\u3002\n\n\u9ad8\u901f\u306b\u9023\u7d9a\u53d6\u8fbc\u3059\u308b\u5834\u5408\u306f\u3001grab\u3092\u304a\u4f7f\u3044\u4e0b\u3055\u3044\u3002\uff08\u53c2\u7167\uff1a[Grab sample](#Grab-sample)\uff09\n\n```\ndef snap(self, copy : bool = False) -> Tuple[int, Union[np.ndarray, None]]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                                                         |\n| ---- | ---- | ------------------------------------------------------------ |\n| copy | bool | True: \u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u304b\u3089\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002<br/>False:\u30ea\u30f3\u30b0\u30d0\u30c3\u30d5\u30a1\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u753b\u50cf\u30c7\u30fc<br/>\u30bf\u304c\u4e0a\u66f8\u304d\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\n(ret, frame)\n\n| \u540d\u524d  | \u578b         | \u8aac\u660e                                                         |\n| ----- | ---------- | ------------------------------------------------------------ |\n| ret   | int        | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0                                     |\n| frame | np.ndarray | \u53d6\u5f97\u3057\u305f\u753b\u50cf\u30c7\u30fc\u30bf<br/>\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306e\u4e26\u3073\u306fB, G, R\u3068\u306a\u308a\u307e\u3059\u3002<br/>\uff08OpenCV\u3068\u540c\u7b49\uff09 |\n\n<div style=\"page-break-after:always\"></div>\n\n### wait_frame_end\u30e1\u30bd\u30c3\u30c9\n\n\uff11\u30d5\u30ec\u30fc\u30e0\u5206\u306e\u753b\u50cf\u53d6\u8fbc\u5b8c\u4e86\u3092\u5f85\u3061\u307e\u3059\u3002\n\nAcapLib2\u306eAcapWaitEvent\u306eACL_INT_FRAMEEND\u76f8\u5f53\n\n```\ndef wait_frame_end(self, timeout = -1) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d    | \u578b   | \u8aac\u660e                                                         |\n| ------- | ---- | ------------------------------------------------------------ |\n| timeout | int  | \u5f85\u6a5f\u6642\u9593\u3092msec\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u5024\u304c\u8ca0\u306e\u5834\u5408\u3001timeout\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3055\u308c\u305f\u6642\u9593\u5206\u5f85\u6a5f\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### wait_gpin\u30e1\u30bd\u30c3\u30c9\n\nGPIN \u5272\u308a\u8fbc\u307f\u3092\u5f85\u3061\u307e\u3059\u3002\n\nAcapLib2\u306eAcapWaitEvent\u306eACL_INT_GPIN\u76f8\u5f53\n\n```\ndef wait_gpin(self, timeout = -1) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d    | \u578b   | \u8aac\u660e                                                         |\n| ------- | ---- | ------------------------------------------------------------ |\n| timeout | int  | \u5f85\u6a5f\u6642\u9593\u3092msec\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u5024\u304c\u8ca0\u306e\u5834\u5408\u3001timeout\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3055\u308c\u305f\u6642\u9593\u5206\u5f85\u6a5f\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n### wait_grab_end\u30e1\u30bd\u30c3\u30c9\n\ngrab\u306e\u5165\u529b\u505c\u6b62\u3092\u5f85\u3061\u307e\u3059\u3002\n\nAcapLib2\u306eAcapWaitEvent\u306eACL_INT_GRABEND\u76f8\u5f53\n\n```\ndef wait_grab_end(self, timeout = -1) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d    | \u578b   | \u8aac\u660e                                                         |\n| ------- | ---- | ------------------------------------------------------------ |\n| timeout | int  | \u5f85\u6a5f\u6642\u9593\u3092msec\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u5024\u304c\u8ca0\u306e\u5834\u5408\u3001timeout\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3055\u308c\u305f\u6642\u9593\u5206\u5f85\u6a5f\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n### wait_grab_start\u30e1\u30bd\u30c3\u30c9\n\ngrab\u306e\u5165\u529b\u958b\u59cb\u3092\u5f85\u3061\u307e\u3059\u3002\n\nAcapLib2\u306eAcapWaitEvent\u306eACL_INT_GRABSTART\u76f8\u5f53\n\n```\ndef  wait_grab_start(self, timeout = -1) -> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d    | \u578b   | \u8aac\u660e                                                         |\n| ------- | ---- | ------------------------------------------------------------ |\n| timeout | int  | \u5f85\u6a5f\u6642\u9593\u3092msec\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u5024\u304c\u8ca0\u306e\u5834\u5408\u3001timeout\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3055\u308c\u305f\u6642\u9593\u5206\u5f85\u6a5f\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\nret\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                     |\n| ---- | ---- | ------------------------ |\n| ret  | int  | \u6210\u529f\u6642: 1<br />\u5931\u6557\u6642: 0 |\n\n<div style=\"page-break-after:always\"></div>\n\n# GraphicsBox Class\n\ntkinter\u306eCanvas\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u3001tkinter\u7528\u753b\u50cf\u8868\u793a\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u3068\u306a\u308a\u307e\u3059\u3002\n\n## Constructors\n\n| Constructors                             | Descriptoin                             |\n| ---------------------------------------- | --------------------------------------- |\n| GraphicsBox(parent, option = value, ...) | option\u8a2d\u5b9a\u306fTkinter\u306eCanvas\u30af\u30e9\u30b9\u3068\u540c\u3058 |\n\n## Properties\n\n| Properties       | Descriptoin                                                  | Get/Set |\n| ---------------- | ------------------------------------------------------------ | :-----: |\n| affine_matrix    | \u753b\u50cf\u8868\u793a\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b3x3\u306e\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u884c\u5217\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| bright_enabled   | \u8f1d\u5ea6\u5024\u306e\u8868\u793a(True)\uff0f\u975e\u8868\u793a(False)\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002  |   \u25cf/\u25cf   |\n| cross_beam_color | \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u7528\u5341\u5b57\u7dda\u306e\u8272\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   |\n| disp_scale       | \u753b\u50cf\u8868\u793a\u500d\u7387\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002                                   |   \u25cf/-   |\n| grid_color       | \u30b0\u30ea\u30c3\u30c9\u7dda\u306e\u8272\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                           |   \u25cf/\u25cf   |\n| grid_disp_scale  | \u30b0\u30ea\u30c3\u30c9\u7dda\u3092\u8868\u793a\u3059\u308b\u753b\u50cf\u306e\u6700\u5c0f\u500d\u7387\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002       |   \u25cf/\u25cf   |\n| grid_enabled     | \u753b\u50cf\u62e1\u5927\u6642\u306e\u30b0\u30ea\u30c3\u30c9\u7dda\u306e\u8868\u793a(True)\uff0f\u975e\u8868\u793a(False)\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| max_scale        | \u753b\u50cf\u306e\u62e1\u5927\u6642\u306e\u6700\u5927\u500d\u7387\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   |\n| min_scale        | \u753b\u50cf\u306e\u7e2e\u5c0f\u6642\u306e\u6700\u5c0f\u500d\u7387\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                   |   \u25cf/\u25cf   |\n| profile_enabled  | \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u8868\u793a(True)\uff0f\u975e\u8868\u793a(False)\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| profile_hight    | \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u30b0\u30e9\u30d5\u306e\u9ad8\u3055\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002                 |   \u25cf/\u25cf   |\n| profile_x        | \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3059\u308bX\u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5ea7\u6a19\uff09\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| profile_x_color  | \u30e2\u30ce\u30af\u30ed\u753b\u50cf\u6642\u306e\u6a2a\u65b9\u5411\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u7dda\u8272\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| profile_y        | \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3059\u308bY\u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5ea7\u6a19\uff09\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| profile_y_color  | \u30e2\u30ce\u30af\u30ed\u753b\u50cf\u6642\u306e\u7e26\u65b9\u5411\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u7dda\u8272\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002 |   \u25cf/\u25cf   |\n| zoomup_direction | \u753b\u50cf\u62e1\u5927\u6642\u306e\u30db\u30a4\u30fc\u30eb\u306e\u56de\u8ee2\u65b9\u5411\u3092\u53d6\u5f97\u30fb\u8a2d\u5b9a\u3057\u307e\u3059\u3002  <br />-1:\u4e0b\u3078\u56de\u8ee2\u30011:\u4e0a\u3078\u56de\u8ee2 |   \u25cf/\u25cf   |\n\n<div style=\"page-break-after:always\"></div>\n\n## Methods\n\n| Methods                             | Descriptoin                                                  |\n| ----------------------------------- | ------------------------------------------------------------ |\n| dest_to_src_xy(xy)                  | \u73fe\u5728\u306e\u8868\u793a\u72b6\u614b\u306b\u304a\u3044\u3066\u3001\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u5ea7\u6a19\u3092\u753b\u50cf\u4e0a\u306e\u5ea7\u6a19\u3078\u5909\u63db\u3057\u307e\u3059\u3002 |\n| draw_image(image)                   | Pillow\u306eImage\u5f62\u5f0f\u3082\u3057\u304f\u306fnumpy\u306endarray\u5f62\u5f0f\u306e\u753b\u50cf\u3092GraphicsBox\u3078\u8868\u793a\u3057\u307e\u3059\u3002\u8868\u793a\u53ef\u80fd\u306a\u306e\u306f8bit,24bit,32bit\u306e\u753b\u50cf\u306e\u307f\u3067\u3059\u3002 |\n| redraw_image()                      | \u753b\u50cf\u3092\u518d\u63cf\u753b\u3057\u307e\u3059\u3002                                         |\n| reset_transform()                   | \u753b\u50cf\u8868\u793a\u3092\u521d\u671f\u72b6\u614b\uff08\u5de6\u4e0a\u306b\u7b49\u500d\u7387\uff09\u306b\u623b\u3057\u307e\u3059\u3002               |\n| scale_at(scale, cx, cy)             | \u6307\u5b9a\u3057\u305f\u70b9\u3092\u4e2d\u5fc3\u306b\u62e1\u5927\u7e2e\u5c0f\u3057\u307e\u3059\u3002                           |\n| scale_transform(scale)              | \u753b\u50cf\u8868\u793a\u306e\u76f8\u5bfe\u500d\u7387\u3092\u6307\u5b9a\u3057\u62e1\u5927\u7e2e\u5c0f\u3057\u307e\u3059\u3002                   |\n| src_to_dest_xy(xy)                  | \u73fe\u5728\u306e\u8868\u793a\u72b6\u614b\u306b\u304a\u3044\u3066\u3001\u753b\u50cf\u4e0a\u306e\u5ea7\u6a19\u3092\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u5ea7\u6a19\u3078\u5909\u63db\u3057\u307e\u3059\u3002 |\n| translate(offset_x, offset_y)       | \u753b\u50cf\u8868\u793a\u4f4d\u7f6e\u3092\u5e73\u884c\u79fb\u52d5\u3057\u307e\u3059\u3002                               |\n| zoom_fit(image_width, image_height) | \u753b\u50cf\u306e\u5e45\u3068\u9ad8\u3055\u3092\u6307\u5b9a\u3057\u3001\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u5168\u4f53\u306b\u753b\u50cf\u3092\u8868\u793a\u3057\u307e\u3059\u3002 |\n\n<div style=\"page-break-after:always\"></div>\n\n### dest_to_src_xy\u30e1\u30bd\u30c3\u30c9\n\n\u8868\u793a\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5de6\u4e0a\u304c\u539f\u70b9\uff09\u304b\u3089\u3001\u753b\u50cf\u306e\u5ea7\u6a19\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\n```\ndef dest_to_src_xy(self, xy : Tuple[float, float]) -> Tuple[float, float]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d | \u578b                  | \u8aac\u660e                                                         |\n| ---- | ------------------- | ------------------------------------------------------------ |\n| xy   | Tuple[float, float] | \u8868\u793a\u3057\u3066\u3044\u308b\u753b\u50cf\u306e\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306exy\u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5de6\u4e0a\u304c\u539f\u70b9\uff09\u3092float\u578b\u306e\u30bf\u30d7\u30eb\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\n(x, y)\n\n| \u540d\u524d   | \u578b                  | \u8aac\u660e                                            |\n| ------ | ------------------- | ----------------------------------------------- |\n| (x, y) | Tuple[float, float] | \u753b\u50cf\u4e0a\u306exy\u5ea7\u6a19\u304cfloat\u578b\u306e\u30bf\u30d7\u30eb\u3067\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002 |\n\n### draw_image\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n\n```\ndef draw_image(self, image : Union[Image.Image, np.ndarray])\u3000-> int:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d  | \u578b                             | \u8aac\u660e                                                         |\n| ----- | ------------------------------ | ------------------------------------------------------------ |\n| image | Union[Image.Image, np.ndarray] | \u8868\u793a\u3059\u308b\u753b\u50cf\u30c7\u30fc\u30bf<br />\u30c7\u30fc\u30bf\u306fPillow\u306eImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u3057\u304f\u306fnumpy\u306endarray\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u306a\u308a\u307e\u3059\u3002<br />\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5834\u5408\u3001R,G,B\u306e\u9806\u3067\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 |\n\n***\u623b\u308a\u5024***\n\nid\n\n| \u540d\u524d | \u578b   | \u8aac\u660e                                        |\n| ---- | ---- | ------------------------------------------- |\n| id   | int  | tkinter\u306ecreate_image\u306e\u623b\u308a\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 |\n\n### redraw_image\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u3092\u518d\u63cf\u753b\u3057\u307e\u3059\u3002\n\n```\ndef redraw_image(self):\n```\n\n### reset_transform\u30e1\u30bd\u30c3\u30c9\n\n\u30af\u30e9\u30b9\u5185\u90e8\u3067\u4f7f\u7528\u3057\u3066\u3044\u308b\u753b\u50cf\u8868\u793a\u7528\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u884c\u5217\u3092\u30bb\u30c3\u30c8\uff08\u5358\u4f4d\u884c\u5217\u306b\u3059\u308b\uff09\u3057\u307e\u3059\u3002\n\u30ea\u30bb\u30c3\u30c8\u5f8c\u306b\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u3068\u3001\u753b\u50cf\u306f\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5de6\u4e0a\u306b\u7b49\u500d\uff08\u500d\u7387\u304c\uff11\uff09\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\ndef reset_transform(self):\n```\n\n### scale_at\u30e1\u30bd\u30c3\u30c9\n\n\u6307\u5b9a\u3057\u305f\u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5ea7\u6a19\uff09\u3092\u4e2d\u5fc3\u306b\u753b\u50cf\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u307e\u3059\u3002\n\n```\ndef scale_at(self, scale:float, cx:float, cy:float):\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d  | \u578b    | \u8aac\u660e                                                         |\n| ----- | ----- | ------------------------------------------------------------ |\n| scale | float | \u753b\u50cf\u306e\u8868\u793a\u500d\u7387\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u500d\u7387\u306f\u73fe\u5728\u306e\u8868\u793a\u72b6\u614b\u304b\u3089\u306e\u76f8\u5bfe\u500d\u7387\u3068\u306a\u308a\u307e\u3059\u3002 |\n| cx    | float | \u62e1\u5927\u7e2e\u5c0f\u306e\u57fa\u70b9\u3068\u306a\u308b x \u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5ea7\u6a19\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n| cy    | float | \u62e1\u5927\u7e2e\u5c0f\u306e\u57fa\u70b9\u3068\u306a\u308b y \u5ea7\u6a19\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5ea7\u6a19\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n### scale_transform\u30e1\u30bd\u30c3\u30c9\n\n\u539f\u70b9\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u306e\u5de6\u4e0a\uff09\u3092\u4e2d\u5fc3\u306b\u753b\u50cf\u3092\u62e1\u5927\u7e2e\u5c0f\u3057\u307e\u3059\u3002\n\n```\ndef scale_transform(self, scale:float):\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d  | \u578b    | \u8aac\u660e                                                         |\n| ----- | ----- | ------------------------------------------------------------ |\n| scale | float | \u753b\u50cf\u306e\u8868\u793a\u500d\u7387\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002<br />\u500d\u7387\u306f\u73fe\u5728\u306e\u8868\u793a\u72b6\u614b\u304b\u3089\u306e\u76f8\u5bfe\u500d\u7387\u3068\u306a\u308a\u307e\u3059\u3002 |\n\n<div style=\"page-break-after:always\"></div>\n\n### src_to_dest_xy\u30e1\u30bd\u30c3\u30c9\n\n\u8868\u793a\u3057\u3066\u3044\u308b\u753b\u50cf\u4e0a\u306e\u5ea7\u6a19\u304b\u3089\u3001\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u5ea7\u6a19\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\n```\ndef src_to_dest_xy(self, xy : Tuple[float, float]) -> Tuple[float, float]:\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d | \u578b                  | \u8aac\u660e                                                      |\n| ---- | ------------------- | --------------------------------------------------------- |\n| xy   | Tuple[float, float] | \u8868\u793a\u3057\u3066\u3044\u308b\u753b\u50cf\u4e0a\u306exy\u5ea7\u6a19\u3092float\u578b\u306e\u30bf\u30d7\u30eb\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n***\u623b\u308a\u5024***\n\n(x, y)\n\n| \u540d\u524d   | \u578b                  | \u8aac\u660e                                                    |\n| ------ | ------------------- | ------------------------------------------------------- |\n| (x, y) | Tuple[float, float] | \u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306exy\u5ea7\u6a19\u304cfloat\u578b\u306e\u30bf\u30d7\u30eb\u3067\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002 |\n\n### translate\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u306e\u8868\u793a\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u305f\u5927\u304d\u3055\uff08\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u8ddd\u96e2\uff09\u3067\u5e73\u884c\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n```\ndef translate(self, offset_x : float, offset_y : float):\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d     | \u578b    | \u8aac\u660e                                                    |\n| -------- | ----- | ------------------------------------------------------- |\n| offset_x | float | \u753b\u50cf\u306eX\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3092\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u8ddd\u96e2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n| offset_y | float | \u753b\u50cf\u306eY\u65b9\u5411\u306e\u79fb\u52d5\u91cf\u3092\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u4e0a\u306e\u8ddd\u96e2\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n### zoom_fit\u30e1\u30bd\u30c3\u30c9\n\n\u753b\u50cf\u5168\u4f53\u304c\u30a6\u30a3\u30b8\u30a7\u30c3\u30c8\u5168\u4f53\u306b\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u8868\u793a\u4f4d\u7f6e\u3001\u500d\u7387\u3092\u8abf\u6574\u3057\u307e\u3059\u3002\n\n```\ndef zoom_fit(self, image_width : int, image_height : int):\n```\n\n  ***\u30d1\u30e9\u30e1\u30fc\u30bf***\n\n| \u540d\u524d         | \u578b   | \u8aac\u660e                             |\n| ------------ | ---- | -------------------------------- |\n| image_width  | int  | \u753b\u50cf\u306e\u5e45\u306e\u753b\u7d20\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002   |\n| image_height | int  | \u753b\u50cf\u306e\u9ad8\u3055\u306e\u753b\u7d20\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002 |\n\n\n\n# Changelog\n\n## Ver.1.0.0\n\n| \u30e2\u30b8\u30e5\u30fc\u30eb  | \u30d0\u30fc\u30b8\u30e7\u30f3 | \u5099\u8003 |\n| ----------- | ---------- | ---- |\n| acaplib2    | Ver.1.0.0  | \u521d\u7248 |\n| acapy       | Ver.1.0.0  | \u521d\u7248 |\n| graphicsbox | Ver.1.0.0  | \u521d\u7248 |\n\n\u521d\u7248\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://www.avaldata.co.jp/contact",
            "keywords": "AVALDATA acapy AcapLib2",
            "license": "3-Clause BSD License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "acapy",
            "package_url": "https://pypi.org/project/acapy/",
            "platform": "",
            "project_url": "https://pypi.org/project/acapy/",
            "project_urls": {
                "Homepage": "https://www.avaldata.co.jp/contact"
            },
            "release_url": "https://pypi.org/project/acapy/1.0.0rc1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "acapy package (Python bindings for AVALDATA AcapLib2 )",
            "version": "1.0.0rc1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12296977,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8f5c77d83a60f58404f066fac5f83b35",
                    "sha256": "9293616764f74d616eac9f68985f367347b7dc9bd8a6065e81799eb8edf04478"
                },
                "downloads": -1,
                "filename": "acapy-1.0.0rc1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8f5c77d83a60f58404f066fac5f83b35",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 67273,
                "upload_time": "2021-07-13T03:57:31",
                "upload_time_iso_8601": "2021-07-13T03:57:31.485189Z",
                "url": "https://files.pythonhosted.org/packages/18/ce/53958609d9a41aca49f04dcd2f2129b7968a790fcd37f7479bd189106474/acapy-1.0.0rc1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}