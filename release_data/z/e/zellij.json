{
    "0.0.4": {
        "info": {
            "author": "Thomas Firmin",
            "author_email": "thomas.firmin@univ-lille.fr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: CeCILL-C Free Software License Agreement (CECILL-C)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ThomasFirmin/zellij",
            "keywords": "fractal,continuous optimization,global optimization,black-box functions,decision space partitioning,exploration,exploitation,metaheuristics,tree search",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zellij",
            "package_url": "https://pypi.org/project/zellij/",
            "platform": null,
            "project_url": "https://pypi.org/project/zellij/",
            "project_urls": {
                "Bug Tracker": "https://github.com/ThomasFirmin/zellij/issues",
                "Homepage": "https://github.com/ThomasFirmin/zellij"
            },
            "release_url": "https://pypi.org/project/zellij/0.0.4/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A software framework for HyperParameters Optimization",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13782808,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ffb65a9aeb66113d877735328ca552cd",
                    "sha256": "3b94bcffed20716c6d22e7c8cecd863adbb3afbd371c694009f95813cdd59be5"
                },
                "downloads": -1,
                "filename": "zellij-package-ThomasFirmin-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "ffb65a9aeb66113d877735328ca552cd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 64445,
                "upload_time": "2022-05-11T13:53:00",
                "upload_time_iso_8601": "2022-05-11T13:53:00.931646Z",
                "url": "https://files.pythonhosted.org/packages/4b/f7/b68e31dd12e295ee7b6db22295f36ac1e2d9905dacb84f23f5f47f15f35b/zellij-package-ThomasFirmin-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Thomas Firmin",
            "author_email": "thomas.firmin@univ-lille.fr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: CeCILL-C Free Software License Agreement (CECILL-C)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": " <!-- @Author: Thomas Firmin <ThomasFirmin> -->\n <!-- @Date:   2022-05-03T15:41:48+02:00 -->\n <!-- @Email:  thomas.firmin@univ-lille.fr -->\n <!-- @Project: Zellij -->\n <!-- @Last modified by:   ThomasFirmin -->\n <!-- @Last modified time: 2022-05-03T15:44:11+02:00 -->\n <!-- @License: CeCILL-C (http://www.cecill.info/index.fr.html) -->\n <!-- @Copyright: Copyright (C) 2022 Thomas Firmin -->\n\n\n![alt text](./sources/logo_5st.png)\n\n**Zellij** is an open source Python framework for *HyperParameter Optimization* (HPO) which was orginally dedicated to *Fractal Decomposition based algorithms* [[1]](#1) [[2]](#2).\nIt includes tools to define mixed search space, manage objective functions, and a few algorithms.\nTo implements metaheuristics and other optimization methods, **Zellij** uses [DEAP](https://deap.readthedocs.io/)[[3]](#3) for the *Evolutionary Algorithms* part\nand [BoTorch](https://botorch.org/) [[4]](#4) for *Bayesian Optimization*.\n**Zellij** is defined as an easy to use and modular framework, based on Python object oriented paradigm.\n\n## Install Zellij\n\n#### Original version\n```\n$ pip install zellij\n```\n\n#### Distributed Zellij\n\nThis version requires MPI, such as [MPICH](https://www.mpich.org/) or [Open MPI](https://www.open-mpi.org/).\nIt is based on [mpi4py](https://mpi4py.readthedocs.io/en/stable/intro.html#what-is-mpi)\n\n```\n$ pip install zellij[mpi]\n```\n\nUser will then be able to use the `MPI` option of the `Loss` decorator.\n```python\n@Loss(MPI=True)\n```\nThen the python script must be executed using `mpiexec`:\n```python\n$ mpiexec -machinefile <path/to/hostfile> -n <number of processes> python3 <path/to/python/script>\n```\n\nBe carefull, before using this version, one must be familiar to MPI.\n\n## Quickstart\n\n#### Define your search space\n```python\n\nfrom zellij.core.search_space import Searchspace\n\nlabels = [\"a\",\"b\"]\ntypes = [\"R\",\"R\"]\nvalues = [[-5, 5],[-5, 5]]\nneighborhood = [0.5,0.5]\nsp = Searchspace(labels,types,values, neighborhood)\n```\n\n#### Define your loss function\n```python\nimport numpy as np\nfrom zellij.core.loss_func import Loss\n\n@Loss(save=False, verbose=True)\ndef himmelblau(x):\n  x_ar = np.array(x)\n  return np.sum(x_ar**4 -16*x_ar**2 + 5*x_ar) * (1/len(x_ar))\n\nprint(himmelblau)\n```\n\n#### Choose an optimization algorithm\n\n```python\nfrom zellij.strategies.genetic_algorithm import Genetic_algorithm\nga = Genetic_algorithm(himmelblau, sp, 1000, pop_size=25, generation=40)\nga.run()\nga.show()\n```\n\n## Dependencies\n\n#### Original version\n\n* **Python** >=3.6\n* [numpy](https://numpy.org/)=>1.21.4\n* [DEAP](https://deap.readthedocs.io/en/master/)>=1.3.1\n* [botorch](https://botorch.org/)>=0.6.3.1\n* [gpytorch](https://gpytorch.ai/)>=1.6.0\n* [matplotlib](https://matplotlib.org/)>=3.5.0\n* [seaborn](https://seaborn.pydata.org/)>=0.11.2\n* [pandas](https://pandas.pydata.org/)>=1.3.4\n\n#### MPI version\n* **Python** >=3.6\n* [numpy](https://numpy.org/)=>1.21.4\n* [DEAP](https://deap.readthedocs.io/en/master/)>=1.3.1\n* [botorch](https://botorch.org/)>=0.6.3.1\n* [gpytorch](https://gpytorch.ai/)>=1.6.0\n* [matplotlib](https://matplotlib.org/)>=3.5.0\n* [seaborn](https://seaborn.pydata.org/)>=0.11.2\n* [pandas](https://pandas.pydata.org/)>=1.3.4\n* [mpi4py](https://mpi4py.readthedocs.io/en/stable/)>=3.1.2\n\n## Contributors\n\n### Design\n* Thomas Firmin: thomas.firmin@univ-lille.fr\n* El-Ghazali Talbi: el-ghazali.talbi@univ-lille.fr\n\n## References\n<a id=\"1\">[1]</a>\nNakib, A., Ouchraa, S., Shvai, N., Souquet, L. & Talbi, E.-G. Deterministic metaheuristic based on fractal decomposition for large-scale optimization. Applied Soft Computing 61, 468\u2013485 (2017).\n\n<a id=\"2\">[2]</a>\nDemirhan, M., \u00d6zdamar, L., Helvac\u0131o\u011flu, L. & Birbil, \u015e. I. FRACTOP: A Geometric Partitioning Metaheuristic for Global Optimization. Journal of Global Optimization 14, 415\u2013436 (1999).\n\n<a id=\"3\">[3]</a>\nF\u00e9lix-Antoine Fortin, Fran\u00e7ois-Michel De Rainville, Marc-Andr\u00e9 Gardner, Marc Parizeau and Christian Gagn\u00e9, \"DEAP: Evolutionary Algorithms Made Easy\", Journal of Machine Learning Research, vol. 13, pp. 2171-2175, jul 2012.\n\n<a id=\"4\">[4]</a>\nM. Balandat, B. Karrer, D. R. Jiang, S. Daulton, B. Letham, A. G. Wilson, and E. Bakshy. BoTorch: A Framework for Efficient Monte-Carlo Bayesian Optimization. Advances in Neural Information Processing Systems 33, 2020.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ThomasFirmin/zellij",
            "keywords": "fractal,continuous optimization,global optimization,black-box functions,decision space partitioning,exploration,exploitation,metaheuristics,tree search",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zellij",
            "package_url": "https://pypi.org/project/zellij/",
            "platform": null,
            "project_url": "https://pypi.org/project/zellij/",
            "project_urls": {
                "Bug Tracker": "https://github.com/ThomasFirmin/zellij/issues",
                "Homepage": "https://github.com/ThomasFirmin/zellij"
            },
            "release_url": "https://pypi.org/project/zellij/0.0.5/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A software framework for HyperParameters Optimization",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13782808,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f2f09355faae55788305d979bd56fe8e",
                    "sha256": "9f78638a5bfe61dbe7ed227062eeb9620096f83b8ee3d99e837022cf2bad2c26"
                },
                "downloads": -1,
                "filename": "zellij-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "f2f09355faae55788305d979bd56fe8e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 64442,
                "upload_time": "2022-05-11T14:08:04",
                "upload_time_iso_8601": "2022-05-11T14:08:04.061731Z",
                "url": "https://files.pythonhosted.org/packages/80/b7/619d76d5c5cbbce41a0eac6be11eb03370194cad2b28f55cf0a1d07365b6/zellij-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}