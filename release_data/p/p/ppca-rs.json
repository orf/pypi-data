{
    "0.1.0": {
        "info": {
            "author": null,
            "author_email": "Pedro B. Arruda <parruda@findhotel.net>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Programming Language :: Rust",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "# _Probabilistic_ Principal Component Analysis model\n\nThis project implements a PPCA model implemented in Rust for Python using `pyO3` and `maturin`.\n\n## Installing\n\nPyPI package comming soon:\n```bash\npip install ppca_rs # hopefully!\n```\n\n\n## Quick example\n\n```python\nimport numpy as np\nfrom ppca_rs import Dataset, PPCATrainer, PPCA\n\nsamples: np.ndarray\n\n# Create your dataset from a rank 2 np.ndarray, where each line is a sample.\n# Use non-finite values (`inf`s and `nan`) to signal masked values\ndataset = Dataset(samples)\n\n# Train the model:\nmodel: PPCAModel = PPCATrainer(dataset).train(state_size=10, n_iters=10)\n\n\n# And now, let's have fun!\n\n# Extrapolates the missing values with the most probable values:\nmodel.extrapolate(dataset)\n\n# Smooths (removes noise from) samples and fills in missing values:\nmodel.filter_extrapolate(dataset)\n```\n\n## Building from soure\n\n### Prerequisites\n\nYou will need [Rust](https://rust-lang.org/), which can be installed locally (i.e., without `sudo`) and you will also need `maturin`, which can be installed by \n```bash\npip install maturin\n```\n`pipenv` is also a good idea if you are going to mess around with it locally. At least, you need a `venv` set, otherwise, `maturin` will complain with you.\n\n### Installing it locally\n\nCheck the `Makefile` for the available commands (or just type `make`). To install it locally, do\n```bash\nmake install    # optional: i=python.version (e.g, `i=3.9`)\n```\n\n### Messing around and testing\n\nTo mess around, _inside a virtual environment_ (a `Pipfile ` is provided for the `pipenv` lovers), do\n```bash\nmaturin develop  # use the flag --release to unlock superspeed!\n```\nThis will install the package locally _as is_ from source.\n\n## How do I use this stuff?\n\nSee the examples in the `examples` folder. Also, all functions are type hinted and commented. If you are using `pylance` or `mypy`, it should be easy to navigate.\n\n## Is it faster than the pure Python implemetation you made?\n\nYou bet!\n\n",
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "ppca-rs",
            "package_url": "https://pypi.org/project/ppca-rs/",
            "platform": null,
            "project_url": "https://pypi.org/project/ppca-rs/",
            "project_urls": {
                "Homepage": "https://github.com/FindHotel/ppca"
            },
            "release_url": "https://pypi.org/project/ppca-rs/0.1.0/",
            "requires_dist": [
                "cffi",
                "numpy"
            ],
            "requires_python": ">=3.7",
            "summary": "Python+Rust implementation of the Probabilistic Principal Component Analysis model",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15894164,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "ad7281f504429f93d49b68e4db13a482",
                    "sha256": "8f4f46897c8d288c04697f215b64e0ea9441fef384151ee2f56e4308d33752fb"
                },
                "downloads": -1,
                "filename": "ppca_rs-0.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
                "has_sig": false,
                "md5_digest": "ad7281f504429f93d49b68e4db13a482",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.7",
                "size": 400835,
                "upload_time": "2022-11-25T22:07:42",
                "upload_time_iso_8601": "2022-11-25T22:07:42.142645Z",
                "url": "https://files.pythonhosted.org/packages/68/3f/e2537df5d5eb155a54c6fda1d75465b173f44a6d75adb7ab77d4a7beb9ef/ppca_rs-0.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "23829dc604ec23390348185b9ae6c882",
                    "sha256": "f5a4e7909602cf25f5a499d4260809d4d54c8c7e751c4ec4c7d3023e8261c648"
                },
                "downloads": -1,
                "filename": "ppca_rs-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "23829dc604ec23390348185b9ae6c882",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 20387,
                "upload_time": "2022-11-25T22:07:44",
                "upload_time_iso_8601": "2022-11-25T22:07:44.877740Z",
                "url": "https://files.pythonhosted.org/packages/08/a1/3990ad7d8919ac777c1b75c63902d7949a2e9dfc381e95dc58dcbf2d592b/ppca_rs-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}