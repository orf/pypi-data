{
    "0.0.0": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "\u7af6\u8247,boatrace,data analysis",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.0.0/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7d1b03bb7bef04bce16a5c2fb6785b7c",
                    "sha256": "2a6baa0a4ea082a6db21ad98d746e8dbb72145ab4bc511f8d45c50d1be80dff9"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7d1b03bb7bef04bce16a5c2fb6785b7c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 18793,
                "upload_time": "2020-12-05T14:01:59",
                "upload_time_iso_8601": "2020-12-05T14:01:59.447360Z",
                "url": "https://files.pythonhosted.org/packages/8f/49/29b19bf532c7e67be272929705cd14b5711826333f3b066ad74434cb1c20/pyjpboatrace-0.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bea43bda6e460590903fa745b91f5228",
                    "sha256": "ca15f1e753f083e640f68109e0968b598eb2d6b34e17da1982297212aba80770"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bea43bda6e460590903fa745b91f5228",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13284,
                "upload_time": "2020-12-05T14:02:01",
                "upload_time_iso_8601": "2020-12-05T14:02:01.081800Z",
                "url": "https://files.pythonhosted.org/packages/0c/d5/5211171d6e8296e3503c97a12fa55fbacf546979ba27eeb1750f8acfc1bd/pyjpboatrace-0.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "\u7af6\u8247,boatrace,data analysis",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.1.0/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (>=3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69444b2ed459f8d93bf5be6302b19202",
                    "sha256": "d9775799093ed762d29c46243f251ce1dd2458aa06f930e7f47445901122ed77"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "69444b2ed459f8d93bf5be6302b19202",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 24089,
                "upload_time": "2020-12-28T08:38:11",
                "upload_time_iso_8601": "2020-12-28T08:38:11.498237Z",
                "url": "https://files.pythonhosted.org/packages/22/6f/3bace90275fc3ae5fa830565e6c5926df245ff45e0e043eef30fd0d742cf/pyjpboatrace-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4fbbcf91876bf0d5d67df0d274337d81",
                    "sha256": "e23befc6d01c98f6a4605c7a77362646ba3b1b4164b58c7aa5439a981a0a1dac"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4fbbcf91876bf0d5d67df0d274337d81",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19206,
                "upload_time": "2020-12-28T08:38:12",
                "upload_time_iso_8601": "2020-12-28T08:38:12.769284Z",
                "url": "https://files.pythonhosted.org/packages/04/45/d9d4d0060a1773c05e40d8653fdb6716217a3e5e57a0cae9254284a17676/pyjpboatrace-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "\u7af6\u8247,boatrace,data analysis",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.1.1/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (>=3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7d9eee495afd0fd62112b475fb98760d",
                    "sha256": "9989d2e1728c48dc4416fcb67762dc664fb9c846d50900b665baa1b1e83133a8"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7d9eee495afd0fd62112b475fb98760d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 24101,
                "upload_time": "2021-01-01T12:05:32",
                "upload_time_iso_8601": "2021-01-01T12:05:32.390787Z",
                "url": "https://files.pythonhosted.org/packages/b9/f7/0e28f3c3e8b592b69daff3fa50c45204d981c7cff0b44384a03000a86cfc/pyjpboatrace-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8532c0ffe9cad70f3a1b5bc6cbaa6228",
                    "sha256": "714addd82ed6bbb04160d8ca2916efb926c340cf12332f978f9aec822c030574"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8532c0ffe9cad70f3a1b5bc6cbaa6228",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19222,
                "upload_time": "2021-01-01T12:05:33",
                "upload_time_iso_8601": "2021-01-01T12:05:33.572104Z",
                "url": "https://files.pythonhosted.org/packages/8d/4a/6b6502d52d575a5a6171e9bf33eb0b0d8dad11f1977442cab67beda9736f/pyjpboatrace-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "\u7af6\u8247,boatrace,data analysis",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.1.2/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (>=3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a35f13a70a3d6bc2a9fd41115c3f0c49",
                    "sha256": "f1b8a9d8e9b4d2808d1e7f540696b9ab3498c8e5220a193cfd3e418a867b2502"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a35f13a70a3d6bc2a9fd41115c3f0c49",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 24922,
                "upload_time": "2021-05-03T09:04:59",
                "upload_time_iso_8601": "2021-05-03T09:04:59.075167Z",
                "url": "https://files.pythonhosted.org/packages/99/73/04c2d261c783acb2e1578b8e91a30cf226c8082b7d68b7eca65c242ff434/pyjpboatrace-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a333cd95ec18efcda411ff5088d923d7",
                    "sha256": "d2f0e6ac00a8fc126f94577ef517f796436e38407f66a0a3de1be0b05952abfc"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a333cd95ec18efcda411ff5088d923d7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19626,
                "upload_time": "2021-05-03T09:05:00",
                "upload_time_iso_8601": "2021-05-03T09:05:00.146782Z",
                "url": "https://files.pythonhosted.org/packages/38/29/d47e07511dd6acdc64f34267339a6fe0acf860fac3f6a64c2baa682e4631/pyjpboatrace-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "kyotei,boatrace,data analysis",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.2.0/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (==3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f7cf36f4fa566c1d524abc02f7527fc7",
                    "sha256": "3c4fd2211d5996a07c1b35c839606e16db82a5a76f123e9611e6c6fea4f86ba4"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f7cf36f4fa566c1d524abc02f7527fc7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 42505,
                "upload_time": "2021-08-06T04:19:10",
                "upload_time_iso_8601": "2021-08-06T04:19:10.738379Z",
                "url": "https://files.pythonhosted.org/packages/f3/36/c927b293e1e6d8f97d7a405f0a65102750f3ebf78f0fd762234e5e8e2433/pyjpboatrace-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0c76a09561c251ad32e3e5e01d30d7fb",
                    "sha256": "be847e77c48b3ba50fdd928c5bbfb32b7e36e1f388b92423d7ad73cdffde2b65"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0c76a09561c251ad32e3e5e01d30d7fb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 29541,
                "upload_time": "2021-08-06T04:19:12",
                "upload_time_iso_8601": "2021-08-06T04:19:12.695855Z",
                "url": "https://files.pythonhosted.org/packages/dc/ef/8b506efc1cb4260e1169703fc00c49fb9178a63a8a7236573f903b03b0fa/pyjpboatrace-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "kyotei,boatrace,data analysis",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.2.1/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (==3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "56ffb285a0cc70731e8e09a081fe28e1",
                    "sha256": "fd92238c20b95060f0412cd2115035e72a383b43018ad4f408334444f352977b"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "56ffb285a0cc70731e8e09a081fe28e1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 43426,
                "upload_time": "2021-08-12T15:34:59",
                "upload_time_iso_8601": "2021-08-12T15:34:59.637438Z",
                "url": "https://files.pythonhosted.org/packages/75/49/fe76577fc002a6b2a8443ca9be7664086b72d54748883c1c050e6bf80c43/pyjpboatrace-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "42dd115af0d2b1bd6677b720157faa43",
                    "sha256": "8f3cb4fb79530769a9ca38dcf3c7d3546f62db6f04086c5b8fd1496e40b038d5"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "42dd115af0d2b1bd6677b720157faa43",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 30021,
                "upload_time": "2021-08-12T15:35:01",
                "upload_time_iso_8601": "2021-08-12T15:35:01.682264Z",
                "url": "https://files.pythonhosted.org/packages/4f/f1/278d5a9fbf9de6a46941f7eb45d486863d162f0da8ff5be1d7d5b4029901/pyjpboatrace-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.2": {
        "info": {
            "author": "hmasdev",
            "author_email": "hmasuidev1com@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 2 - Pre-Alpha",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# PyJPBoatRace: Python-based Japanese boatrace tools :speedboat:\n\n![GitHub top language](https://img.shields.io/github/languages/top/hmasdev/pyjpboatrace)\n![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/hmasdev/pyjpboatrace?sort=semver)\n![GitHub](https://img.shields.io/github/license/hmasdev/pyjpboatrace)\n![GitHub last commit](https://img.shields.io/github/last-commit/hmasdev/pyjpboatrace)\n![Pytest](https://github.com/hmasdev/pyjpboatrace/actions/workflows/pytest.yaml/badge.svg)\n\nJapanese boat race is extremely exciting sports.\nIt is also fun to predict the results of races.\nPrediction like machine learning method requires data.\nThus, this package provides you with useful tools for data analysis and auto-betting for boatrace.\n\n## Installation\n\n### Requirements\n\nIf you want to deposit, withdraw and betting with pyjpboatrace,\none of the following browers is required at least:\n\n- Chrome\n- Firefox\n- Edge\n\n### Dependencies\n\n- python >= 3.7\n- requests>=2.25.0\n- beautifulsoup4>=4.9.3\n- selenium>=3.141.0\n- webdriver-manager>=3.2.2\n- msedge-selenium-tools\n\n### User installation\n\n```\n    pip install -U pyjpboatrace\n```\n\n## How to use\n\n1. (optional) create an instance of UserInformation;\n2. (optional) create a selenium driver;\n3. create an instance of PyJPBoatrace;\n4. execute scraping and operating.\n\nNOTE: you must create a UserInformation instance and a selenium driver to order to deposit, withdraw or bet.\n\n### UserInformation\n\n- `pyjpboatrace.user_information.UserInformation(userid:str, pin:str, auth_pass:str, vote_pass:str, json_file:str)`\n\nNOTE: If you use a json file to create an instance of UserInformation, the json file should contain the following keys: userid, pin, auth_pass and vote_pass.\n\n### Selenium Driver\n\nYou can use the following functions to create selenium drivers:\n\n- pyjpboatrace.drivers.create_chrome_driver()\n- pyjpboatrace.drivers.create_firefox_driver()\n- pyjpboatrace.drivers.create_edge_driver()\n- pyjpboatrace.drivers.create_httpget_driver()\n\nNOTE 1: you can use your own selenium driver.\n\nNOTE 2: If you use create_httpget_driver, you cannot execute the following operations, deposit, withdraw or bet.\n\n### Scraping and Operating\n\nPyJPBoatrace provides 2 main functions: scraping and operating.\n\nThe former is scraping race information, odds and so on;\nthe latter is betting, depositing and withdrawing.\n\n#### Scraping\n\n- Get a list of stadiums which hold races on the given day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_stadiums(d: datetime.date) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().Stadiums.get(d: datetime.date) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2021-08-12\",\n      \"\u5927\u6751\":{\n        \"status\":\"-\",\n        \"grade\":[\n          \"ippan\",\n          \"rookie\"\n        ],\n        \"timeframe\":\"nighter\",\n        \"title\":\"\u30eb\u30fc\u30ad\u30fc\u30b7\u30ea\u30fc\u30ba\u7b2c\uff11\uff16\u6226\u3000\u30aa\u30fc\u30eb\u9032\u5165\u56fa\u5b9a\u30ec\u30fc\u30b9\",\n        \"period\":[\n          \"2020-09-07\",\n          \"2020-09-13\"\n        ],\n        \"day\":\"\u521d\u65e5\"\n      },\n      ...\n    }\n    ```\n\n    </details>\n\n- To get 12 races held in the given stadium on the given day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_12races(d: datetime.date, stadium: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().Races.get(d: datetime.date, stadium: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2021-08-12\",\n      \"stadium\": 1,\n      \"1R\":{\n          \"vote_limit\":\"2020-01-01 10:00:00\",\n          \"status\":\"\u767a\u58f2\u7d42\u4e86\",\n          \"racers\":{\n              \"boat1\":{\n                  \"name\":\"Name1\",\n                  \"class\":\"A1\"\n              },\n              \"boat2\":{\n                  \"name\":\"Name2\",\n                  \"class\":\"A2\"\n              },\n              \"boat3\":{\n                  \"name\":\"Name3\",\n                  \"class\":\"B1\"\n              },\n              \"boat4\":{\n                  \"name\":\"Name4\",\n                  \"class\":\"B2\"\n              },\n              \"boat5\":{\n                  \"name\":\"Name5\",\n                  \"class\":\"A1\"\n              },\n              \"boat6\":{\n                  \"name\":\"Name6\",\n                  \"class\":\"B1\"\n              }\n          }\n      },\n      ...,\n      \"12R\":{\n          \"vote_limit\":\"2020-01-01 15:30:00\",\n          \"status\":\"\u767a\u58f2\u7d42\u4e86\",\n          \"racers\":{\n              \"boat1\":{\n                  \"name\":\"Name1\",\n                  \"class\":\"A1\"\n              },\n              \"boat2\":{\n                  \"name\":\"Name2\",\n                  \"class\":\"A2\"\n              },\n              \"boat3\":{\n                  \"name\":\"Name3\",\n                  \"class\":\"B1\"\n              },\n              \"boat4\":{\n                  \"name\":\"Name4\",\n                  \"class\":\"B2\"\n              },\n              \"boat5\":{\n                  \"name\":\"Name5\",\n                  \"class\":\"A1\"\n              },\n              \"boat6\":{\n                  \"name\":\"Name6\",\n                  \"class\":\"B1\"\n              }\n          }\n      }\n    }\n    ```\n\n    </details>\n\n- To get the basic information of the race in the stadium on a day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_race_info(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().RaceInfo.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2021-08-12\",\n      \"stadium\": 10,\n      \"race\": 1,\n      \"boat1\": {\n        \"racerid\": 9999,\n        \"class\": \"A1\",\n        \"name\": \"Name1\",\n        \"branch\": \"Somewhere\",\n        \"birthplace\": \"Somewhere\",\n        \"age\": 40,\n        \"weight\": 53.2,\n        \"F\": 0,\n        \"L\": 0,\n        \"aveST\": 0.19,\n        \"global_win_pt\": 6.43,\n        \"global_in2nd\": 43.86,\n        \"global_in3rd\": 68.42,\n        \"local_win_pt\": 0,\n        \"local_in2nd\": 0,\n        \"local_in3rd\": 0,\n        \"motor\": 42,\n        \"motor_in2nd\": 35.48,\n        \"motor_in3rd\": 56.13,\n        \"boat\": 41,\n        \"boat_in2nd\": 30.77,\n        \"boat_in3rd\": 54.49,\n        \"result\": [\n          {\n              \"race\": 8,\n              \"boat\": 2,\n              \"course\": 2,\n              \"ST\": 0.24,\n              \"rank\": 6\n          },\n          {},\n          {\n              \"race\": 4,\n              \"boat\": 4,\n              \"course\": 4,\n              \"ST\": 0.28,\n              \"rank\": 5\n          },\n          ...,\n          {}\n        ]\n      },\n      ...,\n      \"race_title\": [\n          \"\u307f\u304f\u306b\u3042\u3055\u30ac\u30c1\",\n          \"1800m\"\n      ]\n    }\n    ```\n\n    </details>\n\n- To get the odds of win (\u5358\u52dd) and place-show (\u8907\u52dd) of the race in the stadium on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_odds_win_placeshow(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().WinPlaceshowOdds.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"win\":{\n        \"1\": 1.0,\n        \"2\": 6.8,\n        \"3\": 9.3,\n        \"4\": 41.3,\n        \"5\": 36.1,\n        \"6\": 72.3\n      },\n      \"place_show\":{\n        \"1\": [1.0, 1.3],\n        \"2\": [3.3, 5.0],\n        \"3\": [1.5, 2.2],\n        \"4\": [5.7, 8.9],\n        \"5\": [1.1, 1.6],\n        \"6\": [22.0, 33.3]\n      },\n      \"update\": \"\u7de0\u5207\u6642\u30aa\u30c3\u30ba\"\n    }\n    ```\n\n    </details>\n\n- To get the odds of quinella place (\u62e1\u9023\u8907) of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_odds_quinellaplace(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().QuinellaplaceOdds.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"1=2\": [1.2,1.4],\n      \"1=3\": [1.3,1.8],\n      ...,\n      \"5=6\": [27.2,30.9],\n      \"update\": \"9:02\"\n    }\n    ```\n\n    </details>\n\n- To get the odds of exacta (\u4e8c\u9023\u5358) and quinella (\u4e8c\u9023\u8907) of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_odds_exacta_quinella(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().ExactaQuinellaOdds.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"exacta\":{\n        \"1-2\": 2.5,\n        \"1-3\": 2.8,\n        ...,\n        \"6-5\": 2931.0\n      },\n      \"quinella\":{\n        \"1=2\": 3.0,\n        \"1=3\": 2.1,\n        ...,\n        \"5=6\": 298.3\n      },\n      \"update\": \"12:30\"\n    }\n    ```\n\n    </details>\n\n- To get the odds of trifecta (\u4e09\u9023\u5358) of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_odds_trifecta(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBaotrace().TrifectaOdds.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"1-2-3\": 5.6,\n      \"1-2-4\": 14.4,\n      ...,\n      \"6-5-4\": 8650.0,\n      \"update\": \"\u7de0\u5207\u6642\u30aa\u30c3\u30ba\"\n    }\n    ```\n\n    </details>\n\n- To get the oods of trio \uff08\u4e09\u9023\u8907\uff09 of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_odds_trio(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().Trio.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"1=2=3\": \"\u6b20\u5834\",\n      \"1=2=4\": \"\u6b20\u5834\",\n      \"1=2=5\": \"\u6b20\u5834\",\n      \"1=2=6\": \"\u6b20\u5834\",\n      \"1=3=4\": \"\u6b20\u5834\",\n      \"2=3=4\": 4.2,\n      \"1=3=5\": \"\u6b20\u5834\",\n      \"2=3=5\": 30,\n      \"1=3=6\": \"\u6b20\u5834\",\n      \"2=3=6\": 2.3,\n      \"1=4=5\": \"\u6b20\u5834\",\n      \"2=4=5\": 25,\n      \"3=4=5\": 79.2,\n      \"1=4=6\": \"\u6b20\u5834\",\n      \"2=4=6\": 1.9,\n      \"3=4=6\": 60,\n      \"1=5=6\": \"\u6b20\u5834\",\n      \"2=5=6\": 26.7,\n      \"3=5=6\": 132.1,\n      \"4=5=6\": 90.1,\n      \"update\": \"15:30\"\n    }\n    ```\n\n    </details>\n\n- To get the just-before information, e.g. weather and start-timing, of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_just_before_info(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().JustBeforeInfo.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-08-25\",\n      \"stadium\": 14,\n      \"race\": 7,\n      \"boat1\":{\n          \"name\":\"Name1\",\n          \"weight\":55.1,\n          \"weight_adjustment\":0.0,\n          \"display_time\":6.87,\n          \"tilt\":0.0,\n          \"propeller\":\"\",\n          \"parts_exchange\":[\n              \"\u30ea\u30f3\u30b0\u00d7\uff11\",\n              \"\u30b7\u30e3\u30d5\u30c8\"\n          ],\n          \"previous_race\":{}\n      },\n      ...,\n      \"boat6\":{\n          \"name\":\"Name6\",\n          \"weight\":51.0,\n          \"weight_adjustment\":0.0,\n          \"display_time\":6.88,\n          \"tilt\":-0.5,\n          \"propeller\":\"\",\n          \"parts_exchange\":[],\n          \"previous_race\":{\n              \"race\":3,\n              \"boat\":3,\n              \"course\":3,\n              \"ST\":0.13,\n              \"rank\":6\n          }\n      },\n      \"start_display\":{\n          \"course1\":{\n              \"boat\":1,\n              \"ST\":0.02\n          },\n          ...,\n          \"course6\":{\n              \"boat\":6,\n              \"ST\":0.10\n          }\n      },\n      \"weather_information\":{\n          \"direction\":16,\n          \"weather\":\"\u6674\",\n          \"temperature\":31.0,\n          \"wind_direction\":14,\n          \"wind_speed\":5,\n          \"water_temperature\":27.0,\n          \"wave_height\":5,\n          \"time\":\"6R\u6642\u70b9\"\n      }\n    }\n    ```\n\n    </details>\n\n- To get the race result of the race in the stadioum on the day:\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().get_race_result(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n    - ```python\n      PyJPBoatrace().Result.get(d: datetime.date, stadium: int, race: int) -> Dict[str, Any]\n      ```\n\n  - Return:\n    <details>\n    <summary> Sample </summary>\n\n    ```python\n    {\n      \"date\": \"2020-10-24\",\n      \"stadium\": 14,\n      \"race\": 1,\n      \"result\":[\n          {\n              \"rank\":1,\n              \"boat\":1,\n              \"name\":\"WHO1\",\n              \"racerid\":9999,\n              \"time\":\"1'50\\\"0\"\n          },\n          ...,\n          {\n              \"rank\":6,\n              \"boat\":2,\n              \"name\":\"WHO6\",\n              \"racerid\":8888,\n              \"time\":\"\"\n          }\n      ],\n      \"kimarite\":\"\u9003\u3052\",\n      \"start_information\":{\n          \"course1\":{\n              \"boat\":1,\n              \"ST\":0.05\n          },\n          ...,\n          \"course6\":{\n              \"boat\":6,\n              \"ST\":0.11\n          }\n      },\n      \"payoff\":{\n          \"trifecta\":{\n              \"result\":\"1-5-6\",\n              \"payoff\":12345,\n              \"popularity\":34\n          },\n          ...,\n          \"quinella_place\":[\n              {\n                  \"result\":\"1=5\",\n                  \"payoff\":220,\n                  \"popularity\":3\n              },\n              ...\n          ],\n          ...,\n      },\n      \"weather_information\":{\n          \"direction\":16,\n          \"weather\":\"\u6674\",\n          \"temperature\":17.0,\n          \"wind_direction\":6,\n          \"wind_speed\":5,\n          \"water_temperature\":21.0,\n          \"wave_height\":5\n      },\n      \"return\":[],\n      \"note\":[]\n    }\n    ```\n\n    </details>\n\nThese functions return `dict` object.\n\n#### Operations\n\n- To deposit money for betting (Unit: 1,000 yen):\n  - API\n    - `PyJPBoatrace().deposit(num_of_thousands_yen: int) -> None`\n    - `PyJPBoatrace().Deposit.do(num_of_thousands_yen: int) -> None`\n  - Return:\n    - Nothing\n- To get the limit of betting amount, that is, your current deposit:\n  - API\n    - `PyJPBoatrace().get_bet_limit() -> int`\n    - `PyJPBoatrace().BettingLimitCheck.do() -> int`\n  - Return:\n    - `int`: the amount of deposit\n- To withdraw your current deposit:\n\n  - API:\n\n    - `PyJPBoatrace().withdraw() -> None`\n    - `PyJPBoatrace().Widthdraw.do() -> None`\n\n  - Return:\n    - Nothing\n\n- To bet some tickets.\n\n  - API:\n\n    - ```python\n      PyJPBoatrace().bet(\n        stadium:int,\n        race:int,\n        trifecta_betting_dict: Dict[str, int],\n        trio_betting_dict: Dict[str, int],\n        exacta_betting_dict: Dict[str, int],\n        quinela_betting_dict: Dict[str, int],\n        quinellaplace_betting_dict: Dict[str, int],\n        win_betting_dict: Dict[str, int],\n        placeshow_betting_dict: Dict[str, int],\n      ) -> bool\n      ```\n    - ```python\n      PyJPBoatrace().Bet.do(\n        stadium:int,\n        race:int,\n        trifecta_betting_dict: Dict[str, int],\n        trio_betting_dict: Dict[str, int],\n        exacta_betting_dict: Dict[str, int],\n        quinela_betting_dict: Dict[str, int],\n        quinellaplace_betting_dict: Dict[str, int],\n        win_betting_dict: Dict[str, int],\n        placeshow_betting_dict: Dict[str, int],\n      ) -> bool\n      ```\n\n  - Each dictionary consits of pairs of winning numbers and betting amount, e.g., `{'1-2-3':100}` for trifecta_betting_dict\n\nIMPORTANT NOTE: you must give a driver other than `HTTPGetDriver` to use above actions.\n\n### Demo\n\n#### Demo 1 : Getting odds data\n\nThe following example is useful.\nSuppose that you want get the odds of trifecta of 4th race in stadium \"\u6850\u751f\" on 2020/12/02 and dump the result into `data.json`.\n\n```python\nfrom datetime import date\nimport json\nfrom pyjpboatrace import PyJPBoatrace\n\n# initialize\nboatrace_tools = PyJPBoatrace()\n\n# get data\ndic = boatrace_tools.get_odds_trifecta(d=date(2020,12,2), stadium=1, race=4)\n\n# dump data\nwith open('data.json', 'w', encoding='utf-8') as f:\n    json.dump(dic, f, ensure_ascii=False)\n\n# close (you can use 'with' statement)\nboatrace_tools.close()\n```\n\nYou can get many kinds of data as this example.\n\n#### Demo 2 : Betting\n\nSuppose it is 2020/12/02 and you want to bet 200 yen on trifecta 1-3-4 and 100 yen on trio 1=3=4 in the 2nd race in stadium \"\u6850\u751f\" on 2020/12/02. NOTE: you need google chrome in the following example.\n\n```python\nfrom datetime import date\nfrom pyjpboatrace import PyJPBoatrace\nfrom pyjpboatrace.drivers import create_chrome_driver\nfrom pyjpboatrace.const import STADIUMS_MAP\nfrom pyjpboatrace.user_information import UserInformation\n\n# initialize\nuser = UserInformation(\n    userid='YOUR_USER_ID',\n    pin='YOUR_PIN',\n    auth_pass='YOUR_AUTHENTIFICATION_PASSWORD',\n    vote_pass='YOUR_BETTING_PASSWORD',\n)\nboatrace_tools = PyJPBoatrace(\n    driver=create_chrome_driver(),\n    user_information=user\n)\n\n# deposit 1,000 yen\nboatrace_tools.deposit(1)\n\n# bet\nstadium = {s:i for i,s in STADIUMS_MAP}.get(\"\u6850\u751f\")\nrace = 2\nboatrace_tools.bet(\n    stadium=stadium,\n    race=race,\n    trifecta_betting_dict={'1-3-4':200},\n    trio_betting_dict={'1=3=4':100}\n)\n\n# waiting for the race result ...\n\n# withdraw\nboatrace_tools.withdraw()\n\n# close (you can use 'with' statement)\nboatrace_tools.close()\n```\n\n### NOTE\n\nThe map between integers and stadiums is given by `STADIUMS_MAP` in `pyjpboatrace.const`.\n\n## Contribution Guide\n\n### Requirement\n\n- Python >= 3.7\n- Pipenv (You can install pipenv by `pip install pipenv`)\n- Chrome\n- Firefox\n- bash\n- curl\n\n### Issues\n\n- For any bugs, use [BUG REPORT](https://github.com/hmasdev/pyjpboatrace/issues/new?assignees=&labels=bug&template=bug_report.md&title=%5BBUG%5D) to create an issue.\n\n- For any enhancement, use [FEATURE REQUEST](https://github.com/hmasdev/pyjpboatrace/issues/new?assignees=&labels=enhancement&template=feature_request.md&title=) to create an issue.\n\n- For other topics, create an issue with a clear and concise description.\n\n### Pull Request\n\n1. Fork ([https://github.com/hmasdev/pyjpboatrace/fork](https://github.com/hmasdev/pyjpboatrace/fork));\n2. Create your feature branch (`git checkout -b feautre/xxxx`);\n3. Test codes according to [Test Subsection](#HowToTestAnchor);\n4. Commit your changes (`git commit -am 'Add xxxx feature`);\n5. Push to the branch (`git push origin feature/xxxx`);\n6. Create new Pull Request\n\n### Test\n\n<div id=\"HowToTestAnchor\"></div>\n\nYou can do unit tests and integration tests as follows:\n\n```bash\n$ ./download_html_for_test.sh  # Only 1 time\n$ pipenv run pytest -m \"not integrate and not spending_money\" # unit tests\n$ pipenv run pytest  # unit tests and integration tests\n```\n\n`pipenv run pytest` does not test depositing, withdrawing or betting.\nIf you want to test them, make `.secrets.json` at first:\n\n```json\n{\n  \"userid\": \"YOUR_USER_ID\",\n  \"pin\": \"YOUR_PIN\",\n  \"auth_pass\": \"YOUR_AUTHENTIFICATION_PASSWORD\",\n  \"vote_pass\": \"YOUR_BETTING_PASSWORD\"\n}\n```\n\nThen, run\n\n```bash\n$ pipenv run pytest -m \"spending_money\"\n```\n\nWARNING: Tests with `spending_money` spend 700 yen.\n\n## LICENSE\n\n[MIT](https://github.com/hmasdev/pyjpboatrace/tree/main/LICENSE)\n\n## Authors\n\n[hmasdev](https://github.com/hmasdev)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/hmasdev/pyjpboatrace",
            "keywords": "kyotei,boatrace,data analysis",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyjpboatrace",
            "package_url": "https://pypi.org/project/pyjpboatrace/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyjpboatrace/",
            "project_urls": {
                "Homepage": "http://github.com/hmasdev/pyjpboatrace"
            },
            "release_url": "https://pypi.org/project/pyjpboatrace/0.2.2/",
            "requires_dist": [
                "beautifulsoup4 (>=4.9.3)",
                "requests (>=2.25.0)",
                "selenium (>=3.141.0)",
                "webdriver-manager (==3.2.2)",
                "msedge-selenium-tools"
            ],
            "requires_python": "",
            "summary": "PyJPBoatrace: Python-based Japanese boatrace tools",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13128183,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f174710ec356406d299eaf0468e55d1e",
                    "sha256": "5c79e3951cccaed76ca2c47d0bf49a845a83e1481904dfeef34aa8cb16ae3cda"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f174710ec356406d299eaf0468e55d1e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 43479,
                "upload_time": "2022-03-09T17:47:39",
                "upload_time_iso_8601": "2022-03-09T17:47:39.755766Z",
                "url": "https://files.pythonhosted.org/packages/d8/79/f731a4422c0f0ea1c8e4c991a0736ae61dfcb314a4b7f190e4ecea608512/pyjpboatrace-0.2.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ac8a4d956f018bac4b219bc846112bb8",
                    "sha256": "b29a6efeb923a9b03d2239b396b6801507f22196a1c3d7f0f565891ef0bb472e"
                },
                "downloads": -1,
                "filename": "pyjpboatrace-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "ac8a4d956f018bac4b219bc846112bb8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 29816,
                "upload_time": "2022-03-09T17:47:41",
                "upload_time_iso_8601": "2022-03-09T17:47:41.602110Z",
                "url": "https://files.pythonhosted.org/packages/61/a2/18f244b393f8d6cf8981ac1171e1457295f069f966c325a1ce6c1058d5ee/pyjpboatrace-0.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}