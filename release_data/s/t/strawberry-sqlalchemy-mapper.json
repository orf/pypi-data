{
    "0.1.0": {
        "info": {
            "author": "Expedock",
            "author_email": "rui@expedock.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "# strawberry-sqlalchemy-mapper\n\n\nStrawberry-sqlalchemy-mapper is the simplest way to implement autogenerated strawberry types for columns and relationships in SQLAlchemy models.\n\n\n- Instead of manually listing every column and relationship in a SQLAlchemy model, strawberry-sqlalchemy-mapper\nlets you decorate a class declaration and it will automatically generate the necessary strawberry fields\nfor all columns and relationships in the given model.\n\n- Native support for most of SQLAlchemy's most common types.\n\n- Extensible to arbitrary custom SQLAlchemy types.\n\n- Support for SQLAlchemy >=1.4.x\n\n- Lightweight and fast.\n\n## Getting Started\n\nFirst, define your sqlalchemy model:\n\n```python\n# models.py\nfrom sqlalchemy import Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\n\nBase = declarative_base()\n\nclass Employee(Base):\n    __tablename__ = 'employee'\n    id = Column(UUID, primary_key=True)\n    name = Column(String, nullable=False)\n```\n\nNext, decorate a type with `strawberry_sqlalchemy_mapper.type()`\nto register it as a strawberry type for the given SQLAlchemy model.\nThis will automatically add fields for the model's columns, relationships, association proxies,\nand hybrid properties. For example:\n\n```python\n# elsewhere\nstrawberry_sqlalchemy_mapper = StrawberrySQLAlchemyMapper()\n@strawberry_sqlalchemy_mapper.type(models.Employee)\nclass Employee:\n    pass\n```\n\nSeveral examples to help you get started are provided in the `examples` directory.\n\n## Limitations\n\nNatively supports the following SQLAlchemy types:\n\n```python\nInteger: int,\nFloat: float,\nBigInteger: int,\nNumeric: Decimal,\nDateTime: datetime,\nDate: date,\nTime: time,\nString: str,\nText: str,\nBoolean: bool,\nUnicode: str,\nUnicodeText: str,\nSmallInteger: int,\nSQLAlchemyUUID: uuid.UUID,\nVARCHAR: str,\nARRAY[T]: List[T] # PostgreSQL array\nEnum: (the Python enum it is mapped to, which should be @strawberry.enum-decorated)\n```\n\nAdditional types can be supported by passing `extra_sqlalchemy_type_to_strawberry_type_map`,\nalthough support for `TypeDecorator` types is untested.\n\nAssociation proxies are expected to be of the form `association_proxy('relationship1', 'relationship2')`,\ni.e., both properties are expected to be relationships.\n\n## Contributing\n\nWe encourage you to contribute to strawberry-sqlalchemy-mapper! Any contributions you make are greatly appreciated.\n\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. Don't forget to give the project a star! Thanks again!\n\n1. Fork the Project\n2. Create your Feature Branch (git checkout -b feature)\n3. Commit your Changes (git commit -m 'Add some feature')\n4. Push to the Branch (git push origin feature)\n5. Open a Pull Request\n\n\n### Prerequisites\n\nThis project uses `pre-commit`_, please make sure to install it before making any\nchanges::\n\n    pip install pre-commit\n    cd strawberry-sqlalchemy-mapper\n    pre-commit install\n\nIt is a good idea to update the hooks to the latest version::\n\n    pre-commit autoupdate\n\nDon't forget to tell your contributors to also install and use pre-commit.\n\n### Installation\n\n```bash\npip install -r requirements.txt\n```\n\n### Test\n\n```bash\npytest\n```\n\n## \u2696\ufe0f LICENSE\n\nMIT \u00a9 [strawberry-sqlalchemy-mapper](LICENSE.txt)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/expedock/strawberry-sqlalchemy-mapper",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "strawberry-sqlalchemy-mapper",
            "package_url": "https://pypi.org/project/strawberry-sqlalchemy-mapper/",
            "platform": "any",
            "project_url": "https://pypi.org/project/strawberry-sqlalchemy-mapper/",
            "project_urls": {
                "Download": "https://pypi.org/project/strawberry-sqlalchemy-mapper/#files",
                "Homepage": "https://github.com/expedock/strawberry-sqlalchemy-mapper",
                "Source": "https://github.com/expedock/strawberry-sqlalchemy-mapper/"
            },
            "release_url": "https://pypi.org/project/strawberry-sqlalchemy-mapper/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The simplest way to implement autogenerated strawberry types for columns and relationships in SQLAlchemy models",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13036634,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "61fa0cb0016a9ff3290c5032c1e1ea65",
                    "sha256": "cf35299a768f68235b5b5ff2e5158b5f1d8cb0c326ab0824d3194652580b9061"
                },
                "downloads": -1,
                "filename": "strawberry-sqlalchemy-mapper-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "61fa0cb0016a9ff3290c5032c1e1ea65",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13395,
                "upload_time": "2022-02-28T19:19:02",
                "upload_time_iso_8601": "2022-02-28T19:19:02.036277Z",
                "url": "https://files.pythonhosted.org/packages/b4/07/d2e3c5680c460bc237e360e3bd79f144f6a4360b0bee4ab4645ecca23621/strawberry-sqlalchemy-mapper-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}