{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "Joe Reed <greyskyy@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "Environment :: Plugins",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.12",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries :: Application Frameworks",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "# py-rebar\n\nAnother python console application skeleton.\n\n## Installing\n\n```bash\npip install py-rebar\n```\n\n## Framework workflow\n\nThe py-rebar application scaffold provides for a series of plugin points for business logic to be added.\n\n```mermaid\ngraph TD;\n\n    f_init(Framework init)\n    f_argparse(argparse.ArgumentParser.parse_args)\n    f_configlogging(Config logging)\n    f_shut(Framework shutdown)\n\n    p_init[/\"Init plugins #quot;pyrebar.preinit#quot;\"/]\n    p_args[/\"setup_args#40;parser#41; #quot;pyrebar.app#quot;\"/]\n    p_postinit[/\"Post init #40;args#41; #quot;pyrebar.postinit#quot;\"/]\n    p_exec[/\"execute#40;args#41; #quot;pyrebar.app#quot;\"/]\n    p_shut[/\"shutdown#40;#41; #quot;pyrebar.shutdown#quot;\"/]\n\n    f_init --> p_init\n    p_init --Foreach pre-init-->p_init\n    p_init --> p_args\n    p_args --Foreach app-->p_args\n    p_args --> f_argparse\n    f_argparse --> f_configlogging\n    f_configlogging --> p_postinit\n    p_postinit --Foreach post-init-->p_postinit\n    p_postinit --> p_exec\n    p_exec --> p_shut\n    p_shut --Foreach post-app shutdown--> p_shut\n    p_shut --> f_shut\n```\n\n## EntryPoints\n\nPy-rebar provides several plugin points to add the business logic to this framework.  This is done through python's [entrypoint plugin architecture](https://setuptools.pypa.io/en/latest/userguide/entry_point.html#entry-points-for-plugins). A boostrap mechanism is available for scripts being run directly, rather than relying on installed modules.\n\n### pyrebar.pre_init\n\nApplication initializers can be added an entrypoint with the `pyrebar.pre_init` group. These entrypoints must be a function that takes an optional `parser=` keyword argument. The provided parser is the root command line parser.\n\nIt is important to note that all installed `pre_init` entrypoint functions will be called prior to continuing. Any exceptions raised will cause the application to terminate.\n\n### pyrebar.post_init\n\nApplication initializers added to the `pyrebar.post_init` group will be called after the command line is parsed and logging is configured, but before the main application is execution. These entrypoints must be a function that takes an optional `args=` parameter. The provided value will be an `argparse.Namespace` object holding the output of `argparse.ArgumentParser.parse_args()` function.\n\nIt is important to note that all installed `pre_init` entrypoint functions will be called prior to continuing. Any exceptions raised will trigger shutdown processing and cause the application to terminate.\n\n### pyrebar.app\n\nApplication entrypoints must point to a python module. These modules contain one or more of the following specially-named variables and functions described below.\n\nIf multiple applications are found, they are registered as subcommands using the `EntryPoint.name` property.\n\nVariables (all are optional):\n\n* `SUBCOMMAND: str` - If multiple apps are found, this overrides the `EntryPoint.name` as the subcommand name.\n* `ALIASES: list[str]` - If multiple apps are found, this list provides the set of command aliases.\n* `LOGGER_NAME: str` - The application logger name. If not specified, the module name is used.\n\nFunctions:\n\n* `config_args(parser:argparse.ArgumentParser)` - *[optional]* If specified, this function is called with the command line argument parser. If only one application is found, this will be the base parser. If multiple applications are found, this will be the subparser.\n* `execute(args:argparse.Namespace=None) -> int` - The main application execution function. Called with the parsed command line arguments. The return value is passed to a `sys.exit()` call and thus is passed back to the OS.\n\n### pyrebar.shutdown\n\nApplication shutdown hooks can be added to the `pyrebar.shutdown` group.  These entrypoints must point to a function that will be called without arguments. \n\nThese shutdown hooks are called before the application exits. Note that these hooks will be called even when an exception is raised out of the `pre_init` or `post_init` hooks.  Any shutdown hook closing resources opened during an init phase must therefore handle the case the opening failed or was never called.\n\n## Bootstrapping\n\nFor applications run directly, rather than built + installed, additional `EntryPoint` instances can be explictly added in a `__main__.py` using the `pyrebar.Plugins.add_entrypoint()` method.\n\n## Examples\n\nSee the examples in the `src/apps` directory.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "MIT License Copyright (c) 2022 Joe Reed Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
            "maintainer": "",
            "maintainer_email": "",
            "name": "py-rebar",
            "package_url": "https://pypi.org/project/py-rebar/",
            "platform": null,
            "project_url": "https://pypi.org/project/py-rebar/",
            "project_urls": {
                "homepage": "https://github.com/greyskyy/py-rebar",
                "repository": "https://github.com/greyskyy/py-rebar"
            },
            "release_url": "https://pypi.org/project/py-rebar/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.9",
            "summary": "Application framework for console-based python applications.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15503554,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3acae6c0f711d059065bffedeceb9d41",
                    "sha256": "d564cd25feb89b1fd55c630bdcbcb70d8c413d3efdc2a4cc98c7ce139ad4a70a"
                },
                "downloads": -1,
                "filename": "py_rebar-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3acae6c0f711d059065bffedeceb9d41",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 10520,
                "upload_time": "2022-10-23T21:26:12",
                "upload_time_iso_8601": "2022-10-23T21:26:12.333168Z",
                "url": "https://files.pythonhosted.org/packages/a8/3c/ee73af3abcd9b7f9a280cd7d6cbe97d35919ff7ea4f8a07ab4a4e7c0d875/py_rebar-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b5591f18d6ad91b85335cf520c6784c",
                    "sha256": "f93bdf0ddadae413aff5cd4b5dc7c542c9101bfda2682533a2ac2d5d79dd81ad"
                },
                "downloads": -1,
                "filename": "py-rebar-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0b5591f18d6ad91b85335cf520c6784c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 11413,
                "upload_time": "2022-10-23T21:26:14",
                "upload_time_iso_8601": "2022-10-23T21:26:14.826574Z",
                "url": "https://files.pythonhosted.org/packages/c9/e7/43072337fb39ecc2e16555ab35104c51c98e15fe16f22000981c12ca6d40/py-rebar-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}