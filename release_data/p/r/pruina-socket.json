{
    "0.0.1": {
        "info": {
            "author": "Aminor_z",
            "author_email": "aminor_z@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aminor-z/pruina-socket-python",
            "keywords": "Pruina",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Pruina-Socket",
            "package_url": "https://pypi.org/project/Pruina-Socket/",
            "platform": "",
            "project_url": "https://pypi.org/project/Pruina-Socket/",
            "project_urls": {
                "Homepage": "https://github.com/aminor-z/pruina-socket-python"
            },
            "release_url": "https://pypi.org/project/Pruina-Socket/0.0.1/",
            "requires_dist": [
                "tqdm",
                "protobuf"
            ],
            "requires_python": ">=3.6",
            "summary": "Pruina-Socket",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12802866,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7048e8d9a9dbd0b23e0f3282cef4a4f2",
                    "sha256": "972448d01602a8b160dd0be5ebd5d6e3aee40a56aa1c3ba1b3cd2a11934aa59e"
                },
                "downloads": -1,
                "filename": "Pruina_Socket-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7048e8d9a9dbd0b23e0f3282cef4a4f2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23870,
                "upload_time": "2021-11-08T11:00:14",
                "upload_time_iso_8601": "2021-11-08T11:00:14.112698Z",
                "url": "https://files.pythonhosted.org/packages/c5/c1/4d7305f873cd27fa0f6ce38b099db1a609f02919a8a988d7c04a73a74bac/Pruina_Socket-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c7b360c4cf10f0e0fa20eab41e3d4819",
                    "sha256": "e783dc2c2256def0f0ca3d212434f89aa4c5b4ebda1521f13130d539bf82a792"
                },
                "downloads": -1,
                "filename": "Pruina-Socket-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c7b360c4cf10f0e0fa20eab41e3d4819",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 22225,
                "upload_time": "2021-11-08T11:00:16",
                "upload_time_iso_8601": "2021-11-08T11:00:16.145220Z",
                "url": "https://files.pythonhosted.org/packages/b2/0b/01ee215e5f5722d3fe23125ae776d7fe71a202905244ee18375d0202176d/Pruina-Socket-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Aminor_z",
            "author_email": "aminor_z@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aminor-z/pruina-socket-python",
            "keywords": "Pruina",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Pruina-Socket",
            "package_url": "https://pypi.org/project/Pruina-Socket/",
            "platform": "",
            "project_url": "https://pypi.org/project/Pruina-Socket/",
            "project_urls": {
                "Homepage": "https://github.com/aminor-z/pruina-socket-python"
            },
            "release_url": "https://pypi.org/project/Pruina-Socket/0.0.2/",
            "requires_dist": [
                "tqdm",
                "protobuf"
            ],
            "requires_python": ">=3.6",
            "summary": "Pruina-Socket",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12802866,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "44bae398f478c256e6edb68bad43f866",
                    "sha256": "f6df513474ad7f9b7baeba4de2ef678fb4d2d13b70ea85a3c0fe71b93a4e5bdb"
                },
                "downloads": -1,
                "filename": "Pruina_Socket-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "44bae398f478c256e6edb68bad43f866",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23939,
                "upload_time": "2022-01-09T13:37:15",
                "upload_time_iso_8601": "2022-01-09T13:37:15.407624Z",
                "url": "https://files.pythonhosted.org/packages/d4/af/9c5165a225d94739ba86e5a3db4333a721db42b09c188cb6956884e0acca/Pruina_Socket-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2d74b2ee962225e63891502a700a71dc",
                    "sha256": "c2a2c526c775be9ebcde535f202190f9d9830b25b7f64472e714106c8a81938b"
                },
                "downloads": -1,
                "filename": "Pruina-Socket-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "2d74b2ee962225e63891502a700a71dc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 21726,
                "upload_time": "2022-01-09T13:37:17",
                "upload_time_iso_8601": "2022-01-09T13:37:17.341063Z",
                "url": "https://files.pythonhosted.org/packages/33/69/7437918ff4da58bbe035a0a0f6732af30e1e39a7708e53c03ea6063f186d/Pruina-Socket-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Aminor_z",
            "author_email": "aminor_z@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "[![Pruina-Socket-Python](https://socialify.git.ci/Aminor-z/Pruina-Socket-Python/image?forks=1&issues=1&language=1&logo=https%3A%2F%2Fraw.githubusercontent.com%2FAminor-z%2FPruina-Socket-Python%2Fmain%2Flogo.svg&name=1&pulls=1&stargazers=1&theme=Dark)](https://github.com/Aminor-z/Pruina-Socket-Python)\n\n# Pruina-Socket\n**Pruina-Socket**\u662f\u4e00\u4e2a\u7528\u4e8e\u5feb\u901f\u5f00\u53d1\u7684TCP Socket\u7ec4\u4ef6\uff0c\u5305\u542b\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef\u7b49\u5185\u5bb9\u3002\n# Pruina-Socket-Python\n\u5b89\u88c5\uff1a\n```cmd\npip install pruina-socket\n```\n\u901a\u8fc7\u4ee5\u4e0b\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u5373\u53ef\u542f\u52a8\u5177\u6709\u54cd\u5e94\u529f\u80fd\u7684`Pruina-Socket`\u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\uff1a\n\n```python\nfrom pruina.socket.server import PruinaSocketServer\nfrom pruina.socket.client import PruinaSocketClient\n\n\n# \u670d\u52a1\u7aef\u54cd\u5e94\u51fd\u6570\ndef server_response(word, handler= None, **kwargs):\n    print(f\"{handler.server_name}: get '{word.decode()}'\")\n    handler.send(\"server response\", word)\n\n\n# \u5ba2\u6237\u7aef\u54cd\u5e94\u51fd\u6570\ndef client_response(word, handler: PruinaSocketClient = None, **kwargs):\n    decoded_word = word.decode()\n    print(f\"{handler.name}: get '{decoded_word}'\")\n\n\n# \u670d\u52a1\u7aef\nserver = PruinaSocketServer()\nserver.hooks.add_hook(\"client msg\", server_response)\nserver.serve_forever(new_thread=True)  # new_thread=False\u65f6\uff0c\u5c06\u963b\u585e\n\n# \u5ba2\u6237\u7aef\nclient = PruinaSocketClient()\nclient.hooks.add_hook(\"server response\", client_response)\nclient.connect()\nclient.send(\"client msg\", b\"hello world!\")\n\n# \u6682\u65f6\u963b\u6b62\u9000\u51fa\nimport time\n\ntime.sleep(1)\n```\n\n\u4e5f\u53ef\u901a\u8fc7\u4ee5\u4e0b\u7b80\u5355\u7684\u4ee3\u7801\uff0c\u5373\u53ef\u542f\u52a8\u590d\u6742\u7684\u670d\u52a1\u7aef\uff08\u4ee5torch\u6a21\u578b\u670d\u52a1\u4e3a\u4f8b\uff09\uff1a  \n1. \u6a21\u578b\u914d\u7f6e\n\n    ``` python\n    # \u6a21\u578b\u914d\u7f6e\n    import torch.nn as nn\n    import os\n    import torch\n\n\n    class Model(nn.Module):\n        def __init__(self):\n            super().__init__()\n            self.linear = nn.Linear(1, 1)\n\n        def forward(self, x):\n            return self.linear(x)\n\n\n    # \u6a21\u578b\u5b58\u50a8\u8def\u5f84\uff0c\u4e0d\u5b58\u5728\u81ea\u52a8\u751f\u6210\n    model_path = 'resources/example.pt'\n    if not os.path.exists('resources/example.pt'):\n        torch.save(Model(), model_path)\n    ```\n\n2. \u670d\u52a1\u7aef\u914d\u7f6e\u548c\u542f\u52a8\n    \n    ``` python\n    # \u54cd\u5e94\u51fd\u6570\n    from pruina.socket.handler.MessageHookRequestHandler import MessageHookRequestHandler\n    from pruina.socket.server import PruinaSocketServer\n\n\n    def predict(d: bytes, handler: MessageHookRequestHandler = None, **kwargs):\n        model = handler.resources.get(\"torch_model\")\n        x = torch.tensor([float(d.decode())], dtype=torch.float32)\n        y = model(x)\n        print(f'Torch model:\\n\\t{x.item():.4f}->{y.item():.4f}')\n\n    server = PruinaSocketServer()\n    server.resources.add_lazy_resource(\"torch_model\", torch.load, \"resources/example.pt\")\n    server.hooks.add_hook(\"predict\", predict)\n    server.serve_forever()\n    ```\n\n3. \u4f7f\u7528\u5ba2\u6237\u7aef\u6d4b\u8bd5\uff08\u6b64\u5904\u4f7f\u7528\u53e6\u4e00\u8fdb\u7a0b\uff09\n\n    ``` python\n    # \u54cd\u5e94\u51fd\u6570\n    from pruina.socket.client import PruinaSocketClient\n\n    client = PruinaSocketClient()\n    client.connect()\n    client.send(\"predict\", b\"1.23\")\n    ```\n\n\n# \u4f7f\u7528\u6982\u89c8\n## \u670d\u52a1\u7aef\n* **PruinaSocketServer**  \n\u4ee5hook\u5f62\u5f0f\u8fd0\u884c\u7684SocketServer\n\n> **PruinaSocketServer \u53ef\u9009\u53c2\u6570**  \n> * `host`: str = socket.gethostname() # \u670d\u52a1\u5730\u5740  \n> * `port`: int = 50003 # \u7aef\u53e3  \n> * `name`: str = 'server' # \u670d\u52a1\u540d\u79f0  \n> * `daemon_threads`: bool = True # daemon\u8bbe\u7f6e  \n> \n> **PruinaSocketServer \u5c5e\u6027**  \n> * `name`: str = name # \u670d\u52a1\u540d\u79f0\n> * `server`: ThreadingTCPServer = ThreadingTCPServer((host, port), MessageHookRequestHandler) # ThreadingTCPServer\n> * `properties`: Properties = Properties() # Properties\n> * `local_properties`: Properties = Properties() # Local Properties\n> * `resources`: Resources = Resources() # Resources\n> * `local_resources`: Resources = Resources() # Local Resources\n> * `hooks`: CachedMsgHooks = CachedMsgHooks() # CachedMsgHooks\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom pruina.socket.handler.PruinaHandler import PruinaHandler\nfrom pruina.socket.server import PruinaSocketServer\n\n\n# \u670d\u52a1\u7aef\u54cd\u5e94\u51fd\u6570\ndef server_response(word, handler: PruinaHandler = None, **kwargs):\n   decoded_word = word.decode()\n   print(f\"{handler.server_name}: get '{decoded_word}'\")\n   handler.send(\"server response\", word)\n\n\n# \u670d\u52a1\u7aef\nserver = PruinaSocketServer()\nserver.hooks.add_hook(\"client msg\", server_response)\nserver.serve_forever()\n```\n\n## \u5ba2\u6237\u7aef\n* **PruinaSocketClient**  \n\u4ee5hook\u5f62\u5f0f\u8fd0\u884c\u7684SocketClient\n\n> **PruinaSocketClient \u53ef\u9009\u53c2\u6570**  \n> * `host`: str = socket.gethostbyname(socket.gethostname()) # \u670d\u52a1\u5730\u5740\n> * `port`: int = 50003 # \u7aef\u53e3\n> * `name`: str = 'server' # \u670d\u52a1\u540d\u79f0\n> * `max_retry`: int = 3 # \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n> \n> **PruinaSocketClient \u5c5e\u6027**  \n> * `name`: str = name # \u670d\u52a1\u540d\u79f0\n> * `host`: str = socket.gethostbyname(socket.gethostname()) # \u670d\u52a1\u5730\u5740  \n> * `port`: int = 50003 # \u7aef\u53e3  \n> * `client`: socket.socket(socket.AF_INET, socket.SOCK_STREAM) # socket.socket\n> * `properties`: Properties = Properties() # Properties\n> * `resources`: Resources = Resources() # Resources\n> * `hooks`: CachedMsgHooks = CachedMsgHooks() # CachedMsgHooks\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom pruina.socket.client import PruinaSocketClient\n\n\n# \u5ba2\u6237\u7aef\u54cd\u5e94\u51fd\u6570\ndef client_response(word, handler: PruinaSocketClient = None, **kwargs):\n    decoded_word = word.decode()\n    print(f\"{handler.name}: get '{decoded_word}'\")\n\n\n# \u5ba2\u6237\u7aef\nclient = PruinaSocketClient()\nclient.hooks.add_hook(\"server response\", client_response)\nclient.connect()\nclient.send(\"client msg\", b\"hello world!\")\n```\n\n## \u7ec4\u4ef6\n* **Hooks**  \n\u9ed8\u8ba4\u4f7f\u7528`CachedMsgHooks`\u3002  \n`CachedMsgHooks`\u662f\u62e5\u6709\u4e00\u7ea7\u7f13\u5b58\u7684Hook\u6620\u5c04\u96c6\uff0c\u5b9e\u73b0\u5c06\u6d88\u606f\u6807\u8bc6\u7b26\u4e0e\u51fd\u6570\u7684\u7ed1\u5b9a\u3002\n> **CachedMsgHooks \u53c2\u6570**  \n> * `parent`: MsgHooks = None \u6307\u5411\u53e6\u4e00\u4e2aCachedMsgHooks\u65f6\uff0c\u4f1a\u8fdb\u884cdeepcopy\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom pruina.socket.server import PruinaSocketServer\n\n\n# hook\u51fd\u6570\ndef server_response(word, handler=None, **kwargs):\n    decoded_word = word.decode()\n    print(f\"{handler.server_name}: get '{decoded_word}'\")\n    handler.send(\"server response\", word)\n\n\nserver = PruinaSocketServer()\nserver.hooks.add_hook(\"client msg\", server_response)\nserver.serve_forever()\n\n```\n\n* **Properties**  \n`Properties`\u7528\u4e8e\u4f20\u5165\u5c0f\u578b\u5bf9\u8c61\uff0c\u5982int\uff0cstr\u7b49\u3002  \nPruina\u7684server\u4e2d\uff0c\u6709`properties`\u548c`local_properties`\u4e4b\u5206\u3002\n> * **properties**  \n> \u5728\u6574\u4e2aserver\u548c\u6240\u6709handler\u4e2d\uff0c\u53ea\u5b58\u5728\u552f\u4e00\u7684`properties`\n>\n> * **local_properties**  \n> \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5efa\u7acb\u8fde\u63a5\u7684handler\uff0c\u90fd\u6709\u552f\u4e00\u7684`Properties`\u3002\n> \u6bcf\u4e2ahandler\u4e2d\u7684`local_properties`\u90fd\u5c06\u4eceServer\u4e2d\u8bbe\u5b9a\u7684`local_properties`\u4e2ddeepcopy\u4e00\u4efd\uff0c\u4f5c\u4e3ahandler\u72ec\u7acb\u7684`local_properties`\u3002\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nfrom pruina.socket.server import PruinaSocketServer\n\nserver = PruinaSocketServer()\n\nserver.properties.set(\"var_int\", 1)\nserver.properties.set(\"var_str\", \"Hello World!\")\nserver.local_properties.set(\"var_list\", list())\nserver.local_properties.set(\"var_dict\", dict())\n\nserver.init()\nserver.serve_forever()\n```\n\n* Resources  \n`Resources`\u7528\u4e8e\u4f20\u5165\u5927\u578b\u8d44\u6e90\uff0c\u5982`torch.nn.model`\u7b49\u3002  \n`Resources`\u4e2d\u4fdd\u5b58\u7740`Resource`\u548c`LazyResource`\uff08\u89c1Resource & LazyResource\uff09  \nPruina\u7684server\u4e2d\uff0c\u6709`resources`\u548c`local_resources`\u4e4b\u5206\u3002\n> * **resources**  \n> \u5728\u6574\u4e2aserver\u548c\u6240\u6709handler\u4e2d\uff0c\u53ea\u5b58\u5728\u552f\u4e00\u7684`resources`\u3002  \n>\n> * **local_resources**  \n> \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5efa\u7acb\u8fde\u63a5\u7684handler\uff0c\u90fd\u6709\u552f\u4e00\u7684`local_resources`\u3002  \n> \u6bcf\u4e2ahandler\u4e2d\u7684`local_resources`\u90fd\u5c06\u4eceServer\u4e2d\u8bbe\u5b9a\u7684`local_resources`\u4e2ddeepcopy\u4e00\u4efd\uff0c\u4f5c\u4e3ahandler\u72ec\u7acb\u7684`local_resources`\u3002\n\n\u793a\u4f8b\u4ee3\u7801\u89c1Resource\u548cLazyResource\u90e8\u5206\u3002\n\n* Resource & LazyResource\n`Resource`\u548c`LazyResource`\u662f\u8d44\u6e90\u5b9e\u4f53\u3002  \n> * **Resource**  \n> \u8d44\u6e90\u5b9e\u4f53\uff0c\u4f20\u5165\u6784\u9020\u6570\u636e\u540e\uff0c\u5c06\u5728\u670d\u52a1\u5668\u542f\u52a8\u65f6\u52a0\u8f7d\u3002  \n> \n> * **LazyResource**  \n> \u8d44\u6e90\u5b9e\u4f53\uff0c\u4f20\u5165\u6784\u9020\u6570\u636e\u540e\uff0c\u5c06\u5728\u9996\u6b21`get()`\u65f6\u8fdb\u884c\u52a0\u8f7d\u3002\n\n\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```python\nimport os\n\nimport torch\nimport torch.nn as nn\n\nfrom pruina.socket.server import PruinaSocketServer\nfrom pruina.socket.handler.PruinaHandler import PruinaHandler\n\n\nclass Model(nn.Module):\n   def __init__(self):\n      super().__init__()\n      self.linear = nn.Linear(1, 1)\n\n   def forward(self, x):\n      return self.linear(x)\n\n\ndef predict(d: bytes, handler: PruinaHandler = None, **kwargs):\n   model = handler.resources.get(\"torch_model_1\")\n   x = torch.tensor([float(d.decode())], dtype=torch.float32)\n   y = model(x)\n   print(f'Torch model:\\n\\t{x.item():.4f}->{y.item():.4f}')\n\n\nmodel_path = 'resources/example.pt'\nif not os.path.exists('resources/example.pt'):\n   torch.save(Model(), model_path)\nserver = PruinaSocketServer()\n\nserver.resources.add_resource(\"torch_model_1\", torch.load, model_path)\nserver.resources.add_lazy_resource(\"torch_model_2\", torch.load, model_path)\nserver.local_resources.add_resource(\"torch_model_3\", torch.load, model_path)\nserver.local_resources.add_lazy_resource(\"torch_model_4\", torch.load, model_path)\n\nserver.hooks.add_hook(\"predict\", predict)\n\nserver.init()\nserver.serve_forever()\n```\n\n## Cython\n`Pruina-SocketServer`\u53ef\u901a\u8fc7`cypackage`\u76f4\u63a5\u8f6c\u5316\u4e3acython\u7248\u672c\u3002\n* \u5b89\u88c5`cypackage`\uff1a\n```cmd\npip install cypackage\n```\n* \u4f7f\u7528`cypackage`\u751f\u6210cython\u7248\u672c\u7684`Pruina-SocketServer`\n```cmd\ncypackage pruina-socket\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/aminor-z/pruina-socket-python",
            "keywords": "pruina socket protobuf server client hook multithreading",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Pruina-Socket",
            "package_url": "https://pypi.org/project/Pruina-Socket/",
            "platform": "",
            "project_url": "https://pypi.org/project/Pruina-Socket/",
            "project_urls": {
                "Homepage": "https://github.com/aminor-z/pruina-socket-python"
            },
            "release_url": "https://pypi.org/project/Pruina-Socket/0.0.5/",
            "requires_dist": [
                "tqdm",
                "protobuf"
            ],
            "requires_python": ">=3.6",
            "summary": "Pruina-Socket",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12802866,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "15e6cf6c3c2d8caeaac6abbf4df03ff2",
                    "sha256": "841e8d06b905483e6bbbba193d145ce64ecfbef74eb493e94525a1fe7dd33b6e"
                },
                "downloads": -1,
                "filename": "Pruina_Socket-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "15e6cf6c3c2d8caeaac6abbf4df03ff2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 24761,
                "upload_time": "2022-02-06T13:48:54",
                "upload_time_iso_8601": "2022-02-06T13:48:54.917660Z",
                "url": "https://files.pythonhosted.org/packages/28/1e/54f8a8e8b7cc7658f09900001d5ffcdd29437767502643422b71955ad004/Pruina_Socket-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9f2602ec917e764681c625c745d2f8d7",
                    "sha256": "15e25a1d7d1cb7da9935f19097650ace50f3c763f7e4e1a0753eed45b73416f4"
                },
                "downloads": -1,
                "filename": "Pruina-Socket-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "9f2602ec917e764681c625c745d2f8d7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 22269,
                "upload_time": "2022-02-06T13:48:56",
                "upload_time_iso_8601": "2022-02-06T13:48:56.649901Z",
                "url": "https://files.pythonhosted.org/packages/b5/79/cf95e0627f4adbb3f53b69ff0372abbfe8af077bd7bba0e970644ea11bf8/Pruina-Socket-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}