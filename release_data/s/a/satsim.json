{
    "0.12.0": {
        "info": {
            "author": "Alex Cabello",
            "author_email": "alexander.cabello@algoritics.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Natural Language :: English",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "SatSim\n======\n\nSatSim is a high fidelity space surveillance optical scene simulation environment built on top of TensorFlow to utilize the speed of CUDA GPUs. SatSim is capable of generating synthetic observation data for SatNet, a deep learning platform for satellite object detection, and can provide users with nearly limitless labeled data. SatSim allows for systematic changes in the synthetic data, such as object brightness and star drift rate. The synthetic data is useful for training deep learning models. The synthetic data can also be used for model evaluation, characterizing performance metrics such as false alarm rate and minimum detectable target (MDT).\n\n![SatSim Example](satsim.jpg)\n\nDocumentation\n-------------\n\n* [Installation](docs/installation.rst)\n* [Usage](docs/usage.rst)\n* [Developers](CONTRIBUTING.rst#getting-started)\n\nVersions\n--------\n\n* [History](HISTORY.md)\n\nHistory\n=======\n\n0.12.0\n---------------------\n\n* Add augmentation of SatNet `tf.data.Dataset`. This feature allows injecting synthetic targets into real data during training.\n* Add FFT convolution to `add_patch` sprite render and `scatter_shift` image augmenter for speed improvement.\n* Add cache last PSF FFT to `fftconv2p` for speed improvement for static PSFs.\n* Add two-body state vector as a trackable target.\n* Add moon and sun model and misc methods to calculate phase angle and target brightness.\n\n\n0.11.0\n---------------------\n\n* Add support to render star motion with FFT. Set sim option `star_render_mode` to `fft`.\n* Add option to sample photon noise multiple times. Set sim option `num_shot_noise_samples` to integer number.\n* Add support to render a satellite as a sprite. Set `model` option in obs.\n* Add support to load and augment sprite model with `$pipeline` operator.\n* Add cropped POPPY PSF generation.\n* Fix GreatCircle propagator tracking offset.\n* Fix runtime exception when site and track_mode are not defined.\n* Add TensorFlow 2.6 and update TensorFlow 2.2 and 2.4 Docker build file.\n\n\n0.10.0\n---------------------\n\n* Add support for piecewise rendering. Set sim option `render_size` to enable. For example, [256, 256].\n* Add `fixed` tracking mode with mount azimuth and elevation.\n* Add great circle propagator for targets.\n* Add in-memory image generation. See generator function `image_generator`.\n* Fix missing stars when FOV crosses zero degree RA.\n* Add curved targets using bezier curve raster. Enabled by default. Set sim option `num_target_samples` to 2 to enable linear raster.\n* Add LRU cache to star catalog reader.\n* Add option to turn off SNR calculation. Set sim option `calculate_snr` to false will render targets and stars together.\n* Handle unstable SGP4 TLEs.\n* Add TensorFlow 2.4 Docker build file.\n* Add debug output for pristine images of targets and stars.\n\n\n0.9.1\n---------------------\n\n* Calculate POPPY input wavefront resolution to avoid PSF aliasing.\n* Add support for additional FITS image data types (`int16`, `uint16`, `int32`, `uint32`, `float32`).\n* Add batch processing to `transform_and_add_counts` to support batch processing of stars.\n* Add `auto` option to calculate temporal oversample factor based on star velocities.\n* Add option to turn off serializing config data to pickle file (`save_pickle`).\n* Add option to turn off png movie output (`save_movie`).\n* Add `crop_and_resize` and `flip` image augmentation.\n* Set pixels with values beyond the pixel data type's capacity to the maximum value for that data type.\n* Add `lognormal` function to generate a distribution with a true target mean.\n* Fix issue with sidereal track.\n* Fix issue with fragment velocity not being randomly sampled.\n\n\n0.9.0\n---------------------\n\n* Add Physical Optics Propagation in Python (POPPY) PSF generation.\n* Add PSF augmentation with `$pipeline` replacement key.\n* Add `$function` and `$compound` replacement key.\n* Add ability to generate stray light from a `$function` replacement key.\n* Add built-in 2D polynomial image generator for stray light, `polygrid2d`.\n* Add built-in cosine fourth image generator for irradiance falloff, `radial_cos2d`.\n* Add built-in sine wave image generator for fix pattern noise, `sin2d`.\n* Add built-in image generator from AstroPy model, `astropy_model2d`.\n* Add built-in image augmentation, `scatter_shift` and `scatter_shift_polar`.\n* Add `$cache` replacement key (caching works for PSF and `$function`).\n\n\n0.8.3\n---------------------\n\n* Fix new Skyfield incompatibility.\n\n\n0.8.2\n---------------------\n\n* Prefix replacement keys with `$` in SatSim configuration file.\n* Add option to scale collision fragments by cosine of the exit angle.\n\n\n0.8.1\n---------------------\n\n* Add astrometric metadata into FITS header\n* Refactor WCS library\n* Add option to flip images about x or y axis\n* Add option to refresh stars for each frame\n* Add RPO from TLE generator\n\n\n0.8.0\n---------------------\n\n* Add two body propagator\n* Add object `create`, `delete`, and `update` events\n* Add collision generator\n* Add breakup generator\n* Add `ref` keyword to configuration\n* Add `key` keyword to `import` configuration\n* Refactor astrometric library\n\n\n0.7.2\n---------------------\n\n* Add option to specify star and obs velocity in polar coordinates\n\n\n0.7.1\n---------------------\n\n* Add option to turn off shot noise: `sim.enable_shot_noise: true`\n* Add option to turn off annotation boxes in image: `sim.show_obs_boxes: true`\n* Add option to specify velocity in arcseconds: `sim.velocity_units: arcsec`\n* Fix PNG output threading issue\n\n\n0.7.0\n---------------------\n\n* Add function pipelines to support variable target brightness\n\n\n0.6.1\n---------------------\n\n* Fix built-in generators not included in distribution\n* Add dockerfile\n\n\n0.6.0\n---------------------\n\n* Add configuration import.\n* Add configuration generator functions.\n* Add built-in generator for breakups.\n* Add built-in generator for CSOs.\n* Add built-in generator for loading TLE files.\n\n\n0.5.0\n---------------------\n\n* Runtime optimization.\n* Add parallel processing and multi-gpu utilization.\n* Add option to limit gpu memory usage.\n\n\n0.4.0\n---------------------\n\n* Add signal to noise calculation for target pixels.\n\n\n0.3.0\n---------------------\n\n* Add support for two line element set SGP4 satellite propagator.\n* Add support for rate and sidereal track from topocentric site.\n\n\n0.2.0\n---------------------\n\n* Add support for SSTR7 star catalog.\n\n\n0.1.1\n---------------------\n\n* Add target position to annotation file.\n* Updates to run GitLab CI.\n\n\n0.1.0\n---------------------\n\n* First release.\n\n\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.pacificds.com/machine-learning/satsim",
            "keywords": "satsim",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "satsim",
            "package_url": "https://pypi.org/project/satsim/",
            "platform": null,
            "project_url": "https://pypi.org/project/satsim/",
            "project_urls": {
                "Homepage": "https://gitlab.pacificds.com/machine-learning/satsim"
            },
            "release_url": "https://pypi.org/project/satsim/0.12.0/",
            "requires_dist": [
                "Click (~=7.0)",
                "Cython (~=0.29.0)",
                "scikit-image (~=0.17.2)",
                "numpy (<1.22,>=1.16.0)",
                "pandas (~=0.24)",
                "PyYAML (~=5.1)",
                "matplotlib (~=3.3.0)",
                "astropy (==3.2.3)",
                "astroquery (==0.4.1)",
                "apng (~=0.3.4)",
                "scipy (~=1.5.4)",
                "tensorflow (~=2.2)",
                "tensorflow-addons (~=0.11)",
                "skyfield (==1.26)",
                "sgp4 (==2.17)",
                "poliastro (==0.14.0)",
                "poppy (==0.9.1)",
                "diskcache (==5.0.3)",
                "pydash (~=4.9.0)",
                "asdf (==2.7.1)",
                "pygc (==1.1.0)",
                "numba (~=0.53.0)"
            ],
            "requires_python": "",
            "summary": "Satellite observation and scene simulator.",
            "version": "0.12.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13861520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "127ba8313c4d82a54fad56e22bca071a",
                    "sha256": "76ccead5d5f51890b1ce44888e4c7b93a76a294ca47c27f271e6f302fb7a8d28"
                },
                "downloads": -1,
                "filename": "satsim-0.12.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "127ba8313c4d82a54fad56e22bca071a",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 76997,
                "upload_time": "2022-05-19T06:59:50",
                "upload_time_iso_8601": "2022-05-19T06:59:50.669257Z",
                "url": "https://files.pythonhosted.org/packages/cf/78/a4e9953e77e6080592ce4ba734f8d925db88d9f24f570f2741f9348cce3e/satsim-0.12.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "68ed72a70e2304d192071393e75cfb2b",
                    "sha256": "30720fcf67adad90090aa5e203e164123ee656b0e9152a79e46679f1a61216c4"
                },
                "downloads": -1,
                "filename": "satsim-0.12.0.tar.gz",
                "has_sig": false,
                "md5_digest": "68ed72a70e2304d192071393e75cfb2b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 838285,
                "upload_time": "2022-05-19T06:59:54",
                "upload_time_iso_8601": "2022-05-19T06:59:54.734605Z",
                "url": "https://files.pythonhosted.org/packages/6f/33/0037b4efac1424caa50691d14fb55774279d6a2f1d7b491592df44bbc1db/satsim-0.12.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}