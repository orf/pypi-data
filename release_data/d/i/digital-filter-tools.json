{
    "0.3.9": {
        "info": {
            "author": "Fabrice Sinc\u00e8re",
            "author_email": "fabrice.sincere@ac-grenoble.fr",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: French",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://framagit.org/fsincere/digital-filter-tools",
            "keywords": "",
            "license": "",
            "maintainer": "Fabrice Sinc\u00e8re",
            "maintainer_email": "fabrice.sincere@ac-grenoble.fr",
            "name": "digital-filter-tools",
            "package_url": "https://pypi.org/project/digital-filter-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/digital-filter-tools/",
            "project_urls": {
                "Homepage": "https://framagit.org/fsincere/digital-filter-tools"
            },
            "release_url": "https://pypi.org/project/digital-filter-tools/0.3.9/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "ac-electricity"
            ],
            "requires_python": ">=3",
            "summary": "An educational module about digital filters",
            "version": "0.3.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13022952,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7984d3b7f767b113d2fd81c78d9b7a24",
                    "sha256": "2f336db7681d5a200b1e876e87532ac8fec4c6d0fd792a161fbdbc592714d6f1"
                },
                "downloads": -1,
                "filename": "digital_filter_tools-0.3.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7984d3b7f767b113d2fd81c78d9b7a24",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 26635,
                "upload_time": "2022-02-26T12:46:22",
                "upload_time_iso_8601": "2022-02-26T12:46:22.575964Z",
                "url": "https://files.pythonhosted.org/packages/f4/63/5953d7e5221b8ed2c78ed9c1da01febfdb859b28dee9348dddc3eb1c46d3/digital_filter_tools-0.3.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7b68150c164e99165adc69d90e995e7e",
                    "sha256": "c6da2c675d148ce15ba1761905c6b741b8058d76eedc63198206a2b12e502e09"
                },
                "downloads": -1,
                "filename": "digital-filter-tools-0.3.9.tar.gz",
                "has_sig": false,
                "md5_digest": "7b68150c164e99165adc69d90e995e7e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 26139,
                "upload_time": "2022-02-26T12:46:27",
                "upload_time_iso_8601": "2022-02-26T12:46:27.071725Z",
                "url": "https://files.pythonhosted.org/packages/05/43/627860a232261428a87dd1f0ad3984974b19299d4d89be9601e075689e23/digital-filter-tools-0.3.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.0": {
        "info": {
            "author": "Fabrice Sinc\u00e8re",
            "author_email": "fabrice.sincere@ac-grenoble.fr",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: French",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://framagit.org/fsincere/digital-filter-tools",
            "keywords": "",
            "license": "",
            "maintainer": "Fabrice Sinc\u00e8re",
            "maintainer_email": "fabrice.sincere@ac-grenoble.fr",
            "name": "digital-filter-tools",
            "package_url": "https://pypi.org/project/digital-filter-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/digital-filter-tools/",
            "project_urls": {
                "Homepage": "https://framagit.org/fsincere/digital-filter-tools"
            },
            "release_url": "https://pypi.org/project/digital-filter-tools/0.4.0/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "ac-electricity"
            ],
            "requires_python": ">=3",
            "summary": "An educational module about digital filters",
            "version": "0.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13022952,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "739f69fbd870c142b89b3e10364f3461",
                    "sha256": "be406f066e29eea781b53babf470431d99f189199e004a52f08676478f6702a3"
                },
                "downloads": -1,
                "filename": "digital_filter_tools-0.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "739f69fbd870c142b89b3e10364f3461",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 26841,
                "upload_time": "2022-02-26T13:57:26",
                "upload_time_iso_8601": "2022-02-26T13:57:26.286572Z",
                "url": "https://files.pythonhosted.org/packages/42/7c/c5b59dacdd49847f167dda32714f78b30137b79488fc1edf7b32048b9c81/digital_filter_tools-0.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "813b21892aa0538a4640b45b02266e28",
                    "sha256": "2433570fdb490a5173a1b3d25b5081b14dc82f370402a4cefbe4b3aab82cacb8"
                },
                "downloads": -1,
                "filename": "digital-filter-tools-0.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "813b21892aa0538a4640b45b02266e28",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 26346,
                "upload_time": "2022-02-26T13:57:28",
                "upload_time_iso_8601": "2022-02-26T13:57:28.318965Z",
                "url": "https://files.pythonhosted.org/packages/73/66/4e0c49d69f98eabd36e6ef3dbaddea736bea2cb79329520252d0728c58c4/digital-filter-tools-0.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.1": {
        "info": {
            "author": "Fabrice Sinc\u00e8re",
            "author_email": "fabrice.sincere@ac-grenoble.fr",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Natural Language :: French",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description": "## module digital_filter_tools\n\nOutils p\u00e9dagogiques pour l'\u00e9tude des filtres num\u00e9riques\n\n## Installation du module python digital_filter_tools\n\nFrom Pypi repository :  \n[https://pypi.org/project/digital-filter-tools](https://pypi.org/project/digital-filter-tools)\n\n```\npip install digital-filter-tools\n```\n\n## Fonctionnalit\u00e9s\n\nCe module propose des outils p\u00e9dagogiques pour l'\u00e9tude des filtres num\u00e9riques :\n\n- passage de l'\u00e9quation de r\u00e9currence aux transform\u00e9es en z\n- passage de l'\u00e9quation de r\u00e9currence \u00e0 la fonction de transfert en z\n- \u00e9criture de la fonction de transfert en z en fonction des p\u00f4les et z\u00e9ros\n- courbe des r\u00e9ponses impulsionnelle, indicielle, rampe, sinus\n- courbe de la r\u00e9ponse \u00e0 une s\u00e9quence d'entr\u00e9e personnalis\u00e9e\n- calcul des z\u00e9ros et des p\u00f4les de la fonction de transfert en z\n- diagramme des p\u00f4les et z\u00e9ros\n- \u00e9tude de la stabilit\u00e9\n- courbe de la r\u00e9ponse en fr\u00e9quence (gain et phase)\n\n## Rappels sur les filtres num\u00e9riques\n\n### Equation de r\u00e9currence\n\nx(n) d\u00e9signe l'entr\u00e9e et y(n) la sortie.\n\nL'\u00e9quation de r\u00e9currence (algorithme) d'un filtre num\u00e9rique a la forme g\u00e9n\u00e9rale suivante :\n\n```\na0*y(n) +a1*y(n-1) +a2*y(n-2) + ... = b0*x(n) + b1*x(n-1) + b2*x(n-2) + ...\n```\nou :\n```\na0*y(n) = b0*x(n) + b1*x(n-1) + b2*x(n-2) + ...\n          -a1*y(n-1) -a2*y(n-2) -a3*y(n-3) + ...\n```\n\nPar la suite, les param\u00e8tres a et b repr\u00e9sentent les listes des coefficients (r\u00e9els) de l'\u00e9quation de r\u00e9currence :  \n```\na = [a0, a1, a2, ...]  # avec a0 non nul  \nb = [b0, b1, b2, ...]  # avec au moins un coefficient non nul  \n```\n\nExemple  :\n```python\n>>> from digital_filter_tools import *\n>>> f = FiltreNumerique(a=[2, -0.2], b=[1, 0.5])\n```\n\n### Transmittance en z\n\nOn peut aussi d\u00e9finir un filtre num\u00e9rique par ses p\u00f4les et ses z\u00e9ros.  \nLa transmittance en z s'\u00e9crit alors :  \n```\n          (z-z1).(z-z2)...(z-zm)\nH(z) = k. -----------------------------\n          (z-p1).(z-p2).(z-p3)...(z-pn)\n```\nk est un nombre non nul (constante d'amplification)\n\nzeros est la liste des m z\u00e9ros de la transmittance :  \n```\nzeros = [z1, z2, ..., zm]  \n```\npoles est la liste des n p\u00f4les de la transmittance :  \n```\npoles = [p1, p2, ..., pn]  \n```\navec les conditions suivantes :  \n* n >= m\n* p\u00f4les et z\u00e9ros r\u00e9els ou complexes par paires conjugu\u00e9es\n\nExemple :  \n```python\n>>> from digital_filter_tools import *\n>>> f = FiltreNumerique(k=2, zeros=[0.5], poles=[0, 0.6-0.2j, 0.6+0.2j])\n```\n\n## Un exemple complet : filtre \u00e0 moyenne glissante\n\nOn s'int\u00e9resse \u00e0 un filtre \u00e0 moyenne glissante sur 4 \u00e9chantillons (sous forme r\u00e9cursive).\n\n```python\n>>> from digital_filter_tools import *\n>>> f = FiltreNumerique(a=[1, -1], b=[0.25, 0, 0, 0, -0.25])\n```\n\n### Equation de r\u00e9currence\n\n```python\n>>> f.afficher_equation_recurrence()\ny(n) = 0.25*x(n) -0.25*x(n-4) \n       +y(n-1)\n```\n\n### Ordre du filtre\n\n```python\n>>> print(f.ordre())\n4\n```\n\n### Passage \u00e0 la transform\u00e9e en z\n\n```python\n>>> f.afficher_transformee_en_z()\nY(z) = 0.25*X(z) -0.25*X(z)z\u207b\u2074 \n       +Y(z)z\u207b\u00b9\n```\n\n### Transmittance (fonction de transfert) en z\n\nPar d\u00e9finition : H(z) = Y(z)/X(z)  \n\n```python\n>>> f.afficher_transmittance_z()\n        0.25 -0.25z\u207b\u2074\nH(z) =  -------------\n        1 -z\u207b\u00b9\n```\n\nAutre \u00e9criture avec puissances de z positives :\n\n```python\n>>> f.afficher_transmittance_z_puissance_positive()\n        0.25z\u2074 -0.25\nH(z) =  ------------\n        z\u2074 -z\u00b3\n```\n\n### P\u00f4les et z\u00e9ros\n\n```python\n>>> print(f.zeros)\n[-1.0, (-0-1j), 1j, 1.0]\n>>> print(f.poles)\n[0.0, 0.0, 0.0, 1.0]\n```\n\n### P\u00f4les et z\u00e9ros communs\n\n```python\n>>> print(f.poles_zeros_commun())\n[1.0]\n```\n\n### Transmittance en z avec p\u00f4les et z\u00e9ros\n\n```python\n>>> f.afficher_transmittance_z_poles_zeros()\n        0.25(z+1)(z+1j)(z-1j)(z-1)\nH(z) =  --------------------------\n        z.z.z(z-1)\n```\n\n### Etude de la stabilit\u00e9\n\n```python\n>>> f.afficher_bilan_stabilite()\n\nEtude de la stabilit\u00e9\n---------------------\nLe filtre est r\u00e9cursif.\nLa transmittance en z poss\u00e8de 4 p\u00f4les.\nEn module :\n|0| = 0\n|0| = 0\n|0| = 0\n|1| = 1\nFiltre stable car tous les p\u00f4les ont un module <= 1\n```\n\n### R\u00e9ponse impulsionnelle\n\n```python\n>>> f.tracer_reponse_impulsionnelle()    \n```\n\n![screenshot01](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image01.png)\n\n### R\u00e9ponse indicielle\n\n```python\n>>> f.tracer_reponse_indicielle()   \n```\n\n![screenshot02](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image02.png)\n\n### R\u00e9ponse en fr\u00e9quence\n\nfs d\u00e9signe la fr\u00e9quence d'\u00e9chantillonnage (en Hz).  \n\n```python\n>>> f.fs = 5000\n>>> f.tracer_reponse_en_frequence(magnitude_unit='linear')\n```\n\n![screenshot03](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image03.png)\n\n### Fonction de transfert complexe H(j\u03c9) (transmittance complexe)\n\n```python\n>>> H = f.hw\n>>> # help(H)\n>>> H.properties(600)   # transmittance \u00e0 600 Hz\nFrequency (Hz) : 600\nAngular frequency (rad/s) : 3769.91\n\nComplex value : 0.288584-0.613272j\nMagnitude : 0.677778\nMagnitude (dB) : -3.37825\nPhase (degrees) : -64.8\nPhase (radians) : -1.13097\n>>> H.db(600)  # gain en dB \u00e0 600 Hz\n-3.37825\n>>> H.phase_deg(600)  # d\u00e9phasage en degr\u00e9s \u00e0 600 Hz\n-64.8\n```\n\n### Diagramme des p\u00f4les et z\u00e9ros\n\n```python\n>>> f.tracer_diagramme_poles_zeros() \n```\n\n![screenshot04](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image04.png)\n\n## Un deuxi\u00e8me exemple : lowpass iir elliptic order 5\n\n```python\n>>> from digital_filter_tools import *\n>>> k = 0.004691927277691961\n>>> zeros = [(-0.024456055354309697+0.9997009059496281j),\n(-0.024456055354309697-0.9997009059496281j),\n-1.0,\n(0.39282986017485766+0.9196111683505163j),\n(0.39282986017485766-0.9196111683505163j)]\n>>> poles = [0.7098495779640238,\n(0.710102705797963+0.3470090677215467j),\n(0.710102705797963-0.3470090677215467j),\n(0.736600454346126+0.569377854177767j),\n(0.736600454346126-0.569377854177767j)]\n>>> f = FiltreNumerique(fs=10000, k=k, zeros=zeros, poles=poles)\n```\n### Equation de r\u00e9currence\n\n```python\n>>> f.afficher_equation_recurrence()                                       \ny(n) = 0.00469193*x(n) +0.00123516*x(n-1) +0.00574679*x(n-2) +0.00574679*x(n-3)\n       +0.00123516*x(n-4) +0.00469193*x(n-5) \n       +3.60326*y(n-1) -5.63756*y(n-2) +4.69512*y(n-3) -2.0685*y(n-4) +0.38434*y(n-5)\n>>> print(f.b)\n[0.004691927277691961, 0.001235161071242554, 0.005746785676190226,\n 0.0057467856761902235, 0.0012351610712425533, 0.004691927277691962]\n>>> print(f.a)\n[1.0, -3.603255898252202, 5.637563674261337, -4.695118791175536,\n 2.0684985810278094, -0.38433981781115933]\n```\n\n### Etude de la stabilit\u00e9\n\n```python\n>>> f.afficher_bilan_stabilite()  \n\nEtude de la stabilit\u00e9\n---------------------\nLe filtre est r\u00e9cursif.\nLa transmittance en z poss\u00e8de 5 p\u00f4les.\nEn module :\n|0.70985| = 0.70985\n|0.710103+0.347009j| = 0.790355\n|0.710103-0.347009j| = 0.790355\n|0.7366+0.569378j| = 0.931006\n|0.7366-0.569378j| = 0.931006\nFiltre stable car tous les p\u00f4les ont un module <= 1\n```\n\n### R\u00e9ponse impulsionnelle\n\n```python\n>>> f.tracer_reponse_impulsionnelle(nfin=50)    \n```\n\n![screenshot11](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image11.png)\n\n### R\u00e9ponse indicielle\n\n```python\n>>> f.tracer_reponse_indicielle(nfin=50)   \n```\n\n![screenshot12](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image12.png)\n\n### R\u00e9ponse en fr\u00e9quence\n\n```python\n>>> f.tracer_reponse_en_frequence(magnitude_unit='dB')\n```\n\n![screenshot13](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image13.png)\n\n### Diagramme des p\u00f4les et z\u00e9ros\n\n```python\n>>> f.tracer_diagramme_poles_zeros() \n```\n\n![screenshot14](https://framagit.org/fsincere/digital-filter-tools/-/raw/master/images/image14.png)\n\n## Aide compl\u00e8te\n\n```python\n>>> import digital_filter_tools\n>>> help(digital_filter_tools)\n```\n\n## Documentation compl\u00e8te\n\n[https://framagit.org/fsincere/digital-filter-tools](https://framagit.org/fsincere/digital-filter-tools)\n\nEn particulier, des exemples d'utilisation  [ici](https://framagit.org/fsincere/digital-filter-tools/-/tree/master/examples).\n\n## TO DO\n\ndocumentation : english translation...\n\n## Compl\u00e9ment\n\nL'utilitaire Python pyFDA \n\n\n[https://github.com/chipmuenk/pyFDA](https://github.com/chipmuenk/pyFDA)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://framagit.org/fsincere/digital-filter-tools",
            "keywords": "",
            "license": "",
            "maintainer": "Fabrice Sinc\u00e8re",
            "maintainer_email": "fabrice.sincere@ac-grenoble.fr",
            "name": "digital-filter-tools",
            "package_url": "https://pypi.org/project/digital-filter-tools/",
            "platform": "",
            "project_url": "https://pypi.org/project/digital-filter-tools/",
            "project_urls": {
                "Homepage": "https://framagit.org/fsincere/digital-filter-tools"
            },
            "release_url": "https://pypi.org/project/digital-filter-tools/0.4.1/",
            "requires_dist": [
                "numpy",
                "matplotlib",
                "ac-electricity"
            ],
            "requires_python": ">=3",
            "summary": "An educational module about digital filters",
            "version": "0.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13022952,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c6226b3b02e48a69318d1bfdce06ef0c",
                    "sha256": "1b874be35f77fcbdb8c3e944592c74f6d15d35049e9b4b3ad97f766e0e4859c7"
                },
                "downloads": -1,
                "filename": "digital_filter_tools-0.4.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c6226b3b02e48a69318d1bfdce06ef0c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 26942,
                "upload_time": "2022-02-27T08:23:58",
                "upload_time_iso_8601": "2022-02-27T08:23:58.482590Z",
                "url": "https://files.pythonhosted.org/packages/8e/10/e75cbcf5d2b5bd88208ffc47f385e34f4bf8853a5e0049dca395e6a3b592/digital_filter_tools-0.4.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "37c0c5e2a23593f20ff09d92cf4a1b15",
                    "sha256": "6ee66b795f522f7c44bc4069d58d7515f5da5129a3e723cd174197111986b664"
                },
                "downloads": -1,
                "filename": "digital-filter-tools-0.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "37c0c5e2a23593f20ff09d92cf4a1b15",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 26447,
                "upload_time": "2022-02-27T08:24:01",
                "upload_time_iso_8601": "2022-02-27T08:24:01.065563Z",
                "url": "https://files.pythonhosted.org/packages/ab/5a/e4cf73122c61a1559c88eb80aa6bfaffe0516f56019f53f03535a25e814a/digital-filter-tools-0.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}