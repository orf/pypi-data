{
    "0.1.2": {
        "info": {
            "author": "",
            "author_email": "Anda Knol <a.knol@nfi.nl>, Francis Hoogendijk <f.hoogendijk@nfi.nl>",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# QNX Filesystems\nQNX filesystem parsers to mount non-standard images (read only).\nMounting is based on fuse, and only tested on Linux machines.\n\n## Getting started\nSet up your python virtual environment and activate the environment:\n```commandline\npython3 -m venv venv\nsource ./venv/bin/activate\n```\nInstall qnxmount:\n```commandline\npip install qnxmount\n```\n\nOr clone this repo and install.\n```commandline\npip install .\n```\n\n## Usage\nRun the parser script (used on HDD/SSD/eMMC):\n```shell\npython3 -m qnxmount {fs_type} [options] mountpoint image\n```\n\nFor example, a specific mounter (qnx6) is called with:\n```shell\npython3 -m qnxmount qnx6 -o OFFSET mountpoint image\n```\n\nNow navigate to the given mount point with your favourite terminal or file browser to access the file system.\n\n## Testing\n\nIf you want to run test, first install the test dependencies:\n```commandline\npip install .[test]\n```\n\nThe folder **tests** contains functional tests to test the different parsers.\nTo run these tests you need a file system image and an accompanying tar archive.\nThe tests run are functional tests that check whether the parsed data from the test image is equal to the data stored in the archive.\nDefault test_images are located in the folders **test_data**.\nIf you want to test your own image replace the files **test_image.bin** and **test_image.tar.gz** with your own.\n\nA test image can be created by running the script `make_test_fs.sh` inside a QNX VM.\nUpdate the script with the (edge) cases you want to check and run the command below.\nThis should create an _image.bin_ and _image.tar.gz_ into the specified directory.\nThese can be used as test files.\n```shell\nmake_test_fs.sh /path/to/output/directory\n```\n\nTo run the tests in this repo navigate to the main directory of the repo and run:\n```shell\npytest\n```\n\n[//]: # (Usually, tests can be run by directly calling `pytest tests --image ... --tar ...`, however this method fails here.)\n[//]: # (The reason is that the tests are located in a separate subfolder from the **qnx6_file_system.py**. )\n[//]: # (The qnx6_file_system module cannot be imported because it is not located in the tests directory.)\n[//]: # (When python3 is called it adds '.' to the PATH and since the qnx6_file_system module is located in the working directory they can be found.)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "qnxmount",
            "package_url": "https://pypi.org/project/qnxmount/",
            "platform": null,
            "project_url": "https://pypi.org/project/qnxmount/",
            "project_urls": {
                "documentation": "https://github.com/NetherlandsForensicInstitute/qnxmount",
                "homepage": "https://github.com/NetherlandsForensicInstitute/qnxmount",
                "repository": "https://github.com/NetherlandsForensicInstitute/qnxmount"
            },
            "release_url": "https://pypi.org/project/qnxmount/0.1.2/",
            "requires_dist": [
                "crcmod (==1.7)",
                "fusepy (==3.0.1)",
                "kaitaistruct (==0.10)",
                "pytest (==7.1.2) ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "read only mounters for qnx filesystems",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15957693,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e359e5bd4d35d2e3d919c1a9e5fc4259",
                    "sha256": "6ad52cc2dd9d5b523157a0068f96f478dd62219854c14f269672e63ef284af1e"
                },
                "downloads": -1,
                "filename": "qnxmount-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e359e5bd4d35d2e3d919c1a9e5fc4259",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 28872,
                "upload_time": "2022-12-01T16:37:05",
                "upload_time_iso_8601": "2022-12-01T16:37:05.181288Z",
                "url": "https://files.pythonhosted.org/packages/03/4a/cc05626bf73532a75b422a16bab34a51f23363e97bfb7b0660452f9d1d58/qnxmount-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ee81a32444674a6369e9ef6813695ddc",
                    "sha256": "88adb4fc85bef3a1e3354d9f833b98660bd8f6236f52e4857184ccff09e9f8ce"
                },
                "downloads": -1,
                "filename": "qnxmount-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "ee81a32444674a6369e9ef6813695ddc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 205167,
                "upload_time": "2022-12-01T16:37:07",
                "upload_time_iso_8601": "2022-12-01T16:37:07.289245Z",
                "url": "https://files.pythonhosted.org/packages/87/0c/baa5026ea8dfff3d44716689af8153672e51e0367818fecef3737655fb84/qnxmount-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}