{
    "0.1.0": {
        "info": {
            "author": "Arne R\u00fcmmler",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.11"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/rue-a/provo",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "provo",
            "package_url": "https://pypi.org/project/provo/",
            "platform": null,
            "project_url": "https://pypi.org/project/provo/",
            "project_urls": {
                "Homepage": "https://github.com/rue-a/provo"
            },
            "release_url": "https://pypi.org/project/provo/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Construct  PROV-O compliant provenance graphs.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15838591,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e5eb4565d5ddd3b9635528d9ee8a702d",
                    "sha256": "969872946ac4bee228192df4dab724a755b8639e6611f1e000e97db340a5a95e"
                },
                "downloads": -1,
                "filename": "provo-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e5eb4565d5ddd3b9635528d9ee8a702d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 17909,
                "upload_time": "2022-11-19T12:29:06",
                "upload_time_iso_8601": "2022-11-19T12:29:06.217760Z",
                "url": "https://files.pythonhosted.org/packages/48/af/54f18cd0ade6ef0472a689d3bcb619830f040b9b6df873d64c1d4fb345c0/provo-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1548dca3291398710b8caa1b812ac178",
                    "sha256": "519299846703f99f61a36d98f0875215a46e506aa24d86b986e0e92fc246fb89"
                },
                "downloads": -1,
                "filename": "provo-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1548dca3291398710b8caa1b812ac178",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17975,
                "upload_time": "2022-11-19T12:29:08",
                "upload_time_iso_8601": "2022-11-19T12:29:08.643853Z",
                "url": "https://files.pythonhosted.org/packages/55/c7/d97cfbe453ea6c4b21d54763cdbbcc2755ae4a8a9c8ac0e3f97b35dd19bc/provo-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Arne R\u00fcmmler",
            "author_email": "arne.ruemmler@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.11",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "# README\r\n\r\nThe package supports the creation of [PROV-O](https://www.w3.org/TR/prov-o/) compliant provenance graphs. \r\n\r\nThe package requires __Python 3.11__.\r\n\r\n## Installation\r\n\r\nYou can install the package from the Python Package Index (PyPI):\r\n\r\n`pip install provo`\r\n\r\nOr by downloading this repo:\r\n\r\n1. Download and unzip the package\r\n2. Open Shell and _cd_ to unzipped package\r\n3. Run `pip install -e .` (in the folder that contains ```setup.py```)\r\n\r\n\r\n## Contents\r\n\r\nThe package implements the [PROV-O starting point classes](https://www.w3.org/TR/prov-o/#starting-points-figure) __Entity__, __Activity__ and __Agent__ as Python classes with methods to establish starting point properties between them instances of these classes. \r\n\r\n## Features\r\n\r\n### Compliance\r\n\r\n- The PROV-O classes __Entity__, __Activity__, and __Agent__ are implemented as Python classes.\r\n- The PROV-O properties _wasGeneratedBy_, _wasDerivedFrom_, _wasAttributedTo_, _startedAtTime_, _used_, _wasInformedBy_, _endedAtTime_, _wasAssociatedWith_, and _actedOnBehalfOf_ are implemented as instance methods of their according classes.\r\n- Attributes that are passes to these methods are type-checked to enforce compliance with PROV-O.\r\nitemName=ms-python.vscode-pylance).\r\n- Node Ids are checked for validity.\r\n- Accidental use of the same ID for different objects throws an error.\r\n\r\n### Ease of Use\r\n\r\n- The package implements full type hint support, thus enabling rich support from linters such as [Pylance](https://marketplace.visualstudio.com/items).\r\n- The classes `Provence_Ontology_Graph`, `Entity`, `Activity`, and `Agent` can be printed to terminal in a user-friendly, readable way with the default `print()` command.\r\n\r\n- for some quick testing, objects of the classes `Entity`, `Activity`, and `Agent` can be instantiated with auto-generated Ids (although it's not recommended using this for production).\r\n\r\n### Interface to RDF via the [rdflib](https://rdflib.readthedocs.io/en/stable/) package\r\n\r\n- The graph's contents can be converted to an `rdflib.Graph` object.\r\n- The graph can be exported in various RDF serializations.\r\n\r\n## Manual\r\n\r\nThe package is centered around the class ProvenanceOntologyGraph. Entities, Activities, and Agents are added to this graph by using the according add-methods. Relations between the starting point classes are constructed by using the respective methods of the classes. \r\n\r\n\r\n### Create a Provenance Ontology Graph\r\n\r\nThe graph can be initialized with default or user defined attributes. The graph can be printed to the terminal with `print(graph)`.\r\n\r\n```python\r\n# ex1 - create a provenance graph\r\nfrom provo import ProvOntologyGraph\r\n\r\n# __defaults__\r\n# namespace: str = \"https://provo-example.org/\",\r\n# namespace_abbreviation: str = \"\", \r\n# lang: str = \"en\"\r\nprovenance_graph = ProvOntologyGraph()\r\n\r\nprov_ontology_graph = ProvOntologyGraph(\r\n    namespace='http://example.org#',\r\n    namespace_abbreviation=\"ex\",\r\n    lang=\"en\"\r\n)\r\n```\r\n\r\n`namespace=`\r\n\r\n- Default is `\"https://provo-example.org/\"`.\r\n- Has to be valid url, validation is currently performed with the [validators]() package.\r\n- Has to end with `/` or `#`.\r\n\r\n`namespace_abbreviation=`\r\n\r\n- Default is `\"\"`.\r\n- Used when converting to other models, such as RDF (-> prefixes)\r\n- Only characters from the Latin alphabet are allowed.\r\n- RDF core prefixes (*owl*, *rdf*, *rdfs*, *xsd* and *xml*) are prohibited from use.\r\n\r\n>**Note** \r\n> Although not prohibited, the following prefixes are commonly uses and thus recommended to be avoided: *brick*, *csvw*, *dc*, *dcat*, *dcmitype*, *cdterms*, *dcam*, *doap*, *foaf*, *geo, *odrl*, *org, *prof*, *prov*, *qb*, *sdo*, *sh*, *skos*, *sosa*, *ssn*, *time*, *vann* and *void*.\r\n\r\n`lang=`\r\n\r\n- Default is `\"en\"`.\r\n- Used when converting to other models that support a *lang* tag.\r\n- Has to be compliant with [RFC 5646](https://www.rfc-editor.org/info/rfc5646) (Phillips, A., Ed., and M. Davis, Ed., \"Tags for Identifying Languages\", BCP 47, RFC 5646, September 2009). Compliance is not validated!\r\n\r\n### Create Entities, Activities and Agents and define relation between them\r\n\r\nThe creation for the three starting term classes follows the same pattern. The classes only differ in their methods. PROV-O Classes are instantiated by using the add methods of the provenance graph class. Below you find an extensively commented version of the `add_entity()` method. \r\n\r\n```python\r\ndef add_entity(self, id_string: str = \"\", label: str = \"\", description: str = \"\", namespace: str = \"\") -> Entity:\r\n    \"\"\"creates a new entity, adds it to the graph and returns it then\"\"\"\r\n\r\n    # the id of the PROV class objects is a combination of the \r\n    # namespace and the id_string. The method _handle_id() builds \r\n    # the actual id of the node, if checks whether the provided \r\n    # namespace-id combination is already used for a node in the graph.\r\n    # if no namespace is provided: default namespace is used, \r\n    # if no id is provided: id get automatically generated.\r\n    node_id = self._handle_id(namespace, id_string)\r\n    # the PROV class (in this case an Entity) is only created if everything with the ID is fine\r\n    entity = Entity(\r\n        # mandatory\r\n        node_id=node_id,\r\n        # optional\r\n        label=label,\r\n        # optional\r\n        description=description)\r\n    self._entities.append(entity)\r\n    return entity\r\n```\r\n\r\nThe relations are defined by calling the respective methods of the PROV class instances.\r\n\r\nExample use of the provenance graph's add-methods and the definition of a *used*-relation between an Activity and an Entity:\r\n\r\n```python\r\n# ex2 - create entities, activities and agents, \r\n# and define relation between them\r\nentity = prov_ontology_graph.add_entity(\r\n    id_string=\"example_entity\",\r\n    label=\"Example Entity\")\r\n\r\nactivity = prov_ontology_graph.add_activity(\r\n    label=\"Anonymous activity\",\r\n    description=\"An arbitrary activity.\"\r\n)\r\n\r\nactivity.used(entity)\r\n\r\nprint(entity)\r\n# id: http://example.org#example_entity\r\n# label: Example Entity\r\n# ---\r\n\r\nprint(activity)\r\n# id: http://example.org#94021a6a-40cd-4c02-9571-33480488ff82\r\n# label: Anonymous activity\r\n# description: An arbitrary activity.\r\n# used: ['Example Entity']\r\n# ---\r\n```\r\n\r\n### RDF interface\r\n\r\nThe graph can be directly serialized as RDF document or be converted to an rdflib Graph, for further manipulation.\r\n\r\n```python\r\n# ex3 - serialize provenance graph as RDF document\r\nprov_ontology_graph.serialize_as_rdf(\"manual_examples.ttl\")\r\n```\r\n\r\n```\r\n@prefix : <http://example.org#> .\r\n@prefix prov: <http://www.w3.org/ns/prov#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n\r\n:94021a6a-40cd-4c02-9571-33480488ff82 a prov:Activity ;\r\n    rdfs:label \"Anonymous activity\"@en ;\r\n    rdfs:comment \"An arbitrary activity.\"@en ;\r\n    prov:used :example_entity .\r\n\r\n:example_entity a prov:Entity ;\r\n    rdfs:label \"Example Entity\"@en .\r\n```\r\n\r\n```python\r\n# ex4 - interface with rdflib\r\n\r\nfrom rdflib import SKOS, Literal, URIRef\r\n\r\nrdflib_graph = prov_ontology_graph.get_rdflib_graph()\r\n\r\nrdflib_graph.bind(\"skos\", SKOS)\r\n\r\nrdflib_graph.add((\r\n    URIRef(entity.get_id()), \r\n    SKOS.prefLabel, \r\n    Literal(entity.get_label(), lang=\"en\")\r\n))\r\n\r\nrdflib_graph.serialize(\"examples/rdflib_interface.ttl\")\r\n```\r\n```\r\n@prefix : <http://example.org#> .\r\n@prefix prov: <http://www.w3.org/ns/prov#> .\r\n@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .\r\n@prefix skos: <http://www.w3.org/2004/02/skos/core#> .\r\n\r\n:94021a6a-40cd-4c02-9571-33480488ff82 a prov:Activity ;\r\n    rdfs:label \"Anonymous activity\"@en ;\r\n    rdfs:comment \"An arbitrary activity.\"@en ;\r\n    prov:used :example_entity .\r\n\r\n:example_entity a prov:Entity ;\r\n    rdfs:label \"Example Entity\"@en ;\r\n    skos:prefLabel \"Example Entity\"@en .\r\n```\r\n\r\n\r\n\r\n\r\n## Comprehensive Examples\r\n\r\nCode to create the PROV-O [example 1](https://www.w3.org/TR/prov-o/#narrative-example-simple-1)\r\n\r\n```python\r\nfrom datetime import datetime\r\n\r\nfrom provo import ProvOntologyGraph\r\nfrom rdflib import FOAF, RDF, Literal, URIRef\r\n\r\n# create example from: https://www.w3.org/TR/prov-o/#narrative-example-simple-1\r\n\r\n\r\n# create graph\r\nprov_ontology_graph = ProvOntologyGraph(\r\n    namespace='http://example.org#',\r\n    namespace_abbreviation=\"\"\r\n)\r\n\r\n# create entities\r\ncrime_data = prov_ontology_graph.add_entity(id_string='crimeData', label='Crime Data')\r\nnational_regions_list = prov_ontology_graph.add_entity(id_string='nationalRegionsList', label='National Regions List')\r\naggregated_by_regions = prov_ontology_graph.add_entity(id_string='aggregatedByRegions', label='Aggregated by Regions')\r\nbar_chart = prov_ontology_graph.add_entity(id_string='bar_chart', label='Bar Chart')\r\n\r\n# create activities\r\naggregation_activity = prov_ontology_graph.add_activity(id_string='aggregationActivity', label='Aggregation Activity')\r\nillustration_activity = prov_ontology_graph.add_activity(id_string='illustrationActivity', label='Illustration Activity')\r\n\r\n# create agents\r\ngovernment = prov_ontology_graph.add_agent(id_string='government', label='Government')\r\ncivil_action_group = prov_ontology_graph.add_agent(id_string='civil_action_group', label='Civil Action Group')\r\nnational_newspaper_inc = prov_ontology_graph.add_agent(id_string='national_newspaper_inc', label='National Newspaper Inc.')\r\nderek = prov_ontology_graph.add_agent(id_string='derek', label='Derek')\r\n\r\n# build relations\r\ncrime_data.was_attributed_to(government)\r\nnational_regions_list.was_attributed_to(civil_action_group)\r\n\r\naggregation_activity.used(crime_data)\r\naggregation_activity.used(national_regions_list)\r\naggregation_activity.started_at_time(datetime(2011, 7, 14, 1, 1, 1))\r\naggregation_activity.ended_at_time(datetime(2011, 7, 14, 2, 2, 2))\r\naggregation_activity.was_associated_with(derek)\r\n\r\naggregated_by_regions.was_generated_by(aggregation_activity)\r\naggregated_by_regions.was_attributed_to(derek)\r\n\r\nillustration_activity.was_informed_by(aggregation_activity)\r\nillustration_activity.used(aggregated_by_regions)\r\nillustration_activity.was_associated_with(derek)\r\n\r\nbar_chart.was_generated_by(illustration_activity)\r\nbar_chart.was_derived_from(aggregated_by_regions)\r\nbar_chart.was_attributed_to(derek)\r\n\r\nderek.acted_on_behalf_of(national_newspaper_inc)\r\n\r\n# print graph to terminal\r\nprint(prov_ontology_graph)\r\n\r\n# use rdflib interface to add FOAF triples\r\nrdflib_graph = prov_ontology_graph.get_rdflib_graph()\r\n\r\nrdflib_graph.bind(\"foaf\", FOAF)\r\n\r\nrdflib_graph.add((\r\n    URIRef(government.get_id()),\r\n    RDF.type,\r\n    FOAF.Organization\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(civil_action_group.get_id()),\r\n    RDF.type,\r\n    FOAF.Organization\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(national_newspaper_inc.get_id()),\r\n    RDF.type,\r\n    FOAF.Organization\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(national_newspaper_inc.get_id()),\r\n    FOAF.name,\r\n    Literal(national_newspaper_inc.get_label(), lang=\"en\")\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(derek.get_id()),\r\n    RDF.type,\r\n    FOAF.Person\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(derek.get_id()),\r\n    FOAF.givenName,\r\n    Literal(derek.get_label(), lang=\"en\")\r\n))\r\n\r\nrdflib_graph.add((\r\n    URIRef(derek.get_id()),\r\n    FOAF.mbox,\r\n    URIRef(\"mailto:derek@example.org\")\r\n))\r\n# serialize graph as rdf document\r\nrdflib_graph.serialize('examples/provenance_graph_example.ttl')\r\n```\r\n\r\n\r\n## Used Packages\r\n\r\n- rdflib: https://rdflib.readthedocs.io/en/stable/, BSD License\r\n- validators: https://github.com/python-validators/validators, MIT License\r\n\r\n\r\n## License\r\n\r\nGNU General Public License v3.0\r\n\r\n## Contact\r\n\r\nArne R\u00c3\u00bcmmler ([arne.ruemmler@gmail.com](mailto:arne.ruemmler@gmail.com))\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/rue-a/provo",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "provo",
            "package_url": "https://pypi.org/project/provo/",
            "platform": null,
            "project_url": "https://pypi.org/project/provo/",
            "project_urls": {
                "Homepage": "https://github.com/rue-a/provo"
            },
            "release_url": "https://pypi.org/project/provo/0.2.0/",
            "requires_dist": null,
            "requires_python": ">=3.11",
            "summary": "Construct  PROV-O compliant provenance graphs.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15838591,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "35cb91c48f7496ce65788923c6429328",
                    "sha256": "82ef74fa876d71053d3fe0051dc845949190a5a401de040f12ed84e6ed05fdf7"
                },
                "downloads": -1,
                "filename": "provo-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "35cb91c48f7496ce65788923c6429328",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.11",
                "size": 25053,
                "upload_time": "2022-11-21T10:33:40",
                "upload_time_iso_8601": "2022-11-21T10:33:40.389987Z",
                "url": "https://files.pythonhosted.org/packages/71/1a/51e4fef841c669c2abe245d749a94749294b93de9c33256821cb87681526/provo-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cf82a7cce2ac858ea7f455cb6e11cac",
                    "sha256": "379b9f682d1f326f8f2a67bc757ac06bb7b7acc2326263bb2481f5f914c7ffab"
                },
                "downloads": -1,
                "filename": "provo-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1cf82a7cce2ac858ea7f455cb6e11cac",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.11",
                "size": 26207,
                "upload_time": "2022-11-21T10:33:42",
                "upload_time_iso_8601": "2022-11-21T10:33:42.686426Z",
                "url": "https://files.pythonhosted.org/packages/6d/25/ac2bd5b2e2f00b1d2126bdd77663714ce908ae133978fb1b7813b001e0f6/provo-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}