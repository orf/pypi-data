{
    "0.1.0": {
        "info": {
            "author": "Robin Scheibler",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Build Tools"
            ],
            "description": "TORCHIVA\n========\n\nA package for blind source separation and beamforming in `pytorch <https://pytorch.org>`_ .\n\n* supports many BSS and beamforming methods\n* supports memory efficient gradient computation for training neural source models\n* supports batched computations\n* can run on GPU via pytorch\n\nAuthor\n------\n\n* `Robin Scheibler <robin.scheibler@linecorp.com>`_\n* Kohei Saijo\n\n\nQuick Start\n-----------\n\nThis guide assumes `anaconda <https://www.anaconda.com/products/individual>`_ is installed::\n\n    # get code and install environment\n    git clone <torchiva_repo>\n    cd torchiva\n    conda env create -f environment.yml\n    conda activate torchiva\n    pip install -e .\n\n    cd ./examples\n    export PYTHONPATH=\"/path/to/torchiva\":$PYTHONPATH\"\n\n    # BSS example\n    # algorithm can be selected from tiss, auxiva_ip, auxiva_ip2, and five\n    python ./example.py PATH_TO_DATASET ALGORITHM\n\n\nSeparation using Pre-trained Model\n----------------------------------\n\nWe provide pre-trained model at --- hugging face link ---.\nThe model is trained with `WSJ1-mix dataset <https://github.com/fakufaku/create_wsj1_2345_db>`_ with the same configuration as `./configs/tiss.json`.\nYou can easily try separation with the pre-trained model::\n\n    # download model parameters from hugging face\n\n    # Separation\n    python ./example_dnn.py ./configs/tiss.json PATH_TO_DATASET PATH_TO_MODEL_PARAMS\n\n\nTraining\n--------\n\nWe provide some simple training scripts.\nWe support training of **T-ISS**, **MWF**, **MVDR**, **GEV**::\n\n    cd examples\n\n    # install some modules necessary for training\n    pip install -r requirements.txt\n\n    # training\n    python train.py PATH_TO_CONFIG PATH_TO_DATASET\n\n\nNote that our example scripts assumes using WSJ1-mix dataset.\nIf you want to use other datasets, please change the script in the part that loads audios.\n\nTest your trained model with checkpoint from epoch 128::\n\n    # python ./test.py --dataset ../wsj1_6ch --n_fft 2048 --hop 512 --n_iter 40 --iss-hparams checkpoints/tiss_delay1tap5_2ch/lightning_logs/version_0/hparams.yaml --epoch 128 --test\n\nExport the trained model for later use::\n\n    python ./export_model.py ../trained_models/tiss checkpoints/tiss_delay1tap5_2ch/lightning_logs/version_0 128 146 148 138 122 116 112 108 104 97\n\nRun the example script using the exported model::\n\n    python ./example_dnn.py ../wsj1_6ch ../trained_models/tiss -m 2 -r 100\n\nLicense\n-------\n\n2022 (c) Robin Scheibler, Kohei Saijo, LINE Corporation.\n\nAll of this code is released under `MIT License <https://opensource.org/licenses/MIT>`_\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/fakufaku/torchiva",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "torchiva",
            "package_url": "https://pypi.org/project/torchiva/",
            "platform": null,
            "project_url": "https://pypi.org/project/torchiva/",
            "project_urls": {
                "Homepage": "https://github.com/fakufaku/torchiva"
            },
            "release_url": "https://pypi.org/project/torchiva/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7, <4",
            "summary": "Package for independent vector analysis in torch",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15798426,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a403193e704f783ff8dacf6b00f5fef9",
                    "sha256": "0ef5c4ff249bfd146ff833da419c6d30287f96a7cab540924e9d5ad2fd526e23"
                },
                "downloads": -1,
                "filename": "torchiva-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a403193e704f783ff8dacf6b00f5fef9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7, <4",
                "size": 32646,
                "upload_time": "2022-11-17T07:54:36",
                "upload_time_iso_8601": "2022-11-17T07:54:36.478676Z",
                "url": "https://files.pythonhosted.org/packages/f0/aa/6daf402dec40806563032eba4fca304359fc013672bacee53d00a0c211f9/torchiva-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}