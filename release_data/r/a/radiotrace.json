{
    "0.0.1": {
        "info": {
            "author": "Jiaqi Li",
            "author_email": "li-jq18@mails.tsinghua.edu.cn",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# ITHscore\n\nITHscore is a Python package to quantify intra-tumor heterogeneity level from CT images. ITHscore contains general data processing of medical images, so it can be used as a radiomic analysis pipeline.\n\nITHscore is designed and developed by Jiaqi Li from [XGlab](http://bioinfo.au.tsinghua.edu.cn/member/xuegonglab/ ), Tsinghua University. The work is collaborated with Prof. Wenzhao Zhong's group, Guangdong General Hospital.\n\nITHscore package is **free for academic use**. Please contact the authors for commercial usage.\n\n## Install\n\n```\npip install ITHscore\n```\n\n## Tutorial\n\nBy running ITHscore package users are walking through the radiomic processing pipeline: Load image and segmentation, Locate and extract tumor, Extract radiomic features, and downstream analysis. Here we did clustering on the pixel-wise radiomic features.   \n\nBelow are major steps to visualize heterogeneity patterns of tumor and quantify the intra-tumor heterogeneity level with ITHscore.\n\n### 0. Load packages\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport ITHscore\n```\n\n### 1. Load image and segmentation\n\nHere we use LUNG1 data as an example. This is a public dataset available on The Cancer Imaging Archive ([TCIA](https://www.cancerimagingarchive.net/)). Here the image is stored as dicom series, while the segmentation is stored as pixel array in a single dcm file.\n\n\n```python\ndicom_path = \"./LUNG1/LUNG1-100/03-04-2006-StudyID-79317/0.000000-95207/\"\nseg_path = \"./LUNG1/LUNG1-100/02-26-2019-CTLUNG-79317/300.000000-Segmentation-44198/1-1.dcm\"\nimage = ITHscore.load_image(dicom_path)\nseg = ITHscore.load_seg(seg_path)\nprint(image.shape, seg.shape)\n```\n\n```\n(107, 512, 512) (107, 512, 512)\n```\n\n\n### 2. Get the slice with maximum tumor size\n\nIt's convenient to get the CT slice with maximum tumor size and corresponding segmentation mask, just with one line of code.\n\n```python\nimg, mask = ITHscore.get_largest_slice(image, seg)\n```\n\nThen we can visualize the image slice and mask using matplotlib:\n\n```python\nplt.subplot(131)\nplt.imshow(img, cmap=\"bone\")\nplt.title(\"Image\")\nplt.subplot(132)\nplt.imshow(mask, cmap=\"gray\")\nplt.title(\"Mask\")\nplt.subplot(133)\nplt.imshow(img, cmap=\"bone\")\nplt.imshow(mask, alpha=0.5)\nplt.title(\"Stack\")\n```\n\n![p1](https://github.com/LiJiaqi96/ITHscore/blob/main/figures/ITHscore_1.png?raw=true)\n\n### 3. Locate and extract tumor\n\nNext, we locate the tumor using segmentation mask, and extract the tumor image with bounding box. Similarly we can make corresponding visualizations.\n\n\n```python\nsub_img, sub_mask = ITHscore.locate_tumor(img, mask)\nplt.subplot(121)\nplt.imshow(sub_img, cmap=\"bone\")\nplt.title(\"Tumor\")\nplt.subplot(122)\nplt.imshow(sub_img, cmap=\"bone\")\nplt.imshow(sub_mask, alpha=0.5)\nplt.title(\"Stack\")\n```\n\n![p2](https://github.com/LiJiaqi96/ITHscore/blob/main/figures/ITHscore_2.png?raw=true)\n\n### 4. Extract pixel-wise radiomic features\n\nWe provide two ways to extract radiomic features for each pixel. The basic usage is using one core to do this work.   \n\nIf you have many cores in your machine, you can complete this process faster using multiple processes! You can choose the maximum processes to create (default is 10).\n\n\n```python\n# option 1: single core\nfeatures = ITHscore.extract_radiomic_features(sub_img, sub_mask, parallel=False)\n```\n\n```python\n# option 2: multiple cores\nfeatures = ITHscore.extract_radiomic_features(sub_img, sub_mask, parallel=True, workers=5)\n```\n\nThis process will take a while. The processing time depends on the tumor size and parallel method usage.\n\n### 5. Generate clustering label map\n\nWith radiomic features for each pixel, we performed pixel clustering to generate clustering label map.\n\n```python\nlabel_map = ITHscore.pixel_clustering(sub_mask, features, cluster=6)\n```\n\n### 6. (optional) Visualize heterogeneity patterns on label map\n\nWe observed that intra-tumor heterogeneity can be reflected as certain patterns on CT images, which can be obtained with our visualization tools.   \n\nUsers can choose to visualize the label map with single resolution (by setting argument \"cluster\" as integer), or with multiple resolutions to see the changes (by setting argument \"cluster\" as \"all\").    \n\nThis step will return a \"matplotlib.figure.Figure\" object. Users may save it as figure for future usage.  \n\n```python\n# option 1: single resolution\nfig = ITHscore.visualize(img, sub_img, mask, sub_mask, features, cluster=6)\n```\n\n![p3](https://github.com/LiJiaqi96/ITHscore/blob/main/figures/ITHscore_3.png?raw=true)\n\n```python\n# option 2: multiple resolutions\nfig = ITHscore.visualize(img, sub_img, mask, sub_mask, features, cluster=\"all\")\n```\n\n![p4](https://github.com/LiJiaqi96/ITHscore/blob/main/figures/ITHscore_4.png?raw=true)\n\n### 7. Calculate ITHscore\n\nFinally, we calculate ITHscore from clustering label map.\n\n```python\nithscore = ITHscore.calITHscore(label_map)\nprint(ithscore)\n```\n\n```\n0.6880687093779017\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LiJiaqi96/radiotrace",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "radiotrace",
            "package_url": "https://pypi.org/project/radiotrace/",
            "platform": null,
            "project_url": "https://pypi.org/project/radiotrace/",
            "project_urls": {
                "Homepage": "https://github.com/LiJiaqi96/radiotrace"
            },
            "release_url": "https://pypi.org/project/radiotrace/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "package for quantify early-stage LUAD progression from CT image",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15744566,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "43ccbd6dfafe578e3eea2394d768a706",
                    "sha256": "b3b727a339698b19c69abeea566246c5b09d74c04fd188d617a23d588b93d97d"
                },
                "downloads": -1,
                "filename": "radiotrace-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "43ccbd6dfafe578e3eea2394d768a706",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3559,
                "upload_time": "2022-11-12T12:00:11",
                "upload_time_iso_8601": "2022-11-12T12:00:11.162313Z",
                "url": "https://files.pythonhosted.org/packages/ef/d3/10a5f663bfc4727f0e0e332701d641e10c85b3126ef6947615bb7913b0e8/radiotrace-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}