{
    "1.5.10": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU Affero General Public License v3",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PnX-SI/UsersHub-authentification-module",
            "keywords": "",
            "license": "",
            "maintainer": "Parcs nationaux des \u00c9crins et des C\u00e9vennes",
            "maintainer_email": "geonature@ecrins-parcnational.fr",
            "name": "pypnusershub",
            "package_url": "https://pypi.org/project/pypnusershub/",
            "platform": null,
            "project_url": "https://pypi.org/project/pypnusershub/",
            "project_urls": {
                "Homepage": "https://github.com/PnX-SI/UsersHub-authentification-module"
            },
            "release_url": "https://pypi.org/project/pypnusershub/1.5.10/",
            "requires_dist": [
                "bcrypt",
                "flask-sqlalchemy",
                "flask (<2.0)",
                "psycopg2",
                "requests",
                "sqlalchemy",
                "flask-marshmallow",
                "marshmallow-sqlalchemy",
                "alembic",
                "markupsafe (<2.1)",
                "utils-flask-sqlalchemy (<1.0,>=0.2.6)",
                "pytest ; extra == 'tests'",
                "pytest-flask ; extra == 'tests'"
            ],
            "requires_python": "",
            "summary": "Python lib to authenticate using PN's UsersHub",
            "version": "1.5.10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14949826,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "faf09fee10f5fae823737e02074d1283",
                    "sha256": "e24afa05afde78e4760c4dd7ba42e3d1d6bd219698406b48494ca29ca2fecb65"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.5.10-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "faf09fee10f5fae823737e02074d1283",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 43069,
                "upload_time": "2022-08-03T16:08:17",
                "upload_time_iso_8601": "2022-08-03T16:08:17.219822Z",
                "url": "https://files.pythonhosted.org/packages/35/f6/065ded8503484303fc0f6a4c61c1fd340ca4a16b5e08b3993f3b1802166c/pypnusershub-1.5.10-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2518c8074c6eadd0872c873650c7eadb",
                    "sha256": "c2e8b953144b37962daaeb14fb06a8e975091cfd30988f3d7776767dada210f9"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.5.10.tar.gz",
                "has_sig": false,
                "md5_digest": "2518c8074c6eadd0872c873650c7eadb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 40494,
                "upload_time": "2022-08-03T16:08:18",
                "upload_time_iso_8601": "2022-08-03T16:08:18.730882Z",
                "url": "https://files.pythonhosted.org/packages/87/c7/4c4f41938ff0a16966c21a2a3ed496956a4d0a10eb65b0366e5f79c4c3a0/pypnusershub-1.5.10.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.5.9": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU Affero General Public License v3",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PnX-SI/UsersHub-authentification-module",
            "keywords": "",
            "license": "",
            "maintainer": "Parcs nationaux des \u00c9crins et des C\u00e9vennes",
            "maintainer_email": "geonature@ecrins-parcnational.fr",
            "name": "pypnusershub",
            "package_url": "https://pypi.org/project/pypnusershub/",
            "platform": "",
            "project_url": "https://pypi.org/project/pypnusershub/",
            "project_urls": {
                "Homepage": "https://github.com/PnX-SI/UsersHub-authentification-module"
            },
            "release_url": "https://pypi.org/project/pypnusershub/1.5.9/",
            "requires_dist": [
                "bcrypt",
                "flask-sqlalchemy",
                "flask",
                "psycopg2",
                "requests",
                "sqlalchemy",
                "utils-flask-sqlalchemy (>=0.2.6)",
                "flask-marshmallow",
                "marshmallow-sqlalchemy",
                "alembic",
                "pytest ; extra == 'tests'",
                "pytest-flask ; extra == 'tests'"
            ],
            "requires_python": "",
            "summary": "Python lib to authenticate using PN's UsersHub",
            "version": "1.5.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14949826,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32e8f55423768e023ee7dfc53fe211b9",
                    "sha256": "bb6c1dd89e921abfc3bfe2a86ac87df038754237f43f0e053cb62b1cdac384b4"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.5.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "32e8f55423768e023ee7dfc53fe211b9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 43019,
                "upload_time": "2022-01-12T12:24:59",
                "upload_time_iso_8601": "2022-01-12T12:24:59.183627Z",
                "url": "https://files.pythonhosted.org/packages/a2/ec/459883ae7aaa131176583b30f7da790aa60675bb4e72f759a3981ce42612/pypnusershub-1.5.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c341b4c544d3fb8bbee5682043c7b8a2",
                    "sha256": "f09a7cdde5a0f3b1edea910074fbe960ee4b8cbe8ee83a6606d9e8fa249dc6ec"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.5.9.tar.gz",
                "has_sig": false,
                "md5_digest": "c341b4c544d3fb8bbee5682043c7b8a2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 40314,
                "upload_time": "2022-01-12T12:25:00",
                "upload_time_iso_8601": "2022-01-12T12:25:00.446854Z",
                "url": "https://files.pythonhosted.org/packages/e0/53/cba3fb584805667b2386506cf54b3345b716cc867fdca3ccccc22a16c73b/pypnusershub-1.5.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.6.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: GNU Affero General Public License v3",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "# UsersHub-authentification-module\n\n[![pytest](https://github.com/PnX-SI/UsersHub-authentification-module/actions/workflows/pytest.yml/badge.svg)](https://github.com/PnX-SI/UsersHub-authentification-module/actions/workflows/pytest.yml)\n[![codecov](https://codecov.io/gh/PnX-SI/UsersHub-authentification-module/branch/master/graph/badge.svg?token=O57GQEH494)](https://codecov.io/gh/PnX-SI/UsersHub-authentification-module)\n\nModule Flask (Python) permettant de g\u00e9rer l'authentification suivant le mod\u00e8le de [UsersHub](https://github.com/PnX-SI/UsersHub/).\n\nPr\u00e9vu pour \u00eatre utilis\u00e9 comme un submodule git.\n\nN\u00e9cessite le sch\u00e9ma `utilisateurs` de UsersHub dans la BDD de l'application l'utilisant. Pour cela installez UsersHub dans la m\u00eame BDD ou uniquement son sch\u00e9ma : https://github.com/PnX-SI/UsersHub/blob/master/data/usershub.sql\n\nPar d\u00e9faut le sous-module utilise le mot de passe \"pass_plus\" (m\u00e9thode de hashage bcrypt) pour s'authentifier. Si vous souhaitez utiliser le champ \"pass\" (en md5), il faut passer le param\u00e8tre `PASS_METHOD = 'md5'` \u00e0 la configuration Flask de l'application parent qui utilise le sous-module.\n\n## Routes\n\n- login :\n  - parametres : login, password, id_application\n  - return : token\n\n## Fonction de d\u00e9coration\n\n- check_auth\n  - parametres : level = niveau de droit\n  - utilise le token pass\u00e9 en cookie de la requ\u00eate\n\n## Exemple d'usage\n\nPour disposer des routes de login/logout dans votre application Flask, ajoutez dans votre fichier de lancement de l'application (`server.py` par exemple) :\n\n```\n  from pypnusershub.routes import routes\n  app.register_blueprint(routes, url_prefix='/auth')\n```\n\nPour prot\u00e9ger une route :\n\n```\n  #Import de la librairie\n  from pypnusershub.routes import routes as fnauth\n\n  #Ajout d'un test d'authentification avec niveau de droit\n  @adresses.route('/', methods=['POST', 'PUT'])\n  @fnauth.check_auth(4)\n  def insertUpdate_bibtaxons(id_taxon=None):\n    ...\n```\n## Utilisation de l'API\n\n### Routes d\u00e9finies dans UsersHub\n\n* create_tmp_user : \n  * in : {donn\u00e9es sur l'utilisateur}\n  * return : {token}\n  * Cr\u00e9ation d'un utilisateur temporaire en base\n* valid_temp_user :\n  * in : {token, application_id}\n  * return : {role}\n  * Cr\u00e9ation utilisateur en base dans la table t_role et ajout d'un profil avec code 1 pour une l\u2019application donn\u00e9e\n* create_cor_role_token:\n  * in : {email}\n  * return : {role}\n  * G\u00e9n\u00e8re un token pour utilisateur ayant l\u2019email indiqu\u00e9 et stoque le token dans cor_role_token\n* change_password\n  * in: {token, password, password_confirmation}\n  * return : {role}\n  * Mise \u00e0 jour du mot de passe de l\u2019utilisateur et suppression du token en base\n* change_application_right\n  * in : {id_application, id_profil, id_role}\n  * return : {id_role, id_profil, id_application, role}\n  * Modifie le profil de l\u2019utilisateur pour l\u2019application \n* update_user\n  * in : {id_role, donn\u00e9es utilisateur}\n  * return : {role}\n  * Mise \u00e0 jour d'un r\u00f4le\n\n### M\u00e9thodes d\u00e9finies dans le module\n * connect_admin : d\u00e9corateur pour la connexion d\u2019un utilisateur type admin a une appli ici usershub. Param\u00e8tres \u00e0 renseigner dans config.py\n * post_usershub :\n  * route g\u00e9n\u00e9rique pour appeler les route usershub en tant qu'administrateur de l'appli en cours\n  * lance l\u2019action sp\u00e9cifi\u00e9\n  * si une post request est d\u00e9finie pour l\u2019action ex\u00e9cute la fonction\n\n\n### Configuration\nParam\u00e8tres \u00e0 rajouter dans le fichier de configuration (`config.py`)\n\n```\nURL_USERSHUB=\"http://usershub-url.ext\"\n\n# Administrateur de mon application\nADMIN_APPLICATION_LOGIN=\"admin-monapplication\"\nADMIN_APPLICATION_PASSWORD=\"monpassword\"\nADMIN_APPLICATION_MAIL=\"admin-monapplication@mail.ext\"\n```\n\n### Appel des routes\nPour disposer des routes dans votre application Flask, ajoutez dans votre fichier de lancement de l'application (`server.py` par exemple) :\n\n```\nfrom pypnusershub import routes_register\napp.register_blueprint(routes_register.bp, url_prefix='/pypn/register')\n```\n\n### Configuration des actions post request\n\nRajouter le param\u00e8tre `after_USERSHUB_request` \u00e0 la configuration. Ce param\u00e8tre est un tableau qui d\u00e9fini pour chaque action un ensemble d'op\u00e9ration \u00e0 r\u00e9aliser ensuite. Comme par exemple envoyer un mail.\n\n```\nfunction_dict = {\n    'create_cor_role_token': create_cor_role_token,\n    'create_temp_user': create_temp_user,\n    'valid_temp_user': valid_temp_user,\n    'change_application_right': change_application_right\n}\n```\n\nChaque fonction prend un param\u00e8tre en argument qui correspond aux donn\u00e9es retourn\u00e9e par la route de UsersHub\n\n## Installation\n\nCloner le repository ou t\u00e9l\u00e9charger une archive, puis dans le dossier :\n\n```\npython setup.py install\n```\n\nLe driver PostgreSQL Python, \"psycopg2\", peut avoir besoin d'\u00eatre compil\u00e9. Si\n\u00e0 l'installation vous obtenez un message d'erreur d\u00e9crivant un fichier de\nheader manquant (xxxx.h), comme par exemple :\n\n```\nfatal error: Python.h: Aucun fichier ou dossier de ce type\n```\n\nAlors il faudra installer au pr\u00e9alable les headers de votre version de Python,\nvotre version de postgres et un compilateur.\n\nPar exemple, sur Ubuntu avec Python 3.5 et PostgreSQL 9.5 :\n\n```\nsudo apt install python3.5-dev build-essential postgresql-server-dev-9.5\n```\n\nIl faut ensuite configurer la base de donn\u00e9es en \u00e9tant super-utilisateur.\n\nLa mani\u00e8re la plus courante pour se connecter \u00e0 la base de donn\u00e9es en ayant les droits super-utilisateur est de se logger avec l'utilisateur 'postgres'. Par exemple sous Ubuntu :\n\n```\nsudo su postgres\n```\n\nAssurez-vous d'avoir au moins cr\u00e9\u00e9 une base de donn\u00e9es. Par exemple sous Ubuntu :\n\n```\ncreatedb ma_db\n```\n\nIl faut ensuite cr\u00e9er un utilisateur. Par exemple :\n\n```\ncreateuser -P parcnational\n```\n\nPuis donner les droits \u00e0 cet utilisateur sur la base de donn\u00e9es :\n\n```\n$ psql\npostgres=# GRANT ALL PRIVILEGES ON DATABASE ma_db TO parcnational;\n```\n\nSQLAlchemy vous permettra de vous connecter \u00e0 la base de donn\u00e9es avec une URL\nde type :\n\n```\npostgresql://nom_utilisateur:mot_de_passe@host:port/db_name\n```\n\nPar exemple :\n\n```\npostgresql://parcnational:secret@127.0.0.1:5432/ma_db\n```\n\nIl vous faudra cr\u00e9er un schema nomm\u00e9 `utilisateurs` qui contient toutes les tables n\u00e9cessaires.\n\nUtilisez le SQL maintenu dans le d\u00e9p\u00f4t de UsersHub : https://github.com/PnX-SI/UsersHub/blob/master/data/usershub.sql\n\nPour l'\u00e9x\u00e9cuter, il faut avoir ajouter l'extension UUID \u00e0 votre base de donn\u00e9es. Pour le faire en ligne de commande en tant que super-utilisateur de PotsgreSQL : ``sudo -n -u postgres -s psql -d $db_name -c 'CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";'``.\n\n**Attention**, les commandes qui suivent sont obsol\u00e8tes, car le script SQL local a \u00e9t\u00e9 supprim\u00e9 du d\u00e9p\u00f4t pour utiliser celui de UsersHub.\n\nCe module contient le SQL pour le faire dans le fichier `db/schema.sql`. N\u00e9anmoins une commande vous permet de le faire automatiquement :\n\n```\npython -m pypnusershub init_schema url_de_la_db\n```\n\nExemple :\n\n```\npython -m pypnusershub init_schema postgresql://parcnational:secret@127.0.0.1:5432/ma_db\n```\n\n`python -m pypnusershub` permet aussi de supprimer le schema (`delete_schema`), remettre \u00e0 z\u00e9ro (`reset_schema`) et charger des donn\u00e9es de test (`load_fixtures`). Pour plus d'informations :\n\n```\npython -m pypnusershub --help\n```\n\nPlease note that you can only load the fixtures once, as they have UNIQUE constraints.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PnX-SI/UsersHub-authentification-module",
            "keywords": "",
            "license": "",
            "maintainer": "Parcs nationaux des \u00c9crins et des C\u00e9vennes",
            "maintainer_email": "geonature@ecrins-parcnational.fr",
            "name": "pypnusershub",
            "package_url": "https://pypi.org/project/pypnusershub/",
            "platform": null,
            "project_url": "https://pypi.org/project/pypnusershub/",
            "project_urls": {
                "Homepage": "https://github.com/PnX-SI/UsersHub-authentification-module"
            },
            "release_url": "https://pypi.org/project/pypnusershub/1.6.0/",
            "requires_dist": [
                "authlib",
                "bcrypt",
                "flask-sqlalchemy",
                "flask",
                "psycopg2",
                "requests",
                "sqlalchemy",
                "flask-marshmallow",
                "marshmallow-sqlalchemy",
                "alembic",
                "utils-flask-sqlalchemy (<1.0,>=0.3.0)",
                "pytest ; extra == 'tests'",
                "pytest-flask ; extra == 'tests'"
            ],
            "requires_python": "",
            "summary": "Python lib to authenticate using PN's UsersHub",
            "version": "1.6.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14949826,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "115d0476e844bc81f76beb991c966e0a",
                    "sha256": "33c5767c179c40ca972ee316a77795986ce2c4692b88787c88c5fc369da8d264"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.6.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "115d0476e844bc81f76beb991c966e0a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 43859,
                "upload_time": "2022-08-31T13:03:42",
                "upload_time_iso_8601": "2022-08-31T13:03:42.085708Z",
                "url": "https://files.pythonhosted.org/packages/90/1d/ea0c754058249ea7399ea04fab321d27fe463521a5f7486a850849ace55b/pypnusershub-1.6.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "859afedb561a3516825ea914815f8bec",
                    "sha256": "3e1667be3ddf9c766a102c3d7460b2101b55f6df3f58c55215e1a73525a484d6"
                },
                "downloads": -1,
                "filename": "pypnusershub-1.6.0.tar.gz",
                "has_sig": false,
                "md5_digest": "859afedb561a3516825ea914815f8bec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 40808,
                "upload_time": "2022-08-31T13:03:43",
                "upload_time_iso_8601": "2022-08-31T13:03:43.441379Z",
                "url": "https://files.pythonhosted.org/packages/1e/89/814c0edb71d8f05f6efdddd017062f916f3363f4d46ef142ee749f31d9cd/pypnusershub-1.6.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}