{
    "1.0.0": {
        "info": {
            "author": "Matthieu Poncin",
            "author_email": "poncin.matthieu@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3 :: Only",
                "Topic :: Security :: Cryptography"
            ],
            "description": "skrm [![Coverage Status](https://coveralls.io/repos/github/PoncinMatthieu/skrm/badge.svg?branch=master)](https://coveralls.io/github/PoncinMatthieu/skrm?branch=master)\n====\n\nskrm stands for simple keyring manager.\nIt is a small python script allowing you to store keys associated to tags into an encrypted file, using GPG.\n\nThis is a very handy solution for unix users to store securely their passwords and retreive them quicky.\n\n\nUser Prefs\n----------\nskrm uses an optional configuration file to avoid you setting every options in the command line.\nHere is an exemple of userpref file that should be placed in '~/.skrm/user.prefs':\n\n    File=/home/ponpon/.skrm/bdd.gpg\n    recipient=Poncin Matthieu\n\n\nUsage\n-----\n\n    usage: ./skrm [OPTIONS] [COMMANDS] [TAGS]\n    skrm stands for simple keyring manager, it stores keys with tags into a file encrypted using gpg.\n    skrm will ask for the master password to encrypt/decrypt the storing file.\n    OPTIONS:\n        -h, --help: Print usage.\n        -g, --get: Return keyrings matching strictly the given tags. This option is used by default. If a keyId is selected, a get or a search return only the keyring matching the keyId.\n        -s, --search: Return keyrings matching the given tags (tags are interpreted as a regex expression).\n        -c, --clip: Copy the key of the last matched keyring from a get or a search into the clipboard using xclip. Nothing will be printed out to the shell.\n    COMMANDS:\n        --file=[FILENAME]: use the given file to read/store keyrings.\n        --recipient=[USER_ID_NAME]: set the user id name for gpg to get the key and encrypt the file.\n        --pass=[MASTER_PASS]: set the master pass to use when encrypting or decrypting the file.\n        --add=[KEY]: add a key to the file with the specified tags.\n        --select=[KEYID]: select a keyring using its key id. To use with a command like \"remove\" or \"update\".\n        --remove: remove the selected key.\n        --update=[KEY]: update the selected key.\n        --backup=[HOSTDEST]: scp the bdd file to the given host destination.\n    TAGS:\n        A list of strings to define tags you want to use for any commands keyring related management.\n\n\nExamples\n--------\nTo add a new key with the associated tags: Password WebSite Twitter MyUserName\n\n    skrm --add=\"myPass\" Password WebSite Twitter MyUserName\n\nTo get one or multiple keys, you only need to specify the tags you want to match.\nThe tags are not case sensitive.\n\n    skrm twitter\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nIf you don't remember the exact string for your tags, you can use the option -s\n\n    skrm -s twit\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nTo copy directly your key into the clipboard\n\n    skrm -c twitter\n    -> copy the key into the clipboard.\n\nTo select a keyring, you must use its key id\n\n    skrm --select=0\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyUserName', 'myPass']\n\nTo remove a keyring\n\n    skrm --select=0 --remove\n\nTo update a key\n\n    skrm --select=0 --update=\"MyNewPass\"\n\nTo insert new tags to a keyring\n\n    skrm --select=0 --insert=2 MyNewTag1 MyNewTag2\n    -> 0 : ['Password', 'WebSite', 'Twitter', 'MyNewTag1', 'MyNewTag2', 'MyUserName', 'myPass']\n\nTo backup your bdd file to a remote server using scp\n\n    skrm --backup=\"myBackupServer:~/.skrm/\"",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PoncinMatthieu/skrm",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "skrm",
            "package_url": "https://pypi.org/project/skrm/",
            "platform": "",
            "project_url": "https://pypi.org/project/skrm/",
            "project_urls": {
                "Homepage": "https://github.com/PoncinMatthieu/skrm"
            },
            "release_url": "https://pypi.org/project/skrm/1.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple keyring manager - Allows you to store keys associated to tags into an encrypted file, using GPG.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 4802178,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0644decf96932ecb4fdea6049979bb00",
                    "sha256": "fc0d029e1b2ce5361443497801b158d16e8bcd9bbe91feae3c82ec8980ad1dee"
                },
                "downloads": -1,
                "filename": "skrm-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0644decf96932ecb4fdea6049979bb00",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5174,
                "upload_time": "2019-02-10T13:42:44",
                "upload_time_iso_8601": "2019-02-10T13:42:44.489857Z",
                "url": "https://files.pythonhosted.org/packages/11/e9/dffa393e9deb8e46abcb1678f82d3f0a3f0b8763f6ca59e747a46f5dbfa0/skrm-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}