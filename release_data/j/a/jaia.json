{
    "0.0.1": {
        "info": {
            "author": "Martin Gutierrez-Amigo",
            "author_email": "Martin Gutierrez-Amigo <martin00gutierrez@outlook.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "<a name=\"readme-top\"></a>\n<!-- PROJECT LOGO -->\n<div align=\"center\">\n  <h1 align=\"center\">JAIA</h3>\n  <h3 align=\"center\">Jupyter Ab Initio Analyzer</h3>\n  <p align=\"center\">\n    A general purpose tool for condensed matter data analysis in jupyterlab\n    <br />\n    <a href=\"https://github.com/mgamigo/JAIA/issues\">Report Bug</a>\n    \u00b7\n    <a href=\"https://github.com/mgamigo/JAIA/issues\">Request Feature</a>\n    <br />\n\t___\n    <br />\n    <a href=\"https://github.com/mgamigo/JAIA/Tutorial\"><strong>Explore the tutorials:</strong></a>\n    <br />\n    <a href=\"https://github.com/mgamigo/JAIA_dev/Tutorial/Plot_module.ipynb\">Plotting</a>\n    \u00b7\n    <a href=\"https://github.com/mgamigo/JAIA_dev/Tutorial/Utils_module.ipynb\">Utilities</a>\n  </p>\n</div>\n\n\n\n<!-- TABLE OF CONTENTS -->\n<details>\n  <summary>Table of Contents</summary>\n  <ol>\n    <li>\n      <a href=\"#about-the-project\">About The Project</a>\n      <ul>\n        <li><a href=\"#why\">Why?</a></li>\n      </ul>\n    </li>\n    <li>\n\t<a href=\"#usage\">Usage</a>\n\t<ul>\n            <li><a href=\"#plot-module\">Plotting tools</a></li>\n\t    <li><a href=\"#utils-module\">Other utilities</a></li>\n        </ul>\n    </li>\n    <li><a href=\"#installation\">Installation</a></li>\n    <li><a href=\"#roadmap\">Roadmap</a></li>\n  </ol>\n</details>\n\n<!-- ABOUT THE PROJECT -->\n## About The Project\nJAIA is a collection of tools for plotting results of condensed matter ab initio codes such as *Quantum Espresso, VASP, Wannier90, Wannier Tools...* Although it can be used from the command line, the main intention of JAIA is to be used within JupyterLab, thereby allowing users to centralize the data analysis of a whole project into a single file. The goal is to provide both (1) fast and easy plotting defaults to glance over results, while (2) being flexible and powerful enough to generate publication-ready figures.\n\n![gif demo](../media/demo.gif?raw=true)\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n### Why?\n> *A single file to rule them all...*\n\nMost of the tools contained on JAIA are nothing more than glorified python scripts I needed during my PhD. Although python libraries for ab initio data analysis already exist, I found many of them being disigned to work within the command line (often required to be run from a certain directory). JAIA is aimed at providing useful ab initio analysis functionalities to those people willing to use a single JupyterLab file to organize their projects.\n\nJAIA also intends to provide enough flexibility and modularity for most scenarios. To this end, useful [utilities](Tutorial/Utils_module.ipynb) are also provided in order to scrape data from the output of a variety of codes. Then, users can either further process the raw data or plot it in any desired way.\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Installation\n\n#### Create an isolated python enviroment\nIn case you want to create your own python enviroment and have it available in JupyterLab.\n```sh\n    virtualenv jaia_env                                 #Create yor new enviroment\n    source jaia_env/bin/activate                        #Load the enviroment\n    pip install ipykernel                               #In order to create a Kernel for this enviroment\n    python -m ipykernel install --user --name=JAIA      #Install your new kernel with your desired name\n    jupyter kernelspec list                             #Check that the new installed kernel appears\n```\nNow your new installed Kernel should be available in JupyterLab. You can select Kernel clicking at the top-right corner of JupyterLab.\n\n#### Installing JAIA\nYou can either install from pip as:\n```sh\n   pip install jaia\n```\n\n   Or cloning the git repository:\n   \n```sh\n   git clone https://github.com/mgamigo/JAIA.git\n   cd JAIA\n   pip install .\n```\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Usage\n\nAll the functions are properly documented (remember that in JupyterLab all the documentation can be conviniently accesed with the **shift + tab** shortcut). All the tools are demostrated in the **[tutorials](Tutorial)**, here is a brief summary of the main modules of JAIA and their current tools:\n\n### Plot module\nContains most of the plotting functionalities, currently being:\n- **Electronic band structures** of Quantum Espresso, Vasp, Wannier90 and WannierTools.\n    - Plotting results of different codes against each other.\n\nHere are some simple examples:\n```py\nplot.bands(file='DATA/bands/QE/results_bands/CsV3Sb5.bands.pwo',  #raw Quantum Espresso output file with the band structure\n           KPATH='DATA/bands/KPATH',   #File with the Kpath (in order to plot the ticks at the High symmetry points)\n           aux_file='DATA/bands/QE/results_scf/CsV3Sb5.scf.pwo', #File needed to read the number of electrons and lattice parameters\n           title='Nice QE plot ( \u0361\u275b\u202f\u035c\u0296 \u0361\u275b)')    # A title of your liking\n```\n<img src=\"../media/bands.png\" width=\"600\">\n\nCombining JAIA tools with the usual matplotlib sintax one can generate complex plots as this one (check the [tutorial](Tutorial/Plot_module.ipynb)):\n\n<img src=\"../media/bands_collage.png\" width=\"800\">\n\n### Utils module\n\nThe utils module has a variety of utilities mostly focussed on scraping data from output files of different codes. This tools combined can be usefull for various porpuses. All the functions are demostrated in this [tutorial](/Tutorial/Utils_module.ipynb).\nSo far the code supports:\n- **Grepping the number of electrons** from Quantum Espresso and VASP outputs.\n- **Grepping the Fermi level**.\n- **Grep the lattice parameters**.\n- **Grep the path** from a Quantum Espresso bands.pwi input.\n- **Grep the path and HSP labels** from a KPATH in the [TQC website](https://www.topologicalquantumchemistry.fr/#/) format. (Enter in any compound and click in the \"Download KPATH\" link).\n\n_(For more examples, please refer to the [Tutorials](Tutorial))._\n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n---\n\n## Roadmap\n\n- [x] Plot module\n    - [x] Plotting electronic band strucutres\n    - [ ] Plotting phonon spectras\n    - [ ] Plotting densities of states (DOS)\n    - [ ] Plotting surface DOS generated by WannierTools (ARPES simulations)\n    - [ ] Plotting contour energy DOS generated by WannierTools\n    - [ ] 3D Band structure plots\n- [x] Utils module\n    - [x] Grep tools to scrape data form OUTPUT files\n    - [ ] ...\n- [ ] Convergence analysis tools\n    - [ ] Quantum Espresso self consistent calculations\n    - [ ] Quantum Espresso phonon spectra\n    - [ ] Wannierizations for Wannier90\n- [ ] Crystall structure analysis tools\n    - [ ] Symmetry analysis\n    - [ ] Visualization tools\n    - [ ] ...\n- [ ] Charge density wave analysis\n    - [ ] Reading Quantum Espresso outputs\n    - [ ] Distort crystal structures according to a given phonon\n    - [ ] Linear combinations of condensing modes\n    - [ ] Computing Born\u2013Oppenheimer energy landscapes\n    - [ ] ...\n- [ ] ...\n\n##### Built With\n\n[![NumPy][numpy.js]][numpy-url]  [![Matplotlib][matplo.js]][matplo-url] \n\n<p align=\"right\">(<a href=\"#readme-top\">back to top</a>)</p>\n\n<!-- MARKDOWN LINKS & IMAGES -->\n[numpy-url]: https://numpy.org/\n[numpy.js]: https://img.shields.io/badge/numpy-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white\n\n[matplo-url]: https://matplotlib.org/\n[matplo.js]: https://img.shields.io/badge/Matplotlib-%23000000.svg?style=for-the-badge&logo=Matplotlib&logoColor=white\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mgamigo/JAIA",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jaia",
            "package_url": "https://pypi.org/project/jaia/",
            "platform": null,
            "project_url": "https://pypi.org/project/jaia/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mgamigo/JAIA/issues",
                "Homepage": "https://github.com/mgamigo/JAIA"
            },
            "release_url": "https://pypi.org/project/jaia/0.0.1/",
            "requires_dist": [
                "ipympl (==0.9.1)"
            ],
            "requires_python": ">=3.6",
            "summary": "A Jupyter Ab Initio Analalyzer tool with a variety of tools",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15765651,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0f154845d61afe232aeb952fb7ee72c9",
                    "sha256": "88ca317588c8454435f26ef515cc86903f53d74d6eebc09b05638607e2ab91e9"
                },
                "downloads": -1,
                "filename": "jaia-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0f154845d61afe232aeb952fb7ee72c9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 24040,
                "upload_time": "2022-11-14T18:34:31",
                "upload_time_iso_8601": "2022-11-14T18:34:31.261951Z",
                "url": "https://files.pythonhosted.org/packages/0c/87/855c7f3ded7e77ea57522b3d42612b6a1bf0e81619a7c5a3fae1b25d19a9/jaia-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9d6167a8bbc8e2dbc1c0ec1740033ca1",
                    "sha256": "9b77861d41d8f35a4972bec266eaeddb6c98cbce8d4df276c134c0eef8fe0d43"
                },
                "downloads": -1,
                "filename": "jaia-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9d6167a8bbc8e2dbc1c0ec1740033ca1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 26424,
                "upload_time": "2022-11-14T18:34:33",
                "upload_time_iso_8601": "2022-11-14T18:34:33.842893Z",
                "url": "https://files.pythonhosted.org/packages/f0/eb/982814b791746f228b5706167a95575f1f278414495a7ff7e4cc5d6c9715/jaia-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}