{
    "0.0.2": {
        "info": {
            "author": "yaphott",
            "author_email": "yaphott@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: System :: Logging",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/yaphott/yogger",
            "keywords": "yogger log logging dump stack trace locals",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yogger",
            "package_url": "https://pypi.org/project/yogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/yogger/",
            "project_urls": {
                "Homepage": "https://github.com/yaphott/yogger"
            },
            "release_url": "https://pypi.org/project/yogger/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.9, <4",
            "summary": "Ideal logging setup with utilities to dump the stack and local variables",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15998584,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c43e33ae702bef4e302bd2dfecb38b8",
                    "sha256": "c4bfb359d7b73da09d1fa1ebbff5437d54dcd37b6fc7fd722959d744339db790"
                },
                "downloads": -1,
                "filename": "yogger-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8c43e33ae702bef4e302bd2dfecb38b8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9, <4",
                "size": 11634,
                "upload_time": "2022-11-22T19:50:53",
                "upload_time_iso_8601": "2022-11-22T19:50:53.424879Z",
                "url": "https://files.pythonhosted.org/packages/c0/d8/029639495bbf05ff4878ed0288987cba1a5aacede323a4c2c7b98ece4d8a/yogger-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc58aa9878429438eee9aeed3324a89c",
                    "sha256": "66391c5b7704ab3080b81c49b8683416c289f3a64f79f83796e0813c19978cbb"
                },
                "downloads": -1,
                "filename": "yogger-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "fc58aa9878429438eee9aeed3324a89c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9, <4",
                "size": 12904,
                "upload_time": "2022-11-22T19:50:54",
                "upload_time_iso_8601": "2022-11-22T19:50:54.595332Z",
                "url": "https://files.pythonhosted.org/packages/20/b1/05955026a37b6ffa5be0aa9e024aea4c11ac2d8c96817d6d534f2c349704/yogger-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "yaphott",
            "author_email": "yaphott@proton.me",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: System :: Logging",
                "Topic :: Utilities"
            ],
            "description": "# Yogger\n\n[Yogger](https://github.com/yaphott/yogger) aims to provide an ideal logging setup with utilities to effectively represent interpreter stacks.\n\n> Supports `requests.Request` and `requests.Response` objects if the **Requests** package is installed.\n\nExample of logger output:\n\n```text\n[ 2022-11-17 10:16:09.0918  INFO  my_package.base ]  Something we want to log.\n[ 2022-11-17 10:16:09.0918  DEBUG  my_package.base ]  Something we want to log.\n[ 2022-11-17 10:16:09.0918  WARNING  my_package.base ]  Something we want to log.\n[ 2022-11-17 10:16:09.0918  ERROR  my_package.base ]  Something we want to log.\n[ 2022-11-17 10:16:09.0918  CRITICAL  my_package.base ]  Something we want to log.\n```\n\nExample of dictionary representation in dump:\n\n```python\nexample = {\n    \"user_id\": 123456790,\n    \"profile\": {\n        \"name\": \"John Doe\",\n        \"birthdate\": datetime.date(2000, 1, 1),\n        \"weight_kg\": 86.18,\n    },\n    \"video_ids\": [123, 456, 789],\n}\n```\n\n```text\nexample = <builtins.dict>\n  example['user_id'] = 123456790\n  example['profile'] = <builtins.dict>\n    example['profile']['name'] = 'John Doe'\n    example['profile']['birthdate'] = datetime.date(2000, 1, 1)\n    example['profile']['weight_kg'] = 86.18\n  example['video_ids'] = [123, 456, 789]\n```\n\nSimilarly for a dataclass:\n\n```python\n@dataclasses.dataclass\nclass Example:\n    user_id: int\n    profile: dict[str, str | float | datetime.date]\n    video_ids: list[int]\n```\n\n```text\nexample = <my_package.Example>\n  example.user_id = 'user_id' = example.user_id = 123456790\n  example.profile = 'profile' = example.profile = <builtins.dict>\n    example.profile['name'] = 'John Doe'\n    example.profile['birthdate'] = datetime.date(2000, 1, 1)\n    example.profile['weight_kg'] = 86.18\n  example.video_ids = 'video_ids' = example.video_ids = [123, 456, 789]\n```\n\n## Requirements:\n\n**Yogger** requires Python 3.9 or higher, is platform independent, and requires no outside dependencies.\n\n## Installing\n\nMost stable version from [**PyPi**](https://pypi.org/project/yogger/):\n\n```bash\npip install yogger\n```\n\nDevelopment version from [**GitHub**](https://github.com/yaphott/yogger):\n\n```bash\ngit clone git+https://github.com/yaphott/yogger.git\ncd yogger\npip install .\n```\n\n## Usage\n\nImport packages and instantiate a logger:\n\n```python\nimport logging\nimport yogger\n\nlogger = logging.getLogger(__name__)\n```\n\nInstall the logger class and configure with your package name:\n\n> Place at the start of the top-level function.\n\n```python\ndef _cli():\n    yogger.install()\n    yogger.configure(__name__, verbosity=1)\n```\n\n### About the `package_name` parameter\n\nThe `package_name` parameter gives Yogger an idea of what belongs to your application. This name is used to identify which frames to dump in the stack. So it\u2019s important what you provide there. If you are using a single module, `__name__` is always the correct value. If you are using a package, it\u2019s usually recommended to hardcode the name of your package there.\n\nFor example, if your application is defined in \"yourapplication/app.py\", you should create it with one of the two versions below:\n\n```python\nyogger.configure(\"yourapplication\")\n```\n\n```python\nyogger.configure(__name__.split(\".\")[0])\n```\n\nWhy is that? The application will work even with `__name__`, thanks to how resources are looked up. However, it will make debugging more painful. Yogger makes assumptions based on the import name of your application. If the import name is not properly set up, that debugging information may be lost.\n\n## Support for dumping the stack\n\n### Traces and exceptions\n\nUsing the `dump_on_exception` **context manager** dumps the exception and trace if an exception is raised:\n\n```python\nwith yogger.dump_on_exception(=):\n    raise SomeException\n```\n\n```python\nwith yogger.dump_on_exception(\n    # Uncomment to override\n    # dump_path=\"./stack_dump.tmp\",\n):\n    raise SomeException\n```\n\nThis is equivalent to:\n\n```python\nimport inspect\n```\n\n```python\ntry:\n    raise SomeException\nexcept Exception as e:\n    trace = inspect.trace()\n    if len(trace) > 1:\n        with open(\"./stack_dump.tmp\", mode=\"a\", encoding=\"utf-8\") as f:\n            yogger.dump(f, trace[1:])\n```\n\n### Stacks\n\nSetting `dump_locals=True` when running `yogger.configure` dumps a representation of the caller's stack upon logging with a level of warning or higher.\n\nTo manually dump the stack, something like this would suffice:\n\n```python\nimport inspect\n```\n\n```python\nstack = inspect.stack()\nif len(stack) > 2:\n    with open(\"./example.log\", mode=\"w\", encoding=\"utf-8\") as f:\n        yogger.dump(f, stack[2:][::-1])\n```\n\nIf you simply want the string representation, use the `yogger.dumps` function:\n\n```python\nstack = inspect.stack()\nif len(stack) > 2:\n    trace_repr = yogger.dumps(stack[2:][::-1])\n```\n\n---\n\n## Library\n\n### yogger.install\n\nFunction to install the logger class and instantiate the global logger.\n\n| Function Signature |\n| :----------------- |\n| install()          |\n\n| Parameters |\n| :--------- |\n| Empty      |\n\n### yogger.configure\n\nFunction to prepare for logging.\n\n| Function Signature                                                          |\n| :-------------------------------------------------------------------------- |\n| configure(package_name, \\*, verbosity=0, dump_locals=False, dump_path=None) |\n\n| Parameters                                           |                                                                                                                              |\n| :--------------------------------------------------- | :--------------------------------------------------------------------------------------------------------------------------- |\n| **package_name**_(str)_                              | Name of the package to dump from the stack.                                                                                  |\n| **verbosity**_(int)_                                 | Level of verbosity (0-2) for log messages.                                                                                   |\n| **dump_locals**_(bool)_                              | Dump the caller's stack when logging with a level of warning or higher.                                                      |\n| **dump_path**_(str \\| bytes \\| os.PathLike \\| None)_ | Custom path to use when dumping with `dump_on_exception` or when `dump_locals=True`, otherwise use a temporary path if None. |\n\n### yogger.dump_on_exception\n\nContext manager to dump a representation of the exception and trace stack to file if an exception is raised.\n\n| Function Signature                |\n| :-------------------------------- |\n| dump_on_exception(dump_path=None) |\n\n| Parameters                                           |                                             |\n| :--------------------------------------------------- | :------------------------------------------ |\n| **dump_path**_(str \\| bytes \\| os.PathLike \\| None)_ | Override the file path to use for the dump. |\n\n### yogger.dump\n\nFunction to write the representation of an interpreter stack using a file object.\n\n| Function Signature    |\n| :-------------------- |\n| dump(file_obj, stack) |\n\n| Parameters                                                |                                 |\n| :-------------------------------------------------------- | :------------------------------ |\n| **file_obj**_(str \\| io.TextIOBase \\| io.BufferedIOBase)_ | File object to use for writing. |\n| **stack**_(list[inspect.FrameInfo])_                      | Stack of frames to dump.        |\n\n### yogger.dumps\n\nFunction to create a string representation of an interpreter stack.\n\n| Function Signature |\n| :----------------- |\n| dumps(stack)       |\n\n| Parameters                           |                               |\n| :----------------------------------- | :---------------------------- |\n| **stack**_(list[inspect.FrameInfo])_ | Stack of frames to represent. |\n\n### yogger.pformat\n\nFunction to create a string representation of a variable's name and value.\n\n| Function Signature   |\n| :------------------- |\n| pformat(name, value) |\n\n| Parameters       |                                    |\n| :--------------- | :--------------------------------- |\n| **name**_(str)_  | Name of the variable to represent. |\n| **value**_(str)_ | Value to represent.                |\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/yaphott/yogger",
            "keywords": "yogger log logging dump stack trace locals",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yogger",
            "package_url": "https://pypi.org/project/yogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/yogger/",
            "project_urls": {
                "Homepage": "https://github.com/yaphott/yogger"
            },
            "release_url": "https://pypi.org/project/yogger/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.9, <4",
            "summary": "Ideal logging setup with utilities to effectively represent interpreter stacks",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15998584,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aaabe162c9f25f11e05e6cb371d71204",
                    "sha256": "ce98c5bb23cfed653b943b058a05378ce38e89042da8f8c4a71ea15b1b7bf3c4"
                },
                "downloads": -1,
                "filename": "yogger-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "aaabe162c9f25f11e05e6cb371d71204",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9, <4",
                "size": 13776,
                "upload_time": "2022-12-05T18:01:41",
                "upload_time_iso_8601": "2022-12-05T18:01:41.671078Z",
                "url": "https://files.pythonhosted.org/packages/63/aa/2615e19a3287a792be7718bb34bf9f60f69264c2e2bc2b1d41aa4c4cadbd/yogger-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8d585520142aad0e91a1c4e050ecfbd3",
                    "sha256": "0f35f41216a20c5c8fec0b1a5b88f9070aacfca4ef6b0b27748ea8f0f0eb60b2"
                },
                "downloads": -1,
                "filename": "yogger-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "8d585520142aad0e91a1c4e050ecfbd3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9, <4",
                "size": 15308,
                "upload_time": "2022-12-05T18:01:43",
                "upload_time_iso_8601": "2022-12-05T18:01:43.947542Z",
                "url": "https://files.pythonhosted.org/packages/45/b0/2e67a334647b096142dead8da30a11bf360969384ff50669b5675d599518/yogger-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}