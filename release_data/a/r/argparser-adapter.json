{
    "1.4": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://nmrhub.org",
            "keywords": "",
            "license": "",
            "maintainer": "gweatherby",
            "maintainer_email": "gweatherby@uchc.edu",
            "name": "argparser-adapter",
            "package_url": "https://pypi.org/project/argparser-adapter/",
            "platform": null,
            "project_url": "https://pypi.org/project/argparser-adapter/",
            "project_urls": {
                "Funding": "https://nmrhub.org",
                "Homepage": "https://nmrhub.org"
            },
            "release_url": "https://pypi.org/project/argparser-adapter/1.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Add argparser argument based on object heuristics",
            "version": "1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16129483,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2234123faa086051151da490bbb49ff6",
                    "sha256": "eee2391c623e6a125719796686ed92171c1e9725857f52864dfaea65386c01d7"
                },
                "downloads": -1,
                "filename": "argparser_adapter-1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2234123faa086051151da490bbb49ff6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4221,
                "upload_time": "2022-11-22T14:21:12",
                "upload_time_iso_8601": "2022-11-22T14:21:12.727485Z",
                "url": "https://files.pythonhosted.org/packages/d0/92/200183ccaaf6814c40167393dfa5fc1278b4092fd65c242c7017c9463a3a/argparser_adapter-1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.4.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://nmrhub.org",
            "keywords": "",
            "license": "",
            "maintainer": "gweatherby",
            "maintainer_email": "gweatherby@uchc.edu",
            "name": "argparser-adapter",
            "package_url": "https://pypi.org/project/argparser-adapter/",
            "platform": null,
            "project_url": "https://pypi.org/project/argparser-adapter/",
            "project_urls": {
                "Funding": "https://nmrhub.org",
                "Homepage": "https://nmrhub.org"
            },
            "release_url": "https://pypi.org/project/argparser-adapter/1.4.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Add argparser argument based on object heuristics",
            "version": "1.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16129483,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b8d986649e67d236d3bbb491f2d32e6b",
                    "sha256": "60752168615fc20b9de2bdc98bd70d1b923cb5a7cf8510963f610530fced50d1"
                },
                "downloads": -1,
                "filename": "argparser_adapter-1.4.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b8d986649e67d236d3bbb491f2d32e6b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4238,
                "upload_time": "2022-12-13T11:29:16",
                "upload_time_iso_8601": "2022-12-13T11:29:16.170941Z",
                "url": "https://files.pythonhosted.org/packages/ae/aa/7a11e122353b2ca705a6cc3fa3b5cd6cb530cb94ebb3177f9281b6a3d846/argparser_adapter-1.4.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License"
            ],
            "description": "argparser_adapter\n=================\n\nThis package provides automatic adding of arguments to an argparser. ArgumentParser\nbased on a simple method naming convention.\n\nBasic Usage\n-----------\n\nWrite your class with methods you wish called from a command line decorated with *@CommandLine()*\nCreate an **ArgparserAdapter**, passing your object as a constructor. Decorated methods\nwill be added to an argparser via the *register* call as -- arguments. After parsing,\n*call_specified_methods* will call methods specified on command. ArgparseAdapter will\nattempt to convert command line strings to appropriate types if Python `type hints`_ are\nprovided.\n\nCommandLine Options\n~~~~~~~~~~~~~~~~~~~\nArguments may be designed as required using *@CommandLine(required=True).* Default values may\nbe specified with *@CommandLine(default=10).* Note specifying both required and a default is possible\nbut not useful.\n\nLogging\n~~~~~~~\nLogging is to: **logging.getLogger('argparser_adapter')**\n\nExample\n~~~~~~~\n\n::\n\n    import argparse\n    import logging\n    from ipaddress import IPv4Address\n\n    from argparser_adapter import ArgparserAdapter\n    from argparser_adapter.argparser_adapter import CommandLine\n\n\n    class Something:\n\n        @CommandLine()\n        def seven(self) -> int:\n            # no help for this argument\n            print(7)\n            return 7\n\n        @CommandLine()\n        def double(self, x):\n            \"\"\"double a number\"\"\"\n            print(2 * int(x))\n\n        @CommandLine()\n        def sum(self, x: int, y: int):\n            \"\"\"sum arguments\"\"\"\n            print(x + y)\n\n        @CommandLine(default=10)\n        def triple(self, x: int):\n            \"\"\"triple a value\"\"\"\n            print(3 * int(x))\n\n        @CommandLine()\n        def ipv4address(self, x: IPv4Address):\n            \"\"\"Print ip address\"\"\"\n            print(type(x))\n            print(x)\n\n        @CommandLine()\n        def binary(self, value: bool):\n            \"\"\"True or false\"\"\"\n            print(value)\n\n        @CommandLine(required=True)\n        def happy(self, v: str):\n            \"\"\"Report how happy we are\"\"\"\n            print(f\"Happy is {v}\")\n\n\n    def main():\n        something = Something()\n        adapter = ArgparserAdapter(something, group=False, required=False)\n        parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n        adapter.register(parser)\n        args = parser.parse_args()\n        adapter.call_specified_methods(args)\n\n\n    if __name__ == \"__main__\":\n        main()\n\nNote the *double* will receive a string and must convert it to an integer. The\ntype hint in *triple* ensures the argument will be an integer.\n\nThe resulting argument argparser help is:\n\n::\n\n    usage: decoratortest.py [-h] [--binary value] [--double x] --happy v\n                            [--ipv4address x] [--seven] [--sum x y] [--triple x]\n\n    optional arguments:\n      -h, --help       show this help message and exit\n      --binary value   True or false (default: None)\n      --double x       double a number (default: None)\n      --happy v        Report how happy we are (default: None)\n      --ipv4address x  Print ip address (default: None)\n      --seven\n      --sum x y        sum arguments (default: None)\n      --triple x       triple a value (default: 10)\n\n\nDocstrings, if present, become help arguments.\n\nAdvanced usage\n______________\nWhen type conversion fails, the method\n\n::\n\n    def param_conversion_exception(self, e: Exception, method_name: str, parameter_name: str, parameter_type: type,\n                                   value: str) -> Any:\n\nis called. The default behavior is to raise a ValueError_ exception including the method and parameter names, the value\npassed and the original exception message. This method is provided for subclasses to override,\nif desired. An implementation should raise an Exception or return a suitable parameter for\ncalling *method_name*.\n\nAlternative packages\n--------------------\nMore complete packages are available for this purpose, such as Click_. This implementation is\nintended to be simple, lightweight and easy to use.\n\n.. _type hints: https://docs.python.org/3/library/typing.html\n.. _ValueError: https://docs.python.org/3/library/exceptions.html#ValueError\n.. _Click: https://click.palletsprojects.com/\n\n\n\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NMRbox/argparser_adapter",
            "keywords": "",
            "license": "",
            "maintainer": "gweatherby",
            "maintainer_email": "gweatherby@uchc.edu",
            "name": "argparser-adapter",
            "package_url": "https://pypi.org/project/argparser-adapter/",
            "platform": null,
            "project_url": "https://pypi.org/project/argparser-adapter/",
            "project_urls": {
                "Funding": "https://nmrhub.org",
                "Homepage": "https://github.com/NMRbox/argparser_adapter"
            },
            "release_url": "https://pypi.org/project/argparser-adapter/2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Add argparser argument based on object heuristics",
            "version": "2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16129483,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e239be3056bc4b3d197a304119485dd2",
                    "sha256": "a20a2084356b0775a8f2bbe010997d5d7e06c22bb5f16bb7e780a2f4626407e3"
                },
                "downloads": -1,
                "filename": "argparser_adapter-2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e239be3056bc4b3d197a304119485dd2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6166,
                "upload_time": "2022-12-16T19:23:50",
                "upload_time_iso_8601": "2022-12-16T19:23:50.127603Z",
                "url": "https://files.pythonhosted.org/packages/ff/f5/4090d36d6fa578547f65e80b954f6d3bf6a2e9e0ab7f63a0d1effd5d8211/argparser_adapter-2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}