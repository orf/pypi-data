{
    "0.1.0": {
        "info": {
            "author": "Orit Davidovich",
            "author_email": "orit.davidovich@ibm.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/IBM/doframework",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "doframework",
            "package_url": "https://pypi.org/project/doframework/",
            "platform": "",
            "project_url": "https://pypi.org/project/doframework/",
            "project_urls": {
                "Homepage": "https://github.com/IBM/doframework"
            },
            "release_url": "https://pypi.org/project/doframework/0.1.0/",
            "requires_dist": [
                "numpy",
                "pandas",
                "matplotlib",
                "ray[default,k8s,serve] (>=1.4.1)",
                "rayvens",
                "ibm-cos-sdk (>=2.10.0)",
                "boto3 (>=1.17.110)",
                "aiohttp (>=3.7.4)",
                "aioredis (>=1.3.1)",
                "scikit-learn (>=0.24.1)",
                "scipy",
                "PuLP (>=2.4)",
                "GPy (>=1.10.0)"
            ],
            "requires_python": ">=3.9",
            "summary": "Testing framework for data-driven decision-optimization algorithms.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14058012,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ace2516b21514bb87a92d0b346b73537",
                    "sha256": "a36a2769a2d8b4533f2db9985951db8bfa4bc35a7b001bb658407e7ec878f3d6"
                },
                "downloads": -1,
                "filename": "doframework-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ace2516b21514bb87a92d0b346b73537",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 53720,
                "upload_time": "2022-02-06T16:59:01",
                "upload_time_iso_8601": "2022-02-06T16:59:01.770330Z",
                "url": "https://files.pythonhosted.org/packages/2c/da/6053a5b05a0a9370a96adfe4c5ba2e6e296a0f5ca64763c659290458ce8d/doframework-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "60a25bac0926416362ea4b41a7721f8b",
                    "sha256": "d50ee39d4cbd10e2c5b01cd84a7c7ffad5b7076756c01120d3a8c387fa676486"
                },
                "downloads": -1,
                "filename": "doframework-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "60a25bac0926416362ea4b41a7721f8b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 43964,
                "upload_time": "2022-02-06T16:59:03",
                "upload_time_iso_8601": "2022-02-06T16:59:03.810509Z",
                "url": "https://files.pythonhosted.org/packages/f4/c1/3520a70284a80f5169351ba48c0421a34350b613650bd9e20a57b4914dd0/doframework-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Orit Davidovich",
            "author_email": "orit.davidovich@ibm.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/IBM/doframework",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "doframework",
            "package_url": "https://pypi.org/project/doframework/",
            "platform": "",
            "project_url": "https://pypi.org/project/doframework/",
            "project_urls": {
                "Homepage": "https://github.com/IBM/doframework"
            },
            "release_url": "https://pypi.org/project/doframework/0.1.1/",
            "requires_dist": [
                "numpy",
                "pandas",
                "matplotlib",
                "ray[default,k8s,serve] (>=1.4.1)",
                "rayvens",
                "ibm-cos-sdk (>=2.10.0)",
                "boto3 (>=1.17.110)",
                "aiohttp (>=3.7.4)",
                "aioredis (>=1.3.1)",
                "scikit-learn (>=0.24.1)",
                "scipy",
                "PuLP (>=2.4)",
                "GPy (>=1.10.0)"
            ],
            "requires_python": ">=3.6",
            "summary": "A testing framework for data-driven decision-optimization algorithms.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14058012,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b4990527e813b1c7f525c245f430afa1",
                    "sha256": "b231d29fd5656a2693ba6c5431c3336b1807c6381e5f172ea25c508e29b11fb0"
                },
                "downloads": -1,
                "filename": "doframework-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b4990527e813b1c7f525c245f430afa1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 53720,
                "upload_time": "2022-02-06T19:57:16",
                "upload_time_iso_8601": "2022-02-06T19:57:16.998980Z",
                "url": "https://files.pythonhosted.org/packages/4c/a6/8363445d97c6b0799d98763c9d6b79ae298fdae7572ffef4dbde52cdb74c/doframework-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f9fcbc069e1ed6802fbf5dc1d9701d6",
                    "sha256": "905850b4fd177275b9dc29feefd27c9876381da872b0e7662cbd491378495109"
                },
                "downloads": -1,
                "filename": "doframework-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "6f9fcbc069e1ed6802fbf5dc1d9701d6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 43964,
                "upload_time": "2022-02-06T19:57:18",
                "upload_time_iso_8601": "2022-02-06T19:57:18.389337Z",
                "url": "https://files.pythonhosted.org/packages/10/5d/980d27299fa88029b44a555cacf7647fc2732d576ebe520365b6e50b1d4d/doframework-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Orit Davidovich",
            "author_email": "orit.davidovich@ibm.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/IBM/doframework",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "doframework",
            "package_url": "https://pypi.org/project/doframework/",
            "platform": "",
            "project_url": "https://pypi.org/project/doframework/",
            "project_urls": {
                "Homepage": "https://github.com/IBM/doframework"
            },
            "release_url": "https://pypi.org/project/doframework/0.1.2/",
            "requires_dist": [
                "numpy",
                "pandas",
                "matplotlib",
                "ray[default,k8s,serve] (>=1.4.1)",
                "rayvens",
                "ibm-cos-sdk (>=2.10.0)",
                "boto3 (>=1.17.110)",
                "aiohttp (>=3.7.4)",
                "aioredis (>=1.3.1)",
                "scikit-learn (>=0.24.1)",
                "scipy",
                "PuLP (>=2.4)",
                "GPy (>=1.10.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "A testing framework for data-driven decision-optimization algorithms.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14058012,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "827f6b7eda60b5fb59b64a3b4bd5afb0",
                    "sha256": "b4913a4939f0cf61a7af5d9de0d04a53dfec7b4d37a9df21fc91be5d679e8cff"
                },
                "downloads": -1,
                "filename": "doframework-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "827f6b7eda60b5fb59b64a3b4bd5afb0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 53749,
                "upload_time": "2022-02-08T16:33:52",
                "upload_time_iso_8601": "2022-02-08T16:33:52.820531Z",
                "url": "https://files.pythonhosted.org/packages/95/3e/6328d3cf1b82656ecd12fd9e455407f9768306c63574a53890985ea60019/doframework-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2d053b7cc4189ce377b77601c1dc75ee",
                    "sha256": "9dac7e613de755d5478020157fbb8a7d82eb523a9f7f178b1c314a2c01c42695"
                },
                "downloads": -1,
                "filename": "doframework-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "2d053b7cc4189ce377b77601c1dc75ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 44004,
                "upload_time": "2022-02-08T16:33:54",
                "upload_time_iso_8601": "2022-02-08T16:33:54.927735Z",
                "url": "https://files.pythonhosted.org/packages/bc/64/52ef74defefe959f6df4e1f023210fa9e63b01aa446f53d221f66b87a412/doframework-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Orit Davidovich",
            "author_email": "orit.davidovich@ibm.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description": "<!--\n# Copyright IBM Corporation 2022\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n-->\n\n# DOFramework\n\n`doframework` is a testing framework for decision-optimization model learning algorithms. Such algorithms learn part or all of a decision-optimization model from data and solve the model to produce a predicted optimal solution. \n\n`doframework` randomly generates multiple optimization problems (f,O,D,x*) for your algorithm to learn and solve: \n* f is a continuous piece-wise linear function defined over a domain in d-dimensional space (d>1),\n* O is a feasibility region in dom(f) defined by linear constraints,\n* D = (X,y) is a dataset derived from f,\n* x* is the true optimum of f in O (minimum or maximum).\n\nThe testing framework feeds your algorithm constraints and data (O,D) and collects its predicted optimum. The algorithm's predicted optimal value can then be compared to the true optimal value f(x*). By comparing the two over multiple randomly generated optimization problems, `doframework` produces a **prediction profile** for your algorithm.\n\n`doframework` integrates with your algorithm (written in Python).\n\n# Design\n\n`doframework` was designed for optimal cloud distribution following an event-driven approach. \n\n`doframework` was built on top of [ray](https://www.ray.io/ \"Ray -- fast and simple distributed computing\") for cloud distribution and [rayvens](https://github.com/project-codeflare/rayvens \"Rayvens augments Ray with events\") for event driven management.\n\n# Requirements\n\n`doframework` was written for Python version >= 3.8.0. \n\n`doframework` can run either locally or remotely. For optimal performance, run it on a Kubernetes cluster. Cloud configuration is currently available for AWS and IBM Cloud [OpenShift](https://docs.openshift.com/ \"RedHat OpenShift Documentation\") clusters.\n\nThe framework relies on Cloud Object Storage (COS) to interact with simulation products. Configuration is currently available for [AWS](https://aws.amazon.com/s3/ \"AWS S3\") or [IBM COS](https://www.ibm.com/cloud/object-storage \"IBM Cloud Object Storage\").\n\n# Install\n\nTo run `doframework` locally, install with\n\n```\n$ pip install doframework\n```\n\n# Configs\n\nCOS specifications are provided in a `configs.yaml`. \n\nThe `configs.yaml` includes the list of source and target bucket names (under `s3:buckets`). Credentials are added under designated fields.\n\nCurrently, two cloud service providers are available under `s3:cloud_service_provider`: `aws` and `ibm`.\n\n`s3:endpoint_url` is optional for AWS.\n\n```\ns3:\n    buckets:\n        inputs: '<inputs-bucket>'\n        inputs_dest: '<inputs-dest-bucket>'\n        objectives: '<objectives-bucket>'\n        objectives_dest: '<objectives-dest-bucket>'\n        data: '<data-bucket>'\n        data_dest: '<data-dest-bucket>'\n        solutions: '<solutions-bucket>'\n    aws_secret_access_key: 'xxxx'\n    aws_access_key_id: 'xxxx'\n    endpoint_url: 'https://xxx.xxx.xxx'\n    region: 'xx-xxxx'\n    cloud_service_provider: 'aws'\n\n```\n**Bucket names above must be distinct**.\n\n# Inputs\n\n`input.json` files provide the necessary metadata for the random genration of optimization problems.\n\n`doframework` will run end to end, once `input.json` files are uploaded to `<inputs_bucket>`. \n\nThe jupyter notebook `./notebooks/inputs.ipynb` allows you to automatically generate input files and upload them to `<inputs_bucket>`.\n\nHere is an example of an input file (see input samples `input_basic.json` and `input_all.json` under `./inputs`).\n\n\n```\n{     \n    \"f\": {\n        \"vertices\": {\n            \"num\": 7,\n            \"range\": [[5.0,20.0],[0.0,10.0]],\n        },\n        \"values\": {\n            \"range\": [0.0,5.0]\n        },\n    },\n    \"omega\" : {\n        \"ratio\": 0.8,\n        \"scale\": 0.01\n    },\n    \"data\" : {\n        \"N\": 750,\n        \"noise\": 0.01,\n        \"policy_num\": 2,\n        \"scale\": 0.4\n    },\n    \"input_file_name\": \"input.json\"\n}\n```\n\n`f:vertices:num`: number of vertices in the piece-wise linear graph of f.<br>\n`f:vertices:range`: f domain will be inside this box range.<br>\n`f:values:range`: range of f values.<br>\n`omega:ratio`: vol(O) / vol(dom(f)) >= ratio.<br>\n`omega:scale`: scale of jitter when sampling feasibility regions (as a ratio of domain diameter).<br>\n`data:N`: number of data points to sample.<br>\n`data:noise`: response variable noise.<br>\n`data:policy_num`: number of centers in Gaussian mix distribution of data.<br>\n`data:scale`: max STD of Gaussian mix distribution of data (as a ratio of domain diameter).\n\nIt's a good idea to start experimenting on low-dimensional problems. \n\n# User App Integration\n\nYour algorithm will be integrated together with `doframework` once it is decorated with `doframework.resolve`. \n\nA `doframework` experiment runs with `doframework.run()`. The `run()` utility accepts the decorated model and a path to the `configs.yaml`.\n\nHere is an example user application `module.py`.\n\n```\nimport doframework as dof\n\n@dof.resolve\ndef alg(data: np.array, constraints: np.array, **kwargs):\n    ...    \n    return optimal_arg, optimal_val, regression_model\n\nif __name__ == '__main__':\n\n    dof.run(alg, 'configs.yaml', objectives=5, datasets=3, **kwargs)\n```\n\nThe testing framework supports the following inputs to your algorithm: \n\n`data`: 2D np.array with features X = data[ : , :-1] and response variable y = data[ : ,-1].<br>\n`constraints`: linear constraints as a 2D numpy array A. A data point x satisfies the constraints when A[ : , :-1]*x + A[ : ,-1] <= 0.<br>\n`lower_bound`: lower bound per feature variable.<br>\n`upper_bound`: upper bound per feature variable.<br>\n`init_value`: optional initial value.<br>\n\nThe `run()` utility accepts the arguments:\n\n`objectives`: number of objective targets to generate per input file.<br>\n`datasets`: number of datasets to generate per objective target.<br>\n`feasibility_regions`: number of feasibility regions to generate per objective and dataset.<br>\n`distribute`: True to run distributively, False to run sequentially.<br>\n`logger`: True to see logs, False otherwise.<br>\n`after_idle_for`: stop running when event stream is idle after this many seconds.<br>\n\n# Algorithm Prediction Profile\n\nOnce you are done running a `doframework` experiment, run the notebook `notebooks/profile.ipynb`. It will fetch the relevant experiment products from the target COS buckets and produce the algorithm's prediction profile and prediction probabilities.\n\n`doframework` produces three types of experiment products files:\n\n* `objective.json`: containing information on (f,O,x*) \n* `data.csv`: containing the dataset the algorithm accepts as input\n* `solution.json`: containing the algorithm's predicted optimum\n\nSee sample files under `./outputs`/\n\n# Kubernetes Cluster\n\nTo run `doframework` on a K8S cluster, make sure you are on the cluster's local `kubectl` context. Log into your cluster, if necessary (applicable to OpenShift, see doc).\n\nYou can check your local `kubectl` context and change it if necessary with\n```\n$ kubectl config current-context\n$ kubectl config get-contexts\n$ kubectl config use-context cluster_name\n>> Switched to context \"cluster_name\".\n```\n\nNow `cd` into your project's folder and run the setup bash script `doframework-setup.sh`. The setup script will generate the cluster configuration file `doframework.yaml` in your project's folder. The setup script requires the absolute path to your `configs.yaml`. Otherwise, it assumes a file `configs.yaml` is located under your project's folder. Running the setup script will establish the `ray` cluster. \n\n```\n$ cd <user_project_folder>\n$ doframework-setup.sh --configs ~/path/to/configs.yaml\n```\n\nYou have the option to adapt `doframework.yaml` to fit your application. \n\nUse the flag `--project-requirements` to specify the absolute path to your `requirements.txt` file. It will be `pip install -r requirements.txt` on your cluster nodes. \n\nUse the flag `--project-dir` to specify the absolute path to your project. It will be pip installed on your cluster nodes. \n```\n$ doframework-setup.sh --configs ~/path/to/configs.yaml --project-requirements <absolute_requirements_path> --project-dir <absolute_project_path>\n```\n\nUse the `--skip` flag to skip re-generating the `doframework.yaml`.\n```\n$ doframework-setup.sh --skip\n```\nOr, in case you are familiar with `ray`, run instead \n```\n$ ray up doframework.yaml --no-config-cache --yes\n```\nUpload `input.json` file(s) to your `<inputs_bucket>`. Now you can submit your application `module.py` to the cluster\n```\n$ ray submit doframework.yaml module.py\n```\n\n# Ray Cluster\n\nTo observe the `ray` dashboard, connect to `http://localhost:8265` in your browser. See the OpenShift doc for OpenShift-specific instructions.\n\nSome useful health-check commands: \n\n* Check the status of `ray` pods\n```\n$ kubectl get pods -n ray\n```\n* Check the status of the `ray` head node\n```\n$ kubectl describe pod rayvens-cluster-head-xxxxx -n ray\n```\n* Monitor autoscaling with\n```\n$ ray exec doframework.yaml 'tail -n 100 -f /tmp/ray/session_latest/logs/monitor*'\n```\n* Connect to a terminal on the head node\n```\n$ ray attach doframework.yaml\n$ ...\n$ exit\n```\n* Get a remote shell to the cluster manually (find the head node ID with `kubectl describe`)\n```\n$ kubectl -n ray exec -it rayvens-cluster-head-z97wc -- bash\n```\n\nAfter introducing manual changes to `doframework.yaml`, update with\n```\n$ ray up doframework.yaml --no-config-cache --yes\n```\n\nShutdown the `ray` cluster with\n```\n$ ray down -y doframework.yaml\n```\n\n# Test\n\nRun the setup bash script `doframework-setup.sh` with the `--example` flag to generate the test script  `doframework_example.py` in your project folder.\n```\n$ cd <user_project_folder>\n$ doframework-setup.sh  --configs ~/path/to/configs.yaml --example\n```\n\nTo run the test script locally, use\n```\n$ python doframework_example.py --configs ~/path/to/configs.yaml\n```\n\nTo run the test script on your K8S cluster, use\n```\n$ ray submit doframework.yaml doframework_example.py --configs configs.yaml\n```\n[NOTE: we are using the path to the `configs.yaml` that was mounted on cluster nodes under `$HOME`.]\n\nMake sure to upload input json files to `<inputs_bucket>` once you run `doframework_example.py`.\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/IBM/doframework",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "doframework",
            "package_url": "https://pypi.org/project/doframework/",
            "platform": null,
            "project_url": "https://pypi.org/project/doframework/",
            "project_urls": {
                "Homepage": "https://github.com/IBM/doframework"
            },
            "release_url": "https://pypi.org/project/doframework/0.1.3/",
            "requires_dist": [
                "numpy",
                "pandas",
                "matplotlib",
                "ray[default,k8s,serve] (>=1.4.1)",
                "rayvens (>=0.5.0)",
                "ibm-cos-sdk (>=2.10.0)",
                "boto3 (>=1.17.110)",
                "aiohttp (>=3.7.4)",
                "aioredis (>=1.3.1)",
                "scikit-learn (>=0.24.1)",
                "scipy",
                "PuLP (>=2.4)",
                "GPy (>=1.9.9)"
            ],
            "requires_python": ">=3.8",
            "summary": "A testing framework for data-driven decision-optimization algorithms.",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14058012,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8e459a7c8b863cfb6c6968324d3fc2dd",
                    "sha256": "209e094423e9eed753a96b834b78a8c8e993e04ba5b7ca3a23bc0f851cdd7281"
                },
                "downloads": -1,
                "filename": "doframework-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8e459a7c8b863cfb6c6968324d3fc2dd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 51091,
                "upload_time": "2022-06-07T14:04:29",
                "upload_time_iso_8601": "2022-06-07T14:04:29.935747Z",
                "url": "https://files.pythonhosted.org/packages/5f/32/23286bf8914f3e993a3565662b9896df1351d106f5c556896b2e736a7a0f/doframework-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ffe516b63768fea480f9065a39a841e3",
                    "sha256": "cd6660b0af79913f53553efbddb5ed578cae92cd12a72440f03f3fbb96c4ea70"
                },
                "downloads": -1,
                "filename": "doframework-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ffe516b63768fea480f9065a39a841e3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 37552,
                "upload_time": "2022-06-07T14:04:31",
                "upload_time_iso_8601": "2022-06-07T14:04:31.978747Z",
                "url": "https://files.pythonhosted.org/packages/bb/3a/5fe5fa7fc84f523637948715ed804442a645fec3d95f37cf005b862fabd0/doframework-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}