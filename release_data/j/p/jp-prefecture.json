{
    "0.1.2": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.1.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utiliti convert name of japanese prefectures.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a1707dd08ead6635192958f48e90cf7a",
                    "sha256": "9d094c8f81641f0d553eddae59b9a5aa653183df56f8d5e076c886fb695ad2db"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a1707dd08ead6635192958f48e90cf7a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 3969,
                "upload_time": "2022-05-27T02:37:09",
                "upload_time_iso_8601": "2022-05-27T02:37:09.438615Z",
                "url": "https://files.pythonhosted.org/packages/78/ae/c07a5d08cc41f886c4d3470997013877dea02cddad05064a1ffe68b2b8da/jp_prefecture-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4d58f83561fa1a155055bf6401a10a1",
                    "sha256": "5ee378534046d0dab3c51c14f025c56fc0c8c79be43f13ff2b26865de8d126f8"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "c4d58f83561fa1a155055bf6401a10a1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3568,
                "upload_time": "2022-05-27T02:37:11",
                "upload_time_iso_8601": "2022-05-27T02:37:11.256288Z",
                "url": "https://files.pythonhosted.org/packages/e1/21/c81883e7d74496369fc5e7b0c99420f7fe5357c0346444aa5ad3cdfc15d9/jp_prefecture-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.1.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "50c0807c9489795d0b838a9c67b54666",
                    "sha256": "db4764db1437ef5d766dea195d2c5fa52a5f20da452ab99dad1c44d01501d303"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "50c0807c9489795d0b838a9c67b54666",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4038,
                "upload_time": "2022-05-27T22:22:10",
                "upload_time_iso_8601": "2022-05-27T22:22:10.943491Z",
                "url": "https://files.pythonhosted.org/packages/3f/1f/5dfa964b242ee955a12f968d40dd57c1df7610f9172d3fa8a318187d4246/jp_prefecture-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "45be9fa8362b9ba6a368385c13a2f937",
                    "sha256": "2daa6b8a17e9961e10e1c4b8e926082c635e8f841f9b801d04beb8dd71d15fc0"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "45be9fa8362b9ba6a368385c13a2f937",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3659,
                "upload_time": "2022-05-27T22:22:15",
                "upload_time_iso_8601": "2022-05-27T22:22:15.050233Z",
                "url": "https://files.pythonhosted.org/packages/bc/60/ee2a94b3145773e9f6776391a932a0422517cfb40ecd5e50cd28c0c986f2/jp_prefecture-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e71ce93fa7aefa7149133aaece26cd49",
                    "sha256": "477071c6dc24db309abc1d3409007219d17a267831be4211f9086e4bfe3070e5"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e71ce93fa7aefa7149133aaece26cd49",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4926,
                "upload_time": "2022-05-27T22:22:12",
                "upload_time_iso_8601": "2022-05-27T22:22:12.716553Z",
                "url": "https://files.pythonhosted.org/packages/1e/a6/ed4478924ff57a510aef469a81b41cd1b713cea0ac43ad65b779cf2cd66a/jp_prefecture-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8f251d21791a0c93d8f7550b972e6a89",
                    "sha256": "ed714ec0d2db14a86508da111afee3782a1aa85cb525146dec8d12979c384a4c"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8f251d21791a0c93d8f7550b972e6a89",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4569,
                "upload_time": "2022-05-27T22:22:16",
                "upload_time_iso_8601": "2022-05-27T22:22:16.464628Z",
                "url": "https://files.pythonhosted.org/packages/27/16/af1614640523800311378c877d395d55a95275dcaaefac2a6c785265384e/jp_prefecture-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "94433e23a702bfd3ef5426115a6639f1",
                    "sha256": "aab78a3e284cd0deb440da1c05583f63d19be834ce4be0879d2dffb31380022c"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "94433e23a702bfd3ef5426115a6639f1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4923,
                "upload_time": "2022-05-29T03:32:19",
                "upload_time_iso_8601": "2022-05-29T03:32:19.219591Z",
                "url": "https://files.pythonhosted.org/packages/8c/be/859bc813fb1d3514ed56127b9e4d18b6fb7ede58bfbdac332ebf20ac1930/jp_prefecture-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7e840e0a4903c3001cc678d898f6fe54",
                    "sha256": "8249daeda2c86a1f75d2385d3ddc70d0a94c13f6a63a78f4938fa489791afbec"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "7e840e0a4903c3001cc678d898f6fe54",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4598,
                "upload_time": "2022-05-29T03:32:24",
                "upload_time_iso_8601": "2022-05-29T03:32:24.239782Z",
                "url": "https://files.pythonhosted.org/packages/38/b4/9deccba0bd8afd8372e023f17a025d789b00599a4041d854f8bcf2d37c8f/jp_prefecture-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.2": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "13aeb4825f569a61606895ebef299bfe",
                    "sha256": "0e285d581a7cd1fc0e7835de9f59f0b92d51d8450f09b85332242aa185c00ed9"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "13aeb4825f569a61606895ebef299bfe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6860,
                "upload_time": "2022-05-29T23:28:27",
                "upload_time_iso_8601": "2022-05-29T23:28:27.977784Z",
                "url": "https://files.pythonhosted.org/packages/70/88/c3420b9052ff82418087c45ccfbe65403d552f74ecf6b128caea60638dec/jp_prefecture-0.2.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3652e9299942a258040d9b0eb8223caf",
                    "sha256": "749f6892ed2e3e3b766c89d35bfa522c5bff6452d936fd034400562deb36b8cf"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "3652e9299942a258040d9b0eb8223caf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6407,
                "upload_time": "2022-05-29T23:28:30",
                "upload_time_iso_8601": "2022-05-29T23:28:30.051517Z",
                "url": "https://files.pythonhosted.org/packages/91/ec/19660b59dc36871ad31d3d842928651718b9e91d2ee5eb78a38f0f0c28a1/jp_prefecture-0.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.3": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f99e923e0efda0927f851a745937ffd",
                    "sha256": "0bc7d9c199f5d18d6286ae939fc71cbc36a1e0bfceaa951da38942fb816c5c07"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6f99e923e0efda0927f851a745937ffd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6967,
                "upload_time": "2022-05-30T01:07:16",
                "upload_time_iso_8601": "2022-05-30T01:07:16.478404Z",
                "url": "https://files.pythonhosted.org/packages/90/c6/bf1160879b9152bac0e70a79816d6a54553a9d242713c5ded62077c43202/jp_prefecture-0.2.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d598cc5386195d7e3346b6a4a26aebab",
                    "sha256": "4f3f69981ae6e01e3304b16220da79ae897abf8a2d6862b8f96457ee57c993d5"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.3.tar.gz",
                "has_sig": false,
                "md5_digest": "d598cc5386195d7e3346b6a4a26aebab",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6498,
                "upload_time": "2022-05-30T01:07:18",
                "upload_time_iso_8601": "2022-05-30T01:07:18.685897Z",
                "url": "https://files.pythonhosted.org/packages/38/ea/cf40c944a9958ea98741bfd1c84f2602648a7062fed44d13afb08b807d5b/jp_prefecture-0.2.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.4": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ba4b34d21ee159d27b400619ec929c53",
                    "sha256": "6ba9b50ca5b28f457153d705f46d35fba37f4a86d37a6180102d598486a7b013"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ba4b34d21ee159d27b400619ec929c53",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7292,
                "upload_time": "2022-06-02T00:11:19",
                "upload_time_iso_8601": "2022-06-02T00:11:19.855430Z",
                "url": "https://files.pythonhosted.org/packages/f2/46/fd5df6cda6b9863f5191bd04c35ebb62446899dda6ef69a532dd10aac344/jp_prefecture-0.2.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7a0ddca09183b62544291a11fd3fc44c",
                    "sha256": "1c127844ed1848c2a2e0eeb37cd53297d774bed47fc5b7c1aa190d00aa25ce8f"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.4.tar.gz",
                "has_sig": false,
                "md5_digest": "7a0ddca09183b62544291a11fd3fc44c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8697,
                "upload_time": "2022-06-02T00:11:22",
                "upload_time_iso_8601": "2022-06-02T00:11:22.211565Z",
                "url": "https://files.pythonhosted.org/packages/ff/99/f13b294212f1ec703dfb0581e1e51de56d9720de656dfa67bc58257f102a/jp_prefecture-0.2.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.5": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.2.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.2.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0e53f6eda9cdbab9c7181c1d0cca1bca",
                    "sha256": "f7eb6094c94a2762a9d5e0abe0f4b0ef68b4f1cc85626e8a5c25f1ce1808c0ac"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0e53f6eda9cdbab9c7181c1d0cca1bca",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 8148,
                "upload_time": "2022-06-09T01:46:01",
                "upload_time_iso_8601": "2022-06-09T01:46:01.978859Z",
                "url": "https://files.pythonhosted.org/packages/d1/ef/e9e63d385f9361215da645d88957930c36bc9673bf9432dd710af499d304/jp_prefecture-0.2.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b3bb49ce58b655a770f0fbce298dd39c",
                    "sha256": "db2728f34b3aac43a12384aab1e881c648c707870ed5899e49fde1933f07e40d"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.2.5.tar.gz",
                "has_sig": false,
                "md5_digest": "b3bb49ce58b655a770f0fbce298dd39c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9534,
                "upload_time": "2022-06-09T01:46:04",
                "upload_time_iso_8601": "2022-06-09T01:46:04.380446Z",
                "url": "https://files.pythonhosted.org/packages/f0/52/ae8e1e516cc52dd6cdfed6179cdcd970e9fd32c5cb371e35cfa7a54d9115/jp_prefecture-0.2.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8d71858caaeedbeb83462a71f2e605c7",
                    "sha256": "cfd8b10477e05d92dd0911bd0be5370c091a2a1fcff830d137a5ae1dc7573b65"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8d71858caaeedbeb83462a71f2e605c7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12211,
                "upload_time": "2022-06-10T03:45:15",
                "upload_time_iso_8601": "2022-06-10T03:45:15.919941Z",
                "url": "https://files.pythonhosted.org/packages/c3/32/8264cfc93e526f30a4c53f271aaf9faa5112c5ab0a5ce5002b706be1e051/jp_prefecture-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2f7d4a2f813a4f489a73c7160a49c6ae",
                    "sha256": "8342b9c9341feeba6a6c460d41e656d6eb71a5e92625f5b486b5260bb57e667c"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2f7d4a2f813a4f489a73c7160a49c6ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14702,
                "upload_time": "2022-06-10T03:45:18",
                "upload_time_iso_8601": "2022-06-10T03:45:18.219183Z",
                "url": "https://files.pythonhosted.org/packages/4e/20/601a6b2967aa44add6f10b13886f79346440c53850ee44ca87b9fe2c6357/jp_prefecture-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.3.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1c2d2f9411b1bcde3e215606ed980bfa",
                    "sha256": "37fbf3763fc47021c17de5eeaaf85b61a723160e5de93954b58a16d8c1eebb77"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1c2d2f9411b1bcde3e215606ed980bfa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12222,
                "upload_time": "2022-06-10T04:24:32",
                "upload_time_iso_8601": "2022-06-10T04:24:32.399418Z",
                "url": "https://files.pythonhosted.org/packages/d3/8a/4155136c7d6f9069e3b2485a7e64dcf3cd3a6b5b51d5ddb1e82d1429738e/jp_prefecture-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d6eec76d6a2c7d971422e309209bb0a6",
                    "sha256": "fa3cf6718668599fe124baf3b83a5370427f693e77461e2581d70bf421f49c9a"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d6eec76d6a2c7d971422e309209bb0a6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14759,
                "upload_time": "2022-06-10T04:24:35",
                "upload_time_iso_8601": "2022-06-10T04:24:35.647679Z",
                "url": "https://files.pythonhosted.org/packages/10/68/75ec4cd7d191575e37d960a62fb6117b42e1510121baee2709ee140b1d71/jp_prefecture-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.2": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.3.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0c9227142e4ee8db6b43ced9ec084681",
                    "sha256": "77045ddd35d33be61d421496e6acb36a287e5aed812aabd11568090b09cddcfd"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0c9227142e4ee8db6b43ced9ec084681",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12519,
                "upload_time": "2022-06-10T06:43:30",
                "upload_time_iso_8601": "2022-06-10T06:43:30.466829Z",
                "url": "https://files.pythonhosted.org/packages/f2/8f/abac7dbf936496c30a114795435014205a8293704ecd52c4115f9402929e/jp_prefecture-0.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2b4e0807f9bce0d191d3e14038fd3adc",
                    "sha256": "d7cbeaa66b091d0e22191801da31e78ff53bd6c398105f1f69bd83cbe83b44f9"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "2b4e0807f9bce0d191d3e14038fd3adc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15234,
                "upload_time": "2022-06-10T06:43:33",
                "upload_time_iso_8601": "2022-06-10T06:43:33.466137Z",
                "url": "https://files.pythonhosted.org/packages/fb/d1/87ef53898de5105f1dbcbb6dfa3f36a6f789566e58946065e20fd59570f0/jp_prefecture-0.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.3": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.3.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5f7b12f99b5de783465994f898d09e19",
                    "sha256": "368740079d5e39c625026d09bdd4ea51762bb59366d68f910e1c4431a0e03b62"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5f7b12f99b5de783465994f898d09e19",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12515,
                "upload_time": "2022-06-10T07:17:49",
                "upload_time_iso_8601": "2022-06-10T07:17:49.254353Z",
                "url": "https://files.pythonhosted.org/packages/07/ae/ff77e57e157d84041370f5227d14d0933fd363b6f9dc8d8ccdcc2d06202e/jp_prefecture-0.3.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0fe7d9b539d482829cd73a2a9077de93",
                    "sha256": "1505887906f7a7952edbd55d361365fda3352633fca6b758acba78482f29c4ca"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.3.tar.gz",
                "has_sig": false,
                "md5_digest": "0fe7d9b539d482829cd73a2a9077de93",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15291,
                "upload_time": "2022-06-10T07:17:51",
                "upload_time_iso_8601": "2022-06-10T07:17:51.719176Z",
                "url": "https://files.pythonhosted.org/packages/51/ac/219e9510c0c89eb5553b2a148ea6d6e13aded184e2919784f93123dd8c6a/jp_prefecture-0.3.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.5": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.3.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.3.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bde283d499884f82d61c464d75f46dd3",
                    "sha256": "5323543f11c147d68fc3d8d35d6bf4979ea5c5bcddeef1b97e8f04ce8ba566bf"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "bde283d499884f82d61c464d75f46dd3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 12596,
                "upload_time": "2022-06-11T00:27:50",
                "upload_time_iso_8601": "2022-06-11T00:27:50.214940Z",
                "url": "https://files.pythonhosted.org/packages/a7/1c/c0d2925753ead855024f2d9a4a7375c296794d1338591654e653c596b704/jp_prefecture-0.3.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bfb03a72dd86433216b6321122401578",
                    "sha256": "984404f5bad40c7094eddccb616f2d1e0c1d83567ebc34e00cd6a4ad9e44a77b"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.3.5.tar.gz",
                "has_sig": false,
                "md5_digest": "bfb03a72dd86433216b6321122401578",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15441,
                "upload_time": "2022-06-11T00:27:53",
                "upload_time_iso_8601": "2022-06-11T00:27:53.074353Z",
                "url": "https://files.pythonhosted.org/packages/93/35/f95a109c21f77c54d19fdecbaf84a5e70aec5e86b5a0ffc01742e5cc91c9/jp_prefecture-0.3.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.4.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5832850100806682df71d862e4f025f3",
                    "sha256": "83075b080b900f8a6ca33ef2fdbd07f64d2f0310f3b0ff47eaa203da6ecd9854"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5832850100806682df71d862e4f025f3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15331,
                "upload_time": "2022-06-15T00:11:56",
                "upload_time_iso_8601": "2022-06-15T00:11:56.047194Z",
                "url": "https://files.pythonhosted.org/packages/b1/4a/3887b49ad44bacdb6311684087230ac64cbdfe87f7426a14cf96857f3d23/jp_prefecture-0.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d9adb8434757554368f2d1c055eee88d",
                    "sha256": "96fc5ee79ca231128639bfdec6e5fb91744743a2d650f1ea19b444f360573380"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d9adb8434757554368f2d1c055eee88d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 25292,
                "upload_time": "2022-06-15T00:11:59",
                "upload_time_iso_8601": "2022-06-15T00:11:59.348057Z",
                "url": "https://files.pythonhosted.org/packages/23/d3/f14546283e736663126196541e1ae2f3d0d0baa8d791e2618b17091265ce/jp_prefecture-0.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8909d2d975194aeff87ce4c34d8ba4ae",
                    "sha256": "af5f23098590de799e24b9578e01b808605a7f772b624224e19dcd6856f5750a"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8909d2d975194aeff87ce4c34d8ba4ae",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 16626,
                "upload_time": "2022-06-16T07:15:43",
                "upload_time_iso_8601": "2022-06-16T07:15:43.579787Z",
                "url": "https://files.pythonhosted.org/packages/84/ff/7ad0ed6b67ef9624c39068676a2b32125f9d53ce4260a6c627f65281348f/jp_prefecture-0.5.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "93bb641da41dd230a974b0b6cc5dff2b",
                    "sha256": "e1b2323c6a0feccb2e19f323a83767fa470b88cdcce4f74aa5823762ec5d2eb8"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.0.tar.gz",
                "has_sig": false,
                "md5_digest": "93bb641da41dd230a974b0b6cc5dff2b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 27768,
                "upload_time": "2022-06-16T07:15:46",
                "upload_time_iso_8601": "2022-06-16T07:15:46.558599Z",
                "url": "https://files.pythonhosted.org/packages/90/46/3b7dde857f0f2e950e00b56ab338ee266176f40d801c72fb72e9e41f093e/jp_prefecture-0.5.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.1": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b5f66b59b28259282867ac30c3e02be9",
                    "sha256": "6576bcda324f18f2e0b95f86231a0da6369bed5dfe2151ec1eca1b8ea4cdcd44"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b5f66b59b28259282867ac30c3e02be9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 64830,
                "upload_time": "2022-06-16T12:11:42",
                "upload_time_iso_8601": "2022-06-16T12:11:42.832517Z",
                "url": "https://files.pythonhosted.org/packages/90/84/aff8b8c0a8316031140456123c7dcb65368c2cd4ee2650993d306bbe8332/jp_prefecture-0.5.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "26e82fbfde0f08e527e315573716d851",
                    "sha256": "31a8a0d2a1afd1e64ce46ba73888ac4fc5f407cd909098a2b5dcfdd398991be0"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "26e82fbfde0f08e527e315573716d851",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 77432,
                "upload_time": "2022-06-16T12:11:49",
                "upload_time_iso_8601": "2022-06-16T12:11:49.059204Z",
                "url": "https://files.pythonhosted.org/packages/55/e0/5523aee419042f2f28399d241e414ef7c306285a2b356e369f5f063561da/jp_prefecture-0.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.3": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dafcbc9d75f539f60435ea7de1f085bf",
                    "sha256": "3632ec1484ad48f85c70055a0712259236a48432301c317ba9b43c553cdd6c56"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dafcbc9d75f539f60435ea7de1f085bf",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 65699,
                "upload_time": "2022-06-17T00:57:42",
                "upload_time_iso_8601": "2022-06-17T00:57:42.157855Z",
                "url": "https://files.pythonhosted.org/packages/c7/5d/bd1158504d953b3698b7939a8b66470485a91628cdf69012a9ea23b83ad2/jp_prefecture-0.5.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e29f70c23cdef7da895690f296f70412",
                    "sha256": "58505c37d35c237768cd5c4296d105eb81697d91980d7356246b5c0c59b7419e"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.3.tar.gz",
                "has_sig": false,
                "md5_digest": "e29f70c23cdef7da895690f296f70412",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 79000,
                "upload_time": "2022-06-17T00:57:45",
                "upload_time_iso_8601": "2022-06-17T00:57:45.370452Z",
                "url": "https://files.pythonhosted.org/packages/02/f0/c5a76dd6d76c14446934473bd34a6188f6bdfafdbf3496a47347e1f8b61b/jp_prefecture-0.5.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.4": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8da84838c5cd294d7a9d473aa38f68e",
                    "sha256": "6726e1e8d59a47f8383b230eed8c1cc2bb3ab321456e3ee186b12761f8768e5a"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f8da84838c5cd294d7a9d473aa38f68e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 65696,
                "upload_time": "2022-06-17T00:59:32",
                "upload_time_iso_8601": "2022-06-17T00:59:32.854394Z",
                "url": "https://files.pythonhosted.org/packages/31/49/2c9e690511a2f9eefdb0fb0e681221bbbe7f6cb16fcc2bbf46eafb785865/jp_prefecture-0.5.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1dffae492d4d9c79c8f4560f4500a4e9",
                    "sha256": "fd0e814f4c16e4de7796d01eba5b8136e711c799b8d26e673607d037466dcd6d"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.4.tar.gz",
                "has_sig": false,
                "md5_digest": "1dffae492d4d9c79c8f4560f4500a4e9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 78985,
                "upload_time": "2022-06-17T00:59:35",
                "upload_time_iso_8601": "2022-06-17T00:59:35.927212Z",
                "url": "https://files.pythonhosted.org/packages/8a/f0/c8e0c584a84548ce7faf27ed39d03e8ec6adb919ee077bf6a64da50c3041/jp_prefecture-0.5.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.7": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.7/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "36a4ca92c9ca458abdb119220526eb92",
                    "sha256": "7aba641e45a03603a43b587d744965f6f9a4dd0f05ac6355db8c579221545e3e"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "36a4ca92c9ca458abdb119220526eb92",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 72147,
                "upload_time": "2022-06-17T02:21:35",
                "upload_time_iso_8601": "2022-06-17T02:21:35.981921Z",
                "url": "https://files.pythonhosted.org/packages/fb/2a/c1835b522e2b620874e06c82ade4962d21d4a4ad347c3ec0a40788fe88f1/jp_prefecture-0.5.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b26f760ef7709eeba87fc9ea944572b",
                    "sha256": "91a2fbdf914cd343f8802c0e8829f9c577ca37e3befabdf31b29c57921ad9a01"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.7.tar.gz",
                "has_sig": false,
                "md5_digest": "1b26f760ef7709eeba87fc9ea944572b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 85427,
                "upload_time": "2022-06-17T02:21:39",
                "upload_time_iso_8601": "2022-06-17T02:21:39.056889Z",
                "url": "https://files.pythonhosted.org/packages/35/17/cdb17bce926779566530b7cfc335319d94c5887fece4065ad026358aa3ab/jp_prefecture-0.5.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.8": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.5.8/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.5.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "454a83993e84c30376457c2065e61f57",
                    "sha256": "f2332d0a5917335be7745be7634140184227c83af9efd0916791bc2faf38f7b4"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "454a83993e84c30376457c2065e61f57",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 72190,
                "upload_time": "2022-06-17T02:34:44",
                "upload_time_iso_8601": "2022-06-17T02:34:44.496020Z",
                "url": "https://files.pythonhosted.org/packages/e1/7f/f7da8a22e0069e560345310ab1b7cbbf924d6d4434d32623b7d186b2cb08/jp_prefecture-0.5.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0643dad12a511ea330277a1546120914",
                    "sha256": "65b6c67e6d736919c4ec7691fcec4da1c2f5f5b787f01b063dc6371aee7a7ae6"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.5.8.tar.gz",
                "has_sig": false,
                "md5_digest": "0643dad12a511ea330277a1546120914",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 85527,
                "upload_time": "2022-06-17T02:34:48",
                "upload_time_iso_8601": "2022-06-17T02:34:48.005327Z",
                "url": "https://files.pythonhosted.org/packages/08/66/fc5bccda2efb7a575322926b9e281b3620e5c3c75ebac7aa0c1472787dd6/jp_prefecture-0.5.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.6.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.6.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "972165f06a895862e93a85ee98c1d1fa",
                    "sha256": "862dd10ca835e4c2ea5404ef9f44bb1a46410981d926e72a7c61b9b4d12d1e20"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.6.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "972165f06a895862e93a85ee98c1d1fa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 73941,
                "upload_time": "2022-06-18T00:38:41",
                "upload_time_iso_8601": "2022-06-18T00:38:41.793760Z",
                "url": "https://files.pythonhosted.org/packages/46/f4/a621885628d41104e4187e26a9831a4214c015c805a63ecb84bd924a05d7/jp_prefecture-0.6.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "744897934cc1b213675a31b9c26aabf5",
                    "sha256": "8ca142f0afbc3ec695ea0ab0e6bbdbccbc91123ad50a5c410dafc199884df4d1"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.6.0.tar.gz",
                "has_sig": false,
                "md5_digest": "744897934cc1b213675a31b9c26aabf5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 87983,
                "upload_time": "2022-06-18T00:38:44",
                "upload_time_iso_8601": "2022-06-18T00:38:44.962826Z",
                "url": "https://files.pythonhosted.org/packages/76/0b/734ed26cc327169a5f9c34f25f9d04df85ac49ab398d8cf5b0d31bf1e0d5/jp_prefecture-0.6.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.1": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.6.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.6.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2fb4250a8ca8b2d8461358716b017635",
                    "sha256": "6de9007d7cf0bfaeca291f01b5645fe5d5b693cfef7296b749d4a24b1d2d3b6b"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.6.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2fb4250a8ca8b2d8461358716b017635",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 74267,
                "upload_time": "2022-06-18T23:39:09",
                "upload_time_iso_8601": "2022-06-18T23:39:09.653238Z",
                "url": "https://files.pythonhosted.org/packages/1d/f9/9d7b0f46b936a3bc549a5b48e4016f874707a31fbc57afb2d74b0e1b2178/jp_prefecture-0.6.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a65246c9cd44056ab00900340ffed6d4",
                    "sha256": "9ada4bb55a05c9507c56a8cbaea3fe55342bb5bba50d544a8dfdab7f5c6eedea"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.6.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a65246c9cd44056ab00900340ffed6d4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 88478,
                "upload_time": "2022-06-18T23:39:12",
                "upload_time_iso_8601": "2022-06-18T23:39:12.900352Z",
                "url": "https://files.pythonhosted.org/packages/39/8c/ace7e1f3e361050c9f6ac8a2d2e85d1adeea8bcd4b00848582c14043f57c/jp_prefecture-0.6.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.0": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6cc23283c023f89174a31ca49dcc98c3",
                    "sha256": "fc0c5fc4ede481af0a25254b6291ec53aa6b2560243dcaf128a1ec7c7024d1e2"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6cc23283c023f89174a31ca49dcc98c3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4924778,
                "upload_time": "2022-06-28T04:03:44",
                "upload_time_iso_8601": "2022-06-28T04:03:44.059269Z",
                "url": "https://files.pythonhosted.org/packages/36/f9/612b029bccd606d5dcf8476ce196151c7d236194ede1facaff17d82eddfb/jp_prefecture-0.7.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d53135bd844a469a5815c2543eb86648",
                    "sha256": "2c8c0f6803362edc9282ed041dcf2e009f241a6b2d6959998340588b77ef2cbb"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d53135bd844a469a5815c2543eb86648",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4855690,
                "upload_time": "2022-06-28T04:03:47",
                "upload_time_iso_8601": "2022-06-28T04:03:47.955433Z",
                "url": "https://files.pythonhosted.org/packages/aa/c7/6cc25f6bb5474d7c3463d2452dfeaada4c00483de1c36bd2362b6df1d3a8/jp_prefecture-0.7.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.2": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8c9b3ab189457ab673af502201e3ca0d",
                    "sha256": "4acd1dad53aab1bcd77417ee6151e091c57cc7e582e5774700bad5d55b72bc34"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8c9b3ab189457ab673af502201e3ca0d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4925247,
                "upload_time": "2022-06-28T06:26:56",
                "upload_time_iso_8601": "2022-06-28T06:26:56.459641Z",
                "url": "https://files.pythonhosted.org/packages/25/b9/6c9c81284d37e92acae45092c9eae3c10c359da6b88dc671420808ef7273/jp_prefecture-0.7.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b9ddad0a7475e4648977aeddd93a095f",
                    "sha256": "89143398a9bee2348ff95ed6595744aad38d889706c7b038b6e9942ea13dd8dc"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.2.tar.gz",
                "has_sig": false,
                "md5_digest": "b9ddad0a7475e4648977aeddd93a095f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4856950,
                "upload_time": "2022-06-28T06:27:00",
                "upload_time_iso_8601": "2022-06-28T06:27:00.625288Z",
                "url": "https://files.pythonhosted.org/packages/a7/a1/f733f353b38fa52e0dd60cce118d9fee12b76c56f84f53ed9afed852a289/jp_prefecture-0.7.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.3": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "db69447a58c2c655c7d57aa25e46f363",
                    "sha256": "3ff4f5c1bccab80497e2f76eaa69c8ba6adc11ac807695eaf614ca7b8800cee3"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "db69447a58c2c655c7d57aa25e46f363",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4925293,
                "upload_time": "2022-06-28T23:05:56",
                "upload_time_iso_8601": "2022-06-28T23:05:56.918917Z",
                "url": "https://files.pythonhosted.org/packages/81/4b/a719df3c3871ce9a72a37496f47fafb69d774f4dfa1b117bf700481bc01b/jp_prefecture-0.7.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "693e10dcca102a71fe6d22e51f6f1572",
                    "sha256": "2331b94507f9bdffa273aeada52f2ad25e37e1413222e2cca894c52156c36adb"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.3.tar.gz",
                "has_sig": false,
                "md5_digest": "693e10dcca102a71fe6d22e51f6f1572",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4857062,
                "upload_time": "2022-06-28T23:06:03",
                "upload_time_iso_8601": "2022-06-28T23:06:03.936887Z",
                "url": "https://files.pythonhosted.org/packages/59/55/97447ebca30a34e4e8db30baec483eb4c51ddef5da95362f731647e37ab7/jp_prefecture-0.7.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.4": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "380477dac7cdd571940c73a2e66e7cd2",
                    "sha256": "ae4e9fe63ca120436a8818ecf6382faf102497aa404e57335ca4401035842ca5"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "380477dac7cdd571940c73a2e66e7cd2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4925386,
                "upload_time": "2022-06-29T00:06:30",
                "upload_time_iso_8601": "2022-06-29T00:06:30.671177Z",
                "url": "https://files.pythonhosted.org/packages/18/ce/17dea75aa644b9095ee5900f28061e5b810a949fd515fd6151f3e4cfac84/jp_prefecture-0.7.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "de04231ae42ca88ee7a8c4d88e8af35f",
                    "sha256": "3a6054f2ccb4e951285f14ceaf9336d6508959ebdfadb1adc2f07ce6ad9bd889"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.4.tar.gz",
                "has_sig": false,
                "md5_digest": "de04231ae42ca88ee7a8c4d88e8af35f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4857159,
                "upload_time": "2022-06-29T00:06:34",
                "upload_time_iso_8601": "2022-06-29T00:06:34.365252Z",
                "url": "https://files.pythonhosted.org/packages/67/54/641b5d3a4a8f6f4b4ec00c52cda4e01258f6b285a7ad6b7c89e7c5d65e00/jp_prefecture-0.7.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.5": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d4baddcfd6052b7161ddfc26a5920f55",
                    "sha256": "78c43d74d82786d31afbca8510308b76f3d9666f0a3cbc4f9cbb2546c9c4bfad"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d4baddcfd6052b7161ddfc26a5920f55",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4925471,
                "upload_time": "2022-06-29T04:01:03",
                "upload_time_iso_8601": "2022-06-29T04:01:03.980935Z",
                "url": "https://files.pythonhosted.org/packages/7a/ed/02e3cb6325bbba2ac6bfd285f83948ef0ffe87ab6abfc5305bb66f8d0aeb/jp_prefecture-0.7.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b9364fb38c08c8418087d5848e03840",
                    "sha256": "32647c953a536508a30b15833a0437613e9001476ef56591a3f0580b96398257"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.5.tar.gz",
                "has_sig": false,
                "md5_digest": "0b9364fb38c08c8418087d5848e03840",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4857202,
                "upload_time": "2022-06-29T04:01:08",
                "upload_time_iso_8601": "2022-06-29T04:01:08.317479Z",
                "url": "https://files.pythonhosted.org/packages/68/98/55118c4c28c7ed13d7e764454383ca54c36bf20e44ac30afc47bf04bb869/jp_prefecture-0.7.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.6": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.6/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dbcccfaf652240151efa714debc2de75",
                    "sha256": "12474f4e1f406b7ad3f299232d690ec338426079c046ea35937e37646d4c6d0c"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dbcccfaf652240151efa714debc2de75",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4925476,
                "upload_time": "2022-06-29T04:29:49",
                "upload_time_iso_8601": "2022-06-29T04:29:49.077781Z",
                "url": "https://files.pythonhosted.org/packages/18/ee/c4fb685447a55fd5f78cb981b4610452d754d56c0f90723fec96efa625bd/jp_prefecture-0.7.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9b51e127bb1856062209e6fa000a27fb",
                    "sha256": "df48e77d7c11d3b30d08661f81cb441b9801bc3b07146d20e4d9779560e76ce7"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.6.tar.gz",
                "has_sig": false,
                "md5_digest": "9b51e127bb1856062209e6fa000a27fb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4857252,
                "upload_time": "2022-06-29T04:29:53",
                "upload_time_iso_8601": "2022-06-29T04:29:53.824891Z",
                "url": "https://files.pythonhosted.org/packages/76/45/072c19c66ee35fdd0efcb692ecdae945426b865a1ca4554cfda0599fba3c/jp_prefecture-0.7.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.9": {
        "info": {
            "author": "iisaka51",
            "author_email": "iisaka51@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10"
            ],
            "description": "# jp_prefecture.\n> Japan prefecture and city names and codes, geodetic.\n\nSimple utility to convert the name of japanese prefectures and cities.\n\n- parser for japanese address.\n- full_name from/to code (JIS X 0401-1973, JIX X 0402).\n- short_name to full_name (prefecture only)\n- alphabet_name from/to full_name\n- validate for full_name and short_name, alphabet_name.\n- allow str or int for input code.\n- support lists and pandas serires as input.\n- support checkdigits for citycode.\n- support regular expression for cityName and town.\n- get geodetic(latitude, longitude) from cityCode or cityName, street address.\n\nReference\n\n- https://www.soumu.go.jp/denshijiti/code.html (in japanese)\n- Geolpnia OpenData for japanese address.\n  - https://geolonia.github.io/japanese-addresses/\n\n## Install\n\n`pip install jp_prefecture`\n\n## How to use\n\n```python\nfrom jp_prefecture import jp_prefectures as jp\n\n# or\n\nfrom jp_prefecture.jp_cities import jp.jp_cities as jp\n\n# If you want to town data.\ndel jp\njp = JpCity(enable_town=True)\n\n# or Set Shell Environment variable\n\nexport JP_PREFECTURE_ENABLE_TOWN=1\n\n# and, japanese address parser.\n\nfrom jp_prefecture.address import JpAddressParser, JpAddress\nparser = JpAddressParser()\n\n```\n\n\n## class JpAddressParser\n\n- `parse_address()`\n\ndefault is disabled town. just for parse city and address format.\n\n```python\nimport os\nfrom jp_prefecture.address import JpAddressParser, JpAddress\n\nparser = JpAddressParser()\n\ndata = '\u3012617-0826 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4'\n\naddr = parser.parse_address(data)\nassert ( addr.zipCode == '6170826' )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4')\nassert ( addr.prefCode == 26)\nassert ( addr.cityCode == 26209)\nassert ( addr.geodetic == (34.937151, 135.676083))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u3012617-0826 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4' )\n\n# NON-EXISTENT ADDRESS\ndata = '\u6e0b\u8c37\u533a\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.668183, 139.709361) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14' )\n\nparser = JpAddressParser(enable_town=True)\n\ndata = '\u3012617-0826 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4'\n\naddr = parser.parse_address(data)\nassert ( addr.zipCode == '6170826' )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4')\nassert ( addr.prefCode == 26)\nassert ( addr.cityCode == 26209)\nassert ( addr.geodetic == (34.928769, 135.696847))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u3012617-0826 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u958b\u75301\u4e01\u76ee-2-3 \u30a2\u30d1\u30fc\u30c8123\u53f7\u5ba4' )\n\ndata = '\u6e0b\u8c37\u533a\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == None )\nassert ( addr.validate == False )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u6c38\u798f\u753a\uff11\uff12\u2212\uff13\uff14' )\n\n```\n\n```python\nfrom jp_prefecture.address import JpAddressParser, JpAddress\n\n# os.environ.update({'JP_PREFECTURE_ENABLE_TOWN': '1'})\n# parser = JpAddressParser()\n#\nparser = JpAddressParser(enable_town=True)\n\ndata = '\u3012617-0824 \u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == '6170824' )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u3012617-0824 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '6170824 \u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == '6170824' )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u3012617-0824 \u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '\u4eac\u90fd\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '\u4eac\u90fd \u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '\u4eac\u90fd\u5e9c \u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u9577\u5ca1\u4eac\u5e02' )\nassert ( addr.street == '\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\nassert ( addr.geodetic == (34.923314, 135.685162))\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15\u2212\uff11\uff13')\n\ndata = '\u3012604-0836 \u4eac\u90fd\u5e9c\u4eac\u90fd\u5e02\u4e2d\u4eac\u533a\u8239\u5c4b\u753a\uff14\uff10\uff10\u2212\uff11'\n\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == '6040836' )\nassert ( addr.prefecture == '\u4eac\u90fd\u5e9c' )\nassert ( addr.city == '\u4eac\u90fd\u5e02\u4e2d\u4eac\u533a' )\nassert ( addr.street == '\u8239\u5c4b\u753a\uff14\uff10\uff10\u2212\uff11')\nassert ( addr.prefCode == 26)\nassert ( addr.cityCode == 26104)\nassert ( addr.validate == True )\nassert ( addr.geodetic == (35.005594, 135.766252))\nassert ( str(addr)\n         == '\u3012604-0836 \u4eac\u90fd\u5e9c\u4eac\u90fd\u5e02\u4e2d\u4eac\u533a\u8239\u5c4b\u753a\uff14\uff10\uff10\u2212\uff11' )\n\ndata = '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6771\u4eac\u90fd \u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6771\u4eac\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6771\u4eac \u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6771\u4eac \u6e0b\u8c37\u533a \u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6771\u4eac\u3000\u6e0b\u8c37\u533a\u3000\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n\ndata = '\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14'\naddr = self.parser.parse_address(data)\nassert ( addr.zipCode == None )\nassert ( addr.prefecture == '\u6771\u4eac\u90fd')\nassert ( addr.city == '\u6e0b\u8c37\u533a' )\nassert ( addr.street == '\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14')\nassert ( addr.prefCode == 13)\nassert ( addr.cityCode == 13113)\nassert ( addr.geodetic == ( 35.655642, 139.700634) )\nassert ( addr.validate == True )\nassert ( str(addr)\n         == '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u685c\u4e18\u753a\uff11\uff12\u2212\uff13\uff14' )\n```\n\n### Dataframe of jp.prefectures\n\n```python\nIn [2]: jp.prefectures\nOut[2]:\n      name short_name alphabet_name\ncode\n1      \u5317\u6d77\u9053         \u5317\u6d77      Hokkaido\n2      \u9752\u68ee\u770c         \u9752\u68ee        Aomori\n3      \u5ca9\u624b\u770c         \u5ca9\u624b         Iwate\n4      \u5bae\u57ce\u770c         \u5bae\u57ce        Miyagi\n5      \u79cb\u7530\u770c         \u79cb\u7530         Akita\n6      \u5c71\u5f62\u770c         \u5c71\u5f62      Yamagata\n7      \u798f\u5cf6\u770c         \u798f\u5cf6     Fukushima\n8      \u8328\u57ce\u770c         \u8328\u57ce       Ibaraki\n9      \u6803\u6728\u770c         \u6803\u6728       Tochigi\n10     \u7fa4\u99ac\u770c         \u7fa4\u99ac         Gunma\n11     \u57fc\u7389\u770c         \u57fc\u7389       Saitama\n12     \u5343\u8449\u770c         \u5343\u8449         Chiba\n13     \u6771\u4eac\u90fd         \u6771\u4eac         Tokyo\n14    \u795e\u5948\u5ddd\u770c        \u795e\u5948\u5ddd      Kanagawa\n15     \u65b0\u6f5f\u770c         \u65b0\u6f5f       Niigata\n16     \u5bcc\u5c71\u770c         \u5bcc\u5c71        Toyama\n17     \u77f3\u5ddd\u770c         \u77f3\u5ddd      Ishikawa\n18     \u798f\u4e95\u770c         \u798f\u4e95         Fukui\n19     \u5c71\u68a8\u770c         \u5c71\u68a8     Yamanashi\n20     \u9577\u91ce\u770c         \u9577\u91ce        Nagano\n21     \u5c90\u961c\u770c         \u5c90\u961c          Gifu\n22     \u9759\u5ca1\u770c         \u9759\u5ca1      Shizuoka\n23     \u611b\u77e5\u770c         \u611b\u77e5         Aichi\n24     \u4e09\u91cd\u770c         \u4e09\u91cd           Mie\n25     \u6ecb\u8cc0\u770c         \u6ecb\u8cc0         Shiga\n26     \u4eac\u90fd\u5e9c         \u4eac\u90fd         Kyoto\n27     \u5927\u962a\u5e9c         \u5927\u962a         Osaka\n28     \u5175\u5eab\u770c         \u5175\u5eab         Hyogo\n29     \u5948\u826f\u770c         \u5948\u826f          Nara\n30    \u548c\u6b4c\u5c71\u770c        \u548c\u6b4c\u5c71      Wakayama\n31     \u9ce5\u53d6\u770c         \u9ce5\u53d6       Tottori\n32     \u5cf6\u6839\u770c         \u5cf6\u6839       Shimane\n33     \u5ca1\u5c71\u770c         \u5ca1\u5c71       Okayama\n34     \u5e83\u5cf6\u770c         \u5e83\u5cf6     Hiroshima\n35     \u5c71\u53e3\u770c         \u5c71\u53e3     Yamaguchi\n36     \u5fb3\u5cf6\u770c         \u5fb3\u5cf6     Tokushima\n37     \u9999\u5ddd\u770c         \u9999\u5ddd        Kagawa\n38     \u611b\u5a9b\u770c         \u611b\u5a9b         Ehime\n39     \u9ad8\u77e5\u770c         \u9ad8\u77e5         Kochi\n40     \u798f\u5ca1\u770c         \u798f\u5ca1       Fukuoka\n41     \u4f50\u8cc0\u770c         \u4f50\u8cc0          Saga\n42     \u9577\u5d0e\u770c         \u9577\u5d0e      Nagasaki\n43     \u718a\u672c\u770c         \u718a\u672c      Kumamoto\n44     \u5927\u5206\u770c         \u5927\u5206          Oita\n45     \u5bae\u5d0e\u770c         \u5bae\u5d0e      Miyazaki\n46    \u9e7f\u5150\u5cf6\u770c        \u9e7f\u5150\u5cf6     Kagoshima\n47     \u6c96\u7e04\u770c         \u6c96\u7e04       Okinawa\n\nIn [3]: jp.prefectures.info()\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 47 entries, 1 to 47\nData columns (total 3 columns):\n #   Column         Non-Null Count  Dtype\n---  ------         --------------  -----\n 0   name           47 non-null     object\n 1   short_name     47 non-null     object\n 2   alphabet_name  47 non-null     object\ndtypes: object(3)\nmemory usage: 1.2+ KB\n\nIn [4]:\n>>>\n```\n\n## Dataframe of Cities\n\n```python\nIn [1]: from jp_prefecture.jp_cities import jp_cities as jp\n\nIn [2]: jp.cities\nOut[2]:\n      prefCode  cityCode  cityName              cityAlphabet  latitude  longitude  bigCityFlag\n0            1      1100       \u672d\u5e4c\u5e02               Sapporo-shi   43.0351   141.2049            2\n1            1      1101    \u672d\u5e4c\u5e02\u4e2d\u592e\u533a       Sapporo-shi Chuo-ku   43.0422   141.3197            1\n2            1      1102     \u672d\u5e4c\u5e02\u5317\u533a       Sapporo-shi Kita-ku   43.1571   141.3902            1\n3            1      1103     \u672d\u5e4c\u5e02\u6771\u533a    Sapporo-shi Higashi-ku   43.1208   141.3944            1\n4            1      1104    \u672d\u5e4c\u5e02\u767d\u77f3\u533a  Sapporo-shi Shiroishi-ku   43.0716   141.4370            1\n...        ...       ...       ...                       ...       ...        ...          ...\n1909        47     47361   \u5cf6\u5c3b\u90e1\u4e45\u7c73\u5cf6\u753a  Shimajiri-gun Kumejim...   26.3474   126.7697            0\n1910        47     47362   \u5cf6\u5c3b\u90e1\u516b\u91cd\u702c\u753a   Shimajiri-gun Yaese-cho   26.1260   127.7472            0\n1911        47     47375   \u5bae\u53e4\u90e1\u591a\u826f\u9593\u6751     Miyako-gun Tarama-son   24.6578   124.6854            0\n1912        47     47381   \u516b\u91cd\u5c71\u90e1\u7af9\u5bcc\u753a  Yaeyama-gun Taketomi-cho   24.2371   124.0119            0\n1913        47     47382  \u516b\u91cd\u5c71\u90e1\u4e0e\u90a3\u56fd\u753a  Yaeyama-gun Yonaguni-cho   24.4559   122.9877            0\n\nIn [3]: jp.cities.info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 1914 entries, 0 to 1913\nData columns (total 7 columns):\n #   Column        Non-Null Count  Dtype\n---  ------        --------------  -----\n 0   prefCode      1914 non-null   int8\n 1   cityCode      1914 non-null   int32\n 2   cityName      1914 non-null   object\n 3   cityAlphabet  1914 non-null   object\n 4   latitude      1914 non-null   float64\n 5   longitude     1914 non-null   float64\n 6   bigCityFlag   1914 non-null   int8\ndtypes: float64(2), int32(1), int8(2), object(2)\nmemory usage: 86.0+ KB\n\nIn [4]:\n\n```\n\n## Dataframe of Towns\n\n```python\nIn [1]: import os\n\nIn [2]: os.environ.update({'JP_PREFECTURE_ENABLE_TOWN': '1'})\n\nIn [3]: from jp_prefecture.jp_cities import jp_cities as jp\n\nIn [4]: jp.towns\nOut[4]:\n        prefCode  cityCode        town         townAlphabet  latitude  longitude  bigCityFlag\n0              1      1101      \u65ed\u30b1\u4e18\u4e00\u4e01\u76ee         Asahigaoka 1   43.0422   141.3197            0\n1              1      1101  \u5357\u4e8c\u5341\u4e94\u6761\u897f\u5341\u4e00\u4e01\u76ee  Minami25-Jonishi 11   43.0261   141.3446            0\n2              1      1101  \u5357\u4e8c\u5341\u4e94\u6761\u897f\u5341\u4e8c\u4e01\u76ee  Minami25-Jonishi 12   43.0259   141.3430            0\n3              1      1101  \u5357\u4e8c\u5341\u4e94\u6761\u897f\u5341\u4e09\u4e01\u76ee  Minami25-Jonishi 13   43.0258   141.3412            0\n4              1      1101  \u5357\u4e8c\u5341\u4e94\u6761\u897f\u5341\u56db\u4e01\u76ee  Minami25-Jonishi 14   43.0255   141.3401            0\n...          ...       ...         ...                  ...       ...        ...          ...\n277186        47     47381         \u5b57\u9ce9\u9593                  NaN   24.4723   123.8204            0\n277187        47     47381         \u5b57\u7af9\u5bcc                  NaN   24.3261   124.0891            0\n277188        47     47381       \u5b57\u5357\u98a8\u898b\u4ef2                  NaN   24.2882   123.8880            0\n277189        47     47381         \u5b57\u65b0\u57ce                  NaN   24.2340   123.9449            0\n277190        47     47382        \u5b57\u4e0e\u90a3\u56fd                  NaN   24.4559   122.9877            0\n\nIn [5]: jp.towns.info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 277191 entries, 0 to 277190\nData columns (total 7 columns):\n #   Column        Non-Null Count   Dtype\n---  ------        --------------   -----\n 0   prefCode      277191 non-null  int8\n 1   cityCode      277191 non-null  int32\n 2   town          277191 non-null  object\n 3   townAlphabet  237491 non-null  object\n 4   latitude      277191 non-null  float64\n 5   longitude     277191 non-null  float64\n 6   bigCityFlag   277191 non-null  int8\ndtypes: float64(2), int32(1), int8(2), object(2)\nmemory usage: 12.2+ MB\n\nIn [6]:\n```\n\n## class JpPrefecture\n\n - `name2code()`\n - `code2name()`\n - `name2normalize()`\n - `validate()`\n\n\n```python\nfrom jp_prefecture import jp_prefectures as jp\nimport pandas as pd\n\nassert ( jp.name2code('\u4eac\u90fd\u5e9c')\n         == jp.name2code('\u4eac\u90fd')\n         == jp.name2code('Kyoto')\n         == jp.name2code('KYOTO')\n         == jp.name2code('kyoto')\n         == 26 )\n\nassert ( jp.name2code(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\n         == jp.name2code(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f'])\n         == jp.name2code(['Kyoto', 'Osaka', 'Nara'])\n         == jp.name2code(['KYOTO', 'OSAKA', 'NARA'])\n         == jp.name2code(['kyoto', 'osaka', 'nara'])\n         == [26, 27, 29] )\n\ns1 = jp.name2code(pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']))\ns2 = jp.name2code(pd.Series(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f']))\ns3 = jp.name2code(pd.Series(['Kyoto', 'Osaka', 'Nara']))\ns4 = jp.name2code(pd.Series(['KYOTO', 'OSAKA', 'NARA']))\ns5 = jp.name2code(pd.Series(['kyoto', 'osaka', 'nara']))\ns6 = pd.Series([26, 27, 29])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == s5.equals(s6)\n         == True )\n\nassert jp.code2name(26) == '\u4eac\u90fd\u5e9c'\nassert jp.code2name(\"26\") == '\u4eac\u90fd\u5e9c'\n\nassert ( jp.code2name([26, 27, 29])\n         == ['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'] )\nassert ( jp.code2name([\"26\", \"27\", \"29\"])\n         == ['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'] )\n\ns1 = jp.code2name(pd.Series([26, 27, 29]))\ns2 = pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\nassert s1.equals(s2) == True\ns1 = jp.code2name(pd.Series([\"26\", \"27\", \"29\"]))\ns2 = pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\nassert s1.equals(s2) == True\n\nassert jp.code2name(26, ascii=True) == 'Kyoto'\nassert jp.code2name(\"26\", ascii=True) == 'Kyoto'\n\nassert ( jp.code2name([26, 27, 29], ascii=True)\n         == ['Kyoto', 'Osaka', 'Nara'] )\nassert ( jp.code2name([\"26\", \"27\", \"29\"], ascii=True)\n         == ['Kyoto', 'Osaka', 'Nara'] )\n\ns1 = jp.code2name(pd.Series([26, 27, 29]), ascii=True)\ns2 = pd.Series(['Kyoto', 'Osaka', 'Nara'])\nassert s1.equals(s2) == True\n\ns1 = jp.code2name(pd.Series([\"26\", \"27\", \"29\"]), ascii=True)\ns2 = pd.Series(['Kyoto', 'Osaka', 'Nara'])\nassert s1.equals(s2) == True\n\nassert ( jp.name2normalize('\u4eac\u90fd\u5e9c')\n         == jp.name2normalize('\u4eac\u90fd')\n         == jp.name2normalize('Kyoto')\n         == jp.name2normalize('KYOTO')\n         == jp.name2normalize('kyoto')\n         == '\u4eac\u90fd\u5e9c' )\n\nassert ( jp.name2normalize(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\n         == jp.name2normalize(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f'])\n         == jp.name2normalize(['Kyoto', 'Osaka', 'Nara'])\n         == jp.name2normalize(['KYOTO', 'OSAKA', 'NARA'])\n         == jp.name2normalize(['kyoto', 'osaka', 'nara'])\n         == ['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'] )\n\ns1 = jp.name2normalize(pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']))\ns2 = jp.name2normalize(pd.Series(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f']))\ns3 = jp.name2normalize(pd.Series(['Kyoto', 'Osaka', 'Nara']))\ns4 = jp.name2normalize(pd.Series(['KYOTO', 'OSAKA', 'NARA']))\ns5 = jp.name2normalize(pd.Series(['kyoto', 'osaka', 'nara']))\ns6 = pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == s5.equals(s6)\n         == True )\n\nassert ( jp.name2normalize('\u4eac\u90fd\u5e9c', ascii=True)\n         == jp.name2normalize('\u4eac\u90fd', ascii=True)\n         == jp.name2normalize('Kyoto', ascii=True)\n         == jp.name2normalize('KYOTO', ascii=True)\n         == jp.name2normalize('kyoto', ascii=True)\n         == 'Kyoto' )\n\nassert ( jp.name2normalize(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'], ascii=True)\n         == jp.name2normalize(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f'], ascii=True)\n         == jp.name2normalize(['Kyoto', 'Osaka', 'Nara'], ascii=True)\n         == jp.name2normalize(['KYOTO', 'OSAKA', 'NARA'], ascii=True)\n         == jp.name2normalize(['kyoto', 'osaka', 'nara'], ascii=True)\n         == ['Kyoto', 'Osaka', 'Nara'] )\n\ns1 = jp.name2normalize(\n        pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']), ascii=True)\ns2 = jp.name2normalize(\n        pd.Series(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f']), ascii=True)\ns3 = jp.name2normalize(\n        pd.Series(['Kyoto', 'Osaka', 'Nara']), ascii=True)\ns4 = jp.name2normalize(\n        pd.Series(['KYOTO', 'OSAKA', 'NARA']), ascii=True)\ns5 = jp.name2normalize(\n        pd.Series(['kyoto', 'osaka', 'nara']), ascii=True)\ns6 = pd.Series(['Kyoto', 'Osaka', 'Nara'])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == s5.equals(s6)\n         == True )\n\nassert ( jp.validate('\u4eac\u90fd\u5e9c')\n         == jp.validate('\u4eac\u90fd')\n         == jp.validate('Kyoto')\n         == jp.validate('KYOTO')\n         == jp.validate('kyoto')\n         == True )\n\nassert ( jp.validate('\u4eac\u90fd\u770c')\n         == jp.validate('\u90fd\u4eac')\n         == jp.validate('KyOto')\n         == jp.validate('KYoTO')\n         == jp.validate('kyotofu')\n         == False )\n\nassert ( jp.validate(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\n         == jp.validate(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f'])\n         == jp.validate(['Kyoto', 'Osaka', 'Nara'])\n         == jp.validate(['KYOTO', 'OSAKA', 'NARA'])\n         == jp.validate(['kyoto', 'osaka', 'nara'])\n         == [True, True, True] )\n\nassert ( jp.validate(['\u4eac\u90fd\u770c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\n         == jp.validate(['\u90fd\u4eac', '\u5927\u962a', '\u5948\u826f'])\n         == jp.validate(['KyOto', 'Osaka', 'Nara'])\n         == jp.validate(['KYoTO', 'OSAKA', 'NARA'])\n         == jp.validate(['kyotofu', 'osaka', 'nara'])\n         == [False, True, True] )\n\ns1 = jp.validate(pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']))\ns2 = jp.validate(pd.Series(['\u4eac\u90fd', '\u5927\u962a', '\u5948\u826f']))\ns3 = jp.validate(pd.Series(['Kyoto', 'Osaka', 'Nara']))\ns4 = jp.validate(pd.Series(['KYOTO', 'OSAKA', 'NARA']))\ns5 = jp.validate(pd.Series(['kyoto', 'osaka', 'nara']))\ns6 = pd.Series([True, True, True])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == s5.equals(s6)\n         == True )\n\ns1 = jp.validate(pd.Series(['\u4eac\u90fd\u770c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']))\ns2 = jp.validate(pd.Series(['\u90fd\u4eac', '\u5927\u962a', '\u5948\u826f']))\ns3 = jp.validate(pd.Series(['KyOto', 'Osaka', 'Nara']))\ns4 = jp.validate(pd.Series(['KYoTO', 'OSAKA', 'NARA']))\ns5 = jp.validate(pd.Series(['kyotofu', 'osaka', 'nara']))\ns6 = pd.Series([False, True, True])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == s5.equals(s6)\n         == True )\n\n```\n\n## class JpCity\n\nJpCity class is subclass of JpPrefecture.\n\n- `citycode2name()`\n- `cityname2code()`\n- `cityname2normalize()`\n- `citycode2normalize()`\n- `cityname2prefcode()`\n- `cityname2preffecture()`\n- `cityname2geodetic()`\n- `citycode2geodetic()`\n- `findcity()`\n- `validate_city()`\n\n```python\nfrom jp_prefecture.jp_cities import jp_cities as jp\nimport pandas as pd\n\nassert ( jp.cityname2code('\u672d\u5e4c\u5e02')\n         == jp.cityname2code('Sapporo-shi')\n         == 1100 )\n\nassert ( jp.cityname2code('\u672d\u5e4c\u5e02', as_str=True)\n         == jp.cityname2code('Sapporo-shi', as_str=True)\n         == \"01100\" )\n\nassert ( jp.cityname2code('\u4eac\u90fd\u5e02')\n         == jp.cityname2code('Kyoto-shi')\n         == 26100 )\n\nassert ( jp.cityname2code('KYOTO-SHI')\n         == jp.cityname2code('kyoto-shi')\n         == None )\n\nassert ( jp.cityname2code('\u4eac\u90fd\u5e02', ignore_case=True)\n         == jp.cityname2code('Kyoto-shi', ignore_case=True)\n         == jp.cityname2code('KYOTO-SHI', ignore_case=True)\n         == jp.cityname2code('kyoto-shi', ignore_case=True)\n         == 26100 )\n\nassert ( jp.cityname2code('\u4eac\u90fd\u5e02', checkdigit=True)\n         == jp.cityname2code('Kyoto-shi', checkdigit=True)\n         == 261009 )\n\nassert ( jp.cityname2code(\n            ['\u4eac\u90fd\u5e02\u5317\u533a', '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a', '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\n         == jp.cityname2code(\n                ['Kyoto-shi Kita-ku',\n                 'Kyoto-shi Sakyo-ku',\n                 'Kyoto-shi Ukyo-ku'] )\n         == [26101, 26103, 26108] )\n\nassert ( jp.cityname2code(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU'] )\n         == jp.cityname2code(\n                ['kyoto-shi kita-ku',\n                 'kyoto-shi sakyo-ku',\n                 'kyoto-shi ukyo-ku'] )\n         == [None, None, None] )\n\nassert ( jp.cityname2code(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU'], ignore_case=True )\n         == jp.cityname2code(\n                ['kyoto-shi kita-ku',\n                 'kyoto-shi sakyo-ku',\n                 'kyoto-shi ukyo-ku'], ignore_case=True )\n         == [26101, 26103, 26108] )\n\ns1 = jp.cityname2code( pd.Series(\n             ['\u4eac\u90fd\u5e02\u5317\u533a', '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a', '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a']))\ns2 = jp.cityname2code( pd.Series(\n                ['Kyoto-shi Kita-ku',\n                 'Kyoto-shi Sakyo-ku',\n                 'Kyoto-shi Ukyo-ku'] ))\ns3 = pd.Series([26101, 26103, 26108])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2code( pd.Series(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU'] ))\ns2 = jp.cityname2code( pd.Series(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU'] ))\ns3 = pd.Series([None, None, None])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2code( pd.Series(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU']), ignore_case=True )\ns2 = jp.cityname2code( pd.Series(\n                ['KYOTO-SHI KITA-KU',\n                 'KYOTO-SHI SAKYO-KU',\n                 'KYOTO-SHI UKYO-KU']), ignore_case=True )\ns3 = pd.Series([26101, 26103, 26108])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\nassert ( jp.cityname2normalize('\u4eac\u90fd\u5e02')\n         == jp.cityname2normalize('Kyoto-shi')\n         == '\u4eac\u90fd\u5e02')\n\nassert ( jp.cityname2normalize('KYOTO-SHI')\n         == jp.cityname2normalize('kyoto-shi')\n         == None )\n\nassert ( jp.cityname2normalize('\u4eac\u90fd\u5e02')\n         == jp.cityname2normalize('KYOTO-SHI', ignore_case=True)\n         == jp.cityname2normalize('kyoto-shi', ignore_case=True)\n         == '\u4eac\u90fd\u5e02')\n\nassert ( jp.cityname2normalize(\n            ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n             '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\n         == jp.cityname2normalize(\n            ['Kyoto-shi Kita-ku',\n             'Kyoto-shi Sakyo-ku',\n             'Kyoto-shi Ukyo-ku'] )\n         == ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n             '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\n\nassert ( jp.cityname2normalize(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU'] )\n         == jp.cityname2normalize(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku'] )\n         == [None, None, None] )\n\nassert ( jp.cityname2normalize(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU'], ignore_case=True )\n         == jp.cityname2normalize(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku'], ignore_case=True)\n         == ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n             '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\n\ns1 = jp.cityname2normalize( pd.Series(\n                 ['\u4eac\u90fd\u5e02\u5317\u533a',\n                  '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n                   '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a']))\ns2 = jp.cityname2normalize( pd.Series(\n                 ['Kyoto-shi Kita-ku',\n                  'Kyoto-shi Sakyo-ku',\n                  'Kyoto-shi Ukyo-ku'] ))\ns3 = pd.Series( ['\u4eac\u90fd\u5e02\u5317\u533a',\n                 '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n                 '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2normalize( pd.Series(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU'] ))\ns2 = jp.cityname2normalize( pd.Series(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku'] ))\ns3 = pd.Series( [None, None, None] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2normalize( pd.Series(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU']), ignore_case=True )\ns2 = jp.cityname2normalize( pd.Series(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku']), ignore_case=True)\ns3 = pd.Series( ['\u4eac\u90fd\u5e02\u5317\u533a',\n                 '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n                 '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\nassert ( jp.cityname2normalize('\u4eac\u90fd\u5e02',ascii=True)\n         == jp.cityname2normalize('Kyoto-shi',ascii=True)\n         == \"Kyoto-shi\" )\n\nassert ( jp.cityname2normalize('KYOTO-SHI',ascii=True)\n         == jp.cityname2normalize('kyoto-shi',ascii=True)\n         == None )\n\nassert ( jp.cityname2normalize('KYOTO-SHI',\n                ascii=True, ignore_case=True)\n         == jp.cityname2normalize('kyoto-shi',\n                ascii=True, ignore_case=True)\n         == \"Kyoto-shi\" )\n\nassert ( jp.cityname2normalize(\n            ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n             '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'], ascii=True)\n         == jp.cityname2normalize(\n            ['Kyoto-shi Kita-ku',\n             'Kyoto-shi Sakyo-ku',\n             'Kyoto-shi Ukyo-ku'], ascii=True)\n         == ['Kyoto-shi Kita-ku',\n             'Kyoto-shi Sakyo-ku',\n             'Kyoto-shi Ukyo-ku']  )\n\nassert ( jp.cityname2normalize(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU'], ascii=True)\n         == jp.cityname2normalize(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku'], ascii=True)\n         == [None, None, None] )\n\nassert ( jp.cityname2normalize(\n            ['KYOTO-SHI KITA-KU',\n             'KYOTO-SHI SAKYO-KU',\n             'KYOTO-SHI UKYO-KU'], ascii=True, ignore_case=True)\n         == jp.cityname2normalize(\n            ['kyoto-shi kita-ku',\n             'kyoto-shi sakyo-ku',\n             'kyoto-shi ukyo-ku'], ascii=True, ignore_case=True)\n         == ['Kyoto-shi Kita-ku',\n             'Kyoto-shi Sakyo-ku',\n             'Kyoto-shi Ukyo-ku']  )\n\ns1 = jp.cityname2normalize( pd.Series(\n             ['\u4eac\u90fd\u5e02\u5317\u533a',\n              '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n              '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a']), ascii=True)\ns2 = jp.cityname2normalize( pd.Series(\n             ['Kyoto-shi Kita-ku',\n              'Kyoto-shi Sakyo-ku',\n              'Kyoto-shi Ukyo-ku'] ), ascii=True)\ns3 = pd.Series( ['Kyoto-shi Kita-ku',\n                 'Kyoto-shi Sakyo-ku',\n                 'Kyoto-shi Ukyo-ku'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2normalize( pd.Series(\n             ['KYOTO-SHI KITA-KU',\n              'KYOTO-SHI SAKYO-KU',\n              'KYOTO-SHI UKYO-KU'] ), ascii=True)\ns2 = jp.cityname2normalize( pd.Series(\n             ['kyoto-shi kita-ku',\n              'kyoto-shi sakyo-ku',\n              'kyoto-shi ukyo-ku'] ), ascii=True)\ns3 = pd.Series([None, None, None])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2normalize( pd.Series(\n             ['KYOTO-SHI KITA-KU',\n              'KYOTO-SHI SAKYO-KU',\n              'KYOTO-SHI UKYO-KU'] ), ascii=True, ignore_case=True)\ns2 = jp.cityname2normalize( pd.Series(\n             ['kyoto-shi kita-ku',\n              'kyoto-shi sakyo-ku',\n              'kyoto-shi ukyo-ku'] ), ascii=True, ignore_case=True)\ns3 = pd.Series( ['Kyoto-shi Kita-ku',\n                 'Kyoto-shi Sakyo-ku',\n                 'Kyoto-shi Ukyo-ku'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\nassert jp.citycode2normalize(26100) == 26100\nassert jp.citycode2normalize(261009) == 26100\nassert jp.citycode2normalize(26100, as_str=True) == '26100'\nassert jp.citycode2normalize(261009, as_str=True) == '26100'\nassert jp.citycode2normalize(\"26100\") == 26100\nassert jp.citycode2normalize(\"261009\") == 26100\nassert jp.citycode2normalize(\"26100\", as_str=True) == '26100'\nassert jp.citycode2normalize(\"261009\", as_str=True) == '26100'\n\nassert jp.citycode2name(26100) == '\u4eac\u90fd\u5e02'\nassert jp.citycode2name(\"26100\") == '\u4eac\u90fd\u5e02'\nassert jp.citycode2name(261009) == '\u4eac\u90fd\u5e02'\nassert jp.citycode2name(\"261009\") == '\u4eac\u90fd\u5e02'\n\nassert ( jp.citycode2name([26101, 26103, 26108])\n         ==  ['\u4eac\u90fd\u5e02\u5317\u533a', '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a', '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'] )\n\nassert jp.citycode2name(26100, ascii=True) == 'Kyoto-shi'\nassert jp.citycode2name(\"26100\", ascii=True) == 'Kyoto-shi'\nassert jp.citycode2name(261009, ascii=True) == 'Kyoto-shi'\nassert jp.citycode2name(\"261009\", ascii=True) == 'Kyoto-shi'\nassert ( jp.citycode2name([26101, 26103, 26108], ascii=True)\n        == ['Kyoto-shi Kita-ku',\n            'Kyoto-shi Sakyo-ku',\n            'Kyoto-shi Ukyo-ku'] )\n\ns1 = jp.citycode2name(pd.Series([26101, 26103, 26108]), ascii=True)\ns2 = pd.Series( ['Kyoto-shi Kita-ku',\n                 'Kyoto-shi Sakyo-ku',\n                 'Kyoto-shi Ukyo-ku'] )\nassert s1.equals(s2) == True\n\n\nassert ( jp.cityname2prefcode('\u4eac\u90fd\u5e02')\n         == jp.cityname2prefcode('Kyoto-shi')\n         == 26 )\n\nassert ( jp.cityname2prefcode('KYOTO-SHI')\n         == jp.cityname2prefcode('kyoto-shi')\n         == None )\n\nassert ( jp.cityname2prefcode('\u4eac\u90fd\u5e02', ignore_case=True)\n         == jp.cityname2prefcode('KYOTO-SHI', ignore_case=True)\n         == jp.cityname2prefcode('kyoto-shi', ignore_case=True)\n         == 26 )\n\nassert ( jp.cityname2prefcode(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'])\n         == jp.cityname2prefcode(['Kyoto-shi Kita-ku',\n                                  'Osaka-shi Chuo-ku'])\n         == [26, 27] )\n\nassert ( jp.cityname2prefcode(['KYOTO-SHI KITA-KU',\n                               'OSAKA-SHI CHUO-KU'])\n         == jp.cityname2prefcode(['kyoto-shi kita-ku',\n                                  'osaka-shi chuo-ku'])\n         == [None, None] )\n\nassert ( jp.cityname2prefcode(\n               ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'],\n               ignore_case=True)\n         == jp.cityname2prefcode(\n               ['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU'],\n               ignore_case=True)\n         == jp.cityname2prefcode(\n               ['kyoto-shi kita-ku', 'osaka-shi chuo-ku'],\n               ignore_case=True)\n         == [26, 27] )\n\ns1 = jp.cityname2prefcode(\n        pd.Series(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']))\ns2 = jp.cityname2prefcode(\n        pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']))\ns3 = pd.Series([26, 27])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefcode(\n        pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']))\ns2 = jp.cityname2prefcode(\n        pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']))\ns3 = pd.Series([None, None])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefcode(\n        pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']),\n        ignore_case=True)\ns2 = jp.cityname2prefcode(\n        pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']),\n        ignore_case=True)\ns3 = pd.Series([26, 27])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\nassert ( jp.cityname2prefecture('\u4eac\u90fd\u5e02')\n         == jp.cityname2prefecture('Kyoto-shi')\n         == '\u4eac\u90fd\u5e9c' )\n\nassert ( jp.cityname2prefecture('KYOTO-SHI')\n         == jp.cityname2prefecture('kyoto-shi')\n         == None )\n\nassert ( jp.cityname2prefecture('\u4eac\u90fd\u5e02', ignore_case=True)\n         == jp.cityname2prefecture('Kyoto-shi', ignore_case=True)\n         == jp.cityname2prefecture('KYOTO-SHI', ignore_case=True)\n         == jp.cityname2prefecture('kyoto-shi', ignore_case=True)\n         == '\u4eac\u90fd\u5e9c' )\n\nassert ( jp.cityname2prefecture(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'])\n         == jp.cityname2prefecture(['Kyoto-shi Kita-ku',\n                                    'Osaka-shi Chuo-ku'])\n         == ['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c'] )\n\nassert ( jp.cityname2prefecture(\n             ['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU'])\n         == jp.cityname2prefecture(\n             ['kyoto-shi kita-ku', 'osaka-shi chuo-ku'])\n         == [None, None] )\n\nassert ( jp.cityname2prefecture(\n              ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'],\n              ignore_case=True)\n         == jp.cityname2prefecture(\n              ['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku'],\n              ignore_case=True)\n         == jp.cityname2prefecture(\n              ['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU'],\n              ignore_case=True)\n         == jp.cityname2prefecture(\n              ['kyoto-shi kita-ku', 'osaka-shi chuo-ku'],\n              ignore_case=True)\n         == ['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c'] )\n\ns1 = jp.cityname2prefecture(\n            pd.Series( ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']))\ns2 = jp.cityname2prefecture(\n            pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']))\ns3 = pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefecture(\n            pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']))\ns2 = jp.cityname2prefecture(\n            pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']))\ns3 = pd.Series([None, None] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefecture(\n            pd.Series( ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']),\n            ignore_case=True)\ns2 = jp.cityname2prefecture(\n            pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']),\n            ignore_case=True)\ns3 = jp.cityname2prefecture(\n            pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']),\n            ignore_case=True)\ns4 = jp.cityname2prefecture(\n            pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']),\n            ignore_case=True)\ns5 = pd.Series(['\u4eac\u90fd\u5e9c', '\u5927\u962a\u5e9c'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == True )\n\nassert ( jp.cityname2prefecture('\u4eac\u90fd\u5e02', ascii=True)\n         == jp.cityname2prefecture('Kyoto-shi', ascii=True)\n         == 'Kyoto' )\n\nassert ( jp.cityname2prefecture('KYOTO-SHI', ascii=True)\n         == jp.cityname2prefecture('kyoto-shi', ascii=True)\n         == None )\n\nassert ( jp.cityname2prefecture('\u4eac\u90fd\u5e02',\n                 ascii=True, ignore_case=True)\n         == jp.cityname2prefecture('Kyoto-shi',\n                 ascii=True, ignore_case=True)\n         == jp.cityname2prefecture('KYOTO-SHI',\n                 ascii=True, ignore_case=True)\n         == jp.cityname2prefecture('kyoto-shi',\n                 ascii=True, ignore_case=True)\n         == 'Kyoto' )\n\nassert ( jp.cityname2prefecture(\n             ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'],\n             ascii=True)\n         == jp.cityname2prefecture(\n             ['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku'],\n             ascii=True)\n         == ['Kyoto', 'Osaka'] )\n\nassert ( jp.cityname2prefecture(\n             ['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU'],\n             ascii=True)\n         == jp.cityname2prefecture(\n             ['kyoto-shi kita-ku', 'osaka-shi chuo-ku'],\n             ascii=True)\n         == [None, None] )\n\nassert ( jp.cityname2prefecture(\n             ['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a'],\n             ascii=True, ignore_case=True)\n         == jp.cityname2prefecture(\n             ['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku'],\n             ascii=True, ignore_case=True)\n         == jp.cityname2prefecture(\n             ['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU'],\n             ascii=True, ignore_case=True)\n         == jp.cityname2prefecture(\n             ['kyoto-shi kita-ku', 'osaka-shi chuo-ku'],\n             ascii=True, ignore_case=True)\n         == ['Kyoto', 'Osaka'] )\n\ns1 = jp.cityname2prefecture(\n             pd.Series(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']),\n             ascii=True)\ns2 = jp.cityname2prefecture(\n             pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']),\n             ascii=True)\ns3 = pd.Series(['Kyoto', 'Osaka'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefecture(\n             pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']),\n             ascii=True)\ns2 = jp.cityname2prefecture(\n             pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']),\n             ascii=True)\ns3 = pd.Series([None, None])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.cityname2prefecture(\n             pd.Series(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']),\n             ascii=True, ignore_case=True)\ns2 = jp.cityname2prefecture(\n             pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']),\n             ascii=True, ignore_case=True)\ns3 = jp.cityname2prefecture(\n             pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']),\n             ascii=True, ignore_case=True)\ns4 = jp.cityname2prefecture(\n             pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']),\n             ascii=True, ignore_case=True)\ns5 = pd.Series(['Kyoto', 'Osaka'] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == True )\n\nassert ( jp.validate_city('\u4eac\u90fd\u5e02')\n         == jp.validate_city('Kyoto-shi')\n         == True )\n\nassert ( jp.validate_city('KYOTO-SHI')\n         == jp.validate_city('kyoto-shi')\n         == False )\n\nassert ( jp.validate_city('\u4eac\u90fd\u5e02', ignore_case=True)\n         == jp.validate_city('Kyoto-shi', ignore_case=True)\n         == jp.validate_city('KYOTO-SHI', ignore_case=True)\n         == jp.validate_city('kyoto-shi', ignore_case=True)\n         == True )\n\nassert ( jp.validate_city('\u4eac\u90fd\u770c')\n         == jp.validate_city('\u90fd\u4eac\u5e02')\n         == jp.validate_city('Kyoto')\n         == jp.validate_city('kyotoshi')\n         == False )\n\nassert ( jp.validate_city(\n            ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n              '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'])\n         == jp.validate_city(\n             ['Kyoto-shi Kita-ku',\n              'Kyoto-shi Sakyo-ku',\n              'Kyoto-shi Ukyo-ku'] )\n         == [True, True, True] )\n\nassert ( jp.validate_city(\n             ['KYOTO-SHI KITA-KU',\n              'KYOTO-SHI SAKYO-KU',\n              'KYOTO-SHI UKYO-KU'] )\n         == jp.validate_city(\n             ['kyoto-shi kita-ku',\n              'kyoto-shi sakyo-ku',\n              'kyoto-shi ukyo-ku'] )\n         == [False, False, False] )\n\nassert ( jp.validate_city(\n            ['\u4eac\u90fd\u5e02\u5317\u533a',\n             '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n              '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a'], ignore_case=True)\n         == jp.validate_city(\n             ['Kyoto-shi Kita-ku',\n              'Kyoto-shi Sakyo-ku',\n              'Kyoto-shi Ukyo-ku'], ignore_case=True )\n         == jp.validate_city(\n             ['KYOTO-SHI KITA-KU',\n              'KYOTO-SHI SAKYO-KU',\n              'KYOTO-SHI UKYO-KU'], ignore_case=True )\n         == jp.validate_city(\n             ['kyoto-shi kita-ku',\n              'kyoto-shi sakyo-ku',\n              'kyoto-shi ukyo-ku'], ignore_case=True )\n         == [True, True, True] )\n\nassert ( jp.validate_city(['\u4eac\u90fd\u770c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c'])\n         == jp.validate_city(['\u90fd\u4eac', '\u5927\u962a', '\u5948\u826f'])\n         == jp.validate_city(['Kyoto', 'OSAKA', 'NARA'])\n         == jp.validate_city(['kyotofu', 'osaka', 'nara'])\n         == [False, False, False] )\n\ns1 = jp.validate_city(pd.Series(\n         ['\u4eac\u90fd\u5e02\u5317\u533a',\n          '\u4eac\u90fd\u5e02\u5de6\u4eac\u533a',\n          '\u4eac\u90fd\u5e02\u53f3\u4eac\u533a']))\ns2 = jp.validate_city( pd.Series(\n         ['Kyoto-shi Kita-ku',\n          'Kyoto-shi Sakyo-ku',\n          'Kyoto-shi Ukyo-ku'] ))\ns3 = pd.Series([True, True, True])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.validate_city(pd.Series(['\u4eac\u90fd\u770c', '\u5927\u962a\u5e9c', '\u5948\u826f\u770c']))\ns2 = pd.Series([False, False, False])\nassert ( s1.equals(s2)\n         == True )\n\ns1 = jp.validate_city(\n             pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']))\ns2 = jp.validate_city(\n             pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']))\ns3 = pd.Series([False, False])\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == True )\n\ns1 = jp.validate_city(\n             pd.Series(['\u4eac\u90fd\u5e02\u5317\u533a', '\u5927\u962a\u5e02\u4e2d\u592e\u533a']),\n             ignore_case=True)\ns2 = jp.validate_city(\n             pd.Series(['Kyoto-shi Kita-ku', 'Osaka-shi Chuo-ku']),\n             ignore_case=True)\ns3 = jp.validate_city(\n             pd.Series(['KYOTO-SHI KITA-KU', 'OSAKA-SHI CHUO-KU']),\n             ignore_case=True)\ns4 = jp.validate_city(\n             pd.Series(['kyoto-shi kita-ku', 'osaka-shi chuo-ku']),\n             ignore_case=True)\ns5 = pd.Series([True, True] )\nassert ( s1.equals(s2)\n         == s2.equals(s3)\n         == s3.equals(s4)\n         == s4.equals(s5)\n         == True )\n\nassert ( jp.cityname2geodetic('\u4eac\u90fd\u5e02')\n         == jp.cityname2geodetic('Kyoto-shi')\n         == (35.0117,135.452 ) )\n\nassert ( jp.cityname2geodetic(['\u4eac\u90fd\u5e02', '\u5927\u962a\u5e02'])\n         == jp.cityname2geodetic(['Kyoto-shi','Osaka-shi'])\n         == [(35.0117,135.452),(34.4138,135.3808)] )\n\nd1 = jp.cityname2geodetic(pd.Series(['\u4eac\u90fd\u5e02', '\u5927\u962a\u5e02']))\nd2 = pd.DataFrame([ ['\u4eac\u90fd\u5e02', 35.0117,135.452],\n                    ['\u5927\u962a\u5e02', 34.4138,135.3808]],\n                  columns=['cityName', 'latitude', 'longitude'])\ncheck = pd.concat([d1,d2]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\nd3 = jp.cityname2geodetic(pd.Series(['Kyoto-shi', 'Osaka-shi']))\nd4 = pd.DataFrame([['Kyoto-shi', 35.0117,135.452],\n                   ['Osaka-shi', 34.4138,135.3808]],\n                  columns=['cityName', 'latitude', 'longitude'])\ncheck = pd.concat([d3,d4]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\nassert ( jp.citycode2geodetic(26100) == (35.0117,135.452) )\nassert ( jp.citycode2geodetic(\"26100\") == (35.0117,135.452) )\nassert ( jp.citycode2geodetic(261009) == (35.0117,135.452) )\nassert ( jp.citycode2geodetic(\"261009\") == (35.0117,135.452) )\n\nassert ( jp.citycode2geodetic([26100, 27100])\n         == [(35.0117,135.452), (34.4138,135.3808)] )\n\nassert ( jp.citycode2geodetic([\"26100\", \"27100\"])\n         == [(35.0117,135.452), (34.4138,135.3808)] )\n\nassert ( jp.citycode2geodetic([261009, 271004])\n         == [(35.0117,135.452), (34.4138,135.3808)] )\n\nassert ( jp.citycode2geodetic([\"26100\", \"271004\"])\n         == [(35.0117,135.452), (34.4138,135.3808)] )\n\nd1 = jp.citycode2geodetic(pd.Series([26100,27100]))\nd2 = pd.DataFrame([ [26100, 35.0117,135.452],\n                    [27100, 34.4138,135.3808] ],\n                  columns=['cityCode', 'latitude', 'longitude'])\ncheck = pd.concat([d1,d2]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\nd1 = jp.citycode2geodetic(pd.Series([261009,271004]))\nd2 = pd.DataFrame([ [26100, 35.0117,135.452],\n                    [27100, 34.4138,135.3808] ],\n                  columns=['cityCode', 'latitude', 'longitude'])\ncheck = pd.concat([d1,d2]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\nd1 = jp.citycode2geodetic(pd.Series([\"26100\",\"27100\"]))\nd2 = pd.DataFrame([ [26100, 35.0117,135.452],\n                    [27100, 34.4138,135.3808] ],\n                  columns=['cityCode', 'latitude', 'longitude'])\ncheck = pd.concat([d1,d2]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\nd1 = jp.citycode2geodetic(pd.Series([\"261009\",\"271004\"]))\nd2 = pd.DataFrame([ [26100, 35.0117,135.452],\n                    [27100, 34.4138,135.3808] ],\n                  columns=['cityCode', 'latitude', 'longitude'])\ncheck = pd.concat([d1,d2]).drop_duplicates(keep=False)\nassert ( len(check) == 0 )\n\n\n```\n\n>Trivia\nKyoto, Osaka and Nara are the place where the emperor established their capitals.\n\n\n## Regular Expression\n\n`findcity()` and  `cityname2code()` allow to regexpression.\n\n```python\n\nfrom jp_prefecture.jp_cities import jp_cities as jp\nimport re\n\nname=re.compile('.*\u9577\u5ca1.*')\nexpect = ['\u9577\u5ca1\u5e02', '\u9577\u5ca1\u4eac\u5e02', '\u9577\u5ca1\u90e1\u672c\u5c71\u753a', '\u9577\u5ca1\u90e1\u5927\u8c4a\u753a']\n\nresult = jp.findcity(name)\nassert ( result == expect )\n\nname=re.compile('Kyoto.*')\nexpect = ['Kyoto-Shi',\n          'Kyoto-Shi Kita-Ku',\n          'Kyoto-Shi Kamigyo-Ku',\n          'Kyoto-Shi Sakyo-Ku',\n          'Kyoto-Shi Nakagyo-Ku',\n          'Kyoto-Shi Higashiyama-Ku',\n          'Kyoto-Shi Shimogyo-Ku',\n          'Kyoto-Shi Minami-Ku',\n          'Kyoto-Shi Ukyo-Ku',\n          'Kyoto-Shi Fushimi-Ku',\n          'Kyoto-Shi Yamashina-Ku',\n          'Kyoto-Shi Nishikyo-Ku']\n\nresult = jp.findcity(name)\nassert ( result == expect )\n\npattern = re.compile('.*\u753a\u753a')\nexpect = ['\u6775\u5cf6\u90e1\u5927\u753a\u753a']\nresult = jp.findcity(pattern)\nassert ( result == expect )\n\npattern = re.compile('.*\u753a\u753a')\nexpect = ['Kishima-gun Omachi-cho']\nresult = jp.findcity(pattern, ascii=True)\nassert ( result == expect )\n\npattern=re.compile('.*\u9577\u5ca1.*')\nexpect = [15202, 26209, 39341, 39344]\nresult = jp.cityname2code(pattern)\nassert ( result == expect )\n\npattern=re.compile('Kyoto.*')\nexpect = [26100, 26101, 26102, 26103, 26104, 26105,\n         26106, 26107, 26108, 26109, 26110, 26111]\nresult = jp.cityname2code(pattern)\nassert ( result == expect )\n```\n\n## class JpNumberParser\n\n- `kanji2number(val)`\n- `number2kanji(val, style)`\n  - style: 'kanji', 'arabic', 'mix', 'finance', 'daiji'\n- `normalize_kanjinumber(val)``\n\n```python\nn [1]: from jp_prefecture.jp_numbers import JpNumberParser\n\nIn [2]: jn = JpNumberParser()\n\nIn [3]: jn.number2kanji(87654)\nOut[3]: JpNumber(number=87654, as_str='87654', as_kanji='\u516b\u4e07\u4e03\u5343\u516d\u767e\u4e94\u5341\u56db')\n\nIn [4]: jn.number2kanji(87654, style='arabic')\nOut[4]: JpNumber(number=87654, as_str='87654', as_kanji='\uff18\uff17\uff16\uff15\uff14')\n\nIn [5]: jn.number2kanji(87654, style='mix')\nOut[5]: JpNumber(number=87654, as_str='87654', as_kanji='\uff18\u4e07\uff17\uff16\uff15\uff14')\n\nIn [6]: jn.number2kanji(87654, style='finance')\nOut[6]: JpNumber(number=87654, as_str='87654', as_kanji='\uff18\uff17\uff0c\uff16\uff15\uff14')\n\nIn [7]: jn.number2kanji(87654, style='daiji')\nOut[7]: JpNumber(number=87654, as_str='87654', as_kanji='\u634c\u842c\u6f06\u4edf\u9678\u4f70\u4f0d\u62fe\u8086')\n\nIn [8]: jn.kanji2number('\u516b\u4e07\u4e03\u5343\u516d\u767e\u4e94\u5341\u56db')\nOut[8]: JpNumber(number=87654, as_str='87654', as_kanji='\u516b\u4e07\u4e03\u5343\u516d\u767e\u4e94\u5341\u56db')\n\nIn [9]: jn.kanji2number('\uff18\uff17\uff16\uff15\uff14')\nOut[9]: JpNumber(number=87654, as_str='87654', as_kanji='\uff18\uff17\uff16\uff15\uff14')\n\nIn [10]: jn.kanji2number('\uff18\uff17\uff0c\uff16\uff15\uff14')\nOut[10]: JpNumber(number=87654, as_str='87654', as_kanji='\uff18\uff17\uff0c\uff16\uff15\uff14')\n\nIn [11]: jn.kanji2number('\u634c\u842c\u6f06\u4edf\u9678\u4f70\u4f0d\u62fe\u8086')\nOut[11]: JpNumber(number=87654, as_str='87654', as_kanji='\u634c\u842c\u6f06\u4edf\u9678\u4f70\u4f0d\u62fe\u8086')\n\nIn [12]: jn.normalize_kanjinumber('\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\uff12\u4e01\u76ee\uff11\uff15-\uff11\uff13')\nOut[12]: '\u4eac\u90fd\u5e9c\u9577\u5ca1\u4eac\u5e02\u5929\u795e\u4e8c\u4e01\u76ee\u5341\u4e94-\u5341\u4e09'\n```\n\n\n## Memory Usage\n\n```\n      jp_prefecture: 60.05 KB.\n          jp_cities: 2919.74 KB.\njp_cities_with_town: 120326.30 KB.\n     address parser: 15.07 KB.\n```\n\n\n## BONUS: simpledispatchmethod\nAs of python 3.8 [funtools.singledispatchmethod](https://docs.python.org/3/library/functools.html#functools.singledispatchmethod) allows singledispatch on methods, class methods, and staticmethods.\n\nFor older python version, you can use as follows.\n\n```python\nfrom jp_prefecture.singledispatchmethod import singledispatchmethod\n\nclass Patchwork(object):\n\n    def __init__(self, **kwargs):\n        for k, v in kwargs.items():\n            setattr(self, k, v)\n\n    @singledispatchmethod\n    def get(self, arg):\n        return getattr(self, arg, None)\n\n    @get.register(list)\n    def _(self, arg):\n        return [self.get(x) for x in arg]\n\nif __name__ == '__main__':\n    pw = Patchwork(a=1, b=2, c=3)\n    print(pw.get('b'))\n    print(pw.get(['a', 'c']))\n```\n\nSee Also [StackOverflow](https://stackoverflow.com/questions/24601722/how-can-i-use-functools-singledispatch-with-instance-methods/)\n\n\n##  BONUS: ImmutableDict\nIf you want to use immutable dictionary. try as follows.\n\n```python\nIn [1]: from jp_prefecture.immutable_dict import ImmutableDict\n\nIn [2]: d = ImmutableDict({1: 'A', 2: 'B', 3: 'C'})\n\nIn [3]: d\nOut[3]: {1: 'A', 2: 'B', 3: 'C'}\n\nIn [4]: d.pop(1)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nInput In [5], in <cell line: 1>()\n----> 1 d.pop(1)\n\nFile ~/Projects/GitHub/jp_prefecture/jp_prefecture/immutable_dict.py:10, in ImmutableDict.__getattribute__(self, attribute)\n      8 def __getattribute__(self, attribute):\n      9     if attribute in ('clear', 'update', 'pop', 'popitem', 'setdefault'):\n---> 10         raise AttributeError(\"%r object has no attribute %r\" % (type(self).__name__, attribute))\n     11     return dict.__getattribute__(self, attribute)\n\nAttributeError: 'ImmutableDict' object has no attribute 'pop'\n\nIn [5]:\n```\n\n## BONUS: checkdigit.validate_checkdigit, checkdigit.calc_cehckdigit\n\nsmall utility to compute modulus 11 check digit.\n\n```python\nfrom jp_prefecture.checkdigit import validate_checkdigit, calc_checkdigit\n\n# 26100 is CityCode of Kyoto City\n\nassert validate_checkdigit(261009) == 26100\n\nassert validate_checkdigit(\"261009\") == \"26100\"\n\nassert validate_checkdigit(261008) == None\n\nassert validate_checkdigit(\"261008\") == None\n\nassert validate_checkdigit(\"2610\", 5) == None\n\nassert validate_checkdigit(\"2610\", 5) == None\n\nassert validate_checkdigit(261009, 5) == 26100\n\nassert validate_checkdigit(\"261009\", 5) == \"26100\"\n\nassert ( validate_checkdigit(26100, 5) == 26100 )\n\nassert ( validate_checkdigit(1100, 5) == 1100 )\n\nassert ( validate_checkdigit(\"1100\", 5) == \"01100\" )\n\nassert calc_checkdigit(26100) == 261009\n\nassert calc_checkdigit(\"26100\") == \"261009\"\n\nassert calc_checkdigit(26100, only_checkdigit=True) == 9\n\nassert calc_checkdigit(\"26100\", only_checkdigit=True) == \"9\"\n\nassert validate_checkdigit(261009, weights=[6,5,4,3,2]) == 26100\n\nassert calc_checkdigit(\"26100\",  weights=[6,5,4,3,2]) == \"261009\"\n\n# for ISDB10\nassert( validate_checkdigit(4-900900672) == 490090067)\nassert( validate_checkdigit(\"4-900900672\") == \"490090067\")\n\n# for ISDB13\nassert( validate_checkdigit(\"978-4-906649-006\") == \"978490664900\")\n```\n\n# Japanese address\n\n```\nPrefecture : ( '-To':'\u90fd', '-Dou': '\u9053', '-Fu': '\u5e9c',  '-Ken': '\u770c' )\nCity: { '-Shi': '\u5e02' }\nDistrict: { '-Ku': '\u533a' }\nCounty: {'-Gun': '\u90e1' }\nTown: { '-Machi': '\u753a',\n        '-Cho': '\u753a' }\nVillage: { '-Son': '\u6751',\n           '-Mura': '\u6751' }\n```\n\n\n## The CityCode (JIS X 0402)\nThe CityCode consists of a five-digit number assigned to each local public entity (prefecture, municipality, etc.) in Japan, as well as to counties that are not solely local public entities but are used as statistical divisions, in accordance with certain rules.\nAmong the five-digit numbers The first two digits represent prefectures, numbered from north to south, from \"01\" (Hokkaido) to \"47\" (Okinawa).\nThe third digit indicates whether the area belongs to a city or a county. The third digit indicates whether the area belongs to a city or a county.\nThe last two digits are the number of the respective group represented by the third digit (\"1\": special wards, wards of ordinance-designated cities, \"2\": a group of cities, \"3-\": a group of counties, \"4-\": a group of towns and villages belonging to counties, \"5-\": a group of cities). 3-\": counties and towns/villages within each county), and the last two digits are assigned to each city, county, town, or village according to the arrangement of the third digit. The arrangement of cities, counties, towns, and villages is fixed for each prefecture and ordinance-designated city. In most prefectures, cities are arranged in the order in which they were established, but in some cases, such as Wakayama Prefecture, cities are arranged from north to south regardless of the order in which they were established.\nThus, each city, county, town, village is represented by the third digit and the last two digits combined.\nFor example, Nagaokakyo City in Kyoto Prefecture is represented by the citycode \"26209\", of which the upper two digits \"26\" represent Kyoto Prefecture and the lower three digits The last 3-digit \"209\" represents Nagaokakyo City, which is the 9th city (10th if Kyoto City is included) in Kyoto Prefecture.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iisaka51/jp_prefecture",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jp-prefecture",
            "package_url": "https://pypi.org/project/jp-prefecture/",
            "platform": null,
            "project_url": "https://pypi.org/project/jp-prefecture/",
            "project_urls": {
                "Homepage": "https://github.com/iisaka51/jp_prefecture"
            },
            "release_url": "https://pypi.org/project/jp-prefecture/0.7.9/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple utilitiy convert name of japanese prefectures",
            "version": "0.7.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14784336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b320697ee376dc897811aaf2bb570e46",
                    "sha256": "37d5e294c3a25d43af39ddccb5162bce297fdbfc2c7d04808aa3a057973d1513"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b320697ee376dc897811aaf2bb570e46",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 3865077,
                "upload_time": "2022-08-17T06:10:38",
                "upload_time_iso_8601": "2022-08-17T06:10:38.064298Z",
                "url": "https://files.pythonhosted.org/packages/ad/13/8e5976ac6c4fa80ec3fbeb577ece2a722a330a0e98849c09f76c27a8542e/jp_prefecture-0.7.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7af2ecb237f7c8631f2279b80910502f",
                    "sha256": "0a6088c97250d32580ec2e3106c77907fd58d003779386a2be1a802f89463f10"
                },
                "downloads": -1,
                "filename": "jp_prefecture-0.7.9.tar.gz",
                "has_sig": false,
                "md5_digest": "7af2ecb237f7c8631f2279b80910502f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 3843921,
                "upload_time": "2022-08-17T06:10:43",
                "upload_time_iso_8601": "2022-08-17T06:10:43.377759Z",
                "url": "https://files.pythonhosted.org/packages/b1/f9/226490b7cf821063d038d975647f6c05e4e9ad447161078abfcb26309e35/jp_prefecture-0.7.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}