{
    "1.0.1": {
        "info": {
            "author": "Niklas Laufkoetter",
            "author_email": "niklas.laufkoetter@psi.ch",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# Py-Wica Async\n#### Table of Contents\n- [Introduction](#introduction)\n- [Installation](#installation)\n- [Quick-start Guid](#quick-start-guide)\n- [Documentation](#documentation)\n- [Dependencies](#dependencies)\n- [Contribute](#contribute)\n- [Project Changes and Tagged Releases](#project-changes-and-tagged-releases)\n- [Developer Notes](#developer-notes)\n- [Contact](#contact)\n\n# Introduction\nThis project/package aims to provide a simple python interface to the wica-http server.\nCheck out the main branch to get the blocking version of the package\n\n# Installation\nInstall with pip\n```bash\npip install py-wica-async\n```\n# Quick-start Guide\n```python\nimport asyncio\nimport time\n\nfrom py-wica-aync import AsyncWicaStream\n\n\nasync def async_simple_example():\n    \"\"\"A simple example of how to use AsyncWicaStream. Run it in main by uncommenting it! \"\"\"\n\n    wica_stream = AsyncWicaStream(base_url=\"http://student08/ca/streams\", channels=[\"MMAC3:STR:2\"])\n\n    async def run_stream():\n        await wica_stream.create()\n        async for message in wica_stream.subscribe():\n            print(message)\n\n    async def stop_stream():\n        await asyncio.sleep(10)\n        print(await wica_stream.destroy())\n\n    await asyncio.gather(run_stream(), stop_stream())\n\n\nasync def async_multistream_example():\n    \"\"\" An example of how to run multiple streams at once.\n\n    Use aiostream to run it! Run it by uncommenting it in main.\n    \"\"\"\n    from aiostream import stream\n    streams = []\n    async def run_streams():\n        for _ in range(10):\n            wica_stream = AsyncWicaStream(base_url=\"http://student08/ca/streams\", channels=[\"MMAC3:STR:2\"])\n            streams.append(wica_stream)\n            await wica_stream.create()\n\n        print(\"Doing someting else before starting the stream...\")\n        await asyncio.sleep(5)\n\n        subscribed_streams = []\n\n        for wica_stream in streams:\n            print(f\"Subscribing to stream {wica_stream.id}\")\n            subscribed_streams.append(wica_stream.subscribe())\n\n\n        combine = stream.merge(*subscribed_streams)\n        async with combine.stream() as streamer:\n            async for item in streamer:\n                print(item)\n                continue\n\n\n    async def stop_streams():\n        await asyncio.sleep(25)\n        for wica_stream in streams:\n            print(await wica_stream.destroy())\n\n\n    await asyncio.gather(run_streams(), stop_streams())\n\n\nasync def main():\n    await async_simple_example()\n    #await async_multistream_example()\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n\n```\n\n# Documentation\nCurrent Features:\n* Custom Client to handle be able to extract last line of SSE with timestamp and message type.\n* Simple functions to create, delete and subscribe to streams\n* Fully Async (blocking versions available in main branch)\n\nCheck out the wiki for mor info!\n\n# Dependencies\n* [httpx](https://github.com/encode/httpx/)\n\n# Contribute\nTo contribute, simply clone the project.\n\n# Project Changes and Tagged Releases\n* See the Changelog file for further information\n* project releases are available in pypi\n\n# Developer Notes\nCurrently None\n\n# Contact\nIf you have any questions pleas contract 'niklas.laufkoetter@psi.ch'",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "asyncpywica",
            "package_url": "https://pypi.org/project/asyncpywica/",
            "platform": null,
            "project_url": "https://pypi.org/project/asyncpywica/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/asyncpywica/1.0.1/",
            "requires_dist": [
                "httpx (>=0.23.0,<0.24.0)",
                "requests (>=2.28.1,<3.0.0)"
            ],
            "requires_python": ">=3.8,<4.0",
            "summary": "A simple async python API to access wica-http SSE.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15772647,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cfb0a64e960cf3c000e19915fe3d07a7",
                    "sha256": "70775ecb670d2c896b0d559430259962b2851155986f4550af2b966dcbdc2bca"
                },
                "downloads": -1,
                "filename": "asyncpywica-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cfb0a64e960cf3c000e19915fe3d07a7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 20334,
                "upload_time": "2022-11-15T09:13:04",
                "upload_time_iso_8601": "2022-11-15T09:13:04.499748Z",
                "url": "https://files.pythonhosted.org/packages/ef/77/d0f21cbd62e0d19900d561ff7331aa91d60f2b13c4e0a3c415fe3896e2f0/asyncpywica-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a890a27aecca1cadcf907fe5bede5503",
                    "sha256": "0d8ee44902108eed4d1a2f8e876eaaaf263f7f24ed6b29924832536a69e72cef"
                },
                "downloads": -1,
                "filename": "asyncpywica-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "a890a27aecca1cadcf907fe5bede5503",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 19934,
                "upload_time": "2022-11-15T09:13:06",
                "upload_time_iso_8601": "2022-11-15T09:13:06.438588Z",
                "url": "https://files.pythonhosted.org/packages/3f/77/b4dee7b2d613fa1390212948ca5b8a4617dc22e30917d9d6c39ed28caa68/asyncpywica-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}