{
    "0.0.1": {
        "info": {
            "author": "BryanLee",
            "author_email": "bryanlee@126.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NightMarcher/fastapi-efficient-sql",
            "keywords": "sql,fastapi,tortoise-orm,mysql8,bulk-operation",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fastapi-efficient-sql",
            "package_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "platform": null,
            "project_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "project_urls": {
                "Homepage": "https://github.com/NightMarcher/fastapi-efficient-sql"
            },
            "release_url": "https://pypi.org/project/fastapi-efficient-sql/0.0.1/",
            "requires_dist": [
                "tortoise-orm"
            ],
            "requires_python": "",
            "summary": "Generate bulk DML SQL and execute them based on `tortoise-orm` and mysql8.0+, and integrated with `fastapi`.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15734245,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7453dbb62782833b3bc78e48b5ab06a8",
                    "sha256": "984240ebe3b2020150a2664b370eba8de48e2d99dffec783519db973d5dcb72f"
                },
                "downloads": -1,
                "filename": "fastapi_efficient_sql-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7453dbb62782833b3bc78e48b5ab06a8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 4623,
                "upload_time": "2022-11-07T15:08:56",
                "upload_time_iso_8601": "2022-11-07T15:08:56.423827Z",
                "url": "https://files.pythonhosted.org/packages/87/a1/8a6fd896b044a88ff0f833668e9d607a7b7333aac32d0587b187bfcf7b66/fastapi_efficient_sql-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "BryanLee",
            "author_email": "bryanlee@126.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NightMarcher/fastapi-efficient-sql",
            "keywords": "sql,fastapi,tortoise-orm,mysql8,bulk-operation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fastapi-efficient-sql",
            "package_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "platform": null,
            "project_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "project_urls": {
                "Homepage": "https://github.com/NightMarcher/fastapi-efficient-sql"
            },
            "release_url": "https://pypi.org/project/fastapi-efficient-sql/0.0.2/",
            "requires_dist": [
                "tortoise-orm"
            ],
            "requires_python": "",
            "summary": "Generate bulk DML SQL and execute them based on tortoise-orm and mysql8.0+, and integrated with fastapi.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15734245,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "151d48c94f73bd12dc095a98c1eb4569",
                    "sha256": "01ca94c5052eb8711208ac30d5f1ae3109e1e4cdcb998ab9ac627c5885d15bd6"
                },
                "downloads": -1,
                "filename": "fastapi_efficient_sql-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "151d48c94f73bd12dc095a98c1eb4569",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11335,
                "upload_time": "2022-11-10T08:07:34",
                "upload_time_iso_8601": "2022-11-10T08:07:34.775310Z",
                "url": "https://files.pythonhosted.org/packages/c4/74/e85d401bb736bbc6547d468adf369dc50b408fb2f93e10f1582f6822ee75/fastapi_efficient_sql-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "451e6455e8553eb985337251ca917cf5",
                    "sha256": "4430443ef1e4c3ce44fca1145cefbcd68f94b090a459b04f4a40412df1a71ee9"
                },
                "downloads": -1,
                "filename": "fastapi-efficient-sql-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "451e6455e8553eb985337251ca917cf5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8161,
                "upload_time": "2022-11-10T08:07:37",
                "upload_time_iso_8601": "2022-11-10T08:07:37.188468Z",
                "url": "https://files.pythonhosted.org/packages/1f/9e/57c218d6b2e074ec41fe85d76b5be3d6d99796230f1517c7418ba4e99e10/fastapi-efficient-sql-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "BryanLee",
            "author_email": "bryanlee@126.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7"
            ],
            "description": "# fastapi-efficient-sql\n\nInstalled by `pip install fastapi-efficient-sql`\n\n## Some preparations before using efficient sql\n```python\nfrom fastapi_esql import AppMetaclass, BaseManager, BaseModel\n\n\nclass DemoMetaclass(AppMetaclass):\n\n    def get_ro_conn(self):\n        return Tortoise.get_connection(\"demo_ro\")\n\n    def get_rw_conn(self):\n        return Tortoise.get_connection(\"demo_rw\")\n\n\nclass Account(BaseModel):\n    id = fields.IntField(pk=True)\n    active = fields.BooleanField(null=False, default=True)\n    gender = fields.IntEnumField(GenderEnum, null=False, default=GenderEnum.unknown)\n    name = fields.CharField(max_length=32, null=False, default=\"\")\n    locale = fields.CharEnumField(LocaleEnum, max_length=5, null=False)\n\n\nclass AccountMgr(BaseManager, metaclass=DemoMetaclass):\n    model = Account\n```\n\n## Some supported efficient sql\n### **select_custom_fields**\n**basic example**\n```python\naids = [1, 2, 3]\n\nawait AccountMgr.select_custom_fields(\n    fields=[\n        \"id\", \"extend ->> '$.last_login.ipv4' ipv4\",\n        \"extend ->> '$.last_login.start_datetime' start_datetime\",\n        \"CAST(extend ->> '$.last_login.online_sec' AS SIGNED) online_sec\"\n    ],\n    wheres=f\"id IN ({','.join(map(str, aids))}) AND gender=1\",  # These 4 types of `wheres` are equal\n    # wheres=Q(Q(id__in=aids), Q(gender=1), join_type=\"AND\"),\n    # wheres={\"id__in\": aids, \"gender\": 1},\n    # wheres=[Q(id__in=aids), Q(gender=1)],\n)\n```\nGenerate sql and execute\n```sql\n    SELECT\n        id, extend ->> '$.last_login.ipv4' ipv4, extend ->> '$.last_login.start_datetime' start_datetime, CAST(extend ->> '$.last_login.online_sec' AS SIGNED) online_sec\n    FROM account\n    WHERE id IN (1,2,3) AND gender=1\n```\n\n**complex example**\n```python\nawait AccountMgr.select_custom_fields(\n    fields=[\n        \"locale\", \"gender\", \"COUNT(1) cnt\"\n    ],\n    wheres=Q(id__range=[1, 12]),\n    groups=[\"locale\", \"gender\"],\n    having=\"cnt > 0\",\n    orders=[\"locale\", \"-gender\"],\n    limit=10,\n)\n```\nGenerate sql and execute\n```sql\n    SELECT\n        locale, gender, COUNT(1) cnt\n    FROM account\n    WHERE `id` BETWEEN 1 AND 12\n    GROUP BY locale, gender\n    HAVING cnt > 0\n    ORDER BY locale ASC, gender DESC\n    LIMIT 10\n```\n\n### **update_json_field**\n```python\nawait AccountMgr.update_json_field(\n    json_field=\"extend\",\n    wheres=Q(id=8),\n    merge_dict={\n        \"updated_at\": \"2022-10-30 21:34:15\",\n        \"info\": {\n            \"online_sec\": 636,\n        }\n    },\n    path_value_dict={\n        \"$.last_login\": {\n            \"ipv4\": \"209.182.101.161\",\n        },\n        \"$.uuid\": \"fd04f7f2-24fc-4a73-a1d7-b6e99a464c5f\",\n    },\n    remove_paths=[\"$.deprecated\"],\n    json_type=dict,\n)\n```\nGenerate sql and execute\n```sql\n    UPDATE account SET extend =\n    JSON_MERGE_PATCH(JSON_SET(JSON_REMOVE(COALESCE(extend, '{}'), '$.deprecated'), '$.last_login',CAST('{\"ipv4\": \"209.182.101.161\"}' AS JSON), '$.uuid','fd04f7f2-24fc-4a73-a1d7-b6e99a464c5f'), '{\"updated_at\": \"2022-10-30 21:34:15\", \"info\": {\"online_sec\": 636}}')\n    WHERE `id`=8\n```\n\n### **upsert_on_duplicated**\n```python\nawait AccountMgr.upsert_on_duplicated(\n    [\n        {'id': 7, 'gender': 1, 'name': '\u6589\u85e4 \u4fee\u5e73', 'locale': 'ja_JP', 'extend': {}},\n        {'id': 8, 'gender': 1, 'name': 'Ojas Salvi', 'locale': 'en_IN', 'extend': {}},\n        {'id': 9, 'gender': 1, 'name': '\u7f8a\u6dd1\u5170', 'locale': 'zh_CN', 'extend': {}}\n    ],\n    insert_fields=[\"id\", \"gender\", \"name\", \"locale\", \"extend\"],\n    upsert_fields=[\"name\", \"locale\"],\n    using_values=False,\n)\n```\nGenerate sql and execute\n```sql\n    INSERT INTO account\n        (id, gender, name, locale, extend)\n    VALUES\n        (7, 1, '\u6589\u85e4 \u4fee\u5e73', 'ja_JP', '{}'), (8, 1, 'Ojas Salvi', 'en_IN', '{}'), (9, 1, '\u7f8a\u6dd1\u5170', 'zh_CN', '{}')\n    AS `new_account` ON DUPLICATE KEY UPDATE name=`new_account`.name, locale=`new_account`.locale\n```\n\n### **insert_into_select**\n```python\nawait AccountMgr.insert_into_select(\n    wheres=Q(id__in=[4, 5, 6]),\n    remain_fields=[\"gender\", \"locale\"],\n    assign_field_dict={\n        \"active\": False,\n        \"name\": RawSQL(\"CONCAT(LEFT(name, 26), ' [NEW]')\"),\n        \"extend\": {},\n    },\n    to_table=\"account_bak\",\n)\n```\nGenerate sql and execute\n```sql\n    INSERT INTO account_bak\n        (gender, locale, active, name, extend)\n    SELECT gender, locale, False active, CONCAT(LEFT(name, 26), ' [NEW]') name, '{}' extend\n    FROM account\n    WHERE `id` IN (4,5,6)\n```\n\n### **bulk_update_with_fly_table**\n```python\nawait AccountMgr.bulk_update_with_fly_table(\n    [\n        {'id': 7, 'active': False, 'gender': <GenderEnum.male: 1>},\n        {'id': 15, 'active': True, 'gender': <GenderEnum.unknown: 0>}\n    ],\n    join_fields=[\"id\"],\n    update_fields=[\"active\", \"gender\"],\n    using_values=True,\n)\n```\nGenerate sql and execute\n```sql\n    UPDATE account\n    JOIN (\n        SELECT * FROM (\n            VALUES\n            ROW(7, False, 1), ROW(15, True, 0)\n        ) AS fly_table (id, active, gender)\n    ) tmp ON account.id=tmp.id\n    SET account.active=tmp.active, account.gender=tmp.gender\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NightMarcher/fastapi-efficient-sql",
            "keywords": "sql,fastapi,tortoise-orm,mysql8,bulk-operation",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "fastapi-efficient-sql",
            "package_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "platform": null,
            "project_url": "https://pypi.org/project/fastapi-efficient-sql/",
            "project_urls": {
                "Homepage": "https://github.com/NightMarcher/fastapi-efficient-sql"
            },
            "release_url": "https://pypi.org/project/fastapi-efficient-sql/0.0.3/",
            "requires_dist": [
                "tortoise-orm"
            ],
            "requires_python": "",
            "summary": "Generate bulk DML SQL and execute them based on tortoise-orm and mysql8.0+, and integrated with fastapi.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15734245,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e0f1cfa55297fe10c98f105f4c50e3a2",
                    "sha256": "6bc839da56f895015193c2c1d372f8f830e10ddcb65f8171ccaa56faa686b738"
                },
                "downloads": -1,
                "filename": "fastapi_efficient_sql-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e0f1cfa55297fe10c98f105f4c50e3a2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11338,
                "upload_time": "2022-11-11T10:24:27",
                "upload_time_iso_8601": "2022-11-11T10:24:27.203896Z",
                "url": "https://files.pythonhosted.org/packages/3e/6f/7c51f126e7806aa4c2f025a70f865eac48059d0057c02e4a111e5a71406a/fastapi_efficient_sql-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9246d0fe78bf695ef762fd74a0a8014c",
                    "sha256": "61cb88af9545a2f54ac5a3666b85c3f553d88701d17a1a8d4a852b472d4986ea"
                },
                "downloads": -1,
                "filename": "fastapi-efficient-sql-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "9246d0fe78bf695ef762fd74a0a8014c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8169,
                "upload_time": "2022-11-11T10:24:29",
                "upload_time_iso_8601": "2022-11-11T10:24:29.661562Z",
                "url": "https://files.pythonhosted.org/packages/f7/8d/d872b82f76f0828678aa34a1d258ea43b6479646bf83f82632c61f0908f0/fastapi-efficient-sql-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}