{
    "0.1.0": {
        "info": {
            "author": "Ben C",
            "author_email": "bwc9876@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "<!-- Disables the inline html warning -->\n<!-- markdownlint-disable MD030 MD033 -->\n\n# Djazztro\n\n<p align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/25644444/201508399-c98f41ab-3790-4c20-b82c-5b47ff3370f2.png\" alt=\"Djazztro Logo\"/><br/><br/>\nThe full stack web development stack for astronauts with deadlines.\n</p>\n\n## What is Djazztro\n\nDjazztro combines the versatility of [Django](https://www.djangoproject.com/) with the elegance of the [Astro](https://www.astro.build/) static site generator.\n\n## Why?\n\nDjazztro is a stack for people who want to use Astro, but don't want to give up Django's admin panel, or Django's ORM. It's also a stack for people who want to use Django, but don't want to give up Astro's component based approach to frontend development.\n\n## Setup\n\nTo get started, ensure you have python and node installed.\n\nNow, run `npm create djazztro@latest` and follow the prompts.\n\nYou can now `cd` into your new project's directory and run `npm run dev` to launch a development server.\n\n## How It Works\n\n### In Code\n\nIn code, your project will be split up into `backend` and `frontend` directories. The backend directory will contain your Django project, and the frontend directory will contain your Astro project.\n\nTo reference an Astro page in a Django view, simply enter its name as a string without the `.astro`. For example, if you have a page called `home.astro`, you can reference it in a Django view like so:\n\n```python\ndef home(request):\n    return render(request, 'home')\n```\n\nAny context you pass to the template can be accessed using Djazztro's tags:\n\n```astro\n---\nimport { Variable, For, If, ElseIf, Else } from \"djazztro\";\n---\n<Layout>\n    {/*Inserts a variable from the context called \"my_variable\"*/}\n    <Variable expression=\"my_variable\" />\n\n    {/*You can also apply filters by editing `expression`*/}\n    <Variable expression=\"my_variable|upper\" />\n\n    {/*Loops over a list called \"my_list\", saving the current item in a variable called `item`*/}\n    <For itemName=\"item\" sourceList=\"my_list\">\n        <Variable expression=\"item\" />\n    </For>\n\n    {/*Checks if a variable called \"my_variable\" is truthy*/}\n    <If expression=\"my_variable\">\n        True!\n    <ElseIf expression=\"some_other_variable\"/>\n        First thing is false, but this is true!\n    <Else/>\n        False!\n    </If>\n</Layout>\n```\n\nAll these components secretly use Django's template language.\n\n-   The `<Variable>` component renders to `{{ {expression} }}`.\n-   The `<Tag>` component renders to `{% {expression} %}`.\n-   All other components combine these two components to create more some useful ones.\n\nAll expressions also have escaping turned off **on Astro's side**, Django will still escape them.\n\n### In Development\n\nDjazztro starts a django development server and an astro dev server. Django's server then has a custom template backend that makes an HTTP request to the Astro dev server to get the HTML. This HTML is then rendered as a Django template.\n\n![Djazztro-Dev-Explanation](https://user-images.githubusercontent.com/25644444/201508127-5d5d76b2-0f07-4c8c-a80a-9a0e3718104f.png)\n\n### In Production\n\nDjazztro has Astro build your frontend into a static site, and then Django uses the root of that static site as it's templates folder.\n\n![Djazztro-Prod-Explanation](https://user-images.githubusercontent.com/25644444/201508342-d728a9ff-aead-4544-baa9-9de8adc9f026.png)\n\n## Contributing\n\nContributions are welcome! Please open an issue or a PR if you have any ideas.\n\n## License\n\nDjazztro is licensed under the [MIT License](LICENSE).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-djazztro",
            "package_url": "https://pypi.org/project/django-djazztro/",
            "platform": null,
            "project_url": "https://pypi.org/project/django-djazztro/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/django-djazztro/0.1.0/",
            "requires_dist": [
                "django (>=4.1.3,<5.0.0)",
                "requests (>=2.28.1,<3.0.0)"
            ],
            "requires_python": ">=3.6,<4.0",
            "summary": "Python-side of the Djazztro stack, provides a template backend for using Astro files.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15752757,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "844785d597460a70638a3998186a7a0d",
                    "sha256": "731b2927a614cf002f77431aa9f23b97b8917a47f76a98e18cca6bde843cdd50"
                },
                "downloads": -1,
                "filename": "django_djazztro-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "844785d597460a70638a3998186a7a0d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6,<4.0",
                "size": 2336,
                "upload_time": "2022-11-13T19:16:44",
                "upload_time_iso_8601": "2022-11-13T19:16:44.473714Z",
                "url": "https://files.pythonhosted.org/packages/7b/3b/9c7454dff2803f16419498a467c09fa1d252f86e7e82d93696718e58b442/django_djazztro-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "55df44881eba1bb42f99f618c1eb45c5",
                    "sha256": "c1f88a6666a0c03f2559dda3af98f619b9cd8feff1d45331b5fdf621d6043c1b"
                },
                "downloads": -1,
                "filename": "django_djazztro-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "55df44881eba1bb42f99f618c1eb45c5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6,<4.0",
                "size": 1763,
                "upload_time": "2022-11-13T19:16:46",
                "upload_time_iso_8601": "2022-11-13T19:16:46.657993Z",
                "url": "https://files.pythonhosted.org/packages/69/a9/6bb74796317062ebaa4b0c055f97420ad86520507cfbfcfe200914257882/django_djazztro-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}