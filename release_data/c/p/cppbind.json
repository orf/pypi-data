{
    "1.0.1": {
        "info": {
            "author": "Picsart",
            "author_email": "info@cppbind.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: C++",
                "Programming Language :: Kotlin",
                "Programming Language :: Python :: 3",
                "Topic :: Software Development :: Code Generators"
            ],
            "description": "\n![](https://raw.githubusercontent.com/PicsArt/cppbind/master/docs/_static/img/cppbind-logo.svg)\n\n# Introduction\n\nCppBind is a software development tool that automates language bindings\ngeneration between C++ and other languages. It works by annotating C++\ncode to indicate parts desired to expose to all supported target\nlanguages. The current version of the tool supports bindings with\n**Swift**, **Kotlin**, and **Python**, while support for new languages\ncan be added relatively easily.\n\nManually developing bindings is complex, time-consuming, and\nerror-prone, especially for large-scale projects requiring frequent\nchanges. To develop manual bindings, one should be knowledgeable in both\nC++ and the target language to implement types serialization from one\nlanguage to another, function and method mapping, and more. To overcome\nthese challenges, we introduce CppBind.\n\n## CppBind main highlights:\n\n-   Generates binding wrappers for multiple languages (Python, Swift,\n    and Kotlin);\n-   Allows using language-agnostic annotations for all supported\n    languages;\n-   Supports a rich set of C++ features;\n-   Provides the ability to add support for other languages;\n-   Can be used to generate bindings for third-party C++ libraries.\n\n# Features\n\nCppBind generates bindings for C++ types and entities like classes,\nmethods, global functions, enums, nested structures, templates, etc. The\nlist of the main features of CppBind is following:\n\n- [Functions](https://cppbind.io/03_get_started/01_functions.html)\n  - [Global functions](https://cppbind.io/03_get_started/01_functions.html#global-functions)\n  - [Overloaded functions](https://cppbind.io/03_get_started/01_functions.html#overloaded-methods)\n  - [Optional arguments](https://cppbind.io/03_get_started/01_functions.html#nullable-arguments)\n  - [Default arguments](https://cppbind.io/03_get_started/01_functions.html#default-arguments)\n  - [Return value's lifetime and ownership management](https://cppbind.io/03_get_started/01_functions.html#return-value-policies)\n  - [Controlling function arguments' lifetime](https://cppbind.io/03_get_started/01_functions.html#keep-alive-policy)\n- [OOP](https://cppbind.io/03_get_started/02_classes.html)\n  - [Classes and structs](https://cppbind.io/03_get_started/02_classes.html)\n  - [Nested types](https://cppbind.io/03_get_started/02_classes.html#nested-types)\n  - [C++ classes/structs as target language interfaces](https://cppbind.io/03_get_started/02_classes.html)\n  - [Enumerations](https://cppbind.io/03_get_started/03_enums.html)\n  - [Inheritance](https://cppbind.io/03_get_started/04_inheritance.html)\n    - [Single inheritance](https://cppbind.io/03_get_started/04_inheritance.html#single-inheritance)\n    - [Multiple inheritance through the target language interfaces](https://cppbind.io/03_get_started/04_inheritance.html#multiple-inheritance)\n  - [Object type preservation](https://cppbind.io/04_advanced_features/05_object_type_preservation.html)\n  - [Static methods](https://cppbind.io/03_get_started/01_functions.html#static-methods)\n  - [Method overloading](https://cppbind.io/03_get_started/01_functions.html#overloaded-methods)\n  - [Converting getters/setters to target language properties](https://cppbind.io/03_get_started/01_functions.html)\n  - [Operator overloading](https://cppbind.io/03_get_started/07_operators.html)\n    - [Overloading subscript operator](https://cppbind.io/03_get_started/07_operators.html#overloading-subscript-operator)\n  - [Templates](https://cppbind.io/03_get_started/06_templates.html)\n    - [Template classes](https://cppbind.io/03_get_started/06_templates.html#class-templates)\n    - [Template methods and functions](https://cppbind.io/03_get_started/06_templates.html)\n    - [Converting getters/setters with template parameters to target language properties](https://cppbind.io/03_get_started/06_templates.html#template-getters-setters)\n  - [Exception handling](https://cppbind.io/03_get_started/05_exception_handling.html)\n  - [Standard library types (std::shared_ptr, std::vector, std::map, etc.)](https://github.com/PicsArt/cppbind/tree/master/examples/primitives/cxx/containers)\n  - [Custom type conversions](https://cppbind.io/04_advanced_features/02_custom_types.html)\n  - [Intelligent code completion](https://en.wikipedia.org/wiki/Intelligent_code_completion)\n\n# Usage\n\nCppBind instructions are controlled using annotations. There are two\nprominent use cases for annotating C++ source files: either you are the\nsource code owner, or it's from a third-party/standard library. CppBind\nannotations are specified directly in the source files in the first\ncase. In the second case, separate config files can be used. The second\nuse case works well for binding third-party C++ libraries.\n\n-   To configure a project with self-owned files, you can read our\n    \"Hello User\"\n    [tutorial](https://cppbind.io/02_first_steps/04_hello_user.html).\n-   To configure a project with third-party/standard library files, you\n    can read our \"Array\"\n    [tutorial](https://cppbind.io/02_first_steps/05_array_tutorial.html).\n\nAbove-described usages can also be mixed: annotations for self-owned\nfiles are written inside those files, while third-party/standard library\nfiles are annotated via separate config files.\n\n# Installation\n\nThere are some required steps to install and use CppBind. The\ninstallation steps are described\n[here](https://cppbind.io/02_first_steps/03_installation.html).\n\n# License\n\nCppBind is provided under the MIT license that can be found in the\n[LICENSE](https://github.com/PicsArt/cppbind/blob/master/LICENSE) file.\nBy using, distributing, or contributing to this project, you agree to\nthe terms and conditions of this license.\n\n# How to contribute to CppBind?\n\nIf you like CppBind and would like to contribute to this open-source\nproject, please check the [Contribution\nguide](https://github.com/PicsArt/cppbind/blob/master/docs/CONTRIBUTING.md).\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PicsArt/cppbind",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cppbind",
            "package_url": "https://pypi.org/project/cppbind/",
            "platform": null,
            "project_url": "https://pypi.org/project/cppbind/",
            "project_urls": {
                "Documentation": "https://cppbind.io/",
                "Homepage": "https://github.com/PicsArt/cppbind"
            },
            "release_url": "https://pypi.org/project/cppbind/1.0.1/",
            "requires_dist": [
                "cached-property (==1.5.2)",
                "cachetools (==5.0.0)",
                "coverage (==6.3.2)",
                "GitPython (==3.1.17)",
                "ipdb (==0.13.3)",
                "isort (==5.9.3)",
                "jedi (==0.17.2)",
                "Jinja2 (==3.0.3)",
                "pytest (==6.0.1)",
                "PyYAML (==5.4)",
                "sortedcontainers (==2.4.0)",
                "twine (==3.8.0)",
                "wheel (==0.36.2)"
            ],
            "requires_python": ">=3.6",
            "summary": "C++ bindings generator for various languages",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14410085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c730370010ecdbece315d2e07e3db8c7",
                    "sha256": "cf4d6716fe24d603dfb3e1d54942c57f9ad8108b7b672efce1712241b4ac0101"
                },
                "downloads": -1,
                "filename": "cppbind-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c730370010ecdbece315d2e07e3db8c7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 165021,
                "upload_time": "2022-07-12T11:31:46",
                "upload_time_iso_8601": "2022-07-12T11:31:46.827792Z",
                "url": "https://files.pythonhosted.org/packages/ad/5b/448205ad10eace15256d61f72f8669960b32509dfdab84c84aa050f65cba/cppbind-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "51d98529c621a01d95ead34c3f99eebb",
                    "sha256": "3ff26dc42a303c2ce2aa85a813b59b35526f5dbe12d3f4587914d4bdca86a4e4"
                },
                "downloads": -1,
                "filename": "cppbind-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "51d98529c621a01d95ead34c3f99eebb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 141503,
                "upload_time": "2022-07-12T11:31:48",
                "upload_time_iso_8601": "2022-07-12T11:31:48.158651Z",
                "url": "https://files.pythonhosted.org/packages/f2/ad/1e40b52e14ab3f9a05789eb2dc4a6fa3893aec18984b236958bde106faf5/cppbind-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}