{
    "0.1.0": {
        "info": {
            "author": "ZhouYang Luo",
            "author_email": "zhouyang.luo@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/luozhouyang/AutoPhraseX",
            "keywords": "",
            "license": "Apache Software License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autophrasex",
            "package_url": "https://pypi.org/project/autophrasex/",
            "platform": "",
            "project_url": "https://pypi.org/project/autophrasex/",
            "project_urls": {
                "Homepage": "https://github.com/luozhouyang/AutoPhraseX"
            },
            "release_url": "https://pypi.org/project/autophrasex/0.1.0/",
            "requires_dist": [
                "jieba",
                "lac",
                "naive-stopwords",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Automated Phrase Mining from Massive Text Corpora in Python.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10445152,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "80995c01eddc10ac9afc757f1895ad43",
                    "sha256": "a3b6aeaab79218eaa970553d3d2d8ab46d1e6c6a803004821501f0f0146a974a"
                },
                "downloads": -1,
                "filename": "autophrasex-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "80995c01eddc10ac9afc757f1895ad43",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15455,
                "upload_time": "2020-12-17T12:16:49",
                "upload_time_iso_8601": "2020-12-17T12:16:49.077240Z",
                "url": "https://files.pythonhosted.org/packages/fd/8c/239430f81747e16de587e026762e8ed9b20f45a15c2c4dbd6f8132c2f35c/autophrasex-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2c40f7c5531216f2c007325a0faa2b29",
                    "sha256": "c7ac0082be7218a167f2aa7200fbbff64db8dd0bba98817756e1bdfd88a8f07d"
                },
                "downloads": -1,
                "filename": "autophrasex-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2c40f7c5531216f2c007325a0faa2b29",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10666,
                "upload_time": "2020-12-17T12:16:50",
                "upload_time_iso_8601": "2020-12-17T12:16:50.145978Z",
                "url": "https://files.pythonhosted.org/packages/d1/f6/7136ca2e6d942e190c0aefa2ce7af10e9e8b3e69d4a82ba70e0f059399c7/autophrasex-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "ZhouYang Luo",
            "author_email": "zhouyang.luo@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/luozhouyang/AutoPhraseX",
            "keywords": "",
            "license": "Apache Software License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autophrasex",
            "package_url": "https://pypi.org/project/autophrasex/",
            "platform": "",
            "project_url": "https://pypi.org/project/autophrasex/",
            "project_urls": {
                "Homepage": "https://github.com/luozhouyang/AutoPhraseX"
            },
            "release_url": "https://pypi.org/project/autophrasex/0.1.1/",
            "requires_dist": [
                "lac",
                "naive-stopwords",
                "jieba",
                "scikit-learn",
                "opencc"
            ],
            "requires_python": "",
            "summary": "Automated Phrase Mining from Massive Text Corpora in Python.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10445152,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f1dfa42ee0524eb5a7ed1bc1d31fef53",
                    "sha256": "08f9a0225f6242c04a6d9764279c2bc083361e5d20f45fa5ca4095abde98e3c1"
                },
                "downloads": -1,
                "filename": "autophrasex-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f1dfa42ee0524eb5a7ed1bc1d31fef53",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15559,
                "upload_time": "2020-12-21T11:11:40",
                "upload_time_iso_8601": "2020-12-21T11:11:40.100585Z",
                "url": "https://files.pythonhosted.org/packages/28/99/779cdbf7a48eae399e56c8c1598ce9c39ea744d83dc22b12f0d5c0842f9b/autophrasex-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b10757274bd8f87e45ad6557e37494d8",
                    "sha256": "833e251c4241349c23c48ae5ce9882cf53509fd54556de863ae68d07d6063b2e"
                },
                "downloads": -1,
                "filename": "autophrasex-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b10757274bd8f87e45ad6557e37494d8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10946,
                "upload_time": "2020-12-21T11:11:41",
                "upload_time_iso_8601": "2020-12-21T11:11:41.206856Z",
                "url": "https://files.pythonhosted.org/packages/9e/1e/a77a58d4c736a669615f9fb444721d6f3163d233616e8268b400c2d29414/autophrasex-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "ZhouYang Luo",
            "author_email": "zhouyang.luo@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/luozhouyang/AutoPhraseX",
            "keywords": "",
            "license": "Apache Software License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autophrasex",
            "package_url": "https://pypi.org/project/autophrasex/",
            "platform": "",
            "project_url": "https://pypi.org/project/autophrasex/",
            "project_urls": {
                "Homepage": "https://github.com/luozhouyang/AutoPhraseX"
            },
            "release_url": "https://pypi.org/project/autophrasex/0.2.0/",
            "requires_dist": [
                "naive-stopwords",
                "jieba",
                "lac",
                "scikit-learn",
                "opencc"
            ],
            "requires_python": "",
            "summary": "Automated Phrase Mining from Massive Text Corpora in Python.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10445152,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3ef7cd361ef89ff9301297b1d75941e3",
                    "sha256": "96c490a15f719170bc34e985da4540a3d15fc8de2a41db357bfc38b52ed647bd"
                },
                "downloads": -1,
                "filename": "autophrasex-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3ef7cd361ef89ff9301297b1d75941e3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 19060,
                "upload_time": "2021-04-16T13:36:23",
                "upload_time_iso_8601": "2021-04-16T13:36:23.109928Z",
                "url": "https://files.pythonhosted.org/packages/cb/de/8eb9d8274a72c728c42ffd2d240a38726536245d158794b5d6b1faa852d4/autophrasex-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "aaa641634b894030e4da7a24fb618d9d",
                    "sha256": "9f46737f94c3f19aa6bc75a85411bdfa3ea8d7a6defc51f82a2a935a1bf328c3"
                },
                "downloads": -1,
                "filename": "autophrasex-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "aaa641634b894030e4da7a24fb618d9d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13337,
                "upload_time": "2021-04-16T13:36:24",
                "upload_time_iso_8601": "2021-04-16T13:36:24.445149Z",
                "url": "https://files.pythonhosted.org/packages/9c/74/4a14107a25a05a37014d1b9af8df040509e0a71a696624b0ed16304e9289/autophrasex-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "ZhouYang Luo",
            "author_email": "zhouyang.luo@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/luozhouyang/AutoPhraseX",
            "keywords": "",
            "license": "Apache Software License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autophrasex",
            "package_url": "https://pypi.org/project/autophrasex/",
            "platform": "",
            "project_url": "https://pypi.org/project/autophrasex/",
            "project_urls": {
                "Homepage": "https://github.com/luozhouyang/AutoPhraseX"
            },
            "release_url": "https://pypi.org/project/autophrasex/0.3.0/",
            "requires_dist": [
                "jieba",
                "naive-stopwords",
                "scikit-learn",
                "opencc"
            ],
            "requires_python": "",
            "summary": "Automated Phrase Mining from Massive Text Corpora in Python.",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10445152,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cb1e4831f0d1fbe1255d38bf471f1e4f",
                    "sha256": "2fe11a54c186daf3ccfcdb57f3c3995064cde9a3a3b195ac534be11ed24ba0cc"
                },
                "downloads": -1,
                "filename": "autophrasex-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cb1e4831f0d1fbe1255d38bf471f1e4f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 20311,
                "upload_time": "2021-05-20T16:35:13",
                "upload_time_iso_8601": "2021-05-20T16:35:13.261962Z",
                "url": "https://files.pythonhosted.org/packages/fe/0a/15241143f4727a9afa8d71ac635f5a5ee3681fd9177a4c47191f53d8fcf1/autophrasex-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "55f44121eadccdb2783905419df3c66c",
                    "sha256": "752911a7f769ccf580d8822ba0b49d6da76edbefbc37a8f069840c5b708184c1"
                },
                "downloads": -1,
                "filename": "autophrasex-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "55f44121eadccdb2783905419df3c66c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 21783,
                "upload_time": "2021-05-20T16:35:14",
                "upload_time_iso_8601": "2021-05-20T16:35:14.588801Z",
                "url": "https://files.pythonhosted.org/packages/da/14/ac9eb63a9a961d9fdf0f649b125429d5e2846b9fcc53a362bdaab707d67d/autophrasex-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.1": {
        "info": {
            "author": "ZhouYang Luo",
            "author_email": "zhouyang.luo@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence"
            ],
            "description": "# AutoPhraseX\n\n![Python package](https://github.com/luozhouyang/autophrasex/workflows/Python%20package/badge.svg)\n[![PyPI version](https://badge.fury.io/py/autophrasex.svg)](https://badge.fury.io/py/autophrasex)\n[![Python](https://img.shields.io/pypi/pyversions/autophrasex.svg?style=plastic)](https://badge.fury.io/py/autophrasex)\n\n\nAutomated Phrase Mining from Massive Text Corpora in Python.\n\n\n\u5b9e\u73b0\u601d\u8def\u53c2\u8003 [shangjingbo1226/AutoPhrase](https://github.com/shangjingbo1226/AutoPhrase)\uff0c\u5e76\u4e0d\u5b8c\u5168\u4e00\u81f4\u3002\n\n## \u5b89\u88c5\n\n```bash\npip install -U autophrasex\n```\n\n## \u57fa\u672c\u4f7f\u7528\n\n```python\nfrom autophrasex import *\n\n# \u6784\u9020autophrase\nautophrase = AutoPhrase(\n    reader=DefaultCorpusReader(tokenizer=JiebaTokenizer()),\n    selector=DefaultPhraseSelector(),\n    extractors=[\n        NgramsExtractor(N=4), \n        IDFExtractor(), \n        EntropyExtractor()\n    ]\n)\n\n# \u5f00\u59cb\u6316\u6398\npredictions = autophrase.mine(\n    corpus_files=['data/answers.10000.txt'],\n    quality_phrase_files='data/wiki_quality.txt',\n    callbacks=[\n        LoggingCallback(),\n        ConstantThresholdScheduler(),\n        EarlyStopping(patience=2, min_delta=3)\n    ])\n\n# \u8f93\u51fa\u6316\u6398\u7ed3\u679c\nfor pred in predictions:\n    print(pred)\n\n```\n\n\n## \u9ad8\u7ea7\u7528\u6cd5\n\n\u672c\u9879\u76ee\u7684\u5404\u4e2a\u5173\u952e\u6b65\u9aa4\u90fd\u662f\u53ef\u4ee5\u6269\u5c55\u7684\uff0c\u6240\u4ee5\u5927\u5bb6\u53ef\u4ee5\u81ea\u7531\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\u3002\n\n\u672c\u9879\u76ee\u5927\u4f53\u4e0a\u53ef\u4ee5\u6c1b\u56f4\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u6a21\u5757\uff1a\n\n* `tokenizer`\u5206\u8bcd\u5668\u6a21\u5757\n* `reader`\u8bed\u6599\u8bfb\u53d6\u6a21\u5757\n* `selector`\u9ad8\u9891\u77ed\u8bed\u7684\u9009\u62e9\u6a21\u5757\n* `extractors`\u7279\u5f81\u62bd\u53d6\u5668\uff0c\u7528\u4e8e\u62bd\u53d6\u5206\u7c7b\u5668\u6240\u9700\u8981\u7684\u7279\u5f81\n* `callbacks`\u6316\u6398\u5468\u671f\u7684\u56de\u8c03\u6a21\u5757\n\n\u4ee5\u4e0b\u662f\u6bcf\u4e2a\u6a21\u5757\u7684\u9ad8\u7ea7\u4f7f\u7528\u65b9\u6cd5\u3002\n\n### tokenizer\n\n`tokenizer`\u7528\u4e8e\u6587\u672c\u5206\u8bcd\uff0c\u7528\u6237\u53ef\u4ee5\u7ee7\u627f`AbstractTokenizer`\u5b9e\u73b0\u81ea\u5df1\u7684\u5206\u8bcd\u5668\u3002\u672c\u5e93\u81ea\u5e26`JiebaTokenizer`\u3002\n\n\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528`baidu/LAC`\u6765\u8fdb\u884c\u4e2d\u6587\u5206\u8bcd\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\u5206\u8bcd\u5668\uff1a\n\n```python\n# pip install lac\n\nclass BaiduLacTokenizer(AbstractTokenizer):\n\n    def __init__(self, custom_vocab_path=None, model_path=None, mode='seg', use_cuda=False, **kwargs):\n        self.lac = LAC(model_path=model_path, mode=mode, use_cuda=use_cuda)\n        if custom_vocab_path:\n            self.lac.load_customization(custom_vocab_path)\n\n    def tokenize(self, text, **kwargs):\n        text = self._uniform_text(text, **kwargs)\n        results = self.lac.run(text)\n        results = [x.strip() for x in results if x.strip()]\n        return results\n```\n\n\u7136\u540e\u5728\u6784\u5efa`reader`\u7684\u4f7f\u7528\u4f7f\u7528`BaiduLacTokenizer`:\n```python\nreader = DefaultCorpusReader(tokenizer=BaiduLacTokenizer())\n```\n\n### reader\n\n`reader`\u7528\u4e8e\u8bfb\u53d6\u8bed\u6599\uff0c\u7528\u6237\u53ef\u4ee5\u7ee7\u627f`AbstractCorpusReader`\u5b9e\u73b0\u81ea\u5df1\u7684Reader\u3002\u672c\u5e93\u81ea\u5e26`DefaultCorpusReader`\u3002\n\n\u56e0\u4e3a\u76ee\u524d\u7684`extractor`\u5176\u5b9e\u662f\u4f9d\u8d56`reader`\u7684\uff08\u5177\u4f53\u6765\u8bf4\u662f`extractor`\u5b9e\u73b0\u4e86`reader`\u7684\u751f\u547d\u5468\u671f\u56de\u8c03\u63a5\u53e3\uff09\uff0c\u56e0\u6b64\u60f3\u8981\u91cd\u5199`reader`\uff0c\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u540c\u65f6\u66f4\u6539`extractor`\u7684\u5b9e\u73b0\uff0c\u6b64\u65f6\u81ea\u5b9a\u4e49\u6210\u672c\u6bd4\u8f83\u5927\uff0c\u6682\u65f6\u4e0d\u63a8\u8350\u91cd\u5199`reader`\u3002\n\n### selector\n\n`selector`\u7528\u4e8e\u9009\u62e9\u9ad8\u9891Phrase\uff0c\u7528\u6237\u53ef\u4ee5\u7ee7\u627f`AbstractPhraseSelector`\u5b9e\u73b0\u81ea\u5df1\u7684Phrase\u9009\u62e9\u5668\u3002\u672c\u5e93\u81ea\u5e26`DefaultPhraseSelector`\u3002\n\n`selector`\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a`phrase_filter`\uff0c\u7528\u4e8e\u5b9e\u73b0Phrase\u7684\u8fc7\u6ee4\u3002\u5173\u4e8e`phrase_filter`\u672c\u5e93\u63d0\u4f9b\u4e86\u5f00\u653e\u7684\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u4ee5\u7ee7\u627f`AbstractPhraseFilter`\u5b9e\u73b0\u81ea\u5df1\u7684\u8fc7\u6ee4\u5668\u3002\u672c\u5e93\u81ea\u5e26\u4e86\u9ed8\u8ba4\u7684\u8fc7\u6ee4\u5668`DefaultPhraseFilter`\uff0c\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u3002\n\n\u5982\u679c\u4f60\u60f3\u8981\u7981\u7528\u9ed8\u8ba4\u7684\u8fc7\u6ee4\u5668\uff0c\u8f6c\u800c\u4f7f\u7528\u81ea\u5df1\u5b9e\u73b0\u7684\u8fc7\u6ee4\u5668\uff0c\u53ef\u4ee5\u5728\u6784\u9020`selector`\u7684\u65f6\u5019\u8bbe\u7f6e\uff1a\n\n```python\n# \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\nclass MyPhraseFilter(AbstractPhraseFilter):\n\n    def apply(self, pair, **kwargs):\n        phrase, freq = pair\n        # return True to filter this phrase\n        if is_verb(phrase):\n            return True\n        return False\n\nselector = DefaultPhraseSelector(\n    phrase_filters=[MyPhraseFilter()], \n    use_default_phrase_filters=False\n)\n```\n\n\u8003\u8651\u5230\u6709\u4e9b\u8fc7\u6ee4\u8fc7\u7a0b\uff0c\u4f7f\u7528\u6309\u6279\u5904\u7406\u53ef\u4ee5\u663e\u8457\u63d0\u5347\u901f\u5ea6(\u4f8b\u5982\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8ba1\u7b97\u8bcd\u6027)\uff0c`phrase_filter`\u63d0\u4f9b\u4e86\u4e00\u4e2a`batch_apply`\u65b9\u6cd5\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u4f7f\u7528`baidu/LAC`\u6765\u8ba1\u7b97\u8bcd\u6027\uff0c\u4ece\u800c\u5b9e\u73b0Phrase\u7684\u8fc7\u6ee4\uff1a\n\n```python\n\nclass VerbPhraseFilter(AbstractPhraseFilter):\n\n    def __init__(self, batch_size=100):\n        super().__init__()\n        self.lac = LAC()\n        self.batch_size = batch_size\n\n    def batch_apply(self, batch_pairs, **kwargs):\n        predictions = []\n        for i in range(0, len(batch_pairs), self.batch_size):\n            batch_texts = [x[0] for x in batch_pairs[i: i + self.batch_size]]\n            batch_preds = self.lac.run(batch_texts)\n            predictions.extend(batch_preds)\n        candidates = []\n        for i in range(len(predictions)):\n            _, pos_tags = predictions[i]\n            if any(pos in ['v', 'vn', 'vd'] for pos in pos_tags):\n                continue\n            candidates.append(batch_pairs[i])\n        return candidates\n\nselector = DefaultPhraseSelector(\n    phrase_filters=[VerbPhraseFilter()], \n    use_default_phrase_filters=False\n)\n```\n\n### extractor\n\n`extractor`\u7528\u4e8e\u62bd\u53d6\u5206\u7c7b\u5668\u7684\u7279\u5f81\u3002\u7279\u5f81\u62bd\u53d6\u5668\u4f1a\u5728`reader`\u8bfb\u53d6\u8bed\u6599\u7684\u65f6\u5019\u8fdb\u884c\u5fc5\u8981\u4fe1\u606f\u7684\u7edf\u8ba1\u3002\u56e0\u6b64`extractor`\u5b9e\u73b0\u4e86`reader`\u7684\u56de\u8c03\u63a5\u53e3\uff0c\u6240\u4ee5\u5728\u81ea\u5b9a\u4e49\u7279\u5f81\u62bd\u53d6\u5668\u7684\u65f6\u5019\uff0c\u9700\u8981\u540c\u65f6\u7ee7\u627f`AbstractCorpusReadCallback`\u548c`AbstractFeatureExtractor`\u3002\n\n\u672c\u5e93\u81ea\u5e26\u4e86\u4ee5\u4e0b\u51e0\u4e2a\u7279\u5f81\u62bd\u53d6\u5668\uff1a\n\n* `NgramExtractor`\uff0c`n-gram`\u7279\u5f81\u62bd\u53d6\u5668\uff0c\u53ef\u4ee5\u8ba1\u7b97phrase\u7684`pmi`\u7279\u5f81\n* `IDFExtractor`\uff0c`idf`\u7279\u5f81\u62bd\u53d6\u5668\uff0c\u53ef\u4ee5\u8ba1\u7b97phrase\u7684`doc_freq`\u3001`idf`\u7279\u5f81\n* `EntropyExtractor`\uff0c`\u71b5`\u7279\u5f81\u62bd\u53d6\u5668\uff0c\u53ef\u4ee5\u8ba1\u7b97phrase\u7684`\u5de6\u53f3\u71b5`\u7279\u5f81\n\n\u4e0a\u8ff0\u81ea\u5e26\u7684\u7279\u5f81\u62bd\u53d6\u5668\uff0c\u90fd\u662f\u57fa\u4e8e`n-gram`\u7edf\u8ba1\u7684\uff0c\u56e0\u6b64\u90fd\u652f\u6301`ngram`\u7684\u9009\u62e9\uff0c\u4e5f\u5c31\u662f\u90fd\u53ef\u4ee5\u81ea\u5b9a\u4e49`ngram_filter`\u6765\u8fc7\u6ee4\u4e0d\u9700\u8981\u7edf\u8ba1\u7684`ngram`\u3002\u672c\u5e93\u81ea\u5e26\u4e86`DefaultNgramFilter`\uff0c\u5e76\u4e14\u9ed8\u8ba4\u542f\u7528\u3002\u7528\u6237\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684`ngram_filter`\u6765\u7075\u6d3b\u9009\u53d6\u5408\u9002\u7684`ngram`\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u9700\u8981\u8fc7\u6ee4\u6389`\u5305\u542b\u6807\u70b9\u7b26\u53f7`\u7684`ngram`\uff1a\n\n```python\nCHARACTERS = set('!\"#$%&\\'()*+,-./:;?@[\\\\]^_`{|}~ \\t\\n\\r\\x0b\\x0c\uff0c\u3002\uff1f\uff1a\u201c\u201d\u3010\u3011\u300c\u300d')\n\nclass MyNgramFilter(AbstractNgramFiter):\n\n    def apply(self, ngram, **kwargs):\n        if any(x in CHARACTERS for x in ngram):\n            return True\n        return False\n\nautophrase = AutoPhrase(\n    reader=DefaultCorpusReader(tokenizer=JiebaTokenizer()),\n    selector=DefaultPhraseSelector(),\n    extractors=[\n        NgramsExtractor(N=4, ngram_filters=[MyNgramFilter()]), \n        IDFExtractor(ngram_filters=[MyNgramFilter()]), \n        EntropyExtractor(ngram_filters=[MyNgramFilter()]),\n    ]\n)\n# \u5f00\u59cb\u6316\u6398\n...\n```\n\n\u7528\u6237\u53ef\u4ee5\u7ee7\u627f`AbstractFeatureExtractor`\u5b9e\u73b0\u81ea\u5df1\u7684\u7279\u5f81\u8ba1\u7b97\u3002\u53ea\u9700\u8981\u5728\u6784\u5efaautophrase\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u628a\u8fd9\u4e9b\u7279\u5f81\u8ba1\u7b97\u5668\u4f20\u5165\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u505a\u5176\u4ed6\u4efb\u4f55\u989d\u5916\u64cd\u4f5c\u3002\n\n\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6211\u589e\u52a0\u4e00\u4e2a`phrase\u662f\u5426\u662funigram`\u7684\u7279\u5f81\uff1a\n\n```python\nclass UnigramFeatureExtractor(AbstractFeatureExtractor\uff0cAbstractCorpusReadCallback):\n\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n\n    def extract(self, phrase, **kwargs):\n        parts = phrase.split(' ')\n        features = {\n            'is_unigram': 1 if len(parts) == 1 else 0\n        }\n        return features\n\n\nautophrase = AutoPhrase(\n    reader=DefaultCorpusReader(tokenizer=JiebaTokenizer()),\n    selector=DefaultPhraseSelector(),\n    extractors=[\n        NgramsExtractor(N=N), \n        IDFExtractor(), \n        EntropyExtractor(),\n        UnigramFeatureExtractor(),\n    ]\n)\n\n# \u53ef\u4ee5\u5f00\u59cb\u6316\u6398\u4e86\n...\n```\n\n### callback\n\n`callback`\u56de\u8c03\u63a5\u53e3\uff0c\u53ef\u4ee5\u63d0\u4f9bphrase\u6316\u6398\u8fc7\u7a0b\u4e2d\u7684\u751f\u547d\u5468\u671f\u76d1\u542c\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e00\u4e9b\u7a0d\u5fae\u590d\u6742\u7684\u529f\u80fd\uff0c\u4f8b\u5982`EarlyStopping`\u3001`\u5224\u65ad\u9608\u503cSchedule`\u7b49\u3002\n\n\u672c\u5e93\u81ea\u5e26\u4ee5\u4e0b\u56de\u8c03\uff1a\n\n* `LoggingCallback`\u63d0\u4f9b\u6316\u6398\u8fc7\u7a0b\u7684\u65e5\u5fd7\u4fe1\u606f\u6253\u5370\n* `ConstantThresholdScheduler`\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8c03\u6574\u9608\u503c\u7684\u56de\u8c03\n* `EarlyStopping`\u65e9\u505c\uff0c\u5728\u6307\u6807\u6ca1\u6709\u6539\u5584\u7684\u60c5\u51b5\u4e0b\u505c\u6b62\u8bad\u7ec3\n\n\u7528\u6237\u53ef\u4ee5\u81ea\u5df1\u7ee7\u627f`Callback`\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\u3002\n\n\n## \u7ed3\u679c\u793a\u4f8b\n\n> \u4ee5\u4e0b\u7ed3\u679c\u5c5e\u4e8e\u672c\u5e93\u6bd4\u8f83\u65e9\u671f\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u76ee\u524d\u672c\u5e93\u7684\u4ee3\u7801\u66f4\u65b0\u6bd4\u8f83\u5927\uff0c\u8fd4\u56de\u7ed3\u679c\u548c\u4e0b\u8ff0\u5185\u5bb9\u4e0d\u592a\u4e00\u81f4\u3002\u4ec5\u4f9b\u53c2\u8003\u3002\n\n\u65b0\u95fb\u8bed\u6599\u4e0a\u7684\u62bd\u53d6\u7ed3\u679c\u793a\u4f8b\uff1a\n\n```bash\n\u6210\u54c1\u6cb9\u4ef7\u683c, 0.992766816097071\n\u80a1\u4efd\u5236\u94f6\u884c, 0.992766816097071\n\u516c\u52a1\u8239, 0.992766816097071\n\u4e2d\u56fd\u7559\u5b66\u751f, 0.992766816097071\n\u8d37\u6b3e\u57fa\u51c6, 0.992766816097071\n\u6b27\u8db3\u8054, 0.992766816097071\n\u65b0\u5c40\u9762, 0.992766816097071\n\u6dd8\u6c70\u8d5b, 0.992766816097071\n\u53cd\u52a8\u6d3e, 0.992766816097071\n\u751f\u547d\u5371\u9669, 0.992766816097071\n\u65b0\u53f0\u9636, 0.992766816097071\n\u77e5\u540d\u5ea6, 0.992766816097071\n\u65b0\u5174\u4ea7\u4e1a, 0.9925660976153782\n\u5b89\u5168\u611f, 0.9925660976153782\n\u6218\u6597\u529b, 0.9925660976153782\n\u6218\u7565\u6027, 0.9925660976153782\n\u79c1\u5bb6\u8f66, 0.9925660976153782\n\u73af\u7403\u7f51, 0.9925660976153782\n\u526f\u6821\u957f, 0.9925660976153782\n\u6d41\u884c\u8bed, 0.9925660976153782\n\u503a\u52a1\u5371\u673a, 0.9925660976153782\n\u4fdd\u9669\u8d44\u4ea7, 0.9920376397372204\n\u4fdd\u9669\u673a\u6784, 0.9920376397372204\n\u8c6a\u534e\u8f66, 0.9920376397372204\n\u73af\u5883\u8d28\u91cf, 0.9920376397372204\n\u745e\u5178\u961f, 0.9919345469537152\n\u4ea4\u5f3a\u9669, 0.9919345469537152\n\u9a6c\u5361\u62a5, 0.9919345469537152\n\u751f\u4ea7\u529b, 0.9911077251879798\n```\n\n\u533b\u7597\u5bf9\u8bdd\u8bed\u6599\u7684\u62bd\u53d6\u793a\u4f8b\uff1a\n\n```bash\n\u5de6\u7709\u5f13, 1.0\n\u652f\u539f\u4f53, 1.0\nmri, 1.0\n\u9888\u52a8\u8109, 0.9854149008885851\n\u7ed3\u6838\u75c5, 0.9670815675552518\n\u624b\u672f\u5ba4, 0.9617546444783288\n\u5e73\u626b\u793a, 0.9570324222561065\n\u5de6\u624b\u62c7\u6307, 0.94\n\u53cc\u819d\u5173\u8282, 0.94\n\u53f3\u624b\u4e2d\u6307, 0.94\n\u62c7\u6307\u672b\u8282, 0.94\ncm\u76ae\u80a4, 0.94\n\u809d\u80c6\u813e, 0.94\n\u6297\u4f53\u9633\u6027, 0.94\nigm\u6297\u4f53\u9633\u6027, 0.94\n\u5de6\u4fa7\u9762\u988a, 0.94\n\u8180\u80f1\u7ed3\u77f3, 0.94\n\u5de6\u4fa7\u57fa\u5e95\u8282, 0.94\n\u8170\u690e\u6b63\u4fa7, 0.94\n\u8f6f\u7ec4\u7ec7\u80bf\u80c0, 0.94\n\u624b\u672f\u7622\u75d5, 0.94\n\u6795\u9876\u90e8, 0.94\n\u5de6\u819d\u5173\u8282\u6b63\u4fa7, 0.94\n\u819d\u5173\u8282\u6b63\u4fa7\u4f4d, 0.94\n\u8170\u690e\u690e\u4f53, 0.94\n\u627f\u5fb7\u5e02\u533b\u9662, 0.94\n\u6027\u8111\u6897\u585e, 0.94\n\u9888\u690edr, 0.94\n\u6ccc\u5c3f\u7cfb\u8d85\u58f0, 0.94\n\u53cc\u4fa7\u9634\u56ca, 0.94\n\u53f3\u989e\u90e8, 0.94\n\u80ba\u708e\u652f\u539f\u4f53, 0.94\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/luozhouyang/AutoPhraseX",
            "keywords": "",
            "license": "Apache Software License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "autophrasex",
            "package_url": "https://pypi.org/project/autophrasex/",
            "platform": "",
            "project_url": "https://pypi.org/project/autophrasex/",
            "project_urls": {
                "Homepage": "https://github.com/luozhouyang/AutoPhraseX"
            },
            "release_url": "https://pypi.org/project/autophrasex/0.3.1/",
            "requires_dist": [
                "jieba",
                "naive-stopwords",
                "scikit-learn",
                "opencc"
            ],
            "requires_python": "",
            "summary": "Automated Phrase Mining from Massive Text Corpora in Python.",
            "version": "0.3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10445152,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cee0e38952fed7e4e97a776ea1d22fc",
                    "sha256": "17ffd7fa3ab2dc32cf038a981bc667bfbb4b09964426bf84c842961b86cd6f4d"
                },
                "downloads": -1,
                "filename": "autophrasex-0.3.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1cee0e38952fed7e4e97a776ea1d22fc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 20319,
                "upload_time": "2021-05-23T05:56:03",
                "upload_time_iso_8601": "2021-05-23T05:56:03.920169Z",
                "url": "https://files.pythonhosted.org/packages/34/46/8601caad56fc1bdc9d72e73c3c8f2b9a0d26eb14bd241de445229fbba362/autophrasex-0.3.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "870c1a49068290dc19e620c8db9d8a39",
                    "sha256": "a81ade30142bfe008868a46c61d5fea19220c673276cc0afd39c02c409ed876f"
                },
                "downloads": -1,
                "filename": "autophrasex-0.3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "870c1a49068290dc19e620c8db9d8a39",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 21770,
                "upload_time": "2021-05-23T05:56:05",
                "upload_time_iso_8601": "2021-05-23T05:56:05.420394Z",
                "url": "https://files.pythonhosted.org/packages/5d/fc/a34c2f0959d884b57b829ef61c57ae22cf1c675c9a1196254ccf7b4eaab1/autophrasex-0.3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}