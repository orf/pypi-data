{
    "0.0.2": {
        "info": {
            "author": "Thiago Panini",
            "author_email": "thipanini94@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Framework :: Jupyter",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Portuguese (Brazilian)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ThiagoPanini/nbaflow",
            "keywords": "Packages,NBA,Statistics,API",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nbaflow",
            "package_url": "https://pypi.org/project/nbaflow/",
            "platform": "",
            "project_url": "https://pypi.org/project/nbaflow/",
            "project_urls": {
                "Homepage": "https://github.com/ThiagoPanini/nbaflow"
            },
            "release_url": "https://pypi.org/project/nbaflow/0.0.2/",
            "requires_dist": [
                "nba-api",
                "pandas"
            ],
            "requires_python": ">=3.0.0",
            "summary": "Solu\u00e7\u00e3o integrada para explora\u00e7\u00e3o de dados da NBA utilizando API p\u00fablica e pacotes python para constru\u00e7\u00e3o de pipelines, realiza\u00e7\u00e3o de an\u00e1lises estat\u00edsticas e visuais.",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11786777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "02939f8fcedd4e529d514d568c8b576d",
                    "sha256": "6d965f5a4c67b4c9885c4ff888dddea95f14a7b02c9b377a9cbd2bae13ca39f1"
                },
                "downloads": -1,
                "filename": "nbaflow-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "02939f8fcedd4e529d514d568c8b576d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.0.0",
                "size": 7268,
                "upload_time": "2021-10-20T23:55:38",
                "upload_time_iso_8601": "2021-10-20T23:55:38.916029Z",
                "url": "https://files.pythonhosted.org/packages/e9/fe/d82c402f72bdfa88c3083260299c649b60af25aac8af5809c0e90752e595/nbaflow-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "57aed9c15e71dc59d991c946ddf5ae66",
                    "sha256": "b399d7a46b1724e35c18fee4fd8473d00ff0f182e7fdbfd17e047fcc3ef37788"
                },
                "downloads": -1,
                "filename": "nbaflow-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "57aed9c15e71dc59d991c946ddf5ae66",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.0.0",
                "size": 8764,
                "upload_time": "2021-10-20T23:55:40",
                "upload_time_iso_8601": "2021-10-20T23:55:40.205882Z",
                "url": "https://files.pythonhosted.org/packages/64/fe/f6262f3c45a413c361d77d1fda5c0d1e7dc128a57d728b99a697d2332e03/nbaflow-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Thiago Panini",
            "author_email": "thipanini94@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Framework :: Jupyter",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Portuguese (Brazilian)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "<div align=\"center\">\n    <br><img src=\"https://i.imgur.com/l07Xn2Y.png\" height=400 width=400 alt=\"nbaflow logo\">\n</div>\n\n<div align=\"center\">\n  <strong>:basketball: Solu\u00e7\u00e3o integrada para extra\u00e7\u00e3o e an\u00e1lise de dados estat\u00edsticos da NBA :basketball:</strong>\n</div>\n<br/>\n\n\n## Table of contents\n\n- [Sobre o Projeto](#sobre-o-projeto)\n    - [Fases do Desenvolvimento](#fases-do-desenvolvimento)\n    - [Arquitetura - Fase 01](#arquitetura---fase-01)\n- [Contextos e Cen\u00e1rios](#contextos-e-cen\u00e1rios)\n  - [NBA Stats](#nba-stats)\n  - [NBA API](#nba-api)\n  - [Visualiza\u00e7\u00e3o de Dados](#visualiza\u00e7\u00e3o-de-dados)\n- [NBAFlow - Solu\u00e7\u00e3o Integrada](#nbaflow---solu\u00e7\u00e3o-integrada)\n    - [Consumo da Solu\u00e7\u00e3o](#consumo-da-solu\u00e7\u00e3o)\n    - [Painel Anal\u00edtico - Tableau](#painel-anal\u00edtico---tableau)\n- [Contatos](#contatos)\n\n\n## Sobre o Projeto\n\nAntes de mais nada, imagine algo pessoal que voc\u00ea goste de acompanhar, seja um esporte, um programa de TV ou mesmo not\u00edcias sobre um determinado assunto. Agora pense sobre unir seus conhecimentos em tecnologia para aprender mais sobre esse assunto ao mesmo tempo que aprimora suas _skills_ t\u00e9cnicas. Assim surge o NBAFlow: uma mistura entre programa\u00e7\u00e3o, arquitetura, desenvolvimento e esporte! Para acessar diretamente os detalhes de uso da solu\u00e7\u00e3o, navegar at\u00e9 o t\u00f3pico [NBAFlow - Solu\u00e7\u00e3o Integrada](#nbaflow---solu\u00e7\u00e3o-integrada)\n\n### Fases do Desenvolvimento\n\nConcebido como uma forma pr\u00e1tica e bacana de mergulhar em universos ainda desconhecidos, o NBAFlow pode ser definido como uma frente de aprendizado pr\u00f3prio e compartilhamento de conhecimentos com a comunidade de tecnologia. Ap\u00f3s uma jornada inicial de matura\u00e7\u00e3o do projeto, faz-se v\u00e1lida a divis\u00e3o do desenvolvimento implementado e da produ\u00e7\u00e3o de conte\u00fado em **_fases_** distintas, sendo elas:\n\n___\n* [**_Fase 01: Primeiros Passos_**](https://github.com/ThiagoPanini/nbaflow/tree/fase-01): a primeira fase do projeto consistiu em um essencial entendimento de todas as possibilidades de gera\u00e7\u00e3o, extra\u00e7\u00e3o e an\u00e1lise de dados da NBA a partir de APIs e bibliotecas compat\u00edveis com a linguagem Python. Nela, foi poss\u00edvel construir componentes e m\u00f3dulos capazes de encapsular todo o processo de prepara\u00e7\u00e3o de dados de jogadores em cada uma de suas respectivas partidas disputadas na liga. A materializa\u00e7\u00e3o de todo este trabalho se deu por meio de um painel no Tableau altamente responsivo e din\u00e2mico que rendeu e vem rendendo bons frutos aos amantes do esporte. Em resumo, os principais resultados alcan\u00e7ados nesta primeita etapa do projeto envolvem:\n    *   Constru\u00e7\u00e3o dos m\u00f3dulos [gamelog.py](https://github.com/ThiagoPanini/nbaflow/blob/fase-01/nbaflow/gamelog.py) e [images.py](https://github.com/ThiagoPanini/nbaflow/blob/fase-01/nbaflow/images.py) para extra\u00e7\u00e3o e prepara\u00e7\u00e3o de dados de partidas de jogadores\n    *   Constru\u00e7\u00e3o de [scripts](https://github.com/ThiagoPanini/nbaflow/tree/fase-01/dev/scripts) de processamento de dados para constru\u00e7\u00e3o de base final a ser analisada\n    *   Cria\u00e7\u00e3o de um painel publicado no [Tableau Public](https://public.tableau.com/app/profile/thiago.henrique.gomes.panini/viz/NBAFlow-InsightsdeDadosdaNBA/PaineldeEstatsticasdeJogadores)\n    \n> \ud83d\udccc O [post de divulga\u00e7\u00e3o do painel](https://www.linkedin.com/posts/thiago-panini_python-tableau-nba-activity-6822851884097773568-UD_p) da Fase 01 do projeto foi visto por mais de 12 mil pessoas no LinkedIn, sendo compartilhado por um dos [**gerentes nacionais**](https://www.linkedin.com/posts/jaimem2_python-tableau-nba-activity-6822904915346628608-_wZN) da Tableau Software e por diretores de grandes empresas como [**Salesforce**](https://www.linkedin.com/posts/marilouvain_python-tableau-nba-activity-6822911222367752195-GY05).\n___\n\n* [**_Fase 02: O Contato com a AWS_**](https://github.com/ThiagoPanini/nbaflow/tree/fase-02): ap\u00f3s uma jornada recompensadora vivenciada na primeira fase do projeto, novos horizontes vieram \u00e0 tona e uma nobre ideia de utilizar os servi\u00e7os de uma provedora cloud se fizeram presentes para aprimorar ainda mais o projeto. Assim, motivado por um mergulho inicial no universo de computa\u00e7\u00e3o em nuvem, decidiu-se realizar uma verdadeira _migra\u00e7\u00e3o_ do fluxo existente, este formado sob um vi\u00e9s de processamento totalmente local, para uma arquitetura em nuvem capaz de proporcionar uma s\u00e9rie de facilidades adicionais ao projeto. Dessa forma, utilizando a AWS como provedora cloud, a segunda fase do projeto NBAFlow permitiu:\n    * Utiliza\u00e7\u00e3o do servi\u00e7o [RDS](https://aws.amazon.com/pt/rds/) para armazenamento dos dados de partidas de jogadores em um banco de dados relacional\n    * Utiliza\u00e7\u00e3o de inst\u00e2ncia computacional [EC2](https://aws.amazon.com/pt/ec2/) contendo l\u00f3gica de consumo de dados diretamente do RDS\n    * Desenho de arquitetura segura e de alta disponibilidade a partir de configura\u00e7\u00f5es de _Security Groups_ e _Subnets_ na AWS\n___\n\n* [**_Fase 03: Imers\u00e3o na AWS com Lambda_**](https://github.com/ThiagoPanini/nbaflow/tree/fase-03): _em andamento..._\n\n___\n\n### Arquitetura - Fase 03\n\nEm andamento...\n\n___\n\n## Contextos e Cen\u00e1rios\n\nCriado como uma ideia gen\u00e9rica de an\u00e1lise e explora\u00e7\u00e3o de dados da NBA dentro de cen\u00e1rios que pudessem proporcionar uma aprendizagem de tecnologias relevantes em termos de constru\u00e7\u00e3o de pipelines de ingest\u00e3o, armazenamento, visualiza\u00e7\u00e3o e an\u00e1lise de dados, o projeto **NBAFlow** teve, como ponto de partida, o pr\u00f3prio site de [estat\u00edsticas oficiais da NBA](https://www.nba.com/stats/). Neste momento, a pergunta a ser respondida se resumiu a: _\"Como obter esse tipo de dado para an\u00e1lises mais refinadas?\"_\n\nJ\u00e1 nas primeiras tentativas em busca das poss\u00edveis formas de obter os tais dados estat\u00edsticos da NBA, chegou-se a biblioteca python `nba-api` capaz de servir como um agente integrador proporcionando o acesso a dados diretamente do site. Com o avan\u00e7o da obten\u00e7\u00e3o e explora\u00e7\u00e3o dos dados, novas inspira\u00e7\u00f5es focadas em visualiza\u00e7\u00e3o de dados se tornaram um grande meio para materializar todos os estudos propostos. E assim, considerando os tr\u00eas alicerces motivacionais que giram em torno do projeto, esta breve se\u00e7\u00e3o tem por objetivo detalhar o conte\u00fado presente no site oficial de estat\u00edsticas da NBA, na biblitoeca `nba_api` implementada e em frentes de visualiza\u00e7\u00e3o de dados utilizando cen\u00e1rios da NBA.\n\n### NBA Stats\n\nA p\u00e1gina de estat\u00edsticas da NBA \u00e9 um reposit\u00f3rio altamente rico em termos de dados de jogadores e times. Em um exemplo pr\u00e1tico, ao acessar a rota https://www.nba.com/stats/player/203081/ referente ao jogador Damian Lillard, \u00e9 poss\u00edvel, logo de cara, consumir um denso pacote de indicadores de performance:\n\n<div align=\"center\">\n    <br><img src=\"https://i.imgur.com/97O3wqA.png\" height=300 width=800 alt=\"lillard stats header\">\n</div>\n\nAo navegar pela p\u00e1gina, ainda \u00e9 poss\u00edvel utilizar filtros e menus espec\u00edficos para gerar novas vis\u00f5es agrupadas e estat\u00edsticas da performance do jogador em cen\u00e1rios de temporada regular ou de playoffs em diferentes anos.\n\n<div align=\"center\">\n    <br><img src=\"https://i.imgur.com/Exr5go3.png\" height=300 width=800 alt=\"lillard stats table splits\">\n</div>\n\nExistem, ainda, diversas outras funcionalidades presentes na rota _/stats_ do site da NBA, permitindo assim uma s\u00e9rie de an\u00e1lises pontuais, hist\u00f3ricas e compara\u00e7\u00f5es, sejam em uma vis\u00e3o individual de jogadores ou de franquias como um todo. O site da NBA fornece um mundo completo de estat\u00edsticas para os usu\u00e1rios e, de alguma forma, seria extremamente vantajoso poder requisitar e ter em m\u00e3os esses dados para transforma\u00e7\u00f5es e an\u00e1lises pr\u00f3prias.\n\n### NBA API\n\nImaginando um cen\u00e1rio onde os usu\u00e1rios podem ter em suas m\u00e3os dados estat\u00edsticos de jogadores da NBA e de franquias diretamente do site oficial da NBA, seria poss\u00edvel realizar uma s\u00e9rie de atividades envolvendo an\u00e1lises descritivas ou at\u00e9 mesmo preditivas em contextos livres, desde dados individuais de jogadores ou at\u00e9 mesmo de situa\u00e7\u00f5es envolvendo atacantes e defensores.\n\nPensando nisso, usu\u00e1rios da comunidade Python desenvolveram uma poderosa API conhecida por [`nba-api`](https://pypi.org/project/nba-api/) capaz de proporcionar uma s\u00e9rie de m\u00f3dulos \u00fateis para o retorno de informa\u00e7\u00f5es relacionadas a estat\u00edsticas da NBA. \n\nMaiores detalhes sobre a biblioteca `nba-api` podem ser encontrados em:\n* Reposit\u00f3rio PyPI: https://pypi.org/project/nba-api/\n* Reposit\u00f3rio Github: https://github.com/swar/nba_api\n\n### Visualiza\u00e7\u00e3o de Dados\n\nUma das grandes motiva\u00e7\u00f5es relacionadas ao in\u00edcio deste projeto tem ra\u00edzes conectadas a visualiza\u00e7\u00e3o de dados. Nomes como Kirk Goldsberry ([@kirkgoldsberry](https://www.instagram.com/kirkgoldsberry/)) s\u00e3o grandes inspira\u00e7\u00f5es dentro deste cen\u00e1rio de Data Viz. Em sua p\u00e1gina no Instagram, Kirk compartilha uma s\u00e9rie de visualiza\u00e7\u00f5es extremamente interessantes sobre t\u00f3picos relacionados a NBA, desde os melhores arremessadores por zona, at\u00e9 dispers\u00f5es relacionadas a tentativas de arremessos e efici\u00eancia em percentual de grandes nomes da liga.\n\nAbaixo, seguem alguns exemplos de visualiza\u00e7\u00f5es criadas por Kirk Goldsberry em sua p\u00e1gina:\n\n<div align=\"center\">\n    <br><img src=\"https://i.imgur.com/zc671dJ.png\" height=500 width=500 alt=\"lillard stats game5\">\n</div>\n\n<div align=\"center\">\n<i>A imagem acima traz uma vis\u00e3o de efici\u00eancia de arremessos do jogador Damian Lillard, do Portland Trailblazers, no fat\u00eddico jogo 5 dos playoffs de 2021 contra Denver Nuggets.</i>\n</div>\n\n<div align=\"center\">\n    <br><img src=\"https://i.imgur.com/7ldISzz.png\" height=500 width=500 alt=\"lillard stats game5\">\n</div>\n\n<div align=\"center\">\n<i>J\u00e1 essa segunda imagem traz uma rela\u00e7\u00e3o de tentativas e efici\u00eancia de arremessos realizados por jogadores na fase de playoffs.</i>\n</div>\n\n___\n\n## NBAFlow - Solu\u00e7\u00e3o Integrada\n\nAp\u00f3s um vasto consumo da literatura e documenta\u00e7\u00e3o dispon\u00edveis em fontes relacionadas, entende-se pelo projeto **NBAFlow** como ponto central para o desenvolvimento de fluxos e scripts de requisi\u00e7\u00e3o e prepara\u00e7\u00e3o de dados de modo a permitir a constru\u00e7\u00e3o de visualiza\u00e7\u00f5es din\u00e2micas envolvendo estat\u00edsticas da NBA. Como MVP, o diagrama de solu\u00e7\u00e3o abaixo demonstra uma parcela dos entreg\u00e1veis obtidos at\u00e9 o momento, sendo estes:\n\n* Classes e scripts Python capazes de coletar, preparar e transformar dados estat\u00edsticos da NBA;\n* Painel anal\u00edtico e interativo constru\u00eddo no _Tableau_;\n\n### Consumo da Solu\u00e7\u00e3o\n\nComo mencionado anteriormente, a constru\u00e7\u00e3o de toda a solu\u00e7\u00e3o proposta tem como base a linguagem Python em conjunto com algumas bibliotecas disponibilizadas para fins espec\u00edficos. Dessa forma, para utilizar os scripts desenvolvidos neste projeto, recomenda-se a execu\u00e7\u00e3o das seguintes etapas:\n\n**_1. Cria\u00e7\u00e3o e ativa\u00e7\u00e3o de um ambiente virtual Python_**\n\n```bash\n# Criando e ativando venv no Linux\n$ python -m venv <path_venv>/<name_venv>\n$ source <path_venv>/<nome_venv>/bin/activate\n\n# Criando e ativando venv no Windows\n$ python -m venv <path_venv>/<name_venv>\n$ <path_venv>/<nome_venv>/Scripts/activate\n```\n\n**_2. Clone do reposit\u00f3rio NBAFlow_**\n\n```bash\ngit clone https://github.com/ThiagoPanini/nbaflow.git\n```\n\n**_3. Instala\u00e7\u00e3o das depend\u00eancias do projeto via requirements.txt_**\n```\n# Navegando at\u00e9 o diret\u00f3rio do projeto e instalando pacotes\ncd nbaflow/\npip install -r requirements.txt\n```\n\n**_4. Instala\u00e7\u00e3o do pacote/projeto em modo de edi\u00e7\u00e3o_**\n> Isso permitir\u00e1 a devida leitura de m\u00f3dulos internos dentro dos scripts j\u00e1 desenvolvidos\n```bash\npip install -e .\n```\n\n**_5. [OPCIONAL] Execu\u00e7\u00e3o de scripts j\u00e1 desenvolvidos para finalidades de estudo_**\n```bash\npyhon scripts\\one_player_gamelog.py\n```\n\n### Painel Anal\u00edtico - Tableau\n\nComo principal produto dentro desse projeto, encontra-se o [Painel Anal\u00edtico de Estat\u00edstica de Jogadores](https://public.tableau.com/views/NBAFlow-InsightsdeDadosdaNBA/PaineldeEstatsticasdeJogadores?:language=pt-BR&:display_count=n&:origin=viz_share_link) publicado e dispon\u00edvel no [Tableau Public](https://public.tableau.com/s/). Em resumo, trata-se de uma solu\u00e7\u00e3o altamente refinada e constru\u00edda sob as principais boas pr\u00e1ticas de Data Viz, UX e UI com foco nos amantes do esporte e nos entusiastas de an\u00e1lise de dados.\n\nComo principais funcionalidades, o painel disponibilizado possui:\n\n* Menu principal e painel de estat\u00edstica de jogadores com background disruptivo\n* Filtro din\u00e2mico para visualiza\u00e7\u00e3o de indicadores de cada um dos jogadores ativos da liga\n* Imagem personalizada para cada jogador da liga de acordo com o filtro (isso foi trabalhoso!)\n* Dados agregados de todos os jogadores da liga em todas as temporadas jogadas\n* Farois din\u00e2micos e comparativos com as m\u00e9dias da liga\n* Intera\u00e7\u00e3o din\u00e2mica de dispers\u00e3o de arremessos\n* Ranking de jogadores de acordo com atributos din\u00e2micos (rebotes, assist\u00eancias, pontos, minutos, entre outros)\n* Muito mais...\n\n<div align=\"center\">\n    <br><a href=\"https://public.tableau.com/app/profile/thiago.henrique.gomes.panini/viz/NBAFlow-InsightsdeDadosdaNBA/PaineldeEstatsticasdeJogadores\"><img src=\"https://i.imgur.com/aHCg0qb.png\" alt=\"nbaflow-tableau\"></a>\n</div>\n\n<div align=\"center\">\n    <br><a href=\"https://public.tableau.com/app/profile/thiago.henrique.gomes.panini/viz/NBAFlow-InsightsdeDadosdaNBA/PaineldeEstatsticasdeJogadores\"><img src=\"https://i.imgur.com/sjlLqru.png\" alt=\"nbaflow-tableau\"></a>\n</div>\n\n## Contatos\n\n* LinkedIn: https://www.linkedin.com/in/thiago-panini/\n* Outras solu\u00e7\u00f5es desenvolvidas: https://github.com/ThiagoPanini\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ThiagoPanini/nbaflow",
            "keywords": "Packages,NBA,Statistics,API",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nbaflow",
            "package_url": "https://pypi.org/project/nbaflow/",
            "platform": "",
            "project_url": "https://pypi.org/project/nbaflow/",
            "project_urls": {
                "Homepage": "https://github.com/ThiagoPanini/nbaflow"
            },
            "release_url": "https://pypi.org/project/nbaflow/0.0.3/",
            "requires_dist": [
                "nba-api",
                "pandas"
            ],
            "requires_python": ">=3.0.0",
            "summary": "Solu\u00e7\u00e3o integrada para explora\u00e7\u00e3o de dados da NBA utilizando API p\u00fablica e pacotes python para constru\u00e7\u00e3o de pipelines, realiza\u00e7\u00e3o de an\u00e1lises estat\u00edsticas e visuais.",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11786777,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "49042d24fdb1fb81e91c4a1fe8e69edb",
                    "sha256": "26b346e8f4ab0dbdb802abc4813f4e156b0df967b7c5eb4cfb27176484e0b9db"
                },
                "downloads": -1,
                "filename": "nbaflow-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "49042d24fdb1fb81e91c4a1fe8e69edb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.0.0",
                "size": 7267,
                "upload_time": "2021-10-21T00:58:38",
                "upload_time_iso_8601": "2021-10-21T00:58:38.157209Z",
                "url": "https://files.pythonhosted.org/packages/44/7a/3730a3307263bf350d8761bff25346cbbadb2bdaf350d06a5ef3595991da/nbaflow-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4d1e738b8a59a39e781ebd472ff0e28d",
                    "sha256": "9f2e54d0aea43f55fb4fcc1ebf2f7a1ec446fcc317a754b83a55878f66290867"
                },
                "downloads": -1,
                "filename": "nbaflow-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "4d1e738b8a59a39e781ebd472ff0e28d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.0.0",
                "size": 8737,
                "upload_time": "2021-10-21T00:58:39",
                "upload_time_iso_8601": "2021-10-21T00:58:39.488512Z",
                "url": "https://files.pythonhosted.org/packages/0f/90/09b515c6cdda73721608dec251e66a6c3ff2a9c748bca523103e626d12f1/nbaflow-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}