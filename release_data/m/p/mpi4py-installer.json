{
    "0.1.0": {
        "info": {
            "author": "Johannes Blaschke",
            "author_email": "jblaschke@lbl.gov",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/JBlaschke/mpi4py-installer",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mpi4py-installer",
            "package_url": "https://pypi.org/project/mpi4py-installer/",
            "platform": null,
            "project_url": "https://pypi.org/project/mpi4py-installer/",
            "project_urls": {
                "Homepage": "https://github.com/JBlaschke/mpi4py-installer"
            },
            "release_url": "https://pypi.org/project/mpi4py-installer/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "No more copy+paste of magic bash commands while installing mpi4py on HPC systems.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16000796,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "70569ad049c50e56888c60876ee13b17",
                    "sha256": "a1be518c66c828c3265ac33d8ad0e50da29057814d81ddce143043fcefaa6f5f"
                },
                "downloads": -1,
                "filename": "mpi4py-installer-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "70569ad049c50e56888c60876ee13b17",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 6376,
                "upload_time": "2022-12-05T22:17:18",
                "upload_time_iso_8601": "2022-12-05T22:17:18.047357Z",
                "url": "https://files.pythonhosted.org/packages/70/52/86582b0dddbf4399825fbd8a44a2da3ffac698beacb0946c8276dc3fdec8/mpi4py-installer-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Johannes Blaschke",
            "author_email": "jblaschke@lbl.gov",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# mpi4py-installer\n\nA simple installer to manage `mpi4py` install variants on HPC systems (using\npip). `mpi4py_installer` uses `pip install --no-cache-dir --no-binary=:all:` to\ninstall `mpi4py`, together with pre-defined compiler definitions. This ensures\nthat `mpi4py` is built and linked against the system's MPI implementation.\n\n## Features\n\n`mpi4py_installer` is detects the system it's running on automatically -- based\non the site's automatic detection rules. Note that it does not detect the site,\nthis needs to be specified using `--site=<site name>`.\n\n### Automatically Detect System\n\n`mpi4py_installer` uses `<site name>.dertermine_system()` to detect which\nsystem it is running on. For cross-site builds, you can overwrite this using:\n`--system=<system name>`. Eg:\n\n```\npython -m mpi4py_installer --site=nersc --system=perlmutter\n```\n\n### Display Available Variants for a given Site and System:\n\n`mpi4py_installer` uses `<site name>.available_variants(system)` to display the\navailable build vaiants. Setting `--show-variants` from the CLI activates this\nmode. This modes does not install `mpi4py`, instead prints a list of the\navariants (default variant is designated using `*`). E.g:\n\n```\npython -m mpi4py_installer --site=nersc --show-variants\n```\n\nwill display the variants available on this system at NERSC.\n\n### Set Build Variants\n\nThe `--variant=<variant name>` input flag sets the build variants. Build\nvariants can be any string, but the recommended format is:\n`system_partition:compiler_name` -- e.g. `gpu:nvidia`. Eg:\n\n```\npython -m mpi4py_installer --site=nersc --variant=gpu:nvidia\n```\n\n### Logging\n\nBy default minimal logging is displayed (after all, this is not drain surgery).\nWHen someing goes wrong though, you can enable debug mode by lowering the log\nlevel using the `--log-level=10` flag. The logger is programatically accessible\nas: `mpi4py_installer.logger`.\n\n## For Sysadmins\n\nDo you want to add your site or system to the machines supports out-of-the-box?\nEasy, submit a PR to add `site_name.py` to `sites/`. `site_name.py` needs to\ndefine the following functions:\n\n* `determine_system() -> str`: a function that can dermine the name\n(returned as a string) of the system that it's currently running on.\n* `available_variants(system: str) -> list[str]` returns a list of all avialable\nvariants on `system`.\n* `auto_variant(system: str) -> str`: a function that returns the name of the\ndefault variant on `system`.\n* `config(system: str, variant: str) -> dict[str, str]` returns a dictionary\ncontaining the following keys:\n    - `'sys_prefix'`: the path prefix of a system (module) version of python.\n    Any python executable that starts with this path will be assumed to have a\n    read-only `site-pacakges`.\n    - `'CC'`, `'MPICC'`, `'CFLAGS'` control the compiler and `CLFAGS` used by\n    the compiler.\n* `init(system: str, variant: str) -> str` returns the bash commands that must\npreceede the `MPICC=... pip install ...` command. Eg. `module load` statements\ngo here.\n* `sanity(system: str, variant: str, config: dict[str, str]) -> bool` returns\ntrue if the `mpi4py` configuration matches what you expect.\n\n### Logging and Debugging\n\nWe recommend that you log the inputs to your site-configuration functions, eg:\n\n```python\ndef sanity(system: str, variant: str, config: dict[str, str]) -> bool:\n    logger.debug(f\"{system=}, {variant=}, {config=}\")\n```\n\nThis way you can most easily answer trouble-tickets by asking the user to set\n`--log-level=10`. Any user configurations that might influence the setup logic\nwould be apparent here.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/JBlaschke/mpi4py-installer",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mpi4py-installer",
            "package_url": "https://pypi.org/project/mpi4py-installer/",
            "platform": null,
            "project_url": "https://pypi.org/project/mpi4py-installer/",
            "project_urls": {
                "Homepage": "https://github.com/JBlaschke/mpi4py-installer"
            },
            "release_url": "https://pypi.org/project/mpi4py-installer/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "No more copy+paste of magic bash commands while installing mpi4py on HPC systems.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16000796,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4ffced35c58ff5d7651706aebbbb1ffc",
                    "sha256": "eb72797201b4906cf942b92cf868039cc43e1bbf312b73cd3f1eb21bd3f97f3c"
                },
                "downloads": -1,
                "filename": "mpi4py-installer-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4ffced35c58ff5d7651706aebbbb1ffc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 7168,
                "upload_time": "2022-12-05T22:46:54",
                "upload_time_iso_8601": "2022-12-05T22:46:54.738018Z",
                "url": "https://files.pythonhosted.org/packages/a9/6d/936f0f6e27b695a665e4a036443af98c913a8e5fa0e9790c8f4cde1a992c/mpi4py-installer-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}