{
    "0.1.1": {
        "info": {
            "author": "",
            "author_email": "Philip Crotwell <crotwell@seis.sc.edu>",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering"
            ],
            "description": "# PickAx\n\n[![PyPI](https://img.shields.io/pypi/v/pickax)](https://pypi.org/project/pickax/)\n\nPickAx: a simple seismic picker, when you just need to dig out a few\narrivals.\n\n# Start\n\n```\npickax -h\nHi PickAx!\nusage: pickax [-h] [-v] [-l LOADER] [-s SEIS]\n\nPickax, really simple seismic phase picker.\n\noptions:\n  -h, --help            show this help message and exit\n  -v, --verbose         increase output verbosity\n  -l LOADER, --loader LOADER\n                        Initialization loader script, run at startup\n  -s SEIS, --seis SEIS  Seismogram file, loaded at startup\n```\n\nFor example, using `simple.py` to initialize pickax, load data and open the picker window:\n\n```\npickax -l simple.py\n```\n\nOr to view just a single file, ie quick look:\n```\npickax -s JKYD.mseed\n```\n\n# Keys\n\n- c create generic, unnamed, pick\n- a create pick and set phase_hint to \"P\"\n- s create pick and set phase_hint to \"S\"\n- d/D to display author's picks/ all picks\n- f/F toggle to next/prev filter\n- v finish current seis, but don't quit, ie go to next\n- r finish current seis, go to previous\n- x, followed by second x zooms to selected time window\n- X, zoom out\n- w shift left (west)\n- e shift right (east)\n- t print current mouse time and amplitude\n- q finish current seis and quit\n\n# Configuration\n\nPickAx tries to be very simple and do just one thing, just like\na pickax is good for digging a hole in\nred clay, but is just one of the tools in your toolshed. So don't forget\nto use your shovels, screwdrivers and lawnmowers for the things they do better.\nBasically all data management is handed off to the startup\nscript. By setting the finishFn, you can save picks however you want (or not\nat all), and load in the next seismogram for display. Setting the filters\nallows toggling between different ways of processing the seismogram.\nThe creation_info provides default creation info for the pick,\nprimarily for author or agency_id, defaulting to `author=os.getlogin()`.\n\nSee [simple.py](https://raw.githubusercontent.com/crotwell/pickax/main/simple.py) for an example of setting up pickax and loading data.\n\n# Filter functions\n\nFilters are often a way of applying actual time series filters, but can\nbe anything that modifies the waveform.\nThey are each a simple dictionary with a `name` and `fn`.\nThe function will be called\nwith four arguments. First is a copy of the original stream, so modification in\nplace is safe. The second is the current filtered stream, so filters can build\non the previous if that is what you want. Third is the name for the current\nfilter function, and last is the filter index, just for reference.\nIf a stream is returned, that becomes\nthe current displayed stream, but if None is returned, then it assumes\nthe original was modified in place.\n\n# Finish function\n\nThe finish function is called whenever the user quits, goes to next or previous,\nie `q`, `v` or `r`. It is called with three arguments, first is the QuakeML\nEvent, which contains picks, including both new picks and any existing picks.\nSecond is the current stream, useful to get the channel. Last is the command,\none of \"quit\", \"next\", or \"prev\".\n\n# build hints\n\n```\nconda create -n pickax python=3.10\nconda activate pickax\npython3 -m pip install --upgrade build\nrm -f dist/* && python3 -m build\npip3 install dist/pickax-*-py3-none-any.whl --force-reinstall\n\n```\n\nor if all deps are already installed, much faster:\n```\npip3 install dist/pickax-*-py3-none-any.whl --force-reinstall --no-deps\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "seismic-pickax",
            "package_url": "https://pypi.org/project/seismic-pickax/",
            "platform": null,
            "project_url": "https://pypi.org/project/seismic-pickax/",
            "project_urls": {
                "Bug Tracker": "https://github.com/crotwell/pickax/issues",
                "Homepage": "https://github.com/crotwell/pickax"
            },
            "release_url": "https://pypi.org/project/seismic-pickax/0.1.1/",
            "requires_dist": [
                "obspy (>=1.3)",
                "ipython (>=8)"
            ],
            "requires_python": ">=3.10",
            "summary": "Seismic phase picker.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15947736,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d635ca2b3818f45cc4f63988450bf7d5",
                    "sha256": "f3ec2194561f5e9b332b5c2e6e46a8971b03fdc7837aa8033dd3b561ecd1ff64"
                },
                "downloads": -1,
                "filename": "seismic_pickax-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d635ca2b3818f45cc4f63988450bf7d5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 19453,
                "upload_time": "2022-11-30T21:54:39",
                "upload_time_iso_8601": "2022-11-30T21:54:39.278244Z",
                "url": "https://files.pythonhosted.org/packages/9b/4e/40d386fbc59e58c5bb19e0267eb66a205de1753eb920119d80ffb484c019/seismic_pickax-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4d9a1e547518f722ee4631a847fcb19",
                    "sha256": "54e3fdf262fc25a0b0ad22c29756efed80991f01be77e60ff9407baa3013d0d1"
                },
                "downloads": -1,
                "filename": "seismic-pickax-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c4d9a1e547518f722ee4631a847fcb19",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 19984,
                "upload_time": "2022-11-30T21:54:40",
                "upload_time_iso_8601": "2022-11-30T21:54:40.641700Z",
                "url": "https://files.pythonhosted.org/packages/b2/87/1b23a3dcc63d0cf51deb78b0a2b838893fa8ed34e8c2db8e59272023b2d0/seismic-pickax-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}