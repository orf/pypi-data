{
    "0.1.0": {
        "info": {
            "author": "Rudransh Joshi",
            "author_email": "rudranshjoshi1806@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# craiyon.py\n\nAPI Wrapper for [craiyon](craiyon.com) (formerly DAL-E-MINI) to generate awesome images from text tokens.\n\n## Badges\n\nProvided By: [shields.io](https://shields.io/)\n\n[![PyPI Version](https://img.shields.io/pypi/v/craiyon.py?style=for-the-badge)](https://pypi.org/project/craiyon.py/)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/craiyon.py?color=red&style=for-the-badge)](https://pypi.org/project/craiyon.py/)\n[![Apache License 2.0](https://img.shields.io/pypi/l/craiyon.py?color=lime&style=for-the-badge)](https://opensource.org/licenses/)\n[![Connect On Discord](https://img.shields.io/discord/710909601356447805?color=yellow&style=for-the-badge)](https://discord.gg/dN66r3D)\n[![Code Lines](https://img.shields.io/tokei/lines/github/FireHead90544/craiyon.py?color=orange&style=for-the-badge)](https://github.com/FireHead90544/craiyon.py)\n[![Code Size](https://img.shields.io/github/languages/code-size/FireHead90544/craiyon.py?style=for-the-badge)](https://github.com/FireHead90544/craiyon.py)\n[![Pull Requests](https://img.shields.io/github/issues-pr/FireHead90544/craiyon.py?style=for-the-badge)](https://github.com/FireHead90544/craiyon.py/pulls)\n[![Issues](https://img.shields.io/github/issues/FireHead90544/craiyon.py?color=teal&style=for-the-badge)](https://github.com/FireHead90544/craiyon.py/issues)\n[![Contributors](https://img.shields.io/github/contributors/FireHead90544/craiyon.py?style=for-the-badge)](https://github.com/FireHead90544/craiyon.py/graphs/contributors)\n\n## Acknowledgements\n\n - [Issues](https://github.com/FireHead90544/craiyon.py/issues)\n - [Pull Requests](https://github.com/FireHead90544/craiyon.py/pulls)\n - [View Project On PyPI](https://pypi.org/project/craiyon.py/)\n\n  \n## Authors\n\n- [@Rudransh Joshi](https://www.github.com/FireHead90544)\n\n  \n## Installation\n\nThe easiest way to install craiyon.py is using pip\n\n```shell\n  pip install -U craiyon.py\n```\n\nOr just manually clone the repository and build the wheel\n\n\n## Usage / Examples\n\n### \n\n**Generate and save the images**\n\n```py\nfrom craiyon import Craiyon\n\ngenerator = Craiyon() # Instantiates the api wrapper\nresult = generator.generate(\"Photorealistic image of shrek eating earth\")\nresult.save_images() # Saves the generated images to 'current working directory/generated', you can also provide a custom path\n```\n![image](https://user-images.githubusercontent.com/55452780/181876989-38872ca2-c3d5-4891-9bd4-cf4e4b26b91e.png)\n\n**Use the images in your code without saving**\n\n```py\nfrom craiyon import Craiyon\nfrom PIL import Image # pip install pillow\nfrom io import BytesIO\nimport base64\n\ngenerator = Craiyon() # Instantiates the api wrapper\nresult = generator.generate(\"Professional photo of Obama flashing a flag with his last name\") # Generates 9 images by default and you cannot change that\nimages = result.images # A list containing image data as base64 encoded strings\nfor i in images:\n    image = Image.open(BytesIO(base64.decodebytes(i.encode(\"utf-8\"))))\n    # Use the PIL's Image object as per your needs\n```\n![image](https://user-images.githubusercontent.com/55452780/181877028-740bee12-432d-4019-b74e-a17f53b79987.png)\n\n## Todo\n\n- Build an async wrapper which is non-blocking and can be used with async code (e.g. aiohttp, discord.py)\n\n## Contributing\n\nContributions are always welcome!\n\n- Fork this repository.\n- Make the changes in your forked repositry.\n- Make sure to fetch upstream before generating a PR.\n- Generate a pull request.\n\nPlease adhere to the GitHub's `code of conduct` for contributions and contributors.\n\n  \n## License\n\n[Apache License 2.0](https://choosealicense.com/licenses/apache-2.0/)",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/FireHead90544/craiyon.py",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "craiyon.py",
            "package_url": "https://pypi.org/project/craiyon.py/",
            "platform": "any",
            "project_url": "https://pypi.org/project/craiyon.py/",
            "project_urls": {
                "Homepage": "https://github.com/FireHead90544/craiyon.py",
                "Issue tracker": "https://github.com/FireHead90544/craiyon.py/issues"
            },
            "release_url": "https://pypi.org/project/craiyon.py/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "API Wrapper for craiyon.com (DAL-E-MINI). Generate awesome images from text tokens.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14597214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "01648063bd637dd9f888d68ace9e74ad",
                    "sha256": "aebafebf98e757b526e3e18c2ac666cdd122b67ca54aadd7d14e83145febe5d5"
                },
                "downloads": -1,
                "filename": "craiyon.py-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "01648063bd637dd9f888d68ace9e74ad",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7677,
                "upload_time": "2022-07-30T06:10:52",
                "upload_time_iso_8601": "2022-07-30T06:10:52.651428Z",
                "url": "https://files.pythonhosted.org/packages/41/21/1e897e1dc486a3f00dc693a69769b3e33c11c485bc9e54dac6a0c637631e/craiyon.py-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}