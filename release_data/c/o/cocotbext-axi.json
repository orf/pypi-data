{
    "0.1.0": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.0/",
            "requires_dist": [
                "cocotb",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "58ae8cedff4be4f5311c19656ac19aa1",
                    "sha256": "482559d6f381f07c9fbf8d196ac09b92ac8f72bbd528906b338321c8d2e982f6"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "58ae8cedff4be4f5311c19656ac19aa1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 34219,
                "upload_time": "2020-12-03T03:33:40",
                "upload_time_iso_8601": "2020-12-03T03:33:40.755856Z",
                "url": "https://files.pythonhosted.org/packages/2b/da/2e1bfaaccbed7027bf2204f0a0700bf6eb17bf4dede7fe37482a5b96062b/cocotbext_axi-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "71a603351dcb4acfdf03b4427bc0939d",
                    "sha256": "659b84c1dfcfb98b75499f20ffd7432d0249d2e5f2c7047770e05788fbc0daaf"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "71a603351dcb4acfdf03b4427bc0939d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 34784,
                "upload_time": "2020-12-03T03:33:42",
                "upload_time_iso_8601": "2020-12-03T03:33:42.612779Z",
                "url": "https://files.pythonhosted.org/packages/e9/5c/4604db70bcbb4903975bd0bcea8b5cdc533b4cc459f7991a9c89af8310f9/cocotbext-axi-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.10": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.10/",
            "requires_dist": [
                "cocotb",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0d3ba1d07dde94bb3718cf47b081de0c",
                    "sha256": "42260afad0b646b4287ee384dff277bb8ccd277e1fcfd64da85ba14383b03e8f"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.10-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0d3ba1d07dde94bb3718cf47b081de0c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 39055,
                "upload_time": "2021-03-25T04:38:48",
                "upload_time_iso_8601": "2021-03-25T04:38:48.917597Z",
                "url": "https://files.pythonhosted.org/packages/fb/72/a0c5f0ef5cc24816724228222dee67fd6d4dbe6e48f03de24b255c8cbf8f/cocotbext_axi-0.1.10-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7e7ed32f4324633f8a47984e2e8f1d24",
                    "sha256": "f6b4e91711809f85a16465c45b1652b906dac9a17db12308cfed300ab49808b0"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.10.tar.gz",
                "has_sig": false,
                "md5_digest": "7e7ed32f4324633f8a47984e2e8f1d24",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 40159,
                "upload_time": "2021-03-25T04:38:50",
                "upload_time_iso_8601": "2021-03-25T04:38:50.549667Z",
                "url": "https://files.pythonhosted.org/packages/3f/53/e67e0aec8d9d9d72649e312a8500bb5f7b1cce04bb31c857537120fbd6bb/cocotbext-axi-0.1.10.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.12": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.12/",
            "requires_dist": [
                "cocotb",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.12",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b5100ada1c0c7d7d502d4dd50601b8ab",
                    "sha256": "d0d095f6dd84943412ad92e12c466a54f600c5aaa074ab3ab7437b2de7e76dba"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.12-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b5100ada1c0c7d7d502d4dd50601b8ab",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 40531,
                "upload_time": "2021-04-13T05:51:21",
                "upload_time_iso_8601": "2021-04-13T05:51:21.382278Z",
                "url": "https://files.pythonhosted.org/packages/32/75/76a7ca895c4aa8f81b8a0334480231bee501f42e557cc5ec56bf8f44ea3e/cocotbext_axi-0.1.12-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c3991f2ab019e3021c8073e7445260f8",
                    "sha256": "1fb60354ed8c9921e36eceb14e519e6c33d19d2e54896b7a57cef4fa59a68d50"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.12.tar.gz",
                "has_sig": false,
                "md5_digest": "c3991f2ab019e3021c8073e7445260f8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 41160,
                "upload_time": "2021-04-13T05:51:22",
                "upload_time_iso_8601": "2021-04-13T05:51:22.870388Z",
                "url": "https://files.pythonhosted.org/packages/80/43/1a80c9aaf8428b188cc62f1c0011f7f3814be26241d542d5da8b0144515c/cocotbext-axi-0.1.12.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.14": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: cocotb",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.14/",
            "requires_dist": [
                "cocotb",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.14",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f074557e541bc9522b514fbd3e3d85ce",
                    "sha256": "78bd3153e4a52bca47593cca3c5f4925936c5633b0bb8ed68cc1b5ce54bea1ee"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.14-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f074557e541bc9522b514fbd3e3d85ce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 40565,
                "upload_time": "2021-11-07T21:01:38",
                "upload_time_iso_8601": "2021-11-07T21:01:38.652032Z",
                "url": "https://files.pythonhosted.org/packages/1f/4f/020f38aa61d74c2f9f66de41990b794e73f2077373db3d779333bfa1ae76/cocotbext_axi-0.1.14-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "de7831031e2bcc0de6c53a46775ec58f",
                    "sha256": "eedefbd6fd78f1c8edb8484617f994290ce55501cc92250bce11bf0209969acc"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.14.tar.gz",
                "has_sig": false,
                "md5_digest": "de7831031e2bcc0de6c53a46775ec58f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 40389,
                "upload_time": "2021-11-07T21:01:40",
                "upload_time_iso_8601": "2021-11-07T21:01:40.629505Z",
                "url": "https://files.pythonhosted.org/packages/46/c9/cd1d886ef2e9223c70f19fbbc112c35fb008b1af33bd70112432d26718d1/cocotbext-axi-0.1.14.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.16": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: cocotb",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.16/",
            "requires_dist": [
                "cocotb",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.16",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7175c6fba795af74bc785ab4414b2187",
                    "sha256": "691e04f28e8e877bdd4c57bc15e44935588289e6b44b77b9a1f64f1aaa0b4b6b"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.16-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7175c6fba795af74bc785ab4414b2187",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 48418,
                "upload_time": "2021-11-17T06:56:55",
                "upload_time_iso_8601": "2021-11-17T06:56:55.323324Z",
                "url": "https://files.pythonhosted.org/packages/6f/00/81f123dd38189f560b20cfab0b70834ac20e671d8b1883589956142bc713/cocotbext_axi-0.1.16-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8e644d4bac138a2edc27f7e2cb88378a",
                    "sha256": "a9e8962ff9e9838a71b4287945b33e0946cd837cea0e284f730fba7bda898bae"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.16.tar.gz",
                "has_sig": false,
                "md5_digest": "8e644d4bac138a2edc27f7e2cb88378a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 46625,
                "upload_time": "2021-11-17T06:56:57",
                "upload_time_iso_8601": "2021-11-17T06:56:57.335826Z",
                "url": "https://files.pythonhosted.org/packages/71/e1/71b4cdb15c13f0dcded678912b5698e9a4fcf0a5be9f910593c3ecbe32ff/cocotbext-axi-0.1.16.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.18": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Framework :: cocotb",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.18/",
            "requires_dist": [
                "cocotb (>=1.6.0)",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.18",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "40aecad59ecebc69f954506c06e2498c",
                    "sha256": "840ff8a7041d80b32c8915975edcfb9fcf00df548522434c6cfccd4ae91336b4"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.18-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "40aecad59ecebc69f954506c06e2498c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 49138,
                "upload_time": "2021-12-29T04:06:30",
                "upload_time_iso_8601": "2021-12-29T04:06:30.994851Z",
                "url": "https://files.pythonhosted.org/packages/f6/bc/c022bf53e890686ab4be909d79bfd89d423d5c1509c49968f27924e58f86/cocotbext_axi-0.1.18-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b933844331db8d3791f0b59bc22de730",
                    "sha256": "1e6d85fd644afb5fb2adb8a1062213ed60080ea7bb419e830b4e4ea4e031d3a6"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.18.tar.gz",
                "has_sig": false,
                "md5_digest": "b933844331db8d3791f0b59bc22de730",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 47405,
                "upload_time": "2021-12-29T04:06:32",
                "upload_time_iso_8601": "2021-12-29T04:06:32.529649Z",
                "url": "https://files.pythonhosted.org/packages/a9/84/99070690b14209e85e64e385f272a92e1a2e9c045121a1573dd24ec239a7/cocotbext-axi-0.1.18.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.2/",
            "requires_dist": [
                "cocotb",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "802958327d52f374c52914424d9e95c7",
                    "sha256": "592f2bc5007fcefe6fb9758a73369be7e98b03a3ecfd39be6edb51722d2e2467"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "802958327d52f374c52914424d9e95c7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 34312,
                "upload_time": "2020-12-04T21:46:05",
                "upload_time_iso_8601": "2020-12-04T21:46:05.239684Z",
                "url": "https://files.pythonhosted.org/packages/16/e1/6b287b13780dfd32af4194cfe4e9ff273af77dc29eefae67140516d2b72f/cocotbext_axi-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ba5ff344750e2c4485b6fcfab1acbef6",
                    "sha256": "3c60a4f3836d52254e511ccbb2004039a1e78bd472a0806d7665d6e322831d7c"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "ba5ff344750e2c4485b6fcfab1acbef6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 35233,
                "upload_time": "2020-12-04T21:46:06",
                "upload_time_iso_8601": "2020-12-04T21:46:06.886620Z",
                "url": "https://files.pythonhosted.org/packages/7c/68/103529cd183c4359f05d31efd2d2c7b86d7e51646cebf9ec9a895d6a1b5c/cocotbext-axi-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.4/",
            "requires_dist": [
                "cocotb",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c2e54836e74fd3bbb1d7b7872864a16c",
                    "sha256": "6c36938f03d6224fb6e54440f5004f61c0be1ea64b9e4beba95ed1064c4aada1"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c2e54836e74fd3bbb1d7b7872864a16c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 34815,
                "upload_time": "2020-12-19T00:25:51",
                "upload_time_iso_8601": "2020-12-19T00:25:51.273380Z",
                "url": "https://files.pythonhosted.org/packages/b5/00/cc1f907a18384d8a9398894ed23a1bd83f59f47de7eadd201fad2c6f44df/cocotbext_axi-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2a1be973019f96ee9ca5299ec88a1089",
                    "sha256": "b547b2155f35796fd34602740439e4f86d5d19875c6408bf387c131fb0c25ed1"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "2a1be973019f96ee9ca5299ec88a1089",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 36559,
                "upload_time": "2020-12-19T00:25:52",
                "upload_time_iso_8601": "2020-12-19T00:25:52.622728Z",
                "url": "https://files.pythonhosted.org/packages/08/55/b9ae98f8ade55c08741403e3160ca8d07bd9ea77a5d817886c4c3254a84f/cocotbext-axi-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.6": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.6/",
            "requires_dist": [
                "cocotb",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6360cec4360b24e7e1b56e93508f15f1",
                    "sha256": "ec32d36d6aa7e3739a21d8fd06fc7efe42cf9c2be5ae5ba85ef5266cee0a15ad"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6360cec4360b24e7e1b56e93508f15f1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 38618,
                "upload_time": "2021-03-07T02:22:53",
                "upload_time_iso_8601": "2021-03-07T02:22:53.563945Z",
                "url": "https://files.pythonhosted.org/packages/95/e0/e2e561945ffb46bc71d252d930239793a536ea8239eacb7aa42a512c50fb/cocotbext_axi-0.1.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c9bab3f97e4e24b4496e68af04310228",
                    "sha256": "71672d31bad0fd14c93558a90f9d7ba4e6595f7f403187dc1f0655ec328cb384"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.6.tar.gz",
                "has_sig": false,
                "md5_digest": "c9bab3f97e4e24b4496e68af04310228",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 39474,
                "upload_time": "2021-03-07T02:22:55",
                "upload_time_iso_8601": "2021-03-07T02:22:55.068226Z",
                "url": "https://files.pythonhosted.org/packages/d6/07/239b6a3c7211eeb138f67f3647e05fc5bc56c96ce63dbbf45237a447e360/cocotbext-axi-0.1.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.8": {
        "info": {
            "author": "Alex Forencich",
            "author_email": "alex@alexforencich.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)"
            ],
            "description": "# AXI interface modules for Cocotb\n\n[![Build Status](https://github.com/alexforencich/cocotbext-axi/workflows/Regression%20Tests/badge.svg?branch=master)](https://github.com/alexforencich/cocotbext-axi/actions/)\n[![codecov](https://codecov.io/gh/alexforencich/cocotbext-axi/branch/master/graph/badge.svg)](https://codecov.io/gh/alexforencich/cocotbext-axi)\n[![PyPI version](https://badge.fury.io/py/cocotbext-axi.svg)](https://pypi.org/project/cocotbext-axi)\n[![Downloads](https://pepy.tech/badge/cocotbext-axi)](https://pepy.tech/project/cocotbext-axi)\n\nGitHub repository: https://github.com/alexforencich/cocotbext-axi\n\n## Introduction\n\nAXI, AXI lite, and AXI stream simulation models for [cocotb](https://github.com/cocotb/cocotb).\n\n## Installation\n\nInstallation from pip (release version, stable):\n\n    $ pip install cocotbext-axi\n\nInstallation from git (latest development version, potentially unstable):\n\n    $ pip install https://github.com/alexforencich/cocotbext-axi/archive/master.zip\n\nInstallation for active development:\n\n    $ git clone https://github.com/alexforencich/cocotbext-axi\n    $ pip install -e cocotbext-axi\n\n## Documentation and usage examples\n\nSee the `tests` directory, [verilog-axi](https://github.com/alexforencich/verilog-axi), and [verilog-axis](https://github.com/alexforencich/verilog-axis) for complete testbenches using these modules.\n\n### AXI and AXI lite master\n\nThe `AxiMaster` and `AxiLiteMaster` classes implement AXI masters and are capable of generating read and write operations against AXI slaves.  Requested operations will be split and aligned according to the AXI specification.  The `AxiMaster` module is capable of generating narrow bursts, handling multiple in-flight operations, and handling reordering and interleaving in responses across different transaction IDs.\n\nThe `AxiMaster` is a wrapper around `AxiMasterWrite` and `AxiMasterRead`.  Similarly, `AxiLiteMaster` is a wrapper around `AxiLiteMasterWrite` and `AxiLiteMasterRead`.  If a read-only or write-only interface is required instead of a full interface, use the corresponding read-only or write-only variant, the usage and API are exactly the same.\n\nTo use these modules, import the one you need and connect it to the DUT:\n\n    from cocotbext.axi import AxiBus, AxiMaster\n\n    axi_master = AxiMaster(AxiBus.from_prefix(dut, \"s_axi\"), dut.clk, dut.rst)\n\nThe first argument to the constructor accepts an `AxiBus` or `AxiLiteBus` object.  These objects are containers for the interface signals and include class methods to automate connections.\n\nOnce the module is instantiated, read and write operations can be initiated in a few different ways.\n\nFirst, non-blocking operations can be started with `init_read()` and `init_write()`.  These methods will queue up a read or write operation to be carried out over the interface.  The result of the operation can be retrieved with `get_read_data()` and `get_write_resp()`.  To monitor the status of the module, `idle()`, `wait()`, `wait_read()`, and `wait_write()` can be used.  For example:\n\n    axi_master.init_write(0x0000, b'test')\n    await axi_master.wait()\n    resp = axi_master.get_write_resp()\n    axi_master.init_read(0x0000, 4)\n    await axi_master.wait()\n    data = axi_master.get_read_data()\n\nAlternatively, an event object can be provided as an argument to `init_read()` and `init_write()`, and the result can be retrieved from `Event.data`.  For example:\n\n    event = Event()\n    axi_master.init_write(0x0000, b'test', event=event)\n    await event.wait()\n    resp = event.data\n    event = Event()\n    axi_master.init_read(0x0000, 4, event=event)\n    await event.wait()\n    resp = event.data\n\nSecond, blocking operations can be carried out with `read()` and `write()` and their associated word-access wrappers.  Multiple concurrent operations started from different coroutines are handled correctly.  For example:\n\n    await axi_master.write(0x0000, b'test')\n    data = await axi_master.read(0x0000, 4)\n\n`read()`, `write()`, `get_read_data()`, and `get_write_resp()` return `namedtuple` objects containing _address_, _data_ or _length_, and _resp_.\n\n#### `AxiMaster` and `AxiLiteMaster` constructor parameters\n\n* _bus_: `AxiBus` or `AxiLiteBus` object containing AXI interface signals\n* _clock_: clock signal\n* _reset_: reset signal (optional)\n* _reset_active_level_: reset active level (optional, default `True`)\n\n#### Additional parameters for `AxiMaster`\n\n* _max_burst_len_: maximum burst length in cycles, range 1-256, default 256.\n\n#### Methods\n\n* `init_read(address, length, ...)`: initiate reading _length_ bytes, starting at _address_\n* `init_write(address, data, ...)`: initiate writing _data_ (bytes), starting from _address_\n* `idle()`: returns _True_ when there are no outstanding operations in progress\n* `wait()`: blocking wait until all outstanding operations complete\n* `wait_read()`: wait until all outstanding read operations complete\n* `wait_write()`: wait until all outstanding write operations complete\n* `read_data_ready()`: determine if any read read data is available\n* `get_read_data()`: fetch first available read data\n* `write_resp_ready()`: determine if any write response is available\n* `get_write_resp()`: fetch first available write response\n* `read(address, length, ...)`: read _length_ bytes, starting at _address_\n* `read_words(address, count, byteorder='little', ws=2, ...)`: read _count_ _ws_-byte words, starting at _address_\n* `read_dwords(address, count, byteorder='little', ...)`: read _count_ 4-byte dwords, starting at _address_\n* `read_qwords(address, count, byteorder='little', ...)`: read _count_ 8-byte qwords, starting at _address_\n* `read_byte(address, ...)`: read single byte at _address_\n* `read_word(address, byteorder='little', ws=2, ...)`: read single _ws_-byte word at _address_\n* `read_dword(address, byteorder='little', ...)`: read single 4-byte dword at _address_\n* `read_qword(address, byteorder='little', ...)`: read single 8-byte qword at _address_\n* `write(address, data, ...)`: write _data_ (bytes), starting at _address_\n* `write_words(address, data, byteorder='little', ws=2, ...)`: write _data_ (_ws_-byte words), starting at _address_\n* `write_dwords(address, data, byteorder='little', ...)`: write _data_ (4-byte dwords), starting at _address_\n* `write_qwords(address, data, byteorder='little', ...)`: write _data_ (8-byte qwords), starting at _address_\n* `write_byte(address, data, ...)`: write single byte at _address_\n* `write_word(address, data, byteorder='little', ws=2, ...)`: write single _ws_-byte word at _address_\n* `write_dword(address, data, byteorder='little', ...)`: write single 4-byte dword at _address_\n* `write_qword(address, data, byteorder='little', ...)`: write single 8-byte qword at _address_\n\n#### Additional optional arguments for `AxiMaster`\n\n* _arid_,_awid_: AXI ID for bursts, default automatically assigned\n* _burst_: AXI burst type, default `AxiBurstType.INCR`\n* _size_: AXI burst size, default maximum supported by interface\n* _lock_: AXI lock type, default `AxiLockType.NORMAL`\n* _cache_: AXI cache field, default `0b0011`\n* _prot_: AXI protection flags, default `AxiProt.NONSECURE`\n* _qos_: AXI QOS field, default `0`\n* _region_: AXI region field, default `0`\n* _user_: AXI user signal (awuser/aruser), default `0`\n* _wuser_: AXI wuser signal, default `0` (write-related methods only)\n* _event_: `Event` object used to wait on and retrieve result for specific operation, default `None` (`init_read()` and `init_write()` only).  If provided, the event will be triggered when the operation completes and the result returned via `Event.data` instead of `get_read_data()` or `get_write_resp()`.\n\n#### Additional optional arguments for `AxiLiteMaster`\n\n* _prot_: AXI protection flags, default `AxiProt.NONSECURE`\n* _event_: `Event` object used to wait on and retrieve result for specific operation, default `None` (`init_read()` and `init_write()` only).  If provided, the event will be triggered when the operation completes and the result returned via `Event.data` instead of `get_read_data()` or `get_write_resp()`.\n\n#### `AxiBus` and `AxiLiteBus` objects\n\nThe `AxiBus`, `AxiLiteBus`, and related objects are containers for the interface signals.  These hold instances of bus objects for the individual channels, which are extensions of `cocotb.bus.Bus`.  Class methods `from_entity` and `from_prefix` are provided to facilitate signal name matching.  For AXI interfaces use `AxiBus`, `AxiReadBus`, or `AxiWriteBus`, as appropriate.  For AXI lite interfaces, use `AxiLiteBus`, `AxiLiteReadBus`, or `AxiLiteWriteBus`, as appropriate.\n\n### AXI and AXI lite RAM\n\nThe `AxiRam` and `AxiLiteRam` classes implement AXI RAMs and are capable of completing read and write operations from upstream AXI masters.  The `AxiRam` module is capable of handling narrow bursts.\n\nThe `AxiRam` is a wrapper around `AxiRamWrite` and `AxiRamRead`.  Similarly, `AxiLiteRam` is a wrapper around `AxiLiteRamWrite` and `AxiLiteRamRead`.  If a read-only or write-only interface is required instead of a full interface, use the corresponding read-only or write-only variant, the usage and API are exactly the same.\n\nTo use these modules, import the one you need and connect it to the DUT:\n\n    from cocotbext.axi import AxiBus, AxiRam\n\n    axi_ram = AxiRam(AxiBus.from_prefix(dut, \"m_axi\"), dut.clk, dut.rst, size=2**16)\n\nThe first argument to the constructor accepts an `AxiBus` or `AxiLiteBus` object.  These objects are containers for the interface signals and include class methods to automate connections.\n\nOnce the module is instantiated, the memory contents can be accessed in a couple of different ways.  First, the `mmap` object can be accessed directly via the `mem` attribute.  Second, `read()`, `write()`, and various word-access wrappers are available.  Hex dump helper methods are also provided for debugging.  For example:\n\n    axi_ram.write(0x0000, b'test')\n    data = axi_ram.read(0x0000, 4)\n\nMulti-port memories can be constructed by passing the `mem` object of the first instance to the other instances.  For example, here is how to create a four-port RAM:\n\n    axi_ram_p1 = AxiRam(AxiBus.from_prefix(dut, \"m00_axi\"), dut.clk, dut.rst, size=2**16)\n    axi_ram_p2 = AxiRam(AxiBus.from_prefix(dut, \"m01_axi\"), dut.clk, dut.rst, mem=axi_ram_p1.mem)\n    axi_ram_p3 = AxiRam(AxiBus.from_prefix(dut, \"m02_axi\"), dut.clk, dut.rst, mem=axi_ram_p1.mem)\n    axi_ram_p4 = AxiRam(AxiBus.from_prefix(dut, \"m03_axi\"), dut.clk, dut.rst, mem=axi_ram_p1.mem)\n\n#### `AxiRam` and `AxiLiteRam` constructor parameters\n\n* _bus_: `AxiBus` or `AxiLiteBus` object containing AXI interface signals\n* _clock_: clock signal\n* _reset_: reset signal (optional)\n* _reset_active_level_: reset active level (optional, default `True`)\n* _size_: memory size in bytes (optional, default 1024)\n* _mem_: mmap object to use (optional, overrides _size_)\n\n#### Attributes:\n\n* _mem_: directly access shared `mmap` object\n\n#### Methods\n\n* `read(address, length)`: read _length_ bytes, starting at _address_\n* `read_words(address, count, byteorder='little', ws=2)`: read _count_ _ws_-byte words, starting at _address_\n* `read_dwords(address, count, byteorder='little')`: read _count_ 4-byte dwords, starting at _address_\n* `read_qwords(address, count, byteorder='little')`: read _count_ 8-byte qwords, starting at _address_\n* `read_byte(address)`: read single byte at _address_\n* `read_word(address, byteorder='little', ws=2)`: read single _ws_-byte word at _address_\n* `read_dword(address, byteorder='little')`: read single 4-byte dword at _address_\n* `read_qword(address, byteorder='little')`: read single 8-byte qword at _address_\n* `write(address, data)`: write _data_ (bytes), starting at _address_\n* `write_words(address, data, byteorder='little', ws=2)`: write _data_ (_ws_-byte words), starting at _address_\n* `write_dwords(address, data, byteorder='little')`: write _data_ (4-byte dwords), starting at _address_\n* `write_qwords(address, data, byteorder='little')`: write _data_ (8-byte qwords), starting at _address_\n* `write_byte(address, data)`: write single byte at _address_\n* `write_word(address, data, byteorder='little', ws=2)`: write single _ws_-byte word at _address_\n* `write_dword(address, data, byteorder='little')`: write single 4-byte dword at _address_\n* `write_qword(address, data, byteorder='little')`: write single 8-byte qword at _address_\n* `hexdump(address, length, prefix='')`: print hex dump of _length_ bytes starting from _address_, prefix lines with optional _prefix_\n* `hexdump_line(address, length, prefix='')`: return hex dump (list of str) of _length_ bytes starting from _address_, prefix lines with optional _prefix_\n* `hexdump_str(address, length, prefix='')`: return hex dump (str) of _length_ bytes starting from _address_, prefix lines with optional _prefix_\n\n### AXI stream\n\nThe `AxiStreamSource`, `AxiStreamSink`, and `AxiStreamMonitor` classes can be used to drive, receive, and monitor traffic on AXI stream interfaces.  The `AxiStreamSource` drives all signals except for `tready` and can be used to drive AXI stream traffic into a design.  The `AxiStreamSink` drives the `tready` line only and as such can receive AXI stream traffic and exert backpressure.  The `AxiStreamMonitor` drives no signals and as such can be connected to AXI stream interfaces anywhere within a design to passively monitor traffic.\n\nTo use these modules, import the one you need and connect it to the DUT:\n\n    from cocotbext.axi import (AxiStreamBus, AxiStreamSource, AxiStreamSink, AxiStreamMonitor)\n\n    axis_source = AxiStreamSource(AxiStreamBus.from_prefix(dut, \"s_axis\"), dut.clk, dut.rst)\n    axis_sink = AxiStreamSink(AxiStreamBus.from_prefix(dut, \"m_axis\"), dut.clk, dut.rst)\n    axis_mon= AxiStreamMonitor(AxiStreamBus.from_prefix(dut.inst, \"int_axis\"), dut.clk, dut.rst)\n\nThe first argument to the constructor accepts an `AxiStreamBus` object.  This object is a container for the interface signals and includes class methods to automate connections.\n\nTo send data into a design with an `AxiStreamSource`, call `send()`/`send_nowait()` or `write()`/`write_nowait()`.  Accepted data types are iterables or `AxiStreamFrame` objects.  Optionally, call `wait()` to wait for the transmit operation to complete.  Example:\n\n    await axis_source.send(b'test data')\n    # wait for operation to complete (optional)\n    await axis_source.wait()\n\nIt is also possible to wait for the transmission of a specific frame to complete by passing an event in the tx_complete field of the `AxiStreamFrame` object, and then awaiting the event.  The frame, with simulation time fields set, will be returned in the event data.  Example:\n\n    frame = AxiStreamFrame(b'test data', tx_complete=Event())\n    await axis_source.send(frame)\n    await frame.tx_complete.wait()\n    print(frame.tx_complete.data.sim_time_start)\n\nTo receive data with an `AxiStreamSink` or `AxiStreamMonitor`, call `recv()`/`recv_nowait()` or `read()`/`read_nowait()`.  Optionally call `wait()` to wait for new receive data.  `recv()` is intended for use with a frame-oriented interface, and by default compacts `AxiStreamFrame`s before returning them.  `read()` is intended for non-frame-oriented streams.  Calling `read()` internally calls `recv()` for all frames currently in the queue, then compacts and coalesces `tdata` from all frames into a separate read queue, from which read data is returned.  All sideband data is discarded.\n\n    data = await axis_sink.recv()\n\n#### Signals\n\n* `tdata`: data, required\n* `tvalid`: qualifies all other signals; optional, assumed `1` when absent\n* `tready`: indicates sink is ready for data; optional, assumed `1` when absent\n* `tlast`: marks the last cycle of a frame; optional, assumed `1` when absent\n* `tkeep`: qualifies data byte, data bus width must be evenly divisible by `tkeep` signal width; optional, assumed `1` when absent\n* `tid`: ID signal, can be used for routing; optional, assumed `0` when absent\n* `tdest`: destination signal, can be used for routing; optional, assumed `0` when absent\n* `tuser`: additional user data; optional, assumed `0` when absent\n\n#### Constructor parameters:\n\n* _bus_: `AxiStreamBus` object containing AXI stream interface signals\n* _clock_: clock signal\n* _reset_: reset signal (optional)\n* _reset_active_level_: reset active level (optional, default `True`)\n* _byte_size_: byte size (optional)\n* _byte_lanes_: byte lane count (optional)\n\nNote: _byte_size_, _byte_lanes_, `len(tdata)`, and `len(tkeep)` are all related, in that _byte_lanes_ is set from `tkeep` if it is connected, and `byte_size*byte_lanes == len(tdata)`.  So, if `tkeep` is connected, both _byte_size_ and _byte_lanes_ will be computed internally and cannot be overridden.  If `tkeep` is not connected, then either _byte_size_ or _byte_lanes_ can be specified, and the other will be computed such that `byte_size*byte_lanes == len(tdata)`.\n\n#### Attributes:\n\n* _pause_: stall the interface (deassert `tready` or `tvalid`) (source/sink only)\n* _queue_occupancy_bytes_: number of bytes in queue (all)\n* _queue_occupancy_frames_: number of frames in queue (all)\n* _queue_occupancy_limit_bytes_: max number of bytes in queue allowed before tready deassert (sink only)\n* _queue_occupancy_limit_frames_: max number of frames in queue allowed before tready deassert (sink only)\n\n#### Methods\n\n* `send(frame)`: send _frame_ (blocking) (source)\n* `send_nowait(frame)`: send _frame_ (non-blocking) (source)\n* `write(data)`: send _data_ (alias of send) (blocking) (source)\n* `write_nowait(data)`: send _data_ (alias of send_nowait) (non-blocking) (source)\n* `recv(compact=True)`: receive a frame as a `GmiiFrame` (blocking) (sink)\n* `recv_nowait(compact=True)`: receive a frame as a `GmiiFrame` (non-blocking) (sink)\n* `read(count)`: read _count_ bytes from buffer (blocking) (sink/monitor)\n* `read_nowait(count)`: read _count_ bytes from buffer (non-blocking) (sink/monitor)\n* `count()`: returns the number of items in the queue (all)\n* `empty()`: returns _True_ if the queue is empty (all)\n* `full()`: returns _True_ if the queue occupancy limits are met (sink)\n* `idle()`: returns _True_ if no transfer is in progress (all) or if the queue is not empty (source)\n* `clear()`: drop all data in queue (all)\n* `wait()`: wait for idle (source)\n* `wait(timeout=0, timeout_unit='ns')`: wait for frame received (sink)\n* `set_pause_generator(generator)`: set generator for pause signal, generator will be advanced on every clock cycle (source/sink)\n* `clear_pause_generator()`: remove generator for pause signal (source/sink)\n\n#### `AxiStreamBus` object\n\nThe `AxiStreamBus` object is a container for the interface signals.  Currently, it is an extension of `cocotb.bus.Bus`.  Class methods `from_entity` and `from_prefix` are provided to facilitate signal name matching.\n\n#### `AxiStreamFrame` object\n\nThe `AxiStreamFrame` object is a container for a frame to be transferred via AXI stream.  The `tdata` field contains the packet data in the form of a list of bytes, which is either a `bytearray` if the byte size is 8 bits or a `list` of `int`s otherwise.  `tkeep`, `tid`, `tdest`, and `tuser` can either be `None`, an `int`, or a `list` of `int`s.\n\nAttributes:\n\n* `tdata`: bytes, bytearray, or list\n* `tkeep`: tkeep field, optional; list, each entry qualifies the corresponding entry in `tdata`.  Can be used to insert gaps on the source side.\n* `tid`: tid field, optional; int or list with one entry per `tdata`, last value used per cycle when sending.\n* `tdest`: tdest field, optional; int or list with one entry per `tdata`, last value used per cycle when sending.\n* `tuser`: tuser field, optional; int or list with one entry per `tdata`, last value used per cycle when sending.\n* `sim_time_start`: simulation time of first transfer cycle of frame.\n* `sim_time_end`: simulation time of last transfer cycle of frame.\n* `tx_complete`: event or callable triggered when frame is transmitted.\n\nMethods:\n\n* `normalize()`: pack `tkeep`, `tid`, `tdest`, and `tuser` to the same length as `tdata`, replicating last element if necessary, initialize `tkeep` to list of `1` and `tid`, `tdest`, and `tuser` to list of `0` if not specified.\n* `compact()`: remove `tdata`, `tid`, `tdest`, and `tuser` values based on `tkeep`, remove `tkeep`, compact `tid`, `tdest`, and `tuser` to an int if all values are identical.\n\n### AXI signals\n\n* Write address channel\n    * `awid`: transaction ID\n    * `awaddr`: address\n    * `awlen`: burst length (cycles)\n    * `awsize`: burst size (bytes/cycle)\n    * `awburst`: burst type\n    * `awlock`: lock type\n    * `awcache`: cache control\n    * `awprot`: protection bits\n    * `awqos`: QoS field\n    * `awregion`: region field\n    * `awuser`: additional user sideband data\n    * `awvalid`: valid signal, qualifies all channel fields\n    * `awready`: ready signal, back-pressure from sink\n* Write data channel\n    * `wdata`: write data\n    * `wstrb`: write strobe\n    * `wlast`: end of burst flag\n    * `wuser`: additional user sideband data\n    * `wvalid`: valid signal, qualifies all channel fields\n    * `wready`: ready signal, back-pressure from sink\n* Write response channel\n    * `bid`: transaction ID\n    * `bresp`: write response\n    * `buser`: additional user sideband data\n    * `bvalid`: valid signal, qualifies all channel fields\n    * `bready`: ready signal, back-pressure from sink\n* Read address channel\n    * `arid`: transaction ID\n    * `araddr`: address\n    * `arlen`: burst length (cycles)\n    * `arsize`: burst size (bytes/cycle)\n    * `arburst`: burst type\n    * `arlock`: lock type\n    * `arcache`: cache control\n    * `arprot`: protection bits\n    * `arqos`: QoS field\n    * `arregion`: region field\n    * `aruser`: additional user sideband data\n    * `arvalid`: valid signal, qualifies all channel fields\n    * `arready`: ready signal, back-pressure from sink\n* Read data channel\n    * `rid`: transaction ID\n    * `rdata`: read data\n    * `rresp`: read response\n    * `rlast`: end of burst flag\n    * `ruser`: additional user sideband data\n    * `rvalid`: valid signal, qualifies all channel fields\n    * `rready`: ready signal, back-pressure from sink\n\n### AXI lite signals\n\n* Write address channel\n    * `awaddr`: address\n    * `awprot`: protection bits\n    * `awvalid`: valid signal, qualifies all channel fields\n    * `awready`: ready signal, back-pressure from sink\n* Write data channel\n    * `wdata`: write data\n    * `wstrb`: write strobe\n    * `wvalid`: valid signal, qualifies all channel fields\n    * `wready`: ready signal, back-pressure from sink\n* Write response channel\n    * `bresp`: write response\n    * `bvalid`: valid signal, qualifies all channel fields\n    * `bready`: ready signal, back-pressure from sink\n* Read address channel\n    * `araddr`: address\n    * `arprot`: protection bits\n    * `arvalid`: valid signal, qualifies all channel fields\n    * `arready`: ready signal, back-pressure from sink\n* Read data channel\n    * `rdata`: read data\n    * `rresp`: read response\n    * `rvalid`: valid signal, qualifies all channel fields\n    * `rready`: ready signal, back-pressure from sink\n\n### AXI stream signals\n\n* `tdata`: data\n* `tvalid`: qualifies all other signals\n* `tready`: indicates sink is ready for data\n* `tlast`: marks the last cycle of a frame\n* `tkeep`: qualifies data bytes in `tdata`\n* `tid`: ID signal, can be used for routing\n* `tdest`: destination signal, can be used for routing\n* `tuser`: additional sideband data\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/alexforencich/cocotbext-axi",
            "keywords": "axi,cocotb",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cocotbext-axi",
            "package_url": "https://pypi.org/project/cocotbext-axi/",
            "platform": "any",
            "project_url": "https://pypi.org/project/cocotbext-axi/",
            "project_urls": {
                "Bug Tracker": "https://github.com/alexforencich/cocotbext-axi/issues",
                "Download": "https://github.com/alexforencich/cocotbext-axi/tarball/master",
                "Homepage": "https://github.com/alexforencich/cocotbext-axi",
                "Source Code": "https://github.com/alexforencich/cocotbext-axi"
            },
            "release_url": "https://pypi.org/project/cocotbext-axi/0.1.8/",
            "requires_dist": [
                "cocotb",
                "cocotb-bus",
                "pytest ; extra == 'test'",
                "cocotb-test ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "AXI, AXI lite, and AXI stream modules for cocotb",
            "version": "0.1.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12428476,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f6e1e3da3d0483a2e8a7f6885fa86924",
                    "sha256": "cde56e619f8b1f8aa2a3e3ee412ce4cae34e016433cf8997b8ab8fd6ddd27b29"
                },
                "downloads": -1,
                "filename": "cocotbext_axi-0.1.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f6e1e3da3d0483a2e8a7f6885fa86924",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 38490,
                "upload_time": "2021-03-18T01:38:29",
                "upload_time_iso_8601": "2021-03-18T01:38:29.110661Z",
                "url": "https://files.pythonhosted.org/packages/01/4b/e7590b4c0d9dc24786ca1d1a84276f86e3b5a8e7a8e7cb144382e07950c8/cocotbext_axi-0.1.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8bdce05ec97ebf987795c50e86bd60ce",
                    "sha256": "6f848606b9a0c3061e7b3acb1bd40d6c3937962743c4755af996944494dd895f"
                },
                "downloads": -1,
                "filename": "cocotbext-axi-0.1.8.tar.gz",
                "has_sig": false,
                "md5_digest": "8bdce05ec97ebf987795c50e86bd60ce",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 39362,
                "upload_time": "2021-03-18T01:38:30",
                "upload_time_iso_8601": "2021-03-18T01:38:30.506067Z",
                "url": "https://files.pythonhosted.org/packages/c0/37/e454edd60b68081307c82dc964fda03f15e2867dabbc1fedb325ebb752ed/cocotbext-axi-0.1.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}