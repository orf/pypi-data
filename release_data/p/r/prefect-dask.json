{
    "0.1.0": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.1.0/",
            "requires_dist": [
                "prefect (>=2.0b5)",
                "dask (==2022.2.0) ; python_version < \"3.8\"",
                "dask (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b266548ba248556520722f2c00987508",
                    "sha256": "f6363ef344b2c5fce7c75cfbc1e1e56bd34c2665d703c122242c753909ea1340"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b266548ba248556520722f2c00987508",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13145,
                "upload_time": "2022-06-07T18:52:15",
                "upload_time_iso_8601": "2022-06-07T18:52:15.435004Z",
                "url": "https://files.pythonhosted.org/packages/e4/db/07d1d3c931178007ec90db681467a1f8b3cb9d875b460da529db71e2ce60/prefect_dask-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "92c531195d91fa2d2ae420cebb5cbf13",
                    "sha256": "053fdd9ec2d488e2df80885529f227387e64f593353714aa030400b4fbd6df08"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "92c531195d91fa2d2ae420cebb5cbf13",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29858,
                "upload_time": "2022-06-07T18:52:17",
                "upload_time_iso_8601": "2022-06-07T18:52:17.306152Z",
                "url": "https://files.pythonhosted.org/packages/00/df/87114b4a79cf86b7e4b24f7a21a8ae456f0e7749de6dab261b2baede8f9f/prefect-dask-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.1.1/",
            "requires_dist": [
                "prefect (>=2.0b8)",
                "distributed (==2022.2.0) ; python_version < \"3.8\"",
                "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a60f5b5760acb4cbecd397ff426f7e6c",
                    "sha256": "dab80c50733d604f5534eb7ce383780196f124fdffb95f6ed85dd79bf51c802f"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a60f5b5760acb4cbecd397ff426f7e6c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13135,
                "upload_time": "2022-07-08T21:05:34",
                "upload_time_iso_8601": "2022-07-08T21:05:34.975781Z",
                "url": "https://files.pythonhosted.org/packages/29/bd/c2956c0b3519a28c4306fbf6dfecd4c1c0586e12d58a30d0f81716480024/prefect_dask-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b5888ee4ebcef2ff964536d0d5bfc8c",
                    "sha256": "f7cec06786fd52c6f437e4e554b5dcab69c24f96d588708c01d07c5c7b2e1dd7"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "1b5888ee4ebcef2ff964536d0d5bfc8c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29817,
                "upload_time": "2022-07-08T21:05:36",
                "upload_time_iso_8601": "2022-07-08T21:05:36.653108Z",
                "url": "https://files.pythonhosted.org/packages/13/6e/5d5460daff4301f324fd0087fe512b0276ba88bc1149565c96218d98efaa/prefect-dask-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.1.2/",
            "requires_dist": [
                "prefect (>=2.0b9)",
                "distributed (==2022.2.0) ; python_version < \"3.8\"",
                "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ecd00b8889d939989843d2f6579a0a4",
                    "sha256": "e5aebea55eefed08f314aefef3666824039a12d7af77bcbc5da8258b203d2eff"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1ecd00b8889d939989843d2f6579a0a4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13131,
                "upload_time": "2022-07-20T16:15:45",
                "upload_time_iso_8601": "2022-07-20T16:15:45.139376Z",
                "url": "https://files.pythonhosted.org/packages/37/e8/3ecc77a0208501065d70a57d2117e541cb95dabe80f50b5456727ba355a3/prefect_dask-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bc937bda46dd4364d1847bc7cecfdb48",
                    "sha256": "3eafd0033d455560252bd0f18aa0d1c5a55918b410178ba34c3a42ed0652bf79"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "bc937bda46dd4364d1847bc7cecfdb48",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29825,
                "upload_time": "2022-07-20T16:15:46",
                "upload_time_iso_8601": "2022-07-20T16:15:46.987452Z",
                "url": "https://files.pythonhosted.org/packages/e3/d1/458cfab0150e8fa17df69fa608290383248dcaad9af6c154aa033c9bbf6a/prefect-dask-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.2.0/",
            "requires_dist": [
                "prefect (>=2.0b9)",
                "distributed (==2022.2.0) ; python_version < \"3.8\"",
                "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4f39f316316d6c11e4c85e17f7fb4655",
                    "sha256": "d1a6757e44efd2d3bc21195c6a2c7f99c452348524f1f618fa10c577ccfd358c"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4f39f316316d6c11e4c85e17f7fb4655",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13030,
                "upload_time": "2022-09-05T13:31:46",
                "upload_time_iso_8601": "2022-09-05T13:31:46.774600Z",
                "url": "https://files.pythonhosted.org/packages/94/5d/c9db2bc8502b596a3a338b4f55b07151635b914fa7e83556993bc7939e30/prefect_dask-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2ea7fddbbdec823442eb75a6886190ed",
                    "sha256": "8a6cb29f82103fdc3ea97ea1381b1bbc09f207c0a27141a69a332d2e535d266e"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "2ea7fddbbdec823442eb75a6886190ed",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29699,
                "upload_time": "2022-09-05T13:31:49",
                "upload_time_iso_8601": "2022-09-05T13:31:49.199024Z",
                "url": "https://files.pythonhosted.org/packages/b2/9e/41b9d83a294f38ca4e2090d5ff9c679b38b692c8564cc50b7bf66bb8383c/prefect-dask-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0.post1": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.2.0.post1/",
            "requires_dist": [
                "prefect (>=2.0b9)",
                "distributed (==2022.2.0) ; python_version < \"3.8\"",
                "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.2.0.post1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3c3c6a8a7a7673db85c203205a475126",
                    "sha256": "a24b9af473441bf96176d898550cdd79cd3136fed24aee15b7271ab0d70a1e9b"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.2.0.post1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3c3c6a8a7a7673db85c203205a475126",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13109,
                "upload_time": "2022-09-09T20:24:31",
                "upload_time_iso_8601": "2022-09-09T20:24:31.341189Z",
                "url": "https://files.pythonhosted.org/packages/dd/d3/e9f10cde094fbf3081b703138ba5a3581084b53c52c39021dee2d796e139/prefect_dask-0.2.0.post1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "25cfbb0c21481333e44485c7e215de6c",
                    "sha256": "a3ef967b8f47b807c1c46745253c2bebcbfa41783a60d62a3b4c640d158a6e01"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.2.0.post1.tar.gz",
                "has_sig": false,
                "md5_digest": "25cfbb0c21481333e44485c7e215de6c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 29946,
                "upload_time": "2022-09-09T20:24:33",
                "upload_time_iso_8601": "2022-09-09T20:24:33.157115Z",
                "url": "https://files.pythonhosted.org/packages/17/cd/9c339043bd9075a0f4ee4e4d69710847c007f97618667a3126fb118f7b02/prefect-dask-0.2.0.post1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "Prefect Technologies, Inc.",
            "author_email": "help@prefect.io",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: System Administrators",
                "License :: OSI Approved :: Apache Software License",
                "Natural Language :: English",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries"
            ],
            "description": "# prefect-dask\n\n<p align=\"center\">\n    <a href=\"https://pypi.python.org/pypi/prefect-dask/\" alt=\"PyPI version\">\n        <img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/prefect-dask?color=0052FF&labelColor=090422\"></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-dask/\" alt=\"Stars\">\n        <img src=\"https://img.shields.io/github/stars/PrefectHQ/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://pepy.tech/badge/prefect-dask/\" alt=\"Downloads\">\n        <img src=\"https://img.shields.io/pypi/dm/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <a href=\"https://github.com/PrefectHQ/prefect-dask/pulse\" alt=\"Activity\">\n        <img src=\"https://img.shields.io/github/commit-activity/m/PrefectHQ/prefect-dask?color=0052FF&labelColor=090422\" /></a>\n    <br>\n    <a href=\"https://prefect-community.slack.com\" alt=\"Slack\">\n        <img src=\"https://img.shields.io/badge/slack-join_community-red.svg?color=0052FF&labelColor=090422&logo=slack\" /></a>\n    <a href=\"https://discourse.prefect.io/\" alt=\"Discourse\">\n        <img src=\"https://img.shields.io/badge/discourse-browse_forum-red.svg?color=0052FF&labelColor=090422&logo=discourse\" /></a>\n</p>\n\n## Welcome!\n\nPrefect integrations with the [Dask.distributed](http://distributed.dask.org/) library for distributed computing in Python.\n\nProvides a `DaskTaskRunner` that enables flows to run tasks requiring parallel or distributed execution using Dask.\n\n## Getting Started\n\n### Python setup\n\nRequires an installation of Python 3.7+.\n\nWe recommend using a Python virtual environment manager such as pipenv, conda, or virtualenv.\n\nThese tasks are designed to work with Prefect 2.0. For more information about how to use Prefect, please refer to the [Prefect documentation](https://orion-docs.prefect.io/).\n\n### Installation\n\nInstall `prefect-dask` with `pip`:\n\n```bash\npip install prefect-dask\n```\n\nThen, register to [view the block](https://orion-docs.prefect.io/ui/blocks/) on Prefect Cloud:\n\n```bash\nprefect block register -m prefect_dask.credentials\n```\n\nNote, to use the `load` method on Blocks, you must already have a block document [saved through code](https://orion-docs.prefect.io/concepts/blocks/#saving-blocks) or [saved through the UI](https://orion-docs.prefect.io/ui/blocks/).\n\n## Running tasks on Dask\n\nThe `DaskTaskRunner` is a parallel task runner that submits tasks to the [`dask.distributed`](http://distributed.dask.org/) scheduler. \n\nBy default, a temporary Dask cluster is created for the duration of the flow run.\n\nFor example, this flow counts up to 10 in parallel (note that the output is not sequential).\n\n```python\nimport time\n\nfrom prefect import flow, task\nfrom prefect_dask import DaskTaskRunner\n\n@task\ndef shout(number):\n    time.sleep(0.5)\n    print(f\"#{number}\")\n\n@flow(task_runner=DaskTaskRunner)\ndef count_to(highest_number):\n    for number in range(highest_number):\n        shout.submit(number)\n\nif __name__ == \"__main__\":\n    count_to(10)\n\n# outputs\n#3\n#7\n#2\n#6\n#4\n#0\n#1\n#5\n#8\n#9\n```\n\nIf you already have a Dask cluster running, either local or cloud hosted, you can provide the connection URL via an `address` argument.\n\nTo configure your flow to use the `DaskTaskRunner`:\n\n1. Make sure the `prefect-dask` collection is installed as described earlier: `pip install prefect-dask`.\n2. In your flow code, import `DaskTaskRunner` from `prefect_dask.task_runners`.\n3. Assign it as the task runner when the flow is defined using the `task_runner=DaskTaskRunner` argument.\n\nFor example, this flow uses the `DaskTaskRunner` configured to access an existing Dask cluster at `http://my-dask-cluster`.\n\n```python\nfrom prefect import flow\nfrom prefect_dask.task_runners import DaskTaskRunner\n\n@flow(task_runner=DaskTaskRunner(address=\"http://my-dask-cluster\"))\ndef my_flow():\n    ...\n```\n\n`DaskTaskRunner` accepts the following optional parameters:\n\n| Parameter | Description |\n| --- | --- |\n| address | Address of a currently running Dask scheduler. |\n| cluster_class | The cluster class to use when creating a temporary Dask cluster. It can be either the full class name (for example, `\"distributed.LocalCluster\"`), or the class itself. |\n| cluster_kwargs | Additional kwargs to pass to the `cluster_class` when creating a temporary Dask cluster. |\n| adapt_kwargs | Additional kwargs to pass to `cluster.adapt` when creating a temporary Dask cluster. Note that adaptive scaling is only enabled if `adapt_kwargs` are provided. |\n| client_kwargs | Additional kwargs to use when creating a [`dask.distributed.Client`](https://distributed.dask.org/en/latest/api.html#client). |\n\n!!! warning \"Multiprocessing safety\"\n    Note that, because the `DaskTaskRunner` uses multiprocessing, calls to flows\n    in scripts must be guarded with `if __name__ == \"__main__\":` or you will encounter \n    warnings and errors.\n\nIf you don't provide the `address` of a Dask scheduler, Prefect creates a temporary local cluster automatically. The number of workers used is based on the number of cores available to your execution environment. The default provides a mix of processes and threads that should work well for most workloads. If you want to specify this explicitly, you can pass values for `n_workers` or `threads_per_worker` to `cluster_kwargs`.\n\n```python\n# Use 4 worker processes, each with 2 threads\nDaskTaskRunner(\n    cluster_kwargs={\"n_workers\": 4, \"threads_per_worker\": 2}\n)\n```\n\n### Distributing Dask collections across workers\n\nIf you use a Dask collection, such as a `dask.DataFrame` or `dask.Bag`, to distribute the work across workers and achieve parallel computations, use one of the context managers `get_dask_client` or `get_async_dask_client`:\n\n```python\nimport dask\nfrom prefect import flow, task\nfrom prefect_dask import DaskTaskRunner, get_dask_client\n\n@task\ndef compute_task():\n    with get_dask_client() as client:\n        df = dask.datasets.timeseries(\"2000\", \"2001\", partition_freq=\"4w\")\n        summary_df = df.describe().compute()\n    return summary_df\n\n@flow(task_runner=DaskTaskRunner())\ndef dask_flow():\n    prefect_future = compute_task.submit()\n    return prefect_future.result()\n\ndask_flow()\n```\n\nThe context managers can be used the same way in both `flow` run contexts and `task` run contexts.\n\n!!! warning \"Resolving futures in sync client\"\n    Note, by default, `dask_collection.compute()` returns concrete values while `client.compute(dask_collection)` returns Dask Futures. Therefore, if you call `client.compute`, you must resolve all futures before exiting out of the context manager by either:\n    \n    1. setting `sync=True`\n    ```python\n    with get_dask_client() as client:\n        df = dask.datasets.timeseries(\"2000\", \"2001\", partition_freq=\"4w\")\n        summary_df = client.compute(df.describe(), sync=True)\n    ```\n\n    2. calling `result()`\n    ```python\n    with get_dask_client() as client:\n        df = dask.datasets.timeseries(\"2000\", \"2001\", partition_freq=\"4w\")\n        summary_df = client.compute(df.describe()).result()\n    ```\n    For more information, visit the docs on [Waiting on Futures](https://docs.dask.org/en/stable/futures.html#waiting-on-futures).\n\nThere is also an equivalent context manager for asynchronous tasks and flows: `get_async_dask_client`.\n\n```python\nimport asyncio\n\nimport dask\nfrom prefect import flow, task\nfrom prefect_dask import DaskTaskRunner, get_async_dask_client\n\n@task\nasync def compute_task():\n    async with get_async_dask_client() as client:\n        df = dask.datasets.timeseries(\"2000\", \"2001\", partition_freq=\"4w\")\n        summary_df = await client.compute(df.describe())\n    return summary_df\n\n@flow(task_runner=DaskTaskRunner())\nasync def dask_flow():\n    prefect_future = await compute_task.submit()\n    return await prefect_future.result()\n\nasyncio.run(dask_flow())\n```\n!!! warning \"Resolving futures in async client\"\n    With the async client, you do not need to set `sync=True` or call `result()`.\n\n    However you must `await client.compute(dask_collection)` before exiting out of the context manager.\n\n    To invoke `compute` from the Dask collection, set `sync=False` and call `result()` before exiting out of the context manager: `await dask_collection.compute(sync=False)`.\n\n### Using a temporary cluster\n\nThe `DaskTaskRunner` is capable of creating a temporary cluster using any of [Dask's cluster-manager options](https://docs.dask.org/en/latest/setup.html). This can be useful when you want each flow run to have its own Dask cluster, allowing for per-flow adaptive scaling.\n\nTo configure, you need to provide a `cluster_class`. This can be:\n\n- A string specifying the import path to the cluster class (for example, `\"dask_cloudprovider.aws.FargateCluster\"`)\n- The cluster class itself\n- A function for creating a custom cluster\n\nYou can also configure `cluster_kwargs`, which takes a dictionary of keyword arguments to pass to `cluster_class` when starting the flow run.\n\nFor example, to configure a flow to use a temporary `dask_cloudprovider.aws.FargateCluster` with 4 workers running with an image named `my-prefect-image`:\n\n```python\nDaskTaskRunner(\n    cluster_class=\"dask_cloudprovider.aws.FargateCluster\",\n    cluster_kwargs={\"n_workers\": 4, \"image\": \"my-prefect-image\"},\n)\n```\n\n### Connecting to an existing cluster\n\nMultiple Prefect flow runs can all use the same existing Dask cluster. You might manage a single long-running Dask cluster (maybe using the Dask [Helm Chart](https://docs.dask.org/en/latest/setup/kubernetes-helm.html)) and configure flows to connect to it during execution. This has a few downsides when compared to using a temporary cluster (as described above):\n\n- All workers in the cluster must have dependencies installed for all flows you intend to run.\n- Multiple flow runs may compete for resources. Dask tries to do a good job sharing resources between tasks, but you may still run into issues.\n\nThat said, you may prefer managing a single long-running cluster. \n\nTo configure a `DaskTaskRunner` to connect to an existing cluster, pass in the address of the scheduler to the `address` argument:\n\n```python\n# Connect to an existing cluster running at a specified address\nDaskTaskRunner(address=\"tcp://...\")\n```\n\n### Adaptive scaling\n\nOne nice feature of using a `DaskTaskRunner` is the ability to scale adaptively to the workload. Instead of specifying `n_workers` as a fixed number, this lets you specify a minimum and maximum number of workers to use, and the dask cluster will scale up and down as needed.\n\nTo do this, you can pass `adapt_kwargs` to `DaskTaskRunner`. This takes the following fields:\n\n- `maximum` (`int` or `None`, optional): the maximum number of workers to scale to. Set to `None` for no maximum.\n- `minimum` (`int` or `None`, optional): the minimum number of workers to scale to. Set to `None` for no minimum.\n\nFor example, here we configure a flow to run on a `FargateCluster` scaling up to at most 10 workers.\n\n```python\nDaskTaskRunner(\n    cluster_class=\"dask_cloudprovider.aws.FargateCluster\",\n    adapt_kwargs={\"maximum\": 10}\n)\n```\n\n### Dask annotations\n\nDask annotations can be used to further control the behavior of tasks.\n\nFor example, we can set the [priority](http://distributed.dask.org/en/stable/priority.html) of tasks in the Dask scheduler:\n\n```python\nimport dask\nfrom prefect import flow, task\nfrom prefect_dask.task_runners import DaskTaskRunner\n\n@task\ndef show(x):\n    print(x)\n\n\n@flow(task_runner=DaskTaskRunner())\ndef my_flow():\n    with dask.annotate(priority=-10):\n        future = show(1)  # low priority task\n\n    with dask.annotate(priority=10):\n        future = show(2)  # high priority task\n```\n\nAnother common use case is [resource](http://distributed.dask.org/en/stable/resources.html) annotations:\n\n```python\nimport dask\nfrom prefect import flow, task\nfrom prefect_dask.task_runners import DaskTaskRunner\n\n@task\ndef show(x):\n    print(x)\n\n# Create a `LocalCluster` with some resource annotations\n# Annotations are abstract in dask and not inferred from your system.\n# Here, we claim that our system has 1 GPU and 1 process available per worker\n@flow(\n    task_runner=DaskTaskRunner(\n        cluster_kwargs={\"n_workers\": 1, \"resources\": {\"GPU\": 1, \"process\": 1}}\n    )\n)\ndef my_flow():\n    with dask.annotate(resources={'GPU': 1}):\n        future = show(0)  # this task requires 1 GPU resource on a worker\n\n    with dask.annotate(resources={'process': 1}):\n        # These tasks each require 1 process on a worker; because we've \n        # specified that our cluster has 1 process per worker and 1 worker,\n        # these tasks will run sequentially\n        future = show(1)\n        future = show(2)\n        future = show(3)\n```\n\n## Resources\n\nIf you encounter any bugs while using `prefect-dask`, feel free to open an issue in the [prefect-dask](https://github.com/PrefectHQ/prefect-dask) repository.\n\nIf you have any questions or issues while using `prefect-dask`, you can find help in either the [Prefect Discourse forum](https://discourse.prefect.io/) or the [Prefect Slack community](https://prefect.io/slack).\n\nFeel free to \u2b50\ufe0f or watch [`prefect-dask`](https://github.com/PrefectHQ/prefect-dask) for updates too!\n\n## Development\n\nIf you'd like to install a version of `prefect-dask` for development, clone the repository and perform an editable install with `pip`:\n\n```bash\ngit clone https://github.com/PrefectHQ/prefect-dask.git\n\ncd prefect-dask/\n\npip install -e \".[dev]\"\n\n# Install linting pre-commit hooks\npre-commit install\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/PrefectHQ/prefect-dask",
            "keywords": "prefect",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "prefect-dask",
            "package_url": "https://pypi.org/project/prefect-dask/",
            "platform": null,
            "project_url": "https://pypi.org/project/prefect-dask/",
            "project_urls": {
                "Homepage": "https://github.com/PrefectHQ/prefect-dask"
            },
            "release_url": "https://pypi.org/project/prefect-dask/0.2.1/",
            "requires_dist": [
                "prefect (>=2.3.0)",
                "distributed (==2022.2.0) ; python_version < \"3.8\"",
                "distributed (>=2022.5.0) ; python_version >= \"3.8\"",
                "pytest ; extra == 'dev'",
                "black ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "flaky ; extra == 'dev'",
                "mypy ; extra == 'dev'",
                "mkdocs ; extra == 'dev'",
                "mkdocs-material ; extra == 'dev'",
                "mkdocstrings[python] ; extra == 'dev'",
                "isort ; extra == 'dev'",
                "pre-commit ; extra == 'dev'",
                "pytest-asyncio ; extra == 'dev'",
                "mkdocs-gen-files ; extra == 'dev'",
                "interrogate ; extra == 'dev'",
                "coverage ; extra == 'dev'",
                "pillow ; extra == 'dev'",
                "mock ; (python_version < \"3.8\") and extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Prefect integrations with the Dask execution framework.",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15294043,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4d1d362b23d3a78f68e328582c67d6d7",
                    "sha256": "185ab41e5d0e0c2962a78bdafa3c4e77b8b7239f5e9239efb6be3ab86bd2f620"
                },
                "downloads": -1,
                "filename": "prefect_dask-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4d1d362b23d3a78f68e328582c67d6d7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 16045,
                "upload_time": "2022-10-03T19:59:47",
                "upload_time_iso_8601": "2022-10-03T19:59:47.335917Z",
                "url": "https://files.pythonhosted.org/packages/7c/02/46ab70d17bee60d9814cc0032413ddcbc0db2c4e266f7148ab34ba081fef/prefect_dask-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b20f816d204b00c8f85ba769600a71ba",
                    "sha256": "f588647fed5a0f450500d9cda9aa82f1367c26da14ffc5b1d41e4494ae0c3f64"
                },
                "downloads": -1,
                "filename": "prefect-dask-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b20f816d204b00c8f85ba769600a71ba",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 35591,
                "upload_time": "2022-10-03T19:59:48",
                "upload_time_iso_8601": "2022-10-03T19:59:48.689314Z",
                "url": "https://files.pythonhosted.org/packages/e0/7f/9ca58b2bc68d1dd61241d070676687d2af3776fd04b2444f3cb307501abf/prefect-dask-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}