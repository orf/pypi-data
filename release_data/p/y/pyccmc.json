{
    "0.0.1a0": {
        "info": {
            "author": "tigabeatz",
            "author_email": "tigabeatz@cccwi.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# ccmclient\n\na command line client for cc mixter that makes use of the cc mixter api. \n\n>ccMixter is a produsage community music site that promotes remix culture and makes >samples, remixes, and a cappella \ntracks licensed under Creative Commons available for >download and re-use in creative works. \nVisitors are able to listen to, sample, mash-up, or >interact with music in a variety \nof ways including the download and use of tracks and >samples in their own remixes.\n>[https://en.wikipedia.org/wiki/CcMixter](wikipedia)\n\ndownloads the uploads from given [cc mixter](http://ccmixter.org/) artist name or selection criterias. \n\nbased on given filter arguments (which is in the simplest form might be just a username) user generated content \ngets downloaded (files like .mp3, .flac, .mid) and packaged uploads (for example .zip files) get extracted. already \ndownloaded files will not get downloaded again.\n\nafter download, just drag and drop files into your DAW without the need to manually search and select on the website, \nthen download and extract the artists content.\n\n\n## Install and use on win, osx, linux \n\n### Python\n\nyou need [python3](https://www.python.org/downloads/) and [pip](https://pip.pypa.io/en/stable/installing/) installed. \n\nthen just clone or download this repository and install the needed python packages from requirements.txt `pip3 install -r requirements.txt`\n\nor simply use pip\n\n        python -m pip install pyccmc\n\n### Binaries\n\nBinary, executable files can be found at [tigabeatz.net](https://tigabeatz.net)\n\n## Use\n\n### simple guided downloader\n\nopen a terminal and execute\n\n    ccmclient\n\nthe script will ask for \n\n- to run in secret mixter or interactive query mode \n  \n- if in secret mixter mode, you will be asked for\n  - the secret mixters artist name\n  - a limit to restrict the number of downloads (default = 10)\n\n- if in itq mode, you will be asked for \n  -  to fill the ccmixter api parameters (a previously selected list of options). \n     each option, or parameter, has a short description.\n  - and after a preview of what gets downloaded, you will be asked to start the download \n\nalternatively, execute the ccmclient.exe / binary with command line parameters like \n`ccmclient --artist tigabeatz --limit 0` or `ccmcclient.exe --help` \n\nusage examples:\n\n- download everything uploaded by artist `ccmclient --artist tigabeatz --limit 0`\n- download based on a custom query `ccmclient --query \"{\\\"user\\\":\\\"tigabeatz\\\"}\"`\n- simply use the guided downloader with `ccmclient.py` (see \"simple guided downloader\" )\n\nby default, the files are written to a directory structure \nfrom where you start the tool like `<request>\\<artist>\\<upload name>\\<files>`\n\n#### command line options\n\n| -h, --help | show help and exit                                                                                                                 |\n| ---------- |------------------------------------------------------------------------------------------------------------------------------------|\n| --artist   | an artists name                                                                                                                    |\n| --limit    | maximum allowed results                                                                                                            |\n| --dryrun   | set to True if you do not want to download. prints out metadata of the query                                                       |\n| --itq      | interactive query builder, download by manually search                                                                             |\n| --proxy    | http(s):\\\\\\\\url:port                                                                                                               |\n| --query    | json with cc mixter api   parameters        {\\\\\"user\\\\\":\\\\\"tigabeatz\\\\\";\\\\\"limit\\\\\":\\\\\"1\\\\\"}      (you must escape \" with \\\\\")     |\n| --folder   | where to store your requests data, default to this scripts folder                                                                  |\n| --logfile  | logfile location, default to this scripts folder                                                                                   |\n| --index    | file to store history of downloaded files, defaults to this scripts folder                                                         |\n| --test | check if this tool is working                                                                                                      |\n\n\n## further reading\n\n- [ccmixter thread](http://ccmixter.org/thread/4155)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://tigabeatz.net",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyccmc",
            "package_url": "https://pypi.org/project/pyccmc/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyccmc/",
            "project_urls": {
                "Homepage": "https://tigabeatz.net"
            },
            "release_url": "https://pypi.org/project/pyccmc/0.0.1a0/",
            "requires_dist": [
                "requests",
                "tqdm",
                "colorama"
            ],
            "requires_python": ">=3.10",
            "summary": "Download from CC Mixter",
            "version": "0.0.1a0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15081593,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e885936e89c30e1676ed24f7af784eb",
                    "sha256": "2763836588ae850b3ade445b6f669cc4c9e074d787078970c494419835ad0692"
                },
                "downloads": -1,
                "filename": "pyccmc-0.0.1a0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9e885936e89c30e1676ed24f7af784eb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 24916,
                "upload_time": "2022-09-13T16:45:53",
                "upload_time_iso_8601": "2022-09-13T16:45:53.844877Z",
                "url": "https://files.pythonhosted.org/packages/f7/d3/90e4363ab9922867dc2e8770bbef5d6f3806c83b9bd9ae67579d0804d58a/pyccmc-0.0.1a0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cd98354218eae5b37a5c6e5cfe3f7caa",
                    "sha256": "b2c1ed7429ed4b31e4f1f84b10cb10e402d7bea874921d87277a0068dc3146fb"
                },
                "downloads": -1,
                "filename": "pyccmc-0.0.1a0.tar.gz",
                "has_sig": false,
                "md5_digest": "cd98354218eae5b37a5c6e5cfe3f7caa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 25176,
                "upload_time": "2022-09-13T16:45:56",
                "upload_time_iso_8601": "2022-09-13T16:45:56.363330Z",
                "url": "https://files.pythonhosted.org/packages/15/c0/0651acfda99367371dc629e058499104f13e827e80b490b7a28d9aac700d/pyccmc-0.0.1a0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}