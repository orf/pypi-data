{
    "1.1": {
        "info": {
            "author": "Jonathan Shimon",
            "author_email": "jonatanshimon@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jonatanSh/py-elf-structs",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "py-elf-structs",
            "package_url": "https://pypi.org/project/py-elf-structs/",
            "platform": null,
            "project_url": "https://pypi.org/project/py-elf-structs/",
            "project_urls": {
                "Homepage": "https://github.com/jonatanSh/py-elf-structs"
            },
            "release_url": "https://pypi.org/project/py-elf-structs/1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python package to extract struct and type information from dwarf and build python cstructs",
            "version": "1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13600769,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c878f0a5c5d7c8a001397bb114e322c0",
                    "sha256": "30bcf55cabc107db49c65b7f5a0bf9206c6cfba870fc1423413e785ac85a7f3c"
                },
                "downloads": -1,
                "filename": "py_elf_structs-1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c878f0a5c5d7c8a001397bb114e322c0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5869,
                "upload_time": "2022-04-22T18:06:20",
                "upload_time_iso_8601": "2022-04-22T18:06:20.496966Z",
                "url": "https://files.pythonhosted.org/packages/a8/2a/95cbf882aad58ec097edcd30902d66bd3d4935d8e025a4100d6fd4c68196/py_elf_structs-1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2": {
        "info": {
            "author": "Jonathan Shimon",
            "author_email": "jonatanshimon@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "Py-elf-structs\n==============\n\nThis repository parse dwarf information from elfs and generate python\nstructs accordingly\n\nUsage\n=====\n\nFirst lets write our elf:\n\n.. code:: c\n\n   struct command {\n       char command[64];\n   };\n\n   struct command_with_args {\n       char arg1[128];\n       struct command command;\n   };\n   /*\n       Ignore this part it is only done for disabling optimization\n       Optimization will omit the structs if they are not being used \n       -O0 omits this structs from the output for some reason\n   */\n   void main() {\n       struct command a = {};\n       struct command_with_args b = {};\n       printf(\"a = %p, b=%p\\n\", a, b);\n   }\n\nWhile compiling we must generate type information:\n\n.. code:: bash\n\n   gcc main.c -dwarf-2 -ggdb -o a.out\n\nThen generate python structs\n\n.. code:: python\n\n   python -m py_elf_structs a.out /tmp/structs.json\n\nFinally, load the structs and interact with them\n\n.. code:: python\n\n   from py_elf_structs import load_structs\n\n   structs = load_structs(\"/tmp/structs.json\")\n\n   command_with_args = structs.command_with_args(arg=\"/tmp\", \n                             command=structs.command(\n                                 command=\"ls -la\"\n                             ))\n\n   # You can pack this struct\n   command_with_args.pack()\n\n   # Unpack is also supported\n   command_with_args = structs.command_with_args.unpack(\"<stream>\")\n\nYou can also use a python api to generate the structs.json file:\n\n.. code:: python\n\n   from py_elf_structs import generate_structs\n   src_file=\"a.out\"\n   output_file=\"/tmp/structs.json\"\n   verbose=True\n   generate_structs(src_file=src_file,\n                    output_file=output_file,\n                    is_verbose=verbose)\n\nProtected attributes\n====================\n\nAttribute with the name size is used by the parser therefor if a struct\ncontain a variable named size it is replaced by \\_size eg ..\n\n.. code:: c\n\n   struct my_struct {\n       int size;\n   }\n\npython api:\n\n.. code:: python\n\n   from py_elf_structs import load_structs\n   structs = load_structs(\"/tmp/structs.json\")\n   structs.my_struct(_size=2)\n\nStruct alignment\n================\n\nStruct maybe aligned to sizeof(ptr) therefore we should support this eg\n\u2026\n\n.. code:: c\n\n   struct command {\n       unsigned int address;\n       unsigned short value;\n   };\n\nThe resulting cstruct is:\n\n.. code:: c\n\n   struct command {\n       unsigned int address;\n       unsigned short value[2];\n   };\n\nBecause this struct is aligned to 4 it is handled by the api and you can\ncreate this struct anyway:\n\n.. code:: python\n\n   from py_elf_structs import load_structs\n\n   structs = load_structs(\"/tmp/structs.json\")\n\n   structs.command(address=1, value=2)\n   # This will create the struct and fix value to be an array",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/jonatanSh/py-elf-structs",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "py-elf-structs",
            "package_url": "https://pypi.org/project/py-elf-structs/",
            "platform": null,
            "project_url": "https://pypi.org/project/py-elf-structs/",
            "project_urls": {
                "Homepage": "https://github.com/jonatanSh/py-elf-structs"
            },
            "release_url": "https://pypi.org/project/py-elf-structs/1.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python package to extract struct and type information from dwarf and build python cstructs",
            "version": "1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13600769,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3b41ffac7cd914d2f104b49c8a9a21cb",
                    "sha256": "062775fcc398dd8cbb1b9652a64696ac3a899c95402b4150304791aacdf022f7"
                },
                "downloads": -1,
                "filename": "py_elf_structs-1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "3b41ffac7cd914d2f104b49c8a9a21cb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6593,
                "upload_time": "2022-04-23T15:01:02",
                "upload_time_iso_8601": "2022-04-23T15:01:02.861179Z",
                "url": "https://files.pythonhosted.org/packages/b2/c2/10eadca10ea37ea3ec5127eb9c280257197fa223c1542dd07c6b894cff16/py_elf_structs-1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}