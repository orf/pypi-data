{
    "1.0.0": {
        "info": {
            "author": "Connor Sherwood Maynes",
            "author_email": "connormaynes@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cancel-scope",
            "package_url": "https://pypi.org/project/cancel-scope/",
            "platform": null,
            "project_url": "https://pypi.org/project/cancel-scope/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/cancel-scope/1.0.0/",
            "requires_dist": null,
            "requires_python": "<4,>=3.6",
            "summary": "Async/Sync cancellation scope context manager",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15416136,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8a0ff63c2898ca670c7eacd1a5ed35aa",
                    "sha256": "e896ff0fbcdb1942e745abe2f24cee382915919adf6155bc17978f380d4eff97"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8a0ff63c2898ca670c7eacd1a5ed35aa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": "<4,>=3.6",
                "size": 3982,
                "upload_time": "2022-10-07T00:20:11",
                "upload_time_iso_8601": "2022-10-07T00:20:11.430673Z",
                "url": "https://files.pythonhosted.org/packages/b4/16/9c58a49e4f387f681084882240ddaff0972a5d3470a9b6a3f86600557edf/cancel_scope-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e2fc40f725e354b90fc4dd79a3473fd9",
                    "sha256": "96a93d666b0c89425d4cb1003ea9c70ec09904b7dee72862ff62014d415e1595"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e2fc40f725e354b90fc4dd79a3473fd9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "<4,>=3.6",
                "size": 6013,
                "upload_time": "2022-10-07T00:20:13",
                "upload_time_iso_8601": "2022-10-07T00:20:13.483451Z",
                "url": "https://files.pythonhosted.org/packages/e0/0d/301413b214bda5dc8ce47fc5343fd693729f626c0f068370f8c836b0ab5e/cancel_scope-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "Connor Sherwood Maynes",
            "author_email": "connormaynes@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ConnorSMaynes/cancel_scope",
            "keywords": "scope,cancel",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cancel-scope",
            "package_url": "https://pypi.org/project/cancel-scope/",
            "platform": null,
            "project_url": "https://pypi.org/project/cancel-scope/",
            "project_urls": {
                "Homepage": "https://github.com/ConnorSMaynes/cancel_scope"
            },
            "release_url": "https://pypi.org/project/cancel-scope/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Async/Sync cancellation scope context manager",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15416136,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d6c5fb585cf562e845f2f2f5ae093834",
                    "sha256": "b1afa837d635b7dcc4b4031281f814a228a79671aa7ffc2a385042cd4d7cdbd2"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d6c5fb585cf562e845f2f2f5ae093834",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 6331,
                "upload_time": "2022-10-07T00:23:16",
                "upload_time_iso_8601": "2022-10-07T00:23:16.298363Z",
                "url": "https://files.pythonhosted.org/packages/61/87/1f019b22659d4736e65738482886475476ddebbfa4fdb0e8dd5d0d4807be/cancel_scope-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2ab0d7cc3765186f3148f02c7c0cc4be",
                    "sha256": "b101961abc602cbfb37ed3941b0e47846e17afa0112528298dc1014fc2953eac"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2ab0d7cc3765186f3148f02c7c0cc4be",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 7637,
                "upload_time": "2022-10-07T00:23:18",
                "upload_time_iso_8601": "2022-10-07T00:23:18.026207Z",
                "url": "https://files.pythonhosted.org/packages/27/8c/15cf16d3a23df54bb25fabe0756336d8dd006ad225f452f8db84cfa92b71/cancel_scope-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "Connor Sherwood Maynes",
            "author_email": "connormaynes@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ConnorSMaynes/cancel_scope",
            "keywords": "scope,cancel",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cancel-scope",
            "package_url": "https://pypi.org/project/cancel-scope/",
            "platform": null,
            "project_url": "https://pypi.org/project/cancel-scope/",
            "project_urls": {
                "Homepage": "https://github.com/ConnorSMaynes/cancel_scope"
            },
            "release_url": "https://pypi.org/project/cancel-scope/1.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Async/Sync cancellation scope context manager",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15416136,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d83b70857d9c041e87b9832c2d47f31b",
                    "sha256": "12e230226505d5556d4ed099f2139000bd4a48620a42916d10735dfa38b2593a"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d83b70857d9c041e87b9832c2d47f31b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 6434,
                "upload_time": "2022-10-08T23:06:36",
                "upload_time_iso_8601": "2022-10-08T23:06:36.991332Z",
                "url": "https://files.pythonhosted.org/packages/f6/e5/c77176d254bd87772b676729a2b76ec58d445c289b0572418967d904b3c3/cancel_scope-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7288b6827c03dd8826bbf49e1aa7258e",
                    "sha256": "97299e5a1ce1f8c189e1ae51b281bc636d5b0e9bbf7dfd970f31ed4661665424"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "7288b6827c03dd8826bbf49e1aa7258e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 7766,
                "upload_time": "2022-10-08T23:06:38",
                "upload_time_iso_8601": "2022-10-08T23:06:38.591820Z",
                "url": "https://files.pythonhosted.org/packages/02/02/458688dcf188491bc26d0f82c9396eed60303d765fd4269d0a4bc80ab977/cancel_scope-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.3": {
        "info": {
            "author": "Connor Sherwood Maynes",
            "author_email": "connormaynes@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# cancel_scope\nAsync/Sync cancellation scope context manager\n\n## Preamble\n\nThere are often times when you have nested code and a timeout can be used in multiple calls at any layer. To keep to an overall timeout for the entire operation you might pass along the start time of the operation and then recalculate the remaining timeout to use for other calls. This can quickly grow tedious.\n\nThis package seeks to solve this problem and others related to cancellation with the following features:\n- decide exactly when to `check()` the `CancelScope`, so `CancelledError` does not show up in awkward points in the code, making graceful/clean shutdown easier\n- default to applying cancellation signals to only the descendants created in the context of the `CancelScope` being cancelled \n- optionally bubble up & out cancellation signals from children up to parents, making it easy to cancel everything in context if any operation fails\n- optionally shield a `CancelScope` and its descendants from cancellation by parents, ensuring a critical child operation is not interrupted except by its own cancellation or timeout signals\n- works with sync/async code, so it can be used everywhere\n\nDocumentation consists of what you see here and the docs in the code.\n\n## Table of Contents\n<!-- TOC -->\n\n- [cancel_scope](#cancel_scope)\n\t- [Preamble](#preamble)\n\t- [Table of Contents](#table-of-contents)\n\t- [Inspiration](#inspiration)\n\t- [Technologies](#technologies)\n\t- [Warnings](#warnings)\n\t- [Examples](#examples)\n\t\t- [Example 1: Timeout Cancellation at Parent Level](#example-1-timeout-cancellation-at-parent-level)\n\t\t\t- [Code](#code)\n\t\t\t- [Output](#output)\n\t\t- [Example 2: Manual Cancellation at Parent Level](#example-2-manual-cancellation-at-parent-level)\n\t\t\t- [Code](#code)\n\t\t\t- [Output](#output)\n\t\t- [Example 3: Bubble up & out a cancellation from a child to all descendants of the parent](#example-3-bubble-up--out-a-cancellation-from-a-child-to-all-descendants-of-the-parent)\n\t\t\t- [Code](#code)\n\t\t\t- [Output](#output)\n\t\t- [Example 4: Combining CancelScope & AsyncCancelScope](#example-4-combining-cancelscope--asynccancelscope)\n\t\t\t- [Code](#code)\n\t\t\t- [Output](#output)\n\n<!-- /TOC -->\n\n## Inspiration\n- [python trio](https://trio.readthedocs.io/en/stable/reference-core.html#trio.CancelScope)\n- [golang context](https://pkg.go.dev/context)\n\n## Technologies\n- Python >=3.6\n\n## Warnings\n- This package uses `contextvars`, so all `contextvars`-aware concurrency libraries can use this package. If a concurrency package is not aware of `contextvars`, then new threads/tasks may create `CancelScope` instances outside the parent `CancelScope` and cancellations wont get applied to those children.\n- There is going to be a small performance hit when async/sync are mixed together because async calling sync must push the call to a thread and sync calling async must push off to a running event loop. This seems to be unavoidable. If someone has an alternative, I am all ears.\n\n## Examples\n### Example 1: Timeout Cancellation at Parent Level\nThe first example demonstrates how the timeout of a parent affects its children both in the unshielded and shielded cases.\n\n#### Code\n```python\nimport time\n\nfrom cancel_scope import CancelScope\n\n\ndef work1():\n\twith CancelScope(timeout=3, exc=Exception('work1 cancelled!')) as cs:\n\t\ttime.sleep(1)\n\t\tcs.check()\n\t\ttime.sleep(1)\n\t\tcs.check()\n\n\ndef work2():\n\twith CancelScope(exc=Exception('work2 cancelled!'), shield=True) as cs:\n\t\ttime.sleep(1)\n\t\tcs.check()\n\t\ttime.sleep(1)\n\t\tcs.check()\n\n\n# example using cancel scopes in child operations with one of them shielded\n# and the timeout cancellation getting skipped\ntry:\n\tstarted = time.time()\n\twith CancelScope(timeout=3) as cs:\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\twork1()\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\tprint(f'elapsed: {time.time() - started}')\n\t\twork2()\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\tprint(f'elapsed: {time.time() - started}')\n\t\twork1()\nexcept Exception as exc:\n\tprint(exc)\n```\n\n#### Output\n```text\ntimeout: 3.0\ntimeout: 0.978079080581665\nelapsed: 2.021920919418335\ntimeout: 0\nelapsed: 4.038066625595093\nwork1 cancelled!\n```\n\n### Example 2: Manual Cancellation at Parent Level\nThis example demonstrates how a manual cancellation from the parent affects the shielded and unshielded children.\n\n#### Code\n```python\nimport time\nfrom concurrent.futures import CancelledError\n\nfrom cancel_scope import CancelScope\n\n\ndef work3():\n\twith CancelScope(exc=CancelledError('work3 cancelled!')) as cs:\n\t\ttime.sleep(1)\n\t\tcs.check()\n\t\ttime.sleep(1)\n\t\tcs.check()\n\n\ndef work4():\n\twith CancelScope(exc=CancelledError('work4 cancelled!'), shield=True) as cs:\n\t\ttime.sleep(1)\n\t\tcs.check()\n\t\ttime.sleep(1)\n\t\tcs.check()\n\n\n# example of parent cancelling child operations manually\ntry:\n\tstarted = time.time()\n\twith CancelScope(exc=CancelledError('Parent scope cancelled!')) as cs:\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\twork3()\n\t\tcs.cancel()\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\tprint(f'elapsed: {time.time() - started}')\n\t\twork4()\n\t\tprint(f'timeout: {cs.timeout()}')\n\t\tprint(f'elapsed: {time.time() - started}')\n\t\twork3()\nexcept Exception as exc:\n\tprint(exc)\n\n```\n\n#### Output\n```text\ntimeout: inf\ntimeout: 0\nelapsed: 2.0253379344940186\ntimeout: 0\nelapsed: 4.046663999557495\nwork3 cancelled!\n```\n\n### Example 3: Bubble up & out a cancellation from a child to all descendants of the parent\nThis demonstrates how a cancellation of one child operation can trigger the cancellation of all descendents under a common parent, making it easier to cancel everything when one thing fails.\n\n#### Code\n```python\nimport asyncio\n\nfrom cancel_scope import AsyncCancelScope\n\n\nasync def work5():\n\tasync with AsyncCancelScope(timeout=3, exc=asyncio.CancelledError('work5 cancelled!')) as pcs:\n\t\tprint(f'work5-parent cancelled={pcs.cancelled}')\n\t\tasync with AsyncCancelScope(timeout=3, exc=asyncio.CancelledError('work5 cancelled!')) as ccs:\n\t\t\tprint(f'work5-child cancelled={ccs.cancelled}')\n\t\t\tprint(f'cancel work5-child')\n\t\t\tawait ccs.cancel()\n\t\t\tprint(f'work5-child cancelled={ccs.cancelled}')\n\t\tprint(f'work5-parent cancelled={pcs.cancelled}')\n\n\nasync def work6():\n\tasync with AsyncCancelScope(exc=asyncio.CancelledError('work6 cancelled!')) as cs:\n\t\tprint(f'work6 cancelled={cs.cancelled}')\n\t\tawait asyncio.sleep(0)\n\t\tprint(f'work6 cancelled={cs.cancelled}')\n\n\nasync def main():\n\ttry:\n\t\tasync with AsyncCancelScope(bubble=True) as cs:\n\t\t\ttasks = []\n\t\t\ttasks.append(asyncio.create_task(work6()))\n\t\t\ttasks.append(asyncio.create_task(work5()))\n\t\t\tawait asyncio.wait(tasks)\n\t\t\tprint(f'main cancelled={cs.cancelled}')\n\texcept Exception as exc:\n\t\tprint(exc)\n\n\nasyncio.run(main())\n\n```\n\n#### Output\n```text\nwork6 cancelled=False\nwork5-parent cancelled=False\nwork5-child cancelled=False \ncancel work5-child\nwork5-child cancelled=True  \nwork5-parent cancelled=True \nwork6 cancelled=True        \nmain cancelled=True\n```\n\n### Example 4: Combining CancelScope & AsyncCancelScope\nthe synchronous/thread code is able to bubble up a cancellation to the async code\n\n#### Code\n```python\nimport asyncio\nimport time\n\nfrom cancel_scope import AsyncCancelScope, CancelScope\n\n\ndef sync_work1():\n\twith CancelScope(exc=asyncio.CancelledError('sync_work1 cancelled!')) as cs:\n\t\tprint('sync_work1 started')\n\t\ttime.sleep(0.1)\n\t\tcs.cancel()\n\t\tprint('sync_work1 cancelled manually')\n\n\ndef sync_work2():\n\twith CancelScope(exc=asyncio.CancelledError('sync_work2 cancelled!')) as cs:\n\t\tprint('sync_work2 started')\n\t\ttime.sleep(0.3)\n\t\tprint(f'sync_work2 cancelled={cs.cancelled}')\n\n\nasync def async_work():\n\ttry:\n\t\tasync with AsyncCancelScope(exc=asyncio.CancelledError('async_work cancelled!'), bubble=True) as cs:\n\t\t\tprint('async_work started')\n\t\t\tawait asyncio.create_task(asyncio.sleep(0))\n\t\t\tawait asyncio.gather(asyncio.to_thread(sync_work1), asyncio.to_thread(sync_work2))\n\t\t\tawait cs.check()\n\texcept asyncio.CancelledError as exc:\n\t\tprint(exc)\n\n\nasyncio.run(async_work())\n\n```\n\n#### Output\n```text\nasync_work started\nsync_work1 started\nsync_work2 started\nsync_work1 cancelled manually\nsync_work2 cancelled=True\nasync_work cancelled!\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ConnorSMaynes/cancel_scope",
            "keywords": "scope,cancel",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cancel-scope",
            "package_url": "https://pypi.org/project/cancel-scope/",
            "platform": null,
            "project_url": "https://pypi.org/project/cancel-scope/",
            "project_urls": {
                "Homepage": "https://github.com/ConnorSMaynes/cancel_scope"
            },
            "release_url": "https://pypi.org/project/cancel-scope/1.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Async/Sync cancellation scope context manager",
            "version": "1.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15416136,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca6057a85b60f4de2f5bb731d61f407a",
                    "sha256": "4dd86bb364d90b6f70ad8bc467c368a1582acaf3b7c350e2cb2a7d35a5ebf723"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ca6057a85b60f4de2f5bb731d61f407a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 6456,
                "upload_time": "2022-10-14T20:33:32",
                "upload_time_iso_8601": "2022-10-14T20:33:32.271451Z",
                "url": "https://files.pythonhosted.org/packages/f5/57/a77b3236a126408e995e5aacf877f26ed46d63863fec04d5358a735dd908/cancel_scope-1.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc426733dc4b0e78b208ddf9adfbd2db",
                    "sha256": "d10748e8f4e06c7cb05b3a74c03029d64a4395bab01bd948adfcd90d9add6a2f"
                },
                "downloads": -1,
                "filename": "cancel_scope-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "dc426733dc4b0e78b208ddf9adfbd2db",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 7786,
                "upload_time": "2022-10-14T20:33:33",
                "upload_time_iso_8601": "2022-10-14T20:33:33.617630Z",
                "url": "https://files.pythonhosted.org/packages/51/90/8a8ba4c4d14615283c58cb972e574ddd54939e20e93531ff4afe16c1f47f/cancel_scope-1.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}