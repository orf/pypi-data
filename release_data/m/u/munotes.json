{
    "0.1.0": {
        "info": {
            "author": "misya11p",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "# munotes\n\nmusical-notes\n\nThis library is for handling notes and chords in Python.\n\n## Note\n\nNote class. Handling note.\n\n`Note` class is used by entering the note name and octave height at initialization.\n\n```python\nfrom munotes import Note\nnote = Note(\"A\", octave=4)\nprint(note) # A4\n```\n\n`Note` class defines these attributes.\n\n```python\nprint(note.name)   # A\nprint(note.idx)    # 9\nprint(note.octave) # 4\nprint(note.num)    # 69\nprint(note.freq)   # 440.0\n```\n\n- `Note.name: str`  Note name\n- `Note.idx: int`  Index of note name with C as 0\n- `Note.octave: int`  Octave\n- `Note.num: int`  MIDI Note Number\n- `Note.freq: float` Freqency\n\nIt is possible not to define octaves at initialization, in which case all attributes except for `name` and `idx` will be `None`.\n\n\n\nThis class can be transposed with `Note.transpose()`.\n\n```python\nnote.transpose(5)\nprint(note)        # D5\nprint(note.name)   # D\nprint(note.idx)    # 2\nprint(note.octave) # 5\nprint(note.num)    # 74\nprint(note.freq)   # 587.3295358348151\n```\n\n\n\nIf an integer between 0 and 127 is entered at initialization, it is used as the midi note number, and other attributes are initialized based on it.\n\n```python\nnote = Note(40)\nprint(note) # E2\n```\n\n\n\n## Chord\n\nChord class. Handling chord.\n\nThis class is used by entering the chord name at initialization.\n\n```python\nfrom munotes import Chord\nchord = Chord(\"A#m7\")\nprint(chord) # A#m7\n```\n\n`Chord` class defines these attributes.\n\n```python\nprint(chord.name)       # A#m7\nprint(chord.root)       # A#\nprint(chord.type)       # m7\nprint(chord.interval)   # (0, 3, 7, 10)\nprint(chord.notes)      # [Note A#, Note C#, Note F, Note G#]\nprint(chord.note_names) # ['A#', 'C#', 'F', 'G#']\nprint(chord.idx)        # [10, 1, 5, 8]\n```\n\n- `Chord.name: str`  Chord name\n- `Chord.root: munotes.Note`  Root of a chord\n- `Chord.type: str`  Chord Type\n- `Chord.interval: Tuple[int]`  Height of the sound when the root as 0.\n- `Chord.notes: List[munotes.Note]`  List of notes that make up the chord.\n- `Chord.note_names: List[str]`  List of `munotes.Note.name`\n- `Chord.idx: List[int]`   List of `munotes.Note.idx`\n\n\n\nLike Note, This class can be transposed with `Chord.transpose()`.\n\n```python\nchord.transpose(3)\nprint(chord)            # C#m7\nprint(chord.note_names) # ['C#', 'E', 'G#', 'B']\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/misya11p/munotes",
            "keywords": "music note chord",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "munotes",
            "package_url": "https://pypi.org/project/munotes/",
            "platform": null,
            "project_url": "https://pypi.org/project/munotes/",
            "project_urls": {
                "Homepage": "https://github.com/misya11p/munotes"
            },
            "release_url": "https://pypi.org/project/munotes/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Handle musical note and chord in Python",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15742375,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "93f2a5c0cc13981a8ffcf3032bba6a35",
                    "sha256": "de5b01064a849dbed27d7aff3b4af415901254e72d2178bbc96108dcb3c9358a"
                },
                "downloads": -1,
                "filename": "munotes-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "93f2a5c0cc13981a8ffcf3032bba6a35",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 5158,
                "upload_time": "2022-11-12T05:45:49",
                "upload_time_iso_8601": "2022-11-12T05:45:49.086905Z",
                "url": "https://files.pythonhosted.org/packages/1b/ff/a1801ed77c29302077e5ab3f9b9174ef01fd202e744722f6f37e9fabbb77/munotes-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "26999409a797f80c9935f3e3b4a03397",
                    "sha256": "1ff41d100b5b7abbea5b6c44eeaf8e5d6aebd591a3b128496062fe43cc8a6329"
                },
                "downloads": -1,
                "filename": "munotes-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "26999409a797f80c9935f3e3b4a03397",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4538,
                "upload_time": "2022-11-12T05:45:51",
                "upload_time_iso_8601": "2022-11-12T05:45:51.046203Z",
                "url": "https://files.pythonhosted.org/packages/f4/e1/2aa067a90c5a09fb848474c183c90b35497341e2faed893d033bd7bbeb05/munotes-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}