{
    "1.3.2": {
        "info": {
            "author": "Peter Ilfrich",
            "author_email": "das-peter@gmx.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# MongoDB User Stores for Python\n\nPython Store Implementation for Data Sets in MongoDB\n\n1. [Usage](#usage)\n2. [Methods](#methods)\n\n## Usage\n\n```python\nfrom frappymongodataset import DataStore\n\nMONGO_URL = \"mongodb://localhost:27017\"\ndata_set_store = DataStore(mongo_url=MONGO_URL, mongo_db=\"myDatabase\", collection_name=\"dataSets\")\n\nall_data_sets = data_set_store.get_all()\nspecific_data_sets = data_set_store.get_by_assignment(\"primaryKey\")\n```\n\nThe return objects from `get` methods are objects of type `Data`. `Data` provides an attribute `payload`, which returns\nthe type of payload represented by the data set. These types are:\n\n- `DataImagePayload` for images providing attributes `image_path`, `width` and `height`\n- `DataJsonPayload` providing the JSON payload with the attribute `data`\n- `DataTimeSeriesPayload` providing attributes `columns`, `data` (the rows), `date_format`, `index_column` and\n `column_mapping`\n\n**Examples**\n\n```python\nfrom frappymongodataset import DataTypes\n\nimages = data_set_store.get_by_type(DataTypes.IMAGE)\nprint(images[0].payload.path, images[0].payload.dimensions[\"width\"], images[0].payload.dimensions[\"height\"])\n# prints out something like: \"_data/5e846d104e61db060094ed14.jpg 1200 600\"\nnd_array = images[0].to_np_array()  # will only work for IMAGE\n\ntime_series = data_set_store.get_by_type(DataTypes.TIME_SERIES)\nprint(time_series[0].payload.columns)\ndf = time_series[0].to_pd_data_frame()  # will only work for TIME_SERIES\n```\n\n## Methods\n\nBase methods provided by [`pbu`](https://pypi.org/project/pbu/)\n\n- `get_all()` - contrary to other stores, this will not return the payload of the individual data sets, but just the\n meta information\n- `update_meta(data_id, meta_update)` - updating meta information, needs to contain \"label\" and \"assignments\" update\n- `get_by_type(data_type)` - filters by the data sets `type` attribute\n- `get_by_assignment_and_type(assignment_id, data_type)` - filters by the data sets `type` attribute and has to have an\n assignment for the group `assignment_id`\n- `get_by_assignment(assignment_id)` - just checks for an `assignments` to the group provided\n- `get_by_assignment_type(assignment_id, assignment_type)` - not to be confused with `get_by_assignment_and_type` - this\n method will check for the `assignment_id` in the `assignments`, and within that (a list of identifier) assignment for\n the type `assignment_type`\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ilfrich/frappy-py-mongo-dataset-store",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "frappymongodataset",
            "package_url": "https://pypi.org/project/frappymongodataset/",
            "platform": "",
            "project_url": "https://pypi.org/project/frappymongodataset/",
            "project_urls": {
                "Homepage": "https://github.com/ilfrich/frappy-py-mongo-dataset-store"
            },
            "release_url": "https://pypi.org/project/frappymongodataset/1.3.2/",
            "requires_dist": [
                "pbu",
                "numpy",
                "Pillow",
                "pandas"
            ],
            "requires_python": "",
            "summary": "Store Implementation for Data Sets in MongoDB",
            "version": "1.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9410410,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fe41a30e3ad8280c651b0de0c6bb1040",
                    "sha256": "956c16d5b3f621107d3cf810d039ef7f1b1fb6be00ab7ccacb0c9879cf9524e3"
                },
                "downloads": -1,
                "filename": "frappymongodataset-1.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fe41a30e3ad8280c651b0de0c6bb1040",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11048,
                "upload_time": "2021-02-14T00:20:11",
                "upload_time_iso_8601": "2021-02-14T00:20:11.755342Z",
                "url": "https://files.pythonhosted.org/packages/b8/4d/effebe76e38ba354e69d7b8d395a3cb57629009471d88c4289ec85d14822/frappymongodataset-1.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3eb4d6278d73728cedfe79f421c28b31",
                    "sha256": "8cc40dc035084318350c47f51dfd3c737cbfde173ee9414c0d1dca99fc3c81ce"
                },
                "downloads": -1,
                "filename": "frappymongodataset-1.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "3eb4d6278d73728cedfe79f421c28b31",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6799,
                "upload_time": "2021-02-14T00:20:13",
                "upload_time_iso_8601": "2021-02-14T00:20:13.495144Z",
                "url": "https://files.pythonhosted.org/packages/e2/8f/08ce7e78e6a6e23f58d40e875a6836293470b1d7a83fbef91fea8a9762f0/frappymongodataset-1.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}