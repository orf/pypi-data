{
    "0.1.0": {
        "info": {
            "author": "Christopher Trudeau",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Code Generators",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cltrudeau/julienne",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "julienne",
            "package_url": "https://pypi.org/project/julienne/",
            "platform": null,
            "project_url": "https://pypi.org/project/julienne/",
            "project_urls": {
                "Homepage": "https://github.com/cltrudeau/julienne"
            },
            "release_url": "https://pypi.org/project/julienne/0.1.0/",
            "requires_dist": [
                "tomli (==2.0.1)",
                "build (==0.8.0) ; extra == 'dev'",
                "coverage (==6.5.0) ; extra == 'dev'",
                "pudb (==2022.1.2) ; extra == 'dev'",
                "pyflakes (==2.5.0) ; extra == 'dev'",
                "tox (==3.26.0) ; extra == 'dev'",
                "twine (==4.0.1) ; extra == 'dev'",
                "waelstow (==0.10.2) ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "Splits code into copies based on version numbers in comments",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15690302,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d1bb5a1feabad83b3d0c3491aae99e41",
                    "sha256": "fa2fbd2ec29709737ff003e8620c3ddbebac40e1fea7472f0f3217f25a4106e6"
                },
                "downloads": -1,
                "filename": "julienne-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d1bb5a1feabad83b3d0c3491aae99e41",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9007,
                "upload_time": "2022-11-03T15:43:31",
                "upload_time_iso_8601": "2022-11-03T15:43:31.290477Z",
                "url": "https://files.pythonhosted.org/packages/0e/e7/e31efed51272fabb2e85fb95477ffc4a9bfd5d7801a9599e365e1547e2f1/julienne-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8b1a8b26cf0634c93c06558be9fc609d",
                    "sha256": "3a90da015a9cff6f4d9092be8f6986d7d752d5ae40730e9e685e4119bf905851"
                },
                "downloads": -1,
                "filename": "julienne-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8b1a8b26cf0634c93c06558be9fc609d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10522,
                "upload_time": "2022-11-03T15:43:33",
                "upload_time_iso_8601": "2022-11-03T15:43:33.708599Z",
                "url": "https://files.pythonhosted.org/packages/e5/fc/217b4976b92293b9559ae65024bbaf8546cffbe92da23a768c373867ba76/julienne-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Christopher Trudeau",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Code Generators",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "********\njulienne\n********\n\n**very ALPHA, use at your own risk**\n\nWhen writing code for teaching, you often need multiple versions of your code,\nshowing progress to your students as you introduce new concepts. Keeping\nseveral versions is painful though, especially when you find a bug that is\ncommon to each copy.\n\nEnter: julienne. It slices, it dices, well... it actually only slices. This\nlibrary comes with the ``juli`` script which reads code and interprets special\ndirectives in the comments, generating multiple versions of the code. The\ndirectives allow you to limit which versions a block of code exists in. \n\nThe goal for this toolset once complete is to allow you to maintain a single\nversion of your project in its completed state. Running ``juli`` on your\nproject will generate a separate copy of each version of your code.\n\n\nJuli Comment Markers\n--------------------\n\nWhen using ``juli``, you have one copy of your code in its final state. You\nmark sections of your code with comments to indicate that a line or block only\nparticipates in certain versions. Each version is called a *chapter*. When you\nrun the ``juli`` command it will create a directory for each chapter found in\nyour code.\n\n\n.. code-block:: python\n\n    # This is a sample file\n\n    a = \"In all chapters\"   # inline comment\n    b = \"In chapters 1-3\"   #:1-3 comment on conditional\n    c = \"In chapters 1-2\"   #:-2\n    d = \"In chapters 2 on\"  #:2-\n\n    #::3-4\n    #>e = \"In chapters 3 to 4\"  # inline comment\n    #>f = \"  as a block\"\n\n    for x in range(10):\n        #::1-2 block header with comment\n        #>g= \"In chapters 1 and 2\"\n        h = \"In all chapters\"\n\n\nThe ``juli`` parser supports three conditional comment markers:\n\n* ``#:`` -- is for marking a single line with a range of chapters\n* ``#::`` -- is for marking the start of a conditional block\n* ``#>`` -- is for marking a line participating in a block\n\nThe ``#:`` and ``#::`` markers expect a range that indicates what chapters a\nline or block participates within. Ranges can indicate a single chapter, a\nrange of chapters, up-to-and-including a chapter, and including-and-after a\nchapter. For example:\n\n* ``#:3`` -- this line only shows up in chapter 3\n* ``#::2-4`` -- the following block shows up in chapters 2, 3, and 4\n* ``#:-2`` -- this line is in chapters 1 and 2\n* ``#::4-`` -- the following block shows up in chapter 4 and any chapters after\n\nThe markers support trailing comments. Generated code will insert a comment\nwithout the ``juli`` marker containing whatever comes after your marker.\n\nThe sample code above will generate four chapters. Chapter one would contain:\n\n.. code-block:: python\n\n    # This is a sample file\n\n    a = \"In all chapters\"   # inline comment\n    b = \"In chapters 1-3\"   # comment on conditional\n    c = \"In chapters 1-2\"   \n\n\n    for x in range(10):\n        g= \"In chapters 1 and 2\"\n        h = \"In all chapters\"\n\n\nChapter four would contain:\n\n.. code-block:: python\n\n    # This is a sample file\n\n    a = \"In all chapters\"   # inline comment\n    d = \"In chapters 2 on\"  \n\n    e = \"In chapters 3 to 4\"  # inline comment\n    f = \"  as a block\"\n\n    for x in range(10):\n        h = \"In all chapters\"\n\n\nNote that files that contain only conditional lines will not be included if\nthey aren't in chapter range.\n\n\nConfiguring Your Project\n------------------------\n\nThe ``juli`` uses a `TOML <https://toml.io>`_ file for configuration. The file\nmust contain two key/value pairs that indicate the source and output\ndirectories for the parser.\n\n\n.. code-block:: TOML \n\n    output_dir = 'last_output'\n    src_dir = 'code'\n\n\nThe above will cause ``juli`` to look for a directory named ``code`` relative \nto the configuration file. The source found in that directory will be parsed. \nThe generated chapters will be put in a directory named ``last_output``. If\nyour source specified two chapters, running ``juli`` will result in the \ncreation of two directories: ``last_output/ch1/code`` and \n``last_output/ch2/code``.\n\nBoth the ``output_dir`` and ``src_dir`` values can be absolute paths or\nrelative to the TOML configuration file.\n\nAdditional, optional configuration values are:\n\n* ``chapter_prefix`` -- Specify what the prefix part of a chapter directory is named. If not specified, defaults to \"ch\"\n* ``python_globs`` -- A glob pattern that indicates which files participate in the parsing. Files that don't match will be copied without processing. If not specified it defaults to ``**/*.py``, meaning all files ending in \"\\*.py\"\n* ``ignore_dirs`` -- A list of sub-directories that should not be processed.\n* ``[chapter_map]`` -- Chapter numbers are integers, but you may not always want that in your output structure. This map allows you to change the suffix part of a chapter directory name. Keys in the map are the chapter numbers while values are what should be used in the chapter suffix.\n* ``[subdir.XYZ]`` -- Whole directories can be marked as conditional using this TOML map. This map must specify ``range`` and ``src_dir`` attributes. The ``range`` attribute indicates what chapters this directory participates in, and the ``src_dir`` points to the conditional chapter. The ``XYZ`` portion of the nested map is ignored, it is there so you can have multiple conditional directories.\n\nHere is a full example of a configuration file:\n\n.. code-block:: TOML \n\n    output_dir = 'last_output'\n    src_dir = 'code'\n    ignore_dirs = `bad_dir`\n\n    chapter_prefix = \"chap\"\n\n    [chapter_map]\n    4 = 'Four'\n    5 = '5.0'\n\n    [subdir.foo]\n    range = '2-4'\n    src_dir = 'code/between24'\n\n    [subdir.bar]\n    range = '4-'\n    src_dir = 'code/after4'\n        \n\nIf your code directory contained:\n\n.. code-block:: text\n\n    code/script.py\n    code/readme.txt\n    code/between24/two_to_four.py\n    code/after4/later_on.txt\n    code/bad_dir/something.py\n\n\nThen running ``juli`` with the sample configuration would result in the\nfollowing:\n\n.. code-block:: text\n\n    last_output/chap1/code/script.py\n    last_output/chap1/code/readme.txt\n\n    last_output/chap2/code/script.py\n    last_output/chap2/code/readme.txt\n    last_output/chap2/code/between24/two_to_four.py\n\n    last_output/chap3/code/script.py\n    last_output/chap3/code/readme.txt\n    last_output/chap3/code/between24/two_to_four.py\n\n    last_output/chapFour/code/script.py\n    last_output/chapFour/code/readme.txt\n    last_output/chapFour/code/between24/two_to_four.py\n    last_output/chapFour/code/after4/later_on.txt\n\n    last_output/chap5.0/code/script.py\n    last_output/chap5.0/code/readme.txt\n    last_output/chap5.0/code/after4/later_on.txt\n\nThe ``script.py`` and ``two_to_four.py`` files will be processed for\nconditional content. The ``readme.txt`` and ``later_on.txt`` files will be\nstraight copies as they aren't covered by the Python glob.\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cltrudeau/julienne",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "julienne",
            "package_url": "https://pypi.org/project/julienne/",
            "platform": null,
            "project_url": "https://pypi.org/project/julienne/",
            "project_urls": {
                "Homepage": "https://github.com/cltrudeau/julienne"
            },
            "release_url": "https://pypi.org/project/julienne/0.2.0/",
            "requires_dist": [
                "tomli (==2.0.1)",
                "build (==0.8.0) ; extra == 'dev'",
                "coverage (==6.5.0) ; extra == 'dev'",
                "pudb (==2022.1.2) ; extra == 'dev'",
                "pyflakes (==2.5.0) ; extra == 'dev'",
                "tox (==3.26.0) ; extra == 'dev'",
                "twine (==4.0.1) ; extra == 'dev'",
                "waelstow (==0.10.2) ; extra == 'dev'"
            ],
            "requires_python": "",
            "summary": "Splits code into copies based on version numbers in comments",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15690302,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fb840b1602f518f77e150f50f03f7250",
                    "sha256": "e6b516b13ce7fe1c10fc45d78a222f1bf369d0ad61c8a8a34718ee98dc560f75"
                },
                "downloads": -1,
                "filename": "julienne-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fb840b1602f518f77e150f50f03f7250",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 9237,
                "upload_time": "2022-11-07T20:29:24",
                "upload_time_iso_8601": "2022-11-07T20:29:24.336775Z",
                "url": "https://files.pythonhosted.org/packages/26/61/23c18e36c6a1c25f6af0426499ae6b10333e03368c7e804c90e793558746/julienne-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d85d9c1c75f1e8fbdd220364045ad1c0",
                    "sha256": "11901115ef15ef4642de91fcc7fa0cf1f68d0e4fa0f21faf33dc97b851471ef4"
                },
                "downloads": -1,
                "filename": "julienne-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d85d9c1c75f1e8fbdd220364045ad1c0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10790,
                "upload_time": "2022-11-07T20:29:27",
                "upload_time_iso_8601": "2022-11-07T20:29:27.073586Z",
                "url": "https://files.pythonhosted.org/packages/f6/ae/a1c16ca89d8823a104388e2023ef9b2fa7d04478c7f840c495760e707187/julienne-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}