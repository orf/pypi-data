{
    "0.0.1": {
        "info": {
            "author": "Ilya Pyltsin",
            "author_email": "ilya.pyltsin@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "EcSentiThemeLex\n===============\n\nRussian tonal-thematic dictionary, which allows identifying the semantic\norientation of groups of economic texts, as well as determining their\nsentimental (tonal) characteristics.\n\nTable of Contents\n~~~~~~~~~~~~~~~~~\n\n1. `Installation <#installation>`__\n2. `Example of application <#example>`__\n3. `Authors <#authors>`__\n\nInstallation \n-------------\n\n-  Install the 64bit version of Python 3, for instance from\n   https://www.python.org. Then run:\n\n.. code:: javascript\n\n    pip install ecsentithemelex\n\nor\n\n.. code:: javascript\n\n    pip3 install ecsentithemelex\n\n-  Github:\n\nhttps://github.com/ilya013/ecsentithemelex\n\nRequirements: \\* NumPy (https://numpy.org/install/) \\* Pandas\n(https://pandas.pydata.org/getting\\_started.html) \\* pymystem3\n(https://github.com/nlpub/pymystem3) \\* NLTK\n(https://www.nltk.org/install.html)\n\nExample of application \n-----------------------\n\nFirst you need to import the library into the Python programming\nenvironment:\n\n.. code:: javascript\n\n    import ecsentithemelex\n\n***ecsentithemelex*** has three main modules: *Vocabulary*,\n*OneWordScore* and *TextScore*. The first, *Vocabulary*, contains tables\nwith words that were collected and evaluated by the authors listed below\nand various experts, and these words were assigned to 12 different\neconomic topics (in Russian):\n\n.. code:: javascript\n\n    array(['\u041c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u0430\u044f \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u0430, \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f \u0438 \u0444\u0438\u043d\u0430\u043d\u0441\u044b',\n           '\u0413\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0444\u0438\u043d\u0430\u043d\u0441\u044b, \u0431\u044e\u0434\u0436\u0435\u0442 \u0438 \u043d\u0430\u043b\u043e\u0433\u0438',\n           '\u0420\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u043a\u0442\u043e\u0440 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u0438 (\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u043e, \u043f\u0440\u043e\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c, \u0434\u043e\u0431\u044b\u0447\u0430)',\n           '\u0418\u043d\u043d\u043e\u0432\u0430\u0446\u0438\u0438', '\u041e\u0431\u0449\u0435\u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u0435\u0441\u043a\u043e\u0435', '\u041c\u0430\u0440\u043a\u0435\u0442\u0438\u043d\u0433 \u0438 \u0440\u0435\u043a\u043b\u0430\u043c\u0430',\n           '\u0421\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c, \u0431\u043b\u0430\u0433\u043e\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0441\u043f\u043e\u043d\u0441\u043e\u0440\u0441\u043a\u0430\u044f \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u044f',\n           '\u041c\u043e\u043d\u0435\u0442\u0430\u0440\u043d\u0430\u044f \u043f\u043e\u043b\u0438\u0442\u0438\u043a\u0430, \u0432\u0430\u043b\u044e\u0442\u0430, \u0434\u0435\u043d\u044c\u0433\u0438 \u0438 \u043a\u0440\u0435\u0434\u0438\u0442, \u0431\u0430\u043d\u043a\u0438',\n           '\u041f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 \u0438 \u0440\u043e\u0437\u043d\u0438\u0447\u043d\u0430\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u044f', '\u0424\u043e\u043d\u0434\u043e\u0432\u044b\u0435 \u0438 \u0442\u043e\u0432\u0430\u0440\u043d\u044b\u0435 \u0440\u044b\u043d\u043a\u0438',\n           '\u041a\u043e\u0440\u043f\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0435 \u0444\u0438\u043d\u0430\u043d\u0441\u044b \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435, \u0444\u0438\u0440\u043c\u0430, \u0431\u0443\u0445\u0433\u0430\u043b\u0442\u0435\u0440\u0441\u043a\u0438\u0439 \u0443\u0447\u0435\u0442, \u043d\u0435\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0430\u043a\u0442\u0438\u0432\u044b',\n           '\u041c\u0430\u043a\u0440\u043e\u044d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u0430'], dtype=object)\n\n***Vocabulary*** has three methods: *all\\_phrase\\_tone()*,\n*all\\_word\\_tone\\_theme()* and *voc.all\\_forms\\_tone\\_theme()*. All of\nthem return *DataFrame* with word, scores or scores and topics.\n*all\\_phrase\\_tone()* returns all words, bigrams and trigrams with their\nscores. *all\\_word\\_tone\\_theme()* returns all words, bigrams and\ntrigrams with their scores and categories. *all\\_word\\_tone\\_theme()*\nreturns all words, bigrams and trigrams in all declensions with their\nscores and categories.\n\n.. code:: javascript\n\n    from ecsentithemelex import Vocabulary\n    voc = Vocabulary()\n    voc.all_phrase_tone()\n    voc.all_word_tone_theme()\n    voc.all_forms_tone_theme()\n\n***OneWordScore*** and ***TextScore*** use *str* object as input. For\nexample(https://raw.githubusercontent.com/isdemin/ecs/master/news.txt):\n\n.. code:: javascript\n\n    word = '\u0444\u044c\u044e\u0447\u0435\u0440\u0441\u044b'\n    text = '\u041c\u0438\u0440\u043e\u0432\u044b\u0435 \u0446\u0435\u043d\u044b \u043d\u0430 \u043d\u0435\u0444\u0442\u044c \u043f\u0435\u0440\u0435\u0448\u043b\u0438 \u043a \u0440\u043e\u0441\u0442\u0443, \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u044e\u0442\u0441\u044f \u043d\u0430 1,5-1,7% \u0432 \u043f\u044f\u0442\u043d\u0438\u0446\u0443 \u0432\u0435\u0447\u0435\u0440\u043e\u043c \u043f\u043e\u0441\u043b\u0435 \u043f\u0430\u0434\u0435\u043d\u0438\u044f \u0434\u043d\u0435\u043c \u043d\u0430 2%, \u0440\u044b\u043d\u043a\u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u044e\u0442 \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u044b \u043f\u043e \u0431\u0430\u043b\u0430\u043d\u0441\u0443 \u0441\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0441\u0432\u0438\u0434\u0435\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u0440\u0433\u043e\u0432. \u041f\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044e \u043d\u0430 20.31 \u043c\u0441\u043a \u0446\u0435\u043d\u0430 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c\u0441\u043a\u0438\u0445 \u0444\u044c\u044e\u0447\u0435\u0440\u0441\u043e\u0432 \u043d\u0430 \u0441\u0435\u0432\u0435\u0440\u043e\u043c\u043e\u0440\u0441\u043a\u0443\u044e \u043d\u0435\u0444\u0442\u044f\u043d\u0443\u044e \u0441\u043c\u0435\u0441\u044c \u043c\u0430\u0440\u043a\u0438 Brent \u0440\u043e\u0441\u043b\u0430 \u043d\u0430 1,58% \u2014 \u0434\u043e 43,02 \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0437\u0430 \u0431\u0430\u0440\u0440\u0435\u043b\u044c. \u0410\u0432\u0433\u0443\u0441\u0442\u043e\u0432\u0441\u043a\u0438\u0435 \u0444\u044c\u044e\u0447\u0435\u0440\u0441\u044b \u043d\u0430 \u043d\u0435\u0444\u0442\u044c \u043c\u0430\u0440\u043a\u0438 WTI \u0434\u043e\u0440\u043e\u0436\u0430\u043b\u0438 \u043d\u0430 1,72% \u2014 \u0434\u043e 40,3 \u0434\u043e\u043b\u043b\u0430\u0440\u0430 \u0437\u0430 \u0431\u0430\u0440\u0440\u0435\u043b\u044c. \u0423\u0442\u0440\u043e\u043c \u0432 \u043f\u044f\u0442\u043d\u0438\u0446\u0443 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u0435 \u0446\u0435\u043d \u043d\u0430 \u043d\u0435\u0444\u0442\u044c \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u043b\u043e 1%, \u0434\u043d\u0435\u043c \u0434\u043e\u0441\u0442\u0438\u0433\u0430\u043b\u043e 2-2,5%. \u0422\u0440\u0435\u0439\u0434\u0435\u0440\u044b \u043e\u0446\u0435\u043d\u0438\u0432\u0430\u044e\u0442 \u043f\u0435\u0440\u0441\u043f\u0435\u043a\u0442\u0438\u0432\u044b \u0441\u043f\u0440\u043e\u0441\u0430 \u0438 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435 \u043d\u043e\u0432\u043e\u0441\u0442\u0435\u0439 \u043e\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u043d\u0435\u0444\u0442\u0438. \u0420\u0430\u043d\u0435\u0435 \u0432 \u043f\u044f\u0442\u043d\u0438\u0446\u0443 \u041c\u0435\u0436\u0434\u0443\u043d\u0430\u0440\u043e\u0434\u043d\u043e\u0435 \u044d\u043d\u0435\u0440\u0433\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0430\u0433\u0435\u043d\u0442\u0441\u0442\u0432\u043e (\u041c\u042d\u0410) \u0432 \u0441\u0432\u043e\u0435\u043c \u0438\u044e\u043b\u044c\u0441\u043a\u043e\u043c \u0434\u043e\u043a\u043b\u0430\u0434\u0435 \u0441\u043e\u043e\u0431\u0449\u0438\u043b\u043e, \u0447\u0442\u043e \u043e\u0436\u0438\u0434\u0430\u0435\u0442 \u0441\u043f\u0440\u043e\u0441 \u043d\u0430 \u043d\u0435\u0444\u0442\u044c \u043f\u043e \u0438\u0442\u043e\u0433\u0430\u043c 2020 \u0433\u043e\u0434\u0430 \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 92,1 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430 \u0431\u0430\u0440\u0440\u0435\u043b\u0435\u0439 \u0432 \u0441\u0443\u0442\u043a\u0438, \u043d\u0430 400 \u0442\u044b\u0441\u044f\u0447 \u0432\u044b\u0448\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e \u043f\u0440\u043e\u0433\u043d\u043e\u0437\u0430.'\n\n***OneWordScore*** score and categorize only one word with methods\n*score()* and *cateorize()*:\n\n.. code:: javascript\n\n    from ecsentithemelex import OneWordScore\n    ows = OneWordScore()\n\n    ows.score(word)\n    0\n\n    ows.categorize(word)\n    '\u0424\u043e\u043d\u0434\u043e\u0432\u044b\u0435 \u0438 \u0442\u043e\u0432\u0430\u0440\u043d\u044b\u0435 \u0440\u044b\u043d\u043a\u0438'\n\n***TextScore*** score and categorize different texts without the need\nfor their processing and lemmatization with methods *score\\_text()* and\n*categorize\\_text()*:\n\n.. code:: javascript\n\n    from ecsentithemelex import TextScore\n    ts = TextScore()\n\n    ts.score_text(text, bigrams_in=True, trigrams_in=True)\n    0.011627906976744186\n\n    ts.categorize_text(text, bigrams_in=True, trigrams_in=True)\n    '\u0420\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u043a\u0442\u043e\u0440 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u043a\u0438 (\u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0441\u0442\u0432\u043e, \u043f\u0440\u043e\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c, \u0434\u043e\u0431\u044b\u0447\u0430)'\n\nAuthors \n--------\n\nBelow are the people who were directly involved in creating the\ndictionary, evaluating words, and searching for thematic categories for\neach word:\n\n-  ***Fedorova E.A.***, prof. Department of Corporate Finance and\n   Corporate Governance, Financial University under the Government of\n   the Russian Federation, ecolena@mail.ru\n-  ***Afanasyev D.O.***, JSC \"Greenatom\", Moscow dmafanasyev@gmail.com\n-  ***Remesnik A.B.***, HSE, Faculty of Economic Sciences,\n   nastya.rem@mail.ru\n-  ***Demin I.S.***, prof. Department of Data Analysis and Machine\n   Learning Financial University under the Government of the Russian\n   Federation, ig.demin@gmail.com\n-  ***Sokolov A.V.***, HSE, Faculty of Economic Sciences\n   avsokolov@edu.hse.ru\n-  ***Pyltsin I.V.***, Higher School of Economics, Faculty of Economic\n   Sciences, ilya.pyltsin@gmail.com\n-  ***Nersesyan R.G.***, LLC \"Tcifra\", romkasb@gmail.com\n-  ***Lazarev A.M.***, Lomonosov Moscow State University, Faculty of\n   Mechanics and Mathematics, am\\_laz1@mail.ru\n-  ***Rogov O.Yu.***, Skolkovo Institute of Science and Technology, NS,\n   Ph.D. of sciences olg3372@gmail.com\n\nThe power of the dictionary in this module may differ because the\ndictionary was supplemented with different word forms using the pymorphy\n2 tools(https://pymorphy2.readthedocs.io/en/latest/) and\npyphrasy(https://github.com/summerisgone/pyphrasy). This allows you to\nscore and categorize texts without the lemmatization procedure, just\ntokenize the text and bring it to lowercase.\n\nThe algorithms of scoring and categorizing will be improved in next\nreleases.\n\n***Developed by Ilya Pyltsin***",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ilya013/ecsentithemelex",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ecsentithemelex",
            "package_url": "https://pypi.org/project/ecsentithemelex/",
            "platform": "",
            "project_url": "https://pypi.org/project/ecsentithemelex/",
            "project_urls": {
                "Homepage": "https://github.com/ilya013/ecsentithemelex"
            },
            "release_url": "https://pypi.org/project/ecsentithemelex/0.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Russian economic tonal-thematic dictionary",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7697181,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "49aac51987192beabec6d9a902cbccdb",
                    "sha256": "9f8abce2e47a024f89635aa2398ab9fd229bc582a13cbec4582f007112caff4b"
                },
                "downloads": -1,
                "filename": "ecsentithemelex-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "49aac51987192beabec6d9a902cbccdb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 719069,
                "upload_time": "2020-07-14T10:57:12",
                "upload_time_iso_8601": "2020-07-14T10:57:12.694357Z",
                "url": "https://files.pythonhosted.org/packages/7c/2b/048ac8c949ced81a0b2ac55f2507f54f1dc8dd82ae90181f24c3894f2c0e/ecsentithemelex-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}