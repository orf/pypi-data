{
    "0.1.0": {
        "info": {
            "author": "Jon Crall",
            "author_email": "jon.crall@kitware.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.kitware.com/computer-vision/cmd_queue",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cmd-queue",
            "package_url": "https://pypi.org/project/cmd-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/cmd-queue/",
            "project_urls": {
                "Homepage": "https://gitlab.kitware.com/computer-vision/cmd_queue"
            },
            "release_url": "https://pypi.org/project/cmd-queue/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The cmd_queue module for a DAG of bash commands",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16116378,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f3a10647aaffcfa16e2a6bf3890d7928",
                    "sha256": "931df82279a3c45969a0469a7279e69ba2bdad975dd74771e41a58e7f7b46feb"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.0-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "f3a10647aaffcfa16e2a6bf3890d7928",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 29121,
                "upload_time": "2022-06-16T02:47:46",
                "upload_time_iso_8601": "2022-06-16T02:47:46.103707Z",
                "url": "https://files.pythonhosted.org/packages/93/2b/cea4e949763be083d52de3abb8b4acf97fbbd42d3d388498e15772e354df/cmd_queue-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e2baba4c93b2abfe3756229f575df486",
                    "sha256": "dc9b76a7b263b218a8f7f0ac9c522b34de2155f6f141b4c1db27174c2bf75c87"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.0.tar.gz",
                "has_sig": true,
                "md5_digest": "e2baba4c93b2abfe3756229f575df486",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 31878,
                "upload_time": "2022-06-16T02:47:32",
                "upload_time_iso_8601": "2022-06-16T02:47:32.696575Z",
                "url": "https://files.pythonhosted.org/packages/f8/ad/06e914dae84abce40792521c42fe06a404b3b2d85c65932103c332a3b19d/cmd_queue-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "joncrall",
            "author_email": "jon.crall@kitware.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.kitware.com/computer-vision/cmd_queue",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cmd-queue",
            "package_url": "https://pypi.org/project/cmd-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/cmd-queue/",
            "project_urls": {
                "Homepage": "https://gitlab.kitware.com/computer-vision/cmd_queue"
            },
            "release_url": "https://pypi.org/project/cmd-queue/0.1.1/",
            "requires_dist": [
                "ubelt",
                "rich",
                "numpy ; python_version < \"3.10\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.10\" and python_version >= \"3.9\"",
                "pandas ; python_version < \"3.6.1\" and python_version >= \"3.6\"",
                "pint ; python_version < \"3.7\" and python_version >= \"3.6\"",
                "pandas ; python_version < \"3.7\" and python_version >= \"3.6.1\"",
                "networkx ; python_version < \"3.7.0\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.7.1\" and python_version >= \"3.7\"",
                "networkx ; python_version < \"3.8\" and python_version >= \"3.7\"",
                "pandas ; python_version < \"3.8\" and python_version >= \"3.7.1\"",
                "pandas ; python_version < \"3.9\" and python_version >= \"3.8\"",
                "numpy ; python_version >= \"3.10\"",
                "pandas ; python_version >= \"3.10\"",
                "pint ; python_version >= \"3.7\"",
                "networkx ; python_version >= \"3.8\"",
                "ubelt ; extra == 'all'",
                "rich ; extra == 'all'",
                "xdoctest ; extra == 'all'",
                "ubelt (==1.1.2) ; extra == 'all-strict'",
                "rich (==12.5.1) ; extra == 'all-strict'",
                "xdoctest (==1.0.1) ; extra == 'all-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy (==1.21.6) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "pandas ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all'",
                "pint ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pandas ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all'",
                "networkx ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "pandas ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all'",
                "pandas ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "numpy ; (python_version >= \"3.10\") and extra == 'all'",
                "pandas ; (python_version >= \"3.10\") and extra == 'all'",
                "coverage ; (python_version >= \"3.10\") and extra == 'all'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
                "pint ; (python_version >= \"3.7\") and extra == 'all'",
                "pytest ; (python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version >= \"3.8\") and extra == 'all'",
                "ubelt (==1.1.2) ; extra == 'runtime-strict'",
                "rich (==12.5.1) ; extra == 'runtime-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'runtime-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'runtime-strict'",
                "numpy (==1.21.6) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'runtime-strict'",
                "xdoctest ; extra == 'tests'",
                "xdoctest (==1.0.1) ; extra == 'tests-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
                "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'",
                "pytest ; (python_version >= \"3.7\") and extra == 'tests'"
            ],
            "requires_python": ">=3.6",
            "summary": "The cmd_queue module for a DAG of bash commands",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16116378,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0b787b7d68084623717b29840becd147",
                    "sha256": "408e804659526bfe9c8804fcd8be7558e224f68b9fce3d5ad7ea504f7b04db2f"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.1-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "0b787b7d68084623717b29840becd147",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 33395,
                "upload_time": "2022-07-11T18:46:08",
                "upload_time_iso_8601": "2022-07-11T18:46:08.917769Z",
                "url": "https://files.pythonhosted.org/packages/cc/12/c10ca75d7b1f5e0b62901b09d40eb4233a102d6819a06807e669beaac207/cmd_queue-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c97ba6ef20d1f96d9d8556d6650fe445",
                    "sha256": "a235298f8237561addd8a9b6a84d8b5c1545776e66352ef9448b907a43554d17"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.1.tar.gz",
                "has_sig": true,
                "md5_digest": "c97ba6ef20d1f96d9d8556d6650fe445",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 34777,
                "upload_time": "2022-07-11T18:46:12",
                "upload_time_iso_8601": "2022-07-11T18:46:12.246289Z",
                "url": "https://files.pythonhosted.org/packages/37/cd/7df52418637f4df44da801b48944ed1efa2312aee3892a95ec01c4de2985/cmd_queue-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Kitware Inc., Jon Crall",
            "author_email": "kitware@kitware.com, jon.crall@kitware.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.kitware.com/computer-vision/cmd_queue",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cmd-queue",
            "package_url": "https://pypi.org/project/cmd-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/cmd-queue/",
            "project_urls": {
                "Homepage": "https://gitlab.kitware.com/computer-vision/cmd_queue"
            },
            "release_url": "https://pypi.org/project/cmd-queue/0.1.2/",
            "requires_dist": [
                "ubelt",
                "rich",
                "psutil",
                "numpy ; python_version < \"3.10\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.10\" and python_version >= \"3.9\"",
                "pandas ; python_version < \"3.6.1\" and python_version >= \"3.6\"",
                "pint ; python_version < \"3.7\" and python_version >= \"3.6\"",
                "pandas ; python_version < \"3.7\" and python_version >= \"3.6.1\"",
                "networkx ; python_version < \"3.7.0\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.7.1\" and python_version >= \"3.7\"",
                "networkx ; python_version < \"3.8\" and python_version >= \"3.7\"",
                "pandas ; python_version < \"3.8\" and python_version >= \"3.7.1\"",
                "pandas ; python_version < \"3.9\" and python_version >= \"3.8\"",
                "numpy ; python_version >= \"3.10\"",
                "pandas ; python_version >= \"3.10\"",
                "pint ; python_version >= \"3.7\"",
                "networkx ; python_version >= \"3.8\"",
                "ubelt ; extra == 'all'",
                "rich ; extra == 'all'",
                "psutil ; extra == 'all'",
                "xdoctest ; extra == 'all'",
                "textual ; extra == 'all'",
                "ubelt (==1.1.2) ; extra == 'all-strict'",
                "rich (==12.5.1) ; extra == 'all-strict'",
                "psutil (==5.9.1) ; extra == 'all-strict'",
                "xdoctest (==1.0.1) ; extra == 'all-strict'",
                "textual (==0.1.18) ; extra == 'all-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy (==1.21.6) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "pandas ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all'",
                "pint ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pandas ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all'",
                "networkx ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "pandas ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all'",
                "pandas ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "numpy ; (python_version >= \"3.10\") and extra == 'all'",
                "pandas ; (python_version >= \"3.10\") and extra == 'all'",
                "coverage ; (python_version >= \"3.10\") and extra == 'all'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
                "pint ; (python_version >= \"3.7\") and extra == 'all'",
                "pytest ; (python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version >= \"3.8\") and extra == 'all'",
                "textual ; extra == 'optional'",
                "textual (==0.1.18) ; extra == 'optional-strict'",
                "ubelt (==1.1.2) ; extra == 'runtime-strict'",
                "rich (==12.5.1) ; extra == 'runtime-strict'",
                "psutil (==5.9.1) ; extra == 'runtime-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'runtime-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'runtime-strict'",
                "numpy (==1.21.6) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'runtime-strict'",
                "xdoctest ; extra == 'tests'",
                "xdoctest (==1.0.1) ; extra == 'tests-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
                "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'",
                "pytest ; (python_version >= \"3.7\") and extra == 'tests'"
            ],
            "requires_python": ">=3.6",
            "summary": "The cmd_queue module for a DAG of bash commands",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16116378,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "282430a4ab8d1e5c43c738155bde6635",
                    "sha256": "e9de05e9fd8336db5476b0f1a13cf9720b3f8d18eaa592a81d0764752af6385f"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.2-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "282430a4ab8d1e5c43c738155bde6635",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 46196,
                "upload_time": "2022-07-27T19:26:19",
                "upload_time_iso_8601": "2022-07-27T19:26:19.897932Z",
                "url": "https://files.pythonhosted.org/packages/4a/a0/77373e0e768e3279a16b2acedb2f2eead87184e71ff877af0d0410293002/cmd_queue-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "Kitware Inc., Jon Crall",
            "author_email": "kitware@kitware.com, jon.crall@kitware.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.kitware.com/computer-vision/cmd_queue",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cmd-queue",
            "package_url": "https://pypi.org/project/cmd-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/cmd-queue/",
            "project_urls": {
                "Homepage": "https://gitlab.kitware.com/computer-vision/cmd_queue"
            },
            "release_url": "https://pypi.org/project/cmd-queue/0.1.4/",
            "requires_dist": [
                "ubelt",
                "rich",
                "psutil",
                "numpy ; python_version < \"3.10\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.10\" and python_version >= \"3.9\"",
                "numpy ; python_version < \"3.11\" and python_version >= \"3.10\"",
                "numpy ; python_version < \"3.12\" and python_version >= \"3.11\"",
                "pandas ; python_version < \"3.6.1\" and python_version >= \"3.6\"",
                "pint ; python_version < \"3.7\" and python_version >= \"3.6\"",
                "pandas ; python_version < \"3.7\" and python_version >= \"3.6.1\"",
                "networkx ; python_version < \"3.7.0\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.7.1\" and python_version >= \"3.7\"",
                "networkx ; python_version < \"3.8\" and python_version >= \"3.7\"",
                "pandas ; python_version < \"3.8\" and python_version >= \"3.7.1\"",
                "pandas ; python_version < \"3.9\" and python_version >= \"3.8\"",
                "pandas ; python_version >= \"3.10\"",
                "pint ; python_version >= \"3.7\"",
                "networkx ; python_version >= \"3.8\"",
                "ubelt ; extra == 'all'",
                "rich ; extra == 'all'",
                "psutil ; extra == 'all'",
                "xdoctest ; extra == 'all'",
                "ubelt (==1.1.2) ; extra == 'all-strict'",
                "rich (==12.5.1) ; extra == 'all-strict'",
                "psutil (==5.9.1) ; extra == 'all-strict'",
                "xdoctest (==1.0.1) ; extra == 'all-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all-strict'",
                "numpy (==1.23.3) ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "textual (==0.1.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "numpy ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all'",
                "numpy ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'all'",
                "pandas ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all'",
                "pint ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pandas ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all'",
                "networkx ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "pandas ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all'",
                "pandas ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "pandas ; (python_version >= \"3.10\") and extra == 'all'",
                "coverage ; (python_version >= \"3.10\") and extra == 'all'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
                "pint ; (python_version >= \"3.7\") and extra == 'all'",
                "pytest ; (python_version >= \"3.7\") and extra == 'all'",
                "textual ; (python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version >= \"3.8\") and extra == 'all'",
                "textual (==0.1.18) ; (python_version >= \"3.7\") and extra == 'optional-strict'",
                "textual ; (python_version >= \"3.7\") and extra == 'optional'",
                "ubelt (==1.1.2) ; extra == 'runtime-strict'",
                "rich (==12.5.1) ; extra == 'runtime-strict'",
                "psutil (==5.9.1) ; extra == 'runtime-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'runtime-strict'",
                "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'runtime-strict'",
                "numpy (==1.23.3) ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'runtime-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'runtime-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'runtime-strict'",
                "xdoctest ; extra == 'tests'",
                "xdoctest (==1.0.1) ; extra == 'tests-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
                "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'",
                "pytest ; (python_version >= \"3.7\") and extra == 'tests'"
            ],
            "requires_python": ">=3.6",
            "summary": "The cmd_queue module for a DAG of bash commands",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16116378,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d49b19447a457b59824dbd4f2e801a0b",
                    "sha256": "87ada29afec111a24f544d16e92af005dfa3c43dffa48693f15855f353567702"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.4-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "d49b19447a457b59824dbd4f2e801a0b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 51913,
                "upload_time": "2022-10-31T17:45:03",
                "upload_time_iso_8601": "2022-10-31T17:45:03.445480Z",
                "url": "https://files.pythonhosted.org/packages/29/e2/7ab68b735a1722cc0d4035479ef070beccfef16ac607db763bcbc0509f68/cmd_queue-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.5": {
        "info": {
            "author": "Kitware Inc., Jon Crall",
            "author_email": "kitware@kitware.com, jon.crall@kitware.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Utilities"
            ],
            "description": "Command Queue - cmd_queue\n=========================\n\n.. .. |GitlabCIPipeline| |GitlabCICoverage| |Appveyor| |Codecov| \n\n|Pypi| |Downloads| |ReadTheDocs|\n\n\n.. The ``cmd_queue`` module.\n\n+------------------+-------------------------------------------------------------------------------------+\n| Read the docs    | https://cmd_queue.readthedocs.io                                                    |\n+------------------+-------------------------------------------------------------------------------------+\n| Github           | https://github.com/Erotemic/cmd_queue                                               |\n+------------------+-------------------------------------------------------------------------------------+\n| Pypi             | https://pypi.org/project/cmd_queue                                                  |\n+------------------+-------------------------------------------------------------------------------------+\n| Slides           | https://docs.google.com/presentation/d/1BjJkjMx6bxu1uek-hAGpwj760u9rraVn7st8J5OsZME |\n+------------------+-------------------------------------------------------------------------------------+\n\n\nThis is a simple module for \"generating\" a bash script that schedules multiples\njobs (in parallel if possible) on a single machine. There are 3 backends with\nincreasing levels of complexity: serial, tmux, and slurm.\n\nIn serial mode, a single bash script gets written that executes your jobs in\nsequence. There are no external dependencies \n\nIn tmux mode, multiple tmux sessions get opened and each of them executes your\nindependent parts of your jobs. Dependencies are handled.\n\nIn slurm mode, a real heavy-weight scheduling algorithm is used. In this mode\nwe simply convert your jobs to slurm commands and execute them. \n\nUnder the hood we build a DAG based on your specified dependencies and use this\nto appropriately order jobs.\n\nBy default, bash scripts that would execute your jobs print to the console.\nThis gives the user fine-grained control if they only want to run a subset of a\npipeline manually. But if asked to run, cmd_queue will execute the bash jobs.\n\n\n\nModivation\n==========\nRecently, I needed to run several jobs on 4 jobs across 2 GPUs and then execute\na script after all of them were done. What I should have done was use slurm or\nsome other proper queuing system to schedule the jobs, but instead I wrote my\nown hacky scheduler using tmux. I opened N (number of parallel workers) tmux\nsessions and then I ran independent jobs in each different sessions.\n\nThis worked unreasonably well for my use cases, and it was nice to be able to effectively schedule jobs without heavyweight software like slurm on my machine.\n\nEventually I did get slurm on my machine, and I abstracted the API of my\ntmux_queue to be a general \"command queue\" that can use 1 of 3 backends:\nserial, tmux, or slurm.\n\n\nNiche\n=====\nThere are many DAG schedulers out there:\n\n * airflow\n * luigi\n * submitit\n * rq_scheduler\n\n\nThe the niche for this is when you have large pipelines of bash commands that\ndepend on each other and you want to template out those parameters with logic\nthat you define in Python.\n\nWe plan on adding an airflow backend.\n\n\nExamples\n========\n\n\nAll of the dependency checking and book keeping logic is handled in bash\nitself. Write (or better yet template) your bash scripts in Python, and then\nuse cmd_queue to \"transpile\" these sequences of commands to pure bash.\n\n\n.. code:: python\n\n   import cmd_queue\n   self = cmd_queue.Queue.create(name='demo_queue', backend='serial')\n   job1 = self.submit('echo hello && sleep 0.5')\n   job2 = self.submit('echo world && sleep 0.5', depends=[job1])\n   job3 = self.submit('echo foo && sleep 0.5')\n   job4 = self.submit('echo bar && sleep 0.5')\n   job5 = self.submit('echo spam && sleep 0.5', depends=[job1])\n   job6 = self.submit('echo spam && sleep 0.5')\n   job7 = self.submit('echo err && false')\n   job8 = self.submit('echo spam && sleep 0.5')\n   job9 = self.submit('echo eggs && sleep 0.5', depends=[job8])\n   job10 = self.submit('echo bazbiz && sleep 0.5', depends=[job9])\n\n   # Display the \"user-friendly\" pure bash\n   self.rprint()\n\n   # Display the real bash that gets executed under the hood\n   # that is independencly executable, tracks the success / failure of each job, \n   # and manages dependencies.\n   self.rprint(1, 1)\n\n   # Blocking will display a job monitor while it waits for everything to\n   # complete\n   self.run(block=True)\n\n\nThis prints the bash commands in an appropriate order to resolve dependencies. \n\n\n.. code:: bash\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_cc9d551e/demo_queue_2022-04-08_cc9d551e.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 10 - demo_queue-job-0\n    echo hello && sleep 0.5\n    #\n    ### Command 2 / 10 - demo_queue-job-1\n    echo world && sleep 0.5\n    #\n    ### Command 3 / 10 - demo_queue-job-2\n    echo foo && sleep 0.5\n    #\n    ### Command 4 / 10 - demo_queue-job-3\n    echo bar && sleep 0.5\n    #\n    ### Command 5 / 10 - demo_queue-job-4\n    echo spam && sleep 0.5\n    #\n    ### Command 6 / 10 - demo_queue-job-5\n    echo spam && sleep 0.5\n    #\n    ### Command 7 / 10 - demo_queue-job-6\n    echo err && false\n    #\n    ### Command 8 / 10 - demo_queue-job-7\n    echo spam && sleep 0.5\n    #\n    ### Command 9 / 10 - demo_queue-job-8\n    echo eggs && sleep 0.5\n    #\n    ### Command 10 / 10 - demo_queue-job-9\n    echo bazbiz && sleep 0.5\n       \n\n\n.. code:: python\n\n   # Need to tell the tmux queue how many processes can run at the same time\n   import cmd_queue\n   self = cmd_queue.Queue.create(size=4, name='demo_queue', backend='tmux')\n   job1 = self.submit('echo hello && sleep 0.5')\n   job2 = self.submit('echo world && sleep 0.5', depends=[job1])\n   job3 = self.submit('echo foo && sleep 0.5')\n   job4 = self.submit('echo bar && sleep 0.5')\n   job5 = self.submit('echo spam && sleep 0.5', depends=[job1])\n   job6 = self.submit('echo spam && sleep 0.5')\n   job7 = self.submit('echo err && false')\n   job8 = self.submit('echo spam && sleep 0.5')\n   job9 = self.submit('echo eggs && sleep 0.5', depends=[job8])\n   job10 = self.submit('echo bazbiz && sleep 0.5', depends=[job9])\n\n   # Display the \"user-friendly\" pure bash\n   self.rprint()\n\n   # Display the real bash that gets executed under the hood\n   # that is independencly executable, tracks the success / failure of each job, \n   # and manages dependencies.\n   self.rprint(1, 1)\n\n   # Blocking will display a job monitor while it waits for everything to\n   # complete\n   self.run(block=True)\n\n\nThis prints the sequence of bash commands that will be executed in each tmux session. \n \n.. code:: bash\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_0_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 3 - demo_queue-job-7\n    echo spam && sleep 0.5\n    #\n    ### Command 2 / 3 - demo_queue-job-8\n    echo eggs && sleep 0.5\n    #\n    ### Command 3 / 3 - demo_queue-job-9\n    echo bazbiz && sleep 0.5\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_1_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 2 - demo_queue-job-2\n    echo foo && sleep 0.5\n    #\n    ### Command 2 / 2 - demo_queue-job-6\n    echo err && false\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_2_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 2 - demo_queue-job-0\n    echo hello && sleep 0.5\n    #\n    ### Command 2 / 2 - demo_queue-job-5\n    echo spam && sleep 0.5\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_3_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 1 - demo_queue-job-3\n    echo bar && sleep 0.5\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_4_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 1 - demo_queue-job-4\n    echo spam && sleep 0.5\n\n    # --- /home/joncrall/.cache/base_queue/demo_queue_2022-04-08_a1ef7600/queue_demo_queue_5_2022-04-08_a1ef7600.sh\n\n    #!/bin/bash\n    #\n    # Jobs\n    #\n    ### Command 1 / 1 - demo_queue-job-1\n    echo world && sleep 0.5\n\n\n\nSlurm mode is the real deal. But you need slurm installed on your machint to\nuse it. Asking for tmux is a might ligher weight tool. We can specify slurm\noptions here\n\n.. code:: python\n\n   import cmd_queue\n   self = cmd_queue.Queue.create(name='demo_queue', backend='slurm')\n   job1 = self.submit('echo hello && sleep 0.5', cpus=4, mem='8GB')\n   job2 = self.submit('echo world && sleep 0.5', depends=[job1], parition='default')\n   job3 = self.submit('echo foo && sleep 0.5')\n   job4 = self.submit('echo bar && sleep 0.5')\n   job5 = self.submit('echo spam && sleep 0.5', depends=[job1])\n   job6 = self.submit('echo spam && sleep 0.5')\n   job7 = self.submit('echo err && false')\n   job8 = self.submit('echo spam && sleep 0.5')\n   job9 = self.submit('echo eggs && sleep 0.5', depends=[job8])\n   job10 = self.submit('echo bazbiz && sleep 0.5', depends=[job9])\n\n   # Display the \"user-friendly\" pure bash\n   self.rprint()\n\n   # Display the real bash that gets executed under the hood\n   # that is independencly executable, tracks the success / failure of each job, \n   # and manages dependencies.\n   self.rprint(1, 1)\n\n   # Blocking will display a job monitor while it waits for everything to\n   # complete\n   self.run(block=True)\n\n\nThis prints the very simple slurm submission script:\n \n.. code:: bash\n\n    # --- /home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/demo_queue-20220408T170615-a9e238b5.sh\n\n    mkdir -p \"$HOME/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs\"\n    JOB_000=$(sbatch --job-name=\"J0000-demo_queue-20220408T170615-a9e238b5\" --cpus-per-task=4 --mem=8000 --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0000-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo hello && sleep 0.5' --parsable)\n    JOB_001=$(sbatch --job-name=\"J0002-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0002-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo foo && sleep 0.5' --parsable)\n    JOB_002=$(sbatch --job-name=\"J0003-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0003-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo bar && sleep 0.5' --parsable)\n    JOB_003=$(sbatch --job-name=\"J0005-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0005-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo spam && sleep 0.5' --parsable)\n    JOB_004=$(sbatch --job-name=\"J0006-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0006-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo err && false' --parsable)\n    JOB_005=$(sbatch --job-name=\"J0007-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0007-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo spam && sleep 0.5' --parsable)\n    JOB_006=$(sbatch --job-name=\"J0001-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0001-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo world && sleep 0.5' \"--dependency=afterok:${JOB_000}\" --parsable)\n    JOB_007=$(sbatch --job-name=\"J0004-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0004-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo spam && sleep 0.5' \"--dependency=afterok:${JOB_000}\" --parsable)\n    JOB_008=$(sbatch --job-name=\"J0008-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0008-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo eggs && sleep 0.5' \"--dependency=afterok:${JOB_005}\" --parsable)\n    JOB_009=$(sbatch --job-name=\"J0009-demo_queue-20220408T170615-a9e238b5\" --output=\"/home/joncrall/.cache/slurm_queue/demo_queue-20220408T170615-a9e238b5/logs/J0009-demo_queue-20220408T170615-a9e238b5.sh\" --wrap 'echo bazbiz && sleep 0.5' \"--dependency=afterok:${JOB_008}\" --parsable)\n\n\n\nInstallation\n============\nThis will be on pypi once it is cleaned up, but for now:\n\npython -m pip install git+https://gitlab.kitware.com/computer-vision/cmd_queue.git@main\n\n\n   \n\n\n.. |Pypi| image:: https://img.shields.io/pypi/v/cmd_queue.svg\n   :target: https://pypi.python.org/pypi/cmd_queue\n\n.. |Downloads| image:: https://img.shields.io/pypi/dm/cmd_queue.svg\n   :target: https://pypistats.org/packages/cmd_queue\n\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/cmd_queue/badge/?version=release\n    :target: https://cmd_queue.readthedocs.io/en/release/\n\n.. # See: https://ci.appveyor.com/project/jon.crall/cmd_queue/settings/badges\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/py3s2d6tyfjc8lm3/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/jon.crall/cmd_queue/branch/master\n\n.. |GitlabCIPipeline| image:: https://gitlab.kitware.com/utils/cmd_queue/badges/master/pipeline.svg\n   :target: https://gitlab.kitware.com/utils/cmd_queue/-/jobs\n\n.. |GitlabCICoverage| image:: https://gitlab.kitware.com/utils/cmd_queue/badges/master/coverage.svg?job=coverage\n    :target: https://gitlab.kitware.com/utils/cmd_queue/commits/master\n\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/cmd_queue.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/cmd_queue\n\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/cmd_queue/master.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/cmd_queue\n\n.. |Codecov| image:: https://codecov.io/github/Erotemic/cmd_queue/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/cmd_queue?branch=master\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.kitware.com/computer-vision/cmd_queue",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "cmd-queue",
            "package_url": "https://pypi.org/project/cmd-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/cmd-queue/",
            "project_urls": {
                "Homepage": "https://gitlab.kitware.com/computer-vision/cmd_queue"
            },
            "release_url": "https://pypi.org/project/cmd-queue/0.1.5/",
            "requires_dist": [
                "ubelt",
                "rich",
                "psutil",
                "numpy ; python_version < \"3.10\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.10\" and python_version >= \"3.9\"",
                "numpy ; python_version < \"3.11\" and python_version >= \"3.10\"",
                "numpy ; python_version < \"3.12\" and python_version >= \"3.11\"",
                "pandas ; python_version < \"3.6.1\" and python_version >= \"3.6\"",
                "pint ; python_version < \"3.7\" and python_version >= \"3.6\"",
                "pandas ; python_version < \"3.7\" and python_version >= \"3.6.1\"",
                "networkx ; python_version < \"3.7.0\" and python_version >= \"3.6.0\"",
                "pandas ; python_version < \"3.7.1\" and python_version >= \"3.7\"",
                "networkx ; python_version < \"3.8\" and python_version >= \"3.7\"",
                "pandas ; python_version < \"3.8\" and python_version >= \"3.7.1\"",
                "pandas ; python_version < \"3.9\" and python_version >= \"3.8\"",
                "pandas ; python_version >= \"3.10\"",
                "pint ; python_version >= \"3.7\"",
                "networkx ; python_version >= \"3.8\"",
                "ubelt ; extra == 'all'",
                "rich ; extra == 'all'",
                "psutil ; extra == 'all'",
                "xdoctest ; extra == 'all'",
                "ubelt (==1.1.2) ; extra == 'all-strict'",
                "rich (==12.5.1) ; extra == 'all-strict'",
                "psutil (==5.9.1) ; extra == 'all-strict'",
                "xdoctest (==1.0.1) ; extra == 'all-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all-strict'",
                "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all-strict'",
                "numpy (==1.23.3) ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'all-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'all-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "textual (==0.1.18) ; (python_version >= \"3.7\") and extra == 'all-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'all-strict'",
                "numpy ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'all'",
                "numpy ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'all'",
                "numpy ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'all'",
                "pandas ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'all'",
                "pint ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'all'",
                "pandas ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'all'",
                "networkx ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'all'",
                "pandas ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'all'",
                "pandas ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'all'",
                "pandas ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'all'",
                "pandas ; (python_version >= \"3.10\") and extra == 'all'",
                "coverage ; (python_version >= \"3.10\") and extra == 'all'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'all'",
                "pint ; (python_version >= \"3.7\") and extra == 'all'",
                "pytest ; (python_version >= \"3.7\") and extra == 'all'",
                "textual ; (python_version >= \"3.7\") and extra == 'all'",
                "networkx ; (python_version >= \"3.8\") and extra == 'all'",
                "textual (==0.1.18) ; (python_version >= \"3.7\") and extra == 'optional-strict'",
                "textual ; (python_version >= \"3.7\") and extra == 'optional'",
                "ubelt (==1.1.2) ; extra == 'runtime-strict'",
                "rich (==12.5.1) ; extra == 'runtime-strict'",
                "psutil (==5.9.1) ; extra == 'runtime-strict'",
                "numpy (==1.19.3) ; (python_version < \"3.10\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'runtime-strict'",
                "numpy (==1.21.6) ; (python_version < \"3.11\" and python_version >= \"3.10\") and extra == 'runtime-strict'",
                "numpy (==1.23.3) ; (python_version < \"3.12\" and python_version >= \"3.11\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.6.1\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pint (==0.10) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7\" and python_version >= \"3.6.1\") and extra == 'runtime-strict'",
                "networkx (<=2.5.1,==2.5.1) ; (python_version < \"3.7.0\" and python_version >= \"3.6.0\") and extra == 'runtime-strict'",
                "pandas (==1.1.4) ; (python_version < \"3.7.1\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.6.2) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'runtime-strict'",
                "pandas (==1.2.0) ; (python_version < \"3.8\" and python_version >= \"3.7.1\") and extra == 'runtime-strict'",
                "pandas (==1.4.0) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'runtime-strict'",
                "pandas (==1.3.5) ; (python_version >= \"3.10\") and extra == 'runtime-strict'",
                "pint (==0.18) ; (python_version >= \"3.7\") and extra == 'runtime-strict'",
                "networkx (==2.7) ; (python_version >= \"3.8\") and extra == 'runtime-strict'",
                "xdoctest ; extra == 'tests'",
                "xdoctest (==1.0.1) ; extra == 'tests-strict'",
                "coverage (==5.3.1) ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests-strict'",
                "pytest (==6.2.0) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests-strict'",
                "coverage (==6.1.1) ; (python_version >= \"3.10\") and extra == 'tests-strict'",
                "pytest-cov (==3.0.0) ; (python_version >= \"3.6.0\") and extra == 'tests-strict'",
                "pytest (==7.1.0) ; (python_version >= \"3.7\") and extra == 'tests-strict'",
                "coverage ; (python_version < \"3.10\" and python_version >= \"3.9\") and extra == 'tests'",
                "pytest ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.7\" and python_version >= \"3.6\") and extra == 'tests'",
                "coverage ; (python_version < \"3.8\" and python_version >= \"3.7\") and extra == 'tests'",
                "coverage ; (python_version < \"3.9\" and python_version >= \"3.8\") and extra == 'tests'",
                "coverage ; (python_version >= \"3.10\") and extra == 'tests'",
                "pytest-cov ; (python_version >= \"3.6.0\") and extra == 'tests'",
                "pytest ; (python_version >= \"3.7\") and extra == 'tests'"
            ],
            "requires_python": ">=3.6",
            "summary": "The cmd_queue module for a DAG of bash commands",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16116378,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "aae1f2e0b9e689cb03b8af864777bbce",
                    "sha256": "06cd5e27f81302cc4bfce729abea2a40a2bc72d2462bd9a357ffb77ba443ed40"
                },
                "downloads": -1,
                "filename": "cmd_queue-0.1.5-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "aae1f2e0b9e689cb03b8af864777bbce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 53327,
                "upload_time": "2022-12-15T17:49:15",
                "upload_time_iso_8601": "2022-12-15T17:49:15.409997Z",
                "url": "https://files.pythonhosted.org/packages/64/ba/bab714a33e85e983441a7922c310404a5e6c0dc2123fa2abd45df28a6639/cmd_queue-0.1.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}