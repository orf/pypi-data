{
    "0.1.0": {
        "info": {
            "author": "Daniel Walker",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "=======\ndam_lev\n=======\n\n:Author: Daniel Walker\n:Version: 0.1.0\n:Date: 2022-11-24\n\nOverview\n========\n\nThe :code:`dam_lev` package implements the\n`Damerau\u2013Levenshtein diff algorithm <https://en.wikipedia.org/wiki/Damerau\u2013Levenshtein_distance>`_.  That is,\nit will take two sequences and determine the minimum number of transpositions, substitutions, insertions, and\ndeletions needed to transform the first sequence into the second.\n\nUsage\n=====\n\nThe package exposes a single function, :code:`dam_lev.get_changes`.  It takes two sequences (i.e., they must\nimplement the :code:`__len__` and :code:`__getitem__` methods) and returns a list of :code:`dam_lev.Mutation`\nobjects.  There are four subclasses of :code:`dam_lev.Mutation` corresponding to the four types of\ntransformations.  For example,\n\n.. code-block:: python\n\n    diffs = dam_lev.get_changes('abcdef', 'bcedxy')\n    print(diffs) # [Deletion(at=0), Transposition(at=3), Substitution(at=5, at2=4), Insertion(at=6, at2=5)]\n\nWe see that the sequence of transformations is:\n\n* Delete the item at index 0 (:code:`'a'`)\n* Transpose the item at index 3 (:code:`'d'`) with its successor\n* Substitute the item at index 5 (:code:`'f'`) with the item from the second sequence at index 4 (:code:`'x'`)\n* Insert at index 6 the item from the second sequence at index 5 (:code:`'y'`)\n\nNote the index for the transposition.  Even though, after the deletion, the :code:`'d'` is at index 2, it's at\nindex 3 in the original version of the sequence.  Likewise for the successive mutations.\n\nKey function\n------------\n\nYou can also pass a callable as the :code:`key` keyword argument to :code:`dam_lev.get_changes`.  Similar to\n:code:`list.sort`, this callable will be used to compare the elements of the sequences.  For example,\n\n.. code-block:: python\n\n    diffs = dam_lev.get_changes('aBc', 'AbC', key=str.upper)\n    print(diffs) # []\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "diff",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dam-lev",
            "package_url": "https://pypi.org/project/dam-lev/",
            "platform": null,
            "project_url": "https://pypi.org/project/dam-lev/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/dam-lev/0.1.0/",
            "requires_dist": [
                "tox ; extra == 'test'",
                "pytest ; extra == 'test'",
                "black ; extra == 'test'",
                "mypy ; extra == 'test'"
            ],
            "requires_python": ">=3.8",
            "summary": "Implements the Damerau\u2013Levenshtein diff algorithm",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15875336,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4b992634976661b956dde29d778ca8ce",
                    "sha256": "fcc4b8ae97e1ae8b692bccdbb5fe4a09f56f6c7eacae146d74273bc317d84452"
                },
                "downloads": -1,
                "filename": "dam_lev-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4b992634976661b956dde29d778ca8ce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 3911,
                "upload_time": "2022-11-24T05:59:57",
                "upload_time_iso_8601": "2022-11-24T05:59:57.223241Z",
                "url": "https://files.pythonhosted.org/packages/bf/5b/9ba82a268d93189fc60fd308c307b31dd02e4f18adb7079a1daf5e288495/dam_lev-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "54e5d528bf1749de7ecb1b1dac7f726b",
                    "sha256": "5b57692bd039aaae6f5ca280f333563bf0a69337de84c7213b7cd7682d2f0ae2"
                },
                "downloads": -1,
                "filename": "dam_lev-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "54e5d528bf1749de7ecb1b1dac7f726b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 3602,
                "upload_time": "2022-11-24T05:59:58",
                "upload_time_iso_8601": "2022-11-24T05:59:58.965248Z",
                "url": "https://files.pythonhosted.org/packages/68/64/5884f3c0cc706d634e4f5b65834b143832606add2530515d342f2fb525f5/dam_lev-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}