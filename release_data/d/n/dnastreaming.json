{
    "2.0.0": {
        "info": {
            "author": "Chris Flesche",
            "author_email": "chris.flesche@dowjones.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/dowjones/dj-dna-streams-python",
            "keywords": "DOWJONES,FACTIVA,STREAMS",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dnaStreaming",
            "package_url": "https://pypi.org/project/dnaStreaming/",
            "platform": "",
            "project_url": "https://pypi.org/project/dnaStreaming/",
            "project_urls": {
                "Download": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
                "Homepage": "https://github.com/dowjones/dj-dna-streams-python"
            },
            "release_url": "https://pypi.org/project/dnaStreaming/2.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Dow Jones DNA Streaming Project",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8802025,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "241b4d38573e568c21c300dc2d0171c9",
                    "sha256": "b09352f091124f67227aa464cc8a72d22b79a1e7cad3945de33f0634178a55b5"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.0-py3.7.egg",
                "has_sig": false,
                "md5_digest": "241b4d38573e568c21c300dc2d0171c9",
                "packagetype": "bdist_egg",
                "python_version": "3.7",
                "requires_python": null,
                "size": 28611,
                "upload_time": "2020-05-12T14:24:52",
                "upload_time_iso_8601": "2020-05-12T14:24:52.436989Z",
                "url": "https://files.pythonhosted.org/packages/f4/ff/f5605dbd4061d043e9b5252cb61a74004e513267ec3b4d8b6c4ef8ba5538/dnaStreaming-2.0.0-py3.7.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5262b56b4e7cef4d1f5730a6e38bc64",
                    "sha256": "804126ab9ee3f46c42da708ac83388014ca725cdb5456c0cc3298c0c6cb69d2e"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "d5262b56b4e7cef4d1f5730a6e38bc64",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9783,
                "upload_time": "2020-05-12T07:33:53",
                "upload_time_iso_8601": "2020-05-12T07:33:53.938770Z",
                "url": "https://files.pythonhosted.org/packages/d9/6c/d989a8ac83b58703c08272a1ebd28062549bc0586dc031108acca6e6fece/dnaStreaming-2.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Chris Flesche",
            "author_email": "chris.flesche@dowjones.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/dowjones/dj-dna-streams-python",
            "keywords": "DOWJONES,FACTIVA,STREAMS",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dnaStreaming",
            "package_url": "https://pypi.org/project/dnaStreaming/",
            "platform": "",
            "project_url": "https://pypi.org/project/dnaStreaming/",
            "project_urls": {
                "Download": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
                "Homepage": "https://github.com/dowjones/dj-dna-streams-python"
            },
            "release_url": "https://pypi.org/project/dnaStreaming/2.0.1/",
            "requires_dist": [
                "googleapis-common-protos (>=1.6.0)",
                "google-auth (>=1.7.0)",
                "google-cloud-pubsub (==1.7.0)",
                "google-cloud-core (==1.3.0)",
                "google-api-core (==1.22.4)",
                "mock (>=3.0.5)",
                "oauth2client (>=4.1.3)",
                "requests (>=2.22.0)"
            ],
            "requires_python": "",
            "summary": "Dow Jones DNA Streaming Project",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8802025,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7c700f526080fb324675fd74976aa35b",
                    "sha256": "b0ef4e2f11f027614ae1be3f93e9f895dc017c113b0776983a8f6025130c28d4"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.1-py3.9.egg",
                "has_sig": false,
                "md5_digest": "7c700f526080fb324675fd74976aa35b",
                "packagetype": "bdist_egg",
                "python_version": "3.9",
                "requires_python": null,
                "size": 30806,
                "upload_time": "2020-12-02T02:09:51",
                "upload_time_iso_8601": "2020-12-02T02:09:51.705992Z",
                "url": "https://files.pythonhosted.org/packages/9a/6e/67ce6953354039f813414601a0318e492fe0945afecb352847cd41fafd2c/dnaStreaming-2.0.1-py3.9.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c5172c0b04a4c87d574beb2e97d56aa9",
                    "sha256": "1c65a856bde012ecb577244231ce5aa219b1dcc899d56a7facdabdb9ec9e0cec"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c5172c0b04a4c87d574beb2e97d56aa9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 13926,
                "upload_time": "2020-11-03T15:46:45",
                "upload_time_iso_8601": "2020-11-03T15:46:45.130398Z",
                "url": "https://files.pythonhosted.org/packages/8e/ae/f781686fc11754357ccc81f4fa90381d11fdb030840f7c626685e993475a/dnaStreaming-2.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f2eab7bc73ae0f87a887b999f8439a7e",
                    "sha256": "e1521097fd3d31ac4ba7638b05d09521891a5307b1292c7a16067633e235bd21"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f2eab7bc73ae0f87a887b999f8439a7e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9773,
                "upload_time": "2020-11-03T15:46:46",
                "upload_time_iso_8601": "2020-11-03T15:46:46.447004Z",
                "url": "https://files.pythonhosted.org/packages/2a/35/2bfbb068950a76f456af29fa0cf1f40476680a56536692f50abeebc00a76/dnaStreaming-2.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.2": {
        "info": {
            "author": "Zachary Kagan",
            "author_email": "zachary.kagan@dowjones.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3"
            ],
            "description": "How To Use\n----------\n\nThis a Python3 library is for Dow Jones customers consuming data from a Dow Jones Factiva Stream.\n\nTo use this we recommend 'pip installing' this by making the following addition to your requirements.txt:\n\n.. code-block::\n\n    git+https://git@github.com/dowjones/dj-dna-streams-python#egg=dj-dna-streams-python\n\n\nAuth\n-----------\n\nThere are general two ways to authenticate.\n\n- Your User Key\n\n- UserId, ClientId, and Password\n\n\nConfiguring\n___________\n\nTo run this code, you need to provide credentials from one of the authentication methods and your subscriptions. There are 3 ways to do this. You can either set environment variables or you can use a configuration file.\n\n1. Set environment variables.\n###################################################################\n\nTo set your service account credentials, set either:\n\n- An environment variable named 'USER_KEY'.\n- Three environment variable named 'USER_ID', 'CLIENT_ID', and 'PASSWORD'.\n\nTo set your subscription ID, simply set an environment variable named 'SUBSCRIPTION_ID' like so\n\n.. code-block::\n\n    export SUBSCRIPTION_ID=\"ABC1234567889\"\n\n\nThe code above is the command line expression for setting this environment variable on Mac OSX. Other operating systems might have a slightly different techniques for setting environment variables on the command line.\n\n2. Using the configuration file.\n###################################################################\n\nIn this codebase you will find a file named 'customer_config.json'. You are not required to use this file. If you prefer to use this configuration file, follow these directions: Open this file and add your service account credentials. Then add your subscription IDs. Remember that this is a JSON file so follow basic JSON formatting and syntax conventions.\n\n3. Pass in variables as function arguments.\n###################################################################\n\nYou may pass your service account credentials (user_id, client_id, and password) to the Listener constructor like so:\n\n.. code-block:: python\n\n    from dnaStreaming.listener import Listener\n    # User key authentication\n    listener = Listener(user_key=<YOUR USER KEY>)\n\n    # UserId, ClientId and Password authentication\n    listener = Listener(user_id=<YOUR USER ID>, client_id=<YOUR_CLIENT_ID>, password=<YOUR_PASSWORD>)\n\n\nOr you may use the environment variables.\nRemember that passing credentials and subscription ID(s) in this way will override the environment variable and the config file settings.\n\n.. code-block:: python\n\n    from dnaStreaming.listener import Listener\n\n    listener = Listener()\n\n\n4. Listening to messages\n###################################################################\n\nYou may want to listen messages synchronously like so:\n\n.. code-block:: python\n\n    def callback(message, subscription_id):\n        print('Subscription ID: {}: Message: {}'.format(subscription_id, message.data.__str__()))\n        return True  # If desired return False to stop the message flow. This will unblock the process as well.\n\n    listener.listen(callback, maximum_messages=10)  # Omitting maximum_messages means you will continue to get messages as they appear. Can be a firehose. Use with caution.\n    # You may pass subscription ID as a parameter to the listen function\n\n\nYou may want to listen messages asynchronously like so:\n\n.. code-block:: python\n\n    def callback(message, subscription_id):\n        print('Subscription ID: {}: Message: {}'.format(subscription_id, message.data.__str__()))\n\n    future = listener.listen_async(callback)\n    # After calling `listed_async` you need to keep the main thread alive.\n\n    for count in range(0, 5):\n        sleep(1)\n\n    # Stop receiving messages after 5 seconds\n    if future.running():\n        future.cancel()\n\n\nLog Files\n_________\n\nVery minimal logging is written to the module's path 'logs/dj-dna-streaming-python.log'. To keep maintenance simple this log is overwritten every time the app starts.\n\n\nTesting\n_______\n\n.. code-block::\n\n    cd dnaStreaming/test\n    pip install -r requirements.txt\n    py.test . -s\n\n\nor, alternatively, to test against python2.7 and python3.5:\n\n.. code-block::\n\n    tox\n\n\nFlake8\n______\n\nIf you are maintaining this library, ensure you run flake8 before you commit. At project root command line:\n\n.. code-block::\n\n    flake8 ./dnaStreaming ./tests\n\n\nRunning the Demonstration Code/Development\n__________________________________________\n\nIf you are enhancing this codebase (and not just using it as a library), follow these example MacOS steps:\n\n1. Checkout the Project from Git.\n###################################################################\n\n2. Go to the Project Root.\n###################################################################\n\n3. Create a Virtual Environment.\n###################################################################\n\n.. code-block::\n\n    virtualenv venv\n\n\n4. Then activate the virutal environment by executing this command:\n###################################################################\n\n.. code-block::\n\n    source ./venv/bin/activate\n\n\n5. Install the Dependencies\n###################################################################\n\n.. code-block::\n\n    pip install -r requirements.txt\n\n\n6. Install the App:\n###################################################################\n\n.. code-block::\n\n    python setup.py install\n\n\n7. Set the Configuration Variables\n###################################################################\n\nSee the config section.\n\n8. Run the Demo Code\n###################################################################\n\nRunning Non-Docker Demo:\n\nExecute the following at the project root:\n\n.. code-block::\n\n    python ./dnaStreaming/demo/show_stream.py -s\n\n\nOr\n\n.. code-block::\n\n    python ./dnaStreaming/demo/show_stream_async.py -s\n\n\nIf you are having `ImportError:  No module named ...` run this in your terminal before running the demo:\n\n.. code-block::\n\n    export PYTHONPATH='.'\n\n\nRunning Docker Demo\n\nExecute the following at the project root:\n\n.. code-block::\n\n    docker build -f ./DockerfileDemo -t dj-dna-streaming-python .\n\n    docker run -it \\\n    -e USER_ID=<your user ID> \\\n    -e CLIENT_ID=<your client ID> \\\n    -e PASSWORD=<your password> \\\n    -e SUBSCRIPTION_ID=<your subscription ID> \\\n    dj-dna-streaming-python\n\nor:\n\n.. code-block::\n\n    docker run -it \\                    \n    -e USER_KEY=<your user KEY> \\\n    -e SUBSCRIPTION_ID=<your subscription ID> \\\n    dj-dna-streaming-python\n\n\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/dowjones/dj-dna-streams-python",
            "keywords": "DOWJONES,FACTIVA,STREAMS",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dnaStreaming",
            "package_url": "https://pypi.org/project/dnaStreaming/",
            "platform": "",
            "project_url": "https://pypi.org/project/dnaStreaming/",
            "project_urls": {
                "Download": "https://github.com/dowjones/dj-dna-streams-python/archive/release-2.0.0.tar.gz",
                "Homepage": "https://github.com/dowjones/dj-dna-streams-python"
            },
            "release_url": "https://pypi.org/project/dnaStreaming/2.0.2/",
            "requires_dist": [
                "googleapis-common-protos (>=1.6.0)",
                "google-auth (>=1.7.0)",
                "google-cloud-pubsub (==1.7.0)",
                "google-cloud-core (==1.3.0)",
                "google-api-core (==1.22.4)",
                "mock (>=3.0.5)",
                "oauth2client (>=4.1.3)",
                "requests (>=2.22.0)"
            ],
            "requires_python": "",
            "summary": "Dow Jones DNA Streaming Project",
            "version": "2.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8802025,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "27c4e15b7dd4cc97fee3776e591d7fa7",
                    "sha256": "2914c828f0556219d35d5c7c8449ef767dd3bd0d52cd99fdc82c18b2fe95127f"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "27c4e15b7dd4cc97fee3776e591d7fa7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 16014,
                "upload_time": "2020-12-02T15:43:30",
                "upload_time_iso_8601": "2020-12-02T15:43:30.538429Z",
                "url": "https://files.pythonhosted.org/packages/86/ed/c261d6a972dbae5710b5162330544578f02882f46ea283cbee5df3152b57/dnaStreaming-2.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "38a476f19d45fd391df48b8ff34adeec",
                    "sha256": "864c938a5aeadd20c81550479cd22c20f26c1bf62dd733a04acff67c485e0f0f"
                },
                "downloads": -1,
                "filename": "dnaStreaming-2.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "38a476f19d45fd391df48b8ff34adeec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13169,
                "upload_time": "2020-12-02T15:43:32",
                "upload_time_iso_8601": "2020-12-02T15:43:32.013741Z",
                "url": "https://files.pythonhosted.org/packages/48/3f/dc3deaac567313af2ebbbaa17a84de7b40a347e3f8b6058daddec4f6f460/dnaStreaming-2.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}