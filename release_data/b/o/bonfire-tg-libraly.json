{
    "1.0.7": {
        "info": {
            "author": "Alex_Stepens",
            "author_email": "ianacist01@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Help-urself/bonfire",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bonfire-tg-libraly",
            "package_url": "https://pypi.org/project/bonfire-tg-libraly/",
            "platform": null,
            "project_url": "https://pypi.org/project/bonfire-tg-libraly/",
            "project_urls": {
                "Homepage": "https://github.com/Help-urself/bonfire"
            },
            "release_url": "https://pypi.org/project/bonfire-tg-libraly/1.0.7/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Speed telegram api libraly",
            "version": "1.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15832037,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "357d3d8c9a818e4806a2c7b29a3fc26d",
                    "sha256": "0bcf3cac57442d6ff131030724dc42421802b9d6e1365c204e2e0f898bbc2cf1"
                },
                "downloads": -1,
                "filename": "bonfire_tg_libraly-1.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "357d3d8c9a818e4806a2c7b29a3fc26d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10407,
                "upload_time": "2022-11-20T15:47:22",
                "upload_time_iso_8601": "2022-11-20T15:47:22.504820Z",
                "url": "https://files.pythonhosted.org/packages/d2/75/5fe370eea41904085001dc1b0d1ee4a5020056cab9a2d97466042165746e/bonfire_tg_libraly-1.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a1e4dc8ad20b4c65e2ccd97b2e523eab",
                    "sha256": "8d4c90b71d3507d71bda8bce442026d56f2b5d26916f4d4afe5275f57cf128b3"
                },
                "downloads": -1,
                "filename": "bonfire_tg_libraly-1.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "a1e4dc8ad20b4c65e2ccd97b2e523eab",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 8739,
                "upload_time": "2022-11-20T15:47:25",
                "upload_time_iso_8601": "2022-11-20T15:47:25.129270Z",
                "url": "https://files.pythonhosted.org/packages/e7/04/96eb8561c5b685ac04e48198f6255fdee291f9fc3475c47b241e93388f1b/bonfire_tg_libraly-1.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.8": {
        "info": {
            "author": "Alex_Stepens",
            "author_email": "ianacist01@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# bonfire\r\n\r\n\r\n\r\n\r\nbonfire this framework for [Telegram Bot API](https://core.telegram.org/bots/api) built on [flask](https://flask.palletsprojects.com/en/2.2.x/ ) and [requests](https://requests.readthedocs.io/en/latest/) <br>\r\n**Ukrainian launge translate -> [click](https://github.com/Help-urself/bonfire/blob/main/Uk.md)**<br>\r\n**instaling**\r\n```python \r\ngit clone https://github.com/Help-urself/bonfire\r\n```\r\nor\r\n\r\n```python \r\npip install -i https://test.pypi.org/simple/ bonfire-tg-libraly\r\n\r\n```\r\n\r\n\r\n## Examples\r\n<details>\r\n  <summary> Click </summary>\r\n\r\n\r\n**1.install interceptor**\r\n- install [ngrok](https://ngrok.com/) and start the server according to the instructions on the website.\r\n- set webhook `https://api.telegram.org/botTOKEN/setWebhook?url=you url ngrok/hosting url`\r\n\r\n### Simple [`send_message`](https://core.telegram.org/method/messages.sendMessage) request\r\n\r\n```python\r\n#git clone\r\nimport os\r\nimport sys\r\nsys.path.append(os.path.abspath('your campfire folder path'))\r\nimport Bot\r\nfrom Bot import Bots,commands,run\r\nfrom flask import Flask\r\nfrom method import *\r\nimport time\r\nfrom flask import request,Response\r\nimport requests\r\napp = Flask(__name__)\r\nbot=Bots(\"TOKEN\")#setting up a token for requests\r\n\r\n@commands(app)#message handler\r\ndef main():#the main name can be anything, it doesn't matter\r\n try:\r\n    message=request.get_json()#receive a message\r\n    chat_id,text,message_id,message_author_username,message_author_id,message_author_is_bot,message_author_first_name,message_author_language_code,message_date=parse_message(message=message)#methods message\r\n    if \"/start\" in text: #/start command handler\r\n        send_message(bot=bot,chat_id=chat_id,text=f'hello @{message_author_username}!')#send message\r\n except Exception as error:\r\n     print(error)\r\n return Response('OK', status=200)#return to cmd (POST/ 200 OK)\r\n\r\nif __name__ == '__main__':\r\n       run(app)#app.run(port=8080,host=\"0.0.0.0\",debug=True)\r\n```\r\n\r\n```py\r\n#pip install\r\nfrom bonfire.Bot import Bots,commands,run\r\nfrom flask import Flask\r\nfrom bonfire.method import *\r\nimport time\r\nfrom flask import request,Response\r\nimport requests\r\napp = Flask(__name__)\r\nbot=Bots(\"TOKEN\")#setting up a token for requests\r\n\r\n@commands(app)#message handler\r\ndef main():#the main name can be anything, it doesn't matter\r\n try:\r\n    message=request.get_json()#receive a message\r\n    chat_id,text,message_id,message_author_username,message_author_id,message_author_is_bot,message_author_first_name,message_author_language_code,message_date=parse_message(message=message)#methods message\r\n    if \"/start\" in text: #/start command handler\r\n        send_message(bot=bot,chat_id=chat_id,text=f'hello @{message_author_username}!')#send message\r\n except Exception as error:\r\n     print(error)\r\n return Response('OK', status=200)#return to cmd (POST/ 200 OK)\r\n\r\nif __name__ == '__main__':\r\n       run(app)#app.run(port=8080,host=\"0.0.0.0\",debug=True)\r\n       \"\"\"set-webhook - > https://api.telegram.org/botTOKEN/setWebhook?url=URL\"\"\"\r\n```\r\n\r\n  </details>\r\n\r\n## Documentation (in development)\r\n<details>\r\n  <summary> Click </summary>\r\n\r\n\r\n### functions\r\n\r\n**send_message**\r\n\r\n```python \r\ndef send_message(bot,chat_id,text):\r\n  ```\r\n  -**bot** - keyword where you store the token<br>\r\n  -**chat_id** - you can use your chat id or use the chat_id method<br>\r\n  -**text** - \r\nyour message text<br>\r\n  -**parse_mode**(\tOptional ) - parse mode in HTML (optional)\r\n  <details>\r\n  <summary> example </summary>\r\n\r\n```python \r\n#without parse_mode\r\nsend_message(bot=bot,chat_id=chat_id,text=f'hello :)')\r\n#with parse_mode\r\nsend_message(bot=bot,chat_id=chat_id,text=f'<b>hello :)<b>',parse_mode='HTML') #make text bold\r\n  ```\r\n\r\n   </details>\r\n    <br>\r\n    <br>\r\n\r\n **reply_message**\r\n\r\n```python \r\ndef reply_message(bot,chat_id,msg_id,text,parse_mode):\r\n  ```\r\n  -**bot** - keyword where you store the token<br>\r\n  -**chat_id** - you can use your chat id or use the chat_id method<br>\r\n  -**text** - your message text<br>\r\n  -**msg_id** - you can use your message id or use the message_id method <br>\r\n  -**parse_mode**(\tOptional ) - parse mode in HTML (optional)\r\n  <details>\r\n  <summary> example </summary>\r\n\r\n```python \r\n#without parse_mode\r\nreply_message(bot,msg_id=message_id,chat_id=chat_id,text=\"reply message ._.\")\r\n#with parse_mode\r\nreply_message(bot,msg_id=message_id,chat_id=chat_id,text=\"<b>reply message is bold .-.</b>\",parse_mode=\"HTML\")#make text bold\r\n  ```\r\n\r\n   </details>\r\n    <br>\r\n    <br>\r\n\r\n**send_sticker**\r\n```python \r\ndef send_sticker(bot,chat_id,sticker):\r\n  ```\r\n  -**bot** - keyword where you store the token<br>\r\n  -**chat_id** - you can use your chat id or use the chat_id method<br>\r\n  -**sticker** -unique sticker key, you can get it from [idstickerbot](https://t.me/idstickerbot)<br>\r\n\r\n  <details>\r\n  <summary> example </summary>\r\n\r\n```python \r\nsend_sticker(bot,chat_id=chat_id,sticker=\"CAACAgIAAxkBAAEGdwNjd-IwPaLBzeqJW1DJvDLGnYOJpwACQBMAAvZDSUjqTxpxhtdlhisE\")\r\n  ```\r\n\r\n   </details>\r\n   <br>\r\n   <br>\r\n\r\n**delete_message**\r\n```python \r\ndef delete_message(bot,chat_id,msg_id):\r\n  ```\r\n  -**bot** - keyword where you store the token<br>\r\n  -**chat_id** - you can use your chat id or use the chat_id method<br>\r\n  -**msg_id** - you can use your message id or use the message_id method <br>\r\n\r\n\r\n  <details>\r\n  <summary> example </summary>\r\n\r\n```python \r\n\r\ndelete_message(bot,msg_id=message_id,chat_id=chat_id) #this code will only work in a private chat, so that it would work for the bot to have the right to delete messages or replace message_id with reply_message_id, you can find an example in the folder example->delete_message.py\r\n\r\n  ```\r\n\r\n   </details>\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Help-urself/bonfire",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "bonfire-tg-libraly",
            "package_url": "https://pypi.org/project/bonfire-tg-libraly/",
            "platform": null,
            "project_url": "https://pypi.org/project/bonfire-tg-libraly/",
            "project_urls": {
                "Homepage": "https://github.com/Help-urself/bonfire"
            },
            "release_url": "https://pypi.org/project/bonfire-tg-libraly/1.0.8/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Speed telegram api libraly",
            "version": "1.0.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15832037,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "21cdffbfece71aa0fca8b902ed654a4f",
                    "sha256": "6f657eac7987b34f2bc40923f2c2c89601f189d60b8b31b880abbb55368093d3"
                },
                "downloads": -1,
                "filename": "bonfire_tg_libraly-1.0.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "21cdffbfece71aa0fca8b902ed654a4f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10419,
                "upload_time": "2022-11-20T16:17:25",
                "upload_time_iso_8601": "2022-11-20T16:17:25.174041Z",
                "url": "https://files.pythonhosted.org/packages/1c/eb/fb536917fc2092082499153d1064eb2e42c3e5c2bea2fc5e121789dd5cb1/bonfire_tg_libraly-1.0.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d747ad6675ed98499d007a793f3365ee",
                    "sha256": "03201ae687b0f320216287067b8365aa43e3425c0f191bda46819996bfacc8d6"
                },
                "downloads": -1,
                "filename": "bonfire_tg_libraly-1.0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "d747ad6675ed98499d007a793f3365ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 8772,
                "upload_time": "2022-11-20T16:17:27",
                "upload_time_iso_8601": "2022-11-20T16:17:27.951469Z",
                "url": "https://files.pythonhosted.org/packages/55/aa/a09e68a7da9292e530feca7cdfd48149dcf7bbdc17f9640b83ef34449348/bonfire_tg_libraly-1.0.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}