{
    "0.1.0": {
        "info": {
            "author": "\u5f20\u5927\u9e4f",
            "author_email": "lxgzhw@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zhangdapeng520/zdpapi_mysql",
            "keywords": "zapi,mysql,async,zhangdapeng",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zdpapi-mysql",
            "package_url": "https://pypi.org/project/zdpapi-mysql/",
            "platform": "",
            "project_url": "https://pypi.org/project/zdpapi-mysql/",
            "project_urls": {
                "Documentation": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Homepage": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Repository": "https://github.com/zhangdapeng520/zdpapi_mysql"
            },
            "release_url": "https://pypi.org/project/zdpapi-mysql/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "\u57fa\u4e8e\u5f02\u6b65\u7684\u5feb\u901f\u64cd\u4f5cMySQL\u7684\u7ec4\u4ef6",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12212022,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a081c010106bc6b130cc9c1dc5b1b8eb",
                    "sha256": "bf12feeb223fa393d56a39053ab55ff68d19ff4bfe6835a5a628a091030ab919"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a081c010106bc6b130cc9c1dc5b1b8eb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 68346,
                "upload_time": "2021-12-03T05:36:11",
                "upload_time_iso_8601": "2021-12-03T05:36:11.038856Z",
                "url": "https://files.pythonhosted.org/packages/f9/0f/7b2e631282746c0c2dab58d7394641dcb0d86dfa3997bafc6dca2d37c6a8/zdpapi_mysql-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "79dde8761f28dfd99fb8d5f042294895",
                    "sha256": "4d1abea4ef11be580581d36cfc179a4accd60b0c7cdcfd1c1562612473ac7d14"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "79dde8761f28dfd99fb8d5f042294895",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 61995,
                "upload_time": "2021-12-03T05:36:12",
                "upload_time_iso_8601": "2021-12-03T05:36:12.953211Z",
                "url": "https://files.pythonhosted.org/packages/57/ce/ac46752ab4164b05baa6cf991f6fbd0fbf6de46c614058e2ff7224a77cf7/zdpapi_mysql-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "\u5f20\u5927\u9e4f",
            "author_email": "lxgzhw@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zhangdapeng520/zdpapi_mysql",
            "keywords": "zapi,mysql,async,zhangdapeng",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zdpapi-mysql",
            "package_url": "https://pypi.org/project/zdpapi-mysql/",
            "platform": "",
            "project_url": "https://pypi.org/project/zdpapi-mysql/",
            "project_urls": {
                "Documentation": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Homepage": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Repository": "https://github.com/zhangdapeng520/zdpapi_mysql"
            },
            "release_url": "https://pypi.org/project/zdpapi-mysql/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "\u57fa\u4e8e\u5f02\u6b65\u7684\u5feb\u901f\u64cd\u4f5cMySQL\u7684\u7ec4\u4ef6",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12212022,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fdc97aa715061d7c7c9eaffcc0cf07cb",
                    "sha256": "aefe8963c62f679d1057a6aa3f9cbbea04a9259ba0441ef883e70b352f617e06"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fdc97aa715061d7c7c9eaffcc0cf07cb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 70839,
                "upload_time": "2021-12-04T09:36:31",
                "upload_time_iso_8601": "2021-12-04T09:36:31.739699Z",
                "url": "https://files.pythonhosted.org/packages/91/9f/6749878c12dcfa352e26bce00ca9857eb468ca1c472f24ef7eb68a0c3dc3/zdpapi_mysql-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "794898ec844474cce10d1d9409565245",
                    "sha256": "37e07663600ff58ecbe61130fa1fdf4a3cd9b378d9079d2aa7314ac1caf222cc"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "794898ec844474cce10d1d9409565245",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 65842,
                "upload_time": "2021-12-04T09:36:34",
                "upload_time_iso_8601": "2021-12-04T09:36:34.293309Z",
                "url": "https://files.pythonhosted.org/packages/21/62/5d8f44851ce355cffd76fb99133cc30f90da5030324ddb69b8ca99a47a32/zdpapi_mysql-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "\u5f20\u5927\u9e4f",
            "author_email": "lxgzhw@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zhangdapeng520/zdpapi_mysql",
            "keywords": "zapi,mysql,async,zhangdapeng",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zdpapi-mysql",
            "package_url": "https://pypi.org/project/zdpapi-mysql/",
            "platform": "",
            "project_url": "https://pypi.org/project/zdpapi-mysql/",
            "project_urls": {
                "Documentation": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Homepage": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Repository": "https://github.com/zhangdapeng520/zdpapi_mysql"
            },
            "release_url": "https://pypi.org/project/zdpapi-mysql/1.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "\u57fa\u4e8e\u5f02\u6b65\u7684\u5feb\u901f\u64cd\u4f5cMySQL\u7684\u7ec4\u4ef6",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12212022,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "52d3122fe4a6e61ae6815f05669dd5cd",
                    "sha256": "b3deab48d3771914fb5925cf80d660254374bb61150e2a0893bffa18de35f45f"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "52d3122fe4a6e61ae6815f05669dd5cd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 71109,
                "upload_time": "2021-12-04T16:58:50",
                "upload_time_iso_8601": "2021-12-04T16:58:50.073857Z",
                "url": "https://files.pythonhosted.org/packages/03/8e/44d70a61e5a1b1f8b18272b9adb38d2759af99042e7b7674c6805a23eafb/zdpapi_mysql-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bd7b05fab6901934b8bb9bb340d138b0",
                    "sha256": "7949081ad94163334e5114bd379a68a35037eaf5343ef2b90370c6ab2e0da10b"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bd7b05fab6901934b8bb9bb340d138b0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 66171,
                "upload_time": "2021-12-04T16:58:52",
                "upload_time_iso_8601": "2021-12-04T16:58:52.298627Z",
                "url": "https://files.pythonhosted.org/packages/34/fc/2f6c77d655f7ac4591efd5f42e2a23c0860d03571a0c1e43f749febd02bf/zdpapi_mysql-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "\u5f20\u5927\u9e4f",
            "author_email": "lxgzhw@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# zapi_mysql\n\u57fa\u4e8e\u5f02\u6b65\u7684\u5feb\u901f\u64cd\u4f5cMySQL\u7684\u7ec4\u4ef6\n\n\u9879\u76ee\u5730\u5740\uff1a https://github.com/zhangdapeng520/zdpapi_mysql\n\n\u4f7f\u7528pip\u5b89\u88c5\n```shell\npip install zapi_mysql\n```\n\n## \u4e00\u3001\u589e\u5220\u6539\u6570\u636e\n\n### 1.1 \u521b\u5efa\u8868\n```python\nimport asyncio\nfrom zapi_mysql import Mysql\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\n\nasync def test_example_execute(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n    \n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user\n                                  (id INT,\n                                  name VARCHAR(255),\n                                  PRIMARY KEY (id));\"\"\"\n    await db.execute(sql)\n    \n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_example_execute(loop))\n```\n\n### 1.2 \u63d2\u5165\u6570\u636e\n```python\nimport asyncio\nfrom zapi_mysql import Mysql\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\n\nasync def test_example_execute(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(2,'\u674e\u56db')\"\n    await db.execute(sql)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_example_execute(loop))\n```\n\n### 1.3 \u6279\u91cf\u63d2\u5165\u6570\u636e\n```python\nimport asyncio\nfrom zapi_mysql import Mysql\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\n\nasync def test_example_execute(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(4, 'gothic metal'), (5, 'doom metal'), (6, 'post metal')]\n    sql = \"INSERT INTO user VALUES(%s,%s)\"\n    await db.execute(sql, data=data)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_example_execute(loop))\n```\n\n## \u4e8c\u3001\u67e5\u8be2\u6570\u636e\n\n### 2.1 \u67e5\u8be2\u6240\u6709\u6570\u636e\n```python\nimport asyncio\nfrom zapi_mysql import Mysql\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\n\nasync def test_example_execute(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"SELECT id, name FROM user ORDER BY id\"\n    result = await db.execute(sql)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_example_execute(loop))\n```\n\n### 2.2 \u67e5\u8be2\u5355\u6761\u6570\u636e\n```python\nimport asyncio\nfrom zapi_mysql import Mysql\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\n\nasync def test_example_execute(loop):\n    # \u67e5\u8be2\u5355\u6761\u6570\u636e\n    sql = \"SELECT id, name FROM user ORDER BY id\"\n    result = await db.execute(sql, return_all=False)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(test_example_execute(loop))\n```\n\n## \u4e09\u3001CRUD\u5feb\u6377\u5de5\u5177\n\n### 3.1 \u65b0\u589e\u7528\u6237\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n\n```\n\n### 3.2 \u6dfb\u52a0\u591a\u6761\u6570\u636e\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n    \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n\n```\n\n### 3.3 \u6839\u636eID\u5220\u9664\u6570\u636e\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n    \nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n    \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n\n```\n\n### 3.4 \u6839\u636eID\u5217\u8868\u5220\u9664\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n    \nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n    \nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3,4,5))\n    \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n```\n\n### 3.5 \u66f4\u65b0\u591a\u6761\u6570\u636e\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n    \nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n    \nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3,4,5))\n    \nasync def test_update(loop):\n    # \u6839\u636eID\u66f4\u65b0\u6570\u636e\n    await crud.update(6, {\"name\":\"\u4e8c\u90ce\u795e111\"})\n    \nasync def test_update_many(loop):\n    # \u66f4\u65b0\u591a\u6761\u6570\u636e\n    data=[\n        {\"id\":6, \"name\":\"\u732a\u516b\u6212\"},\n        {\"id\":7, \"name\":\"\u5ae6\u5a25\"},\n    ]\n    await crud.update_many(data)\n   \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n    loop.run_until_complete(test_update(loop))\n    loop.run_until_complete(test_update_many(loop))\n```\n\n### 3.6 \u67e5\u8be2\u5355\u6761\u6570\u636e\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n    \nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n    \nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3,4,5))\n    \nasync def test_update(loop):\n    # \u6839\u636eID\u66f4\u65b0\u6570\u636e\n    await crud.update(6, {\"name\":\"\u4e8c\u90ce\u795e111\"})\n    \nasync def test_update_many(loop):\n    # \u66f4\u65b0\u591a\u6761\u6570\u636e\n    data=[\n        {\"id\":6, \"name\":\"\u732a\u516b\u6212\"},\n        {\"id\":7, \"name\":\"\u5ae6\u5a25\"},\n    ]\n    await crud.update_many(data)\n\nasync def test_find_one(loop):\n    # \u67e5\u8be2\u5355\u6761\u6570\u636e\n    result = await crud.find(6)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n   \n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n    loop.run_until_complete(test_update(loop))\n    loop.run_until_complete(test_update_many(loop))\n    loop.run_until_complete(test_find_one(loop))\n```\n\n### 3.8 \u6839\u636eID\u5217\u8868\u67e5\u8be2\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n\n\nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n\n\nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3, 4, 5))\n\n\nasync def test_update(loop):\n    # \u6839\u636eID\u66f4\u65b0\u6570\u636e\n    await crud.update(6, {\"name\": \"\u4e8c\u90ce\u795e111\"})\n\n\nasync def test_update_many(loop):\n    # \u66f4\u65b0\u591a\u6761\u6570\u636e\n    data = [\n        {\"id\": 6, \"name\": \"\u732a\u516b\u6212\"},\n        {\"id\": 7, \"name\": \"\u5ae6\u5a25\"},\n    ]\n    await crud.update_many(data)\n\n\nasync def test_find_one(loop):\n    # \u67e5\u8be2\u5355\u6761\u6570\u636e\n    result = await crud.find(6)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nasync def test_find_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u67e5\u8be2\n    result = await crud.find_ids([6, 7, 8])\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n    loop.run_until_complete(test_update(loop))\n    loop.run_until_complete(test_update_many(loop))\n    loop.run_until_complete(test_find_one(loop))\n    loop.run_until_complete(test_find_ids(loop))\n```\n\n### 3.9 \u5206\u9875\u67e5\u8be2\u6570\u636e\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n\n\nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n\n\nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3, 4, 5))\n\n\nasync def test_update(loop):\n    # \u6839\u636eID\u66f4\u65b0\u6570\u636e\n    await crud.update(6, {\"name\": \"\u4e8c\u90ce\u795e111\"})\n\n\nasync def test_update_many(loop):\n    # \u66f4\u65b0\u591a\u6761\u6570\u636e\n    data = [\n        {\"id\": 6, \"name\": \"\u732a\u516b\u6212\"},\n        {\"id\": 7, \"name\": \"\u5ae6\u5a25\"},\n    ]\n    await crud.update_many(data)\n\n\nasync def test_find_one(loop):\n    # \u67e5\u8be2\u5355\u6761\u6570\u636e\n    result = await crud.find(6)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nasync def test_find_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u67e5\u8be2\n    result = await crud.find_ids([6, 7, 8])\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\nasync def test_find_page(loop):\n    # \u5206\u9875\u67e5\u8be2\u6570\u636e\n    result = await crud.find_page(1, 20)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n    loop.run_until_complete(test_update(loop))\n    loop.run_until_complete(test_update_many(loop))\n    loop.run_until_complete(test_find_one(loop))\n    loop.run_until_complete(test_find_ids(loop))\n    loop.run_until_complete(test_find_page(loop))\n```\n\n### 3.10 \u67e5\u8be2\u603b\u6570\n```python\nimport asyncio\nfrom zdpapi_mysql import Mysql, Crud\ndb = Mysql(host='127.0.0.1',\n           port=3306,\n           user='root',\n           password='root',\n           db='test')\n\ncrud = Crud(db, \"user\", [\"name\"])\n\n\nasync def test_create_table(loop):\n    # \u5220\u9664\u8868\n    await db.connect()\n    sql = \"DROP TABLE IF EXISTS user;\"\n\n    # \u521b\u5efa\u8868\n    await db.execute(sql)\n    sql = \"\"\"CREATE TABLE user(id INT PRIMARY KEY AUTO_INCREMENT, name VARCHAR(255));\"\"\"\n    await db.execute(sql)\n\n    # \u63d2\u5165SQL\u8bed\u53e5\n    sql = \"INSERT INTO user VALUES(1,'\u5f20\u4e09')\"\n    await db.execute(sql)\n\n\nasync def test_insert(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    await crud.add(\"\u674e\u56db\")\n    await crud.add(\"\u738b\u4e94\")\n    await crud.add(\"\u8d75\u516d\")\n\n\nasync def test_insert_many(loop):\n    # \u63d2\u5165SQL\u8bed\u53e5\n    data = [(\"\u5b59\u609f\u7a7a\",), (\"\u732a\u516b\u6212\",), (\"\u6c99\u50e7\",), ]\n    await crud.add_many(data)\n\n\nasync def test_delete(loop):\n    # \u6839\u636eID\u5220\u9664\u6570\u636e\n    await crud.delete(1)\n    await crud.delete(2)\n    await crud.delete(3)\n\n\nasync def test_delete_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u5220\u9664\u6570\u636e\n    await crud.delete_ids((3, 4, 5))\n\n\nasync def test_update(loop):\n    # \u6839\u636eID\u66f4\u65b0\u6570\u636e\n    await crud.update(6, {\"name\": \"\u4e8c\u90ce\u795e111\"})\n\n\nasync def test_update_many(loop):\n    # \u66f4\u65b0\u591a\u6761\u6570\u636e\n    data = [\n        {\"id\": 6, \"name\": \"\u732a\u516b\u6212\"},\n        {\"id\": 7, \"name\": \"\u5ae6\u5a25\"},\n    ]\n    await crud.update_many(data)\n\n\nasync def test_find_one(loop):\n    # \u67e5\u8be2\u5355\u6761\u6570\u636e\n    result = await crud.find(6)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nasync def test_find_ids(loop):\n    # \u6839\u636eID\u5217\u8868\u67e5\u8be2\n    result = await crud.find_ids([6, 7, 8])\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\nasync def test_find_page(loop):\n    # \u5206\u9875\u67e5\u8be2\u6570\u636e\n    result = await crud.find_page(1, 20)\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\nasync def test_find_total(loop):\n    # \u67e5\u8be2\u6570\u636e\u603b\u6570\n    result = await crud.find_total()\n    print(\"\u67e5\u8be2\u7ed3\u679c\uff1a\\n\", result)\n\n\nif __name__ == \"__main__\":\n    loop = asyncio.get_event_loop()\n    loop.run_until_complete(test_create_table(loop))\n    loop.run_until_complete(test_insert(loop))\n    loop.run_until_complete(test_insert_many(loop))\n    loop.run_until_complete(test_delete(loop))\n    loop.run_until_complete(test_delete_ids(loop))\n    loop.run_until_complete(test_update(loop))\n    loop.run_until_complete(test_update_many(loop))\n    loop.run_until_complete(test_find_one(loop))\n    loop.run_until_complete(test_find_ids(loop))\n    loop.run_until_complete(test_find_page(loop))\n    loop.run_until_complete(test_find_total(loop))\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/zhangdapeng520/zdpapi_mysql",
            "keywords": "zapi,mysql,async,zhangdapeng",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zdpapi-mysql",
            "package_url": "https://pypi.org/project/zdpapi-mysql/",
            "platform": "",
            "project_url": "https://pypi.org/project/zdpapi-mysql/",
            "project_urls": {
                "Documentation": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Homepage": "https://github.com/zhangdapeng520/zdpapi_mysql",
                "Repository": "https://github.com/zhangdapeng520/zdpapi_mysql"
            },
            "release_url": "https://pypi.org/project/zdpapi-mysql/1.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "\u57fa\u4e8e\u5f02\u6b65\u7684\u5feb\u901f\u64cd\u4f5cMySQL\u7684\u7ec4\u4ef6",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12212022,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7751a8274438f08872afe4a17daa68f9",
                    "sha256": "74203c9c64e8aa27c164c129b6485605a991160c265fc4971cfd0517a1d91c79"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7751a8274438f08872afe4a17daa68f9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 71228,
                "upload_time": "2021-12-05T02:40:33",
                "upload_time_iso_8601": "2021-12-05T02:40:33.644433Z",
                "url": "https://files.pythonhosted.org/packages/16/02/d5e1079a8bc2f9ca348cd3bfd4af0b64a91810e16b9c959dba023944ff02/zdpapi_mysql-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0990d1bc7e7101f936e98db06f9b2609",
                    "sha256": "8a5204a32ee6774cfee1519c622cc5ff0c271a7a58e2044ae8eb0ce477cce65e"
                },
                "downloads": -1,
                "filename": "zdpapi_mysql-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "0990d1bc7e7101f936e98db06f9b2609",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 66309,
                "upload_time": "2021-12-05T02:40:35",
                "upload_time_iso_8601": "2021-12-05T02:40:35.949613Z",
                "url": "https://files.pythonhosted.org/packages/d3/48/4e4f364e2be4454c382d6e0543d9002ecb613b19c4890635992da3bc4794/zdpapi_mysql-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}