{
    "0.0.2": {
        "info": {
            "author": "MorvanZhou",
            "author_email": "morvanzhou@hotmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# WhenAct\n\nWhenAct is a module that defines a decision pipeline.\n\nThe executing flow looks like:\n\n```text\npolicy0: [when0] > [action0]\npolicy1: [when1] > [action10 > action11]\npolicy2: [when20 > when21] > [action2]\n```\n\nWhen all `when` in one policy set is satisfied, than it runs to it's following `action`. No matter the previous `when`\nis satisfied or not, the next `when` will be checked and executed. When all policies have been checked and executed,\nthis pipeline then finishes.\n\n# Create WhenAct pipeline\n\nBefore create a pipeline, you need to define `when` and `act` function first, then put them in the pipeline.\n\n```python\nimport whenact\n\n@whenact.when\ndef w1(ctx):\n    return True\n\n@whenact.act\ndef a1(ctx):\n    return \"done\"\n\npipeline = whenact.create_pipeline(config=[\n    [w1, a1]\n])\n\nprint(pipeline)\n# p0: [w1] > [a1]\n\nresult = pipeline.run()\nassert result == \"done\"\n```\n\nMore complex pipeline can be like this:\n\n```python\nimport whenact\n\n@whenact.when\ndef w1(ctx):\n    return False\n\n@whenact.when\ndef w2(ctx):\n    return True\n\n@whenact.act\ndef a1(ctx):\n    ctx[\"action\"] = \"a1 action\"\n\n@whenact.act\ndef a2(ctx):\n    ctx[\"action\"] = \"a2 action\"\n\n@whenact.act\ndef a3(ctx):\n    ctx[\"action\"] += \" with a3\"\n\n\npipeline = whenact.create_pipeline(config=[\n    [w1, a1],\n    [w2, a2, a3]\n])\n\nprint(pipeline)\n# p0: [w1] > [a1]\n# p1: [w2] > [a2 > a3]\n\nclass TestContext(whenact.BaseContext):\n    pass\n\nctx = TestContext()\n\nresult = pipeline.run(ctx)\nassert result is None\nassert ctx[\"action\"] == \"a2 action with a3\"\n```\n\nThere is another way to set a pipeline, additionally, to set policy name.\n\n```python\nimport whenact\n\n@whenact.when\ndef w1(ctx):\n    return True\n\n@whenact.act\ndef a1(ctx):\n    ctx[\"r1\"] = 1\n    return \"done\"\n\npipeline = whenact.Pipeline(\n    [whenact.Policy(when=[w1], action=[a1], name=\"my_policy1\")]\n)\nprint(pipeline)\n# p0: [w1] > [a1]\n```\n\n# More examples\n\nMore examples can be found in [tests](https://github.com/MorvanZhou/whenact/tree/main/tests)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/MorvanZhou/whenact",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "whenact",
            "package_url": "https://pypi.org/project/whenact/",
            "platform": null,
            "project_url": "https://pypi.org/project/whenact/",
            "project_urls": {
                "Bug Tracker": "https://github.com/MorvanZhou/whenact/issues",
                "Homepage": "https://github.com/MorvanZhou/whenact"
            },
            "release_url": "https://pypi.org/project/whenact/0.0.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "whenact decision pipeline",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15812200,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2be0266ceab527e8324cc6a477f4b8d9",
                    "sha256": "bcb0ead3d47863fd8934bc5ff5dc2d8583ecb881b797867b604efd197884658a"
                },
                "downloads": -1,
                "filename": "whenact-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2be0266ceab527e8324cc6a477f4b8d9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 5670,
                "upload_time": "2022-11-18T08:01:57",
                "upload_time_iso_8601": "2022-11-18T08:01:57.392664Z",
                "url": "https://files.pythonhosted.org/packages/64/2a/8594f541a53553e9ad3dcd8074ec852ad44a42255493e49a21cab4d1edac/whenact-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "aeb5eb864cd7a6ee0c1adb66b54d07bc",
                    "sha256": "dfc2a0d21ffb5acdbe91147c525fbc85d352e5c6b4f89666d835780259879f88"
                },
                "downloads": -1,
                "filename": "whenact-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "aeb5eb864cd7a6ee0c1adb66b54d07bc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 4611,
                "upload_time": "2022-11-18T08:01:59",
                "upload_time_iso_8601": "2022-11-18T08:01:59.179167Z",
                "url": "https://files.pythonhosted.org/packages/2a/f5/e80e29d218fa18729ead253a7abad6055264191bf356cd1d132f94a48d9a/whenact-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}