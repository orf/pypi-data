{
    "1.0": {
        "info": {
            "author": "Sin Yong Teng",
            "author_email": "tsyet12@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: BSD License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Topic :: Software Development :: Build Tools"
            ],
            "description": "# Pgraph : Process Graphs for Process Network Synthesis (PNS)\r\n\r\n![Pgraphlogo](https://user-images.githubusercontent.com/19692103/176261331-5ec5fd1d-eec6-467c-b79c-ed48691eecfb.png)\r\n\r\n<!-- TABLE OF CONTENTS -->\r\n## Table of Contents\r\n\r\n* [About the Project](#about-the-project)\r\n* [Getting Started](#getting-started)\r\n* [Example Code](#usage-examples)\r\n* [Contributing](#contributing)\r\n* [License](#license)\r\n* [Contact](#contact)\r\n* [References](#references)\r\n\r\n\r\n<!-- ABOUT THE PROJECT -->\r\n## About The Project\r\nThis project aims at enabling the classical P-graph Framework (www.p-graph.org) to interface with modern Python programming ecosystems. The backend solver is the original executable from P-graph, staying true to the original implementation of P-graph. For manual network manipulation, the P-graph studio can be downloaded from this link: https://p-graph.org/downloads/. \r\n\r\n\r\n\r\n<!-- GETTING STARTED -->\r\n## Getting Started\r\n\r\nInstall this library either from the official pypi or from this Github repository:\r\n\r\n## Install a Stable Version (pypi)\r\n```bat\r\npip install \r\n```\r\n## Install most updated version from Github\r\n\r\nIn a environment terminal or CMD:\r\n```bat\r\npip install git+https://github.com/tsyet12/Pgraph\r\n```\r\n\r\n\r\n<!-- USAGE EXAMPLES -->\r\n## Example Code\r\nSee [`examples`](https://github.com/tsyet12/Pgraph/tree/main/examples) for code examples.\r\n\r\n![example](https://user-images.githubusercontent.com/19692103/176265167-3e41b536-9f2b-48df-b559-9290277065e7.png)\r\n\r\n<!-- CONTRIBUTING -->\r\n## Contributing\r\n\r\nContributions are what make the open source community such an amazing place to be learn, inspire, and create. Any contributions you make are **greatly appreciated**.\r\n\r\n1. Fork the Project\r\n2. Create your Feature Branch (`git checkout -b testbranch/prep`)\r\n3. Commit your Changes (`git commit -m 'Improve testbranch/prep'`)\r\n4. Push to the Branch (`git push origin testbranch/prep`)\r\n5. Open a Pull Request\r\n\r\n\r\n<!-- LICENSE -->\r\n## License\r\n\r\nDistributed under the Open Sourced BSD-2-Clause License. See [`LICENSE`](https://github.com/tsyet12/Chemsy/blob/main/LICENSE) for more information.\r\n\r\n\r\n<!-- CONTACT -->\r\n## Contact\r\nMain Developer:\r\n\r\nSin Yong Teng sinyong.teng@ru.nl or tsyet12@gmail.com\r\nRadboud University Nijmegen\r\n\r\n<!-- References -->\r\n## References\r\n\r\nFriedler, F., Tarjan, K., Huang, Y.W. and Fan, L.T., 1992. Graph-theoretic approach to process synthesis: axioms and theorems. Chemical Engineering Science, 47(8), pp.1973-1988.\r\n\r\nFriedler, F., Tarjan, K., Huang, Y.W. and Fan, L.T., 1992. Combinatorial algorithms for process synthesis. Computers & chemical engineering, 16, pp.S313-S320.\r\n\r\nFriedler, F., Tarjan, K., Huang, Y.W. and Fan, L.T., 1993. Graph-theoretic approach to process synthesis: polynomial algorithm for maximal structure generation. Computers & Chemical Engineering, 17(9), pp.929-942.\r\n\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "Process Optimization,Process Network Synthesis,Artificial Intelligence",
            "license": "BSD 2-Clause",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ProcessGraph",
            "package_url": "https://pypi.org/project/ProcessGraph/",
            "platform": null,
            "project_url": "https://pypi.org/project/ProcessGraph/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/ProcessGraph/1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Connecting Process Network Synthesis (PNS) to Modern Programming Ecosystems",
            "version": "1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14276446,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8339c12d99cb94ecdef1b72bbb09c1b5",
                    "sha256": "5c17ffb89036a36ce107ef1ae19343498472d55bd8dd44bafd666ddc14cdc729"
                },
                "downloads": -1,
                "filename": "ProcessGraph-1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8339c12d99cb94ecdef1b72bbb09c1b5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2058994,
                "upload_time": "2022-06-28T19:32:42",
                "upload_time_iso_8601": "2022-06-28T19:32:42.228689Z",
                "url": "https://files.pythonhosted.org/packages/f2/68/41887468239e9aa31d249d91e09b39ea144a41ba1906800cc10d9275d881/ProcessGraph-1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}