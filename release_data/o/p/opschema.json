{
    "0.0.4": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opcheck",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opcheck"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.4/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1c32fe29e316570cc16a0e5fc73b55fc",
                    "sha256": "fa2f01b1791b1ef8ff30b4489bdd2539eab0918d97860a638dba190fea0add3d"
                },
                "downloads": -1,
                "filename": "opschema-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1c32fe29e316570cc16a0e5fc73b55fc",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 56837,
                "upload_time": "2022-12-09T08:04:56",
                "upload_time_iso_8601": "2022-12-09T08:04:56.467166Z",
                "url": "https://files.pythonhosted.org/packages/c8/ba/02b77f55d0141622d58b44f37f696ac34db44c9d9221f5cdbfe699d8a4b3/opschema-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4c7f48356aa3fca06d70e4bbd3091ef6",
                    "sha256": "4699aa550f16705f4c856b66ec3b500baec674389a358f10d9795571b0c8137e"
                },
                "downloads": -1,
                "filename": "opschema-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "4c7f48356aa3fca06d70e4bbd3091ef6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 57666,
                "upload_time": "2022-12-09T08:04:58",
                "upload_time_iso_8601": "2022-12-09T08:04:58.430579Z",
                "url": "https://files.pythonhosted.org/packages/39/0d/6867f639a996a0dda9ae693b609e684a281c58275b10f74c92f5014f1101/opschema-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.7": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.7/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "18579fe0d0c20e27b236bc9f5ccd840b",
                    "sha256": "33e7b1b272fc9dc634c03f544151cbc9b39fe054fc64459e6309e3b48b32e781"
                },
                "downloads": -1,
                "filename": "opschema-0.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "18579fe0d0c20e27b236bc9f5ccd840b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 56851,
                "upload_time": "2022-12-09T08:26:12",
                "upload_time_iso_8601": "2022-12-09T08:26:12.840221Z",
                "url": "https://files.pythonhosted.org/packages/9c/1b/e4d1008ecc5ce39a86be8bee84c2f5cb74bf49c52e7421269f621f1d913a/opschema-0.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ef4084c35ea104d1c690eacdd7dba1a",
                    "sha256": "458aaabc5ad1b944234dcbdab5e59844e5dc03133e7f3f0e1e7e3a9fa63ad062"
                },
                "downloads": -1,
                "filename": "opschema-0.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "6ef4084c35ea104d1c690eacdd7dba1a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 57632,
                "upload_time": "2022-12-09T08:26:14",
                "upload_time_iso_8601": "2022-12-09T08:26:14.649560Z",
                "url": "https://files.pythonhosted.org/packages/fd/5b/a5e958b4bb15ab9022050d2924b0e94946e94b68935030cf48e52b9c8359/opschema-0.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.8": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.8/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.8",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cbb13aaf330318cd598087d4ba20bbfe",
                    "sha256": "8a0c88284de8f944510692d47e31e7caf31761b9ee61b55e60fd0eca7e55fdd6"
                },
                "downloads": -1,
                "filename": "opschema-0.0.8-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cbb13aaf330318cd598087d4ba20bbfe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 66564,
                "upload_time": "2022-12-09T08:36:41",
                "upload_time_iso_8601": "2022-12-09T08:36:41.950473Z",
                "url": "https://files.pythonhosted.org/packages/64/32/75b5641dbf6e291425015c7038c58cefe442dc5db5332162d4119e081708/opschema-0.0.8-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9fc99593c8f276e237b7405f27fa6530",
                    "sha256": "e38d17a19a2b69a400b69ddeb50fe5fa09c81c69918c0d3fa3ed2e7288cf77f5"
                },
                "downloads": -1,
                "filename": "opschema-0.0.8.tar.gz",
                "has_sig": false,
                "md5_digest": "9fc99593c8f276e237b7405f27fa6530",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 58014,
                "upload_time": "2022-12-09T08:36:43",
                "upload_time_iso_8601": "2022-12-09T08:36:43.670262Z",
                "url": "https://files.pythonhosted.org/packages/09/d0/3379050b089b17208a9a5b547c9e1a3c2f57f77250cf24e34469b61471a4/opschema-0.0.8.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.9": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.0.9/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.0.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "54cbc3b6b9477491a3a52d4ef87ad9a8",
                    "sha256": "fff7cf896175d5087f03543e556b943cf1853eeebf55dea779bad1666524e0c9"
                },
                "downloads": -1,
                "filename": "opschema-0.0.9-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "54cbc3b6b9477491a3a52d4ef87ad9a8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 65704,
                "upload_time": "2022-12-09T09:27:11",
                "upload_time_iso_8601": "2022-12-09T09:27:11.716502Z",
                "url": "https://files.pythonhosted.org/packages/e9/2b/30a8aeb8121b55dd545b3c5353a518c2085da6197d1448dc60239d73c823/opschema-0.0.9-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ed6564c7b44bf38c3abc9b39bdff47c",
                    "sha256": "012a39529533b1888169ac34c98814b05616c209b785470b26e46db48762a081"
                },
                "downloads": -1,
                "filename": "opschema-0.0.9.tar.gz",
                "has_sig": false,
                "md5_digest": "5ed6564c7b44bf38c3abc9b39bdff47c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 56574,
                "upload_time": "2022-12-09T09:27:13",
                "upload_time_iso_8601": "2022-12-09T09:27:13.925479Z",
                "url": "https://files.pythonhosted.org/packages/f8/5c/a4ef5c896e244fa86b32a996c82ebe0df09f82f0f35ae77698f26dfa40b5/opschema-0.0.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.0/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7085ac584f7a7ff7e8664313e3422799",
                    "sha256": "2de78bc86728d3d2b9c4b61d40ffd5c6d09e1719fe490a921bfa1d0724141aab"
                },
                "downloads": -1,
                "filename": "opschema-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7085ac584f7a7ff7e8664313e3422799",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 68290,
                "upload_time": "2022-12-11T04:02:27",
                "upload_time_iso_8601": "2022-12-11T04:02:27.100332Z",
                "url": "https://files.pythonhosted.org/packages/17/28/46879afc177a07630ac2bbea4c647e3b489a1f9354a388f9bf209e4fa49a/opschema-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3ec671e902e3458ba5877823ac52e8f4",
                    "sha256": "a71758b72c2c1d307da1680e49da15f06ba4b21d75910c56a1479745efbe85bc"
                },
                "downloads": -1,
                "filename": "opschema-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "3ec671e902e3458ba5877823ac52e8f4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 62773,
                "upload_time": "2022-12-11T04:02:29",
                "upload_time_iso_8601": "2022-12-11T04:02:29.175639Z",
                "url": "https://files.pythonhosted.org/packages/ac/07/5313552ee0def3d4bb026e88b94747a3186608384767d9000c0eb8bce87c/opschema-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Henry Bigelow",
            "author_email": "hrbigelow@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "\n# opschema \n\nA system to build input constraint schemas for TensorFlow operations\n\nInstall from PyPI:\n\n    pip install opschema\n\n## Motivation\n\nTensorFlow Python ops give cryptic error messages. Often the\nexceptions arise from several stack levels down the TensorFlow codebase.\nBecause of this, it is frequently not clear to the user what input constraints\nare violated and what should be done to correct the error.\n\nThis is particularly challenging for ops that are highly polymorphic in the\ncombinations of shapes, data layouts and dtypes they accept. Documentation\noften does not fully describe the legal inputs to ops. Finding out whether a\nparticular call is legal must be done by trial and error in many cases.\n\n# Introduction\n\nopschema provides an API for building *op schemas* for representing TensorFlow\noperations.  Once written, a schema represents a single operation, such as\n`tf.nn.convoution` or `tf.nn.bias_add`, etc.  The schema defines what inputs are\nlegal for the op.  Once defined, it provides four functionalities:\n\n* wrap TensorFlow op, intercept inputs at call-time, provide human-readable\n  error message \n\n* generate a complete set of legal (and a particular set of illegal) inputs for\n  the op\n\n* provide mathematically precise documentation of legal call\n  configurations\n\n* empirically validate schema correctness against TensorFlow\n  op, given in TP, TN, FP and FN counts\n\n## Synopsis\n\n`opschema` provides a registry for the available schemas and allows you\nto load them individually or all together.  Schemas are instances of\n`opschema.schema.OpSchema`, which provides member functions to configure it.\nThe schema definitions are in `opschema/ops`.\n\nTo see the list of implemented schemas, use:\n\n    python -m opschema.cl list\n\nor\n\n```python\nimport opschema\nops = opschema.list_schemas()\nprint('\\n'.join(op for op in ops))\ntf.gather_nd\ntf.nn.atrous_conv2d\ntf.nn.atrous_conv2d_transpose\ntf.nn.avg_pool\ntf.nn.bias_add\ntf.nn.convolution\ntf.nn.depth_to_space\n...\n```\n\nTo print a human-readable representation of a schema, use one of:\n\n    python -m opschema.cl explain tf.gather_nd\n    python -m opschema.cl explain tf.gather_nd -i\n    python -m opschema.cl explain tf.gather_nd --include_inventory\n\nor\n\n```python\nopschema.explain('tf.gather_nd', include_inventory=False)\n```\n\nNote that including the inventory may be very long for highly polymorphic ops.\n\nTo wrap the original TensorFlow op so that it opschema can intercept its inputs\nand provide error messages.  \n\n```python\n# wrap tf.gather_nd\nopschema.register('tf.gather_nd')\n\n# call tf.gather_nd(...) directly\n\n# restore tf.gather_nd to original\nopschema.deregister('tf.gather_nd')\n```\n\nThis process reassigns the member function, for example `tf.gather_nd` to a\nwrapper function.  The wrapper function first inspects the inputs and prints an\nerror message if any violation is detected.  Regardless of violation, it then\npasses the inputs on to the original TensorFlow operation.  In this way it is\notherwise unobtrusive to the functioning of an existing network.\n\n## Example Error messages - before and after\n\nRun\n\n    python -m opschema.cl validate <op_path> <reports_dir> [id_list]\n    # example\n    python -m opschema.cl validate tf.nn.convolution reports\n\nThe example produces files `reports/tf.nn.convolution.txt` and\n`reports/tf.nn.convolution.sum.txt`.  If id_list is given, there will be one\nentry for each id.  Otherwise, there is one entry for each input produced by\n`generate_args()`.  \n\n## How does it work?\n\nTo see a schema, run:\n\n    python -m opschema.cl explain <op_path> [--include_inventory]\n    # examples \n    python -m opschema.cl explain tf.nn.convolution\n\nThis provides a report in several sections, gradually explained below.\n\n`opschema` uses three abstractions to define the schema:  *index*, *signature*,\nand *layout*.\n\n### Index\n\nThe lowest level abstraction is the *index*, created with the `OpSchema` API\nfunction [add_index](opschema/schema.py#L877).  This is a group of semantically\nrelated dimensions that occur within the shape of input tensors or other\nshape-related arguments.  An index has a single-letter name and a longer\ndescription.  It is rank-agnostic in that different calls to the op may take on\na different number of these dimensions.  The individual components of the\ndimensions often participate in formulas with dimensions of other indices.\n\nExamples:\n\n    code  description\n    b     batch\n    i     input spatial\n    k     input channel\n    f     filter spatial\n    j     output filter \n    l     output channel\n\nRank-agnostic here means that, at run-time, an index can represent zero, one,\ntwo, or more individual dimensions within a tensor shape, depending on how the\nop was called.\n\n### Signature\n\nA *signature* is simply an ordered sequence of *indexes*, usually represented\nas a string of the one-letter codes.  Most input tensors have a *signature*.\nImportantly, since each *index* is rank-agnostic, so is the signature.\n\nExamples:\n\n    tensor   signature\n    input    bik           \n    filter   fjl\n\nWhile indexes are rank-agnostic, it is also useful to see possible\n*instantiations* of indexes showing the actual rank of the shape for a\nparticular call of the op.  For instance, `tf.nn.convolution` may be called\nwith 1, 2, or 3 spatial dimensions, which imply the rank of indexes 'i' and\n'f'.  Similarly, it works with any number of batch dimensions 'b' >= 1.  Such\ninstantiations can be represented using repetitions of the one-letter code:\n\nExamples:\n\n    input shape instantiations\n    bik, biik, biiik, bbik, bbbik, ...\n\nBy default, each index has no constraints on what rank it can take on.\nRank constraints are provided within the [add_index](opschema/schema.py#L877)\nAPI function.  The 'explain' command-line function has a section on the index\nrank constraints.  For `tf.nn.convolution` it is:\n\n```\nIndex ranks\n\nrank(b) in [1, 5]\nrank(i) in [1, 3]\nrank(f) = rank(i)\nrank(p) = rank(i)\nrank(s) = rank(i)\nrank(d) = rank(i)\nrank(k) = 1\nrank(j) = 1\nrank(l) = 1\nrank(o) = rank(i)\n```\n\nThe rank of an index can be constrained either within a range, or constrained\nto be equal to that of another index.  In the above, the rank of the 'input\nspatial' (i) index can be in [1,3], and there can be between 1 and 5 batch\ndimensions.  The rank of the 'filter spatial' (f) index is set equal to that of\n'input spatial' and so on.\n\n#### Computed Indexes and intermediate Indexes\n\nIndexes come in two varieties:  *computed* or not computed.  Being *computed*\nmeans that the dimensions are determined as a function of the dimensions of\nother indices.  A function is assigned using the API call\n[OpSchema.comp_dims_cw](opschema/schema.py#1130) for a component-wise computation, or\n[OpSchema.comp_dims](opschema/schema.py#1113) for a non-component-wise computation.  For\nexample, with `tf.nn.convolution` the 'explain' section shows:\n\n```bash\nComputed dimensions\n\np = (f - 1) * d + 1\no = ceil((i - p + 1) / s)   [padding = VALID]\no = ceil(i / s)   [padding = SAME]\n```\n\nThese are registered as component-wise.  For instance, if `rank(i) = 2`, then\neach dimension of `i` will be computed from the corresponding dimension of `s`\nand/or `p`, and so forth.\n\nHere, we see that 'padded filter spatial' (p) index is computed from 'filter\nspatial' and 'dilation'.  And, 'output spatial' (o) has two different formulas,\ndepending on the command-line argument 'padding'.\n\nNote here that the 'p' index does not appear anywhere in an input signature.\nIt is purely an intermediate calculation.  But, having an explicit name for the\nindex is useful to clarify to the user how the visible 'o' index is computed in\nthe case of 'padding = VALID'.\n\nThese formulas are also used to display actual dimensions in error messages.\n\n### Layout\n\nA *layout* is a set of consistent *signatures* accepted by the op.  Some ops\nhave just a single layout.  May have two, which could be described as 'channel\nfirst' or 'channel last', and are determined by the `data_format` argument.\n\nExamples:\n\n    input  filters  strides  dilations  return[0]  data_format\n    bki    fjl      s        d          blo        ['NCW', 'NCHW', 'NCDHW']\n    bik    fjl      s        d          bol        ['NWC', 'NHWC', 'NDHWC']\n\nThe above example shows two different layouts for the `tf.nn.convolution`\noperation.  Like *signatures*, the notion of a *layout* is rank-agnostic.  \n\nThe indexes and layouts for a given op schema can be shown with:\n\n    python -m opschema.cl explain tf.nn.convolution\n\nTo see the complete list of signature instantiations, use:\n\n    python -m opschema.cl explain tf.nn.convolution -i\n\n# DType constraints\n\nTensorFlow ops are usually constrained to work on certain combinations of\n`dtype` of the input tensors.  `opschema` provides a few API functions to\nspecify this.\n\n```python\n# DType constraints for tf.nn.convolution\nop.valid_dtypes('input', ('int32', 'float', 'bfloat16'))\nop.equate_dtypes('filters', 'input')\nop.exclude_combos('input', 'int32', 'i', (1,2), LAYOUT, 0)\nop.exclude_combos('input', 'int32', 'i', 3)\nop.exclude_combos('input', 'bfloat16', 'i', (1,2))\nop.exclude_combos('input', 'bfloat16', 'i', 3, LAYOUT, 0)\n```\n\nThe above snippet of the `tf.nn.convolution` schema definition illustrates the\nthree `OpSchema` API calls related to dtype constraints.  `valid_dtypes` simply\nspecifies which dtypes are accepted for a given argument tensor.  There is a\nwildcard-like syntax (see [base.py:parse_dtype_expr](opschema/base.py#L264))\nused to specify multiple dtypes briefly.\n\n`equate_dtypes` says that the dtype of one argument tensor must be identical to\nanother.\n\n`exclude_combos` declares that a certain combination of dtypes, index ranks,\nand/or layouts is excluded.  This is needed because certain of these\ncombinations may not be implemented by TensorFlow.\n\n# Other Constraints\n\nThere are other relationships between inputs in certain TensorFlow ops.  For\nexample, with `tf.gather_nd`, the last dimension of the `indices` shape\ndetermines the rank of the 'read location' (r) index.  This is declared using\nthe API function [OpSchema.rank_dims_constraint](opschema/schema.py#L1638).\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hrbigelow/opschema",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "opschema",
            "package_url": "https://pypi.org/project/opschema/",
            "platform": null,
            "project_url": "https://pypi.org/project/opschema/",
            "project_urls": {
                "Homepage": "https://github.com/hrbigelow/opschema"
            },
            "release_url": "https://pypi.org/project/opschema/0.1.1/",
            "requires_dist": [
                "tensorflow"
            ],
            "requires_python": "",
            "summary": "Define Error-checking Schemas for TensorFlow ops",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16090210,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5fec57a010ba37cef29c99b1979763a",
                    "sha256": "883843b3738eac1937aef2d3e0d0420342debae5847602fc37df1a7c6532d714"
                },
                "downloads": -1,
                "filename": "opschema-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d5fec57a010ba37cef29c99b1979763a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 70319,
                "upload_time": "2022-12-13T19:07:06",
                "upload_time_iso_8601": "2022-12-13T19:07:06.569985Z",
                "url": "https://files.pythonhosted.org/packages/8d/cf/ddc5db7fc2e3db0a2f3d9f0703a0397cbf7818299f56daeac8308666964c/opschema-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bdbe7d47b2f60c331db091e84ce35583",
                    "sha256": "4fe27ee412f8bdfd8a3d2b8f2dcd5648f47021a7a7687d3622148ac4f26ed103"
                },
                "downloads": -1,
                "filename": "opschema-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bdbe7d47b2f60c331db091e84ce35583",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 66289,
                "upload_time": "2022-12-13T19:07:08",
                "upload_time_iso_8601": "2022-12-13T19:07:08.422130Z",
                "url": "https://files.pythonhosted.org/packages/45/7c/0a103166430c1eae063b031b3270368491d66b697abf8c5e1c90addbff1c/opschema-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}