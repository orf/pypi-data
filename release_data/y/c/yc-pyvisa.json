{
    "0.0.1": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_-pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_-pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "20acb54f905b916be57545c55ef12d80",
                    "sha256": "7616467e474108a5e1f6a772578e779388b21eaf9a7bc763549958a00f2f37e6"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "20acb54f905b916be57545c55ef12d80",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 6317,
                "upload_time": "2022-01-29T10:03:04",
                "upload_time_iso_8601": "2022-01-29T10:03:04.136429Z",
                "url": "https://files.pythonhosted.org/packages/87/08/56197ddff3e26bc1f1d23c5fbfa6a1c1608eaf08510abcc0879d04a5925e/yc_pyvisa-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "22e30f7455ebe1ca2d9ccbb2b54493e5",
                    "sha256": "33050b6481c6985d248b3ceb3db361a3354a01484801a4f003b2afcb766e06a1"
                },
                "downloads": -1,
                "filename": "yc-pyvisa-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "22e30f7455ebe1ca2d9ccbb2b54493e5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 3751,
                "upload_time": "2022-01-29T10:03:05",
                "upload_time_iso_8601": "2022-01-29T10:03:05.472455Z",
                "url": "https://files.pythonhosted.org/packages/b1/dc/acfeff9b2ed03d11dbb03a7b772a2f416a0d1209909795cf0b5512580e4b/yc-pyvisa-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.2/",
            "requires_dist": [
                "pyvisa (>=1.11.3)",
                "numpy (>=1.19.2)",
                "regex (>=2020.10.15)"
            ],
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e2e31c678cd4555296628f1152293790",
                    "sha256": "6fcf5c588ded45073c3bc1c922550847c673ba071c9c71936efa971899d1df85"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e2e31c678cd4555296628f1152293790",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 3845,
                "upload_time": "2022-01-30T04:01:14",
                "upload_time_iso_8601": "2022-01-30T04:01:14.329978Z",
                "url": "https://files.pythonhosted.org/packages/d6/ea/11b76f0c970ac018b01dbd222b422a96586564cd081b68f02fb5e1597bb8/yc_pyvisa-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "513fc4eac499819bccab33dcc864bb75",
                    "sha256": "465ec08037fee9eca0a53c077f8bd351a5262116087e392fb4b0924305f4d6a2"
                },
                "downloads": -1,
                "filename": "yc-pyvisa-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "513fc4eac499819bccab33dcc864bb75",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 3864,
                "upload_time": "2022-01-30T04:01:16",
                "upload_time_iso_8601": "2022-01-30T04:01:16.091176Z",
                "url": "https://files.pythonhosted.org/packages/6d/ab/8acc04aaf172d4b53185e907bde0ef2986b8f42237ded2044beefd0b6da7/yc-pyvisa-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.3/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ea2c3c7a68ae7ea7d544f04a9ef19813",
                    "sha256": "2e4959d5fcf97085a5a94d044b479ba74cbd064bb349a8780fa17deb279958e4"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "ea2c3c7a68ae7ea7d544f04a9ef19813",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 3869,
                "upload_time": "2022-01-30T09:41:13",
                "upload_time_iso_8601": "2022-01-30T09:41:13.959562Z",
                "url": "https://files.pythonhosted.org/packages/01/fb/d494d7d19c36e252617c0822c2e0442112a86b62c16ba8be3c39a2e90a88/yc_pyvisa-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.4/",
            "requires_dist": [
                "pyvisa (>=1.11.3)",
                "numpy (>=1.19.2)",
                "regex (>=2020.10.15)"
            ],
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69e6eec3c9fefb200f99410b10769c34",
                    "sha256": "40bd26db9bccf09503e898e8c5ded1e0864a11da926c5596038d475a520ab761"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "69e6eec3c9fefb200f99410b10769c34",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 10580,
                "upload_time": "2022-02-17T13:47:55",
                "upload_time_iso_8601": "2022-02-17T13:47:55.017950Z",
                "url": "https://files.pythonhosted.org/packages/03/32/7703163f61b68d53743cac2158418852256fa5e62c37424c7964b188c135/yc_pyvisa-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c51c97b98c06f08cf6fae8711e182a8",
                    "sha256": "85c32ceb42a1570bb4761fdaf0d5832ada37a178a57a857b520cdc2d6a3a3dfc"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "9c51c97b98c06f08cf6fae8711e182a8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 21469,
                "upload_time": "2022-02-17T13:47:57",
                "upload_time_iso_8601": "2022-02-17T13:47:57.130443Z",
                "url": "https://files.pythonhosted.org/packages/80/bc/dde2d99d01b25f8d1c524ec6efadd34d25090424f31c627372354d92a6c4/yc_pyvisa-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.5/",
            "requires_dist": [
                "pyvisa (>=1.11.3)",
                "numpy (>=1.19.2)",
                "regex (>=2020.10.15)"
            ],
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5369a41a65abbb9ee8b389960096b75a",
                    "sha256": "a4469005653791b4ee2078eb229f61ccdef0354a9317b2a88c89cdf9823c55e3"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5369a41a65abbb9ee8b389960096b75a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 10614,
                "upload_time": "2022-06-01T03:55:30",
                "upload_time_iso_8601": "2022-06-01T03:55:30.318277Z",
                "url": "https://files.pythonhosted.org/packages/e3/ea/ebf120fa3177f74078cf5c3ac9dbd23f373a6dfb0ff5f2a16ef9ef2395a9/yc_pyvisa-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca45322514d28a4d67cdfd7c6fd0c23b",
                    "sha256": "7e5b4748c387993023b53f90d7919272d4a936ab61fa32650d4a64ad9d53844b"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "ca45322514d28a4d67cdfd7c6fd0c23b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 21574,
                "upload_time": "2022-06-01T03:55:34",
                "upload_time_iso_8601": "2022-06-01T03:55:34.002912Z",
                "url": "https://files.pythonhosted.org/packages/df/75/b004cd3c2ce9cccc216d53a40e75b540054da0fe73f94a225ed8d806d045/yc_pyvisa-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.6": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.6/",
            "requires_dist": [
                "pyvisa (>=1.11.3)",
                "numpy (>=1.19.2)",
                "regex (>=2020.10.15)"
            ],
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "83834c096eaa06bbd3acbbac5fe49646",
                    "sha256": "f874bb81dc4201ac725d3b1e0cb2b945224721f03a884826fcb151857804779b"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "83834c096eaa06bbd3acbbac5fe49646",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 10718,
                "upload_time": "2022-06-01T03:56:55",
                "upload_time_iso_8601": "2022-06-01T03:56:55.259143Z",
                "url": "https://files.pythonhosted.org/packages/94/6a/daf073adaba50c79ba75e121d9e0e1c04426245a76b6ef3d31e18406727e/yc_pyvisa-0.0.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "69479581a239d207f74bc5227e1f17ae",
                    "sha256": "5e7379163569013409fa856e62325b75f1b983f41cbbc164892d62bbe509bffd"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "69479581a239d207f74bc5227e1f17ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 21687,
                "upload_time": "2022-06-01T03:57:00",
                "upload_time_iso_8601": "2022-06-01T03:57:00.072110Z",
                "url": "https://files.pythonhosted.org/packages/b1/c0/7ff5eff00f08fa5d68f5541d87a6f1278af7a4402e1261ddf3927412c877/yc_pyvisa-0.0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.7": {
        "info": {
            "author": "Susunl",
            "author_email": "1253013130@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3"
            ],
            "description": "# YICHIP \u4eea\u5668\u63a7\u5236\n\nUPDATE:\n- 2022-02-17\uff1a\u7b2c\u4e09\u6b21\u66f4\u65b0,\u4fee\u6539\u793a\u6ce2\u5668\u83b7\u53d6\u7535\u538b\u51fd\u6570,\u73b0\u5728\u66f4\u52a0\u7cbe\u51c6\n- 2022-02-17\uff1a\u7b2c\u4e8c\u6b21\u66f4\u65b0,\u65b0\u589eRIGOL DP832A\u4e09\u901a\u9053\u76f4\u6d41\u7535\u6e90\u9a71\u52a8\n- 2022-01-29\uff1a\u7b2c\u4e00\u6b21\u66f4\u65b0,\u521d\u59cb\u4ee3\u7801\u53ef\u5bf9\u793a\u6ce2\u5668(ZDS1104,ZDS2014),\u7535\u6e90(AgilentE3649A,Agilent66319D),\u53f0\u5f0f\u4e07\u7528\u8868(Agilent34410A)\n\n## YC-PYVISA\u4ecb\u7ecd\n\nVISA\uff0c\u865a\u62df\u4eea\u5668\u8f6f\u4ef6\u67b6\u6784\uff0c\u662f\u5bf9\u5e26\u6709GPIB\u3001VXI\u3001PXI\u3001\u4e32\u53e3(RS232/485)\u3001\u4ee5\u592a\u7f51\u3001USB\u548c/\u6216IEEE 1394\u63a5\u53e3\u7684\u4eea\u5668\u7cfb\u7edf\u8fdb\u884c\u914d\u7f6e\u3001\u7f16\u7a0b\u548c\u6545\u969c\u6392\u9664\u7684\u6807\u51c6\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u4e24\u4e2a\u4eba\u6c9f\u901a\uff0c\u7c7b\u4f3c\u4e8e\u8bed\u8a00\u7684\u4e2d\u4ecb\uff0cVISA\u5c06\u4f60\u7684\u8bed\u8a00\u8f6c\u6362\u53d8\u6210\u4eea\u5668\u80fd\u542c\u61c2\u7684\u547d\u4ee4.\n\nPyVisa\u662f\u901a\u8fc7\u4e0a\u8ff0\u63a5\u53e3\u7528\u6765\u63a7\u5236\u5404\u79cd\u5404\u6837\u7684\u6d4b\u91cf\u4eea\u5668\u7684Python\u5305.\n\n\u672c\u9879\u76ee\u5bf9YICHIP\u4f7f\u7528\u7684\u90e8\u5206\u4eea\u5668\u901a\u8fc7PyVisa\u8fdb\u884c\u4e86\u4e8c\u6b21\u5c01\u88c5,\u4ee5\u8fbe\u5230\u66f4\u65b9\u4fbf\u7684\u63a7\u5236\u4eea\u5668,\u8fdb\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7684\u76ee\u7684\n\n## \u5b89\u88c5\n\nUsing pip:\n\n```cmd\npip3 install yc-pyvisa\n```\n\n## \u7269\u7406\u63a5\u53e3\n\n\u524d\u9762\u8bf4\u5230visa\u662f\u5bf9\u5e26\u6709GPIB\u3001VXI\u3001PXI\u3001\u4e32\u53e3(RS232/485)\u3001\u4ee5\u592a\u7f51\u3001USB\u548c/\u6216IEEE 1394\u63a5\u53e3\u7684\u4eea\u5668\u7cfb\u7edf\u8fdb\u884c\u914d\u7f6e\u3001\u7f16\u7a0b\u548c\u6545\u969c\u6392\u9664\u7684\u6807\u51c6,\u6240\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u63a5\u53e3,\u9700\u8981\u5b89\u88c5\u4e0d\u540c\u7684\u9a71\u52a8,\u4e0d\u80fd\u76f4\u63a5\u5b89\u88c5\u4f7f\u7528.\u4ee5\u4e0b\u4efb\u610f\u4e00\u4e2a\u63a5\u53e3\u8fde\u63a5\u5230\u7535\u8111,\u4e14\u5b89\u88c5\u597d\u9a71\u52a8,\u90fd\u53ef\u76f4\u63a5\u88abpyvisa\u63a7\u5236.\n\n### GPIB\u63a5\u53e3\n\n\u6bd4\u8f83\u901a\u7528\u7684\u662fGPIB\u63a5\u53e3,\u5927\u6982\u957f\u8fd9\u6837\n<center>\n    <img src=\"https://qzxx.com/wp-content/uploads/2017/11/788e43dadc14671.jpg\" width=\"400\">\n    <center>GPIB\u63a7\u5236\u5668</center>\n</center>\n<center>\n    <img src=\"https://media.rs-online.com/t_large/F7600341-01.jpg\" width=\"400\">\n    <center>GPIB\u63a5\u53e3</center>\n</center>\n\n\u6ce8\u610f:\u4e00\u4e2aGPIB\u63a7\u5236\u5668\u53ef\u4ee5\u63a7\u5236\u591a\u4e2aGPIB\u8bbe\u5907,\u901a\u8fc7\u4ee5\u4e0b\u7ebf\u6750\u53ef\u62d3\u5c55\u591a\u4e2a\u63a5\u53e3\n\n<center>\n    <img src=\"https://gss0.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=40cb661ad93f8794d3aa4028e22b22cc/a6efce1b9d16fdfa7ddf434cb98f8c5495ee7be5.jpg\" width=\"400\">\n</center>\n\n### USB\u63a5\u53e3\n\nUSB\u63a5\u53e3\u5e94\u8be5\u6bd4\u8f83\u65b9\u4fbf\u8fa8\u8ba4,\u901a\u5e38\u662ftype-B(2.0)\u63a5\u53e3,\u5c31\u6211\u4eec\u5e73\u65f6\u7535\u8111\u8fde\u63a5Jlink\u7684\u7ebf\u6750,\u6211\u5c31\u4e0d\u8d34\u56fe\u7247\u4e86\n\n\u4e00\u822c\u60c5\u51b5\u4e0bUSB\u8bbe\u5907\u7684\u9a71\u52a8\u90fd\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u5382\u5546\u7684\u5b98\u7f51\u627e\u5230,\u4f46\u662f\u4e2a\u4eba\u89c9\u5f97\u6253\u9a71\u52a8\u6bd4\u8f83\u9ebb\u70e6,\u6240\u4ee5\u5982\u679c\u4eea\u5668\u6709GPIB\u63a5\u53e3\u5e76\u4e14\u4f60\u6709GPIB\u63a7\u5236\u5668\u7684\u8bdd\u6700\u597d\u76f4\u63a5\u7528GPIB\u53bb\u8fde\u63a5\u4eea\u5668,\u4e0d\u8fc7\u6211\u53d1\u73b0\u6211\u4eec\u516c\u53f8\u7684\u793a\u6ce2\u5668\u90fd\u6ca1\u6709GPIB\u63a5\u53e3,\u800c\u4e14\u6211\u76ee\u524d\u63a7\u5236\u7684ZLG\u7684\u793a\u6ce2\u5668,\u6309\u7167\u5b98\u7f51\u63d0\u4f9b\u7684\u65b9\u6cd5\u662f\u6ca1\u6709\u529e\u6cd5\u5728Win10\u4e0a\u5b89\u88c5\u9a71\u52a8\u7684,\u6240\u4ee5\u540e\u9762\u6211\u4f1a\u63d0\u4f9b\u4e00\u7bc7\u6559\u7a0b,\u4e13\u95e8\u7528\u4e8eZLG\u793a\u6ce2\u5668\u7684\u9a71\u52a8\u5b89\u88c5\n\n### RS-232\u63a5\u53e3\n\n\u7528\u4e32\u53e3\u6765\u8fdb\u884c\u6536\u53d1\u6307\u4ee4\u548c\u6570\u636e,\u8fd9\u4e5f\u662f\u6211\u6bd4\u8f83\u63a8\u8350\u7684\u4e00\u79cd\u65b9\u5f0f,\u6bd5\u7adf\u6253\u4e32\u53e3\u9a71\u52a8\u662f\u4e00\u4ef6\u76f8\u5bf9\u5bb9\u6613\u7684\u4e8b\u60c5,\u53ea\u9700\u8981\u4e00\u6839RS-232\u7684\u7ebf\u5c31\u597d\u4e86,\u5927\u6982\u957f\u8fd9\u6837\n<center>\n    <img src=\"https://image-c.ehsy.com/uploadfile/opc/img/2018/09/10/20180910142455231.jpg\" width=\"400\">\n    <center>RS-232</center>\n</center>\n\n### \u7f51\u53e3\n\n\u5173\u4e8e\u7f51\u53e3\u76f4\u63a5\u8fde\u63a5\u5c31\u884c,\u4e00\u822c\u4eea\u5668\u91cc\u9762\u90fd\u53ef\u4ee5\u76f4\u63a5\u8bbe\u7f6e,\u5177\u4f53\u9700\u8981\u5927\u5bb6\u81ea\u5df1\u7ffb\u624b\u518c.\n\n## \u9a71\u52a8\u5b89\u88c5\n\n\u5fc5\u8981\u5b89\u88c5:\u4e0b\u8f7d[NI VISA](https://www.ni.com/zh-cn/support/downloads/drivers/download.ni-visa.html#442805),\u5b8c\u6210\u540e\u76f4\u63a5\u4e00\u76f4\u4e0b\u4e00\u6b65\u5b89\u88c5\u5373\u53ef,\u91cc\u9762\u96c6\u6210\u4e86GPIB\u7684\u63a7\u5236\u5668\u9a71\u52a8,\u5e76\u53ef\u4e3a\u90e8\u5206\u4eea\u5668\u63d0\u4f9bUSB\u9a71\u52a8,\u540c\u65f6\u4e3apyvisa\u63d0\u4f9b\u540e\u7aef\u652f\u6301\n\nAgilent_34410A\u53f0\u5f0f\u4e07\u7528\u8868USB\u9a71\u52a8:\n\n\u7531\u4e8e\u5b89\u88c5\u6587\u4ef6\u5de8\u5927,\u6240\u4ee5\u8fd9\u91cc\u4e0d\u63d0\u4f9b\u8be5\u9a71\u52a8,\u5728\u5185\u7f51\u8fdb\u884c\u4e0b\u8f7d:\\\\192.168.2.16\\public\\xubo\\Agilent 34410A Driver.zip\n\n- \u5b89\u88c5IntruiLinkApp\uff0c\u5b89\u88c5\u6587\u4ef6\u8def\u5f84\uff1aCD1\\IntuiLinkApp\\Setup.exe\n- \u5b89\u88c5IOLib\uff0c\u5b89\u88c5\u6587\u4ef6\u8def\u5f84\uff1aCD2\\Autorun\\auto.exe\n- \u5b89\u88c5IVI_COM\uff0c\u5b89\u88c5\u6587\u4ef6\u8def\u5f84\uff1aCD1\\ivi-com\\Agilent34410.1.0.18.0.msi\n- \u5b89\u88c5\u5b8c\u540e\u91cd\u542f\u7535\u8111\u5373\u53ef\u901a\u8fc7USB\u63a7\u5236\u53f0\u5f0f\u4e07\u7528\u8868\n\nZLG\u793a\u6ce2\u5668\u9a71\u52a8USB\u9a71\u52a8\u5b89\u88c5:\n\n\u76ee\u524d\u53ea\u63d0\u4f9bZDS1104 \u548c ZDS2014 usb\u9a71\u52a8\u6587\u4ef6,\u7531\u4e8e\u8be5\u9a71\u52a8\u662f\u901a\u8fc7`NI-VISA DRIVER WIZARD`\u751f\u6210,\u672a\u7ecf\u8fc7\u7b7e\u540d,\u6240\u4ee5win10\u662f\u4e0d\u5141\u8bb8\u5b89\u88c5\u7684,\u9700\u8981[\u7981\u7528\u9a71\u52a8\u7a0b\u5e8f\u5f3a\u5236\u7b7e\u540d](https://iknow.lenovo.com.cn/detail/dc_132524.html),\u7136\u540e\u53cc\u51fb\u5b89\u88c5\u6587\u4ef6\u5373\u53ef\n\n\u4e32\u53e3\u9a71\u52a8\u5b89\u88c5:\n\nRS232\u7684\u7ebf\u5728\u516c\u53f8\u662f\u6bd4\u8f83\u7a00\u5c11\u7684\uff0c\u91cc\u9762\u7684\u4e32\u53e3\u82af\u7247\u662f\u6bd4\u8f83\u8001\u7684\u5b58\u5728\uff0c\u76f4\u63a5\u63d2\u4e0awin10 \u662f\u4e0d\u8bc6\u522b\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u8fdb\u9a71\u52a8\u7ba1\u7406\u5668\u4f1a\u53d1\u73b0\u9a71\u52a8\u5df2\u7ecf\u5b89\u88c5\uff0c\u4f46\u662f\u4e0d\u80fd\u4f7f\u7528\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ea\u9700\u8981\u53d1\u52a8\u4e07\u80fd\u7684BING\u5c31\u53ef\u4ee5\u4e86[PL2303win10\u9a71\u52a8\u5b89\u88c5\u6559\u7a0b](https://blog.csdn.net/wtf3505/article/details/104138727)\uff0c\u5b89\u88c5\u5b8c\u4e4b\u540e\u5c31\u53ef\u4ee5\u6109\u5feb\u7684\u4f7f\u7528\u4e32\u53e3\u5bf9\u4eea\u5668\u8fdb\u884c\u63a7\u5236\u4e86\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4e32\u53e3\u4eea\u5668\u662f\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u7684\u56e0\u4e3a\u4e32\u53e3\u6d89\u53ca\u5230\u6ce2\u7279\u7387\u7684\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u8fd8\u662f\u9700\u8981\u8bbe\u7f6e\u4e00\u4e0b\u6ce2\u7279\u7387\uff0c\u4e00\u822c\u4eea\u5668\u652f\u6301\u4e32\u53e3\u63a7\u5236\uff0c\u6ce2\u7279\u7387\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u5982\u679c\u65e0\u6cd5\u627e\u5230\u5c31\u53bb\u5b98\u7f51\u4e0b\u8f7d\u624b\u518c\u770b\u770b\u54ea\u91cc\u6709\u95ee\u9898\u3002\u5177\u4f53\u8bbe\u7f6e\u6ce2\u7279\u7387\u7684\u4ee3\u7801\u6211\u5df2\u7ecf\u5728ZLG2014\u4e0a\u8fdb\u884c\u4f53\u73b0\u4e86,\u5982\u679c\u4f60\u4eec\u7528\u5176\u4ed6\u4eea\u5668\u7684\u8bdd\uff0c\u5c31\u590d\u5236\u7c98\u8d34\u8fd9\u53e5\u8bdd\u5230\u5b83\u7684\u5bf9\u8c61\u521d\u59cb\u5316\u51fd\u6570\u91cc\u9762\u53bb\uff0c\u53bb\u8bbe\u7f6e\u5bf9\u5e94\u7684\u6ce2\u7279\u7387\u5c31\u597d\u4e86\n\n```python\nself.instr.baud_rate = 115200\n```\n\n\u7f51\u53e3:\n\n\u7f51\u53e3\u662f\u4e0d\u9700\u8981\u5b89\u88c5\u9a71\u52a8\u7684,\u53ea\u9700\u8981\u8be5\u7535\u8111\u548c\u8bbe\u5907\u5904\u4e8e\u540c\u4e00\u7f51\u6bb5\u5373\u53ef(\u6ce8\u610f ZLG\u7cfb\u5217\u7684\u793a\u6ce2\u5668LAN\u63a7\u5236\u4e0d\u7a33\u5b9a,\u4e0d\u5efa\u8bae\u4f7f\u7528)\n\n## \u4ee3\u7801\u63a7\u5236\n\n\u5728\u4e0a\u9762\u5b89\u88c5\u5b8c\u6a21\u5757\u8fc7\u540e\u76f4\u63a5\u5bfc\u5165\u672c\u6a21\u5757\n\n```python\nfrom yc-pyvisa import *\n```\n\n\u7136\u540e\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u4eea\u5668,\u91cc\u9762\u6709\u9ed8\u8ba4\u7684\u5bf9\u5e94\u8bbe\u5907\u7684\u4eea\u5668\u5730\u5740,\u82e5\u5730\u5740\u6709\u53d8\u52a8\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\u586b\u5165\u5730\u5740\u53c2\u6570\u5c31\u597d\n\n```python\noscilloscope = ZLG1104()#\u793a\u6ce2\u5668\noscilloscope2 = ZLG2014()#\u793a\u6ce2\u5668\nmultimeter  = Agilent_34410A()#\u53f0\u5f0f\u4e07\u7528\u8868\npower = Agilent_66319d()#\u7535\u6e90\npower2 = AgilentE3649A()#\u7535\u6e90\n```\n\nGPIB\u7684\u5730\u5740\u9700\u8981\u901a\u8fc7\u4eea\u5668\u81ea\u5df1\u53bb\u8bbe\u7f6e,\u4e5f\u53ef\u901a\u8fc7\u5728\u4e0a\u9762\u5b89\u88c5\u5b8c NI VISA\u4e4b\u540e\u51fa\u73b0\u7684\u4e00\u4e2a\u914d\u7f6e\u7ba1\u7406\u8f6f\u4ef6(`NI MAX`),\u904d\u5386\u5bf9\u5e94\u7684\u8bbe\u522b\u5730\u5740\uff0c\u4e5f\u53ef\u901a\u8fc7\u4ee3\u7801\u53bb\u904d\u5386\u5bf9\u5e94\u7684\u8bbe\u5907\u5730\u5740\u3002\n\n``` python\nrm = visa.ResourceManager()\nnew = rm.list_resources()#\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u91cc\u9762\u5305\u542b\u4e86\u6240\u6709\u7684\u5730\u5740\n```\n\n\u4f46\u662f\u5728\u6211\u5b9e\u8df5\u4e0b\u6765\u53d1\u73b0\u901a\u8fc7\u4ee3\u7801ZLG\u7684\u793a\u6ce2\u5668\u662f\u4e0d\u80fd\u591f\u904d\u5386\u5230\u4ed6\u7684USB\u5730\u5740\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u4f60\u53ea\u80fd\u901a\u8fc7`NI MAX`\u53bb\u904d\u5386\u5b83\u7684\u5730\u5740\uff0c\u540c\u65f6ZLG\u793a\u6ce2\u5668\u7684USB\u5730\u5740\u90fd\u662f\u5b8c\u5168\u4e00\u6837\u7684\u4e14\u65e0\u6cd5\u66f4\u6539\uff0c\u6240\u4ee5\u5f53\u4f60\u9700\u8981\u540c\u65f6\u63a7\u5236\u4e24\u53f0\u4ee5\u4e0a\u7684\u793a\u6ce2\u5668\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u901a\u8fc71\u4e2aUSB+n\u4e2a\u4e32\u53e3\u53bb\u63a7\u5236\u793a\u6ce2\u5668\u3002\n\n\u540e\u9762\u63a7\u5236\u4eea\u5668\u5c31\u7528\u5bf9\u5e94\u7684\u51fd\u6570\u63a7\u5236\u5c31\u597d,\u6bd4\u5982:\n\n```python\nfre = oscilloscope.Get_Frequency(1)\n```\n\n\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5bf9\u5e94\u793a\u6ce2\u5668\u901a\u90531\u7684\u8f93\u5165\u9891\u7387\n\n## \u8fdb\u9636\n\n\u5982\u679c\u6211\u63d0\u4f9b\u7684\u5e93\u91cc\u9762\u7684\u51fd\u6570\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42\uff0c\u4e5f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u793a\u6ce2\u5668\u7684\u529f\u80fd\u5f88\u591a\uff0c\u7531\u4e8e\u65f6\u95f4\u539f\u56e0\u53ea\u5b9e\u73b0\u4e86\u76ee\u524d\u7528\u5f97\u5230\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u53bb\u5b98\u7f51\u4e0b\u8f7d\u5bf9\u5e94\u7684\u624b\u518c\uff0c\uff08\u540c\u65f6\u8fd9\u91cc\u4e5f\u4f1a\u63d0\u4f9b\u4e00\u4e9b\u6211\u4e0b\u8f7d\u5230\u7684\u624b\u518c\uff0c\u5728\u540c\u76ee\u5f55\u4e0b\uff09\u53bb\u67e5\u627e\u5b83\u5bf9\u5e94\u7684\u67d0\u4e9b\u529f\u80fd\u7684SCIP\u6307\u4ee4\uff0c\u7136\u540e\u6574\u7406\u6210\u51fd\u6570\u5c31\u597d\u3002\u5f53\u7136\u5982\u679c\u80fd\u901a\u8fc7gitee \u63d0\u4ea4\u4e0a\u6765\u5c31\u66f4\u597d\u4e86\uff0c\u6211\u4f1a\u628a\u6bcf\u4e00\u6b21\u6b63\u786e\u63d0\u4ea4\u90fd\u53d1\u5e03\u4e0a\u53bb\uff0c\u4f9b\u5927\u5bb6\u4f7f\u7528\uff0c\u5f53\u7136\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u5bf9\u81ea\u5df1\u63d0\u4ea4\u7684\u6bcf\u4e00\u4e2a\u5bf9\u8c61\uff08\u4eea\u5668\uff09\uff0c\u51fd\u6570\u90fd\u5199\u597d\u6ce8\u91ca\uff0c\u65b9\u4fbf\u5927\u5bb6\u7406\u89e3\u5176\u529f\u80fd\uff08\u867d\u7136\u7b2c\u4e00\u7248\u6709\u5f88\u591a\u51fd\u6570\u90fd\u6ca1\u5199\u6ce8\u91ca\u3002\u3002\u3002\uff0c\u4f46\u662f\u540e\u9762\u6709\u65f6\u95f4\u4f1a\u6539\u7684\uff09\n\n## \u5b8c\u6574\u6837\u4f8b\u4ee3\u7801\n\n\u4e0b\u9762\u662fYC3122\u7684\u5e94\u6025\u7b5b\u7247\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u4e2a\u6837\u4f8b\n\n```python\nfrom ast import While\nfrom distutils import extension\nfrom email import charset\nimport os\nimport glob\nfrom pickle import FALSE, NONE, TRUE\nfrom time import sleep\nimport sys\nfrom webbrowser import get\nfrom yc_pyvisa import *\nimport openpyxl\nimport threading\nfrom logger import *\nmax_val = 0\notp_buff = []\ndef get_cmd_result(cmd):\n    result = os.popen(cmd)\n    res = result.read()\n    return res\ndef e_p():\n    while('CPU Stopped' not in get_cmd_result(\"e p\")):\n        continue\n    return\ndef e_c():\n    while('CPU Running' not in get_cmd_result(\"e c\")):\n        continue\n    return\ndef file_name(file_name):\n    global max_val\n    file_txt = glob.glob(file_name)\n    if(file_txt == []):\n        max_val = 0x100\n        return\n    for filename in file_txt:\n        try:\n            str1 = str(os.path.basename(filename))\n            str1 = str1.replace('.txt',\"\").replace(\"id\",\"\")\n            str1 = int(str1,16)\n            if(max_val < str1):\n                max_val = str1\n        except Exception as e:\n            print(e)\n            pass\n    max_val += 1\ndef count_bits_2(value):\n    count = 0\n    while(value):\n        value &= value - 1\n        count += 1\n    return count\ndef auto_set_fre():\n    get_cmd_result(\"e 20004 0155\")\n    sleep(0.2)\n    get_cmd_result(\"e 20000 02\")\n    sleep(1)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return FALSE\n    fre1 = oscilloscope.Get_Frequency()\n    print(fre1)\n    get_cmd_result(\"e 20004 0165\")\n    get_cmd_result(\"e 20000 02\")\n    sleep(0.2)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return FALSE\n    fre2 = oscilloscope.Get_Frequency()\n    print(fre2)\n    fer = int((fre2-fre1)/16)\n    result = int(0x155 + (24000000 - fre1)/fer)\n    get_cmd_result(\"e 20004 \" + hex(result).replace(\"0x\",\"\"))\n    get_cmd_result(\"e 20000 02\")\n    sleep(0.2)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return FALSE\n    fre3 = oscilloscope.Get_Frequency()\n    print(fre3)\n    if(fre3 <24050000 and fre3 >23950000):\n        return result\n    while(fre3 >24050000):\n        result-=1\n        get_cmd_result(\"e 20004 \" + hex(result-30).replace(\"0x\",\"\"))\n        get_cmd_result(\"e 20000 02\")\n        sleep(0.2)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        fre3 = oscilloscope.Get_Frequency()\n        if(fre3 <24050000 and fre3 >23950000):\n            return result\n    while(fre3 < 23950000):\n        result+=1\n        get_cmd_result(\"e 20004 \" + hex(result).replace(\"0x\",\"\"))\n        get_cmd_result(\"e 20000 02\")\n        sleep(0.2)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        fre3 = oscilloscope.Get_Frequency()\n        if(fre3 <24050000 and fre3 >23950000):\n            return result\n    return result\n    # power.setVoltage(5,2)\n    # set_rc192_val(0x5c)\n    # power.setVoltage(0,2)\n    # sleep(0.1)\n    # power.setVoltage(5,2)\n    # fre1 = oscilloscope.Get_Frequency()\n    # print(fre1)\n    # set_rc192_val(0x65)\n    # power.setVoltage(0,2)\n    # sleep(0.1)\n    # power.setVoltage(5,2)\n    # fre2 = oscilloscope.Get_Frequency()\n    # print(fre2)\n    # fer = int((fre2-fre1)/16)\n    # result = int(0x55 + (24000000 - fre1)/fer)\n    # set_rc192_val(result)\n    # fre3 = oscilloscope.Get_Frequency()\n    # power.setVoltage(0,2)\n    # sleep(0.1)\n    # power.setVoltage(5,2)\n    # print(fre3)\n    # if(fre3 <24050000 and fre3 >23950000):\n    #     return result\n    # while(fre3 >24050000):\n    #     result-=1\n    #     set_rc192_val(result)\n    #     fre3 = oscilloscope.Get_Frequency()\n    #     power.setVoltage(0,2)\n    #     sleep(0.1)\n    #     power.setVoltage(5,2)\n    #     if(fre3 <24050000 and fre3 >23950000):\n    #         return result\n    # while(fre3 < 23950000):\n    #     result+=1\n    #     set_rc192_val(result)\n    #     fre3 = oscilloscope.Get_Frequency()\n    #     power.setVoltage(0,2)\n    #     sleep(0.1)\n    #     power.setVoltage(5,2)\n    #     if(fre3 <24050000 and fre3 >23950000):\n    #         return result\n    # return result\ndef set_rc192_val(input_val):\n    while(True):\n        if('CPU Stopped' in get_cmd_result(\"e p\")):\n            get_cmd_result(\"e f0c18 00000000\")\n            get_cmd_result(\"e f0c1c 00000000\")\n            get_cmd_result(\"e f0c49 30\")\n            get_cmd_result(\"e f8703 10\")\n            get_cmd_result(\"e faaa0 55\")\n            get_cmd_result(\"e faaa0 aa\")\n            get_cmd_result(\"e faaa0 17\")\n            get_cmd_result(\"e faaa4 01\")\n            get_cmd_result(\"e fa802 \" + hex(input_val).replace(\"0x\",\"\"))\n            print(\"input_val = %x\"%input_val)\n            break\n\ndef down_otp(cmd):\n    get_cmd_result(\"e 20000 \"+ cmd)\n    sleep(0.1)\n    while(\"01\" not in get_cmd_result(\"e 20001\")):\n        continue\n    # while(True):\n    #     if('CPU Stopped' in get_cmd_result(\"e p\")):\n    #         get_cmd_result(\"e f853c 88\")\n    #         if('f8530 :                                     88'in get_cmd_result(\"e f853c\")):\n    #             get_cmd_result(\"e r pc c0\")\n    #             if('read cm0 reg f = c0\\n'in get_cmd_result(\"e r pc\")):\n    #                 get_cmd_result(\"e otw 12c \" + hex(input_val).replace(\"0x\",\"\"))\n    #                 if(count_bits_2(input_val) % 2 == 1):\n    #                     get_cmd_result(\"e otw 12d 81\")\n    #                 elif(count_bits_2(input_val) % 2 == 0):\n    #                     get_cmd_result(\"e otw 12d c1\")\n    #                 break\n    return\ndef RC192_test():\n    cail_val = auto_set_fre()\n    if(cail_val == None):\n        error(\"RC192 cail_val ERROR \" + str(cail_val))\n    print(cail_val)\n    otp_buff.append(hex(cail_val))\n    down_otp(\"03\")\n\ndef down_ft_code():\n    e_p()\n    os.system(\"tool\\d.bat\")\n\ndef osc_32k_cal():\n    get_cmd_result(\"e 20000 04\")\n    sleep(0.1)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return False\n    oscilloscope.Set_Timebase(\"10us\")\n    osc32k_cail_val = oscilloscope.Get_Frequency()\n    oscilloscope.Set_Timebase(\"100us\")\n    oscilloscope.write(\":CHANnel1:DISPlay OFF\")\n    print(osc32k_cail_val)\n    otp_buff.append((hex)(osc32k_cail_val))\n    get_cmd_result(\"e 20004 \" + to_hex(osc32k_cail_val))\n    down_otp(\"05\")\n    return osc32k_cail_val\ndef DVDD_test():\n    DVDD_V = oscilloscope.Get_Vol(2)\n    if(DVDD_V>1.3 or DVDD_V<1.15):\n        error(\"DVDD_V ERROR \"+str(DVDD_V))\ndef ft_test_init():\n    power.setVoltage(0,2)\n    sleep(1)\n    CURR_VUBT = multimeter.Read_Curr()\n    if(CURR_VUBT<1e-06 or CURR_VUBT>3e-06):\n        error(\"VBUT ERROR\"+ str(CURR_VUBT))\n    power.setVoltage(5,2)\n    power.setVoltage(3.3,1)\n    DVDD_test()\n    bist_test()\n    down_ft_code()\n    sleep(0.6)\n\ndef xw_toExcel(data,excelname):  # xlsxwriter\u5e93\u50a8\u5b58\u6570\u636e\u5230excel\n    try:\n        workbook = openpyxl.load_workbook(excelname)  # \u6253\u5f00\u5de5\u4f5c\u7c3f\n        worksheet1 = workbook.active  # \u521b\u5efa\u5b50\u8868\n    except Exception as a:\n        print(a)\n        workbook = openpyxl.Workbook(excelname)\n        workbook.save(filename= excelname)  # \u5173\u95ed\u8868\n        workbook.close()\n        workbook = openpyxl.load_workbook(excelname)  # \u6253\u5f00\u5de5\u4f5c\u7c3f\n        worksheet1 = workbook.active\n    rows = worksheet1.max_row\n    j = 0\n    for i in data:\n        j+=1\n        worksheet1.cell(row=rows+1,column = j).value = i\n    workbook.save(filename= excelname)  # \u5173\u95ed\u8868\n    workbook.close()\ndef Creat_Thread(thread,*args1):\n    thread_uart_read=threading.Thread(target=thread,args=args1)\n    thread_uart_read.setDaemon(True)\n    thread_uart_read.start()\ndef Check_CurrThread():\n    while True:\n        CURR_CHARG_IN = power.Get_Curr(2)\n        if(CURR_CHARG_IN > 0.02):\n            error(\"CURR_CHARG_IN ERROR \" + str(CURR_CHARG_IN))\n        sleep(1)\ndef read_id_txt(max_val):\n    with open(\".\\AB_NEW_ID\\id\"+ hex(max_val).replace(\"0x\",\"\") + \".txt\",\"r\") as f:\n        str = f.read().replace(\"\\n\",\"\")\n    return str\ndef Write_OtpBySelf():\n    power.setVoltage(5,2)\n    # val = int(otp_buff[6],16)\n    # xor_val = 0\n    # for i in range(0,4):\n    #     xor_val^=val>>i&0x1\n    # val|=0x80\n    # val|=xor_val<<6\n    # input_check = input(\"\u786e\u8ba4\u70e7\u5f55otp\uff1f(y/n):\")\n    # if((input_check.lower() != 'y')):\n    #     sys.exit()\n    power.setVoltage(0,2)\n    sleep(0.5)\n    power.setVoltage(5,2)\n    xw_toExcel(otp_buff,\"3122_opt.xlsx\")\n    while(True):\n        if('CPU Stopped' in get_cmd_result(\"e p\")):\n            get_cmd_result(\"e f853c 88\")\n            if('f8530 :                                     88'in get_cmd_result(\"e f853c\")):\n                get_cmd_result(\"e r pc c0\")\n                if('read cm0 reg f = c0\\n'in get_cmd_result(\"e r pc\")):\n                    get_cmd_result(\"e otp .\\AB_NEW_ID\\id\"+ hex(max_val).replace(\"0x\",\"\") + \".txt 2\")\n                    sleep(0.1)\n                    get_cmd_result(\"e otp flash_178.txt 178\")\n                    sleep(0.1)\n                    get_cmd_result(\"e otw 139 8f\")\n                    break\ndef bist_test():\n    os.system(r\"tool\\bist.bat\")\n    str = get_cmd_result(\"e f8518l8\")\n    if(\"ff ff 03 00 00 00 00 00\" not in str):\n        error(\"bist test_error\")\ndef gen_id():\n    dir = (os.getcwd() + r\"\\AB_NEW_ID\\*.txt\")\n    file_name(dir)\n    str1 = \"python f_gen3122id.py \" + hex(max_val).replace(\"0x\",\"\")\n    get_cmd_result(str1)\n    otp_buff.append(read_id_txt(max_val))\ndef to_hex(val):\n    return hex(val).replace(\"0x\",\"\")\ndef HvLdo_test():\n    cail_val = 0x6\n    get_cmd_result(\"e 20004 06\")\n    sleep(0.2)\n    get_cmd_result(\"e 20000 0a\")\n    sleep(1)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return FALSE\n    vol = oscilloscope.Get_Vol(3)\n    if(vol<=3.35 and vol >=3.25):\n        return cail_val\n    while(vol<=3.25):\n        cail_val-=1\n        get_cmd_result(\"e 20004 0\"+ to_hex(cail_val))\n        sleep(0.2)\n        get_cmd_result(\"e 20000 0a\")\n        sleep(1)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        vol = oscilloscope.Get_Vol(3)\n        if(vol<=3.35 and vol >=3.25):\n            return cail_val\n        if(cail_val <= 0x0):\n            return False\n    while(vol>=3.35):\n        cail_val+=1\n        get_cmd_result(\"e 20004 0\"+ to_hex(cail_val))\n        sleep(0.2)\n        get_cmd_result(\"e 20000 0a\")\n        sleep(1)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        vol = oscilloscope.Get_Vol(3)\n        if(vol<=3.35 and vol >=3.25):\n            return cail_val\n        if(cail_val >= 0xf):\n            return False\n    return cail_val\ndef Vcard_test(val):\n    cail_val = 0x4\n    if (val==0):\n        valmax = 1.85\n        valmin = 1.75\n    if(val == 1):\n        valmax = 3.05\n        valmin = 2.95\n    get_cmd_result(\"e 20004 010\"+to_hex(cail_val)+\"0\"+str(val))\n    sleep(0.2)\n    get_cmd_result(\"e 20000 0e\")\n    sleep(1)\n    if(\"01\" not in get_cmd_result(\"e 20001\")):\n        return FALSE\n    vol = oscilloscope.Get_Vol(4)\n    if(vol<valmax and vol >valmin):\n        return cail_val\n    while(vol<valmin):\n        cail_val+=1\n        get_cmd_result(\"e 20004 010\"+to_hex(cail_val)+\"0\"+str(val))\n        sleep(0.2)\n        get_cmd_result(\"e 20000 0e\")\n        sleep(1)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        vol = oscilloscope.Get_Vol(4)\n        if(vol<valmax and vol >valmin):\n            return cail_val\n        if(cail_val >= 0xf):\n            return False\n    while(vol>valmax):\n        cail_val-=1\n        get_cmd_result(\"e 20004 010\"+to_hex(cail_val)+\"0\"+str(val))\n        sleep(0.2)\n        get_cmd_result(\"e 20000 0e\")\n        sleep(1)\n        if(\"01\" not in get_cmd_result(\"e 20001\")):\n            return FALSE\n        vol = oscilloscope.Get_Vol(4)\n        if(vol<valmax and vol >valmin):\n            return cail_val\n        if(cail_val <= 0):\n            return False\n    return cail_val\ndef charg_test():\n    get_cmd_result(\"e fa820 321800\")\n    cail_val = 0x8\n    get_cmd_result(\"e fa823 0\"+to_hex(cail_val))\n    sleep(0.2)\n    vol = oscilloscope2.Get_Vol(1)\n    valmax = 4.25\n    valmin = 4.15\n    if(vol<valmax and vol >valmin):\n        return cail_val\n    while(vol<valmin):\n        cail_val+=1\n        get_cmd_result(\"e fa823 0\"+to_hex(cail_val))\n        sleep(0.2)\n        vol = oscilloscope2.Get_Vol(1)\n        if(vol<valmax and vol >valmin):\n            return cail_val\n        if(cail_val >= 0xf):\n            return False\n    while(vol>valmax):\n        cail_val-=1\n        get_cmd_result(\"e fa823 0\"+to_hex(cail_val))\n        sleep(0.2)\n        vol = oscilloscope2.Get_Vol(1)\n        if(vol<valmax and vol >valmin):\n            return cail_val\n        if(cail_val <= 0):\n            return False\n    return cail_val\noscilloscope = ZLG1104()\noscilloscope2 = ZLG2014()\nmultimeter  = Agilent_34410A()\npower = Agilent_66319d()\n# zlg_2014 = ZLG1104(\"USB0::0x04CC::0x121C::123456789::RAW\")\n# os.environ['BAUD']=\"320\"\nif __name__ == \"__main__\":\n    power.setVoltage(0,2)\n    sleep(0.1)\n    power.setVoltage(5,2)\n    while(True):\n        if('CPU Stopped' in get_cmd_result(\"e p\")):\n            get_cmd_result(\"e f853c 88\")\n            if('f8530 :                                     88'in get_cmd_result(\"e f853c\")):\n                get_cmd_result(\"e r pc c0\")\n                if('read cm0 reg f = c0\\n'in get_cmd_result(\"e r pc\")):\n                    get_cmd_result(\"e otw 0 1111\")\n                    break\n    ft_test_init()\n    Creat_Thread(Check_CurrThread)\n    gen_id()\n    RC192_test()\n    print(osc_32k_cal())\n\n    val = HvLdo_test()\n    otp_buff.append(val)\n    print(val)\n    down_otp(\"0b\")\n    val = Vcard_test(0)\n    otp_buff.append(val)\n    print(val)\n    down_otp(\"0f\")\n\n    val = Vcard_test(1)\n    otp_buff.append(val)\n    print(val)\n    down_otp(\"0f\")\n    # char_val = charg_test()\n    # otp_buff.append(char_val)\n    # print(char_val)\n\n    print(otp_buff)\n    Write_OtpBySelf()\n\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/susunl/yc_pyvisa",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yc-pyvisa",
            "package_url": "https://pypi.org/project/yc-pyvisa/",
            "platform": "any",
            "project_url": "https://pypi.org/project/yc-pyvisa/",
            "project_urls": {
                "Homepage": "https://gitee.com/susunl/yc_pyvisa"
            },
            "release_url": "https://pypi.org/project/yc-pyvisa/0.0.7/",
            "requires_dist": [
                "pyvisa (>=1.11.3)",
                "numpy (>=1.19.2)",
                "regex (>=2020.10.15)"
            ],
            "requires_python": ">=3.5",
            "summary": "=\u7528\u4e8eYICHIP\u5185\u90e8\u4eea\u5668\u8bbe\u5907\u7684\u63a7\u5236",
            "version": "0.0.7",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14932596,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "08c869992b860be47a34c197b1a1ca94",
                    "sha256": "20fcf9b85c6aff81ac52704766f5f29d3596eff691c05f876deda260ecca598e"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.7-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "08c869992b860be47a34c197b1a1ca94",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.5",
                "size": 10634,
                "upload_time": "2022-08-30T08:10:16",
                "upload_time_iso_8601": "2022-08-30T08:10:16.472762Z",
                "url": "https://files.pythonhosted.org/packages/34/0f/8c375f59a3715b6f8981111901a126f1bbaf1f1fac878db9d6bbff8252ab/yc_pyvisa-0.0.7-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "490c85b507ee38e971368316393dddb5",
                    "sha256": "e37350130b68057528491c6ed772e0a0822421c94649a23c8cd28a651c7305bd"
                },
                "downloads": -1,
                "filename": "yc_pyvisa-0.0.7.tar.gz",
                "has_sig": false,
                "md5_digest": "490c85b507ee38e971368316393dddb5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 21619,
                "upload_time": "2022-08-30T08:10:23",
                "upload_time_iso_8601": "2022-08-30T08:10:23.042033Z",
                "url": "https://files.pythonhosted.org/packages/a5/59/a1c601879932249b7fcdfd684a6dcc7c010fa108d7013bbc4f96286a045a/yc_pyvisa-0.0.7.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}