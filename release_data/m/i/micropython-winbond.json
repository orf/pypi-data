{
    "0.2.0": {
        "info": {
            "author": "brainelectronics",
            "author_email": "info@brainelectronics.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/brainelectronics/micropython-winbond",
            "keywords": "micropython,winbond,library",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "micropython-winbond",
            "package_url": "https://pypi.org/project/micropython-winbond/",
            "platform": "",
            "project_url": "https://pypi.org/project/micropython-winbond/",
            "project_urls": {
                "Bug Reports": "https://github.com/brainelectronics/micropython-winbond/issues",
                "Homepage": "https://github.com/brainelectronics/micropython-winbond",
                "Source": "https://github.com/brainelectronics/micropython-winbond"
            },
            "release_url": "https://pypi.org/project/micropython-winbond/0.2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple MicroPython Winbond library",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15641041,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e888542f8d215faef851d6385f0609eb",
                    "sha256": "98e7bb69fb37f5126be66fa0fe5e047094bd43fc27a7572e87081de676b6bbfb"
                },
                "downloads": -1,
                "filename": "micropython-winbond-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e888542f8d215faef851d6385f0609eb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7441,
                "upload_time": "2022-02-21T18:50:36",
                "upload_time_iso_8601": "2022-02-21T18:50:36.002716Z",
                "url": "https://files.pythonhosted.org/packages/d1/c0/7509bfb068055f853b81604e228a9147abbdd85be8e1ec1e9f767ab2b2a1/micropython-winbond-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.0": {
        "info": {
            "author": "brainelectronics",
            "author_email": "info@brainelectronics.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers"
            ],
            "description": "# MicroPython Winbond Flash\n\n[![Downloads](https://pepy.tech/badge/micropython-winbond)](https://pepy.tech/project/micropython-winbond)\n![Release](https://img.shields.io/github/v/release/brainelectronics/micropython-winbond?include_prereleases&color=success)\n![MicroPython](https://img.shields.io/badge/micropython-Ok-green.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![CI](https://github.com/brainelectronics/micropython-winbond/actions/workflows/release.yml/badge.svg)](https://github.com/brainelectronics/micropython-winbond/actions/workflows/release.yml)\n\nMicroPython library to interact with Winbond W25Q Flash chips\n\n-----------------------\n\n<!-- MarkdownTOC -->\n\n- [Installation](#installation)\n\t- [Install required tools](#install-required-tools)\n- [Stetup](#stetup)\n\t- [Install package with pip](#install-package-with-pip)\n\t- [Manually](#manually)\n\t\t- [Upload files to board](#upload-files-to-board)\n\t- [Open REPL \\(in rshell\\)](#open-repl-in-rshell)\n- [Credits](#credits)\n\n<!-- /MarkdownTOC -->\n\n## Installation\n\n### Install required tools\n\nPython3 must be installed on your system. Check the current Python version\nwith the following command\n\n```bash\npython --version\npython3 --version\n```\n\nDepending on which command `Python 3.x.y` (with x.y as some numbers) is\nreturned, use that command to proceed.\n\n```bash\npython3 -m venv .venv\nsource .venv/bin/activate\n\npip install -r requirements.txt\n```\n\nFor interaction with the filesystem of the device the\n[Remote MicroPython shell][ref-remote-upy-shell] can be used.\n\nTest the tool by showing its man/help info description.\n\n```bash\nrshell --help\n```\n\n## Stetup\n\n### Install package with pip\n\nConnect your MicroPython board to a network\n\n```python\nimport network\nstation = network.WLAN(network.STA_IF)\nstation.connect('SSID', 'PASSWORD')\nstation.isconnected()\n```\n\nand install this lib on the MicroPython device like this\n\n```python\nimport upip\nupip.install('micropython-winbond')\n```\n\n### Manually\n\n#### Upload files to board\n\nCopy the module to the MicroPython board and import them as shown below\nusing [Remote MicroPython shell][ref-remote-upy-shell]\n\nOpen the remote shell with the following command. Additionally use `-b 115200`\nin case no CP210x is used but a CH34x.\n\n```bash\nrshell -p /dev/tty.SLAB_USBtoUART --editor nano\n```\n\nCheck the board config with this simple `boards` call inside the rshell. The\nresult will look similar to this after the connection\n\n```bash\nUsing buffer-size of 32\nConnecting to /dev/tty.SLAB_USBtoUART (buffer-size 32)...\nTrying to connect to REPL  connected\nRetrieving sysname ... esp32\nTesting if ubinascii.unhexlify exists ... Y\nRetrieving root directories ... /boot.py/\nSetting time ... Feb 17, 2022 08:56:14\nEvaluating board_name ... pyboard\nRetrieving time epoch ... Jan 01, 2000\nWelcome to rshell. Use Control-D (or the exit command) to exit rshell.\n/Users/Jones/Downloads/MicroPython/micropython-winbond> boards\npyboard @ /dev/tty.SLAB_USBtoUART connected Epoch: 2000 Dirs: /pyboard/boot.py\n```\n\nPerform the following command to copy all files and folders to the device\n\n```bash\ncp SOURCE_FILE_NAME /pyboard\n\n# optional copy it as another file name\ncp SOURCE_FILE_NAME /pyboard/NEW_FILE_NAME\n```\n\nUse these commands to download the files of this repo to the board.\n\n```bash\ncp winbond.py /pyboard\ncp main.py /pyboard\ncp boot.py /pyboard\n```\n\n### Open REPL (in rshell)\n\nCall `repl` in the rshell. Use CTRL+X to leave the repl or CTRL+D for a soft\nreboot of the device.\n\nThe [`boot.py`](boot.py) code will perform the following steps:\n\n * create a flash object on `SPI2` with a SPI speed of 2kHz, chip select on\n   machine `pin 5` and a software reset interface. Check the datasheet of your\n   flash chip whether software reset is supported.\n * try to mount the external flash to `/external`\n \t * in case of `OSError 19` the filesystem will be created first\n \t * otherwise the complete flash will be erased and the filesystem created\n \t * finally mount the external flash\n\nThe initial steps of formatting the flash and creating the filesystem will\ntake around 45 seconds on an ESP32 board like the [BE32-01][ref-be32] equipped\nwith a 128MBit (16MB) external Winbond flash.\n\nThe [`main.py`](main.py) code will perform the following steps:\n\n * list all files and folders on the boards root directory\n * try to read a file named `some-file.txt` on the external flash\n \t * if the file does not exist, it will be created\n * extend the content of `some-file.txt` on the external flash with new content\n * list all files and folders on the external flash directory\n\nA successful output of a first run after a soft reboot should look similar to\nthis\n\n```\nMPY: soft reboot\nmanufacturer: 0xef\nmem_type: 64\ndevice: 0x4018\ncapacity: 16777216 bytes\nMounting the external flash to \"/external\" ...\nFailed to mount the external flash due to: [Errno 19] ENODEV\nCreating filesystem for external flash ...\nThis might take up to 10 seconds\nFilesystem for external flash created\nExternal flash mounted to \"/external\"\nboot.py steps completed\nEntered main.py\nListing all files and folders on the boards root directory \"/\":\n['external', 'boot.py', 'main.py', 'winbond.py']\nNo test file \"some-file.txt\" exists on external flash \"/external\", creating it now\nListing all files and folders on the external flash directory \"/external\":\n['some-file.txt']\nFinished main.py code. Returning to REPL now\nMicroPython v1.18 on 2022-01-17; ESP32 module with ESP32\nType \"help()\" for more information.\n>>>\nMPY: soft reboot\nmanufacturer: 0xef\nmem_type: 64\ndevice: 0x4018\ncapacity: 16777216 bytes\nMounting the external flash to \"/external\" ...\nExternal flash mounted to \"/external\"\nboot.py steps completed\nEntered main.py\nListing all files and folders on the boards root directory \"/\":\n['external', 'boot.py', 'main.py', 'winbond.py']\nTest file \"some-file.txt\" exists on external flash \"/external\"\nThis is its content:\nHello World at 698411330\n\nAppending new content to \"/external/some-file.txt\"\nListing all files and folders on the external flash directory \"/external\":\n['some-file.txt']\nFinished main.py code. Returning to REPL now\nMicroPython v1.18 on 2022-01-17; ESP32 module with ESP32\nType \"help()\" for more information.\n```\n\n## Credits\n\nKudos and big thank you to [crizeo of the MicroPython Forum][ref-crizeo] and\nhis [post to use Winbond flash chips][ref-upy-forum-winbond-driver]\n\n<!-- Links -->\n[ref-remote-upy-shell]: https://github.com/dhylands/rshell\n[ref-be32]: https://github.com/brainelectronics/BE32-01/\n[ref-pfalcon-picoweb-sdist-upip]: https://github.com/pfalcon/picoweb/blob/b74428ebdde97ed1795338c13a3bdf05d71366a0/sdist_upip.py\n[ref-test-pypi]: https://test.pypi.org/\n[ref-pypi]: https://pypi.org/\n[ref-invalid-auth-test-pypi]: https://test.pypi.org/help/#invalid-auth\n[ref-crizeo]: https://forum.micropython.org/memberlist.php?mode=viewprofile&u=3067\n[ref-upy-forum-winbond-driver]: https://forum.micropython.org/viewtopic.php?f=16&t=3899&start=10\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/brainelectronics/micropython-winbond",
            "keywords": "micropython,winbond,library",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "micropython-winbond",
            "package_url": "https://pypi.org/project/micropython-winbond/",
            "platform": null,
            "project_url": "https://pypi.org/project/micropython-winbond/",
            "project_urls": {
                "Bug Reports": "https://github.com/brainelectronics/micropython-winbond/issues",
                "Homepage": "https://github.com/brainelectronics/micropython-winbond",
                "Source": "https://github.com/brainelectronics/micropython-winbond"
            },
            "release_url": "https://pypi.org/project/micropython-winbond/0.3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Simple MicroPython Winbond library",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15641041,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7620c6bbcefab328da5952dabfe933be",
                    "sha256": "8a98714af8e30c52e604556847a561fe17128682f782b4a2d410c1719721c11d"
                },
                "downloads": -1,
                "filename": "micropython-winbond-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "7620c6bbcefab328da5952dabfe933be",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7372,
                "upload_time": "2022-11-03T13:01:44",
                "upload_time_iso_8601": "2022-11-03T13:01:44.493572Z",
                "url": "https://files.pythonhosted.org/packages/61/36/cf76e68bf38c0a578b40db968372645824529811496dee31a88944142bcd/micropython-winbond-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}