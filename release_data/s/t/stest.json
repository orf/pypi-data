{
    "1.0.0": {
        "info": {
            "author": "\u601d\u6587\u4f1f",
            "author_email": "hotswwkyo@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Simplified)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hotswwkyo/stest",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stest",
            "package_url": "https://pypi.org/project/stest/",
            "platform": "",
            "project_url": "https://pypi.org/project/stest/",
            "project_urls": {
                "Homepage": "https://github.com/hotswwkyo/stest"
            },
            "release_url": "https://pypi.org/project/stest/1.0.0/",
            "requires_dist": [
                "xlrd (==1.2.0)"
            ],
            "requires_python": ">=3",
            "summary": "\u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13598784,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4de370e346e18016e33ae485a8c758a8",
                    "sha256": "01db0a81b3e5063cac8869e9a8fafaa254c9c68e0d9996354d2f2bf604b1bcb1"
                },
                "downloads": -1,
                "filename": "stest-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4de370e346e18016e33ae485a8c758a8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 215450,
                "upload_time": "2021-10-07T04:49:03",
                "upload_time_iso_8601": "2021-10-07T04:49:03.374586Z",
                "url": "https://files.pythonhosted.org/packages/31/56/d3c3ba6966c9c307395cc7a23f5d22c9e7a160ce074bc9a6811f0ef6bf76/stest-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1cf8219e07ab6474def8f773e6e051b1",
                    "sha256": "a932e8d46fa4c15d1ca68b89303a18adb0ff9cbf2f5d6e416471db05d5a21c95"
                },
                "downloads": -1,
                "filename": "stest-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1cf8219e07ab6474def8f773e6e051b1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 211750,
                "upload_time": "2021-10-07T04:49:05",
                "upload_time_iso_8601": "2021-10-07T04:49:05.804274Z",
                "url": "https://files.pythonhosted.org/packages/3c/6a/36372bcf90f1383f570ce9376eece4326571e852656d682b2dbce0d1f702/stest-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "\u601d\u6587\u4f1f",
            "author_email": "hotswwkyo@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Simplified)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hotswwkyo/stest",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stest",
            "package_url": "https://pypi.org/project/stest/",
            "platform": "",
            "project_url": "https://pypi.org/project/stest/",
            "project_urls": {
                "Homepage": "https://github.com/hotswwkyo/stest"
            },
            "release_url": "https://pypi.org/project/stest/1.0.1/",
            "requires_dist": [
                "xlrd (==1.2.0)"
            ],
            "requires_python": ">=3",
            "summary": "\u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13598784,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2dce52205a1cf0d0060a4f4e720ed7f4",
                    "sha256": "6013941055d1c6ae6bfbd2795d1c532cc845a54d8b0f1bb09962fab0d4b4acab"
                },
                "downloads": -1,
                "filename": "stest-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2dce52205a1cf0d0060a4f4e720ed7f4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 358126,
                "upload_time": "2021-10-13T03:03:56",
                "upload_time_iso_8601": "2021-10-13T03:03:56.791986Z",
                "url": "https://files.pythonhosted.org/packages/6f/84/164fa761ca36c31180d9a54f0bebd3d277c32660c7a00e34683d97cd9259/stest-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e3dd327490a0e21ee8ad5d31e9d1ec0",
                    "sha256": "51af86723ef13a015eee7ef750bbe2b89b8eeea4378b043d690e1363509a55b3"
                },
                "downloads": -1,
                "filename": "stest-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2e3dd327490a0e21ee8ad5d31e9d1ec0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 644726,
                "upload_time": "2021-10-13T03:04:00",
                "upload_time_iso_8601": "2021-10-13T03:04:00.857089Z",
                "url": "https://files.pythonhosted.org/packages/5b/70/c4db4b628d280ff9e9819f33f06011013c2600302bf4844e63b82c642dfe/stest-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": "\u601d\u6587\u4f1f",
            "author_email": "hotswwkyo@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Simplified)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hotswwkyo/stest",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stest",
            "package_url": "https://pypi.org/project/stest/",
            "platform": "",
            "project_url": "https://pypi.org/project/stest/",
            "project_urls": {
                "Homepage": "https://github.com/hotswwkyo/stest"
            },
            "release_url": "https://pypi.org/project/stest/1.0.2/",
            "requires_dist": [
                "xlrd (==1.2.0)"
            ],
            "requires_python": ">=3",
            "summary": "\u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13598784,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c7a0c5b2296f1443f2cbaa90f7657bda",
                    "sha256": "6ac2836db1dbb5e2c58879cbbad59d386a2202161ce79e30cb6a61330ec77fbe"
                },
                "downloads": -1,
                "filename": "stest-1.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c7a0c5b2296f1443f2cbaa90f7657bda",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 215814,
                "upload_time": "2021-10-20T09:32:21",
                "upload_time_iso_8601": "2021-10-20T09:32:21.050388Z",
                "url": "https://files.pythonhosted.org/packages/78/16/b3fb9446b5183b2bee9766ce2212630e9e576b7b01b6fbf749d268bc0979/stest-1.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c0b018a7cc010901dca08ec3f9ba787b",
                    "sha256": "cf0504ea9f747a76e2d08139117dd3afa44da7f115c152fd123e115fb58fd919"
                },
                "downloads": -1,
                "filename": "stest-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "c0b018a7cc010901dca08ec3f9ba787b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 212076,
                "upload_time": "2021-10-20T09:32:23",
                "upload_time_iso_8601": "2021-10-20T09:32:23.907219Z",
                "url": "https://files.pythonhosted.org/packages/ac/25/32c2263737f31080501c3a7ac982248d7190ed570e92c51b9613e865e3d8/stest-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.3": {
        "info": {
            "author": "\u601d\u6587\u4f1f",
            "author_email": "hotswwkyo@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Simplified)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hotswwkyo/stest",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stest",
            "package_url": "https://pypi.org/project/stest/",
            "platform": null,
            "project_url": "https://pypi.org/project/stest/",
            "project_urls": {
                "Homepage": "https://github.com/hotswwkyo/stest"
            },
            "release_url": "https://pypi.org/project/stest/1.0.3/",
            "requires_dist": [
                "xlrd (==1.2.0)"
            ],
            "requires_python": ">=3",
            "summary": "\u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5",
            "version": "1.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13598784,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b03f3bf14623ea452e3f20a40c0fb1ae",
                    "sha256": "d54a5d8263133a229c7b2e090bb6c1e73027d6bbf4616e05a393df8a46eda0b0"
                },
                "downloads": -1,
                "filename": "stest-1.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b03f3bf14623ea452e3f20a40c0fb1ae",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 260682,
                "upload_time": "2022-04-08T14:41:14",
                "upload_time_iso_8601": "2022-04-08T14:41:14.884416Z",
                "url": "https://files.pythonhosted.org/packages/12/8c/c55946b893f84ff53c4a782ed10bba7fc9f3e3adc8f2c85119dc49c1a103/stest-1.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "53dbd7e63632b99eb91e1016c153b5f5",
                    "sha256": "a3ecaec0e971580e6816163ed6addcbefb9eba8b4078b3bfb3d3bb13ea9d21f6"
                },
                "downloads": -1,
                "filename": "stest-1.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "53dbd7e63632b99eb91e1016c153b5f5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 268571,
                "upload_time": "2022-04-08T14:41:19",
                "upload_time_iso_8601": "2022-04-08T14:41:19.120542Z",
                "url": "https://files.pythonhosted.org/packages/87/d0/729c2f70c027d49f61047ea67f7922ed8aa710182da3b6076cd1cd4c7adb/stest-1.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.4": {
        "info": {
            "author": "\u601d\u6587\u4f1f",
            "author_email": "hotswwkyo@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Chinese (Simplified)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# stest\n \u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5\u3002\n * \u73b0\u5df2\u652f\u6301\u7684\u529f\u80fd\n    >* \u652f\u6301\u547d\u540d\u6d4b\u8bd5\u65b9\u6cd5\u4e14\u4e0d\u4e0e\u65b9\u6cd5\u7684doc string\uff08\u6587\u6863\u5b57\u7b26\u4e32\uff09\u51b2\u7a81\n    >* \u652f\u6301\u8bbe\u7f6e\u6d4b\u8bd5\u65b9\u6cd5\u7f16\u5199\u4eba\uff0c\u4fee\u6539\u4eba\uff0c\u6700\u540e\u4fee\u6539\u4eba\u4ee5\u53ca\u6700\u540e\u4e00\u6b21\u4fee\u6539\u65f6\u95f4\u7b49\u989d\u5916\u8bb0\u5f55\u4fe1\u606f\n    >* \u652f\u6301\u8bbe\u7f6e\u6d4b\u8bd5\u65b9\u6cd5\u7684\u6267\u884c\u987a\u5e8f\n    >* \u652f\u6301\u53c2\u6570\u5316\u529f\u80fd\n    >* \u652f\u6301\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\n    >* \u652f\u6301\u8bbe\u7f6e\u7528\u4f8b\u4f9d\u8d56\n    >* \u5185\u7f6e\u53c2\u6570\u5316\u6570\u636e\u5b58\u53d6\u65b9\u6848(\u4f7f\u7528excel\uff08xlsx\u6216xls\u683c\u5f0f\uff09\u5b58\u53d6\u548c\u7ba1\u7406\u7ef4\u62a4\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\uff0c\u7b80\u6d01\u76f4\u89c2\uff0c\u6613\u4e8e\u4fee\u6539\u7ef4\u62a4)\n    >* \u652f\u6301\u751f\u6210\u66f4\u52a0\u7b80\u6d01\u7f8e\u89c2\u4e14\u53ef\u4f5c\u4e3a\u72ec\u7acb\u6587\u4ef6\u53d1\u9001\u7684HTML\u6d4b\u8bd5\u62a5\u544a\n    >* \u652f\u6301\u751f\u6210jenkins junit xml \u683c\u5f0f\u6d4b\u8bd5\u62a5\u544a\uff0c\u7528\u4e8ejenkins\u96c6\u6210\n    >* \u652f\u6301\u81ea\u52a8\u67e5\u627e\u5e76\u8f7d\u5165\u9879\u76ee\u4e0b\u7684settings.py\u914d\u7f6e\u6587\u4ef6\n    >* \u652f\u6301\u7075\u6d3b\u63a7\u5236\u6d4b\u8bd5\u5931\u8d25\u81ea\u52a8\u622a\u56fe\u5e76\u9644\u52a0\u5230\u6d4b\u8bd5\u62a5\u544a\u4e2d\n    >* \u652f\u6301page object\u6a21\u5f0f\uff0c\u5185\u7f6e\u4e00\u5957\u6613\u4e8e\u7ef4\u62a4\u7684\u89e3\u51b3\u65b9\u6848\n    >* \u9a71\u52a8\u7ba1\u7406\u5668\uff08DRIVER_MANAGER\uff09\u66f4\u52a0\u4fbf\u6377\u7684\u7ba1\u7406\u6253\u5f00\u7684\u9a71\u52a8\u4f1a\u8bdd\n    >* \u5bf9selenium\u3001appium\u3001minium\uff08\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u81ea\u52a8\u5316\u6d4b\u8bd5\u5e93\uff09\u4ee5\u53caWinAppDriver\uff08\u5fae\u8f6f\u5b98\u65b9\u63d0\u4f9b\u7684\u4e00\u6b3e\u7528\u4e8e\u505aWindow\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u7684\u754c\u9762\uff08UI\uff09\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\uff09\u505a\u4e86\u5e95\u5c42\u96c6\u6210\u652f\u6301\n    >    ![](https://github.com/hotswwkyo/stest/blob/main/img/htmlreport.png)\n\n\n## \u5b89\u88c5\n\npip\u65b9\u5f0f\u5b89\u88c5\n> pip install stest\n\n\u6e90\u7801\u65b9\u5f0f\u5b89\u88c5(\u6ce8\u610f\u4ee5\u7ba1\u7406\u5458\u65b9\u5f0f\u6267\u884c)\n> python setup.py install\n\n## \u6267\u884c\u6d4b\u8bd5\n\u547d\u4ee4\u884c\u6267\u884c\n> python -m stest -v -html D:\\temp\\tms_apitest.html calculation_test.py\n\n\u67e5\u770b\u547d\u4ee4\u884c\u53c2\u6570\n> python -m stest -h\n\n\u4ee3\u7801\u4e2d\u8c03stest.main()\u6267\u884c\n\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n\nimport stest\nfrom stest import AbstractTestCase\nfrom stest import Test as testcase\n\n\ndef get_testdatas(test_class_name, test_method_name, *args, **kwargs):\n\n    return [[1,2,3], [3,4,7]]\n\n\nclass Demo1Test(AbstractTestCase):\n\n    @testcase(priority=1, enabled=True, data_provider=get_testdatas, author='\u601d\u6587\u4f1f', description='\u4e24\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n    def integer_addition_02(self, number_1, number_2, expected):\n\n        result = number_1 + number_2\n        self.assertEqual(result, expected)\nif __name__ == '__main__':\n    # Demo1Test.run_test()\n    stest.main()\n```\n\n## \u5feb\u901f\u5f00\u59cb\n\n1. \u5bfc\u5165\u62bd\u8c61\u6d4b\u8bd5\u7c7b\uff08AbstractTestCase\uff09\u548c\u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668\uff08Test\uff09\n2. \u7f16\u5199\u7ee7\u627f\u81eaAbstractTestCase\u7684\u6d4b\u8bd5\u5b50\u7c7b\uff0c\u5b50\u7c7b\u63d0\u4f9b\u4ee5\u4e0b\u5b9e\u7528\u65b9\u6cd5\n    - collect_testcases()\n        > \u83b7\u53d6\u7c7b\u4e0b\u6240\u6709\u4f7f\u7528Test\u88c5\u9970\u7684enable\u4e3aTrue\uff0c\u5e76\u6839\u636epriority\u6392\u5e8f\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u5bf9\u8c61\u5217\u8868\n    - build_self_suite()\n        > \u6784\u5efa\u8be5\u7c7b\u6d4b\u8bd5\u7528\u4f8b\u6784\u6210\u7684\u6d4b\u8bd5\u5957\u4ef6\n    - run_test()\n        > \u6267\u884c\u8be5\u7c7b\u6240\u6709\u4f7f\u7528Test\u88c5\u9970\u7684enable\u4e3aTrue\uff0c\u5e76\u6839\u636epriority\u6392\u5e8f\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\n3. \u4f7f\u7528Test\u6807\u8bb0\u6d4b\u8bd5\u65b9\u6cd5\u3002\n4. \u76f4\u63a5\u8c03\u7528\u6d4b\u8bd5\u7c7b\u7684run_test()\u6267\u884c\u6d4b\u8bd5\n* \u7b80\u5355\u793a\u4f8b\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n\n    from stest import AbstractTestCase\n    from stest import Test as testcase\n\n\n    def get_testdatas(test_class_name, test_method_name, *args, **kwargs):\n\n        return [[1,2,3], [3,4,7]]\n\n\n    class Demo1Test(AbstractTestCase):\n\n        @testcase(priority=1, enabled=True, data_provider=get_testdatas, author='\u601d\u6587\u4f1f', description='\u4e24\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n        def integer_addition_02(self, number_1, number_2, expected):\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n    if __name__ == '__main__':\n        Demo1Test.run_test()\n    ```\n\n* \u7efc\u5408\u793a\u4f8b\uff08\u6765\u81ea\u6e90\u7801\u5305\u4e0b\u7684samples/calculation_test.py\uff09\n\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n    '''\n    @Author: \u601d\u6587\u4f1f\n    @Date: 2021/03/30 15:49:32\n    '''\n    import os\n\n    from stest import settings\n    from stest import AbstractTestCase\n    from stest import Test as testcase\n\n\n    class DataProvider01(object):\n        def get_testdatas(self, testclass, testmethod, *args, **kwargs):\n\n            datas = [\n                {'\u52a0\u65701':1,'\u52a0\u65702':2,'\u9884\u671f':3},\n                {'\u52a0\u65701':4,'\u52a0\u65702':5,'\u9884\u671f':9}\n            ]\n            return datas\n\n    class DataProvider02(object):\n        def get_testdatas(self, testclass, testmethod, *args, **kwargs):\n\n            datas = [\n                [{'\u52a0\u65701':7}, {'\u52a0\u65702':5}, {'\u9884\u671f':12}],\n                [{'\u52a0\u65701':10}, {'\u52a0\u65702':5}, {'\u9884\u671f':15}]\n            ]\n            return datas\n\n    TEST_DATA_FILE_DIRPATH = os.path.dirname(os.path.abspath(__file__))\n\n\n    class CalculationTest(AbstractTestCase):\n        \"\"\"\u6570\u5b66\u8fd0\u7b97\u6d4b\u8bd5\"\"\"\n        @classmethod\n        def setUpClass(cls):\n            pass\n\n        def setUp(self):\n            pass\n\n        @testcase(priority=1, enabled=True, data_provider=DataProvider01().get_testdatas, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n        def integer_addition_01(self, testdata):\n            \"\"\"\u81ea\u5b9a\u4e49\u6570\u636e\u63d0\u4f9b\u8005 - \u6d4b\u8bd5\u65b9\u6cd5\u4e00\u4e2a\u53c2\u6570\u5316\u793a\u4f8b\"\"\"\n\n            number_1 = testdata.get(\"\u52a0\u65701\")\n            number_2 = testdata.get(\"\u52a0\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n\n        @testcase(priority=2, enabled=True, data_provider=DataProvider02().get_testdatas, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u52a0\u6cd5\u6d4b\u8bd502')\n        def integer_addition_02(self, testdata_01, testdata_02, testdata_03):\n            \"\"\"\u81ea\u5b9a\u4e49\u6570\u636e\u63d0\u4f9b\u8005 - \u6d4b\u8bd5\u65b9\u6cd5\u591a\u4e2a\u53c2\u6570\u5316\u793a\u4f8b\"\"\"\n\n            number_1 = testdata_01.get(\"\u52a0\u65701\")\n            number_2 = testdata_02.get(\"\u52a0\u65702\")\n            expected = testdata_03.get(\"\u9884\u671f\")\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n\n        @testcase(priority=3, enabled=True, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u51cf\u6cd5\u6d4b\u8bd501')\n        def integer_subtraction_01(self):\n            \"\"\"\u4e0d\u53c2\u6570\u5316\u793a\u4f8b\"\"\"\n\n            number_1 = 21\n            number_2 = 10\n            result = number_1 - number_2\n            expected = 11\n            self.assertEqual(result, expected)\n\n        @testcase(priority=4, enabled=True, author='\u601d\u6587\u4f1f', data_provider_kwargs={'data_file_dir_path':TEST_DATA_FILE_DIRPATH}, description='\u6574\u6570\u51cf\u6cd5\u6d4b\u8bd502')\n        def integer_subtraction_02(self, testdata):\n            \"\"\"\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u63d0\u4f9b\u8005 - \u4f20\u5165\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\"\"\"\n\n            number_1 = testdata.get(\"\u51cf\u65701\")\n            number_2 = testdata.get(\"\u51cf\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = int(number_1) - int(number_2)\n            self.assertEqual(result, int(expected))\n\n        @testcase(priority=5, enabled=True, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u51cf\u6cd5\u6d4b\u8bd503')\n        def integer_subtraction_03(self,testdata):\n            \"\"\"\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u63d0\u4f9b\u8005 - \u4e0d\u4f20\u5165\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84,\n            \u5219\u4f1a\u68c0\u6d4bsettings.SEVEN_DATA_PROVIDER_DATA_FILE_DIR \u662f\u5426\u8bbe\u7f6e\n            \uff0c\u6ca1\u6709\u8bbe\u7f6e\u5219\u4f1a\u4f7f\u7528\u8be5\u65b9\u6cd5\u6240\u5c5e\u7684\u6d4b\u8bd5\u7c7b\u6240\u5728\u7684\u6a21\u5757\u76ee\u5f55\u8def\u5f84\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u7684\u67e5\u627e\u76ee\u5f55\n            \"\"\"\n\n            number_1 = testdata.get(\"\u51cf\u65701\")\n            number_2 = testdata.get(\"\u51cf\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = int(number_1) - int(number_2)\n            self.assertEqual(result, int(expected))\n\n        def tearDown(self):\n            pass\n\n        @classmethod\n        def tearDownClass(cls):\n            pass\n\n    if __name__ == '__main__':\n        CalculationTest.run_test()\n\n    ```\n\n## settings.py\u914d\u7f6e\u6587\u4ef6\n\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570-sfile\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6307\u5b9a\u67e5\u627e\u914d\u7f6e\u6587\u4ef6\u7684\u5f00\u59cb\u76ee\u5f55\u8def\u5f84\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u6846\u67b6\u4f1a\u81ea\u52a8\u9012\u5f52\u904d\u5386\u9879\u76ee\u76ee\u5f55\uff08\u6839\u636e\u7528\u4f8b\u6240\u5728\u76ee\u5f55\u5f80\u5916\u63a8\uff0c\u7b2c\u4e00\u4e2a\u975epython\u5305\u7684\u76ee\u5f55\u5373\u88ab\u8ba4\u5b9a\u4e3a\u9879\u76ee\u76ee\u5f55\uff09\u53ca\u5176\u5b50\u5b59\u76ee\u5f55\uff0c\u67e5\u627esettings.py\u914d\u7f6e\u6587\u4ef6\uff0c\u627e\u5230\u5219\u4f1a\u5728\u6536\u96c6\u7528\u4f8b\u6d4b\u8bd5\u6570\u636e\u4e4b\u524d\u81ea\u52a8\u5bfc\u5165\u8be5\u6587\u4ef6\u3002\u53ef\u901a\u8fc7from stest import settings \u5bfc\u5165\u914d\u7f6e\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7settings\u5bf9\u8c61\u8bbf\u95ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u5b57\u6bb5\uff08\u5b57\u6bb5\u5fc5\u987b\u662f\u5927\u5199\u7684,\u5982\uff1asettings.SCREENSHOT\uff09\n* \u6846\u67b6\u4f7f\u7528\u7684\u914d\u7f6e\n    | \u5b57\u6bb5 | \u63cf\u8ff0 |\n    | ---- | ---- |\n    | SCREENSHOT | \u63a7\u5236\u6d4b\u8bd5\u5931\u8d25\u540e\u662f\u5426\u81ea\u52a8\u622a\u56fe |\n    | ATTACH_SCREENSHOT_TO_REPORT | \u63a7\u5236\u622a\u56fe\u540e\u662f\u5426\u9644\u52a0\u5230\u6d4b\u8bd5\u62a5\u544a\u4e2d\uff0c\u5982\u679c\u9644\u52a0\u5230\u62a5\u544a\u4e2d\uff0c\u5219\u622a\u56fe\u8f6cbase64\u6570\u636e\u9644\u52a0\u5230\u62a5\u544a\u4e2d |\n    | SCREENSHOT_SAVE_DIR | \u4ee5\u540e\u5c06\u7528\u5230\u7684\u5b57\u6bb5\uff0c\u622a\u56fe\u5b58\u653e\u76ee\u5f55 |\n    | SEVEN_DATA_PROVIDER_DATA_FILE_DIR | \u5185\u7f6e\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005(SevenDataProvider)\u8bfb\u53d6\u7684\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u4e0d\u8bbe\u7f6e\u5219\u81ea\u52a8\u83b7\u53d6\u6d4b\u8bd5\u7528\u4f8b\u6240\u5728\u6a21\u5757\u7684\u76ee\u5f55\u8def\u5f84\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u5185\u7f6e\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005\u4f1a\u4ece\u8be5\u76ee\u5f55\u8def\u5f84\u67e5\u627e\u7528\u4f8b\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6 |\n    | TEST_REPORT_DIR | \u6d4b\u8bd5\u62a5\u544a\u5b58\u653e\u76ee\u5f55\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u5165\u7684\u3002\u547d\u4ee4\u884c\u6ca1\u6709\u4f20\u5165\u4ee5\u53ca\u914d\u7f6e\u6587\u4ef6\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u83b7\u53d6\u6a21\u5757\u6240\u5728\u7684\u76ee\u5f55\u4f5c\u4e3a\u5b58\u653e\u76ee\u5f55\uff0c\u5982\u679c\u6d4b\u8bd5\u6a21\u5757\u4e5f\u6ca1\u6709\u4f20\u5165\uff0c\u5219\u4e0d\u751f\u6210\u6d4b\u8bd5\u62a5\u544a |\n    | TEST_REPORT_NAME | \u6d4b\u8bd5\u62a5\u544a\u540d\u79f0\uff0c\u4f18\u5148\u7ea7\u4f4e\u4e8e\u4ece\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u5165\u7684\u3002\u547d\u4ee4\u884c\u6ca1\u6709\u4f20\u5165\u4ee5\u53ca\u914d\u7f6e\u6587\u4ef6\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u83b7\u53d6\u6a21\u5757\u540d\u79f0\u4f5c\u4e3a\u62a5\u544a\u540d\uff0c\u5982\u679c\u8fde\u6d4b\u8bd5\u6a21\u5757\u4e5f\u6ca1\u6709\u7ed9\uff0c\u5219\u83b7\u53d6\u547d\u4ee4\u884c\u8bbe\u7f6e\u7684\u6d4b\u8bd5\u4efb\u52a1\u540d\u4f5c\u4e3a\u62a5\u544a\u540d\u79f0\uff0c\u4efb\u52a1\u540d\u4e5f\u672a\u8bbe\u7f6e\u5219\u7528\u6d4b\u8bd5\u5f00\u59cb\u65f6\u95f4\u4f5c\u4e3a\u62a5\u544a\u540d\u79f0 |\n\n* stestdemo\n    >    ![](https://github.com/hotswwkyo/stest/blob/main/img/project_dirs.png)\n\n## Test\u53c2\u6570\u8bf4\u660e\n\n| \u53c2\u6570 | \u7c7b\u578b | \u63cf\u8ff0 |\n| ---- | ---- | ---- |\n| author | \u5b57\u7b26\u4e32 | \u7528\u4f8b\u7f16\u5199\u8005 |\n| editors | \u5217\u8868 | \u4fee\u6539\u8005\u5217\u8868 |\n| dname | \u5b57\u7b26\u4e32\u6216\u5217\u8868 | \u7528\u4e8e\u7ed9\u7528\u4f8b\u8d77\u4e00\u4e2a\u7528\u4e8e\u8bbe\u7f6e\u4f9d\u8d56\u7684\u540d\u79f0 |\n| depends | \u5217\u8868 | \u7528\u4e8e\u8bbe\u7f6e\u7528\u4f8b\u4f9d\u8d56\uff0c\u662f\u4e00\u4e2a\u7528\u4f8b\u4f9d\u8d56\u5217\u8868 |\n| groups | \u5217\u8868 | \u65b9\u6cd5\u6240\u5c5e\u7684\u7ec4\u7684\u5217\u8868|\n| enabled | \u5e03\u5c14\u503c | \u662f\u5426\u542f\u7528\u6267\u884c\u8be5\u6d4b\u8bd5\u65b9\u6cd5 |\n| priority | \u6574\u6570 | \u6d4b\u8bd5\u65b9\u6cd5\u7684\u6267\u884c\u4f18\u5148\u7ea7\uff0c\u6570\u503c\u8d8a\u5c0f\u6267\u884c\u8d8a\u9760\u524d |\n| alway_run | \u5e03\u5c14\u503c | \u5982\u679c\u8bbe\u7f6e\u4e3aTrue\uff0c\u4e0d\u7ba1\u4f9d\u8d56\u5b83\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u7528\u4f8b\u7ed3\u679c\u5982\u4f55\u90fd\u59cb\u7ec8\u8fd0\u884c\uff0c\u4e3aFalse\u65f6\uff0c\u5219\u5b83\u6240\u4f9d\u8d56\u7684\u5176\u4ed6\u7528\u4f8b\u4e0d\u6210\u529f\uff0c\u5c31\u4e0d\u4f1a\u6267\u884c\uff0c\u9ed8\u8ba4\u503c\u4e3aFalse |\n| description | \u5b57\u7b26\u4e32 | \u6d4b\u8bd5\u7528\u4f8b\u540d\u79f0 |\n| data_provider | object | \u6d4b\u8bd5\u65b9\u6cd5\u7684\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005\uff0c\u9ed8\u8ba4\u503c\u662fNone\uff0cAbsractDataProvider\u7684\u5b50\u7c7b\u6216\u8005\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u6570\u636e\u96c6\u5217\u8868\uff08\u5f53\u6d4b\u8bd5\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u5316\u65f6\uff0c\u5e94\u8fd4\u56de\u4e00\u7ef4\u5217\u8868\uff0c\u591a\u4e2a\u53c2\u6570\u5316\u65f6\u8fd4\u56de\u4e8c\u7ef4\u5217\u8868\uff09 |\n| data_provider_args | \u5143\u7956 | \u6570\u636e\u63d0\u4f9b\u8005\u53d8\u957f\u4f4d\u7f6e\u53c2\u6570(args) |\n| data_provider_kwargs | \u5b57\u5178 | \u6570\u636e\u63d0\u4f9b\u8005\u53d8\u957f\u5173\u952e\u5b57\u53c2\u6570(kwargs) |\n| screenshot | \u5e03\u5c14\u503c | \u63a7\u5236\u8be5\u7528\u4f8b\u6d4b\u8bd5\u5931\u8d25\u662f\u5426\u622a\u56fe\uff0c\u8be5\u8bbe\u7f6e\u4f18\u5148\u7ea7\u5927\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u622a\u56fe\u8bbe\u7f6e |\n| attach_screenshot_to_report | \u5e03\u5c14\u503c | \u63a7\u5236\u8be5\u7528\u4f8b\u662f\u5426\u9644\u52a0\u6d4b\u8bd5\u5931\u8d25\u7684\u622a\u56fe\u5230\u6d4b\u8bd5\u62a5\u544a\u4e2d\uff0c\u4f18\u5148\u7ea7\u5927\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u622a\u56fe\u8bbe\u7f6e |\n| last_modifyied_by | \u5b57\u7b26\u4e32 | \u6700\u540e\u4fee\u6539\u8005 |\n| last_modified_time | \u5b57\u7b26\u4e32 | \u6700\u540e\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u95f4 |\n| enable_default_data_provider | \u5e03\u5c14\u503c | \u662f\u5426\u4f7f\u7528\u5185\u7f6e\u6570\u636e\u63d0\u4f9b\u8005(SevenDataProvider)\uff0c\u9ed8\u8ba4\u503c\u662fTrue\uff0c\u672a\u8bbe\u7f6edata_provider\uff0c\u4e14\u8be5\u503c\u4e3aTrue \u624d\u4f1a\u4f7f\u7528\u5185\u7f6e\u6570\u636e\u63d0\u4f9b\u8005(SevenDataProvider) |\n\n## \u7528\u4f8b\u4f9d\u8d56\u8bbe\u7f6e\n\u7528\u4f8b\u4f9d\u8d56\u4e8e\u5176\u5b83\u7528\u4f8b\u6210\u529f\u540e\u6267\u884c\uff0c\u5982\u7528\u4f8b\u6240\u4f9d\u8d56\u7684\u7528\u4f8b\u4e0d\u6210\u529f\u6216\u6ca1\u6709\u6267\u884c\uff0c\u5219\u8be5\u7528\u4f8b\u4f1a\u88ab\u8bbe\u7f6e\u4e3a\u5931\u8d25\u3002\u5728\u5b9e\u9645\u5f53\u4e2d\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u7528\u5230\u4e24\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4f9d\u8d56\u8fd0\u884c\uff0c\u6bd4\u5982\u8fd9\u4e00\u79cd\u573a\u666f\uff1a\u6dfb\u52a0\u548c\u5220\u9664\u8bbe\u5907\uff0c\u5982\u679c\u53ea\u6709\u4e00\u53f0\u8bbe\u5907\uff0c\u90a3\u4e48\u6dfb\u52a0\u548c\u5220\u9664\u8fd9\u4e24\u4e2a\u7528\u4f8b\u5c31\u4f1a\u5171\u7528\u6d4b\u8bd5\u6570\u636e\uff0c\u5c31\u4f1a\u4ea7\u751f\u4f9d\u8d56\uff08\u5373\uff1a\u5220\u9664\u8bbe\u5907\u7528\u4f8b\u4f9d\u8d56\u4e8e\u6dfb\u52a0\u8bbe\u5907\u7528\u4f8b\u6210\u529f\u540e\u6267\u884c\uff09\n\n* dname\u548cdepends\u53c2\u6570\u4f7f\u7528\u793a\u4f8b\n\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n    '''\n    @Author: \u601d\u6587\u4f1f\n    @Date: 2021/09/29\n    '''\n\n    import stest\n    from stest import AbstractTestCase\n    from stest import Test as testcase\n\n\n    class DependTest(AbstractTestCase):\n        \"\"\"\u4f9d\u8d56\u8bbe\u7f6e\u6d4b\u8bd5\"\"\"\n        @classmethod\n        def setUpClass(cls):\n            pass\n\n        def setUp(self):\n            pass\n\n        @testcase(priority=1, enabled=True, author='\u601d\u6587\u4f1f', description='dtest1', depends=['vnctest.py'])\n        def dtest1(self):\n            \"\"\" \u7528\u4f8b\u4f9d\u8d56\u4e8evnctest.py\u6a21\u5757\u4e2d\u7684\u6240\u6709\u7528\u4f8b \"\"\"\n\n            pass\n\n        @testcase(priority=2, enabled=True, author='\u601d\u6587\u4f1f', description='dtest2', depends=['vnctest.py.LoginTest'])\n        def dtest2(self):\n            \"\"\" \u7528\u4f8b\u4f9d\u8d56\u4e8evnctest.py\u6a21\u5757\u4e2dLoginTest\u7c7b\u7684\u6240\u6709\u7528\u4f8b \"\"\"\n\n            pass\n\n        @testcase(priority=2, enabled=True, author='\u601d\u6587\u4f1f', description='dtest3', depends=['vnctest.py.LoginTest.login'])\n        def dtest3(self):\n            \"\"\" \u7528\u4f8b\u4f9d\u8d56\u4e8evnctest.py\u6a21\u5757\u4e2dLoginTest\u7c7b\u7684login\u7528\u4f8b \"\"\"\n            pass\n\n        @testcase(priority=2, enabled=True, author='\u601d\u6587\u4f1f', description='dtest4', dname='four')\n        def dtest4(self):\n            \"\"\" \u547d\u540d\u7528\u4f8b\u4e3a four \"\"\"\n            pass\n\n        @testcase(priority=2, enabled=True, author='\u601d\u6587\u4f1f', description='dtest5', depends=['dtest6'])\n        def dtest5(self):\n            \"\"\" \u7528\u4f8b\u4f9d\u8d56\u4e8e\u5f53\u524d\u7c7b\u7684dtest6\u7528\u4f8b \"\"\"\n            pass\n\n        @testcase(priority=2, enabled=True, author='\u601d\u6587\u4f1f', description='dtest6', depends=['four'])\n        def dtest6(self):\n            \"\"\" \u7528\u4f8b\u4f9d\u8d56\u4e8e\u5f53\u524d\u7c7b\u7684\u547d\u540d\u4e3afour\u7684dtest4\u7528\u4f8b \"\"\"\n            pass\n\n        def tearDown(self):\n            pass\n\n        @classmethod\n        def tearDownClass(cls):\n            pass\n\n\n    if __name__ == '__main__':\n        stest.main()\n\n    ```\n\n## \u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005(data provider)\n\n \u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668Test\u4f1a\u8c03\u7528\u6570\u636e\u63d0\u4f9b\u8005(data provider), \u4f20\u6d4b\u8bd5\u7c7b\u540d\u79f0\u548c\u6d4b\u8bd5\u65b9\u6cd5\u540d\u79f0\u7ed9data provider\u7684\u524d\u4e24\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u53c2\u6570, data_provider_args\u53c2\u6570\u4f20\u7ed9data provider\u7684\u53d8\u957f\u4f4d\u7f6e\u53c2\u6570\uff0cdata_provider_kwargs\u53c2\u6570\u4f20\u7ed9data provider\u7684\u53d8\u957f\u5173\u952e\u5b57\u53c2\u6570\n\n### \u5185\u7f6e\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005 - SevenDataProvider\n\n\u5b9e\u73b0\u4e86\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u4f7f\u7528excel\uff08xlsx\u6216xls\u683c\u5f0f\uff09\u5b58\u53d6\u548c\u7ba1\u7406\u7ef4\u62a4\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\uff0c\u7b80\u6d01\u76f4\u89c2\uff0c\u6613\u4e8e\u4fee\u6539\u7ef4\u62a4\u3002\u6570\u636e\u5728\u6587\u4ef6\u4e2d\u4ee5\u7528\u4f8b\u6570\u636e\u5757\u7684\u65b9\u5f0f\u5b58\u50a8\u3002\n\n* \u6570\u636e\u5757\u5b9a\u4e49\uff1a\n    >- \u6240\u6709\u884c\u4e2d\u7684\u7b2c\u4e00\u5217\u662f\u6807\u8bb0\u5217\uff0c\u7b2c\u4e00\u884c\u7b2c\u4e00\u5217\u662f\u6570\u636e\u5757\u5f00\u59cb\u6807\u8bb0\n    >- \u7b2c\u4e00\u884c: \u7528\u4f8b\u540d\u79f0\u4fe1\u606f(\u6807\u8bb0\u5217\u7684\u4e0b\u4e00\u5217\u662f\u7528\u4f8b\u65b9\u6cd5\u540d\u79f0\u5217\uff0c\u4e4b\u540e\u662f\u7528\u4f8b\u540d\u79f0\u5217)\n    >- \u7b2c\u4e8c\u884c: \u7528\u4f8b\u6570\u636e\u6807\u9898\n    >- \u7b2c\u4e09\u884c \u5f00\u59cb \u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u7ec4\u5b8c\u6574\u7684\u6d4b\u8bd5\u6570\u636e\u76f4\u81f3\u9047\u89c1\u7a7a\u884c\u6216\u8005\u4e0b\u4e00\u4e2a\u6570\u636e\u5757\n\n    >![](https://github.com/hotswwkyo/stest/blob/main/img/testcase_data_excel_file.png)\n\n* kwargs\u53d8\u957f\u5173\u952e\u5b57\u53c2\u6570\u63a5\u6536\u53c2\u6570:\n    >- data_file_name - \u6570\u636e\u6587\u4ef6\u540d\u79f0\n    >- data_file_dir_path - \u6570\u636e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u8def\u5f84\n    >- sheet_name_or_index - \u6570\u636e\u6587\u4ef6\u4e2d\u6570\u636e\u6240\u5728\u7684\u5de5\u4f5c\u8868\u7d22\u5f15(\u4ece0\u5f00\u59cb)\u6216\u540d\u79f0\n\n* \u8fd4\u56de\u503c\n    \u6d4b\u8bd5\u6570\u636e\u884c\u4fe1\u606f\u5b57\u5178\u6784\u6210\u7684\u4e00\u7ef4\u5217\u8868, \u5982\uff1a\n    > [{\"\u51cf\u65701\": \"36\", \"\u51cf\u65702\": \"10\", \"\u9884\u671f\": \"26\"}, {\"\u51cf\u65701\": \"57\", \"\u51cf\u65702\": \"30\", \"\u9884\u671f\": \"27\"}]\n    >![](https://github.com/hotswwkyo/stest/blob/main/img/testcase_data_excel_file.png)\n\n* \u4f7f\u7528\n    \u6846\u67b6\u662f\u9ed8\u8ba4\u542f\u7528\u5185\u7f6e\u7684\u6570\u636e\u63d0\u4f9b\u8005\uff08SevenDataProvider\uff09\u6240\u4ee5\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u8bbe\u7f6e\uff0c\u8fd4\u56de\u503c\u662f\u6d4b\u8bd5\u6570\u636e\u884c\u4fe1\u606f\u5b57\u5178\u6784\u6210\u7684\u4e00\u7ef4\u5217\u8868\uff0c\u6240\u4ee5\u6d4b\u8bd5\u65b9\u6cd5\u7edf\u4e00\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\u5316\u53c2\u6570\n    - \u542f\u7528\u6761\u4ef6\n        >- \u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668Test\u53c2\u6570enable_default_data_provider \u4e3aTrue\uff0c\u9ed8\u8ba4\u503c\u662fTrue\n        >- \u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668Test\u53c2\u6570data_provider \u4e3aNone\uff08\u5373\u672a\u8bbe\u7f6e\u6570\u636e\u63d0\u4f9b\u8005\uff09\uff0c\u9ed8\u8ba4\u503c\u662fTrue\u4e3aNone\n\n    - \u6570\u636e\u6587\u4ef6\u5b58\u653e\u76ee\u5f55\n        stest.settings.SEVEN_DATA_PROVIDER_DATA_FILE_DIR \u662f\u5426\u8bbe\u7f6e\uff0c\u8bbe\u7f6e\u4e86\u5219\u53d6\u8be5\u503c\u4f5c\u4e3a\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u7684\u67e5\u627e\u76ee\u5f55\uff0c\u5426\u5219\u4ee5\u88ab\u88c5\u9970\u7684\u6d4b\u8bd5\u65b9\u6cd5\u6240\u5728\u7684\u6a21\u5757\u76ee\u5f55\u4f5c\u4e3a\u67e5\u627e\u76ee\u5f55\n        > data_provider_kwargs={'data_file_dir_path':'E:\\\\mytestdatas'}\n\n    - \u6570\u636e\u6587\u4ef6\u540d\n        \u901a\u8fc7\u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668Test\u53c2\u6570data_provider_kwargs\u4f20\u5165data_file_name\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u5165\uff0c\u5219\u53d6\u6d4b\u8bd5\u65b9\u6cd5\u6240\u5c5e\u7684\u6d4b\u8bd5\u7c7b\u540d\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u540d\u79f0\n        > data_provider_kwargs={'data_file_name':'mytest'}\n\n* \u793a\u4f8b\n```python\nclass CalculationTest(AbstractTestCase):\n        @classmethod\n        def setUpClass(cls):\n            pass\n\n        def setUp(self):\n            pass\n\n        @testcase(priority=4, enabled=True, author='\u601d\u6587\u4f1f', data_provider_kwargs={'data_file_dir_path':'E:\\\\alltest'}, description='\u6574\u6570\u51cf\u6cd5\u6d4b\u8bd502')\n        def integer_subtraction_02(self, testdata):\n            \"\"\"\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u63d0\u4f9b\u8005 - \u4f20\u5165\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\"\"\"\n\n            number_1 = testdata.get(\"\u51cf\u65701\")\n            number_2 = testdata.get(\"\u51cf\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = int(number_1) - int(number_2)\n            self.assertEqual(result, int(expected))\n\n        @testcase(priority=5, enabled=True, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u51cf\u6cd5\u6d4b\u8bd503')\n        def integer_subtraction_03(self,testdata):\n            \"\"\"\u4f7f\u7528\u5185\u7f6e\u7684\u6570\u636e\u63d0\u4f9b\u8005 - \u4e0d\u4f20\u5165\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84,\n            \u5219\u4f1a\u68c0\u6d4bsettings.SEVEN_DATA_PROVIDER_DATA_FILE_DIR \u662f\u5426\u8bbe\u7f6e\n            \uff0c\u6ca1\u6709\u8bbe\u7f6e\u5219\u4f1a\u4f7f\u7528\u8be5\u65b9\u6cd5\u6240\u5c5e\u7684\u6d4b\u8bd5\u7c7b\u6240\u5728\u7684\u6a21\u5757\u76ee\u5f55\u8def\u5f84\u4f5c\u4e3a\u6d4b\u8bd5\u6570\u636e\u6587\u4ef6\u7684\u67e5\u627e\u76ee\u5f55\n            \"\"\"\n\n            number_1 = testdata.get(\"\u51cf\u65701\")\n            number_2 = testdata.get(\"\u51cf\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = int(number_1) - int(number_2)\n            self.assertEqual(result, int(expected))\n\n        def tearDown(self):\n            pass\n\n        @classmethod\n        def tearDownClass(cls):\n            pass\n\n    if __name__ == '__main__':\n        CalculationTest.run_test()\n```\n\n\n### \u81ea\u5b9a\u4e49\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005\n\n\u81ea\u5b9a\u4e49\u53c2\u6570\u5316\u6570\u636e\u63d0\u4f9b\u8005\uff0c\u53ef\u4ee5\u662fAbsractDataProvider\u7684\u5b50\u7c7b\u6216\u8005\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u6570\u636e\u96c6\u5217\u8868\uff08\u5f53\u6d4b\u8bd5\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u5316\u65f6\uff0c\u5e94\u8fd4\u56de\u4e00\u7ef4\u5217\u8868\uff0c\u591a\u4e2a\u53c2\u6570\u5316\u65f6\u8fd4\u56de\u4e8c\u7ef4\u5217\u8868\uff09\uff0c\u5fc5\u987b\u63a5\u6536\u4e24\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u53c2\u6570\uff0c\u53d8\u957f\u4f4d\u7f6e\u53c2\u6570(args)\u548c\u53d8\u957f\u5173\u952e\u5b57\u53c2\u6570(kwargs)\uff0c\u56fa\u5b9a\u4f4d\u7f6e\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u6d4b\u8bd5\u7c7b\u540d\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6d4b\u8bd5\u65b9\u6cd5\u540d\u3002\n\n* \u8fd4\u56de\u503c\n    > \u8fd4\u56de\u6d4b\u8bd5\u65b9\u6cd5\u7684\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5217\u8868\n    >- \u6d4b\u8bd5\u65b9\u6cd5\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\u5316\u65f6, \u8fd4\u56de\u4e00\u7ef4\u5217\u8868 \u5982: demotest(self, testdata), data provider \u8fd4\u56de [{'name':'zhansan', 'age':17}, {'name':'xiaoming', 'age':18}]\uff0c\u65b9\u6cd5demotest\u4f1a\u6267\u884c\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u53c2\u6570testdata\u662f\uff1a{'name':'zhansan', 'age':17}\uff0c\n    \u7b2c\u4e8c\u6b21\u5219\u662f\uff1a{'name':'xiaoming', 'age':18}\n    >- \u6d4b\u8bd5\u65b9\u6cd5\u6709\u591a\u4e2a\u53c2\u6570\u5316\u65f6\uff0c\u8fd4\u56de\u4e8c\u7ef4\u5217\u8868 \u5982: demotest(self, name, age), data provider \u8fd4\u56de [['zhansan', 17], ['xiaoming', 18]], \u65b9\u6cd5demotest\u4f1a\u6267\u884c\u4e24\u6b21\uff0c\u7b2c\u4e00\u6b21\u53c2\u6570name\u548cage\u7684\u503c\u5206\u522b\u662f\uff1a'zhansan', 18\uff0c\n    \u7b2c\u4e8c\u6b21\u5219\u662f\uff1a'xiaoming', 18\n\n* \u5b9e\u73b0\u65b9\u5f0f\n    >- \u7ee7\u627fAbsractDataProvider\uff0c\u5b9e\u73b0get_testdatas(self, test_class_name, test_method_name, *args, **kwargs)\u65b9\u6cd5\n    >- \u5176\u4ed6\u7c7b\u578b\u7684\u7c7b\u4f3c\u63a5\u6536\u4ee5\u4e0b\u53c2\u6570\u7684\u53ef\u8c03\u7528\u5bf9\u8c61 ------> get_testdatas(test_class_name, test_method_name, *args, **kwargs)\n\n* \u4f7f\u7528\n    > \u901a\u8fc7\u6d4b\u8bd5\u65b9\u6cd5\u88c5\u9970\u5668Test\u53c2\u6570data_provider\u6765\u8bbe\u7f6e\u4e3a\u81ea\u5df1\u7684\u6570\u636e\u63d0\u4f9b\u8005\uff08data provider\uff09, \u53c2\u6570data_provider_args\u548cdata_provider_kwargs\u5206\u522b\u7528\u6765\u4f20\u7ed9\u6570\u636e\u63d0\u4f9b\u8005\uff08data provider\uff09\u5bf9\u5e94\u7684\u53d8\u957f\u4f4d\u7f6e\u53c2\u6570(args)\u548c\u53d8\u957f\u5173\u952e\u5b57\u53c2\u6570(kwargs)\n\n* \u793a\u4f8b\n    > \u7ee7\u627f\u81eaAbsractDataProvider\u7684\u6570\u636e\u63d0\u4f9b\u8005\u793a\u4f8b(\u6765\u81ea\u5185\u7f6e\u6570\u636e\u63d0\u4f9b\u8005 - SevenDataProvider)\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n    '''\n    @Author: \u601d\u6587\u4f1f\n    '''\n\n    import os\n    from stest import utils\n    from stest.attrs_marker import AttributeMarker\n    from stest.abstract_data_provider import AbsractDataProvider\n    from stest.excel_file_reader import TestCaseExcelFileReader as ExcelReader\n\n\n    class SevenDataProvider(AbsractDataProvider):\n\n        FILE_EXT = AttributeMarker(\".xlsx\", True, \"\u6570\u636e\u6587\u4ef6\u62d3\u5c55\u540d\")\n        BLOCK_FLAG = AttributeMarker(\"\u7528\u4f8b\u540d\u79f0\", True, \"\u7528\u4f8b\u5206\u9694\u6807\u8bb0\")\n        DEFAULT_SHEET_INDEX = AttributeMarker(0, True, \"\u9ed8\u8ba4\u4ece\u7d22\u5f15\u4e3a0\u7684\u5de5\u4f5c\u8868\u8bfb\u53d6\u6570\u636e\")\n\n        # get_datasets\u65b9\u6cd5\u53d8\u957f\u5b57\u5178\u53c2\u6570kwargs\u63a5\u6536\u7684\u53c2\u6570\u7684\u952e\u540d\n        PARAM_DATA_FILE_NAME = AttributeMarker(\"data_file_name\", True, \"\u6570\u636e\u6587\u4ef6\u540d\u79f0\u53c2\u6570\")\n        PARAM_DATA_FILE_DIR_PATH = AttributeMarker(\"data_file_dir_path\", True, \"\u6570\u636e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u8def\u5f84\u53c2\u6570\")\n        PARAM_SHEET_NAME_OR_INDEX = AttributeMarker(\"sheet_name_or_index\", True, \"\u6570\u636e\u6587\u4ef6\u4e2d\u6570\u636e\u6240\u5728\u7684\u5de5\u4f5c\u8868\u7d22\u5f15(\u4ece0\u5f00\u59cb)\u6216\u540d\u79f0\u53c2\u6570\")\n        KWARGS_NAMES = AttributeMarker((PARAM_DATA_FILE_NAME, PARAM_DATA_FILE_DIR_PATH, PARAM_SHEET_NAME_OR_INDEX), True, \"\u63a5\u6536\u7684\u53c2\u6570\u540d\")\n\n        def _get_data_file_name(self, kwargs, default_value=None):\n\n            param = self.PARAM_DATA_FILE_NAME\n            filename = kwargs.get(param, default_value)\n            if utils.is_blank_space(filename):\n                raise ValueError(\"\u6570\u636e\u6587\u4ef6\u540d\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u4e14\u4e0d\u80fd\u4e3a\u7a7a\")\n            return filename\n\n        def _get_data_file_dir_paht(self, kwargs):\n\n            param = self.PARAM_DATA_FILE_DIR_PATH\n            if param not in kwargs.keys():\n                raise AttributeError(\"\u6ca1\u6709\u4f20\u5165\u6570\u636e\u6587\u4ef6\u76ee\u5f55\")\n            dirpath = kwargs[param]\n            if utils.is_blank_space(dirpath):\n                raise ValueError(\"\u6570\u636e\u6587\u4ef6\u76ee\u5f55\u5fc5\u987b\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u4e14\u4e0d\u80fd\u4e3a\u7a7a\")\n            return dirpath\n\n        def _get_sheet_name_or_index(self, kwargs):\n            return kwargs.get(self.PARAM_SHEET_NAME_OR_INDEX, self.DEFAULT_SHEET_INDEX)\n\n        def _build_file_full_path(self, data_file_dir_path, data_file_name):\n            \"\"\"\u6784\u5efa\u5b8c\u6574\u7684excel\u6570\u636e\u6587\u4ef6\u8def\u5f84\n\n            Args:\n                data_file_dir_path: \u6587\u4ef6\u76ee\u5f55\n                data_file_name: \u6587\u4ef6\u540d\u79f0\n            \"\"\"\n\n            name = data_file_name\n            ext = self.FILE_EXT\n            if utils.is_blank_space(data_file_dir_path):\n                raise ValueError(\"\u4f20\u5165\u7684\u6570\u636e\u6587\u4ef6\u76ee\u5f55\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a\uff1a{}\".format(data_file_dir_path))\n            dir_path = data_file_dir_path\n            if name and not utils.is_blank_space(name):\n                full_name = name if name.endswith(ext) else name + ext\n            else:\n                raise ValueError(\"\u65e0\u6548\u6570\u636e\u6587\u4ef6\u540d\u79f0\uff1a{}\".format(name))\n            return os.path.join(dir_path, full_name)\n\n        def get_testdatas(self, test_class_name, test_method_name, *args, **kwargs):\n            \"\"\"\u6839\u636e\u6587\u4ef6\u540d\u4ece\u6307\u5b9a\u7684excel\u6587\u4ef6(xlsx\u6587\u4ef6\u683c\u5f0f)\u8bfb\u53d6\u51fa\u6570\u636e, \u8fd4\u56de\u4e00\u7ef4\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u662fexcel\u8868\u4e2d\u4e00\u884c\u6d4b\u8bd5\u6570\u636e\u4fe1\u606f\u5b57\u5178.\n            eg: [{\"\u51cf\u65701\": \"36\", \"\u51cf\u65702\": \"10\", \"\u9884\u671f\": \"26\"}, {\"\u51cf\u65701\": \"57\", \"\u51cf\u65702\": \"30\", \"\u9884\u671f\": \"27\"}]\n\n            Args:\n                kwargs:\n                    file_name \u6570\u636e\u6587\u4ef6\u540d, \u4e0d\u63d0\u4f9b\u5219\u6d4b\u8bd5\u7c7b\u540d\u79f0\u4f5c\u4e3a\u6587\u4ef6\u540d\n                    file_dir_path \u6570\u636e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u8def\u5f84\n                    sheet_index_or_name Excel\u5de5\u4f5c\u8868\u7d22\u5f15(\u4ece0\u5f00\u59cb)\u6216\u540d\u79f0,\u4e0d\u63d0\u4f9b\u5219\u9ed8\u8ba4\u53d6\u7d22\u5f150\u7684\u5de5\u4f5c\u8868\n            \"\"\"\n\n            datasets = []\n\n            filename = self._get_data_file_name(kwargs, test_class_name)\n            dirpath = self._get_data_file_dir_paht(kwargs)\n            full_file_path = self._build_file_full_path(dirpath, filename)\n\n            reader = ExcelReader(full_file_path, testcase_block_separators=self.BLOCK_FLAG, sheet_index_or_name=self._get_sheet_name_or_index(kwargs))\n            datas_blocks = reader.load_testcase_data()\n            for block in datas_blocks:\n                if block.name == test_method_name:\n                    for row in block.datas:\n                        line = {}\n                        for cell in row:\n                            for title, value in cell.items():\n                                if title in line.keys():\n                                    continue\n                                else:\n                                    line[title] = value\n                        datasets.append(line)\n                    break\n            return datasets\n\n\n    class CalculationTest(AbstractTestCase):\n        @classmethod\n        def setUpClass(cls):\n            pass\n\n        def setUp(self):\n            pass\n\n        @testcase(priority=1, enabled=True, data_provider=SevenDataProvider, data_provider_kwargs={'data_file_dir_path':'E:\\\\mytestdatas'}, author='\u601d\u6587\u4f1f', description='\u6574\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n        def integer_addition_01(self, testdata):\n            \"\"\"\u81ea\u5b9a\u4e49\u6570\u636e\u63d0\u4f9b\u8005 - \u6d4b\u8bd5\u65b9\u6cd5\u4e00\u4e2a\u53c2\u6570\u5316\u793a\u4f8b\"\"\"\n\n            number_1 = testdata.get(\"\u52a0\u65701\")\n            number_2 = testdata.get(\"\u52a0\u65702\")\n            expected = testdata.get(\"\u9884\u671f\")\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n\n        def tearDown(self):\n            pass\n\n        @classmethod\n        def tearDownClass(cls):\n            pass\n\n    if __name__ == '__main__':\n        CalculationTest.run_test()\n\n    ```\n\n    > \u975eAbsractDataProvider\u5b50\u7c7b\u6570\u636e\u63d0\u4f9b\u8005\u793a\u4f8b\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n    '''\n    @Author: \u601d\u6587\u4f1f\n    '''\n\n    from stest import AbstractTestCase\n    from stest import Test as testcase\n\n\n    class Demo1DataProvider(object):\n\n        def get_testdatas(self, test_class_name, test_method_name, *args, **kwargs):\n\n            return [[1,2,3],[3,4,7]]\n\n\n    class Demo1Test(AbstractTestCase):\n\n        @testcase(priority=1, enabled=True, data_provider=Demo1DataProvider().get_testdatas, author='\u601d\u6587\u4f1f', description='\u4e24\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n        def integer_addition_02(self, number_1, number_2, expected):\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n\n    if __name__ == '__main__':\n\n        Demo1Test.run_test()\n    ```\n\n    > \u51fd\u6570\u6570\u636e\u63d0\u4f9b\u8005\u793a\u4f8b\n    ```python\n    #!/usr/bin/env python\n    # -*- encoding: utf-8 -*-\n    '''\n    @Author: \u601d\u6587\u4f1f\n    '''\n\n    from stest import AbstractTestCase\n    from stest import Test as testcase\n\n\n    def get_testdatas(test_class_name, test_method_name, *args, **kwargs):\n\n        return [[1,2,3], [3,4,7]]\n\n\n    class Demo1Test(AbstractTestCase):\n\n        @testcase(priority=1, enabled=True, data_provider=get_testdatas, author='\u601d\u6587\u4f1f', description='\u4e24\u6570\u52a0\u6cd5\u6d4b\u8bd501')\n        def integer_addition_02(self, number_1, number_2, expected):\n\n            result = number_1 + number_2\n            self.assertEqual(result, expected)\n\n    if __name__ == '__main__':\n\n        Demo1Test.run_test()\n    ```\n\n## Page object \u5b9e\u73b0\u65b9\u6848\n\n*  web\u9875\u9762\u3001app\u9875\u9762\u548cwindow\u5e94\u7528\u7a0b\u5e8f\u9875\u9762\u5c01\u88c5\n    > \u5c01\u88c5\u7684\u9875\u9762\u7c7b\u5e94\u7ee7\u627f\u81ea\u62bd\u8c61\u9875\u9762\u7c7bAbstractPage\u3002\u9875\u9762\u9700\u8981\u6709\u4e24\u4e2a\u5185\u90e8\u7c7bElements\uff08\u5143\u7d20\u7c7b\uff09\u548cActions\uff08\u52a8\u4f5c\u7c7b\uff09,\u5206\u522b\u7ee7\u627f\u81ea\u62bd\u8c61\u4e5f\u7684AbstractPage.Elements\uff08\u5143\u7d20\u7c7b\uff09\u548cAbstractPage.Actions\uff08\u52a8\u4f5c\u7c7b\uff09\uff0c\u5206\u522b\u7528\u4e8e\u5c01\u88c5\u9875\u9762\u7684\u5143\u7d20\u548c\u9875\u9762\u52a8\u4f5c\u3002\u5b9e\u4f8b\u5316\u9875\u9762\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u5b9e\u4f8b\u5316Elements\uff08\u5143\u7d20\u7c7b\uff09\u548cActions\uff08\u52a8\u4f5c\u7c7b\uff09\uff0c\u5206\u522b\u8d4b\u7ed9\u9875\u9762\u5b9e\u4f8b\u5c5e\u6027elements\u548cactions\u3002\u9875\u9762\u7c7b\u5c5e\u6027DRIVER_MANAGER\u6307\u5411\u9a71\u52a8\u7ba1\u7406\u5668\uff0cWIN_APP_DRIVER_HELPER\u6307\u5411\u542f\u52a8\u548c\u5173\u95edWinAppDriver.exe\u52a9\u624b\u3002\n* \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u9875\u9762\u5c01\u88c5\n    > \u5c01\u88c5\u7684\u9875\u9762\u7c7b\u5e94\u7ee7\u627f\u81ea\u62bd\u8c61\u9875\u9762\u7c7bAbstractMiniumPage\u3002\u9875\u9762\u9700\u8981\u6709\u4e24\u4e2a\u5185\u90e8\u7c7bElements\uff08\u5143\u7d20\u7c7b\uff09\u548cActions\uff08\u52a8\u4f5c\u7c7b\uff09,\u5206\u522b\u7ee7\u627f\u81ea\u62bd\u8c61\u4e5f\u7684AbstractMiniumPage.Elements\uff08\u5143\u7d20\u7c7b\uff09\u548cAbstractMiniumPage.Actions\uff08\u52a8\u4f5c\u7c7b\uff09\uff0c\u5206\u522b\u7528\u4e8e\u5c01\u88c5\u9875\u9762\u7684\u5143\u7d20\u548c\u9875\u9762\u52a8\u4f5c\u3002\u5b9e\u4f8b\u5316\u9875\u9762\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u5b9e\u4f8b\u5316Elements\uff08\u5143\u7d20\u7c7b\uff09\u548cActions\uff08\u52a8\u4f5c\u7c7b\uff09\uff0c\u5206\u522b\u8d4b\u7ed9\u9875\u9762\u5b9e\u4f8b\u5c5e\u6027elements\u548cactions\u3002\u9875\u9762\u7c7b\u5c5e\u6027WECHAT_MANAGER\u6307\u5411\u9a71\u52a8\u7ba1\u7406\u5668\n\n### Web\u9875\u9762\u793a\u4f8b\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nfrom stest.testobjs.abstract_page import AbstractPage\n\n\nclass LoginPage(AbstractPage):\n    \"\"\"\u767b\u5f55\u9875\u9762\"\"\"\n    def init(self):\n        \"\"\"\u5176\u5b9e\u4e0d\u9700\u8981\u8fd9\u4e2a\uff0c\u9875\u9762\u4f1a\u81ea\u7701\u7684\u53bb\u81ea\u52a8\u521b\u5efa\u5143\u7d20\u548c\u52a8\u4f5c\uff0c\u8fd9\u6837\u505a\u53ea\u662f\u4e3a\u4e86\u5f00\u53d1\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528.\u5f15\u51fa\u76f8\u5173\u7684\u5143\u7d20\u548c\u52a8\u4f5c\u65b9\u6cd5\"\"\"\n        cls = self.__class__\n        self.elements = cls.Elements(self)\n        self.actions = cls.Actions(self)\n\n    class Elements(AbstractPage.Elements):\n        @property\n        def username(self):\n\n            name = \"\u7528\u6237\u540d\"\n            xpath = '//div[@id=\"app\"]//div[@class=\"loginBox\"]//form//label[normalize-space()=\"{}\"]/following-sibling::div//input'.format(name)\n            return self.page.find_element_by_xpath(xpath)\n\n        @property\n        def password(self):\n\n            name = \"\u5bc6\u7801\"\n            xpath = '//div[@id=\"app\"]//div[@class=\"loginBox\"]//form//label[normalize-space()=\"{}\"]/following-sibling::div//input'.format(name)\n            return self.page.find_element_by_xpath(xpath)\n\n        @property\n        def login(self):\n\n            name = \"\u767b\u5f55\"\n            xpath = '//div[@id=\"app\"]//div[@class=\"loginBox\"]//form//button//span[normalize-space()=\"{}\"]'.format(name)\n            return self.page.find_element_by_xpath(xpath)\n\n    class Actions(AbstractPage.Actions):\n        def username(self, name):\n\n            self.page.elements.username.clear()\n            self.page.elements.username.send_keys(name)\n            return self\n\n        def password(self, pwd):\n\n            self.page.elements.password.clear()\n            self.page.elements.password.send_keys(pwd)\n            return self\n\n        def login(self):\n\n            self.page.elements.login.click()\n            return self\n\n```\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nimport stest\nfrom stest import settings\nfrom stest import AbstractTestCase\nfrom stest import Test as testcase\n\n# \u9a71\u52a8\u7ba1\u7406\u5668\nfrom stest.dm import DRIVER_MANAGER\n\nfrom ..pages.web.login_page import LoginPage\n\n\nclass WebLoginPageTest(AbstractTestCase):\n    \"\"\" \u767b\u5f55\u9875\u9762\u6d4b\u8bd5 \"\"\"\n    @classmethod\n    def setUpClass(cls):\n        pass\n\n    def setUp(self):\n        pass\n\n    @testcase(priority=1, enabled=True, screenshot=True, author='\u601d\u6587\u4f1f', description='\u7528\u6b63\u786e\u8d26\u53f7\u5bc6\u7801\u767b\u5f55\u6d4b\u8bd5')\n    def login_with_right_user_and_password(self, testdata):\n\n        user = testdata.get(\"\u7528\u6237\u540d\")\n        pwd = testdata.get(\"\u7528\u6237\u5bc6\u7801\")\n        url = settings.URLS.get('\u767b\u5f55\u9875\u9762url')\n        LoginPage().chrome(url, executable_path=settings.CHROME_DRIVER_PATH).maximize_window().actions.username(user).sleep(2).password(pwd).login().sleep(7)\n\n    def tearDown(self):\n        pass\n\n    @classmethod\n    def tearDownClass(cls):\n\n        DRIVER_MANAGER.close_all_drivers()\n\n\nif __name__ == '__main__':\n    # WebLoginPageTest.run_test()\n    stest.main()\n\n```\n### APP\u9875\u9762\u793a\u4f8b\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nfrom stest.testobjs.abstract_page import AbstractPage\n\n\nclass LoginPage(AbstractPage):\n    \"\"\" APP\u767b\u5f55\u9875\u9762 \"\"\"\n    class Elements(AbstractPage.Elements):\n        @property\n        def continue_btn(self):\n            \"\"\"\u6388\u6743\u9875->\u7ee7\u7eed\u6309\u94ae\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"com.android.permissioncontroller:id/continue_button\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n        @property\n        def confirm_btn(self):\n            \"\"\"\u66f4\u65b0\u63d0\u793a->\u786e\u5b9a\u6309\u94ae\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"android:id/button1\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n        @property\n        def username(self):\n            \"\"\"\u7528\u6237\u540d\u8f93\u5165\u6846\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"userName\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n        @property\n        def password(self):\n            \"\"\"\u5bc6\u7801\u8f93\u5165\u6846\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"password\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n        @property\n        def login(self):\n            \"\"\"\u767b\u5f55\u6309\u94ae\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"submit\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n        @property\n        def reminder(self):\n            \"\"\"\u4e0b\u6b21\u63d0\u9192\"\"\"\n\n            xpath = 'UiSelector().resourceId(\"android:id/button1\")'\n            return self.page.find_element_by_android_uiautomator(xpath)\n\n    class Actions(AbstractPage.Actions):\n        def click_continue_btn(self):\n            self.page.elements.continue_btn.click()\n            return self\n\n        def click_confirm_btn(self):\n            self.page.elements.confirm_btn.click()\n            return self\n\n        def username(self, name):\n            \"\"\"\u8f93\u5165\u7528\u6237\u540d\"\"\"\n\n            self.page.elements.username.clear()\n            self.page.elements.username.send_keys(name)\n            return self\n\n        def password(self, pwd):\n            \"\"\"\u8f93\u5165\u5bc6\u7801\"\"\"\n\n            self.page.elements.password.clear()\n            self.page.elements.password.send_keys(pwd)\n            return self\n\n        def login(self):\n            \"\"\"\u70b9\u51fb\u767b\u5f55\u6309\u94ae\"\"\"\n\n            self.page.elements.login.click()\n            return self\n\n        def reminder(self):\n            \"\"\"\u4e0b\u6b21\u63d0\u9192\"\"\"\n\n            self.page.elements.reminder.click()\n            return self\n\n```\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nimport stest\nfrom stest import AbstractTestCase\nfrom stest import Test as testcase\nfrom stest.dm import DRIVER_MANAGER\n\nfrom ..pages.app.login_page import LoginPage\nfrom ..pages.app.home_page import HomePage\nfrom ..pages.app.main_page import SettlementMainPage\n\n\nclass AppLoginPageTest(AbstractTestCase):\n    \"\"\"APP\u767b\u5f55\u9875\u9762\u6d4b\u8bd5\"\"\"\n    @classmethod\n    def setUpClass(cls):\n\n        cls.desired_caps = {\n            'platformName': 'Android',  # \u5e73\u53f0\u540d\u79f0\n            'platformVersion': '10.0',  # \u7cfb\u7edf\u7248\u672c\u53f7\n            'deviceName': 'P10 Plus',  # \u8bbe\u5907\u540d\u79f0\u3002\u5982\u679c\u662f\u771f\u673a\uff0c\u5728'\u8bbe\u7f6e->\u5173\u4e8e\u624b\u673a->\u8bbe\u5907\u540d\u79f0'\u91cc\u67e5\u770b\n            'appPackage': 'com.ddnapalon.calculator.gp',  # apk\u7684\u5305\u540d\n            'appActivity': 'com.ddnapalon.calculator.gp.ScienceFragment',  # activity \u540d\u79f0\n            # 'automationName': \"uiautomator2\"\n        }\n        cls.desired_caps[\"appPackage\"] = \"com.zgdygf.zygfpfapp\"\n        cls.desired_caps[\"appActivity\"] = \"io.dcloud.PandoraEntry\"\n        cls.server_url = \"http://127.0.0.1:4723/wd/hub\"\n        # adb shell am start -W -n com.zgdygf.zygfpfapp/io.dcloud.PandoraEntry\n\n    def setUp(self):\n        pass\n\n    @testcase(priority=1, enabled=True, screenshot=True, author='\u601d\u6587\u4f1f', description='\u6210\u529f\u767b\u5f55\u6d4b\u8bd5')\n    def test_successfully_login(self, testdata):\n\n        name = testdata.get(\"\u7528\u6237\u540d\")\n        pwd = testdata.get(\"\u5bc6\u7801\")\n\n        page = LoginPage()\n        page.open_app(self.server_url, desired_capabilities=self.desired_caps, implicit_wait_timeout=10)\n        page.actions.click_continue_btn().sleep(2).click_confirm_btn().sleep(2).username(name).password(pwd).login().sleep(2).reminder().sleep(21)\n        # HomePage().elements.settlement_tab\n        HomePage().actions.sleep(2).click_settlement_tab()\n        sp = SettlementMainPage()\n        sp.actions.sleep(7).swipe_to_select_year(\"2019\u5e74\").sleep(7).input_film_name(\"\u5355\u884c\u9053\").click_search().sleep(3)\n        page.hide_keyboard()\n        sp.actions.click_film_item(\"\u5355\u884c\u9053\")\n\n    def tearDown(self):\n        pass\n\n    @classmethod\n    def tearDownClass(cls):\n\n        DRIVER_MANAGER.close_all_drivers()\n\n\nif __name__ == \"__main__\":\n    # AppLoginPageTest.run_test()\n    stest.main()\n\n```\n### \u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u9875\u9762\u793a\u4f8b\n```python\n# -*- coding:utf-8 -*-\n\nfrom stest.testobjs.abstract_minium_page import AbstractMiniumPage\n\n\nclass ADBasketPage(AbstractMiniumPage):\n    \"\"\" \u5e7f\u544a\u7bee\u9875\u9762 \"\"\"\n    class Elements(AbstractMiniumPage.Elements):\n        @property\n        def do_ad_btn(self):\n            \"\"\"\u53bb\u6295\u653e\u5e7f\u544a\"\"\"\n\n            selector = '#cart'\n            inner_text = '\u53bb\u6295\u653e\u5e7f\u544a'\n            return self.page.get_element(selector).get_element('view').get_element('view').get_element('button', inner_text=inner_text)\n\n        @property\n        def tabbar(self):\n            \"\"\"\u9996\u9875\u4e0b\u65b9tab\u5de5\u5177\u680f\"\"\"\n\n            selector = '.mp-tabbar'\n            return self.page.get_element(selector)\n\n        @property\n        def home_tab(self):\n            \"\"\"\u9996\u9875 \u6807\u7b7e\"\"\"\n\n            selector = '.weui-tabbar__label'\n            inner_text = \"\u9996\u9875\"\n            return self.tabbar.get_element(selector, inner_text=inner_text)\n\n        @property\n        def ad_tab(self):\n            \"\"\"\u5e7f\u544a\u7bee \u6807\u7b7e\"\"\"\n\n            selector = '.weui-tabbar__label'\n            inner_text = \"\u5e7f\u544a\u7bee\"\n            return self.tabbar.get_element(selector, inner_text=inner_text)\n\n        @property\n        def order_tab(self):\n            \"\"\"\u8ba2\u5355 \u6807\u7b7e\"\"\"\n\n            selector = '.weui-tabbar__label'\n            inner_text = \"\u8ba2\u5355\"\n            return self.tabbar.get_element(selector, inner_text=inner_text)\n\n        @property\n        def my_tab(self):\n            \"\"\"\u6211\u7684 \u6807\u7b7e\"\"\"\n\n            selector = '.weui-tabbar__label'\n            inner_text = \"\u6211\u7684\"\n            return self.tabbar.get_element(selector, inner_text=inner_text)\n\n        @property\n        def _ad_cart(self):\n            \"\"\"\u5e7f\u544a\u8d2d\u7269\u8f66\"\"\"\n\n            s = 'view>cart#cart'\n            el_cart = self.page.get_element(s)\n            el_cart.click()\n            self.page.sleep(1)\n            return el_cart\n\n        def cinema_checkbox(self, cinema):\n            \"\"\"\u5f71\u9662\u590d\u9009\u6846\n\n            Args:\n                cinema: \u5f71\u9662\n            \"\"\"\n\n            s1 = 'view.container.car>view.cinema-list>view.backgroud-float>view.flex-row>view.cinema-title'\n            # \u5f71\u9662\u540d\n            s2 = 'text'\n            # \u590d\u9009\u6846\n            s8 = 'view>image.cart-icon'\n            el_cts = self._ad_cart.get_elements(s1)\n            el_cb = None\n            for el_ct in el_cts:\n                el_cinema = el_ct.get_element(s2)\n                if el_cinema and el_cinema.inner_text == cinema:\n                    el_cb = el_ct.get_element(s8)\n                    if el_cb:\n                        break\n            return el_cb\n\n        @property\n        def all_schedules(self):\n            \"\"\"\u6240\u6709\u5f71\u9662\u6392\u671f, \u672a\u8c03\u8bd5\uff0c\u8bef\u7528\n\n            Args:\n                cinema: \u5f71\u9662\n            \"\"\"\n\n            s1 = 'view.container.car>view.cinema-list>view.backgroud-float'\n            # \u5f71\u9662\u540d\n            s2 = 'view.flex-row>view.cinema-title>text.cinema-Name'\n            # \u653e\u6620\u65e5\u671f\n            s3 = 'view.cart--cinema-time'\n            # \u6392\u671f\u5217\u8868\n            s4 = 'view.cart--cart-goods'\n            # \u5f71\u7247\u540d\u79f0\n            s5 = 'view.cart-img>view.cart-message>view.name>text.filmName'\n            # \u653e\u6620\u65f6\u95f4\n            s6 = 'view.cart-img>view.cart-message>view.common-flex>text.playTime'\n            # \u5f71\u5385\n            s7 = 'view.cart-img>view.cart-message>view.common-flex>text.filmType'\n\n            el_cinemaboxs = self._ad_cart.get_elements(s1)\n            schedules = {}\n            # {\n            # 'el_cinema': {\n            # 'el_showdate': [\n            # (el_film, el_showtime, el_hall),...\n            # ]\n            # }\n            # }\n            for el_cinemabox in el_cinemaboxs:\n                el_cinema = el_cinemabox.get_element(s2)\n                if el_cinema:\n                    cinema_schedules = {}  # \u5f71\u9662\u6392\u671f\n                    el_cart_boxes = el_cinemabox.get_elements('view>view.cart--cart-box')\n                    for el_cart_box in el_cart_boxes:\n                        el_showdate = el_cinemabox.get_element(s3)\n                        if not el_showdate:\n                            continue\n                        el_cart_goods = el_cart_box.get_element(s4)\n                        one_day_schedules = []\n                        for el_cart_good in el_cart_goods:\n                            el_film = el_cart_good.get_element(s5)\n                            el_showtime = el_cart_good.get_element(s6)\n                            el_hall = el_cart_good.get_element(s7)\n                            if el_film and el_showtime and el_hall:\n                                one_day_schedules.append((el_film, el_showtime, el_hall))\n                        cinema_schedules[el_showdate] = one_day_schedules\n                    schedules[el_cinema] = cinema_schedules\n            return schedules\n\n        def schedule_checkbox(self, cinema, film, hall, showdate, showtime):\n            \"\"\"\u6392\u671f\u590d\u9009\u6846\n\n            Args:\n                film: \u5f71\u7247\n                cinema: \u5f71\u9662\n                hall: \u5f71\u5385\n                showdate: \u653e\u6620\u65e5\u671f\n                showtime: \u653e\u6620\u65f6\u95f4\n            \"\"\"\n\n            s1 = 'view.container.car>view.cinema-list>view.backgroud-float'\n            # \u5f71\u9662\u540d\n            s2 = 'view.flex-row>view.cinema-title>text'\n            # \u653e\u6620\u65e5\u671f\n            s3 = 'view>view.cart--cart-box>view.cart--cinema-time'\n            # \u6392\u671f\u5217\u8868\n            s4 = 'view>view.cart--cart-box>view.cart--cart-goods'\n            # \u5f71\u7247\u540d\u79f0\n            s5 = 'view.cart-img>view.cart-message>view.name>text'\n            # \u653e\u6620\u65f6\u95f4\n            s6 = 'view.cart-img>view.cart-message>view.common-flex>text'\n            # \u5f71\u5385\n            s7 = 'view.cart-img>view.cart-message>view.common-flex>text'\n            # \u590d\u9009\u6846\n            s8 = 'view>image'\n            el_cinemaboxs = self._ad_cart.get_elements(s1)\n            el_cb = None\n            for el_cinemabox in el_cinemaboxs:\n                el_cinema = el_cinemabox.get_element(s2, inner_text=cinema)\n                if el_cinema:\n                    el_showdate = el_cinemabox.get_element(s3, inner_text=showdate)\n                    if el_cinema and el_showdate:\n                        el_goods = el_cinemabox.get_elements(s4)\n                        for el_good in el_goods:\n\n                            el_film = el_good.get_element(s5, inner_text=film)\n                            el_showtime = el_good.get_element(s6, inner_text=showtime)\n                            el_halls = el_good.get_elements(s7)\n                            el_rhall = None\n                            for el_hall in el_halls:\n                                if el_hall.inner_text.strip().startswith(hall):\n                                    el_rhall = el_hall\n                                    break\n\n                            if el_film and el_showtime and el_rhall:\n                                el_cb = el_good.get_element(s8)\n                                if el_cb:\n                                    break\n                if el_cb:\n                    break\n            return el_cb\n\n        @property\n        def select_all_btn(self):\n            \"\"\"\u5168\u9009\u6309\u94ae\"\"\"\n\n            inner_text = '\u5168\u9009'\n            s = 'view.container.car>view.cart-bottom>view.car-pay>view.cart-bottom-select>text'\n            return self._ad_cart.get_element(s, inner_text=inner_text)\n\n        @property\n        def org_price(self):\n            \"\"\"\u539f\u4ef7\u7ed3\u7b97\u91d1\u989d\"\"\"\n\n            inner_text = '\u539f\u4ef7\u7ed3\u7b97'\n            s1 = 'view.container.car>view.cart-bottom>view.car-pay>view.cart-bottom-pay>view.cart-btn'\n            s2 = 'view'\n\n            el_p_btn = None\n            el_btns = self._ad_cart.get_elements(s1)\n            for el_btn in el_btns:\n                el_yj = el_btn.get_element(s2, inner_text=inner_text)\n                if el_yj:\n                    el_views = el_btn.get_elements(s2)\n                    el_p_btn = el_views[0]\n            return el_p_btn\n\n        @property\n        def org_price_btn(self):\n            \"\"\"\u539f\u4ef7\u7ed3\u7b97\u6309\u94ae\"\"\"\n\n            inner_text = '\u539f\u4ef7\u7ed3\u7b97'\n            s = 'view.container.car>view.cart-bottom>view.car-pay>view.cart-bottom-pay>view.cart-btn>view'\n            return self._ad_cart.get_element(s, inner_text=inner_text)\n\n        @property\n        def pt_price(self):\n            \"\"\"\u62fc\u56e2\u7ed3\u7b97\u91d1\u989d\"\"\"\n\n            inner_text = '\u62fc\u56e2\u7ed3\u7b97'\n            s1 = 'view.container.car>view.cart-bottom>view.car-pay>view.cart-bottom-pay>view.cart-btn'\n            s2 = 'view'\n\n            el_p_btn = None\n            el_btns = self._ad_cart.get_elements(s1)\n            for el_btn in el_btns:\n                el_yj = el_btn.get_element(s2, inner_text=inner_text)\n                if el_yj:\n                    el_views = el_btn.get_elements(s2)\n                    el_p_btn = el_views[0]\n            return el_p_btn\n\n        @property\n        def pt_price_btn(self):\n            \"\"\"\u62fc\u56e2\u7ed3\u7b97\u6309\u94ae\"\"\"\n\n            inner_text = '\u62fc\u56e2\u7ed3\u7b97'\n            s = 'view.container.car>view.cart-bottom>view.car-pay>view.cart-bottom-pay>view.cart-btn>view'\n            return self._ad_cart.get_element(s, inner_text=inner_text)\n\n    class Actions(AbstractMiniumPage.Actions):\n        def click_do_ad_btn(self):\n            \"\"\"\u70b9\u51fb\u53bb\u6295\u653e\u5e7f\u544a\u6309\u94ae\"\"\"\n\n            self.page.elements.do_ad_btn.click()\n            return self\n\n        def click_tabbar(self):\n            \"\"\"\u70b9\u51fb\u4e0b\u65b9\u6807\u7b7e\u5de5\u5177\u680f\"\"\"\n\n            self.page.elements.tabbar.click()\n            return self\n\n        def click_home_tab(self):\n            \"\"\"\u70b9\u51fb\u4e0b\u65b9\u9996\u9875\u6807\u7b7e\"\"\"\n\n            self.page.elements.home_tab.click()\n            return self\n\n        def click_ad_tab(self):\n            \"\"\"\u70b9\u51fb\u4e0b\u65b9\u5e7f\u544a\u7bee\u6807\u7b7e\"\"\"\n\n            self.page.elements.ad_tab.click()\n            return self\n\n        def click_order_tab(self):\n            \"\"\"\u70b9\u51fb\u4e0b\u65b9\u8ba2\u5355\u6807\u7b7e\"\"\"\n\n            self.page.elements.order_tab.click()\n            return self\n\n        def click_my_tab(self):\n            \"\"\"\u70b9\u51fb\u4e0b\u65b9\u6211\u7684\u6807\u7b7e\"\"\"\n\n            self.page.elements.my_tab.click()\n            return self\n\n        def click_cinema_checkbox(self, cinema):\n            \"\"\"\u70b9\u51fb \u5f71\u9662\u590d\u9009\u6846\"\"\"\n\n            self.page.elements.cinema_checkbox(cinema).click()\n            return self\n\n        def click_schedule_checkbox(self, cinema, film, hall, showdate, showtime):\n            \"\"\"\u70b9\u51fb \u6392\u671f\u590d\u9009\u6846\"\"\"\n\n            self.page.elements.schedule_checkbox(cinema, film, hall, showdate, showtime).click()\n            return self\n\n        def select_all(self):\n            \"\"\"\u70b9\u51fb\u5168\u9009\u6309\u94ae\"\"\"\n\n            self.page.elements.select_all_btn.click()\n            return self\n\n        def org_price_equals(self, price, prefix='\uffe5'):\n            \"\"\"\u68c0\u67e5\u539f\u4ef7\u7ed3\u7b97\u91d1\u989d\u662f\u5426\u6b63\u786e\"\"\"\n\n            ptext = self.page.elements.org_price.inner_text\n            a_price = ptext.strip().lstrip(prefix)\n            if a_price != price:\n                self.page.fail('\u539f\u4ef7\u7ed3\u7b97\u91d1\u989d\u5b9e\u9645({})\u663e\u793a\u4e0e\u9884\u671f({})\u4e0d\u7b49'.format(a_price, price))\n            return self\n\n        def click_org_price(self):\n            \"\"\"\u70b9\u51fb\u539f\u4ef7\u7ed3\u7b97\u6309\u94ae\"\"\"\n\n            self.page.elements.org_price_btn.click()\n            return self\n\n        def pt_price_equals(self, price, prefix='\uffe5'):\n            \"\"\"\u68c0\u67e5\u62fc\u56e2\u7ed3\u7b97\u91d1\u989d\u662f\u5426\u6b63\u786e\"\"\"\n\n            ptext = self.page.elements.pt_price.inner_text\n            a_price = ptext.strip().lstrip(prefix)\n            if a_price != price:\n                self.page.fail('\u62fc\u56e2\u7ed3\u7b97\u91d1\u989d\u5b9e\u9645({})\u663e\u793a\u4e0e\u9884\u671f({})\u4e0d\u7b49'.format(a_price, price))\n            return self\n\n        def click_pt_price(self):\n            \"\"\"\u70b9\u51fb\u62fc\u56e2\u7ed3\u7b97\u6309\u94ae\"\"\"\n\n            self.page.elements.pt_price_btn.click()\n            return self\n\n```\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nimport datetime\n\nimport stest\nfrom stest import AbstractTestCase\nfrom stest import Test as testcase\nfrom stest.dm import DRIVER_MANAGER\n\nfrom ..pages.wechat_mini.ad_basket_page import ADBasketPage\nfrom ..pages.wechat_mini.index_page import IndexPage\nfrom ..pages.wechat_mini.my_adlist_page import MyAdListPage\nfrom ..pages.wechat_mini.cinema_list_page import CinemaListPage\nfrom ..pages.wechat_mini.cinema_detail_page import CinemaDetailPage\n\n\nclass WechatMiniPageTest(AbstractTestCase):\n    \"\"\"\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\u9875\u9762\u793a\u4f8b\"\"\"\n    @classmethod\n    def setUpClass(cls):\n\n        cls.minium_config = {\n            \"platform\": \"ide\",\n            \"debug_mode\": \"info\",\n            \"close_ide\": False,\n            \"no_assert_capture\": False,\n            \"auto_relaunch\": False,\n            \"device_desire\": {},\n            \"report_usage\": True,\n            \"remote_connect_timeout\": 180,\n            \"use_push\": True\n        }\n\n    def setUp(self):\n        pass\n\n    @testcase(priority=1, enabled=True, author='\u601d\u6587\u4f1f', description='\u5e7f\u544a\u6295\u653e\u754c\u9762->\u5e7f\u544a\u89c6\u9891\u663e\u793a\u7684\u6b63\u786e\u6027 - \u5f71\u9662\u5217\u8868>\u52a0\u5165\u5e7f\u544a\u680f')\n    def test_add_ad_to_ad_basket_in_cinemalist(self, testdata):\n\n        ad_name = testdata.get('\u5e7f\u544a\u540d')\n        cinema = testdata.get('\u5f71\u9662\u540d\u79f0')\n        film = testdata.get('\u5f71\u7247\u540d\u79f0')\n        hall = testdata.get('\u5f71\u5385\u540d\u79f0')\n        showdate = testdata.get('\u653e\u6620\u65e5\u671f')\n        showtime = testdata.get('\u653e\u6620\u65f6\u95f4')\n        showdate_fmt = testdata.get('\u653e\u6620\u65e5\u671f\u683c\u5f0f', '%Y-%m-%d')\n\n        month_day = datetime.datetime.strptime(showdate, showdate_fmt).strftime('%m-%d')\n        ipage = IndexPage('/pages/index/index', minium_config=self.minium_config)\n        ipage.actions.click_tabbar().sleep(1).click_home_tab().sleep(1)\n        ipage.actions.click_cinema_ad_btn()\n\n        clpage = CinemaListPage()\n        clpage.actions.sleep(1).is_page_self('/pages/cinema/cinema')\n        clpage.actions.upload_ad().sleep(2)\n\n        p = MyAdListPage()\n        p.actions.is_page_self().click_ad_checkbox(ad_name).sleep(1).to_launch().sleep(2)\n        clpage.actions.click_cinema_item(cinema).sleep(1)\n\n        cdp = CinemaDetailPage()\n        cdp.actions.click_film(film).select_day(month_day).sleep(1).click_schedule(film, hall, showtime).sleep(1).confirm().sleep(2)\n        clpage.actions.join_to_ad_basket().sleep(1).shopping_basket().sleep(1)\n\n        bp = ADBasketPage()\n        bp.actions.click_schedule_checkbox(cinema, film, hall, showdate, showtime)\n\n    def tearDown(self):\n        pass\n\n    @classmethod\n    def tearDownClass(cls):\n\n        DRIVER_MANAGER.close_all_drivers()\n\n\nif __name__ == \"__main__\":\n    # WechatMiniPageTest.run_test()\n    stest.main()\n\n```\n### window\u5e94\u7528\u7a0b\u5e8f\u9875\u9762\u793a\u4f8b\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nfrom stest.testobjs.abstract_page import AbstractPage\n\n\nclass VNCViewerPage(AbstractPage):\n    \"\"\"VNCViewer\u9875\u9762\"\"\"\n    def init(self):\n        \"\"\"\u5176\u5b9e\u4e0d\u9700\u8981\u8fd9\u4e2a\uff0c\u9875\u9762\u4f1a\u81ea\u7701\u7684\u53bb\u81ea\u52a8\u521b\u5efa\u5143\u7d20\u548c\u52a8\u4f5c\uff0c\u8fd9\u6837\u505a\u53ea\u662f\u4e3a\u4e86\u5f00\u53d1\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528.\u5f15\u51fa\u76f8\u5173\u7684\u5143\u7d20\u548c\u52a8\u4f5c\u65b9\u6cd5\"\"\"\n        cls = self.__class__\n        self.elements = cls.Elements(self)\n        self.actions = cls.Actions(self)\n\n    class Elements(AbstractPage.Elements):\n        @property\n        def server_ip(self):\n            \"\"\"ip\u5730\u5740\u8f93\u5165\u6846\"\"\"\n\n            return self.page.find_element_by_accessibility_id('1001')\n\n        @property\n        def ok(self):\n            \"\"\"ok\u6309\u94ae\"\"\"\n\n            return self.page.find_element_by_name(\"OK\")\n\n        @property\n        def pwd(self):\n            \"\"\"\u5bc6\u7801\u8f93\u5165\u6846\"\"\"\n\n            locator = \"./*\"\n            childrens = self.page.find_elements_by_xpath(locator)  # \u83b7\u53d6\u5f53\u524d\u7a97\u53e3\u4e0b\u7684\u6240\u6709\u5b50\u5143\u7d20\n            element = None\n            for c in childrens:\n                # print(\"c.get_attribute(\"IsEnabled\")=\", c.get_attribute(\"IsEnabled\"))\n                if c.get_attribute(\"IsEnabled\") == \"true\":  # \u901a\u8fc7\u754c\u9762\u6211\u4eec\u77e5\u9053 \u53ea\u6709\u8f93\u5165\u5bc6\u7801\u6846\u662f\u53ef\u7f16\u8f91\u7684\uff0c\u6240\u4ee5\u4f7f\u7528\u8be5\u6761\u4ef6\u6765\u5224\u65ad\u662f\u5426\u5bc6\u7801\u8f93\u5165\u6846\u5143\u7d20\n                    element = c\n                    break\n            if element is None:\n                message = \"{} with locator '{}' not found.\".format(\"xpath\", locator)\n                self.page.raise_no_such_element_exc(message)\n            return element\n\n    class Actions(AbstractPage.Actions):\n        def server_ip(self, ip):\n            \"\"\"\u8f93\u5165ip\"\"\"\n\n            element = self.page.elements.server_ip\n            element.clear()\n            element.send_keys(ip)\n            return self\n\n        def ok(self):\n            \"\"\"\u70b9\u51fbok\u6309\u94ae\"\"\"\n\n            self.page.elements.ok.click()\n            return self\n\n        def pwd(self, password):\n\n            element = self.page.elements.pwd\n            element.clear()\n            element.send_keys(password)\n            return self\n\n```\n```python\n#!/usr/bin/env python\n# -*- encoding: utf-8 -*-\n'''\n@Author: \u601d\u6587\u4f1f\n'''\n\nimport stest\n# from stest import settings\nfrom stest import AbstractTestCase\nfrom stest import Test as testcase\nfrom stest.dm import DRIVER_MANAGER\nfrom stest.dm import WIN_APP_DRIVER_HELPER\n\nfrom ..pages.winapp.vncviewer_page import VNCViewerPage\n\n\nclass VNCViewerPageTest(AbstractTestCase):\n    \"\"\" \u4f7f\u7528WinAppDriver.exe\u6d4b\u8bd5Window\u5e94\u7528\u7a0b\u5e8fVNCViewer\u793a\u4f8b \"\"\"\n    @classmethod\n    def setUpClass(cls):\n\n        WIN_APP_DRIVER_HELPER.startup_winappdriver(r\"E:\\Program Files (x86)\\Windows Application Driver\\WinAppDriver.exe\")\n\n    def setUp(self):\n        pass\n\n    @testcase(priority=1, enabled=True, screenshot=True, author='\u601d\u6587\u4f1f', description='\u7528\u6b63\u786e\u8d26\u53f7\u5bc6\u7801\u767b\u5f55\u6d4b\u8bd5')\n    def connect_remote_pc_desktop(self, testdata):\n\n        ip = testdata.get(\"\u8fdc\u7a0b\u684c\u9762\u767b\u5f55\u8d26\u6237\")\n        pwd = testdata.get(\"\u8fdc\u7a0b\u684c\u9762\u767b\u5f55\u5bc6\u7801\")\n        vnc_title = \"VNC Viewer : Authentication [No Encryption]\"\n        desired_capabilities = {}\n        desired_capabilities[\"app\"] = r\"C:\\Users\\siwenwei\\Desktop\\vnc-4_1_2-x86_win32_viewer.exe\"  # vnc viewer \u7684\u6267\u884c\u8def\u5f84\n        server_url = \"http://127.0.0.1:4723\"\n        page = VNCViewerPage()\n        page.open_window_app(server_url, desired_capabilities)\n\n        page.actions.sleep(5).server_ip(ip).sleep(1).ok()\n        # \u4e0a\u9762\u70b9\u51fbok\u540e\uff0c\u5230\u4e0b\u4e00\u4e2a\u754c\u9762\u663e\u793a\u51fa\u6765\u9700\u8981\u65f6\u95f4\uff0c\u6240\u4ee5\u8fd9\u91cc\u8bbe\u7f6e\u5ef6\u65f6\u7b49\u5f85\n        page.switch_window_by_title(vnc_title, timeout=20).actions.pwd(pwd).sleep(2).ok()\n\n    def tearDown(self):\n        pass\n\n    @classmethod\n    def tearDownClass(cls):\n\n        DRIVER_MANAGER.close_all_drivers()\n        WIN_APP_DRIVER_HELPER.shutdown_winappdriver()\n\n\nif __name__ == '__main__':\n    # VNCViewerPageTest.run_test()\n    stest.main()\n\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hotswwkyo/stest",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "stest",
            "package_url": "https://pypi.org/project/stest/",
            "platform": null,
            "project_url": "https://pypi.org/project/stest/",
            "project_urls": {
                "Homepage": "https://github.com/hotswwkyo/stest"
            },
            "release_url": "https://pypi.org/project/stest/1.0.4/",
            "requires_dist": [
                "xlrd (==1.2.0)"
            ],
            "requires_python": ">=3",
            "summary": "\u57fa\u4e8eunittest\u5f00\u53d1\u7684\u6d4b\u8bd5\u6846\u67b6\uff0c\u66f4\u53cb\u597d\u3001\u66f4\u7075\u6d3b\u7684\u7f16\u5199\u3001\u7ba1\u7406\u4e0e\u8fd0\u884c\u6d4b\u8bd5\uff0c\u751f\u6210\u66f4\u52a0\u7f8e\u89c2\u7684\u72ec\u7acb\u5355\u6587\u4ef6HTML\u62a5\u544a\u3002\u5185\u7f6e\u53c2\u6570\u5316\u6d4b\u8bd5\u6570\u636e\u5b58\u53d6\u65b9\u6848\uff0c\u7701\u53bb\u8bbe\u8ba1\u7684\u70e6\u607c\uff0c\u8282\u7701\u66f4\u591a\u7684\u65f6\u95f4\uff0c\u4ece\u800c\u66f4\u5feb\u7684\u6295\u5165\u5230\u7f16\u5199\u7528\u4f8b\u9636\u6bb5",
            "version": "1.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13598784,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "762c0a9ec12c36cfb5ddbe219ed96be1",
                    "sha256": "f2ba2435b8493072bc336dab13d80fae4aa137fcbf0518f6190285536998114a"
                },
                "downloads": -1,
                "filename": "stest-1.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "762c0a9ec12c36cfb5ddbe219ed96be1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 261105,
                "upload_time": "2022-04-23T07:26:36",
                "upload_time_iso_8601": "2022-04-23T07:26:36.707849Z",
                "url": "https://files.pythonhosted.org/packages/f8/dd/11e533f2b9a88e87b168f1e3dcfd18af95ab37c1561fde29b864666a052e/stest-1.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0d37d57133c2ee21d29017a137a26481",
                    "sha256": "7dcb52dd62f05ee8dad47eda4b84c0395ed6b367eb6d97ca411fad6a18d418a3"
                },
                "downloads": -1,
                "filename": "stest-1.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "0d37d57133c2ee21d29017a137a26481",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 269042,
                "upload_time": "2022-04-23T07:26:39",
                "upload_time_iso_8601": "2022-04-23T07:26:39.875158Z",
                "url": "https://files.pythonhosted.org/packages/07/4e/dba767edde0a6f0cb0ac200581216814559d546511f32141963d4a167bd5/stest-1.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}