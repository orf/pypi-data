{
    "0.0.1": {
        "info": {
            "author": "Eric Austin",
            "author_email": "eric.m.austin@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n# LAYERMAKE\n\nlayermake is a CLI tool for creating AWS Lambda layers\n\nlayermake currently supports creating python, NodeJS, and binary layers. \n\n## Requirements\nCurrently layermake has only been tested on Python >= 3.8\n\n## Installation:\ngit clone or download this repository and install with:\n```sh\npip install .\n```\nThe binary should now be installed and can be invoked with:\n\n`layermake COMMAND [ARGS]`\n\n## Usage:\nrun `layermake` with one of the following commands:\n- `nodejs`\n- `python`\n- `binary`\n\n`layermake nodejs` and `layermake python` support fully interactive layer building if no\narguments are passed.\n\nAll commands share the following options:\n```\n  -n, --name TEXT                 layer name\n  -l, --license TEXT              text to include in the license field of the\n                                  layer\n  --license-file TEXT             file containing license info to include in\n                                  the license field of the layer\n  -a, --arch [x86_64|arm64]       architectures this layer is compatible with\n  --profile TEXT                  AWS profile to use\n  -d, --description TEXT          description of the layer\n  -v, --verbose                   verbose output\n ```\n\n### NodeJS bundling\n\nTo interactively bundle a NodeJS layer with defaults use:\n`layermake nodejs`\n\nAll NodeJS bundling options as displayed with `layermake nodejs --help`\n\nTo use a package.json file use the option `--manifest` or `-m`:\n```sh\nlayermake nodejs -n \"my nodejs layer\" -r 14.x -m package.json\n```\n\n\n\n```\nUsage: layermake nodejs [OPTIONS] [PACKAGES]...\n\nOptions:\n  -n, --name TEXT                 layer name\n  -l, --license TEXT              text to include in the license field of the\n                                  layer\n  --license-file TEXT             file containing license info to include in\n                                  the license field of the layer\n  -a, --arch [x86_64|arm64]       architectures this layer is compatible with\n  --profile TEXT                  AWS profile to use\n  -d, --description TEXT          description of the layer\n  -v, --verbose                   verbose output\n  -r, --runtime [4.3|6.10|8.10|10.x|12.x|14.x|16.x]\n                                  nodejs runtime\n  -m, --manifest TEXT             nodejs manifest file (package.json)\n  -o, --output TEXT               target output directory  [default: layer]\n  --container TEXT                use the provided docker container to build\n                                  the layer\n  --help                          Show this message and exit.\n\n```\n\n### Python bundling\n\nTo interactively bundle a Python layer with defaults use:\n`layermake python`\n\nAll Python bundling options as displayed with `layermake python --help`\n\n```\nUsage: layermake python [OPTIONS] [PACKAGES]...\n\nOptions:\n  -n, --name TEXT              layer name\n  -l, --license TEXT           text to include in the license field of the\n                               layer\n  --license-file TEXT          file containing license info to include in the\n                               license field of the layer\n  -a, --arch [x86_64|arm64]    architectures this layer is compatible with\n  --profile TEXT               AWS profile to use\n  -d, --description TEXT       description of the layer\n  -v, --verbose                verbose output\n  -r, --runtime [3.6|3.7|3.8]  python runtime\n  -m, --manifest TEXT          python manifest file (requirements.txt)\n  -o, --output TEXT            target output directory  [default: layer]\n  --container TEXT             use the provided docker container to build the\n                               layer\n  --help                       Show this message and exit.\n```\n\n\n### Binary bundling\nBinary bundling requires an argument specifying either a build script or a directory\nwhere either a makefile exists or one of `build`, `install`, `layer`, `build-layer` exists \n(with or without a `.sh` file extensions). If none of these files are provided, you may\npass a custom container command to run instead (e.g. `/bin/bash my_script.sh`).\n\nWhen bundling a binary layer, the build script is responsible for installing \nlibraries and binaries inside `/opt/bin` and/or `/opt/lib`. These directories \nare zipped inside Docker after running the build script.\n\nCurrently, only Docker images that provide `yum` package manager are supported as\n`yum` is used to install build tools in the base image (defaults to `amazonlinux:latest`)\n\nTo add any prerequisite packages not installed by the build script use the `--packages` \nflag to have them installed before bundling.\n\nExample:\n```sh\nlayermake binary -n 'GnuPG 2.8' -p zlib gnupg-build.sh\n```\n\n```\nUsage: layermake binary [OPTIONS] [ARTIFACT]...\n\nOptions:\n  -n, --name TEXT                 layer name\n  -l, --license TEXT              text to include in the license field of the\n                                  layer\n  --license-file TEXT             file containing license info to include in\n                                  the license field of the layer\n  -a, --arch [x86_64|arm64]       architectures this layer is compatible with\n  --profile TEXT                  AWS profile to use\n  -d, --description TEXT          description of the layer\n  -v, --verbose                   verbose output\n  --dockerfile TEXT               use the provided dockerfile for bundling\n  -o, --output TEXT               target output directory  [default: layer]\n  -w, --workdir TEXT              workdir used when bundling inside the\n                                  container  [default: /opt]\n  -c, --cmd TEXT                  command executed inside the container;\n                                  defaults to executing the build artifact\n                                  with /bin/bash\n  --base-image TEXT               use the provided base docker image when\n                                  compiling the Dockerfile for lambda bundling\n                                  [default: amazonlinux:latest]\n  -p, --packages TEXT             additional packages to install in the\n                                  container; currently only yum is supported\n  -r, --runtimes [nodejs|nodejs4.3|nodejs6.10|nodejs8.10|nodejs10.x|nodejs12.x|nodejs14.x|nodejs16.x|java8|java8.al2|java11|python2.7|python3.6|python3.7|python3.8|python3.9|dotnetcore1.0|dotnetcore2.0|dotnetcore2.1|dotnetcore3.1|dotnet6|nodejs4.3-edge|go1.x|ruby2.5|ruby2.7|provided|provided.al2|nodejs18.x|all]\n                                  compatible runtimes\n  --help                          Show this message and exit.\n\n```\n\n## Todo:\n- comprehensive unit testing\n- rust support\n- java support\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ericmaustin/layermake",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "layermake",
            "package_url": "https://pypi.org/project/layermake/",
            "platform": null,
            "project_url": "https://pypi.org/project/layermake/",
            "project_urls": {
                "Homepage": "https://github.com/ericmaustin/layermake"
            },
            "release_url": "https://pypi.org/project/layermake/0.0.1/",
            "requires_dist": [
                "Click",
                "boto3",
                "rich"
            ],
            "requires_python": ">=3.8",
            "summary": "CLI toolkit for bundling AWS Lambda layers",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15909899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32d2a2b0ded5c40f75079932eb416580",
                    "sha256": "d2a3fa7c43de44f9fb1e7b4b55a4a65bbae672654c59bb4851f5a01c52c11f02"
                },
                "downloads": -1,
                "filename": "layermake-0.0.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "32d2a2b0ded5c40f75079932eb416580",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": ">=3.8",
                "size": 13025,
                "upload_time": "2022-11-28T04:22:40",
                "upload_time_iso_8601": "2022-11-28T04:22:40.933549Z",
                "url": "https://files.pythonhosted.org/packages/a8/f2/79404a74f882a4b2b5949185345def8e5bb14ec717b85d6a07e801a9a59c/layermake-0.0.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e4c5c742ee30c97cbe97d08f163a0caa",
                    "sha256": "45fd7d244d58cc4329410bd4a38ce61287bdc04c93efec8d4cd02fa6a2d4075c"
                },
                "downloads": -1,
                "filename": "layermake-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "e4c5c742ee30c97cbe97d08f163a0caa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 11586,
                "upload_time": "2022-11-28T04:22:42",
                "upload_time_iso_8601": "2022-11-28T04:22:42.479488Z",
                "url": "https://files.pythonhosted.org/packages/aa/51/f3cd8a27c33df4a45ff50a2598d011bae3d221e15ec00a5b135efb8798d4/layermake-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}