{
    "0.0.1": {
        "info": {
            "author": "jklee2",
            "author_email": "jklee2@katech.re.kr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "kadap",
            "package_url": "https://pypi.org/project/kadap/",
            "platform": null,
            "project_url": "https://pypi.org/project/kadap/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/kadap/0.0.1/",
            "requires_dist": [
                "Flask (==1.1.2)",
                "Jinja2 (==3.0.3)",
                "Pillow (>=7.1.2)",
                "PyYAML (>=5.3.1)",
                "Werkzeug (==2.0.3)",
                "flask-restplus (==0.13.0)",
                "ipython",
                "itsdangerous (==2.0.1)",
                "matplotlib (>=3.2.2)",
                "numpy (>=1.18.5)",
                "opencv-python (>=4.1.1)",
                "pandas (>=1.1.4)",
                "psutil",
                "requests (>=2.23.0)",
                "scipy (>=1.4.1)",
                "seaborn (>=0.11.0)",
                "thop (>=0.1.1)",
                "torch (>=1.7.0)",
                "torchvision (>=0.8.1)",
                "tqdm (>=4.64.0)"
            ],
            "requires_python": ">=3.6",
            "summary": "kadap api python package",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15771293,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1ba35b9a1cecea77ddc80ac3ef38c635",
                    "sha256": "c16a10abfb9c176e32718f7ce740f421cad02a1caae4ba87b483e3070d55de58"
                },
                "downloads": -1,
                "filename": "kadap-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1ba35b9a1cecea77ddc80ac3ef38c635",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 232711,
                "upload_time": "2022-11-15T05:26:21",
                "upload_time_iso_8601": "2022-11-15T05:26:21.174081Z",
                "url": "https://files.pythonhosted.org/packages/79/14/4ff9824146b6f93c88072466f7d7639bbc7392aa67e48bd0ab363b55c24c/kadap-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "jklee2",
            "author_email": "jklee2@katech.re.kr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# <div align=\"center\"><span style=\"color: #808080\">KADaP</span></div>\n#### <span style=\"color: blue\">KADaP(Korea Automotive Data Platform)</span>\uc740 \ud55c\uad6d\uc790\ub3d9\ucc28\uc5f0\uad6c\uc6d0\uc5d0\uc11c \uac1c\ubc1c\ud55c \uc624\ud508 API\ub85c \ub2e4\uc74c\uacfc \uac19\uc740 \ub2e4\uc12f\uac00\uc9c0 \uae30\ub2a5\uc774 \uc788\uc2b5\ub2c8\ub2e4.  \n1. **VIN \ud574\uc11d API** :  \ucc28\ub7c9\uc2dd\ubcc4\ubc88\ud638(VIN)\ub294 \ubaa8\ub4e0 \uc790\ub3d9\ucc28\uac00 \uc0dd\uc0b0\ub420 \ub54c \ud560\ub2f9\ub418\ub294 17\uc790\ub9ac \uace0\uc720 \ucf54\ub4dc\uc774\uba70, **VIN \ud574\uc11d API**\ub294 VIN\uc5d0 \ud3ec\ud568\ub41c \ucc28\ub7c9\uc815\ubcf4\ub97c Json \ud3ec\ub9f7\uc73c\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n2. **\ucc28\ub7c9 \ud0d0\uc9c0 \ubaa8\ub378 Benchmarking** : \ud574\ub2f9\ub144\ub3c4 \uacf5\uac1c\ub41c \ucd5c\uc2e0 top 3~5 \ud0d0\uc9c0 \uc54c\uace0\ub9ac\uc998\uc5d0 \ub300\ud574 \uc5b4\ub290 \ubaa8\ub378\uc774 \uc785\ub825\ud55c \uc0c1\ud669\uc744 \uc798 \ucd94\ub860\ud558\ub294\uc9c0 \ud310\ub2e8\uc744 \uc81c\uacf5\ud558\uae30 \uc704\ud574 \uac01 \ubaa8\ub378\ub9c8\ub2e4 *\uac1d\uccb4\uc758 BBOX \uc88c\ud45c(x1, y1, x2, y2), \ud074\ub798\uc2a4, \uc815\ud655\ub3c4*\ub97c Json \ud3ec\ub9f7\uc73c\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n3. **\uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4 \ud310\ubcc4 API** : \uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4\ub294 \uac1c\uc778\uc744 \uc2dd\ubcc4 \ubc0f \ucd94\ub860\uc5d0 \ud65c\uc6a9\ub420 \uc218 \uc788\ub294 \ubaa8\ub4e0 \uc815\ubcf4\ub97c \ub73b\ud558\uba70, **\uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4 \ud310\ubcc4 API**\ub294 *\uc804\ud654\ubc88\ud638, \uc8fc\ubbfc\ubc88\ud638, \ucc28\ub7c9\ubc88\ud638, GPS, \ucc28\ub7c9\uc2dd\ubcc4\ubc88\ud638, \uc774\ub984* \ud544\ub4dc\uc5d0 \ub300\ud574 \uc815\uaddc\ud45c\ud604\uc2dd\uc744 \ud1b5\ud574 \ud328\ud134\uc744 \uac80\ucd9c\ud569\ub2c8\ub2e4.\n4. **\uc5f0\ub3d9 \ub370\uc774\ud130 API** : \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8\uc774 \ubcf4\uc720\ud55c \uc790\uc804\uac70 \uc0ac\uace0, \uc5b4\ub9b0\uc774 \uc0ac\uace0, \uc774\ub95c\ucc28 \uc0ac\uace0 \ub4f1 \uc0ac\uace0\ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130\ub97c API\ud654 \ud558\uc5ec *\uc0c1\uc138 \uc9c0\uc5ed\uacfc \uc88c\ud45c \uc815\ubcf4*\ub97c Json \ud3ec\ub9f7\uc73c\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n5. **\ubcf4\uc720 \ub370\uc774\ud130 API** : \ud55c\uad6d\uc790\ub3d9\ucc28\uc5f0\uad6c\uc6d0\uc774 \ubcf4\uc720\ud558\uace0 \uc788\ub294 \ub370\uc774\ud130\ub97c API\ud654 \ud558\uc5ec \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc815\ud615 \ub370\uc774\ud130\uc5d0 \ud55c\ud574 10\uac1c \uc0d8\ud50c \ub370\uc774\ud130\ub97c Json \ud615\ud0dc\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\n\n## <span style=\"color: #808080\">Installation</span>\n**Windows \uc6b4\uc601\uccb4\uc81c** \uc758 \uacbd\uc6b0 \ud30c\uc774\uc36c \uac1c\ubc1c \ud658\uacbd\uc73c\ub85c \ucd5c\uc2e0 \ubc84\uc804\uc758 Anaconda\ub97c \uc124\uce58\ud558\uc138\uc694. (Python3 \ubc84\uc804\uc6a9)\n\n```bash\npip install kadap\n```\n\nKADaP \uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucd94\uac00 \ubaa8\ub4c8 \uc124\uce58\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\n\n```bash\npip install -r requirements.txt\n```\n\n## <span style=\"color: #808080\">Usage</span>\n\n```python\nimport kadap\n```\n\n#### <span style=\"color: #808080\">1. VIN \ud574\uc11d API</span>\n\n```python\nvin = \"YOURVINCODE\"\n\ndecode = kadap.Decoder()\nresult = decode.decoder(vin)\n```\n\n#### <span style=\"color: #808080\">2. \ucc28\ub7c9 \ud0d0\uc9c0\ubaa8\ub378 Benchmarking</span>\n\n```python\n\"\"\"\n\ucc28\ub7c9 \ud0d0\uc9c0\ubaa8\ub378 Benchmarking\uc744 \uc704\ud574\uc11c \uc544\ub798 \ub450 \uac00\uc9c0 \ud544\uc694\ud569\ub2c8\ub2e4.\n\n1. \uc0ac\uc6a9\ud560 \uc774\ubbf8\uc9c0 (\ub2e8\uc77c \uc774\ubbf8\uc9c0 \ub610\ub294 \uc774\ubbf8\uc9c0 \ub514\ub809\ud1a0\ub9ac)\n2. \uc785\ub825 \uc774\ubbf8\uc9c0 \ud06c\uae30 (\ub192\uc774, \ub108\ube44 \uc21c\uc73c\ub85c \uc785\ub825)\n\"\"\"\n\nsource = \"./YOURIMAGE.jpg\"\nheight, width = 640, 640\n\nbenchmarking = kadap.Benchmarking()\nresults = benchmarking.run(source=source, imgsz=(int(height), int(width)))\n```\n\n#### <span style=\"color: #808080\">3. \uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4 \ud30c\ubcc4 API</span>\n\n```python\n\"\"\"\n\uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4 \ud310\ubcc4 API\ub294 csv, xls, xlsx, xlsm \ud3ec\ub9f7\uc744 \uc9c0\uc6d0\ud569\ub2c8\ub2e4.\n\uac01 column\uc758 \ub370\uc774\ud130\uc5d0\uc11c 6\uac00\uc9c0 \ud544\ub4dc\uc5d0 \ub300\ud574 \uac1c\uc778\uc2dd\ubcc4\uc815\ubcf4\ub85c \uac80\ucd9c\ud569\ub2c8\ub2e4.\n\n1. \uc804\ud654\ubc88\ud638\n2. \uc8fc\ubbfc\ub4f1\ub85d\ubc88\ud638\n3. \ucc28\ub7c9\ubc88\ud638\n4. GPS\n5. \ucc28\ub7c9\uc2dd\ubcc4\ubc88\ud638\n6. \uc774\ub984\n\"\"\"\n\nfilename = \"./YOURFILE.csv\"\n\ndiscriminator = kadap.Discriminator(filename)\n\nphone_number = discriminator.phone_number()         # \uc804\ud654\ubc88\ud638 \uac80\ucd9c\nresident_number = discriminator.resident_number()   # \uc8fc\ubbfc\ub4f1\ub85d\ubc88\ud638 \uac80\ucd9c\ncar_number = discriminator.car_number()             # \ucc28\ub7c9\ubc88\ud638 \uac80\ucd9c\ngps = discriminator.gps()                           # GPS \uac80\ucd9c\nlatlon = discriminator.latlon()                     # GPS(\uc704\ub3c4, \uacbd\ub3c4) \uac80\ucd9c\nvehicleID = discriminator.vehicle_id()              # \ucc28\ub7c9\uc2dd\ubcc4\ubc88\ud638 \uac80\ucd9c\nname = discriminator.name()                         # \uc774\ub984 \uac80\ucd9c\n```\n\n#### <span style=\"color: #808080\">4. \uc5f0\ub3d9 \ub370\uc774\ud130 API</span>\n\n```python\n\"\"\"\n\uc5f0\ub3d9 \ub370\uc774\ud130 API \ud638\ucd9c\uc5d0\ub294 \uc544\ub798 \uc138 \uac00\uc9c0\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\n\n1. \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8\uc5d0\uc11c \uad6c\ubd84\ud558\ub294 \ub3c4\uc2dc, \uad70(\uad6c) \ucf54\ub4dc\n2. \uc5f0\ub3c4 \ucf54\ub4dc\n3. \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8\uc5d0\uc11c \ubc1c\uae09 \ubc1b\uc740 \uac1c\uc778 servicekey\n\"\"\"\n\nkey = \"YOURSERVICEKEY\"\n\ncity = kadap.City()\ncity_codes = city.getCityCodes()                    # \ub3c4\uc2dc, \uad70(\uad6c) \ucf54\ub4dc \ud638\ucd9c(\ubaa8\ub4e0 \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8 \ub370\uc774\ud130\uc5d0 \uc0ac\uc6a9)\n\nbicycle = kadap.Bicycle()\nbicycle.getSearchYearCodes()                        # \uc790\uc804\uac70\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nbicycle.getData(year_code, city_code, key)          # \uc790\uc804\uac70\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nchild = kadap.Child()\nchild.getSearchYearCodes()                          # \uc5b4\ub9b0\uc774\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nchild.getData(year_code, city_code, key)            # \uc5b4\ub9b0\uc774\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nfreezing = kadap.Freezing()\nfreezing.getSearchYearCodes()                       # \uacb0\ube59\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nfreezing.getData(year_code, city_code, key)         # \uacb0\ube59\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nholiday = kadap.Holiday()\nholiday.getSearchYearCodes()                        # \uc5f0\ud734\uae30\uac04\ubcc4 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nholiday.getData(year_code, city_code, key)          # \uc5f0\ud734\uae30\uac04\ubcc4 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\njaywalking = kadap.Jaywalking()\njaywalking.getSearchYearCodes()                     # \ubb34\ub2e8\ud6a1\ub2e8\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\njaywalking.getData(year_code, city_code, key)       # \ubb34\ub2e8\ud6a1\ub2e8\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nlocal = kadap.Local()\nlocal.getSearchYearCodes()                          # \uc9c0\uc790\uccb4\ubcc4\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nlocal.getData(year_code, city_code, key)            # \uc9c0\uc790\uccb4\ubcc4\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nmotorcycle = kadap.Motorcycle()\nmotorcycle.getSearchYearCodes()                     # \uc774\ub95c\ucc28\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nmotorcycle.getData(year_code, city_code, key)       # \uc774\ub95c\ucc28\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\noldman = kadap.Oldman()\noldman.getSearchYearCodes()                         # \uace0\ub839\uc790\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\noldman.getData(year_code, city_code, key)           # \uace0\ub839\uc790\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nschoolzone = kadap.Schoolzone()\nschoolzone.getSearchYearCodes()                     # \uc2a4\ucfe8\uc874\uc5b4\ub9b0\uc774\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nschoolzone.getData(year_code, city_code, key)       # \uc2a4\ucfe8\uc874\uc5b4\ub9b0\uc774\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nviolation = kadap.Violation()\nviolation.getSearchYearCodes_centerline()           # \uc911\uc559\uc120\uce68\ubc94\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nviolation.getData(year_code, city_code, key)        # \uc911\uc559\uc120\uce68\ubc94\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\nviolation.getSearchYearCodes_signal()               # \uc2e0\ud638\uc704\ubc18\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uc5f0\ub3c4 \ucf54\ub4dc \ud638\ucd9c\nviolation.getData(year_code, city_code, key)        # \uc2e0\ud638\uc704\ubc18\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \ub370\uc774\ud130 \ud638\ucd9c\n\n```\n\n#### <span style=\"color: #808080\">5. \ubcf4\uc720 \ub370\uc774\ud130 API</span>\n\n```python\n\"\"\"\n10\uac1c \uc0d8\ud50c \ub370\uc774\ud130\ub97c Json \ud615\ud0dc\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\"\"\"\n\nretained = kadap.Retained()\nresult = retained.getData()\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "kadap",
            "package_url": "https://pypi.org/project/kadap/",
            "platform": null,
            "project_url": "https://pypi.org/project/kadap/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/kadap/0.0.2/",
            "requires_dist": [
                "Flask (==1.1.2)",
                "Jinja2 (==3.0.3)",
                "Pillow (>=7.1.2)",
                "PyYAML (>=5.3.1)",
                "Werkzeug (==2.0.3)",
                "flask-restplus (==0.13.0)",
                "ipython",
                "itsdangerous (==2.0.1)",
                "matplotlib (>=3.2.2)",
                "numpy (>=1.18.5)",
                "opencv-python (>=4.1.1)",
                "pandas (>=1.1.4)",
                "psutil",
                "requests (>=2.23.0)",
                "scipy (>=1.4.1)",
                "seaborn (>=0.11.0)",
                "thop (>=0.1.1)",
                "torch (>=1.7.0)",
                "torchvision (>=0.8.1)",
                "tqdm (>=4.64.0)"
            ],
            "requires_python": ">=3.6",
            "summary": "kadap api python package",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15771293,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8eb0cad322a75cf67031cd5211ce027b",
                    "sha256": "c960c42b94970d07bd6bafeea7bf0b1b9106a49e9356cd0e49407135903c3820"
                },
                "downloads": -1,
                "filename": "kadap-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "8eb0cad322a75cf67031cd5211ce027b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 232704,
                "upload_time": "2022-11-15T05:29:59",
                "upload_time_iso_8601": "2022-11-15T05:29:59.491879Z",
                "url": "https://files.pythonhosted.org/packages/c2/3d/aa7f11ee72e3f918966360b73c79223446ca9b9fd82b9843da943437ff1b/kadap-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}