{
    "0.1.912": {
        "info": {
            "author": "Matthew E. Gladden",
            "author_email": "matthew.gladden@neuraxenetica.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: Microsoft :: Windows",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NeuraXenetica/synaptans-workforcesim",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "workforcesim",
            "package_url": "https://pypi.org/project/workforcesim/",
            "platform": null,
            "project_url": "https://pypi.org/project/workforcesim/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NeuraXenetica/synaptans-workforcesim/issues",
                "Homepage": "https://github.com/NeuraXenetica/synaptans-workforcesim"
            },
            "release_url": "https://pypi.org/project/workforcesim/0.1.912/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "This package creates a simulated factory workforce; simulates its members\u2019 daily behaviors; uses diverse forms of machine learning to identify and visualize trends and correlations in workers\u2019 behavior; and then compares and assesses the accuracy of such approaches to predictive workplace analytics.",
            "version": "0.1.912",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14517275,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "29f8a28d514cc17c666879feb4999d26",
                    "sha256": "68e27835a28d4181f96de2d9c5c0a9189a4b4e8f1ca86d9d2350e70534156dd2"
                },
                "downloads": -1,
                "filename": "workforcesim-0.1.912-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "29f8a28d514cc17c666879feb4999d26",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 53102,
                "upload_time": "2022-03-24T13:39:21",
                "upload_time_iso_8601": "2022-03-24T13:39:21.021456Z",
                "url": "https://files.pythonhosted.org/packages/fa/18/747af7d6e035840e23c670ebaf7b4fae943194c14ac96d8b9e975867bdcc/workforcesim-0.1.912-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "47310bb0b61dc7a564275278ea97f16c",
                    "sha256": "458c3031638d5434fa101925012bc17a99f0c57c35f1d89ec15ce0af4ef8f182"
                },
                "downloads": -1,
                "filename": "workforcesim-0.1.912.tar.gz",
                "has_sig": false,
                "md5_digest": "47310bb0b61dc7a564275278ea97f16c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 45381,
                "upload_time": "2022-03-24T13:39:22",
                "upload_time_iso_8601": "2022-03-24T13:39:22.647444Z",
                "url": "https://files.pythonhosted.org/packages/33/83/a7aa2c5fb13513b99410a1ac0ac7dec1ef80d6152609c801bca3313fc9df/workforcesim-0.1.912.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.12": {
        "info": {
            "author": "Matthew E. Gladden",
            "author_email": "matthew.gladden@neuraxenetica.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: Microsoft :: Windows",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NeuraXenetica/synaptans-workforcesim",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "workforcesim",
            "package_url": "https://pypi.org/project/workforcesim/",
            "platform": null,
            "project_url": "https://pypi.org/project/workforcesim/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NeuraXenetica/synaptans-workforcesim/issues",
                "Homepage": "https://github.com/NeuraXenetica/synaptans-workforcesim"
            },
            "release_url": "https://pypi.org/project/workforcesim/0.2.12/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "Synaptans WorkforceSim is a free open-source platform for simulating the dynamics of a factory workforce; employing diverse forms of machine learning to identify trends and correlations in workers\u2019 behavior; and then comparing and assessing the accuracy of such approaches to predictive workplace analytics.",
            "version": "0.2.12",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14517275,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6f70e0e00b58a66437419541fbff259e",
                    "sha256": "0fc5a4daaf2adbfad93bd9f231c996755f9ca7be7a0133f7ededdb091ec50e05"
                },
                "downloads": -1,
                "filename": "workforcesim-0.2.12-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6f70e0e00b58a66437419541fbff259e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 79457,
                "upload_time": "2022-04-24T14:37:31",
                "upload_time_iso_8601": "2022-04-24T14:37:31.942243Z",
                "url": "https://files.pythonhosted.org/packages/a6/6d/e40cd2d18189c4a225236eece7cbc1aa272e89d80b8afb28a1d41bda45f2/workforcesim-0.2.12-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7a15ac2804a6468ec73e85784f2b851",
                    "sha256": "0e38334033855e20377b65f342c07bcc260cadb4c565b558dfbd0756a63acf6a"
                },
                "downloads": -1,
                "filename": "workforcesim-0.2.12.tar.gz",
                "has_sig": false,
                "md5_digest": "d7a15ac2804a6468ec73e85784f2b851",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 78388,
                "upload_time": "2022-04-24T14:37:33",
                "upload_time_iso_8601": "2022-04-24T14:37:33.155306Z",
                "url": "https://files.pythonhosted.org/packages/3c/11/640e8a4d54ef369bb41f23f9d94fc185d586e743ac8dfd3c4c8292a7d18c/workforcesim-0.2.12.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.15": {
        "info": {
            "author": "Matthew E. Gladden",
            "author_email": "\"Matthew E. Gladden\" <matthew.gladden@neuraxenetica.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: Microsoft :: Windows",
                "Programming Language :: Python :: 3"
            ],
            "description": "# SYNAPTANS WORKFORCESIM\n\nSynaptans WorkforceSim is a free open-source platform for simulating the dynamics of a factory workforce and then using such simulated behaviors of frontline workers and managers as a basis for assessing various AI-based approaches to predictive analytics in the workplace (e.g., by conducting sensitivity analysis for different algorithms and comparing such algorithms\u2019 ability to uncover \u201chidden\u201d trends and correlations that are known to be present in the synthetic data).\n\nThe software is developed by Matthew E. Gladden (with support from Cognitive Firewall LLC and NeuraXenetica LLC) and is made available for use under GNU General Public License Version 3. Please see https://www.gnu.org/licenses/gpl-3.0.html.\n\n___\n## CONCEPTUAL OVERVIEW\n\nThe simulation\u2019s logic is intended to operate at four levels:\n\n- **LEVEL 0: WORKFORCE CONSTRUCTION.** Here the software constructs a simulated workforce of a desired size, whose members possess a randomly-distributed array of psychological and demographic characteristics and abilities that will influence their daily behavior and performance in the workplace.\n\n- **LEVEL 1: WORKERS\u2019 BEHAVIORS.** Here the software simulates the concrete actions performed by frontline factory workers each day (e.g., by determining the actual degree of Efficacy with which each worker operates a production machine on a given day and determining exactly when workers cause workplace accidents or devise and implement business-process improvements).\n\n- **LEVEL 2: MANAGERS\u2019 RECORDS.** Here the software simulates the behavior of such workers\u2019 immediate managers in noticing (or overlooking) and accurately (or inaccurately) recording workers\u2019 actions in an HRM/ERP system that seeks to document workers\u2019 performance. Managers do not have access to worker\u2019 hidden, internal psychological characteristics; they can only attempt to observe and record workers\u2019 externally visible behaviors.\n\n- **LEVEL 3: AI-BASED ANALYSIS.** Here the software employs various forms of machine learning and AI to attempt to identify trends and causal connections, classify workers, and predict workers\u2019 future behaviors on the basis of the information recorded by managers in the organization\u2019s HRM/ERP system at Level 2. Just as in a real workplace, the AI doesn\u2019t have direct access to the sum of workers\u2019 actual behaviors; it can only access, analyze, and draw conclusions on the basis of the data that have actually been recorded in an organization\u2019s HRM/ERP systems \u2013 and depending on the degree of attentiveness, thoroughness, and fairness displayed by managers, such data may or may not accurately reflect the reality of workers\u2019 actual behaviors.\n\n- **LEVEL 4: ASSESSEMENT OF THE AI-BASED ANALYSIS.** In a real-world organization, it\u2019s incredibly difficult to gauge the accuracy of AI-generated analysis of workers\u2019 behaviors, as data scientists and senior executives have no access to what\u2019s actually happening at Level 1; they only have access to the relatively tiny quantity of worker behaviors that are captured (often inaccurately) by information systems at Level 2. The utility of a workforce simulation like this one lies in the fact that we actually know the reality of each worker\u2019s personality, capacities, and daily behaviors \u2013 because a user has specified (and is able to view) all workers\u2019 characteristics (including attitudes, strengths, and weaknesses that are normally invisible in a workplace setting) and has algorithmically determined exactly what actions he or she performs each day. This makes it possible to compare an AI-based analysis not only against the observations that managers recorded at Level 2 but against the actual behaviors performed by workers at Level 1 and the true psychological capacities possessed by workers at Level 0. In this way, it becomes possible to evaluate which AI-based approaches can most accurately model workplace behaviors identify an organization\u2019s best workers \u2013 and what degree of confidence can be placed in various forms of predictive analytics.\n\nThe contents of Levels 1 and 2 are interrelated, with causal impacts flowing in both directions. Managers don't simply record their observations of workers' behavior; the fact that a given manager has (or has not) accurately recorded the activities of his or her subordinates can have an encouraging or demoralizing impact that will affect what behaviors the employees will generate in the following days.\n\nIn the current version of the program, the code for Levels 0, 1, and 2 has been largely implemented and a development roadmap has been prepared for Levels 3-4.\n\n___\n## CONSTITUENT MODULES\n\nIn addition to `__init__.py`, this Python package includes the following modules:\n\n- `config.py` (imported as `cfg`) \u2022 This module stores configuration settings and variables that are used by multiple modules.\n\n- `io_file_manager.py` (imported as `iofm`) \u2022 This module handles the reading of files from disk (e.g., XLSX files or PNG images); the writing of files to disk (e.g., saving DataFrames as XLSX files or Matplotlib plots as PNG images; and the saving of complex objects as file-like objects assigned to variables in memory (e.g., Matplotlib plots as in-memory PNGs for display in a GUI).\n\n- `wfs_utilities.py` (imported as `utils`) \u2022 This module includes general initialization functions that don\u2019t relate to just a single level of the simulation\u2019s logic, along with other general time-saving utility functions.\n\n- `wfs_personnel.py` (imported as `pers`) \u2022 This module handles the simulation\u2019s \u201cLevel 0\u201d logic, which involves the creation of the members of the workforce and determining and determining of their (more or less) permanent personal characteristics.\n\n- `wfs_behaviors.py` (imported as `bhv`) \u2022 This module handles the simulation\u2019s \u201cLevel 1\u201d logic, which simulates the *actual* behaviors performed by workers during each day of the simulated time period. These behaviors reflect the \u201creality\u201d of the daily productivity and interpersonal interactions of production workers in the factory.\n\n- `wfs_records.py` (imported as `rec`) \u2022 This module handles the simulation\u2019s \u201cLevel 2\u201d logic, which simulates frontline managers\u2019 personal *observations* of workers\u2019 daily behaviors and the *records* of such behaviors that they enter into their factory\u2019s (simulated) HRM/ERP system. Of critical importance is the fact that those records *may* or *may not* accurately reflect workers\u2019 actual behaviors: a manager who is overworked, inattentive, dishonest, or unskilled in use of the HRM/ERP system may fail to record some worker behaviors, may record behaviors that didn\u2019t actually occur, or may record behaviors in a distorted manner.\n\n- `wfs_ai.py` (imported as `ai`) \u2022 This module handles the simulation\u2019s \u201cLevel 3\u201d logic, which uses various machine-learning techniques in an attempt to identify meaningful trends, causal relationships, and other correlations relating to workers\u2019 personal characters and workplace behaviors and to attempt to predict workers\u2019 future behavior \u2013 either absolutely or in response to particular changes that might be implemented in the workplace. In generating such analyses and predictions, the AI *does not* have access to workers\u2019 actual personal characteristics or behaviors; rather, it only has access to the records made in the organization\u2019s HRM/ERP system by its frontline managers \u2013 which may or may not reflect workers\u2019 actual characteristics and behaviors in a fully accurate manner.\n\n- `wfs_evaluator.py` (imported as `eval`) \u2022 This module handles the simulation\u2019s \u201cLevel 4\u201d logic, which evaluates the accuracy and business value of the analyses and predictions made by various machine-learning techniques at Level 3 by comparing them to workers\u2019 *actual* characteristics and behaviors (generated at Levels 0 and 1). This makes it possible to assess, for example, (1) what types of information regarding workers\u2019 behaviors must be recorded, with what frequency, and for how large a workforce in order for the data present in the HRM/ERP system to allow machine learning algorithms to accurately predict future worker behaviors; (2) how much variation (e.g., in perceptiveness, objectivity, and completeness) can exist between individual managers\u2019 approches to recording workers\u2019 behaviors without undermining AI\u2019s ability to detect certain trends and correlations or compromising the AI\u2019s ability to accurately distinguish between the organization\u2019s \u201cmore effective\u201d and \u201cless effective\u201d workers; and (3) which forms of machine learning and AI are able to best predict workers\u2019 future behaviors despite the \u201cnoise\u201d produced by certain managers\u2019 fragmentary, biased, or otherwise inaccurate manner of recording workers\u2019 past behaviors in the HRM/ERP system.\n\n- `wfs_visualizer.py` (imported as `vis`) \u2022 This module handles visualization of the simulation\u2019s results. It is capable of generating a wide range of histograms, bar plots, scatterplots, and other plots illustrating temporal trends and the relationships between particular variables.\n\n- `wfs_executor.py` \u2022 This simple module runs the simulation, accepting the arguments provided by a user to (1) create a simulated workforce; (2) simulate workers\u2019 daily activity for a specified number of days and quantity of workers; (3) generate the (potentially inaccurate) records of such workplace behaviors made by workers\u2019 frontline managers; (4) employ AI in an attempt to discover trends and correlations in the records\u2019 data and generate predictions; and then (5) assess the accuracy of those analyses and predictions by comparing them with what we know to be the case regarding workers\u2019 actual past and expected future behaviors.\n\n___\n## STRUCTURE AND DYNAMICS OF THE SIMULATED WORKFORCE\n\n### ORGANIZATIONAL ROLES\n\nThe simulated workforce comprises a group of employees organized into four hierarchical levels, as described below:\n\n- **Production Director**. Regardless of how many employees it has, the simulated factory possesses a single Production Director who bears overall responsibility for all aspects of production operations. The Production Director has no supervisor (within the context of the simulation), no peers, and three direct subordinates (i.e., the Shift Managers). The Production Director can be understood as the employee situated at the \u201ctop\u201d of the organizational hierarchy.\n\n- **Shift Managers**. The simulated factory has three Shift Managers, each of whom oversees one of the factory\u2019s successive daily shifts. Each Shift Manager reports directly to the Production Director, has the other two Shift Managers as peers, and serves as the supervisor of eight Team Leaders.\n\n- **Team Leaders**. Each shift has eight Team Leaders, each of whom oversees a team of one or more Laborers. Each Team Leader reports directly to the Shift Manager of the relevant shift, has the other seven Team Leaders of the same shift as peers, and serves as the supervisor of one or more Laborers.\n\n- **Laborers**. The factory has a variable number of specialized Laborers, with the exact number depending on input provided by a user. Each Laborer reports directly to the relevant Team Leader, does not supervise any other persons, and has a variable number of fellow team-member Laborers as peers (depending on the size of the workforce specified by the user).\n\n### ASSIGNING RANDOMIZED PERSONAL CHARACTERISTICS\n\nEach person in the simulated workforce possesses a number of characteristics that are generated by the simulator in a manner that is quasi-randomized, as guided by certain parameters established by the software\u2019s user. (The way in which such characteristics are generated and their relationship to user-supplied arguments is explained in more detail later in this document.) We can divide such personal characteristics into \u201cdemographic traits\u201d and \u201ccore stats,\u201d as discussed below.\n\n#### DEMOGRAPHIC TRAITS\n\n- **ID** (`per_id`) is a person\u2019s organizational employee ID number. Each member of the workforce has a unique ID.\n\n- A person\u2019s **first name** (`f_name`) and **last name** (`l_name`) are randomly selected from a list of possible names. It is possible for multiple persons in the factory to have the same full name (although their ID numbers will be unique).\n\n- **Age** (`age`) is a person\u2019s age in years at the start of the simulated time period; it is randomly generated to fall between the minimum and maximum ages specified by the user.\n\n- **Sex** (`sex`) is a person\u2019s sex; in this version of the software, a person is randomly assigned either \u201cM\u201d or \u201cF\u201d as a sex.\n\n#### CORE STATS\n\nA person\u2019s core stats are numbers that reflect the degree to which the individual possesses or manifests particular abilities or behaviors. The value of each core stat is independently generated for each person in the simulated workforce. The values of these stats are randomly generated to fall between 0.0 and 1.0, using a mean value and standard deviation specified by the user. In general, core stats are constructed in such a way that a high value is \u201cbetter\u201d than a low value.\n\n- **Health** (`health`) represents a person\u2019s overall degree of physical hardiness, which influences his or her rate of attendance at work. In terms of the simulation, a Laborer with a low Health stat will generate more Absence behaviors (i.e., will be more frequently absent from the workplace).\n\n- **Commitment** (`commitment`) reflects a person\u2019s overall level of dedication to his or her job in the factory and the degree of thoroughness and effort that the person manifests in his or her daily work. In terms of the simulation, a Laborer with high Commitment will generate fewer Absence behaviors, more Sacrifice behaviors, fewer Sabotage behaviors, and a higher average daily Efficacy. \n\n- **Perceptiveness** (`perceptiveness`) reflects a person\u2019s natural ability to notice details in the workplace, detect trends, draw connections, and identify possible solutions to problems. In terms of the simulation, a Laborer with high Perceptiveness will generate more Idea behaviors and fewer Lapse behaviors.\n\n- **Dexterity** (`dexterity`) reflects a person\u2019s natural ability to quickly and accurately perform manual tasks and to avoid physical errors or accidents. In terms of the simulation, a Laborer with high Dexterity will generate more Feat behaviors, fewer Slip behaviors, and a higher daily Efficacy.\n\n- **Sociality** (`sociality`) reflects a person\u2019s ability to successfully collaborate with, support, inspire, and mentor his or her coworkers. In terms of the simulation, a Laborer with high Sociality will generate more Teamwork behaviors and fewer Disruption behaviors.\n\n- **Goodness** (`goodness`) reflects a person\u2019s overall level of integrity and virtue, including the ability to deal constructively with adversity or disappointments in the workplace. In terms of the simulation, a Laborer with high Goodness will generate more Sacrifice behaviors and fewer Sabotage behaviors.\n\n- **Strength** (`strength`) and **Open-mindedness** (`openmindedness`) are \"control stats\" that have no influence on any of a person's behaviors and no relationship to any other stats or variables. They have been added to make it easier to assess the extent to which certain factors (e.g., a small workforce size or small number of days simulated) can give rise to apparent correlations between variables where no underlying causal connections exist.\n\n#### RELATIONSHIP OF CORE STATS TO DAILY BEHAVIORS\n\nAs indicated above, various relationships exist between a Laborer\u2019s personal characteristics and the behaviors that he or she performs daily in the workplace. For example, in general, a person with a high Dexterity and Commitment will demonstrate a higher average daily Efficacy than one with low Dexterity and Commitment. However, due to the randomizing elements introduced into the simulation, it is quite possible that on any given day, a person with low Dexterity and Commitment will generate a greater Efficacy behavior for that day than one with high Dexterity and Commitment.\n\n### COMPOSITE CAPACITY SCORES\n\nIn addition to randomly generating the values of the \u201craw\u201d core stats possessed by each person in the workforce, the simulator also calculates the values of certain composite capacity scores that present a more generalized, synthetic overview of some aspect of an employee\u2019s potential.\n\n- A person\u2019s **\u201cworker capacity score\u201d** (`WRKR_CAP`) is a calculated score that attempts to capture his or her general long-term ability to successfully carry out routine frontline production work within the factory (e.g., operating some machine on an assembly line or transporting materials within the factory). It is a weighted average of a person\u2019s Health, Commitment, Dexterity, Goodness, Perceptiveness, and Sociality stats, with more weight being given to a person\u2019s Health and Commitment stats, which jointly influence a person\u2019s rate of attendance in the workplace. (This reflects the fact that attendance is the most basic prerequisite for being able to carry out work: as noted above, if someone is not able to present in the workplace, then none of his or her other strengths or weaknesses will be relevant.) \n\n- A person\u2019s **\u201cmanagerial capacity score\u201d** (`MNGR_CAP`) is a calculated score designed to reflect his or her general long-term ability to fill a managerial role (e.g., as Team Leader, Shift Manager, or Production Director) within the factory. It is a weighted average of a person\u2019s Health, Commitment, Perceptiveness, and Goodness, stats, with more weight being given to a person\u2019s Health and Commitment stats.\n\n#### RELATIONSHIP OF WRKR_CAP AND MNGR_CAP SCORES\n\nWhile, for example, manual dexterity is fairly important for a frontline factory worker, it isn\u2019t so essential for a manager. Such distinctions are reflected in the manner in which the `WRKR_CAP` and `MNGR_CAP` scores are calculated: there is some overlap in constituent factors, but other stats contribute to only one of the two scores. It is thus possible for a person to have higher `WRKR_CAP` score than `MNGR_CAP` score, or vice versa. This reflects the real-world fact that the skills needed to successfully perform frontline work in a given organization may differ significantly from the skills needed to successfully oversee *other* persons who are performing such work. Someone who is an excellent frontline worker may or may not thrive when promoted into a managerial position, while someone who struggles in a frontline position might excel when asked to supervise others who are performing such work.\n\n### ASSIGNING ROLES WITHIN THE ORGANIZATION\n\nThe simulated factory is designed to model a real-world organization. In real-world competitive contexts, running a factory with hundreds or thousands of workers is an incredibly complex undertaking, and (in the absence of nepotism, corruption, incompetence, or neglect on the part of an organization\u2019s board or directors), one may generally presume that the persons who have been assigned to senior management roles have been selected to bear such responsibility because they are well-trained, highly qualified, and have proven (and honed) their managerial abilities through years of experience. The software models this dynamic in the following manner:\n\n- From among all persons in the pool of employees, the one individual with the highest `MNGR_CAP` score is algorithmically assigned to the role of Production Director.\n\n- The individuals with the three next-highest `MNGR_CAP` scores are then algorithmically assigned to roles as the Shift Managers.\n\n- All of the remaining individuals within the organization are randomly assigned to the role of either Team Leader or Laborer \u2013 without regard to their particular `MNGR_CAP` or `WRKR_CAP` scores. This reflects the fact that when new employees join a production company in an entry-level position, it is often not immediately apparent which individuals possess exactly which strengths and weaknesses, and which of them would thrive (or struggle) if they were promoted to the position of Team Leader. The persons assigned to serve as Team Leaders thus may or may not actually be the persons who are theoretically best-qualified to fill such roles.\n\n___\n## RUNNING THE SIMULATION\n\nThere are various ways of running the simulation, depending on how Python has been configured on one\u2019s system. Below are some approaches that one might try. They all presume that one has already installed the workforcesim package.\n\nFrom witin Windows PowerShell, one can open the workforcesim folder that contains the module files listed above and type:\n`python wfs_executor.py`\n\nAlternatively, from within PowerShell, one can access Python by typing `python` and then type:\n`from workforcesim import wfs_executor`\n\nSimilarly, from within an IDE like VS Code, one can initiate an Python Interactive window and then, within the Jupyter code cell, type:\n`from workforcesim import wfs_executor`\n\nIt is possible for a user to configure the simulation\u2019s parameters by manually modifying the value of certain variables defined in the config.py module, including the number of Laborers who belong to each Team (which determines the overall size of the factory\u2019s workforce) and the number of days of activity to be simulated.\n\nThis can be done by (for example) restarting the Python kernel and then typing the following in a VS Code Python Interactive code cell to access the configuration module and change the starting date for the simulated period:\n`from workforcesim import config as config`\n`config.sim_starting_date = \"2020-12-13\"`\n\nThe simulation can then be run by typing the following within an Interactive code cell:\n`from workforcesim import wfs_executor`\n\n### VIEWING THE RESULTS OF A SIMULATION\n\nOnce the program has calculated each worker\u2019s actual behaviors (and each manager\u2019s recording of behaviors) for all days of the period simulated, it will generate a number of figures that visualize various aspects of the results. These are outputted as PNG files saved in an \u201coutput_files\u201d folder that by default will be created (for example) in the working directory that was active in Windows PowerShell before the wfs_executor.py module was run. A number of XLSX and CSV files containing selected info regarding the organizational workforce and its behaviors are also generated within the output_files folder.\n\n___\n## DEVELOPMENT\n\nSynaptans WorkforceSim\u2122 is free open-source software developed by Matthew E. Gladden, with support from Cognitive Firewall LLC and NeuraXenetica LLC. \n\nThe choice of the name \u201cSynaptans\u201d acknowledges the origins of some of the simulation\u2019s underlying code in code written for a computer game in the \u201cUtopian Confederation\u201d game series, inspired by the seminal 16th-century philosophical text of St. Thomas More. In that game, \u201csynaptans\u201d is one of many ranks found within the administrative hierarchy of the Utopian Confederation, as it exists in the 22nd century.\n\nSynaptans WorkforceSim code and documentation \u00a92021-2022 NeuraXenetica LLC\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NeuraXenetica/synaptans-workforcesim",
            "keywords": "",
            "license": "",
            "maintainer": "Matthew E. Gladden",
            "maintainer_email": "",
            "name": "workforcesim",
            "package_url": "https://pypi.org/project/workforcesim/",
            "platform": null,
            "project_url": "https://pypi.org/project/workforcesim/",
            "project_urls": {
                "Bug Tracker": "https://github.com/NeuraXenetica/synaptans-workforcesim/issues",
                "Homepage": "https://github.com/NeuraXenetica/synaptans-workforcesim"
            },
            "release_url": "https://pypi.org/project/workforcesim/0.3.15/",
            "requires_dist": [
                "openpyxl"
            ],
            "requires_python": ">=3.9",
            "summary": "Synaptans WorkforceSim is a free open-source platform for generating synthetic data that simulate the dynamics of a factory workforce; employing diverse forms of machine learning to identify trends and correlations and make predictions regarding workers\u2019 behavior; and then assessing the accuracy of such AI-based approaches to predictive workplace analytics.",
            "version": "0.3.15",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14517275,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "eca5e2ada34dd2dab6b58c53e3b8ecf0",
                    "sha256": "40543f1e6220f331d2aac067773d40d47d6d6e2f9e0a6bc73e111f3787cf5b4d"
                },
                "downloads": -1,
                "filename": "workforcesim-0.3.15-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "eca5e2ada34dd2dab6b58c53e3b8ecf0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 459210,
                "upload_time": "2022-07-22T14:45:05",
                "upload_time_iso_8601": "2022-07-22T14:45:05.999973Z",
                "url": "https://files.pythonhosted.org/packages/e8/76/f35f8d51baaa86186ada6519376ca89ec8c9de1a4fb98e8fddece9662688/workforcesim-0.3.15-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "83655a9228df998c5d72a72ca3b7764d",
                    "sha256": "33535988da0a5b22d127514ff7add35170df579dae9927c0983001e27e09fc14"
                },
                "downloads": -1,
                "filename": "workforcesim-0.3.15.tar.gz",
                "has_sig": false,
                "md5_digest": "83655a9228df998c5d72a72ca3b7764d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 461529,
                "upload_time": "2022-07-22T14:45:08",
                "upload_time_iso_8601": "2022-07-22T14:45:08.997742Z",
                "url": "https://files.pythonhosted.org/packages/49/c8/1ce6f6a0055cc2a691677ecbac1fd1e00dce41bef3157e2f69fca96e7d78/workforcesim-0.3.15.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}