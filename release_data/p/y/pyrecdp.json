{
    "0.1.1": {
        "info": {
            "author": "INTEL AIA BDF",
            "author_email": "chendi.xue@intel.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/oap-project/recdp",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyrecdp",
            "package_url": "https://pypi.org/project/pyrecdp/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyrecdp/",
            "project_urls": {
                "Bug Tracker": "https://github.com/oap-project/recdp",
                "Homepage": "https://github.com/oap-project/recdp"
            },
            "release_url": "https://pypi.org/project/pyrecdp/0.1.1/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A data processing bundle for spark based recommender system operations",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15119066,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "518d708aba131d520a229dad915e2477",
                    "sha256": "4ef54703fe1a3cf9511a3d9a04d238be26bf3209e0c86c7a0bece0eed8c26877"
                },
                "downloads": -1,
                "filename": "pyrecdp-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "518d708aba131d520a229dad915e2477",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 229133,
                "upload_time": "2021-12-06T08:16:03",
                "upload_time_iso_8601": "2021-12-06T08:16:03.329579Z",
                "url": "https://files.pythonhosted.org/packages/99/c5/ec1fcce671f713c17c8bc6dcd8ead5648437074f7813539b6ae313aadd54/pyrecdp-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "INTEL AIA BDF",
            "author_email": "chendi.xue@intel.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/oap-project/recdp",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyrecdp",
            "package_url": "https://pypi.org/project/pyrecdp/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyrecdp/",
            "project_urls": {
                "Bug Tracker": "https://github.com/oap-project/recdp",
                "Homepage": "https://github.com/oap-project/recdp"
            },
            "release_url": "https://pypi.org/project/pyrecdp/0.1.2/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A data processing bundle for spark based recommender system operations",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15119066,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f228fd5e383d0c211908e477c66cf391",
                    "sha256": "22c9afdeaf3fe16b4e27e4313f1a422450820392a3a4e3e2796f0090c52b7d2f"
                },
                "downloads": -1,
                "filename": "pyrecdp-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "f228fd5e383d0c211908e477c66cf391",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 229152,
                "upload_time": "2021-12-06T08:47:52",
                "upload_time_iso_8601": "2021-12-06T08:47:52.815416Z",
                "url": "https://files.pythonhosted.org/packages/96/95/02e9d67e2e3c547fbafde0058734e39adf18bde4ba6d529178c1bfe5b594/pyrecdp-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "INTEL AIA BDF",
            "author_email": "chendi.xue@intel.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "## What is RecDP \n* RecDP is a Data Process python module, specifically designed for Recommender System. \n\n## Objective\n* Easy-to-use \u2013 simple APIs for data scientists, easy to migrate from NVTabular\n* Collaborative pipeline with spark and modin - provide stableness and scalability of handling huge dataset with spark and modin as underlying distributed data process engine.\n* Optimized Performance - 1) Adaptive dataframe plan decision making; 2) Intel-OAP accelerator extensions (SIMD, Cache, Native). \n* Extensible \u2013 provides plugin interface to extend intel RECO & Friesian with optimized adaptive DataProcess pipeline plan with spark and modin.\n* Feature Engineer oriented \u2013 advanced feature engineering functions (target encoding) \n\n## Currently RecDP is proven by four use case:\n* Recsys2021: successfully support intel Recsys2021 challenge feature engineering work\n* Recsys2020: successfully processing over 600 millions dataset and aligned with Recsys2021 winner feature engineering work.\n* DRLM: successfully processing Criteo dataset of 24 days w/wo frequence limit, previously wo/ frequence limit went failed using NVIDIA provided spark script.\n* DIEN: w/ RecDP, process time is 6x speeding up comparing with original Ali-Matrix python script. \n\n## Design Overview\n![RecDP overview](resources/recdp_overview.png)\n\n## How to start\n#### install with pip (require preinstall spark)\n```\npip install pyrecdp\n\n# noticed that if pyspark version is not detected, we will install pyrecdp for Spark 3.1 or later\n# And if you are using pyspark 3.0 or before, you may find scala extension here\n${Your_system_python_path}/python3.x/lib/python3.x/site-packages/pyrecdp/ScalaProcessUtils/built/\n\n# example\n/opt/intel/oneapi/intelpython/python3.7/lib/python3.7/site-packages/pyrecdp/ScalaProcessUtils/built/\n|-- 30\n|   `-- recdp-scala-extensions-0.1.0-jar-with-dependencies.jar\n`-- 31\n    `-- recdp-scala-extensions-0.1.0-jar-with-dependencies.jar\n\n2 directories, 2 files\n```\n\n#### install with spark preinstalled docker img\n```\ndocker run --network host -w /home/vmagent/app/ -it xuechendi/recdp_spark3.1 /bin/bash\npip install pyrecdp\n```\n\n#### run test\n* run below script to perform a test\n[test_categorify](tests/test_categorify.py)\n* make sure you download the whole [tests](tests) folder, test data is inside\n```\n# download tests folder\n# if you are running with spark 3.0 or before, you may need to specify scala_udf_jars to\n# ${Your_system_python_path}/python3.x/lib/python3.x/site-packages/pyrecdp/ScalaProcessUtils/built/30/recdp-scala-extensions-0.1.0-jar-with-dependencies.jar\n# or\n# ${RecDP_Cloned_Folder}/ScalaProcessUtils/built/30/recdp-scala-extensions-0.1.0-jar-with-dependencies.jar\ncd tests\npython test_categorify.py\n```\n\n#### Example screenshot\n![image](https://user-images.githubusercontent.com/4355494/144941079-9a06fc88-38fe-454a-b33a-b559edc636de.png)\n\n#### test with provided jupyter notebook example\n* Recsys2021 example [url](https://github.com/oap-project/recdp/blob/master/examples/notebooks/recsys2021/final_submission_feature_engineering.ipynb)\n* Recsys2020 example [url](https://github.com/oap-project/recdp/blob/master/examples/notebooks/recsys2020/recsys2020_feature_engineering.ipynb)\n* Recsys2020 multiitem-categorify example(support for Analytics Zoo Friesian) [url](https://github.com/oap-project/recdp/blob/master/examples/notebooks/recsys2020/recsys_for_friesian_integration.ipynb)\n* DLRM example [url](https://github.com/oap-project/recdp/blob/master/examples/notebooks/dlrm/DLRM_Performance.ipynb)\n* DIEN example [url](https://github.com/oap-project/recdp/blob/master/examples/notebooks/dien/dien_data_process.ipynb)\n\n## Advanced\n#### compile scala extension\n* noted: support spark 3.1 by default, using -pspark3.0 for running with Spark3.0\n```\ncd ScalaProcessUtils/\nmvn package -Pspark-3.1\nor\nmvn package -Pspark-3.0\n```\n\n#### test with provided spark docker img\n\n#### write your own\n* some spark configuration is required\n```\nimport init\n\nimport findspark\nfindspark.init()\n\nimport os\nfrom pyspark.sql import *\nfrom pyspark import *\nimport pyspark.sql.functions as f\nimport pyspark.sql.types as t\nfrom pyrecdp.data_processor import *\nfrom pyrecdp.encoder import *\nfrom pyrecdp.utils import *\n\nscala_udf_jars = \"${path_to_project}/recdp/ScalaProcessUtils/target/recdp-scala-extensions-0.1.0-jar-with-dependencies.jar\"\n\n##### 1. Start spark and initialize data processor #####\nspark = SparkSession\\\n    .builder\\\n    .master('yarn')\\  # switch to local[*] for local mode\n    .appName(\"RecDP_test\")\\\n    .config(\"spark.sql.broadcastTimeout\", \"7200\")\\  # tune up broadcast timeout\n    .config(\"spark.cleaner.periodicGC.interval\", \"10min\")\\  # config GC interval according to your shuffle disk capacity, \\\n                                                            # if capacity is below 2T, smaller interval will trigue \\\n                                                            # spark shuffle blocks GC more often to release space.\n    .config(\"spark.driver.extraClassPath\", f\"{scala_udf_jars}\")\\    # add recdp-scala-extension to spark\n    .config(\"spark.executor.extraClassPath\", f\"{scala_udf_jars}\")\\\n    .getOrCreate()\n    \n##### 2. init RecDP processor #####\npath_prefix = \"hdfs://\"\ncurrent_path = \"/recsys2021_0608_example/\"  # workdir for recdp\nshuffle_disk_capacity=\"1200GB\"  # spark.local.dir / shuffle capacity, this will help recdp to do better plan.\n                                # Please make sure this size is less than(about 80%) of your actual shuffle_disk_capacity.\n\nproc = DataProcessor(spark, path_prefix,\n                     current_path=current_path, shuffle_disk_capacity=shuffle_disk_capacity)\n\ndf = spark.read.parquet(\"/recsys2021_0608\")\n\nop_feature_from_original = FeatureAdd(\n        cols={\"has_photo\": \"f.col('present_media').contains('Photo').cast(t.IntegerType())\",              \n              \"a_ff_rate\": \"f.col('engaged_with_user_following_count')/f.col('engaged_with_user_follower_count')\",\n              \"dt_dow\": \"f.dayofweek(f.from_unixtime(f.col('tweet_timestamp'))).cast(t.IntegerType())\",        \n              \"mention\": \"f.regexp_extract(f.col('tweet'), r'[^RT]\\s@(\\S+)', 1)\"\n        }, op='inline')\n\n# execute\nproc.reset_ops([op_feature_from_original])\ndf = proc.transform(df, name=output_name)   # data will be transformed when this line called\n```\n\n## Test with [OAP Gazelle Project](https://github.com/oap-project/gazelle_plugin)\n```\ndocker run -it --privileged --network host -w /home/vmagent/app/ xuechendi/recdp_spark3.1:gazelle /bin/bash\n./run_jupyter\ntail jupyter_error.log\n    Or copy and paste one of these URLs:\n        http://sr130:8888/?token=c631ab6db797517e3603e7450c00e85cfc3b52653f9da31e\n     or http://127.0.0.1:8888/?token=c631ab6db797517e3603e7450c00e85cfc3b52653f9da31e\n[I 08:24:19.503 NotebookApp] 302 GET / (10.0.0.101) 0.950000ms\n[I 08:24:19.515 NotebookApp] 302 GET /tree? (10.0.0.101) 1.090000ms\n```\nrun jupyter in browser\n![image](https://user-images.githubusercontent.com/4355494/130717509-df77342d-67c8-4c40-b764-012cdfc6353f.png)\nYou'll see sql plan as below\n![image](https://user-images.githubusercontent.com/4355494/130717645-535a0807-a7d8-4968-884e-f0527bb7ccad.png)\n\n\n## LICENSE\n* Apache 2.0\n\n## Dependency\n* Spark 3.x\n* python 3.*\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/oap-project/recdp",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyrecdp",
            "package_url": "https://pypi.org/project/pyrecdp/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyrecdp/",
            "project_urls": {
                "Bug Tracker": "https://github.com/oap-project/recdp",
                "Homepage": "https://github.com/oap-project/recdp"
            },
            "release_url": "https://pypi.org/project/pyrecdp/0.1.3/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "A data processing bundle for spark based recommender system operations",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15119066,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "df711052d68ac8e3db2ea33482f670fb",
                    "sha256": "6c95d10d6992615018953451c71eaaf5762897580ebffd4f7ec2ff95f17c3f14"
                },
                "downloads": -1,
                "filename": "pyrecdp-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "df711052d68ac8e3db2ea33482f670fb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 243380,
                "upload_time": "2022-09-16T14:58:01",
                "upload_time_iso_8601": "2022-09-16T14:58:01.895258Z",
                "url": "https://files.pythonhosted.org/packages/e5/25/15ebbc3ca39d758a9c48a40398dbff2ada257a3e3c4e573ef70cd3f272f5/pyrecdp-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}