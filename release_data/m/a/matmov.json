{
    "1.1.0": {
        "info": {
            "author": "Gabriel Passos, Fl\u00e1via C. Gachet",
            "author_email": "gabrielpassos97@hotmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Environment :: Console",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "# matmov - educaMat\nProjeto back-end do Desafio Unisoma - 2020\n\nGabriel Passos - IMECC - UNICAMP\n\nFl\u00e1via C. Gachet - FCA - UNICAMP\n\n## Instala\u00e7\u00e3o\nOferecemos duas maneiras para instalar o program. A primeira delas \u00e9 manual e requer uma pasta com os arquivos do pacote desenvolvido no local em que o programa ser\u00e1 executado, al\u00e9m de instala\u00e7\u00e3o ou atualiza\u00e7\u00e3o manual de pacotes de terceiros (descritos na se\u00e7\u00e3o Pacotes e Vers\u00f5es). Observamos que houve uma\natualiza\u00e7\u00e3o da vers\u00e3o do *ortools*.\n\nO pacote desenvolvido tamb\u00e9m foi disponibilizado no *PyPI* para f\u00e1cil instala\u00e7\u00e3o e execu\u00e7\u00e3o. Nesse caso, se voc\u00ea possuir o *pip* instalado, basta executar:\n```sh\n$ pip install matmov\n```\nAlgumas outras possibilidades para instala\u00e7\u00e3o atrav\u00e9s do *pip*:\n```sh\n$ phyton -m pip install matmov\n$ pip3 install matmov\n$ python3 -m pip install matmov\n```\n\nObs: a op\u00e7\u00e3o a ser usada pode depender de como o Python 3 est\u00e1 instalado no seu computador.\n\nCom a instala\u00e7\u00e3o executada pelo *PyPI*, basta descompactar o arquivo `instalacaoPip.zip` e executar o arquivo `main.py` como sera indicado posteriormente.\n\nCaso seja prefer\u00edvel n\u00e3o usar o *PyPI*, mas sim rodar diretamente com os arquivos *.py* desenvolvidos, os arquivos necess\u00e1rios foram encaminhados por e-mail e est\u00e3o dispon\u00edveis no reposit\u00f3rio: [https://github.com/gabpassos/matmov](https://github.com/gabpassos/matmov).\n\nPara rodar com os arquivos do pacote na pasta, sem instalar pelo *PyPI*, basta descompactar o arquivo `instalacaoLocal.zip` e executar o arquivo `main.py` como sera indicado posteriormente.\n\n## Executando o programa\nO conte\u00fado da pasta em que o programa ser\u00e1 executado depende do m\u00e9todo de instala\u00e7\u00e3o utilizado, entretanto, os anexos enviados contemplam as duas possibilidades de forma que facilite o processo de execu\u00e7\u00e3o e avalia\u00e7\u00e3o. Destacamos que tudo o que esta descrito aqui sera enviado em anexo e est\u00e1 tamb\u00e9m dispon\u00edvel no [reposit\u00f3rio do GitHub](https://github.com/gabpassos/matmov)\n\nNo local de sua prefer\u00eancia para executar nosso c\u00f3digo deve existir a pasta `data`. Deve haver tamb\u00e9m um arquivo `main.py` com um conte\u00fado apropriado (arquivo que executa os metodos do pacote desenvolvido). A pasta `data` possui os arquivos *SQLite database* com os casos de teste.\n\nSe a instala\u00e7\u00e3o for feita pelo *PyPI*, basta editar a main da forma que for desej\u00e1vel e ent\u00e3o executar o arquivo `main.py`. Caso seja prefer\u00edvel rodar com os arquivos diretamente, sem instalar pelo *PyPI*, deve haver uma terceira pasta, com nome `matmov` que cont\u00e9m os arquivos do pacote (enviada em anexo). Em seguida, basta editar a main da forma que for desej\u00e1vel e ent\u00e3o executar o arquivo `main.py`.\n\n## Estrutura da `main.py`\n\n```python\nimport matmov as mm\n\n#Para selecionar o arquivo, basta comentar as linhas de forma adequada:\n#arquivo = 'cenario_2.db'\n#arquivo = 'cenario_5.db'\narquivo = 'original.db'\n#arquivo = 'original2020.db'\n#arquivo = 'otimizaNoAno.db'\n#arquivo = 'reduzirVerba.db'\n#arquivo = 'juntaTurmaCont.db'\n#arquivo = 'addQuartoAnoEM.db'\n\n############################################\n# - Solver padrao: CP-SAT (CBC tambem pode ser utilizado)\n# - somenteTurmasObrig: variavel binaria que exibe ou nao os dados de turmas nao\n#   ativas\ndatabase = 'data/' + arquivo\nMatMov = mm.modelo(databasePath= database, somenteTurmasObrig= True)\n\nMatMov.leituraDadosParametros()\n\nMatMov.Solve()\n\nMatMov.exportaSolucaoSQLite()\n\n############################################\n##  Opcional  ##\nMatMov.estatisticaSolver()\n\nMatMov.estatisticaProblema()\n\nMatMov.analiseGrafica()\n```\nAo comentar ou \"descomentar\" as linhas que definem a vari\u00e1vel `arquivo`, seleciona-se\nqual conjunto de dados ser\u00e1 executado e resolvido.\n\nRemovendo as linhas com `MatMov.estatisticaSolver()`, `MatMov.estatisticaProblema()` e\n`MatMov.analiseGrafica()`, as suas respectivas informa\u00e7\u00f5es ir\u00e3o para de ser exibidas na\ntela e as figuras n\u00e3o ser\u00e3o mais geradas ou atualizadas. Os demais metodos devem ser\nexecutados.\n\n### Resumo de instala\u00e7\u00e3o e execu\u00e7\u00e3o\n- Instala\u00e7\u00e3o pelo *PyPI*: instalar pelo *pip* e ent\u00e3o extrair os arquivos de\n`instalacaoPip.zip` e executar `main.py`.\n\n- Instala\u00e7\u00e3o pelo local: extrair os arquivos de `instalacaoLocal.zip` e executar `main.py`.\n\n## Um pouco sobre os cen\u00e1rios testados\nOs cen\u00e1rios testados:\n- `cenario_2.db`: cenario enviado pela UniSoma em prepara\u00e7\u00e3o para fase final.\n- `cenario_5.db`: cenario enviado pela UniSoma em prepara\u00e7\u00e3o para fase final.\n- `original.db`: arquivo original.\n- `original2020.db`: encontramos uma inconsist\u00eancia no ano de refer\u00eancia em alguns alunos de formul\u00e1rio. O aluno se inscreveu em 2020 mas o ano de refer\u00eancia \u00e9 2019. Os dados em `original2020.db` corrigem essa inconsist\u00eancia.\n- `otimizaNoAno.db`: considera resolucao do problema no ano de 2020\n- `reduzirVerba.db`: verba reduzida para 15000\n- `juntaTurmaCont.db`: remo\u00e7\u00e3o de alguns alunos de continuidade para ver se o m\u00e9todo realmente junta turmas de continuidade quando poss\u00edvel.\n- `addQuartoAnoEM.db`: adi\u00e7\u00e3o do 4\u00ba ano do ensino m\u00e9dio.\n\nObs: todos os cen\u00e1rios consideram a remo\u00e7\u00e3o dos CPF's repetidos e todos (exceto o `original.db`) tratam da inconsist\u00eancia do ano de refer\u00eancia.\n\n## Pacotes e vers\u00f5es\nO pacote foi desenvolvido em Python 3 e testado nas vers\u00f5es Python 3.7.2 64-bit e Python 3.8.2 64-bit. Assim, espera-se que o pacote n\u00e3o encontre problemas em vers\u00f5es maiores que 3.7 do Python 3. Seguem os principais pacotes externos do Python utilizados nessa primeira vers\u00e3o do programa:\n\n| Pacote | Vers\u00e3o |\n| ------ | ------ |\n| *numpy* | 1.19.2 |\n| *pandas* | 1.1.2 |\n| *matplotlib* | 3.3.2 |\n| *ortools* |  8.0.8283 |\n\nForam utilizados alguns pacotes da biblioteca *standard* do Python 3: *math, sqlite3, time, datetime, string, os* e *statistics*. Esses pacotes n\u00e3o necessitam de instala\u00e7\u00e3o pois acompanham diretamente a instala\u00e7\u00e3o do Python 3.\n\nObs 1: o ortools requer que a vers\u00e3o do Python 3 instalada seja de 64-bit.\n\nObs 2: as fun\u00e7\u00f5es utilizadas da biblioteca *os* s\u00e3o independentes de sistema operacional.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gabpassos/matmov",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "matmov",
            "package_url": "https://pypi.org/project/matmov/",
            "platform": "",
            "project_url": "https://pypi.org/project/matmov/",
            "project_urls": {
                "Homepage": "https://github.com/gabpassos/matmov"
            },
            "release_url": "https://pypi.org/project/matmov/1.1.0/",
            "requires_dist": [
                "ortools (>=8.0.0)",
                "pandas (<2.*,>=1.1.2)",
                "numpy (<2.*,>=1.19.2)",
                "matplotlib (<4.*,>=3.3.2)"
            ],
            "requires_python": ">=3.7",
            "summary": "Solver para o problema de aloca\u00e7\u00e3o de alunos na ONG Matem\u00e1tica em Movimento",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8498764,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "90550be88b5f965b0601766f1d3a3a20",
                    "sha256": "4c8c2cfd86453b274d4098284354a1962a506f52d6b3f1ae0e449468a110cecf"
                },
                "downloads": -1,
                "filename": "matmov-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "90550be88b5f965b0601766f1d3a3a20",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 24460,
                "upload_time": "2020-10-26T01:38:05",
                "upload_time_iso_8601": "2020-10-26T01:38:05.060838Z",
                "url": "https://files.pythonhosted.org/packages/3a/77/9f9691c14dea51106d50ce0e2eaafa19ee9e9e5f6722dd042094ff9bb576/matmov-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1b2fe5a00bb2ddf16c909e4699d3a2f3",
                    "sha256": "31449c5c527f7a60342c8239e860f8e7e77f4102d4b2f5894e64ab053742c389"
                },
                "downloads": -1,
                "filename": "matmov-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1b2fe5a00bb2ddf16c909e4699d3a2f3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 24265,
                "upload_time": "2020-10-26T01:38:07",
                "upload_time_iso_8601": "2020-10-26T01:38:07.696267Z",
                "url": "https://files.pythonhosted.org/packages/14/01/8cf8407976de675e7172937f8c57359b4e96dc0ee215ac726586db032128/matmov-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}