{
    "0.5.0": {
        "info": {
            "author": "Alexandre Erwin Ittner",
            "author_email": "alexandre@ittner.com.br",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Internet :: WWW/HTTP :: Browsers"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://sr.ht/~ittner/newslinkrss/",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newslinkrss",
            "package_url": "https://pypi.org/project/newslinkrss/",
            "platform": "",
            "project_url": "https://pypi.org/project/newslinkrss/",
            "project_urls": {
                "Homepage": "https://sr.ht/~ittner/newslinkrss/"
            },
            "release_url": "https://pypi.org/project/newslinkrss/0.5.0/",
            "requires_dist": [
                "requests (>=2.18.4)",
                "PyRSS2Gen (>=1.1.0)",
                "python-dateutil (>=2.6.1)",
                "lxml (>=4.6.3)"
            ],
            "requires_python": ">=3.6",
            "summary": "Generate RSS feeds from generic sites",
            "version": "0.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15201918,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "286025166753d3386557a355e912e37e",
                    "sha256": "6e7cfa9d4008a924c2bd2536d8ee9a25c0f3685e58c4f3428b55b640a03cdc06"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "286025166753d3386557a355e912e37e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 27176,
                "upload_time": "2021-12-29T00:05:30",
                "upload_time_iso_8601": "2021-12-29T00:05:30.030707Z",
                "url": "https://files.pythonhosted.org/packages/35/16/5f8f770ea3492a83f7aa0d1cbeceb896cbba9e8ba38fd12b72b8bed3ba88/newslinkrss-0.5.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c3f9acb6cc7e70fa50687c842e3dbe90",
                    "sha256": "0611b90ea1a84e43ef00e9cf7dfdd8299010ca7b6ac4c82bdee45b85ccede73e"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.0.tar.gz",
                "has_sig": false,
                "md5_digest": "c3f9acb6cc7e70fa50687c842e3dbe90",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 30536,
                "upload_time": "2021-12-29T00:12:45",
                "upload_time_iso_8601": "2021-12-29T00:12:45.136289Z",
                "url": "https://files.pythonhosted.org/packages/dd/03/88d15f77da2446721187f910b0b5f61de36eae6956061586f44a7953ed6c/newslinkrss-0.5.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.1": {
        "info": {
            "author": "Alexandre Erwin Ittner",
            "author_email": "alexandre@ittner.com.br",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Internet :: WWW/HTTP :: Browsers"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://sr.ht/~ittner/newslinkrss/",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newslinkrss",
            "package_url": "https://pypi.org/project/newslinkrss/",
            "platform": "",
            "project_url": "https://pypi.org/project/newslinkrss/",
            "project_urls": {
                "Homepage": "https://sr.ht/~ittner/newslinkrss/"
            },
            "release_url": "https://pypi.org/project/newslinkrss/0.5.1/",
            "requires_dist": [
                "requests (>=2.18.4)",
                "PyRSS2Gen (>=1.1.0)",
                "python-dateutil (>=2.6.1)",
                "lxml (>=4.6.3)"
            ],
            "requires_python": ">=3.6",
            "summary": "Generate RSS feeds from generic sites",
            "version": "0.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15201918,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "51fcdbd27137200349d2729294ecf187",
                    "sha256": "2cdb1ba33da779ded7c4bbac1641b6942831090cdd9776b015b5b16f534bc546"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "51fcdbd27137200349d2729294ecf187",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 27194,
                "upload_time": "2021-12-29T00:18:16",
                "upload_time_iso_8601": "2021-12-29T00:18:16.049366Z",
                "url": "https://files.pythonhosted.org/packages/e3/6c/9f2f2237916a092f6e30ad1d21f3737468cca2a01eec9cecfc41cb9176ae/newslinkrss-0.5.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5d0b9f7db18d0c85b777edf99a516b9b",
                    "sha256": "8c49046bcd04210daed11ea7ec8fa30b1e084728a25b2cc901ec43d3baeff4d3"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5d0b9f7db18d0c85b777edf99a516b9b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 30594,
                "upload_time": "2021-12-29T00:18:17",
                "upload_time_iso_8601": "2021-12-29T00:18:17.777606Z",
                "url": "https://files.pythonhosted.org/packages/fd/f6/d01355d98a6eee105b1f0a5fa08000d33d29c35535566301397b05a0ac88/newslinkrss-0.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.2": {
        "info": {
            "author": "Alexandre Erwin Ittner",
            "author_email": "alexandre@ittner.com.br",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Internet :: WWW/HTTP :: Browsers"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://sr.ht/~ittner/newslinkrss/",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newslinkrss",
            "package_url": "https://pypi.org/project/newslinkrss/",
            "platform": null,
            "project_url": "https://pypi.org/project/newslinkrss/",
            "project_urls": {
                "Homepage": "https://sr.ht/~ittner/newslinkrss/"
            },
            "release_url": "https://pypi.org/project/newslinkrss/0.5.2/",
            "requires_dist": [
                "PyRSS2Gen (>=1.1.0)",
                "lxml (>=4.6.3)",
                "python-dateutil (>=2.6.1)",
                "requests (>=2.18.4)"
            ],
            "requires_python": ">=3.6",
            "summary": "Generate RSS feeds from generic sites",
            "version": "0.5.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15201918,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "051e524a5c203bb161053ccbdb056ca0",
                    "sha256": "4127cca4466650a2ebd0391dcc324c48f055f0571599ebb3db4857901d276678"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.2-py3.6.egg",
                "has_sig": false,
                "md5_digest": "051e524a5c203bb161053ccbdb056ca0",
                "packagetype": "bdist_egg",
                "python_version": "0.5.2",
                "requires_python": ">=3.6",
                "size": 16423,
                "upload_time": "2022-05-09T01:58:09",
                "upload_time_iso_8601": "2022-05-09T01:58:09.289842Z",
                "url": "https://files.pythonhosted.org/packages/4f/bf/d494f7d493216646993c0e2be71fad3244a5500a551d0a346e53358a3239/newslinkrss-0.5.2-py3.6.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e99abaae6d66809e775bb8ae9ead10d7",
                    "sha256": "ba21a6f97259a3cd2e94cd01a6c9ea607ea541f3c3ba72147b1c4c606da57e1f"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e99abaae6d66809e775bb8ae9ead10d7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 28795,
                "upload_time": "2022-05-09T01:58:07",
                "upload_time_iso_8601": "2022-05-09T01:58:07.573555Z",
                "url": "https://files.pythonhosted.org/packages/08/29/8ac85082f1737ef2d434396b235ca61a259bede08883fde3474f7f138f5a/newslinkrss-0.5.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bb0d67e52fd25f0cffc385e5243dd15c",
                    "sha256": "26dabaf8f2ea97cccda13d1b6774cfba22f1e9364acb2e77dbad1f8606d4ddae"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.5.2.tar.gz",
                "has_sig": false,
                "md5_digest": "bb0d67e52fd25f0cffc385e5243dd15c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 17054,
                "upload_time": "2022-05-09T01:58:10",
                "upload_time_iso_8601": "2022-05-09T01:58:10.456896Z",
                "url": "https://files.pythonhosted.org/packages/ca/d3/972009051aaf501afa8d2927c6e707485dbcd4b71ce443d5661c4ba90333/newslinkrss-0.5.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.0": {
        "info": {
            "author": "Alexandre Erwin Ittner",
            "author_email": "alexandre@ittner.com.br",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.6",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Internet :: WWW/HTTP :: Browsers"
            ],
            "description": "# About\n\nnewslinkrss generates RSS feeds from generic sites that do not provide their\nown. This is done by loading a given URL and collecting all links that\nmatches a pattern, given as a regular expression, to gather the relevant\ninformation.\n\nThe results are printed as a RSS feed to stdout or, optionally, to a file. The\nsimplest way to use it is just configure your **local** feed reader, like\n[Liferea](https://lzone.de/liferea/) or [Newsboat](https://newsboat.org/), to\nuse a \"command\" source and pass the correct command line arguments to generate\na suitable feed -- this allows you to centralize the configuration in the\nreader itself and let it handle update times, etc.\n\nRun `newslinkrss --help` for the complete list of command line options.\n\n\n# Intended audience (and a rant)\n\nThis script is mostly intended to technically versed people using some kind\nof Unix operating system (e.g. Linux). I was planning to write a detailed\ndocumentation but I just gave up. There is no much hope of making it friendly\nto casual users when every use case requires complex command lines, abuse of\nregular expressions, strftime strings, XPath, etc.\n\n## The Rant\n\nEverything would be just easier if websites simply provided clean and complete\nRSS or Atom feeds, but these sites are becoming rarer every day. Most sites\njust assume we want to follow them through social media (and that we *use*\nsocial media!) while giving away privacy and submitting ourselves to tracking\nand personal data collection in exchange for timelines algorithmically\noptimized to improve \"engagement\" with advertisers.\n\nI'm still resisting and wrote lots of feed scrapers/filters in the last 10 or\nso years; newslinkrss is one that replaced several of these ad-hoc filters by\ncentralizing some very common pieces of code and it is polished enough to be\npublished.\n\n\n\n\n# Installation\n\n\n## Installing from PyPI\n\nThis is the simplest installation method and will deliver the latest **stable**\nversion of the program. To install in your `$HOME` directory, just type:\n\n    pip3 install newslinkrss\n\nThis assumes pip3 is installed and configured (which usually happens by\ndefault in Linux distributions intended for general use).\n\n\n\n## Installing from the Git repository\n\nThis installation process is recommended for developers and people wanting\nthe newest version. For that, just clone the Git repository and install or\nupdate the program with:\n\n    pip3 install -U .\n\nYou may want to do this in a virtual environment so it won't interfere with\nother user-level or system-wide components and make experimentation with\ndevelopment versions easier. In this case, just do:\n\n    python3 -m venv my-venv\n    . my-venv/bin/activate\n    pip install -U .\n\n\nnewslinkrss depends on a few libraries and has one technically optional\ndependency on [lxml](https://lxml.de/), but the setup script will always\ninstall it anyway -- it is possible to run the script without installing it,\nbut a few nice features will be unavailable (XPath, `--with-body`, etc.).\n\n\n\n# Usage examples\n\nnewslinkrss is lacking a lot of documentation, but the following examples\ncan show a bit of what it can and can not do. A complete list of options\ncan be read by typing `newslinkrss --help`.\n\n\n### Simplest case\n\nThe simplest use case is just load a website, select all links matching a\npattern and expose a feed using the text of that link as description and\nassuming that the publishing date is the date the command was run. For example,\nto generate a feed from site https://www.jaraguadosul.sc.gov.br/noticias.php ,\ncollecting all links with the substring `/news/` in the URL, use:\n\n    newslinkrss -p '.+/news/.+' https://www.jaraguadosul.sc.gov.br/noticias.php\n\n\n### Following pages\n\nWe may need to get more information that the one available in the URL and\nanchor text. This can be done by using option `--follow` (shortcut `-f`) that\nwill make newslinkrss load the candidate target page and look for more data\nthere. By default, it automatically captures the title of the page as the\ntitle of the feed entry, page description as the item contents, and the page\npublishing and update dates and times as the item publish time (**if** this\ninformation is available in the page in some common formats, like\n[Open Graph](https://ogp.me/) or Twitter cards.\n\nWith this option, newslinkrss will follow at most `--max-links` in the order\nthey appear in the HTML, make an HTTP GET request, download data up to the\nlimit given by option `--max-page-length`, while waiting up to `--http-timeout`\nseconds to complete the process. Cookies will be remembered among these\nrequests, but they will only be kept in memory and forgotten once the program\nfinishes. To prevent excessive usage of memory and network resources, it is\nimportant to set a good filter pattern and choose the link and download limits\nwisely (the default values for these two are usually Ok, but edge cases may\nrequire some fine-tuning).\n\n\n### Generating complete feeds\n\nReuters [killed](https://news.ycombinator.com/item?id=23576022) its RSS feeds\nin mid 2020, but we can bring them back to life and right into our news\nreaders. Our criteria will be:\n\n- Find everything that appears as plain HTML on the front page:\n  https://www.reuters.com/ There is an infinite scroll and more links are added\n  periodically with Javascript, but we can just ignore this and load the page\n  more frequently, giving chance to capture them;\n\n- We want to be very selective with filtering so we only get the current news\n  and do not waste time downloading things like section listings, utility\n  pages, links for other domains, etc. By looking at the URLs of the news\n  pages, we can notice that all of them follow a pattern similar to:\n  https://www.reuters.com/world/europe/eu-proposes-create-solidarity-fund-ukraines-basic-needs-2022-03-18/\n  Notice they all are in domain \"https://www.reuters.com/\", have at least one\n  section (\"/world/europe/\") that is followed by part of the title and the\n  publish date. This format is really great, as it allows us to ignore\n  anything that does not look like a news article on the spot. So, a good\n  pattern will be `'https://www.reuters.com/.+/.+\\d{4}-\\d{2}-\\d{2}.+'`;\n\n- newslinkrss deduplicates URLs automatically, so we don't need to worry if we\n  end up capturing the same link twice;\n\n- Target pages have Open Graph meta tags, so we can `--follow` them and get\n  accurate publish dates and times with no extra effort. Better yet, as we know\n  that **all** news pages that we want have them, we can also instruct\n  newslinkrss to ignore any page without a valid date, preventing any non-news\n  article, captured by accident, from appearing in our feed. This is done with\n  option `--require-dates`;\n\n- As we are already following and downloading the links, there is no much\n  extra work to generate a full feed, i.e., one that includes the full text of\n  the page. Option `--with-body` will copy the entire contents of the \"body\"\n  element from the page into the feed, just removing a few obviously unwanted\n  tags (scripts, forms, etc.). Including the entire body works for every case,\n  but for this site we can filter a bit more and pick only actual text of the\n  news article, ignoring unwanted noise like menus, sidebars, links to other\n  news, etc. A quick \"inspect element\" shows that there is a single \"article\"\n  element in the pages and that it has the text we want; We can use a XPath\n  expression to select it with option `--body-xpath '//article'`. Again,\n  careful usage of options `--max-links` and `--max-page-length` is required,\n  as it is pretty easy to miss part of the text or generate some huge feeds\n  by accident.\n\nSo, the complete syntax is:\n\n    newslinkrss \\\n        --follow \\\n        -p 'https://www.reuters.com/.+/.+\\d{4}-\\d{2}-\\d{2}.+' \\\n        --max-page-length 64 \\\n        --with-body \\\n        --body-xpath '//article' \\\n        --require-dates \\\n        https://www.reuters.com/\n\n\n\n### Gathering more information\n\nA more complex example is where it is necessary not only to follow the target\nof candidate links but also stitch information from several sources (URL, link\ntext and destination contents) together. Assume we want to generate a feed from\nhttps://revistaquestaodeciencia.com.br/ , which provides no facilities for it.\nLooking into the site we find that:\n\n- URLs for news articles have a date on them (in format `YYYY/MM/DD`), so it\n  is possible to use this in the URL pattern (option `-p`) to limit which\n  links the script will look for. Some are prefixed by a section stub and all\n  are followed by a string generated from the title, so the regex must accept\n  the date anywhere in it. Anything could be a filter here, but as all\n  articles have a date on it we don't need to look anywhere else;\n\n- There is no standard, not even de-facto standard, representation for the\n  date an article was published, so the alternative is taking it from the URL\n  too. This is done with options `--date-from-url` (which requires regular\n  expression with a group capturing the substring that contains the date)\n  `--url-date-fmt` (which defines the format of the date);\n\n- Inconsistencies in the link formats prevent us from getting all articles\n  titles from the links in the front page, so the alternative is to\n  `--follow` every candidate link, downloading the target page and looking to\n  the title there. This must be done **very carefully**: we don't want to\n  abuse the website or get stuck downloading gigabytes of data, so we limit\n  the processing to the first 50 links matching the regex (with option\n  `--max-links`), only load the first 64 kB of data from the every followed\n  link (option `--max-page-length`), and stop processing a page after 2s\n  (option `--http-timeout`);\n\n- We also generate a complete feed, as in the previous example, but there is\n  no easy way to select a HTML element that has only the actual text of the\n  article, so we include the complete of element \"body\".\n\nThe resulting command line is:\n\n    newslinkrss -p '.+/\\d{4}/\\d{2}/\\d{2}/.+' \\\n        --date-from-url '.*/(\\d{4}/\\d{2}/\\d{2})/.*' \\\n        --url-date-fmt '%Y/%m/%d' \\\n        --follow \\\n        --with-body \\\n        --max-links 50 \\\n        --max-page-length 64 \\\n        --http-timeout 2 \\\n        'https://revistaquestaodeciencia.com.br/'\n\nTo make understanding easier, this example uses the long, verbose, form of\nsome options even when abbreviations are available. For the same reason, some\nof the options are set to the default values and are not strictly required\nbut they are listed anyway. See `newslinkrss --help` for details.\n\n\n### Using complex XPath expressions\n\nSometimes we need to fight really hard to get the date that a particular item\nwas last updated. Taking GitHub issues as an example: while GH provides Atom\nfeeds for releases and commits (but always to specific branches), there is\nno equivalent for issues and pull requests. Of course, there is an API for\nthat but it requires authentication with a GitHub account, enables tracking,\nand requires writing a specific bridge to get the data as a feed. This makes\nthe scraping approach easier even with the very convoluted example that\nfollows.\n\nThe URLs for issues and PRs are pretty usable, we can already use them to\nlimit how many issues will be shown, their status, filter by date, etc. Just\nlook at the one used in the example.\n\nHowever, we need to get the date of the last comment on the issue and set it\nas the publishing date of the item, otherwise the reader won't show us that\nit was updated. A solution is to follow every issue page while using a XPath\nexpression to find the last occurrence of a \"relative-time\" tag that GitHub\nuses to mark the timestamp of a comment and parse the absolute date from\nattribute \"datetime\". This is done with options `--date-from-xpath` and\n`--xpath-date-fmt`.\n\nThe resulting command line is the following:\n\n    newslinkrss \\\n        --follow \\\n        --with-body \\\n        --http-timeout 5 \\\n        --max-links 30 \\\n        --max-page-length 1024 \\\n        -p '^https://github.com/.+/issues/\\d+$' \\\n        --date-from-xpath '(//h3/a/relative-time)[last()]/@datetime' \\\n        --xpath-date-fmt '%Y-%m-%dT%H:%M:%SZ' \\\n        'https://github.com/lwindolf/liferea/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc'\n\nDebugging XPath expressions is not a very easy task, the simplest way is just\nopen the target page in Firefox, launch web developer tools and use the $x()\nhelper function to get what the expression will return, for example:\n`$x('(//h3/a/relative-time)[last()]/@datetime')`.\n\n\n\n### Error reporting, testing, and other small tricks\n\nBy default, newslinkrss writes exceptions and error messages to the feed\noutput itself. This is a very practical way to report errors to the user, as\nthis program is intended to work mostly on the background of the actual\nuser-facing application. It is possible to disable this behavior with option\n`--no-exception-feed` (shortcut `-E`).\n\nNotice that the program always return a non-zero status code on failures. Some\nnews readers (e.g. Liferea) won't process the output in these cases and discard\nthe feed entries with the error reports. You may need to override the status\ncode with something like `newslinkrss YOUR_OPTIONS; exit 0`.\n\nnewslinkrss has an option `--test` that will skip the feed generation step\nand just print the links and titles that were captured for a particular set\nof options to stdout. That's a simple way to check if a pattern is working\nas intended.\n\nOption `-o` allows writing the output to an file; it is no much different\nthan redirecting stdout, but will ensure that only valid XML with the right\nencoding is written.\n\nWriting output to files and error reporting on the feed itself allows for\nsome unusual but interesting use patterns: for example, it is trivial for a\ncompany, group, or development team to have an internal \"feed server\", where\nfeeds are centrally downloaded by a cron job, saved to a web server public\ndirectory and then transparently provided to the end users. A setup with\nAlpine and nginx running in a LXD container is surprisingly small.\n\n\n\n\n## Caveats\n\nBe very careful with escape characters! In the shell, it is recommended to\nuse single quotes for regexes, so \"\\\\\" is not escaped. This becomes more\nconfusing if your feed reader also use escape sequences but with different\nor conflicting rules (e.g. Newsboat uses \"\\\\\" as escapes but does not follow\nthe same rules used by bash). When in doubt, run the command in the shell or\nuse a wrapper script to test for any unusual behavior introduced by the\nprogram.\n\nSome feed readers run commands in a synchronous (blocking) mode and their\ninterface will get stuck until the command terminates. Liferea had this\nbehavior [until version 1.13.7](https://github.com/lwindolf/liferea/commit/b03af3b0f6a4e42b17dfa49782faa6c044055738),\nfor example. A typical workaround is to create a script with all calls to\nnewslinkrss that saves the generated feeds to files (see option `-o`),\nschedule this script to run from cron and configure Liferea to load the\nfeed from the files. This solves the frozen interface problem, but requires\nconfiguring feeds in two different places.\n\n\n\n# Bugs\n\nYes :-)\n\n\n\n# Contributing\n\nFor this project I started an experiment: I'm using [sourcehut](https://sr.ht/)\nas the primary repository for code and other tools, leaving the usual Github\nand Gitlab as non-advertised mirrors. Sourcehut does everything by the\nold-school way and most features just work without an user account. Check the\n[project page](https://sr.ht/~ittner/newslinkrss/) there to see how it works.\n\nIf this sounds too strange, just clone the repository with an\n`git clone https://git.sr.ht/~ittner/newslinkrss`, publish your fork somewhere\nand send an email with the branches to be merged to `~ittner/newslinkrss@lists.sr.ht`\n(that's correct: tildes and slashes are valid characters for email addresses).\n\nIf you change the code, please run in through pyflakes for static analysis and\n[black](https://pypi.org/project/black/) to ensure a consistent formatting.\n\n\n\n\n# License\n\nCopyright (C) 2020  Alexandre Erwin Ittner <alexandre@ittner.com.br>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n\n\n\n# Contact information\n\n- Author: Alexandre Erwin Ittner\n- Email: <alexandre@ittner.com.br>\n- Web: <https://www.ittner.com.br>\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://sr.ht/~ittner/newslinkrss/",
            "keywords": "",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newslinkrss",
            "package_url": "https://pypi.org/project/newslinkrss/",
            "platform": null,
            "project_url": "https://pypi.org/project/newslinkrss/",
            "project_urls": {
                "Homepage": "https://sr.ht/~ittner/newslinkrss/"
            },
            "release_url": "https://pypi.org/project/newslinkrss/0.6.0/",
            "requires_dist": [
                "PyRSS2Gen (>=1.1.0)",
                "lxml (>=4.6.3)",
                "python-dateutil (>=2.6.1)",
                "requests (>=2.18.4)"
            ],
            "requires_python": ">=3.6",
            "summary": "Generate RSS feeds from generic sites",
            "version": "0.6.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15201918,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3d2f2222c72903df613b83088ef53232",
                    "sha256": "02fe518d63e429ac3d2706a1db9d6ac40fcdb1626add0fa3cc8d32eed050af65"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.6.0-py3.8.egg",
                "has_sig": false,
                "md5_digest": "3d2f2222c72903df613b83088ef53232",
                "packagetype": "bdist_egg",
                "python_version": "0.6.0",
                "requires_python": ">=3.6",
                "size": 17536,
                "upload_time": "2022-09-25T01:12:53",
                "upload_time_iso_8601": "2022-09-25T01:12:53.152603Z",
                "url": "https://files.pythonhosted.org/packages/33/5b/c8092dcb0560d9b030ef2e1ab01a62ccfd9202a35a8de1daeed7619db40c/newslinkrss-0.6.0-py3.8.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8a0323e5f01c4db02fa5e8ba52a24743",
                    "sha256": "35025e94a00d53e090e732fd823604c3913ea78fdb61b662b53066bc9742ee2d"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.6.0-py3-none-any.whl",
                "has_sig": true,
                "md5_digest": "8a0323e5f01c4db02fa5e8ba52a24743",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 29877,
                "upload_time": "2022-09-25T01:05:19",
                "upload_time_iso_8601": "2022-09-25T01:05:19.799472Z",
                "url": "https://files.pythonhosted.org/packages/7e/f9/66a894dd85928b744f1f70109d3687a1277accbf848582573a6d87cabf28/newslinkrss-0.6.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "51ccf06ead7eae54d021e8c0f480ad03",
                    "sha256": "2e53f7042a9966efa83825eb7b0e501cfb2f76dd1cff55c8a0b339d905638adb"
                },
                "downloads": -1,
                "filename": "newslinkrss-0.6.0.tar.gz",
                "has_sig": false,
                "md5_digest": "51ccf06ead7eae54d021e8c0f480ad03",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 36715,
                "upload_time": "2022-09-25T01:10:07",
                "upload_time_iso_8601": "2022-09-25T01:10:07.774974Z",
                "url": "https://files.pythonhosted.org/packages/47/80/d505931e54f453f29eaa49af6167e6b8d1f6ecc9d421c19f09b539414696/newslinkrss-0.6.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}