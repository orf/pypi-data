{
    "1.0.0": {
        "info": {
            "author": "biao.xu",
            "author_email": "biao.xu@baodanyun-inc.com",
            "bugtrack_url": null,
            "classifiers": [
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7"
            ],
            "description": "# DOUBAO-ALIYUN-MQ-SDK\n\n\u8c46\u5305\u963f\u91cc\u4e91rocketMQ SDK\n\n## \u5b89\u88c5\n\n```bash\npip3 install doubao-aliyun-mq-sdk\n```\n\n\u6216\u8005\n\n```bash\npython3 setup.py install\n```\n\n## \u4f7f\u7528\n\n```python\nfrom doubao_aliyun_mq import Client as AliyunMQClient\n\n\naliyun_mq_client = AliyunMQClient(<http_endpoint>, <access_key>, <secret_key>)\n# \u83b7\u53d6\u6d88\u8d39\u8005\u5b9e\u4f8b\nconsumer = aliyun_mq_client.get_consumer(<instance_id>, <topic_name>, <group_id>)\n# \u83b7\u53d6\u751f\u4ea7\u8005\u5b9e\u4f8b\nproducer = aliyun_mq_client.get_producer(<instance_id>, <topic_name>)\n```\n\n### \u751f\u4ea7\u8005\uff08producer\uff09\n\n#### `producer.send`\n\n\u53d1\u9001\u6d88\u606f\n\n* `msg`: \u6d88\u606f\u5185\u5bb9\uff0c \u7c7b\u578bstr\n* `tag`: \u6d88\u606f\u6807\u7b7e\uff0c \u9ed8\u8ba4 ''\n* `properties`: \u5c5e\u6027\uff0c \u7c7b\u578bdict\uff0c \u9ed8\u8ba4 None\n* `start_deliver_time`: \u5b9a\u65f6\u6d88\u606f,\u6beb\u79d2\u7ea7\u7edd\u5bf9\u65f6\u95f4\uff0c\u9ed8\u8ba4 None\n\n#### `producer.send_json`\n\n\u53d1\u9001json\u683c\u5f0f\u7684\u6d88\u606f\n\n* `msg`: \u6d88\u606f\u5185\u5bb9(json)\uff0c \u7c7b\u578bdict\n* `tag`: \u6d88\u606f\u6807\u7b7e\uff0c \u9ed8\u8ba4 ''\n* `properties`: \u5c5e\u6027\uff0c \u7c7b\u578bdict\uff0c \u9ed8\u8ba4 None\n* `start_deliver_time`: \u5b9a\u65f6\u6d88\u606f,\u6beb\u79d2\u7ea7\u7edd\u5bf9\u65f6\u95f4\uff0c\u9ed8\u8ba4 None\n\n### \u6d88\u8d39\u8005\uff08consumer\uff09\n\n#### `consumer.receive`\n\n\u63a5\u6536\u6d88\u606f\n\n* `batch`: \u4e00\u6b21\u6700\u591a\u63a5\u6536\u6761\u6570(\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a16\u6761)\uff0c \u9ed8\u8ba4 1\n* `wait_seconds`: \u957f\u8f6e\u8be2\u65f6\u95f4\uff08\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a30\u79d2\uff09\uff0c \u9ed8\u8ba4 3\n\n#### `consumer.ack_message`\n\n\u786e\u8ba4\u6d88\u606f\n\n* `recv_msgs`: \u63a5\u6536\u5230\u7684\u6d88\u606f\u5217\u8868\uff0c \u7c7b\u578b list\n\n#### `consumer.consume`\n\n\u4f7f\u7528with\u8bed\u53e5\u5b9e\u73b0\u6d88\u8d39\u6d88\u606f\uff08\u63a5\u6536\u5e76\u786e\u8ba4\uff09\n\n* `batch`: \u4e00\u6b21\u6700\u591a\u63a5\u6536\u6761\u6570(\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a16\u6761)\uff0c \u9ed8\u8ba4 1\n* `wait_seconds`: \u957f\u8f6e\u8be2\u65f6\u95f4\uff08\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a30\u79d2\uff09\uff0c \u9ed8\u8ba4 3\n\n#### `consumer.consume_decorator`\n\n\u6d88\u8d39\u88c5\u9970\u5668\uff0c\u88ab\u88c5\u9970\u7684\u51fd\u6570\u7b2c\u4e00\u4e2a\u53c2\u6570\u8fd4\u56de\u63a5\u6536\u5230\u7684\u6d88\u606f\u6cea\u98d9\n\n* `batch`: \u4e00\u6b21\u6700\u591a\u63a5\u6536\u6761\u6570(\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a16\u6761)\uff0c \u9ed8\u8ba4 1\n* `wait_seconds`: \u957f\u8f6e\u8be2\u65f6\u95f4\uff08\u6700\u591a\u53ef\u8bbe\u7f6e\u4e3a30\u79d2\uff09\uff0c \u9ed8\u8ba4 3\n\n## \u793a\u4f8b\n\n```python\nfrom doubao_config import Client as ConfigClient\nimport time\nfrom doubao_aliyun_mq import Client as AliyunMQClient\n\n\n# \u914d\u5408doubao-config\u4f7f\u7528\nconfig_client = ConfigClient(<config_host>, <config_username>, <config_password>)\nconfig = config_client.get_config(<application>, <profile>)\n\naliyun_mq_client = AliyunMQClient(\n    config['base.comm.rocket-mq.onsAddr.digital.http'], config['base.rocket-mq.accessKeyId'],\n    config['base.rocket-mq.accessKeySecret'])\n\n# \u83b7\u53d6\u6d88\u8d39\u8005\u5b9e\u4f8b\nconsumer = aliyun_mq_client.get_consumer(config['base.comm.rocket-mq.digital.id'], <topic_name>, <group_id>)\n# \u83b7\u53d6\u751f\u4ea7\u8005\u5b9e\u4f8b\nproducer = aliyun_mq_client.get_producer(config['base.comm.rocket-mq.digital.id'], <topic_name>)\n\nsize = 10\n\n# \u53d1\u9001\u6d88\u606f\nfor i in range(size):\n    msg = 'test %d' % i\n    producer.send(msg)\n    print('send:', msg)\n\n# \u63a5\u6536\u6d88\u606f\nmsgs = consumer.receive(batch=size)\nif msgs:\n    for msg in msgs:\n        print('receive:', msg.message_id, msg.message_body, msg.message_tag)\n\n# \u786e\u8ba4\u6d88\u606f\u6d88\u8d39\u6210\u529f\nconsumer.ack_message(msgs)\nprint('ack message:', msgs)\n\n# \u53d1\u9001\u6d88\u606f\uff08json\uff09\nfor i in range(size):\n    msg = {'test': 1}\n    producer.send_json(msg)\n    print('send:', {'test': 1})\n\n# \u6d88\u8d39\u6d88\u606f\uff08\u63a5\u6536\u6d88\u606f\u5e76\u786e\u8ba4\uff09\nfor i in range(size):\n    with consumer.consume() as msgs:\n        if msgs:\n            for msg in msgs:\n                print('consume:', msg.message_id, msg.message_body, msg.message_tag)\n\n# \u53d1\u9001\u6d88\u606f\uff08json\uff09\u5e26\u6807\u7b7e\nfor i in range(size):\n    msg = {'test': 1}\n    producer.send_json(msg, tag='ttt')\n    print('send:', {'test': 1})\n\n\n# \u6d88\u8d39\u6d88\u606f\uff08\u88c5\u9970\u5668\uff09\n@consumer.consume_decorator(batch=10)\ndef test_func(msgs, *args, **kwargs):\n    print('decorator consume:', msgs)\n    for msg in msgs:\n        print('--- message_id', msg.message_id)\n        print('--- message_tag', msg.message_tag)\n        print('--- message_body', msg.message_body)\n        print('--- publish_time', msg.publish_time)\n        print('--- consumed_times', msg.consumed_times)\n        print('--- next_consume_time', msg.next_consume_time)\n\nfor i in range(size):\n    test_func()\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "doubao-aliyun-mq-sdk",
            "package_url": "https://pypi.org/project/doubao-aliyun-mq-sdk/",
            "platform": "",
            "project_url": "https://pypi.org/project/doubao-aliyun-mq-sdk/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/doubao-aliyun-mq-sdk/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.5",
            "summary": "Doubao Aliyun RocketMQ Python SDK",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7340952,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "956befec9bd365d67b500f57f0d1512c",
                    "sha256": "70268da175a9f30409c61c7d51576e17ed69f2efcf4800124aa9611f1e075a23"
                },
                "downloads": -1,
                "filename": "doubao-aliyun-mq-sdk-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "956befec9bd365d67b500f57f0d1512c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.5",
                "size": 3942,
                "upload_time": "2020-05-28T03:10:39",
                "upload_time_iso_8601": "2020-05-28T03:10:39.165911Z",
                "url": "https://files.pythonhosted.org/packages/46/4d/62bbda0fbcc3dfc0201cade4596d2ce58a1d91f64d6ae2623f876d256456/doubao-aliyun-mq-sdk-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}