{
    "1.0.0": {
        "info": {
            "author": "TravelTime",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/traveltime-dev/traveltime-python-sdk",
            "keywords": "traveltime,api,maps",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "traveltimepy",
            "package_url": "https://pypi.org/project/traveltimepy/",
            "platform": null,
            "project_url": "https://pypi.org/project/traveltimepy/",
            "project_urls": {
                "Homepage": "https://github.com/traveltime-dev/traveltime-python-sdk"
            },
            "release_url": "https://pypi.org/project/traveltimepy/1.0.0/",
            "requires_dist": [
                "requests",
                "certifi (>=2021.5.30)"
            ],
            "requires_python": "",
            "summary": "Python Interface to Travel Time",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15942750,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5c413eaacd0f9ccd533588281df3dbce",
                    "sha256": "2c7d5a0018c82be6543f5c0e34e0c06fc4525ea64294c50da562e1a2ec3cf8a7"
                },
                "downloads": -1,
                "filename": "traveltimepy-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5c413eaacd0f9ccd533588281df3dbce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7258,
                "upload_time": "2022-09-20T12:42:44",
                "upload_time_iso_8601": "2022-09-20T12:42:44.573750Z",
                "url": "https://files.pythonhosted.org/packages/04/40/1b2c43775e139722386fca4fe3a14e7da968c772ab177ba4c35a372df7f6/traveltimepy-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3192123fbee33e2cfe10d2ed2361bfa3",
                    "sha256": "0aeda5f8b1bb5eced92d440920280a0b6338e6ca2d3a6ad35b79c63db0249db8"
                },
                "downloads": -1,
                "filename": "traveltimepy-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "3192123fbee33e2cfe10d2ed2361bfa3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7855,
                "upload_time": "2022-09-20T12:42:46",
                "upload_time_iso_8601": "2022-09-20T12:42:46.711452Z",
                "url": "https://files.pythonhosted.org/packages/71/22/ecab5fba01e401e341fa2a86951df5bcdb8aee8aab16960ce06131ef1a78/traveltimepy-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0b1": {
        "info": {
            "author": "TravelTime",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# traveltimePY: Travel Time Python SDK\n\ntraveltimePY is a Python SDK for Travel Time API (https://traveltime.com/).  \nTravel Time API helps users find locations by journey time rather than using \u2018as the crow flies\u2019 distance.  \nTime-based searching gives users more opportunities for personalisation and delivers a more relevant search.\n\nDependencies:\n\n* requests\n\n## Installation\n\n```python\n    pip install traveltimepy\n```\n\n## Usage\n\n### Authentication\nIn order to authenticate with Travel Time API, you will have to supply the Application Id and Api Key. \n\n```python\n    import traveltimepy as ttpy\n    import os\n    from datetime import datetime #for examples\n    #store your credentials in an environment variable\n    os.environ[\"TRAVELTIME_ID\"] = 'YOUR_API_ID'\n    os.environ[\"TRAVELTIME_KEY\"] = 'YOUR_API_KEY'\n```\n\n### [Isochrones (Time Map)](https://traveltime.com/docs/api/reference/isochrones)\nGiven origin coordinates, find shapes of zones reachable within corresponding travel time.\n\n```python\n    departure_search1 = {\n        'id': \"public transport from Trafalgar Square\",\n        'departure_time':  datetime.utcnow().isoformat(),\n        'travel_time': 900,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': ['is_only_walking']\n    }\n    departure_search2 = {\n        'id': \"driving from Trafalgar Square\",\n        'departure_time':  datetime.utcnow().isoformat(),\n        'travel_time': 900,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"driving\"}\n    }\n    arrival_search = {\n        'id': \"public transport to Trafalgar Square\",\n        'arrival_time':  datetime.utcnow().isoformat(),\n        'travel_time': 900,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'range': {'enabled': True, 'width': 3600}\n    }\n    union = {\n        'id': \"union of driving and public transport\",\n        'search_ids': ['driving from Trafalgar Square', 'public transport from Trafalgar Square']\n    }\n    intersection = {\n        'id': \"intersection of driving and public transport\",\n        'search_ids': ['driving from Trafalgar Square', 'public transport from Trafalgar Square']\n    }\n    out = ttpy.time_map(departure_searches=[departure_search1, departure_search2],\n                            arrival_searches=arrival_search, unions=union, intersections=intersection)\n```\n\n### [Distance Matrix (Time Filter)](https://traveltime.com/docs/api/reference/distance-matrix)\nGiven origin and destination points filter out points that cannot be reached within specified time limit.\n\n```python\n    locations = [\n        {\"id\": \"London center\", \"coords\": {\"lat\": 51.508930, \"lng\": -0.131387}},\n        {\"id\": \"Hyde Park\", \"coords\": {\"lat\": 51.508824, \"lng\": -0.167093}},\n        {\"id\": \"ZSL London Zoo\", \"coords\": {\"lat\": 51.536067, \"lng\": -0.153596}}\n    ]\n\n    departure_search = {\n        \"id\": \"forward search example\",\n        \"departure_location_id\": \"London center\",\n        \"arrival_location_ids\": [\"Hyde Park\", \"ZSL London Zoo\"],\n        \"transportation\": {\"type\": \"bus\"},\n        \"departure_time\":  datetime.utcnow().isoformat(),\n        \"travel_time\": 1800,\n        \"properties\": [\"travel_time\"],\n        \"range\": {\"enabled\": True, \"max_results\": 3, \"width\": 600}\n    }\n\n    arrival_search = {\n        \"id\": \"backward search example\",\n        \"departure_location_ids\": [\"Hyde Park\", \"ZSL London Zoo\"],\n        \"arrival_location_id\": \"London center\",\n        \"transportation\": {\"type\": \"public_transport\"},\n        \"arrival_time\":  datetime.utcnow().isoformat(),\n        \"travel_time\": 1900,\n        \"properties\": [\"travel_time\", \"distance\", \"distance_breakdown\", \"fares\"]\n    }\n\n    out = ttpy.time_filter(\n        locations=locations, departure_searches=departure_search, arrival_searches=arrival_search)\n```\n\n### [Routes](https://traveltime.com/docs/api/reference/routes)\nReturns routing information between source and destinations.\n\n```python\n    locations = [\n        {\"id\": \"London center\", \"coords\": {\"lat\": 51.508930, \"lng\": -0.131387}},\n        {\"id\": \"Hyde Park\", \"coords\": {\"lat\": 51.508824, \"lng\": -0.167093}},\n        {\"id\": \"ZSL London Zoo\", \"coords\": {\"lat\": 51.536067, \"lng\": -0.153596}}\n    ]\n\n    departure_search = {\n        \"id\": \"departure search example\",\n        \"departure_location_id\": \"London center\",\n        \"arrival_location_ids\": [\"Hyde Park\", \"ZSL London Zoo\"],\n        \"transportation\": {\"type\": \"driving\"},\n        \"departure_time\":  datetime.utcnow().isoformat(),\n        \"properties\": [\"travel_time\", \"distance\", \"route\"]\n    }\n\n    arrival_search = {\n        \"id\": \"arrival  search example\",\n        \"departure_location_ids\": [\"Hyde Park\", \"ZSL London Zoo\"],\n        \"arrival_location_id\": \"London center\",\n        \"transportation\": {\"type\": \"public_transport\"},\n        \"arrival_time\":  datetime.utcnow().isoformat(),\n        \"properties\": [\"travel_time\", \"distance\", \"route\", \"fares\"],\n        \"range\": {\"enabled\": True, \"max_results\": 1, \"width\": 1800}\n    }\n\n    out = ttpy.routes(\n        locations=locations, departure_searches=departure_search, arrival_searches=arrival_search)\n```\n\n### [Time Filter (Fast)](https://traveltime.com/docs/api/reference/time-filter-fast)\nA very fast version of ``time_filter()``\n\n```python\n    locations = [\n        {\"id\": \"London center\", \"coords\": {\"lat\": 51.508930, \"lng\": -0.131387}},\n        {\"id\": \"Hyde Park\", \"coords\": {\"lat\": 51.508824, \"lng\": -0.167093}},\n        {\"id\": \"ZSL London Zoo\", \"coords\": {\"lat\": 51.536067, \"lng\": -0.153596}}\n    ]\n\n    arrival_many_to_one = {\n    \"id\": \"arrive-at many-to-one search example\",\n    \"departure_location_ids\": [\"Hyde Park\",\"ZSL London Zoo\"],\n    \"arrival_location_id\": \"London center\",\n    \"transportation\": {\"type\": \"public_transport\"},\n    \"arrival_time_period\": \"weekday_morning\",\n    \"travel_time\": 1900,\n    \"properties\": [\"travel_time\",\"fares\"]\n    }\n    arrival_one_to_many = {\n    \"id\": \"arrive-at one-to-many search example\",\n    \"arrival_location_ids\": [\"Hyde Park\",\"ZSL London Zoo\"],\n    \"departure_location_id\": \"London center\",\n    \"transportation\": {\"type\": \"public_transport\"},\n    \"arrival_time_period\": \"weekday_morning\",\n    \"travel_time\": 1900,\n    \"properties\": [\"travel_time\",\"fares\"]\n    }\n\n    out = ttpy.time_filter_fast(\n        locations=locations, arrival_many_to_one=arrival_many_to_one, arrival_one_to_many=arrival_one_to_many)\n```\n\n### [Time Filter (Postcode Districts)](https://traveltime.com/docs/api/reference/postcode-district-filter)\nFind reachable postcodes from origin (or to destination) and get statistics about such postcodes.\n\n```python\n    departure_search = {\n        'id': \"public transport from Trafalgar Square\",\n        'departure_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"coverage\", \"travel_time_reachable\", \"travel_time_all\"],\n        \"reachable_postcodes_threshold\": 0.1\n    }\n    arrival_search = {\n        'id': \"public transport to Trafalgar Square\",\n        'arrival_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"coverage\", \"travel_time_reachable\", \"travel_time_all\"],\n        \"reachable_postcodes_threshold\": 0.1\n    }\n    out = ttpy.time_filter_postcode_districts(departure_searches=departure_search, arrival_searches=arrival_search)\n```\n\n### [Time Filter (Postcode Sectors)](https://traveltime.com/docs/api/reference/postcode-sector-filter)\nFind sectors that have a certain coverage from origin (or to destination) and get statistics about postcodes within such sectors.\n\n```python\n    departure_search = {\n        'id': \"public transport from Trafalgar Square\",\n        'departure_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"coverage\", \"travel_time_reachable\", \"travel_time_all\"],\n        \"reachable_postcodes_threshold\": 0.1\n    }\n    arrival_search = {\n        'id': \"public transport to Trafalgar Square\",\n        'arrival_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"coverage\", \"travel_time_reachable\", \"travel_time_all\"],\n        \"reachable_postcodes_threshold\": 0.1\n    }\n    out = ttpy.time_filter_postcode_sectors(departure_searches=departure_search, arrival_searches=arrival_search)\n```\n\n### [Time Filter (Postcodes)](https://traveltime.com/docs/api/reference/postcode-search)\nFind reachable postcodes from origin (or to destination) and get statistics about such postcodes.\n\n```python\n    departure_search = {\n        'id': \"public transport from Trafalgar Square\",\n        'departure_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"travel_time\", \"distance\"]\n    }\n    arrival_search = {\n        'id': \"public transport to Trafalgar Square\",\n        'arrival_time':  datetime.utcnow().isoformat(),\n        'travel_time': 1800,\n        'coords': {'lat': 51.507609, 'lng': -0.128315},\n        'transportation': {'type': \"public_transport\"},\n        'properties': [\"travel_time\", \"distance\"]\n    }\n    out = ttpy.time_filter_postcodes(departure_searches=departure_search, arrival_searches=arrival_search)\n```\n\n### [Geocoding (Search)](https://traveltime.com/docs/api/reference/geocoding-search) and [Reverse Geocoding](https://traveltime.com/docs/api/reference/geocoding-reverse)\nMatch a query string to geographic coordinates or match a latitude, longitude pair to an address.\n\n```python\n    out1 = ttpy.geocoding('Parliament square')\n    out2 = ttpy.geocoding_reverse(lat=51.507281, lng=-0.132120)\n```\n\n### [Map Info](https://traveltime.com/docs/api/reference/map-info) and [Supported Locations](https://traveltime.com/docs/api/reference/supported-locations)\nGet information about currently supported countries and find out what points are supported by the api.\n\n```python\n    out1 = ttpy.map_info()\n    locations = [\n        {\"id\": \"Kaunas\", \"coords\": {\"lat\": 54.900008, \"lng\": 23.957734}},\n        {\"id\": \"London\", \"coords\": {\"lat\": 51.506756, \"lng\": -0.128050}},\n        {\"id\": \"Bangkok\", \"coords\": {\"lat\": 13.761866, \"lng\": 100.544818}},\n        {\"id\": \"Lisbon\", \"coords\": {\"lat\": 38.721869, \"lng\": -9.138549}}\n    ]\n    out2 = ttpy.supported_locations(locations=locations)\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/traveltime-dev/traveltime-python-sdk",
            "keywords": "traveltime,api,maps",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "traveltimepy",
            "package_url": "https://pypi.org/project/traveltimepy/",
            "platform": null,
            "project_url": "https://pypi.org/project/traveltimepy/",
            "project_urls": {
                "Homepage": "https://github.com/traveltime-dev/traveltime-python-sdk"
            },
            "release_url": "https://pypi.org/project/traveltimepy/1.0.0b1/",
            "requires_dist": [
                "requests",
                "certifi (>=2021.5.30)"
            ],
            "requires_python": "",
            "summary": "Python Interface to Travel Time",
            "version": "1.0.0b1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15942750,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "88be0a58f65c388f2400919d1e028dc8",
                    "sha256": "b540606e6b44790db3bbaf48dced0058ee2e54bf4024696644e3b66d1d5e8055"
                },
                "downloads": -1,
                "filename": "traveltimepy-1.0.0b1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "88be0a58f65c388f2400919d1e028dc8",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7281,
                "upload_time": "2022-09-20T12:22:54",
                "upload_time_iso_8601": "2022-09-20T12:22:54.547771Z",
                "url": "https://files.pythonhosted.org/packages/24/a5/5252ab46f5008a2c66873d5111bd21f5a8655400c9fcfc8f31639ecb397d/traveltimepy-1.0.0b1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "422b686446200e3ab5706afd4dce333b",
                    "sha256": "b2dcbaf87dfbcced3d67946cfa3739a1ee1bd6672f2c0f869d1c1ab1e6b906d6"
                },
                "downloads": -1,
                "filename": "traveltimepy-1.0.0b1.tar.gz",
                "has_sig": false,
                "md5_digest": "422b686446200e3ab5706afd4dce333b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7859,
                "upload_time": "2022-09-20T12:22:57",
                "upload_time_iso_8601": "2022-09-20T12:22:57.714707Z",
                "url": "https://files.pythonhosted.org/packages/e3/cd/098fd3421118e0294ee2e425541f0f0941946e5ac450c7405360b9ae689e/traveltimepy-1.0.0b1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}