{
    "0.1.0": {
        "info": {
            "author": "Alexandre G.-Raymond",
            "author_email": "alex@ndre.gr",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: End Users/Desktop",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Topic :: Multimedia :: Sound/Audio"
            ],
            "description": "Shabda\n======\n\n![Shabda logo](assets/logo.png)\n\n\nShabda is a tool to fetch random samples from https://freesound.org/ based on given words, for use in impro sessions on instruments such as Tidal Cycles and Estuary.\n\n[Shabda](https://en.wikipedia.org/wiki/Shabda) is the Sanskrit word for \"speech sound\". In Sanskrit grammar, the term refers to an utterance in the sense of linguistic performance. \n\nInstall\n-------\n\n- Install Python 3: https://www.python.org/\n- Install pip: https://pypi.org/project/pip/\n- Install pipenv: `pip install pipenv`\n- Install dependencies: `pipenv install`\n- Install ffmpeg: https://ffmpeg.org/ (e.g. Debian/Ubuntu: `apt install ffmpeg`)\n\nUse (command line)\n------------------\n\nIn order to download a sample pack, execute in the terminal `pipenv run python shabda_cli.py <definition> --licenses <license_name>`.\n\nAny word can be a pack definition. If you want more than one sample, separate words by a comma: `blue,red`\n\nYou can define how many variations of a sample to assemble by adding a colon and a number.\ne.g. `blue,red:3,yellow:2` will produce one 'blue' sample, three 'red' samples and two 'yellow' sample.\n\nThe optional `--licenses` parameter allows to fetch only samples that have the specified license. Multiple licenses can be allowed by repeating the `--licenses` argument. Possible licenses are `cc0` (Creative Commons Zero), `by` (Creative Commons Attribution), and `by-nc` (Creative Commons Attribution Non-Commercial).\n\nFull example:\n```\npipenv run python shabda_cli.py spaghetti:2,monster:4 --licenses cc0 --licenses by\n```\n\nUse (web application)\n---------------------\n\nLaunch the web application:\n\nIn debug mode:\n```\nFLASK_APP=shabda FLASK_DEBUG=1 pipenv run flask run\n```\nIn production:\n```\npipenv run gunicorn --workers=4 \"shabda:create_app()\" -b localhost:8000\n```\n\nTest\n----\n\n```\npipenv run pytest\n```\n\nNotes\n-----\n\nWith Estuary, Shabda makes use of this feature: https://github.com/dktr0/estuary/wiki#adding-sound-files-to-estuarywebdirt-on-the-fly\n\nTo do\n-----\n\n- Move all this to github issues or project :)\n- Explain how to launch on codespace / how to make port public\n- Change allowed duration in definition ?\n- List API and view\n- Solidify: Retry, Queue workers, queue status?\n  - https://huey.readthedocs.io/en/latest/index.html\n  - https://github.com/litements/litequeue\n  - (but with those there is no way to know a queue's status?)\n- Explain risks about throttling: https://freesound.org/docs/api/overview.html\n- Allow to rename sample ?\n  - Allow emojis in sample name ?\n  - Allow spaces in sample name ? special unicode spaces ? Reverse ?\n- Record your voice\n- Extract percussive ?\n  - https://librosa.org/doc/latest/generated/librosa.effects.hpss.html\n- Use advanced search in a funky way: https://freesound.org/docs/api/analysis_docs.html#analysis-docs\n- Fix refresh token method. Refresh regularly ?\n- Enforce all alpha minuscules and numbers in pack definition\n- Generate speech ;\n    - via external cli ? https://linuxhint.com/command-line-text-speech-apps-linux/\n    - via python lib ? https://pypi.org/project/pyttsx3/\n    - via TTS API? https://rapidapi.com/collection/best-text-to-speech-apis\n- Delete old samples (e.g. 7 days after last usage, note usage date)\n- Autorun pylint\n- Autorun pytest\n- Better cli interface (pack definition, licenses) \n- pip module\n  - Separate web/cli/core\n  - Finish migration from pipenv to Poetry\n  - Store freesound token in a predictable directory\n  - Store samples in a predictable directory (configurable)",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://shabda.ndre.gr/",
            "keywords": "music,livecoding,tidalcycles",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "shabda",
            "package_url": "https://pypi.org/project/shabda/",
            "platform": null,
            "project_url": "https://pypi.org/project/shabda/",
            "project_urls": {
                "Bug Tracker": "https://github.com/ilesinge/shabda/issues",
                "Homepage": "https://shabda.ndre.gr/",
                "Repository": "https://github.com/ilesinge/shabda"
            },
            "release_url": "https://pypi.org/project/shabda/0.1.0/",
            "requires_dist": [
                "freesound-api",
                "pydub",
                "termcolor",
                "requests",
                "flask[async]",
                "gunicorn",
                "typer[all]",
                "google-cloud-texttospeech"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "A semantic audio samples curator for livecoding software",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15978864,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "85f8da4a953b563a627d09e3d92c6bc1",
                    "sha256": "bc8eb99e1eb763c27eafddc4e87cafb74992df734147f1430d1a53b1661aa85c"
                },
                "downloads": -1,
                "filename": "shabda-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "85f8da4a953b563a627d09e3d92c6bc1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 18529,
                "upload_time": "2022-12-03T14:00:33",
                "upload_time_iso_8601": "2022-12-03T14:00:33.468060Z",
                "url": "https://files.pythonhosted.org/packages/72/37/9c79ef4c8115d85037d51223cf2d33a3c898c8a6a879de90b4551e8e8e46/shabda-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f13b5d8c1594fd1d195dacbeb7aec729",
                    "sha256": "07af8bf91cb6749a4df818228a0ec4c17b7a42ab8fd3b5c8c6d1d741eb1afa5f"
                },
                "downloads": -1,
                "filename": "shabda-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f13b5d8c1594fd1d195dacbeb7aec729",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 18713,
                "upload_time": "2022-12-03T14:00:35",
                "upload_time_iso_8601": "2022-12-03T14:00:35.158055Z",
                "url": "https://files.pythonhosted.org/packages/01/b8/d7e66a589b8634a98a4451395a27b953575a93002c6d05e3a48a1ab0a327/shabda-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}