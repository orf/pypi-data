{
    "0.2.3": {
        "info": {
            "author": "Tim Kreuzer",
            "author_email": "t.kreuzer@fz-juelich.de",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "Jupyter slurm provisioner\n=========================\n\nInstallation\n------------\n\n``pip install slurm-provisioner``\n\nOverview\n--------\n\nThe slurm provisioner is a subclass of\n```jupyter_client.KernelProvisionerBase`` <https://github.com/jupyter/jupyter_client/blob/v7.4.2/jupyter_client/provisioning/provisioner_base.py#L24>`__.\nIts area of use is any slurm-based HPC system. However, it was written\nto be used within the Juelich Supercomputing Centre, which uses a script\ncalled ``jutil`` to create a user-specific environment based on a\nproject. You may have to update ``scripts/slurmel_allocate`` to use it\non any other HPC system. It allows users to start their jupyter kernel\non any partition, while their notebook server is running on an\ninteractive login node. This offers a separation between code execution\nand user interface. The slurm provisioner will not use its ipykernel\nargv configuration but is meant to be a wrapper for any existing kernel.\nIt is recommended to use this kernel with the option\n```--KernelRestarter.restart_limit=0`` <https://github.com/jupyter/jupyter_client/blob/v7.4.2/jupyter_client/restarter.py#L43>`__\nto avoid unsought compute time and costs.\n\nConfiguration\n-------------\n\nConfigure a kernel.json file in your ``$HOME``. It is not recommended to\ndefine the kernel globally, since the configuration is user-specific.\n\nOptions\n~~~~~~~\n\n-  project [required]: Used for correct budgeting of compute time.\n-  partition [required]: specify the slurm partition\n-  nodes [required]: specify the number of nodes\n-  runtime [required]: specify the runtime in minutes\n-  kernel_argv [required]: copy & paste this from the kernel you want to\n   run\n-  gpus [optional]: specify the number of GPUs, if the partition\n   supports GPUs\n-  reservation [optional]: specify the slurm reservation, if you have\n   one\n-  jobid [optional]: specify a pre-existing slurm allocation and start\n   your kernel there. Without this, a new allocation for each kernel\n   will be created.\n-  node [optional]: specify a node in your pre-existing allocation\n\nExample ``kernel.json``\n~~~~~~~~~~~~~~~~~~~~~~~\n\n``.local/share/jupyter/kernels/slurmel/kernel.json``\n\n::\n\n   {\n       \"display_name\": \"Slurm Kernel\",\n       \"language\": \"python\",\n       \"metadata\": {\n           \"debugger\": true,\n           \"kernel_provisioner\": {\n               \"config\": {\n                   \"gpus\": \"0\",\n                   \"nodes\": \"2\",\n                   \"partition\": \"batch\",\n                   \"project\": \"...\",\n                   \"reservation\": \"None\",\n                   \"runtime\": 30,\n                   \"jobid\": \"None\",\n                   \"node\": \"None\",\n                   \"kernel_argv\": [\n                       \"~/.local/share/jupyter/kernels/my_kernel/kernel.sh\",\n                       \"-f\",\n                       \"{connection_file}\"\n                   ]\n               },\n               \"provisioner_name\": \"slurm-provisioner\"\n           }\n       }\n   }\n\nRestart behavior\n----------------\n\nWhenever you stop the last kernel on an existing slurm allocation, this\nallocation will be relinquished. This is also the case if you \u201crestart\u201d\nthe last/only kernel on this allocation.\n\nTo avoid an unwanted lost of an allocation, you might want to start a\nsecond kernel on your allocation, using the ``jobid`` configuration.\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/FZJ-JSC/jupyter-slurm-provisioner",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jupyter-slurm-provisioner",
            "package_url": "https://pypi.org/project/jupyter-slurm-provisioner/",
            "platform": null,
            "project_url": "https://pypi.org/project/jupyter-slurm-provisioner/",
            "project_urls": {
                "Homepage": "https://github.com/FZJ-JSC/jupyter-slurm-provisioner"
            },
            "release_url": "https://pypi.org/project/jupyter-slurm-provisioner/0.2.3/",
            "requires_dist": [
                "jupyter-client (>=7.1.2)"
            ],
            "requires_python": "",
            "summary": "Jupyter slurm kernel provisioner",
            "version": "0.2.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15763943,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5461d76ab72da7185629ac89c3b9bf6",
                    "sha256": "8503f20ad8924d10677ddb03a6a5e4dd57d86635c589e933dd1f1e02f12df01d"
                },
                "downloads": -1,
                "filename": "jupyter_slurm_provisioner-0.2.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d5461d76ab72da7185629ac89c3b9bf6",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11659,
                "upload_time": "2022-11-14T15:41:30",
                "upload_time_iso_8601": "2022-11-14T15:41:30.818159Z",
                "url": "https://files.pythonhosted.org/packages/bf/dc/218f926a5911f2461c6bae1e8bd0b9d33d114f884a1bc3545d331567c469/jupyter_slurm_provisioner-0.2.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a46ac0c7d02eeb958c1e692ea9e4e45d",
                    "sha256": "5a195eac2b3f9d510e50042025e59ea40883e09ccf35938949b9993ae7dbbf69"
                },
                "downloads": -1,
                "filename": "jupyter-slurm-provisioner-0.2.3.tar.gz",
                "has_sig": false,
                "md5_digest": "a46ac0c7d02eeb958c1e692ea9e4e45d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9365,
                "upload_time": "2022-11-14T15:41:32",
                "upload_time_iso_8601": "2022-11-14T15:41:32.631592Z",
                "url": "https://files.pythonhosted.org/packages/f0/71/040ed51d2c7280135b6cb6dbc975f7c7035f79cf0b7c35444760266fd80d/jupyter-slurm-provisioner-0.2.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}