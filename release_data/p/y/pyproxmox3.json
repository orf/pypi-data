{
    "1.0.0-2": {
        "info": {
            "author": "Boris Tassou",
            "author_email": "boris.tassou@securmail.fr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gizmo15/pyproxmox3",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyproxmox3",
            "package_url": "https://pypi.org/project/pyproxmox3/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyproxmox3/",
            "project_urls": {
                "Bug Tracker": "https://github.com/gizmo15/pyproxmox3/issues",
                "Homepage": "https://github.com/gizmo15/pyproxmox3"
            },
            "release_url": "https://pypi.org/project/pyproxmox3/1.0.0-2/",
            "requires_dist": [
                "requests"
            ],
            "requires_python": ">=3",
            "summary": "Handle proxmox operations via api",
            "version": "1.0.0-2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11917919,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "22bd877be723e3ab5918be64d3e955ba",
                    "sha256": "7ccb68360cba35837b91b5c0100853c73af425bb93293e29bb6a3ba263d4f033"
                },
                "downloads": -1,
                "filename": "pyproxmox3-1.0.0-2.tar.gz",
                "has_sig": false,
                "md5_digest": "22bd877be723e3ab5918be64d3e955ba",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 23374,
                "upload_time": "2021-07-13T22:00:40",
                "upload_time_iso_8601": "2021-07-13T22:00:40.862313Z",
                "url": "https://files.pythonhosted.org/packages/35/18/34229fd8f62b977deabb9ae52a6a835683661c80615711d5888bea02b314/pyproxmox3-1.0.0-2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b28cec98498b321e18e3cd8b2fea597d",
                    "sha256": "932165d1264156396912d9c14755f8c7b7416fde33cd10f667e96cc4b8ebe548"
                },
                "downloads": -1,
                "filename": "pyproxmox3-1.0.0.post2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b28cec98498b321e18e3cd8b2fea597d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 21281,
                "upload_time": "2021-07-13T22:00:39",
                "upload_time_iso_8601": "2021-07-13T22:00:39.435162Z",
                "url": "https://files.pythonhosted.org/packages/ef/7c/8830497838ae45db7e0957281da845711a9cb85aa615de7e7a2fa6d45463/pyproxmox3-1.0.0.post2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0-3": {
        "info": {
            "author": "Boris Tassou",
            "author_email": "boris.tassou@securmail.fr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "pyproxmox\n=========\n\nUpdate to py3 and Proxmox 6 from https//github.com/Daemonthread/pyproxmox\n## A Python wrapper for the Proxmox 6.x API\n\n### Installation and dependency\n    \n    pip install pyproxmox3 requests\n\n###### Example usage\n\n1. Import everything from the module\n\n\t\tfrom pyproxmox3 import ProxAuth, PyProxmox\n\n2. Create an instance of the prox_auth class by passing in the\nurl or ip of a server in the cluster, username and password\n\n\t\tINIT_AUTHENT = ProxAuth('vnode01.example.org', 'apiuser@pve', 'examplePassword')\n\nATTENTION! The realm can change : @pve or @pam, it depends on your configuration.\n\n3. Create and instance of the pyproxmox class using the auth object as a parameter\n\n\t\tPROXMOX_EXEC = PyProxmox(INIT_AUTHENT)\n\n4. Run the pre defined methods of the pyproxmox class\n\n\t\tSTATUS = PROXPROXMOX_EXEC_EXEC.get_cluster_status()\n\nNOTE They all return data in JSON format.\n \n#### Methods requiring post_data\n\nThese methods need to passed a correctly formatted dictionary.\nfor example, if I was to use the createOpenvzContainer for the above example node\nI would need to pass the post_data with all the required variables for proxmox.\n\n\nExample for lxc :\n\n\tPOST_DATA = {'ostemplate':'local:vztmpl/debian-10-standard_10.7-1_amd64.tar.gz',\n\t\t\t\t'vmid':'901','cores':'2','description':'test container',\n\t\t\t\t'rootfs':'10','hostname':'test.example.org','memory':'1024',\n\t\t\t\t'password':'testPassword','swap':'1024', 'ostype':'debian',\n\t\t\t\t'storage':'Stockage1'}\n\t\n\tPROXMOX_EXEC.create_openvz_container('vnode01', POST_DATA)\n\nExample for kvm :\n\n\tPOST_DATA = {'vmid':'9001', 'cores':'4', 'sockets': 1, 'description':'test kvm',\n\t\t\t\t'name':'test.example.org', 'memory':'1024', 'scsi0': 'Stockage1:102/vm-102-disk-0.qcow2,size=32G',\n\t\t\t\t'scsihw': 'virtio-scsi-pci', 'net0': 'virtio,bridge=vmbr1',\n\t\t\t\t'ide0': 'local:iso/fbsd-122-custom.iso,media=cdrom','ostype':'l26'}\n\t\n\tPROXMOX_EXEC.create_virtual_machine('vnode01', POST_DATA)\n\nFor more information on the accepted variables please see http//pve.proxmox.com/pve2-api-doc/\n\n### Current List of Methods\n\n#### GET Methods\n\n##### Cluster Methods\n\t\tget_cluster_status()\n\"Get cluster status information. Returns JSON\"\n\n\t\tget_cluster_backup_schedule()\n\"List vzdump backup schedule. Returns JSON\"\n\n\t\tget_cluster_vm_next_id()\n\"Get next VM ID of cluster. Returns JSON\"\n\n\t\tget_cluster_node_list()\n\"Node list. Returns JSON\"\n\n\t\tget_cluster_log()\n\"log from Cluster. Returns JSON\"\n\n\t\tget_cluster_acl()\n\"ACL from Cluster. Returns JSON\"\n\n##### Node Methods\n\t\tget_node_networks(node)\n\"List available networks. Returns JSON\"\n  \n\t\tget_node_interface(node, interface)\n\"Read network device configuration. Returns JSON\"\n\n\t\tget_node_container_index(node)\n\"LXC container index (per node). Returns JSON\"\n \n\t\tget_node_virtual_index(node)\n\"Virtual machine index (per node). Returns JSON\"\n\n\t\tget_node_service_list(node)\n\"Service list. Returns JSON\"\n   \n\t\tget_node_service_state(node, service)\n\"Read service properties\"\n\n\t\tget_node_storage(node)\n\"Get status for all datastores. Returns JSON\"\n  \n\t\tget_node_finished_tasks(node)\n\"Read task list for one node (finished tasks). Returns JSON\"\n\n\t\tget_node_dns(node)\n\"Read DNS settings. Returns JSON\"\n\n\t\tget_node_status(node)\n\"Read node status. Returns JSON\"\n\n\t\tget_node_syslog(node)\n\"Read system log. Returns JSON\"\n\n\t\tget_node_rrd(node)\n\"Read node RRD statistics. Returns PNG\"\nEx: POST_DATA = {'node': 'r610'}\"\n\n\t\tget_node_rrd_data(node)\n\"Read node RRD statistics. Returns RRD\"\n\n\t\tget_node_task_by_upid(node, upid)\n\"Get tasks by UPID. Returns JSON\"\n\n\t\tget_node_task_log_by_upid(node, upid)\n\"Read task log. Returns JSON\"\n\n\t\tget_node_task_status_by_upid(node, upid)\n\"Read task status. Returns JSON\"\n\n##### Scan\n\n\t\tget_node_scan_methods(node)\n\"Get index of available scan methods, Returns JSON\"\n\n\t\tget_remote_iscsi(node)\n\"Scan remote iSCSI server.\"\n\n\t\tget_node_lvmgroups(node)\n\"Scan local LVM groups\"\n\n\t\tget_remote_nfs(node)\n\"Scan remote NFS server\"\n\n\t\tget_node_usb(node)\n\"List local USB devices\"\n\n    \n##### LXC Methods\n\n\t\tget_lxc_index(node, vmid)\n\"Directory index. Returns JSON\"\n\n\t\tget_lxc_status(node, vmid)\n\"Get virtual machine status. Returns JSON\"\n\n\t\tget_lxc_config(node, vmid)\n\"Get container configuration. Returns JSON\"\n\n\t\tget_lxc_rrd(node, vmid)\n\"Read VM RRD statistics. Returns PNG\"\n\n\t\tget_lxc_rrd_data(node, vmid)\n\"Read VM RRD statistics. Returns RRD\"\n\n##### KVM Methods\n\t\tget_virtual_list(node)\n\"List virtual machine. Returns JSON\"\n\n\t\tget_virtual_index(node, vmid)\n\"Directory index. Returns JSON\"\n\n\t\tget_virtual_status(node, vmid)\n\"Get virtual machine status. Returns JSON\"\n\n\t\tget_virtual_config(node, vmid)\n\"Get virtual machine configuration. Returns JSON\"\n\n\t\tget_virtual_rrd(node, vmid)\n\"Read VM RRD statistics. Returns JSON\"\n\n\t\tget_virtual_rrd_data(node, vmid)\n\"Read VM RRD statistics. Returns JSON\"\n\n\t\tget_snapshots_virtual_machine(node, vmid)\n\"Get list of snapshots a virtual machine. Returns JSON\"\n\n\t\tcreate_snapshot_virtual_machine(node, vmid, snapname, description='')\n\"Create Snapshot from VM. Returns JSON\"\n\n\t\tdelete_snapshot_virtual_machine(node, vmid, snapname, force=False)\n\"Destroy the vm snapshot (also delete all used/owned volumes). Returns JSON\"\n\n##### Storage Methods\n\n\t\tget_storage_volume_data(node, storage, volume)\n\"Get volume attributes. Returns JSON\"\n\n\t\tget_storage_config(storage)\n\"Read storage config. Returns JSON\"\n    \n\t\tget_node_storage_content(node, storage)\n\"List storage content. Returns JSON\"\n\n\t\tget_node_storage_rrd(node, storage)\n\"Read storage RRD statistics. Returns JSON\"\n\n\t\tget_node_storage_rrd_data(node, storage)\n\"Read storage RRD statistics. Returns JSON\"\n\n#### POST Methods\n\n\t\n##### LXC Methods\n\t\n\t\tcreate_lxc_container(node, post_data)\n\"Create or restore a container. Returns JSON\nRequires a dictionary of tuples formatted [('postname1','data'),('postname2','data')]\"\n\n\t\tshutdown_lxc_container(node, vmid)\n\"Shutdown the container. Returns JSON\"\n\n\t\tstart_lxc_container(node, vmid)\n\"Start the container. Returns JSON\"\n\n\t\tstop_lxc_container(node, vmid)\n\"Stop the container. Returns JSON\"\n\n\t\tmigrate_lxc_container(node, vmid, target)\n\"Migrate the container to another node. Creates a new migration task. Returns JSON\"\n\n##### KVM Methods\n\n\t\tcreate_virtual_machine(node, post_data)\n\"Create or restore a virtual machine. Returns JSON\nRequires a dictionary of tuples formatted [('postname1','data'),('postname2','data')]\"\n\t\t\n\t\tclone_virtual_machine(node,vmid, post_data)\n\"Create a copy of virtual machine/template. Returns JSON\nRequires a dictionary of tuples formatted [('postname1','data'),('postname2','data')]\nEx: POST_DATA = {'name':'test2.example.org', 'newid':'9002'}\"\n\t\t\n\t\treset_virtual_machine(node, vmid)\n\"Reset a virtual machine. Returns JSON\"\n\t\t\n\t\tresume_virtual_machine(node, vmid)\n\"Resume a virtual machine. Returns JSON\"\n\t\n\t\tshutdown_virtual_machine(node, vmid)\n\"Shut down a virtual machine. Returns JSON\"\n\t\n\t\tstart_virtual_machine(node, vmid)\n\"Start a virtual machine. Returns JSON\"\n\t\n\t\tstop_virtual_machine(node, vmid)\n\"Stop a virtual machine. Returns JSON\"\n\n\t\tsuspend_virtual_machine(node, vmid)\n\"Suspend a virtual machine. Returns JSON\"\n\t\t\n\t\tmigrate_virtual_machine(node, vmid, target)\n\"Migrate a virtual machine. Returns JSON\"\n\n\t\tmonitor_virtual_machine(node, vmid, command)\n\"Send monitor command to a virtual machine. Returns JSON\"\n\t\t\n\t\tvncproxy_virtual_machine(node, vmid)\n\"Creates a VNC Proxy for a virtual machine. Returns JSON\"\n\n\t\trollback_virtual_machine(node, vmid, snapname)\n\"Rollback a snapshot of a virtual machine. Returns JSON\"\n\n\t\tget_snapshot_config_virtual_machine(node, vmid, snapname)\n\"Get snapshot config of a virtual machine. Returns JSON\"\n\n\t\tcreate_node_network(node, post_data)\n\"Create network device. Returns JSON\nEx: POST_DATA = {'iface': 'vmbr5', 'type': 'bridge'}\"\n\n\t\treload_node_network(node, post_data)\n\"Reload network configuration. Returns JSON\nEx: POST_DATA = {'node': 'r610'}\"\n\n\t\treload_node_iface(node, iface, post_data)\n\"Reload network configuration. Returns JSON\nEx: POST_DATA = {'iface': IFACE, 'node': NODE, 'type': 'bridge'}\"\n\n##### Storage Methods\n\n\t\tallocate_node_storage_vm(node, storage, post_data)\n\"Create disk for a specific VM. Returns JSON\"\n#### DELETE Methods\n    \n##### LXC\n    \n\t\tdelete_lxc_container(node, vmid)\n\"Deletes the specified lxc container\"\n\n##### NODE\n    \n\t\tdelete_node_network_config(node)\n\"Revert network configuration changes.\"\n  \n\t\tdelete_node_interface(node, interface)\n\"Delete network device configuration\"\n    \n##### KVM\n    \n\t\tdelete_virtual_machine(node, vmid)\n\"Destroy the vm (also delete all used/owned volumes).\"\n        \n##### POOLS\n\t\tlist_pools()\n\"List all pool. Returns JSON\"\n\n\t\tget_pool_content(poolid)\n\"Get Pool content. Returns JSON\"\n\n\t\tcreate_pool(post_data)\n\"Create pool. Returns JSON\"\n\n\t\tset_pool_data(poolid, post_data)\n\"Update pool data.\"\n\n\t\tdelete_pool(poolid)\n\"Delete Pool\"\n\n##### STORAGE\n\t\tdelete_storage_configuration(storageid)\n\"Delete storage configuration\"\n\n#### PUT Methods\n\n##### NODE\n\t\tset_node_dns_domain(node, domain)\n\"Set the nodes DNS search domain\"\n\n\t\tset_node_subscription_key(node, key)\n\"Set the nodes subscription key\"\n        \n\t\tset_node_time_zone(node, timezone)\n\"Set the nodes timezone\"\n\n##### LXC\n\t\tset_lxc_container_options(node, vmid, post_data)\n\"Set lxc virtual machine options.\"\n  \n##### KVM\n\t\tset_virtual_machine_options(node, vmide, post_data)\n\"Set KVM virtual machine options.\"\n\n\t\tsend_key_event_virtual_machine(node, vmid, key)\n\"Send key event to virtual machine\"\n\n\t\tunlink_virtual_machine_disk_image(node, vmid, post_data)\n\"Unlink disk images\nEx: POST_DATA = {'idlist': 'ide0'}\"\n\n##### STORAGE\n\t\tupdate_storage_configuration(storageid, post_data)\n\"Update storage configuration\"\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gizmo15/pyproxmox3",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyproxmox3",
            "package_url": "https://pypi.org/project/pyproxmox3/",
            "platform": "",
            "project_url": "https://pypi.org/project/pyproxmox3/",
            "project_urls": {
                "Bug Tracker": "https://github.com/gizmo15/pyproxmox3/issues",
                "Homepage": "https://github.com/gizmo15/pyproxmox3"
            },
            "release_url": "https://pypi.org/project/pyproxmox3/1.0.0-3/",
            "requires_dist": null,
            "requires_python": ">=3",
            "summary": "Handle proxmox operations via api",
            "version": "1.0.0-3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 11917919,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ec3a8de69525525a734c74c23950f4a6",
                    "sha256": "0ef4c3c15db163cdf1c5ed7839782afdd7e3445c8e6797faa3b3f0a0e63f01f4"
                },
                "downloads": -1,
                "filename": "pyproxmox3-1.0.0-3.tar.gz",
                "has_sig": false,
                "md5_digest": "ec3a8de69525525a734c74c23950f4a6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 23518,
                "upload_time": "2021-11-03T19:19:39",
                "upload_time_iso_8601": "2021-11-03T19:19:39.704557Z",
                "url": "https://files.pythonhosted.org/packages/5e/7a/afcb6f4cb377d5b6f897e5518f8becc260721b4166010998d3f5d1603653/pyproxmox3-1.0.0-3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}