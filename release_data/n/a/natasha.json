{
    "0.10.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian morphology,named entity recognition,tomita",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.10.0/",
            "requires_dist": [
                "yargy"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.10.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9582d0de1c4948b93bc0346aa4d0c23b",
                    "sha256": "2d1de8e425f3d3ee1d7b3eba50c97a6ecc2c1511e1e5c7e499df0dd51bb29761"
                },
                "downloads": -1,
                "filename": "natasha-0.10.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9582d0de1c4948b93bc0346aa4d0c23b",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 777866,
                "upload_time": "2018-07-10T11:05:37",
                "upload_time_iso_8601": "2018-07-10T11:05:37.166465Z",
                "url": "https://files.pythonhosted.org/packages/4b/9d/3330c5a8c98f45a6f090cc8bfaa1132a58ead75cedec5ac758b2999bf34c/natasha-0.10.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.4.0": {
        "info": {
            "author": "Dmitry Veselov",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bureaucratic-labs/natasha",
            "keywords": "natural language processing",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/bureaucratic-labs/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.4.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b3bcde17fa63be0f1af08ab9f04b0d43",
                    "sha256": "6d60c88a3289d5c400be7c9238ca26d60c2086959e4ada78e2d4c93ef83a2f97"
                },
                "downloads": -1,
                "filename": "natasha-0.4.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b3bcde17fa63be0f1af08ab9f04b0d43",
                "packagetype": "bdist_wheel",
                "python_version": "3.5",
                "requires_python": null,
                "size": 10462,
                "upload_time": "2016-12-23T10:26:35",
                "upload_time_iso_8601": "2016-12-23T10:26:35.085195Z",
                "url": "https://files.pythonhosted.org/packages/0b/23/007f74e6225c5d53aa81f6c86e9f712a513a6c32e5a33c86bb7585f9ab0c/natasha-0.4.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.5.0": {
        "info": {
            "author": "Dmitry Veselov",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bureaucratic-labs/natasha",
            "keywords": "natural language processing",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/bureaucratic-labs/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.5.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d4bd4ee8b4e06a9460b9f2391bbdf2e6",
                    "sha256": "b4d55753d7aa8b1c460301ba3a93249f4db9d1b715f7e9aaa1159b9b1a8294f3"
                },
                "downloads": -1,
                "filename": "natasha-0.5.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d4bd4ee8b4e06a9460b9f2391bbdf2e6",
                "packagetype": "bdist_wheel",
                "python_version": "3.5",
                "requires_python": null,
                "size": 39869,
                "upload_time": "2017-02-15T05:11:37",
                "upload_time_iso_8601": "2017-02-15T05:11:37.228819Z",
                "url": "https://files.pythonhosted.org/packages/39/b9/d10253b9e281f9f1a47f584ab2bab183703398c0eac1c285e01ff238077e/natasha-0.5.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.6.0": {
        "info": {
            "author": "Dmitry Veselov",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bureaucratic-labs/natasha",
            "keywords": "natural language processing",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/bureaucratic-labs/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.6.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.6.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e230b7e0c0faae5e7ea81e10f4294685",
                    "sha256": "eeb0da216f5bf3af3d65c5161612a8f32d4df52532abd438a866505246517ad5"
                },
                "downloads": -1,
                "filename": "natasha-0.6.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e230b7e0c0faae5e7ea81e10f4294685",
                "packagetype": "bdist_wheel",
                "python_version": "3.5",
                "requires_python": null,
                "size": 44662,
                "upload_time": "2017-03-23T14:33:49",
                "upload_time_iso_8601": "2017-03-23T14:33:49.839175Z",
                "url": "https://files.pythonhosted.org/packages/9c/a0/421cf5aab796b40dce6880a79a8beb0d9e3bdd8f898201a1003726964cbc/natasha-0.6.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.7.0": {
        "info": {
            "author": "Dmitry Veselov",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bureaucratic-labs/natasha",
            "keywords": "natural language processing",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/bureaucratic-labs/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.7.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.7.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2aa9f370b557cd8e55aa4d7ba4888067",
                    "sha256": "c71c5dfa0ca4d899132cecc60b8757cd6911bbecb0ff2bae9442872271b0e2b0"
                },
                "downloads": -1,
                "filename": "natasha-0.7.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2aa9f370b557cd8e55aa4d7ba4888067",
                "packagetype": "bdist_wheel",
                "python_version": "3.6",
                "requires_python": null,
                "size": 51993,
                "upload_time": "2017-04-16T11:57:54",
                "upload_time_iso_8601": "2017-04-16T11:57:54.146548Z",
                "url": "https://files.pythonhosted.org/packages/06/93/d901b43d8a342799f72de8679a85948a1be8ea682d22f5bc90e9631d7302/natasha-0.7.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.8.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.8.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.8.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "48026bb7a83cb8f40d496f9ae37a6f03",
                    "sha256": "43f9bf04e489a28caa172cc62234efc33ef71cdf8299b51e7f8b2979a47024d5"
                },
                "downloads": -1,
                "filename": "natasha-0.8.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "48026bb7a83cb8f40d496f9ae37a6f03",
                "packagetype": "bdist_wheel",
                "python_version": "3.6",
                "requires_python": null,
                "size": 795967,
                "upload_time": "2017-09-30T23:08:22",
                "upload_time_iso_8601": "2017-09-30T23:08:22.843142Z",
                "url": "https://files.pythonhosted.org/packages/70/df/45b2670deb33cc9c9a6c8b871009f9f875275449601a9df13f55b3f690d0/natasha-0.8.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.9.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 2",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Libraries :: Python Modules",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian morphology,named entity recognition,tomita",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/0.9.0/",
            "requires_dist": [
                "yargy"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "0.9.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a4c66b0642865b581126d1eea23f871c",
                    "sha256": "4e9ae227ab4164c26efcb4db452a52ff40217c5d9d16c1f4f716574b8ea4b0d4"
                },
                "downloads": -1,
                "filename": "natasha-0.9.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a4c66b0642865b581126d1eea23f871c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 777638,
                "upload_time": "2018-03-13T18:59:26",
                "upload_time_iso_8601": "2018-03-13T18:59:26.123914Z",
                "url": "https://files.pythonhosted.org/packages/69/25/61bb1d138923659def804e5b5cd7944a69325de7f8093b63a7895e1ef85b/natasha-0.9.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru, alex@alexkuk.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/1.1.0/",
            "requires_dist": [
                "pymorphy2",
                "intervaltree (>=3)",
                "razdel (>=0.5.0)",
                "navec (>=0.9.0)",
                "slovnet (>=0.3.0)",
                "yargy (>=0.14.0)",
                "ipymarkup (>=0.8.0)"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "64aa8f278b2f39109b95cae4ded26d1b",
                    "sha256": "5bd57e8f9d4286f648070c8be616a7e693d6144b68f0be112b0a49024ded74c7"
                },
                "downloads": -1,
                "filename": "natasha-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "64aa8f278b2f39109b95cae4ded26d1b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 34410184,
                "upload_time": "2020-05-05T10:09:09",
                "upload_time_iso_8601": "2020-05-05T10:09:09.274013Z",
                "url": "https://files.pythonhosted.org/packages/14/b0/9662a7ad6b48f6b705b1ea4f5b312495e19678d2f398cd902872332d1024/natasha-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4b3dadb0f6e6009f9be0a56adf889a20",
                    "sha256": "5cdc1b84bdb78761097463101e9bd2f7034b2c631035263752aa44ddbaa76587"
                },
                "downloads": -1,
                "filename": "natasha-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "4b3dadb0f6e6009f9be0a56adf889a20",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34411093,
                "upload_time": "2020-05-05T10:09:21",
                "upload_time_iso_8601": "2020-05-05T10:09:21.215029Z",
                "url": "https://files.pythonhosted.org/packages/b9/ac/eff070299eda9c0d62d18881e37c510b47622a04df969818d2ef0a00ac28/natasha-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru, alex@alexkuk.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/1.2.0/",
            "requires_dist": [
                "pymorphy2",
                "razdel (>=0.5.0)",
                "navec (>=0.9.0)",
                "slovnet (>=0.3.0)",
                "yargy (>=0.14.0)",
                "ipymarkup (>=0.8.0)"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0ce2b71caa578be59df4074f1ce02a23",
                    "sha256": "23e255a53d9e6ffc0478ae4d7db31b9793ad939dd2c54310f73bcd373910f922"
                },
                "downloads": -1,
                "filename": "natasha-1.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0ce2b71caa578be59df4074f1ce02a23",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 34410456,
                "upload_time": "2020-05-13T11:55:44",
                "upload_time_iso_8601": "2020-05-13T11:55:44.213495Z",
                "url": "https://files.pythonhosted.org/packages/26/d2/2b1d94e4d26e6f6098b3c9746253de797c1c6f9cfb883c45761e86382b2a/natasha-1.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b75df8ecf4b614ca3d0ab0c6e5cde28b",
                    "sha256": "13cff916e9a5025304522b2a9bb0d5cb1417ff2283f8aa8662356dec01cd3a1e"
                },
                "downloads": -1,
                "filename": "natasha-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "b75df8ecf4b614ca3d0ab0c6e5cde28b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34411841,
                "upload_time": "2020-05-13T11:55:54",
                "upload_time_iso_8601": "2020-05-13T11:55:54.573649Z",
                "url": "https://files.pythonhosted.org/packages/27/49/8bb59112e7f2051b33f41f038b0e8e0089f96e1e219fd68522040b701708/natasha-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru, alex@alexkuk.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/1.3.0/",
            "requires_dist": [
                "pymorphy2",
                "razdel (>=0.5.0)",
                "navec (>=0.9.0)",
                "slovnet (>=0.3.0)",
                "yargy (>=0.14.0)",
                "ipymarkup (>=0.8.0)"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "1.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b4933f099eefa6a36c8ceb333985b85d",
                    "sha256": "4da38b370597e2fd71642d925b64741fe408f65a713be0f5b86650712a853ccd"
                },
                "downloads": -1,
                "filename": "natasha-1.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b4933f099eefa6a36c8ceb333985b85d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 34409675,
                "upload_time": "2020-08-24T07:46:40",
                "upload_time_iso_8601": "2020-08-24T07:46:40.799733Z",
                "url": "https://files.pythonhosted.org/packages/83/34/9abb6b5c95993001518e517f21157e2c955749ac4f3c79dc3c2cf25e72fe/natasha-1.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bcd90e1a7dae9a18c2ccd65358e4c74e",
                    "sha256": "0f174b1b3cde4d31699e212f2ff55617a2894147b1092549cf2bef26315d4e51"
                },
                "downloads": -1,
                "filename": "natasha-1.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bcd90e1a7dae9a18c2ccd65358e4c74e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34404947,
                "upload_time": "2020-08-24T07:46:49",
                "upload_time_iso_8601": "2020-08-24T07:46:49.513679Z",
                "url": "https://files.pythonhosted.org/packages/c1/32/526f1654fe9659ac1c9eb9f02749713fcea23751ba89172b87a1b575b0e8/natasha-1.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.4.0": {
        "info": {
            "author": "Natasha contributors",
            "author_email": "d.a.veselov@yandex.ru, alex@alexkuk.ru",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description": "\n<img src=\"https://github.com/natasha/natasha-logos/blob/master/natasha.svg\">\n\n![CI](https://github.com/natasha/natasha/workflows/CI/badge.svg) [![codecov](https://codecov.io/gh/natasha/natasha/branch/master/graph/badge.svg)](https://codecov.io/gh/natasha/natasha)\n\nNatasha solves basic NLP tasks for Russian language: tokenization, sentence segmentation, word embedding, morphology tagging, lemmatization, phrase normalization, syntax parsing, NER tagging, fact extraction. Quality on every task is similar or better then current SOTAs for Russian language on news articles, see <a href=\"https://github.com/natasha/natasha#evaluation\">evaluation section</a>. Natasha is not a research project, underlying technologies are built for production. We pay attention to model size, RAM usage and performance. Models run on CPU, use Numpy for inference.\n\nNatasha integrates libraries from <a href=\"https://github.com/natasha\">Natasha project</a> under one convenient API:\n\n* <a href=\"https://github.com/natasha/razdel\">Razdel</a> \u2014 token, sentence segmentation for Russian\n* <a href=\"https://github.com/natasha/navec\">Navec</a> \u2014 compact Russian embeddings\n* <a href=\"https://github.com/natasha/slovnet\">Slovnet</a> \u2014 modern deep-learning techniques for Russian NLP, compact models for Russian morphology, syntax, NER.\n* <a href=\"https://github.com/natasha/yargy\">Yargy</a> \u2014 rule-based fact extraction similar to Tomita parser.\n* <a href=\"https://github.com/natasha/ipymarkup\">Ipymarkup</a> \u2014 NLP visualizations for NER and syntax markups.\n\n> \u26a0 API may change, for realworld tasks consider using low level libraries from Natasha project.\n> Models optimized for news articles, quality on other domain may be lower.\n> To use old `NamesExtractor`, `AddressExtactor` downgrade `pip install natasha<1 yargy<0.13`\n\n## Install\n\nNatasha supports Python 3.5+ and PyPy3:\n\n```bash\n$ pip install natasha\n```\n\n## Usage\n\nFor more examples and explanation see [Natasha documentation](http://nbviewer.jupyter.org/github/natasha/natasha/blob/master/docs.ipynb).\n\n```python\n>>> from natasha import (\n    Segmenter,\n    MorphVocab,\n\n    NewsEmbedding,\n    NewsMorphTagger,\n    NewsSyntaxParser,\n    NewsNERTagger,\n\n    PER,\n    NamesExtractor,\n\n    Doc\n)\n\n\n#######\n#\n#  INIT\n#\n#####\n\n\n>>> segmenter = Segmenter()\n>>> morph_vocab = MorphVocab()\n\n>>> emb = NewsEmbedding()\n>>> morph_tagger = NewsMorphTagger(emb)\n>>> syntax_parser = NewsSyntaxParser(emb)\n>>> ner_tagger = NewsNERTagger(emb)\n\n>>> names_extractor = NamesExtractor(morph_vocab)\n\n>>> text = '\u041f\u043e\u0441\u043e\u043b \u0418\u0437\u0440\u0430\u0438\u043b\u044f \u043d\u0430 \u0423\u043a\u0440\u0430\u0438\u043d\u0435 \u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f, \u0447\u0442\u043e \u043f\u0440\u0438\u0448\u0435\u043b \u0432 \u0448\u043e\u043a, \u0443\u0437\u043d\u0430\u0432 \u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0438 \u0432\u043b\u0430\u0441\u0442\u0435\u0439 \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c 2019 \u0433\u043e\u0434 \u0433\u043e\u0434\u043e\u043c \u043b\u0438\u0434\u0435\u0440\u0430 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u043e\u0439 \u0432 \u0420\u043e\u0441\u0441\u0438\u0438 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432 (\u041e\u0423\u041d) \u0421\u0442\u0435\u043f\u0430\u043d\u0430 \u0411\u0430\u043d\u0434\u0435\u0440\u044b. \u0421\u0432\u043e\u0435 \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u043d \u0440\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u043b \u0432 Twitter. \u00ab\u042f \u043d\u0435 \u043c\u043e\u0433\u0443 \u043f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a \u043f\u0440\u043e\u0441\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u0445, \u043a\u0442\u043e \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u043b \u0443\u0447\u0430\u0441\u0442\u0438\u0435 \u0432 \u0443\u0436\u0430\u0441\u043d\u044b\u0445 \u0430\u043d\u0442\u0438\u0441\u0435\u043c\u0438\u0442\u0441\u043a\u0438\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f\u0445, \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0431\u043e\u0440\u043e\u0442\u044c\u0441\u044f \u0441 \u0430\u043d\u0442\u0438\u0441\u0435\u043c\u0438\u0442\u0438\u0437\u043c\u043e\u043c \u0438 \u043a\u0441\u0435\u043d\u043e\u0444\u043e\u0431\u0438\u0435\u0439. \u0423\u043a\u0440\u0430\u0438\u043d\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0431\u044b\u0432\u0430\u0442\u044c \u043e \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f\u0445, \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0442\u0438\u0432 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u0435\u0432\u0440\u0435\u0435\u0432, \u0438 \u043d\u0438\u043a\u043e\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043d\u0435 \u043e\u0442\u043c\u0435\u0447\u0430\u0442\u044c \u0438\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0447\u0438\u0442\u0430\u043d\u0438\u0435 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439\u00bb, \u2014 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0434\u0438\u043f\u043b\u043e\u043c\u0430\u0442. 11 \u0434\u0435\u043a\u0430\u0431\u0440\u044f \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0438\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u043b \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u043e\u0437\u0433\u043b\u0430\u0441\u0438\u0442\u044c 2019 \u0433\u043e\u0434 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0435 \u0433\u043e\u0434\u043e\u043c \u0421\u0442\u0435\u043f\u0430\u043d\u0430 \u0411\u0430\u043d\u0434\u0435\u0440\u044b \u0432 \u0441\u0432\u044f\u0437\u0438 \u0441 \u043f\u0440\u0430\u0437\u0434\u043d\u043e\u0432\u0430\u043d\u0438\u0435\u043c 110-\u043b\u0435\u0442\u0438\u044f \u0441\u043e \u0434\u043d\u044f \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043b\u0438\u0434\u0435\u0440\u0430 \u041e\u0423\u041d (\u0411\u0430\u043d\u0434\u0435\u0440\u0430 \u0440\u043e\u0434\u0438\u043b\u0441\u044f 1 \u044f\u043d\u0432\u0430\u0440\u044f 1909 \u0433\u043e\u0434\u0430). \u0412 \u0438\u044e\u043b\u0435 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u044f\u043b \u0416\u0438\u0442\u043e\u043c\u0438\u0440\u0441\u043a\u0438\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u0435\u0442. \u0412 \u043d\u0430\u0447\u0430\u043b\u0435 \u043c\u0435\u0441\u044f\u0446\u0430 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u043a \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u044b \u041f\u0435\u0442\u0440\u0443 \u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0411\u0430\u043d\u0434\u0435\u0440\u0435 \u0437\u0432\u0430\u043d\u0438\u0435 \u0413\u0435\u0440\u043e\u044f \u0423\u043a\u0440\u0430\u0438\u043d\u044b \u043e\u0431\u0440\u0430\u0442\u0438\u043b\u0438\u0441\u044c \u0434\u0435\u043f\u0443\u0442\u0430\u0442\u044b \u0412\u0435\u0440\u0445\u043e\u0432\u043d\u043e\u0439 \u0420\u0430\u0434\u044b. \u041f\u0430\u0440\u043b\u0430\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043d\u0438\u0435 \u0411\u0430\u043d\u0434\u0435\u0440\u044b \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0433\u0435\u0440\u043e\u0435\u043c \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0432 \u0431\u043e\u0440\u044c\u0431\u0435 \u0441 \u043f\u043e\u0434\u0440\u044b\u0432\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0442\u0438\u0432 \u0423\u043a\u0440\u0430\u0438\u043d\u044b \u0432 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u043c \u043f\u043e\u043b\u0435, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u00ab\u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0444\u043e\u0432, \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u043f\u0440\u043e\u043f\u0430\u0433\u0430\u043d\u0434\u043e\u0439\u00bb. \u0421\u0442\u0435\u043f\u0430\u043d \u0411\u0430\u043d\u0434\u0435\u0440\u0430 (1909-1959) \u0431\u044b\u043b \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043b\u0438\u0434\u0435\u0440\u043e\u0432 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432, \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0435\u0439 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0430 \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u044f\u0445 \u0441 \u0443\u043a\u0440\u0430\u0438\u043d\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u043c \u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435\u043c. \u0412 2010 \u0433\u043e\u0434\u0443 \u0432 \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0441\u0442\u0432\u0430 \u0412\u0438\u043a\u0442\u043e\u0440\u0430 \u042e\u0449\u0435\u043d\u043a\u043e \u0411\u0430\u043d\u0434\u0435\u0440\u0430 \u0431\u044b\u043b \u043f\u043e\u0441\u043c\u0435\u0440\u0442\u043d\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043d \u0413\u0435\u0440\u043e\u0435\u043c \u0423\u043a\u0440\u0430\u0438\u043d\u044b, \u043e\u0434\u043d\u0430\u043a\u043e \u0432\u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0438 \u044d\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0431\u044b\u043b\u043e \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0441\u0443\u0434\u043e\u043c. '\n>>> doc = Doc(text)\n\n\n#######\n#\n#  SEGMENT\n#\n#####\n\n\n>>> doc.segment(segmenter)\n>>> display(doc.tokens[:5])\n>>> display(doc.sents[:5])\n[DocToken(stop=5, text='\u041f\u043e\u0441\u043e\u043b'),\n DocToken(start=6, stop=13, text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f'),\n DocToken(start=14, stop=16, text='\u043d\u0430'),\n DocToken(start=17, stop=24, text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435'),\n DocToken(start=25, stop=30, text='\u0419\u043e\u044d\u043b\u044c')]\n[DocSent(stop=218, text='\u041f\u043e\u0441\u043e\u043b \u0418\u0437\u0440\u0430\u0438\u043b\u044f \u043d\u0430 \u0423\u043a\u0440\u0430\u0438\u043d\u0435 \u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f, \u0447\u0442..., tokens=[...]),\n DocSent(start=219, stop=257, text='\u0421\u0432\u043e\u0435 \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u043d \u0440\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u043b \u0432 Twitter.', tokens=[...]),\n DocSent(start=258, stop=424, text='\u00ab\u042f \u043d\u0435 \u043c\u043e\u0433\u0443 \u043f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a \u043f\u0440\u043e\u0441\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u0445, \u043a\u0442\u043e \u043d\u0435\u043f\u043e..., tokens=[...]),\n DocSent(start=425, stop=592, text='\u0423\u043a\u0440\u0430\u0438\u043d\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0431\u044b\u0432\u0430\u0442\u044c \u043e \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f\u0445, \u0441\u043e\u0432\u0435\u0440..., tokens=[...]),\n DocSent(start=593, stop=798, text='11 \u0434\u0435\u043a\u0430\u0431\u0440\u044f \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0438\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u043b \u0440\u0435\u0448\u0435\u043d..., tokens=[...])]\n\n\n#######\n#\n#   MORPH\n#\n#####\n\n\n>>> doc.tag_morph(morph_tagger)\n>>> display(doc.tokens[:5])\n>>> doc.sents[0].morph.print()\n[DocToken(stop=5, text='\u041f\u043e\u0441\u043e\u043b', pos='NOUN', feats=<Anim,Nom,Masc,Sing>),\n DocToken(start=6, stop=13, text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', pos='PROPN', feats=<Inan,Gen,Masc,Sing>),\n DocToken(start=14, stop=16, text='\u043d\u0430', pos='ADP'),\n DocToken(start=17, stop=24, text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', pos='PROPN', feats=<Inan,Loc,Fem,Sing>),\n DocToken(start=25, stop=30, text='\u0419\u043e\u044d\u043b\u044c', pos='PROPN', feats=<Anim,Nom,Masc,Sing>)]\n               \u041f\u043e\u0441\u043e\u043b NOUN|Animacy=Anim|Case=Nom|Gender=Masc|Number=Sing\n             \u0418\u0437\u0440\u0430\u0438\u043b\u044f PROPN|Animacy=Inan|Case=Gen|Gender=Masc|Number=Sing\n                  \u043d\u0430 ADP\n             \u0423\u043a\u0440\u0430\u0438\u043d\u0435 PROPN|Animacy=Inan|Case=Loc|Gender=Fem|Number=Sing\n               \u0419\u043e\u044d\u043b\u044c PROPN|Animacy=Anim|Case=Nom|Gender=Masc|Number=Sing\n                \u041b\u0438\u043e\u043d PROPN|Animacy=Anim|Case=Nom|Gender=Masc|Number=Sing\n           \u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f VERB|Aspect=Perf|Gender=Masc|Mood=Ind|Number=Sing|Tense=Past|VerbForm=Fin|Voice=Mid\n                   , PUNCT\n                 \u0447\u0442\u043e SCONJ\n...\n\n\n######\n#\n#  LEMMA\n#\n#######\n\n\n>>> for token in doc.tokens:\n>>>     token.lemmatize(morph_vocab)\n\n>>> display(doc.tokens[:5])\n>>> {_.text: _.lemma for _ in doc.tokens}\n[DocToken(stop=5, text='\u041f\u043e\u0441\u043e\u043b', pos='NOUN', feats=<Anim,Nom,Masc,Sing>, lemma='\u043f\u043e\u0441\u043e\u043b'),\n DocToken(start=6, stop=13, text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', pos='PROPN', feats=<Inan,Gen,Masc,Sing>, lemma='\u0438\u0437\u0440\u0430\u0438\u043b\u044c'),\n DocToken(start=14, stop=16, text='\u043d\u0430', pos='ADP', lemma='\u043d\u0430'),\n DocToken(start=17, stop=24, text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', pos='PROPN', feats=<Inan,Loc,Fem,Sing>, lemma='\u0443\u043a\u0440\u0430\u0438\u043d\u0430'),\n DocToken(start=25, stop=30, text='\u0419\u043e\u044d\u043b\u044c', pos='PROPN', feats=<Anim,Nom,Masc,Sing>, lemma='\u0439\u043e\u044d\u043b\u044c')]\n{'\u041f\u043e\u0441\u043e\u043b': '\u043f\u043e\u0441\u043e\u043b',\n '\u0418\u0437\u0440\u0430\u0438\u043b\u044f': '\u0438\u0437\u0440\u0430\u0438\u043b\u044c',\n '\u043d\u0430': '\u043d\u0430',\n '\u0423\u043a\u0440\u0430\u0438\u043d\u0435': '\u0443\u043a\u0440\u0430\u0438\u043d\u0430',\n '\u0419\u043e\u044d\u043b\u044c': '\u0439\u043e\u044d\u043b\u044c',\n '\u041b\u0438\u043e\u043d': '\u043b\u0438\u043e\u043d',\n '\u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f': '\u043f\u0440\u0438\u0437\u043d\u0430\u0442\u044c\u0441\u044f',\n ',': ',',\n '\u0447\u0442\u043e': '\u0447\u0442\u043e',\n '\u043f\u0440\u0438\u0448\u0435\u043b': '\u043f\u0440\u0438\u0439\u0442\u0438',\n '\u0432': '\u0432',\n '\u0448\u043e\u043a': '\u0448\u043e\u043a',\n '\u0443\u0437\u043d\u0430\u0432': '\u0443\u0437\u043d\u0430\u0442\u044c',\n '\u043e': '\u043e',\n...\n\n\n#######\n#\n#  SYNTAX\n#\n######\n\n\n>>> doc.parse_syntax(syntax_parser)\n>>> display(doc.tokens[:5])\n>>> doc.sents[0].syntax.print()\n[DocToken(stop=5, text='\u041f\u043e\u0441\u043e\u043b', id='1_1', head_id='1_7', rel='nsubj', pos='NOUN', feats=<Anim,Nom,Masc,Sing>),\n DocToken(start=6, stop=13, text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', id='1_2', head_id='1_1', rel='nmod', pos='PROPN', feats=<Inan,Gen,Masc,Sing>),\n DocToken(start=14, stop=16, text='\u043d\u0430', id='1_3', head_id='1_4', rel='case', pos='ADP'),\n DocToken(start=17, stop=24, text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', id='1_4', head_id='1_1', rel='nmod', pos='PROPN', feats=<Inan,Loc,Fem,Sing>),\n DocToken(start=25, stop=30, text='\u0419\u043e\u044d\u043b\u044c', id='1_5', head_id='1_1', rel='appos', pos='PROPN', feats=<Anim,Nom,Masc,Sing>)]\n        \u250c\u2500\u2500\u25ba \u041f\u043e\u0441\u043e\u043b         nsubj\n        \u2502    \u0418\u0437\u0440\u0430\u0438\u043b\u044f       \n        \u2502 \u250c\u25ba \u043d\u0430            case\n        \u2502 \u2514\u2500 \u0423\u043a\u0440\u0430\u0438\u043d\u0435       \n        \u2502 \u250c\u2500 \u0419\u043e\u044d\u043b\u044c         \n        \u2502 \u2514\u25ba \u041b\u0438\u043e\u043d          flat:name\n\u250c\u2500\u2500\u2500\u2500\u2500\u250c\u2500\u2514\u2500\u2500\u2500 \u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f     \n\u2502     \u2502 \u250c\u2500\u2500\u25ba ,             punct\n\u2502     \u2502 \u2502 \u250c\u25ba \u0447\u0442\u043e           mark\n\u2502     \u2514\u25ba\u2514\u2500\u2514\u2500 \u043f\u0440\u0438\u0448\u0435\u043b        ccomp\n\u2502     \u2502   \u250c\u25ba \u0432             case\n\u2502     \u2514\u2500\u2500\u25ba\u2514\u2500 \u0448\u043e\u043a           obl\n\u2502         \u250c\u25ba ,             punct\n\u2502 \u250c\u2500\u2500\u2500\u2500\u25ba\u250c\u2500\u2514\u2500 \u0443\u0437\u043d\u0430\u0432         advcl\n\u2502 \u2502     \u2502 \u250c\u25ba \u043e             case\n\u2502 \u2502 \u250c\u2500\u2500\u2500\u2514\u25ba\u2514\u2500 \u0440\u0435\u0448\u0435\u043d\u0438\u0438       obl\n\u2502 \u2502 \u2502 \u250c\u2500\u2514\u2500\u2500\u25ba \u0432\u043b\u0430\u0441\u0442\u0435\u0439       nmod\n\u2502 \u2502 \u2502 \u2502   \u250c\u25ba \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439     amod\n\u2502 \u2502 \u2502 \u2514\u2500\u2500\u25ba\u2514\u2500 \u043e\u0431\u043b\u0430\u0441\u0442\u0438       nmod\n\u2502 \u2514\u2500\u2514\u25ba\u250c\u2500\u250c\u2500\u2500\u2500 \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c      nmod\n\u2502     \u2502 \u2502 \u250c\u25ba 2019          amod\n\u2502     \u2502 \u2514\u25ba\u2514\u2500 \u0433\u043e\u0434           obj\n\u2502     \u2514\u2500\u2500\u25ba\u250c\u2500 \u0433\u043e\u0434\u043e\u043c         obl\n\u2502   \u250c\u2500\u2500\u2500\u2500\u2500\u2514\u25ba \u043b\u0438\u0434\u0435\u0440\u0430        nmod\n\u2502   \u2502 \u250c\u25ba\u250c\u2500\u2500\u2500 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u043e\u0439   acl\n\u2502   \u2502 \u2502 \u2502 \u250c\u25ba \u0432             case\n\u2502   \u2502 \u2502 \u2514\u25ba\u2514\u2500 \u0420\u043e\u0441\u0441\u0438\u0438        obl\n\u2502 \u250c\u2500\u2514\u25ba\u2514\u2500\u250c\u2500\u2500\u2500 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438   nmod\n\u2502 \u2502     \u2502 \u250c\u25ba \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445    amod\n\u2502 \u2502   \u250c\u2500\u2514\u25ba\u2514\u2500 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432 nmod\n\u2502 \u2502   \u2502   \u250c\u25ba (             punct\n\u2502 \u2502   \u2514\u25ba\u250c\u2500\u2514\u2500 \u041e\u0423\u041d           parataxis\n\u2502 \u2502     \u2514\u2500\u2500\u25ba )             punct\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u250c\u2500 \u0421\u0442\u0435\u043f\u0430\u043d\u0430       appos\n\u2502         \u2514\u25ba \u0411\u0430\u043d\u0434\u0435\u0440\u044b       flat:name\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba .             punct\n...\n\n\n#######\n#\n#   NER\n#\n######\n\n\n>>> doc.tag_ner(ner_tagger)\n>>> display(doc.spans[:5])\n>>> doc.ner.print()\n[DocSpan(start=6, stop=13, type='LOC', text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', tokens=[...]),\n DocSpan(start=17, stop=24, type='LOC', text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', tokens=[...]),\n DocSpan(start=25, stop=35, type='PER', text='\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d', tokens=[...]),\n DocSpan(start=89, stop=106, type='LOC', text='\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', tokens=[...]),\n DocSpan(start=152, stop=158, type='LOC', text='\u0420\u043e\u0441\u0441\u0438\u0438', tokens=[...])]\n\u041f\u043e\u0441\u043e\u043b \u0418\u0437\u0440\u0430\u0438\u043b\u044f \u043d\u0430 \u0423\u043a\u0440\u0430\u0438\u043d\u0435 \u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043b\u0441\u044f, \u0447\u0442\u043e \u043f\u0440\u0438\u0448\u0435\u043b \u0432 \u0448\u043e\u043a, \u0443\u0437\u043d\u0430\u0432\n      LOC\u2500\u2500\u2500\u2500    LOC\u2500\u2500\u2500\u2500 PER\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                   \n \u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0438 \u0432\u043b\u0430\u0441\u0442\u0435\u0439 \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043e\u0431\u044a\u044f\u0432\u0438\u0442\u044c 2019 \u0433\u043e\u0434 \u0433\u043e\u0434\u043e\u043c \u043b\u0438\u0434\u0435\u0440\u0430 \n                   LOC\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                \n\u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043d\u043e\u0439 \u0432 \u0420\u043e\u0441\u0441\u0438\u0438 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432 (\u041e\u0423\u041d) \n              LOC\u2500\u2500\u2500 ORG\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \n\u0421\u0442\u0435\u043f\u0430\u043d\u0430 \u0411\u0430\u043d\u0434\u0435\u0440\u044b. \u0421\u0432\u043e\u0435 \u0437\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u043d \u0440\u0430\u0437\u043c\u0435\u0441\u0442\u0438\u043b \u0432 Twitter. \u00ab\u042f \u043d\u0435 \u043c\u043e\u0433\u0443 \nPER\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                ORG\u2500\u2500\u2500\u2500             \n\u043f\u043e\u043d\u044f\u0442\u044c, \u043a\u0430\u043a \u043f\u0440\u043e\u0441\u043b\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0435\u0445, \u043a\u0442\u043e \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u043b \u0443\u0447\u0430\u0441\u0442\u0438\u0435 \u0432 \n\u0443\u0436\u0430\u0441\u043d\u044b\u0445 \u0430\u043d\u0442\u0438\u0441\u0435\u043c\u0438\u0442\u0441\u043a\u0438\u0445 \u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f\u0445, \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0431\u043e\u0440\u043e\u0442\u044c\u0441\u044f \u0441 \n\u0430\u043d\u0442\u0438\u0441\u0435\u043c\u0438\u0442\u0438\u0437\u043c\u043e\u043c \u0438 \u043a\u0441\u0435\u043d\u043e\u0444\u043e\u0431\u0438\u0435\u0439. \u0423\u043a\u0440\u0430\u0438\u043d\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0431\u044b\u0432\u0430\u0442\u044c \u043e \n                              LOC\u2500\u2500\u2500\u2500                      \n\u043f\u0440\u0435\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f\u0445, \u0441\u043e\u0432\u0435\u0440\u0448\u0435\u043d\u043d\u044b\u0445 \u043f\u0440\u043e\u0442\u0438\u0432 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u0435\u0432\u0440\u0435\u0435\u0432, \u0438 \u043d\u0438\u043a\u043e\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \n\u043d\u0435 \u043e\u0442\u043c\u0435\u0447\u0430\u0442\u044c \u0438\u0445 \u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u0447\u0438\u0442\u0430\u043d\u0438\u0435 \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439\u00bb, \u2014 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0434\u0438\u043f\u043b\u043e\u043c\u0430\u0442. \n11 \u0434\u0435\u043a\u0430\u0431\u0440\u044f \u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0438\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u0435\u0442 \u043f\u0440\u0438\u043d\u044f\u043b \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0432\u043e\u0437\u0433\u043b\u0430\u0441\u0438\u0442\u044c 2019\n           ORG\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                  \n \u0433\u043e\u0434 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0435 \u0433\u043e\u0434\u043e\u043c \u0421\u0442\u0435\u043f\u0430\u043d\u0430 \u0411\u0430\u043d\u0434\u0435\u0440\u044b \u0432 \u0441\u0432\u044f\u0437\u0438 \u0441 \u043f\u0440\u0430\u0437\u0434\u043d\u043e\u0432\u0430\u043d\u0438\u0435\u043c 110-\u043b\u0435\u0442\u0438\u044f\n                     PER\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                                  \n \u0441\u043e \u0434\u043d\u044f \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043b\u0438\u0434\u0435\u0440\u0430 \u041e\u0423\u041d (\u0411\u0430\u043d\u0434\u0435\u0440\u0430 \u0440\u043e\u0434\u0438\u043b\u0441\u044f 1 \u044f\u043d\u0432\u0430\u0440\u044f 1909 \u0433\u043e\u0434\u0430). \u0412 \n                        ORG                                         \n\u0438\u044e\u043b\u0435 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043d\u044f\u043b \u0416\u0438\u0442\u043e\u043c\u0438\u0440\u0441\u043a\u0438\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u043d\u043e\u0439 \u0441\u043e\u0432\u0435\u0442. \u0412 \u043d\u0430\u0447\u0430\u043b\u0435 \n                                ORG\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500           \n\u043c\u0435\u0441\u044f\u0446\u0430 \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0435\u043c \u043a \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u044b \u041f\u0435\u0442\u0440\u0443 \u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e \u0432\u0435\u0440\u043d\u0443\u0442\u044c \n                                          PER\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500         \n\u0411\u0430\u043d\u0434\u0435\u0440\u0435 \u0437\u0432\u0430\u043d\u0438\u0435 \u0413\u0435\u0440\u043e\u044f \u0423\u043a\u0440\u0430\u0438\u043d\u044b \u043e\u0431\u0440\u0430\u0442\u0438\u043b\u0438\u0441\u044c \u0434\u0435\u043f\u0443\u0442\u0430\u0442\u044b \u0412\u0435\u0440\u0445\u043e\u0432\u043d\u043e\u0439 \u0420\u0430\u0434\u044b. \nPER\u2500\u2500\u2500\u2500              LOC\u2500\u2500\u2500\u2500                     ORG\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500  \n\u041f\u0430\u0440\u043b\u0430\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043d\u0438\u0435 \u0411\u0430\u043d\u0434\u0435\u0440\u044b \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0433\u0435\u0440\u043e\u0435\u043c \n                                     PER\u2500\u2500\u2500\u2500                     \n\u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0432 \u0431\u043e\u0440\u044c\u0431\u0435 \u0441 \u043f\u043e\u0434\u0440\u044b\u0432\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0442\u0438\u0432 \u0423\u043a\u0440\u0430\u0438\u043d\u044b \u0432 \n                                                  LOC\u2500\u2500\u2500\u2500   \n\u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u043e\u043d\u043d\u043e\u043c \u043f\u043e\u043b\u0435, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u00ab\u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0444\u043e\u0432, \n\u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u043f\u0440\u043e\u043f\u0430\u0433\u0430\u043d\u0434\u043e\u0439\u00bb. \u0421\u0442\u0435\u043f\u0430\u043d \u0411\u0430\u043d\u0434\u0435\u0440\u0430 (1909-1959) \u0431\u044b\u043b \n                                   PER\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                 \n\u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043b\u0438\u0434\u0435\u0440\u043e\u0432 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432, \u0432\u044b\u0441\u0442\u0443\u043f\u0430\u044e\u0449\u0435\u0439 \u0437\u0430 \n                 ORG\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500                 \n\u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0433\u043e \u0433\u043e\u0441\u0443\u0434\u0430\u0440\u0441\u0442\u0432\u0430 \u043d\u0430 \u0442\u0435\u0440\u0440\u0438\u0442\u043e\u0440\u0438\u044f\u0445 \u0441 \u0443\u043a\u0440\u0430\u0438\u043d\u043e\u044f\u0437\u044b\u0447\u043d\u044b\u043c \n\u043d\u0430\u0441\u0435\u043b\u0435\u043d\u0438\u0435\u043c. \u0412 2010 \u0433\u043e\u0434\u0443 \u0432 \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u0435\u0437\u0438\u0434\u0435\u043d\u0442\u0441\u0442\u0432\u0430 \u0412\u0438\u043a\u0442\u043e\u0440\u0430 \u042e\u0449\u0435\u043d\u043a\u043e \u0411\u0430\u043d\u0434\u0435\u0440\u0430 \n                                               PER\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 PER\u2500\u2500\u2500\u2500 \n\u0431\u044b\u043b \u043f\u043e\u0441\u043c\u0435\u0440\u0442\u043d\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u043d \u0413\u0435\u0440\u043e\u0435\u043c \u0423\u043a\u0440\u0430\u0438\u043d\u044b, \u043e\u0434\u043d\u0430\u043a\u043e \u0432\u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0438 \u044d\u0442\u043e \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \n                             LOC\u2500\u2500\u2500\u2500                                  \n\u0431\u044b\u043b\u043e \u043e\u0442\u043c\u0435\u043d\u0435\u043d\u043e \u0441\u0443\u0434\u043e\u043c. \n\n\n#######\n#\n#   PHRASE NORM\n#\n#######\n\n\n>>> for span in doc.spans:\n>>>    span.normalize(morph_vocab)\n>>> display(doc.spans[:5])\n>>> {_.text: _.normal for _ in doc.spans if _.text != _.normal}\n[DocSpan(start=6, stop=13, type='LOC', text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', tokens=[...], normal='\u0418\u0437\u0440\u0430\u0438\u043b\u044c'),\n DocSpan(start=17, stop=24, type='LOC', text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', tokens=[...], normal='\u0423\u043a\u0440\u0430\u0438\u043d\u0430'),\n DocSpan(start=25, stop=35, type='PER', text='\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d', tokens=[...], normal='\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d'),\n DocSpan(start=89, stop=106, type='LOC', text='\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', tokens=[...], normal='\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'),\n DocSpan(start=152, stop=158, type='LOC', text='\u0420\u043e\u0441\u0441\u0438\u0438', tokens=[...], normal='\u0420\u043e\u0441\u0441\u0438\u044f')]\n{'\u0418\u0437\u0440\u0430\u0438\u043b\u044f': '\u0418\u0437\u0440\u0430\u0438\u043b\u044c',\n '\u0423\u043a\u0440\u0430\u0438\u043d\u0435': '\u0423\u043a\u0440\u0430\u0438\u043d\u0430',\n '\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438': '\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c',\n '\u0420\u043e\u0441\u0441\u0438\u0438': '\u0420\u043e\u0441\u0441\u0438\u044f',\n '\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432 (\u041e\u0423\u041d)': '\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432 (\u041e\u0423\u041d)',\n '\u0421\u0442\u0435\u043f\u0430\u043d\u0430 \u0411\u0430\u043d\u0434\u0435\u0440\u044b': '\u0421\u0442\u0435\u043f\u0430\u043d \u0411\u0430\u043d\u0434\u0435\u0440\u0430',\n '\u041f\u0435\u0442\u0440\u0443 \u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e': '\u041f\u0435\u0442\u0440 \u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e',\n '\u0411\u0430\u043d\u0434\u0435\u0440\u0435': '\u0411\u0430\u043d\u0434\u0435\u0440\u0430',\n '\u0423\u043a\u0440\u0430\u0438\u043d\u044b': '\u0423\u043a\u0440\u0430\u0438\u043d\u0430',\n '\u0412\u0435\u0440\u0445\u043e\u0432\u043d\u043e\u0439 \u0420\u0430\u0434\u044b': '\u0412\u0435\u0440\u0445\u043e\u0432\u043d\u0430\u044f \u0420\u0430\u0434\u0430',\n '\u0411\u0430\u043d\u0434\u0435\u0440\u044b': '\u0411\u0430\u043d\u0434\u0435\u0440\u0430',\n '\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432': '\u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0443\u043a\u0440\u0430\u0438\u043d\u0441\u043a\u0438\u0445 \u043d\u0430\u0446\u0438\u043e\u043d\u0430\u043b\u0438\u0441\u0442\u043e\u0432',\n '\u0412\u0438\u043a\u0442\u043e\u0440\u0430 \u042e\u0449\u0435\u043d\u043a\u043e': '\u0412\u0438\u043a\u0442\u043e\u0440 \u042e\u0449\u0435\u043d\u043a\u043e'}\n\n\n#######\n#\n#  FACT\n#\n######\n\n\n>>> for span in doc.spans:\n>>>    if span.type == PER:\n>>>        span.extract_fact(names_extractor)\n\n>>> display(doc.spans[:5])\n>>> {_.normal: _.fact.as_dict for _ in doc.spans if _.type == PER}\n[DocSpan(start=6, stop=13, type='LOC', text='\u0418\u0437\u0440\u0430\u0438\u043b\u044f', tokens=[...], normal='\u0418\u0437\u0440\u0430\u0438\u043b\u044c'),\n DocSpan(start=17, stop=24, type='LOC', text='\u0423\u043a\u0440\u0430\u0438\u043d\u0435', tokens=[...], normal='\u0423\u043a\u0440\u0430\u0438\u043d\u0430'),\n DocSpan(start=25, stop=35, type='PER', text='\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d', tokens=[...], normal='\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d', fact=DocFact(slots=[...])),\n DocSpan(start=89, stop=106, type='LOC', text='\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', tokens=[...], normal='\u041b\u044c\u0432\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c'),\n DocSpan(start=152, stop=158, type='LOC', text='\u0420\u043e\u0441\u0441\u0438\u0438', tokens=[...], normal='\u0420\u043e\u0441\u0441\u0438\u044f')]\n{'\u0419\u043e\u044d\u043b\u044c \u041b\u0438\u043e\u043d': {'first': '\u0419\u043e\u044d\u043b\u044c', 'last': '\u041b\u0438\u043e\u043d'},\n '\u0421\u0442\u0435\u043f\u0430\u043d \u0411\u0430\u043d\u0434\u0435\u0440\u0430': {'first': '\u0421\u0442\u0435\u043f\u0430\u043d', 'last': '\u0411\u0430\u043d\u0434\u0435\u0440\u0430'},\n '\u041f\u0435\u0442\u0440 \u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e': {'first': '\u041f\u0435\u0442\u0440', 'last': '\u041f\u043e\u0440\u043e\u0448\u0435\u043d\u043a\u043e'},\n '\u0411\u0430\u043d\u0434\u0435\u0440\u0430': {'last': '\u0411\u0430\u043d\u0434\u0435\u0440\u0430'},\n '\u0412\u0438\u043a\u0442\u043e\u0440 \u042e\u0449\u0435\u043d\u043a\u043e': {'first': '\u0412\u0438\u043a\u0442\u043e\u0440', 'last': '\u042e\u0449\u0435\u043d\u043a\u043e'}}\n\n```\n\n## Evaluation\n\n* Segmentation \u2014 <a href=\"https://github.com/natasha/razdel#quality-performance\">Razdel evalualtion section</a>\n* Embedding \u2014 <a href=\"https://github.com/natasha/navec#evaluation\">Navec evalualtion section</a>\n* Morphology \u2014 <a href=\"https://github.com/natasha/slovnet#morphology-1\">Slovnet Morph evaluation section</a>\n* Syntax \u2014 <a href=\"https://github.com/natasha/slovnet#syntax-1\">Slovnet Syntax evaluation section</a>\n* NER \u2014 <a href=\"https://github.com/natasha/slovnet#ner-1\">Slovnet NER evaluation section</a>\n\n## Support\n\n- Chat \u2014 https://telegram.me/natural_language_processing\n- Issues \u2014 https://github.com/natasha/natasha/issues\n- Commercial support \u2014 https://lab.alexkuk.ru\n\n## Development\n\nTests:\n\n```bash\nmake test\n```\n\nPackage:\n\n```bash\nmake version\ngit push\ngit push --tags\n\nmake clean package publish\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/natasha/natasha",
            "keywords": "natural language processing,russian",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "natasha",
            "package_url": "https://pypi.org/project/natasha/",
            "platform": "",
            "project_url": "https://pypi.org/project/natasha/",
            "project_urls": {
                "Homepage": "https://github.com/natasha/natasha"
            },
            "release_url": "https://pypi.org/project/natasha/1.4.0/",
            "requires_dist": [
                "pymorphy2",
                "razdel (>=0.5.0)",
                "navec (>=0.9.0)",
                "slovnet (>=0.3.0)",
                "yargy (>=0.14.0)",
                "ipymarkup (>=0.8.0)"
            ],
            "requires_python": "",
            "summary": "Named-entity recognition for russian language",
            "version": "1.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8530899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ea5d663e64eb46c2195a40e4eedaf84",
                    "sha256": "e9969865ab1869b44a65e2654ed36b49407d5b7285a937227b05cdace1d13f7c"
                },
                "downloads": -1,
                "filename": "natasha-1.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6ea5d663e64eb46c2195a40e4eedaf84",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 34409674,
                "upload_time": "2020-10-29T09:38:07",
                "upload_time_iso_8601": "2020-10-29T09:38:07.896487Z",
                "url": "https://files.pythonhosted.org/packages/51/8e/ab0745100be276750fb6b8858c6180a1756696572295a74eb5aea77f3bbd/natasha-1.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f05d911a3b49bdec038ec71890dccfef",
                    "sha256": "1dddbe98aad7941ff91f10ac3c1bce8d420c423dd2452b9a4d5249d035353c63"
                },
                "downloads": -1,
                "filename": "natasha-1.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f05d911a3b49bdec038ec71890dccfef",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34416752,
                "upload_time": "2020-10-29T09:38:16",
                "upload_time_iso_8601": "2020-10-29T09:38:16.348865Z",
                "url": "https://files.pythonhosted.org/packages/06/3e/9caa6c28407c35ece7cbff1550bcf7dd2fc8f563e61424842e95805198c7/natasha-1.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}