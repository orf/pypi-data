{
    "0.2.1": {
        "info": {
            "author": null,
            "author_email": "jestimator authors <jestimator@google.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only"
            ],
            "description": "# Amos and JEstimator\n\n*This is not an officially supported Google product.*\n\nThis is the source code for the paper \"[Amos: An Adam-style Optimizer with Adaptive Weight Decay towards Model-Oriented Scale](https://arxiv.org/abs/2210.11693)\".\n\nIt implements __Amos__, an optimizer compatible with the [optax](https://github.com/deepmind/optax) library, and __JEstimator__, a light-weight library with a `tf.Estimator`-like interface to manage [T5X](https://github.com/google-research/t5x)-compatible checkpoints for machine learning programs in [Jax](https://github.com/google/jax), which we use to run experiments in the paper.\n\n## Installation and test\n\nIn order to run a test for Amos, we need to install [Abseil](https://abseil.io/docs/python/quickstart), [Jax](https://github.com/google/jax#installation), [Flax](https://flax.readthedocs.io/en/latest/installation.html) and [Chex](https://pypi.org/project/chex/):\n\n```\npip install absl-py  # Install Abseil\npip install --upgrade pip\npip install --upgrade \"jax[cpu]\"  # Install Jax\npip install flax  # Install Flax\npip install chex  # Install Chex\n```\n\nThen, checkout the repository and run the test:\n\n```\ngit clone --branch=main https://github.com/google-research/jestimator\nPYTHONPATH=. python3 jestimator/amos_test.py\n```\n\n## Run models with JEstimator\n\nThe data pipeline of JEstimator is built on [Tensorflow](https://www.tensorflow.org/install/pip), although in principle it can be replaced by PyTorch DataLoader as well. We also need the [T5X](https://github.com/google-research/t5x#installation) and [FlaxFormer](https://github.com/google/flaxformer) library.\n\n```\npip install tensorflow-cpu  # Install Tensorflow\n\ngit clone --branch=main https://github.com/google-research/t5x\ncd t5x  # Install T5X with TPU support, so we can pre-train on Google Cloud:\npython3 -m pip install -e '.[tpu]' -f \\\n  https://storage.googleapis.com/jax-releases/libtpu_releases.html\ncd ..\n\ngit clone --branch=main https://github.com/google/flaxformer\ncd flaxformer  # Install FlaxFormer:\npip3 install '.[testing]'\ncd ..\n```\n\nThen, we can test a toy linear regression model with JEstimator:\n\n```\nJAX_PLATFORMS=cpu PYTHONPATH=. python3 jestimator/models/linear_regression/linear_regression_test.py\n```\n\nAnd we can train a single layer LSTM model on PTB:\n\n```\nJAX_PLATFORMS=cpu PYTHONPATH=. python3 jestimator/estimator.py \\\n  --module_imp=\"jestimator.models.lstm.lm\" \\\n  --module_config=\"jestimator/models/lstm/lm.py\" \\\n  --module_config.vocab_path=\"jestimator/models/lstm/ptb/vocab.txt\" \\\n  --train_pattern=\"jestimator/models/lstm/ptb/ptb.train.txt\" \\\n  --model_dir=\"$HOME/models/ptb_lstm\" \\\n  --train_batch_size=64 \\\n  --train_consecutive=113 \\\n  --train_shuffle_buf=4096 \\\n  --max_train_steps=200000 \\\n  --check_every_steps=1000 \\\n  --max_ckpt=20 \\\n  --module_config.opt_config.optimizer=\"amos\" \\\n  --module_config.opt_config.learning_rate=0.01 \\\n  --module_config.opt_config.beta=0.98 \\\n  --module_config.opt_config.momentum=0.0 \\\n  --logtostderr\n```\n\nAfter the training completes, we can evaluate the model on validation set:\n\n```\nJAX_PLATFORMS=cpu PYTHONPATH=. python3 jestimator/estimator.py \\\n  --module_imp=\"jestimator.models.lstm.lm\" \\\n  --module_config=\"jestimator/models/lstm/lm.py\" \\\n  --module_config.vocab_path=\"jestimator/models/lstm/ptb/vocab.txt\" \\\n  --eval_pattern=\"jestimator/models/lstm/ptb/ptb.valid.txt\" \\\n  --model_dir=\"$HOME/models/ptb_lstm\" \\\n  --eval_batch_size=1 \\\n  --logtostderr\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "jestimator",
            "package_url": "https://pypi.org/project/jestimator/",
            "platform": null,
            "project_url": "https://pypi.org/project/jestimator/",
            "project_urls": {
                "homepage": "https://github.com/google-research/jestimator",
                "repository": "https://github.com/google-research/jestimator"
            },
            "release_url": "https://pypi.org/project/jestimator/0.2.1/",
            "requires_dist": [
                "absl-py",
                "chex",
                "flax",
                "pytest ; extra == \"dev\"",
                "pytest-xdist ; extra == \"dev\"",
                "pylint>=2.6.0 ; extra == \"dev\"",
                "yapf ; extra == \"dev\""
            ],
            "requires_python": ">=3.7",
            "summary": "Estimator-like interface to manage T5X-compatible checkpoints for machine learning programs in Jax.",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15849124,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "1f58193cbb48c1bd49ada05127976642",
                    "sha256": "8a20e5ed643684189689cf3665f740ec84c30ab14127d118513ab475d6ee2a9f"
                },
                "downloads": -1,
                "filename": "jestimator-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1f58193cbb48c1bd49ada05127976642",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 13925,
                "upload_time": "2022-11-22T03:27:22",
                "upload_time_iso_8601": "2022-11-22T03:27:22.545827Z",
                "url": "https://files.pythonhosted.org/packages/1c/57/142960f14ca4b5030cff85d1ce746147ea5e14044b6a216a91acb3e62155/jestimator-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "367fb816d4658e325363425b535bb38c",
                    "sha256": "727f536470c84c0b8e0c4dc30cd0be528fe19f56632836f8718087fe127a545b"
                },
                "downloads": -1,
                "filename": "jestimator-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "367fb816d4658e325363425b535bb38c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 11998,
                "upload_time": "2022-11-22T03:27:39",
                "upload_time_iso_8601": "2022-11-22T03:27:39.921313Z",
                "url": "https://files.pythonhosted.org/packages/55/ee/e1db09f5e205963e55319d8b97a0026b09192c21edeeb44192b60bacb5db/jestimator-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}