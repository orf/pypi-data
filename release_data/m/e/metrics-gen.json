{
    "0.1": {
        "info": {
            "author": "Or Zilberman",
            "author_email": "zilbermanor@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mlrun/metrics-gen",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "metrics-gen",
            "package_url": "https://pypi.org/project/metrics-gen/",
            "platform": "",
            "project_url": "https://pypi.org/project/metrics-gen/",
            "project_urls": {
                "Homepage": "https://github.com/mlrun/metrics-gen"
            },
            "release_url": "https://pypi.org/project/metrics-gen/0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Fake deployment and data generator",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12767259,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e7e1d01279ee8533925cf3c13cfd517c",
                    "sha256": "0ea2a82e615bcf37e0f656fcb24b7d0f9647ed0ce51355f0a419467c5932ddcd"
                },
                "downloads": -1,
                "filename": "metrics_gen-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e7e1d01279ee8533925cf3c13cfd517c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 20574,
                "upload_time": "2022-01-31T18:55:05",
                "upload_time_iso_8601": "2022-01-31T18:55:05.560583Z",
                "url": "https://files.pythonhosted.org/packages/26/2f/5096203843f89ba97a2e04ea21f9391cb8c9e6dc057f37cde563a1aeded1/metrics_gen-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f368327c9c6065ac98ece118257731b2",
                    "sha256": "6b46510a3808b18fb4a2d7ad6bd1bcf6ac5f8db51993c9527bb3adc598025cf4"
                },
                "downloads": -1,
                "filename": "metrics_gen-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f368327c9c6065ac98ece118257731b2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19177,
                "upload_time": "2022-01-31T18:55:07",
                "upload_time_iso_8601": "2022-01-31T18:55:07.657230Z",
                "url": "https://files.pythonhosted.org/packages/c3/23/df56d5197cce5552828242eb5a305ab8bd321805701b80897b03c551317e/metrics_gen-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Or Zilberman",
            "author_email": "zilbermanor@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# metrics-gen\n\ndummy metrics generator\n\n## Getting Started\nMetrics generator is built upon three main components:\n\n- **Deployment**: The indexes of the table, for example:\n  - symbol in stock market.\n  - (data_center, device_id) for devices in data centers\n- **Static Data**: Static data regarding the deployment, for example:\n  - model_number for a device\n  - score for a model\n- **Metrics**: Continuous metrics to generate about the deployment, for example:\n  - cpu_utilization of a device\n  - price of a stock\n\nThe first step in setting up the generator is creating a deployment.  Then using the deployment, you can generate static data or continuous stream of metrics.\n\n### Create a deployment from configuration\nTo create a deployment from configuration you need to provide a **yaml** file containing the following:\n\n```yaml\ndeployment:\n    <level_name>:\n      faker: <faker_type>\n      num_items: <num_items in the level>\n```\n\nWhere `level_name` will be the name of the index, `faker_type` is the name of the [faker generator](https://github.com/joke2k/faker) and `num_items` is how many keys to create for this index.  \nEach provided level will create another `num_items` instances for each entry in it's previous levels.\n\n**Example**: Given the following configuration yaml file:\n\n```yaml\ndeployment:\n    device:\n      faker: msisdn\n      num_items: 2\n    core:\n      faker: msisdn\n      num_items: 2\n```\n\nand running the following command:\n```python\nfrom metrics_gen.deployment_generator import deployment_generator\n\ndep_gen = deployment_generator()\ndeployment = dep_gen.generate_deployment(configuration=configuration)\n```\n\nWill generate the following example deployment:\n\n| | device      |     core |\n|- |- |-|\n| 0 | 4120271911677 | 6950611701382 |\n| 1 | 4120271911677 | 2255426557707 |\n| 2 | 4120271911677 | 7717168891372 |\n| 3 | 2260158002886 | 3213635322383 |\n| 4 | 2260158002886 | 4007792940086 |\n| 5 | 2260158002886 | 3720953132595 |\n\n**Notice** that each extra level, multiplies the number of items created by `num_item`, thus we got 2 * 3 = 6 items created.\n\n### Create Static Data\nTo create a static data generator you need to supply a deployment dataframe and a configuration yaml.\n\nThe static data generator knows how to generator from two kinds of feature configurations: **range** and **choice** which should be specified in the yaml.\n\n```yaml\nstatic:\n    <feature_name>:\n        kind: range\n        min_range: <min_feature_range>, defaults to 0\n        max_range: <max_feature_range>\n        as_integer: <int or float>, defaults to False\n    <feature_name>:\n        kind: choice\n        choices: <list of possible choices>\n```\n\nEach provided feature will generate a new feature column in the generated dataframe.\n\nExample: Given the following yaml:\n\n```yaml\nstatic:\n    models: \n      kind: range\n      min_range: 10\n      max_range: 15\n      as_integer: True\n    country: \n      kind: choice\n      choices: [A, B, C, D, E, F, G]\n```\n\nAnd the previous deployment:\n\n```python\nfrom metrics_gen.static_data_generator import Static_data_generator\n\n\nstatic_data_generator = Static_data_generator(\n    deployment, static_configuration\n)\n\ngenerated_df = static_data_generator.generate_static_data()\n```\n\nWill generate the following dataframe:\n\n\n|  | device | core | models | country |\n|-- |------- |----- |------- |-----\n| 0 | 4120271911677 | 6950611701382  |    13   |    A |\n| 1 | 4120271911677 | 2255426557707  |    14   |    C |\n| 2 | 4120271911677 | 7717168891372  |    14   |    G |\n| 3 | 2260158002886 | 3213635322383  |    14   |    G |\n| 4 | 2260158002886 | 4007792940086  |    11   |    G |\n| 5 |  2260158002886 | 3720953132595  |    14   |    D |\n\n### Create Continuous Metrics\n\nTo create a continuous metrics stream you need to provide a deployment dataframe and metrics creation configuration yaml.\n\n```yaml\nerrors:\n    rate_in_ticks: < ~ticks between errors>\n    length_in_ticks: < ~length of error mode>\ntimestamps:\n    interval: <time between samples in seconds>\n    stochastic_interval: <create random intervals (around interval)>\nmetrics:\n  <metric name>:\n    accuracy: <decimals to produce>\n    distribution: normal\n    distribution_params:\n        mu: <mean>\n        noise: <noise>\n        sigma: <std>\n    is_threshold_below: <True to produce max when in error mode, False for min>\n    past_based_value: <True to add the latest metric to the last result (like in daily stock market), False to replace normally)\n    produce_max: <True for candles-like presentation>\n    produce_min: <True for candles-like presentation>\n    validation:\n        distribution: # per-sample validation\n            max: <max value for individual sample>\n            min: <min value for individual sample>\n            validate: <True to activate validation>\n      metric: # metric level validations\n        max: <max value for overall-metric sample (only applicable to past-based-values)>\n        min: <min value for overall-metric sample (only applicable to past-based-values)>\n        validate: <True to activate validation>\n```\n\nEach configured feature will generate additional metric for your deployment.\n\nExample: Given the following yaml\n\n```yaml\nerrors: {length_in_ticks: 10, rate_in_ticks: 5}\ntimestamps: {interval: 5s, stochastic_interval: true}\nmetrics:\n  cpu_utilization:\n    accuracy: 2\n    distribution: normal\n    distribution_params: {mu: 70, noise: 0, sigma: 10}\n    is_threshold_below: true\n    past_based_value: false\n    produce_max: false\n    produce_min: false\n    validation:\n      distribution: {max: 1, min: -1, validate: false}\n      metric: {max: 100, min: 0, validate: true}\n  throughput:\n    accuracy: 2\n    distribution: normal\n    distribution_params: {mu: 250, noise: 0, sigma: 20}\n    is_threshold_below: false\n    past_based_value: false\n    produce_max: false\n    produce_min: false\n    validation:\n      distribution: {max: 1, min: -1, validate: false}\n      metric: {max: 300, min: 0, validate: true}\n```\n\nAnd the previous deployment:\n\n```python\nfrom metrics_gen.metrics_generator import Generator_df\n\nmetrics_generator = Generator_df(metrics_configuration, user_hierarchy=deployment)\ngenerator = metrics_generator.generate(as_df=True)\n\ndf = next(generator)\n```\n\nWill generate the following dataframe:\n\n| timestamp                  \t| core          \t| device        \t| cpu_utilization    \t| cpu_utilization_is_error \t| throughput         \t| throughput_is_error \t| is_error \t|\n|----------------------------\t|---------------\t|---------------\t|--------------------\t|--------------------------\t|--------------------\t|---------------------\t|----------\t|\n| 2022-01-31 19:20:21.007087 \t| 2113309831673 \t| 4469221325973 \t| 100.0              \t| True                     \t| 0.0                \t| True                \t| True     \t|\n| 2022-01-31 19:20:21.007087 \t| 2115933686087 \t| 4469221325973 \t| 100.0              \t| True                     \t| 235.0679405785135  \t| False               \t| False    \t|\n| 2022-01-31 19:20:21.007087 \t| 0175482390171 \t| 4469221325973 \t| 70.26657388732976  \t| False                    \t| 208.34378630077305 \t| False               \t| False    \t|\n| 2022-01-31 19:20:21.007087 \t| 1626403145660 \t| 4038890878426 \t| 59.932750968399404 \t| False                    \t| 217.4335871243806  \t| False               \t| False    \t|\n| 2022-01-31 19:20:21.007087 \t| 7247058922310 \t| 4038890878426 \t| 83.98361382584898  \t| False                    \t| 265.3476318369042  \t| False               \t| False    \t|\n| 2022-01-31 19:20:21.007087 \t| 7030239128061 \t| 4038890878426 \t| 100.0              \t| False                    \t| 225.16604191632058 \t| False               \t| False    \t|\n\nTo generate new samples all we need to do is call `next(generator)` and a new sample will be generated.\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mlrun/metrics-gen",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "metrics-gen",
            "package_url": "https://pypi.org/project/metrics-gen/",
            "platform": "",
            "project_url": "https://pypi.org/project/metrics-gen/",
            "project_urls": {
                "Homepage": "https://github.com/mlrun/metrics-gen"
            },
            "release_url": "https://pypi.org/project/metrics-gen/0.1.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Fake deployment and data generator",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12767259,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9f5381d6c2fc2f3a30dfeb2e232bd0f3",
                    "sha256": "8bd1c335f0c4732f2a8735525800e75f73b050535110f28be1ac4cb2f821a01c"
                },
                "downloads": -1,
                "filename": "metrics_gen-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9f5381d6c2fc2f3a30dfeb2e232bd0f3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 20576,
                "upload_time": "2022-02-02T16:33:20",
                "upload_time_iso_8601": "2022-02-02T16:33:20.965181Z",
                "url": "https://files.pythonhosted.org/packages/21/20/47efe1df842540405f93be0f4bf71cc074515f036ea586272ea9ba6c5e83/metrics_gen-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7333190ba56b88a69a8b41141f8e5c1d",
                    "sha256": "bea49e15f5230b5ab85e531661318cec9f1ba2cda857dd63e9b50597e2e47031"
                },
                "downloads": -1,
                "filename": "metrics_gen-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "7333190ba56b88a69a8b41141f8e5c1d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 19235,
                "upload_time": "2022-02-02T16:33:23",
                "upload_time_iso_8601": "2022-02-02T16:33:23.029908Z",
                "url": "https://files.pythonhosted.org/packages/30/01/f87f9d2bcc4f42df971e67322eea991f837bf3b9212e81aa656dacf631a8/metrics_gen-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}