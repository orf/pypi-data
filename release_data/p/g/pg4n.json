{
    "0.1.0": {
        "info": {
            "author": "Ella Elomaa",
            "author_email": "ella.elomaa@tuni.fi",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pg4n",
            "package_url": "https://pypi.org/project/pg4n/",
            "platform": null,
            "project_url": "https://pypi.org/project/pg4n/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pg4n/0.1.0/",
            "requires_dist": [
                "sqlglot (>=6.3.2,<7.0.0)",
                "pytest (>=7.1.3,<8.0.0)",
                "sphinx (>=5.2.3,<6.0.0)",
                "psycopg[binary] (>=3.1.3,<4.0.0)",
                "pytest-postgresql (>=4.1.1,<5.0.0)",
                "pexpect (>=4.8.0,<5.0.0)",
                "sphinx-autodoc-typehints (>=1.19.4,<2.0.0)",
                "myst-parser (>=0.18.1,<0.19.0)",
                "sphinx-rtd-theme (>=1.0.0,<2.0.0)",
                "pyte (>=0.8.1,<0.9.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "PostgreSQL for novices - helps debug PostgreSQL queries",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15846193,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b38367543b66c8b6c0f05e6cf371b69d",
                    "sha256": "961bb4ae9bfd6322b97f9695ac79454e8bcae2e7c6fb16c2d18cc285f247a5e9"
                },
                "downloads": -1,
                "filename": "pg4n-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b38367543b66c8b6c0f05e6cf371b69d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 67828,
                "upload_time": "2022-11-20T16:03:18",
                "upload_time_iso_8601": "2022-11-20T16:03:18.704653Z",
                "url": "https://files.pythonhosted.org/packages/cc/e5/69574aaf9b1d7865cdd2c2b236c3b60bf7cc1888b29996115521e98d00a8/pg4n-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ac08324eb7b8624bb428dc1e9aae04f5",
                    "sha256": "f30c42fbe17cbe7074dd6622c76a583e07cf95b57f807bf3138695996897bc8c"
                },
                "downloads": -1,
                "filename": "pg4n-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ac08324eb7b8624bb428dc1e9aae04f5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 64300,
                "upload_time": "2022-11-20T16:03:20",
                "upload_time_iso_8601": "2022-11-20T16:03:20.418178Z",
                "url": "https://files.pythonhosted.org/packages/a6/f3/9ef63bb607fd16916e3dba35fe19e99ef6ccd6effc7ce711549c83630c64/pg4n-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Jesper Niemel\u00e4",
            "author_email": "jesper.niemela@tuni.fi",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11"
            ],
            "description": "# PostgreSQL for novices\n\n[\ud83d\udcc4 Documentation](https://project-c-sql.github.io/)\n\nThis README is meant for developers of the project, and not for end users. For end users, please see the documentation linked above.\n\n- [PostgreSQL for novices](#postgresql-for-novices)\n  - [Notes for developers](#notes-for-developers)\n    - [Poetry](#poetry)\n    - [Imports](#imports)\n    - [Running tests](#running-tests)\n      - [Using docker](#using-docker)\n    - [Building documents](#building-documents)\n    - [Linting](#linting)\n\n## Notes for developers\n\n### Poetry\n\nThis project uses [Poetry](https://python-poetry.org/) for packaging. Although one should refer to [Poetry docs](https://python-poetry.org/docs/) for a thorough introduction, here's a short summary of the intended workflow with Poetry:\n\n- To install all dependencies and the application, type `poetry install`. After installation, if the Python scripts folder is in your PATH, you should be able to invoke `main.main()` with `pg4n`.\n- To make VS Code use Poetry's virtual environment, type `poetry env info`, copy virtual environment executable path, press F1 and type `Python: Select Interpreter` > `Enter interpreter path...` > paste path and press `<ENTER>`.\n- To add/remove a dependency, type `poetry add <dep>`/`poetry remove <dep>`.\n- To execute a command from within virtual environment shell, type `poetry run <cmd>`.\n- To enter a shell session within the Poetry virtual environment, type `poetry shell`.\n\n### Imports\n\nDuring development, you must run the program as a module, e.g., `poetry run python -m src.pg4n.main`, so that the imports work.\n\n### Running tests\n\nHaving PostgreSQL running on port 5432, do `poetry run pytest`.\n\nYou may need to provide environment variables that match your config:\n\n| Variable     | Default value   | Description                                             |\n| ------------ | --------------- | ------------------------------------------------------- |\n| `PGHOST`     | `127.0.0.1`     | Hostname of the PostgreSQL server.                      |\n| `PGPORT`     | `5432`          | Port to an active PostgreSQL instance.                  |\n| `PGUSER`     | `postgres`      | The user that will be used to manage the test database. |\n| `PGPASSWORD` |                 | Password, in case password authentication is used.      |\n| `PGDBNAME`   | `test_database` | Database name.                                          |\n \nFor example, if PostgreSQL is on port 5433, just do `PGPORT=5433 poetry run pytest` (Bash syntax).\n\n#### Using docker\n\nTo get a similar PostgreSQL instance as with GitHub Actions workflow:<br>\n`docker run --rm -P -p 127.0.0.1:5432:5432 --name pg -e POSTGRES_PASSWORD=postgres -d postgres:14.5-alpine`\n\nYou'll need to tell pytest the password: `PGPASSWORD=postgres poetry run pytest`.\n\n### Building documents\n\n1. If `docs/api` is not up-to-date or doesn't exist, run:<br>`poetry run sphinx-apidoc -f -o docs/api src/pg4n '*/test*'`\n2. To generate the documentation:<br>`poetry run sphinx-build -b html docs docs/build`\n\nNote that the GitHub Pages site is only updated on pushes to `main` branch.\n\n### Linting\n\nFor linting, you need the CI tools: `poetry install --with=ci`. The tools used are:\n- `black` for formatting\n- `pylint` for linting\n- `mypy` for static type checking\n- `isort` for sorting imports\n\nTo get a grade that the CI/CD pipeline would give you, you can do `poetry run scripts/ci-grade.sh` to run all the checks. The output is possibly long, so pipe it to a file perusal filter such as `less` to scroll through it and search for things of concern, e.g., `summary` to see scores.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pg4n",
            "package_url": "https://pypi.org/project/pg4n/",
            "platform": null,
            "project_url": "https://pypi.org/project/pg4n/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pg4n/0.1.1/",
            "requires_dist": [
                "sqlglot (>=6.3.2,<7.0.0)",
                "pytest (>=7.1.3,<8.0.0)",
                "sphinx (>=5.2.3,<6.0.0)",
                "psycopg[binary] (>=3.1.3,<4.0.0)",
                "pytest-postgresql (>=4.1.1,<5.0.0)",
                "pexpect (>=4.8.0,<5.0.0)",
                "sphinx-autodoc-typehints (>=1.19.4,<2.0.0)",
                "myst-parser (>=0.18.1,<0.19.0)",
                "sphinx-rtd-theme (>=1.0.0,<2.0.0)",
                "pyte (>=0.8.1,<0.9.0)",
                "pyparsing (>=3.0.9,<4.0.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "PostgreSQL for novices - helps debug PostgreSQL queries",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15846193,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4b0a7487699fcd9a33b736ef1f86829f",
                    "sha256": "ac62fe48c6fbdc189356ef03f116b8b832dc5a3c5e20e540a178a64cf88ebf49"
                },
                "downloads": -1,
                "filename": "pg4n-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4b0a7487699fcd9a33b736ef1f86829f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 101034,
                "upload_time": "2022-11-21T22:12:05",
                "upload_time_iso_8601": "2022-11-21T22:12:05.084799Z",
                "url": "https://files.pythonhosted.org/packages/32/41/4825d4be58e4b6c7a7688397e477748c9692ceebb2c1fb1fa69181b9e6be/pg4n-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d0db25d5443256ef3cb752dec20c867d",
                    "sha256": "811780dc987f637dabca84dbf7fcb480eaa2cf36cc7d8d735a0e823363f5a2ce"
                },
                "downloads": -1,
                "filename": "pg4n-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d0db25d5443256ef3cb752dec20c867d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 94140,
                "upload_time": "2022-11-21T22:12:07",
                "upload_time_iso_8601": "2022-11-21T22:12:07.169559Z",
                "url": "https://files.pythonhosted.org/packages/ab/76/afd3fd15fbcdd8988d479d3f843282424d909b5202bb91bb7a271c35a0a5/pg4n-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}