{
    "0.0.1a1": {
        "info": {
            "author": "",
            "author_email": "Tinyman <hello@tinyman.org>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tealish",
            "package_url": "https://pypi.org/project/tealish/",
            "platform": null,
            "project_url": "https://pypi.org/project/tealish/",
            "project_urls": {
                "Bug Tracker": "https://github.com/Hipo/tealish/issues",
                "Homepage": "https://github.com/Hipo/tealish"
            },
            "release_url": "https://pypi.org/project/tealish/0.0.1a1/",
            "requires_dist": [
                "textX (>=3.0.0)",
                "click (>=8.1.3)",
                "requests (>=2.0.0)",
                "py-algorand-sdk (>=1.18.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "The Tealish language for the Algorand Virtual Machine.",
            "version": "0.0.1a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15870743,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "38ddd13152aa5f237a120cc599d9910c",
                    "sha256": "1848c5d0b6634fe52c0b4bf162f5cc76affa074061398182e46da9120c2e4a13"
                },
                "downloads": -1,
                "filename": "tealish-0.0.1a1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "38ddd13152aa5f237a120cc599d9910c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 37545,
                "upload_time": "2022-11-23T18:04:09",
                "upload_time_iso_8601": "2022-11-23T18:04:09.248314Z",
                "url": "https://files.pythonhosted.org/packages/b0/3a/a2ee5ba063cc004c255ead3c9b7c8b0c122013034d1b40b5146c5997a0d4/tealish-0.0.1a1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ec9b7111ac9bd601943e2d0651328fc",
                    "sha256": "dd2a6f3c467a86b4b276ef17e233d8e376d73a4450e4213662262e1d1537fe48"
                },
                "downloads": -1,
                "filename": "tealish-0.0.1a1.tar.gz",
                "has_sig": false,
                "md5_digest": "6ec9b7111ac9bd601943e2d0651328fc",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 40603,
                "upload_time": "2022-11-23T18:04:11",
                "upload_time_iso_8601": "2022-11-23T18:04:11.168323Z",
                "url": "https://files.pythonhosted.org/packages/bf/11/da75ea56b5cceac104a8d808a64b7d972a79c19941c0f7bf6963c3594af1/tealish-0.0.1a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1a2": {
        "info": {
            "author": "",
            "author_email": "Tinyman <hello@tinyman.org>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "![](tealish_header.png)\n\nTealish is a readable language for the Algorand Virtual Machine. It enables developers to write TEAL in a procedural style optimized for readability. \n\nTealish transpiles to Teal rather than compiling directly to AVM bytecode. The produced Teal is as close to handwritten idiomatic Teal as possible.\nThe original source Tealish (including comments) is included as comments in the generated Teal.\nThe generated Teal is intended to be readable and auditable.\nThe generated Teal should not be surprising - the Tealish writer should be able to easily imagine the generated Teal.\n\nTealish is not a general purpose programming language. It is designed specifically for writing contracts for the AVM, optimizing for common patterns. \n\n## Status\nTealish is has been used to write large production contracts but it is not currently considered Production Ready for general use. It may have unexpected behavior outside of the scenarios it has been used for until now.\n\n## Docs\n\nhttps://tealish.readthedocs.io/\n\n## Installation\n\n`pip install tealish`\n\n## Minimal Example\nA simple example demonstrating assertions, state, if statements and inner transactions:\n\n```python\n#pragma version 6\n\nif Txn.OnCompletion == UpdateApplication:\n    assert(Txn.Sender == Global.CreatorAddress)\n    exit(1)\nend\n\nassert(Txn.OnCompletion == NoOp)\n\nint counter = app_global_get(\"counter\")\ncounter = counter + 1\napp_global_put(\"counter\", counter)\n\nif counter == 10:\n    inner_txn:\n        TypeEnum: Pay\n        Receiver: Txn.Sender\n        Amount: 10000000\n    end\nelif counter > 10:\n    exit(0)\nend\n\nexit(1)\n```\n\n## Compiling\n\n```\n    tealish compile examples/minimal_example/counter_prize.tl\n```\nThis will produce [`counter_prize.teal`](examples/minimal_example/build/counter_prize.teal) in the [`build`](examples/minimal_examplebuild/) subdirectory.\n\n## Editor Support\n\nA VS Code extension for syntax highlighting of Tealish & TEAL is available [here](https://www.dropbox.com/s/zn3swrfxkyyelpi/tealish-0.0.1.vsix?dl=0)\n\n\n## Starter Template\n\n```python\n#pragma version 7\n\nif Txn.ApplicationID == 0:\n    # Create app\n    exit(1)\nend\n\nswitch Txn.OnCompletion:\n    NoOp: main\n    OptIn: opt_in\n    CloseOut: close_out\n    UpdateApplication: update_app\n    DeleteApplication: delete_app\nend\n\nblock opt_in:\n    # Disallow Opt In\n    exit(0)\nend\n\nblock close_out:\n    # Disallow Closing Out\n    exit(0)\nend\n\nblock update_app:\n    # Only allow the Creator to update the app\n    exit(Txn.Sender == Global.CreatorAddress)\nend\n\nblock delete_app:\n    # Only allow the Creator to delete the app\n    exit(Txn.Sender == Global.CreatorAddress)\nend\n\nblock main:\n    switch Txn.ApplicationArgs[0]:\n        \"method_a\": method_a\n        \"method_b\": method_b\n        \"method_c\": method_c\n    end\n\n    block method_a:\n        # some statements here\n        exit(1)\n    end\n\n    block method_b:\n        # some statements here\n        exit(1)\n    end\n\n    block method_c:\n        # some statements here\n        exit(1)\n    end\nend\n```\n\n## Design Goals\nTealish is designed first and foremost to be a more readable version of Teal. \nThe biggest difference between Teal and Tealish is the stack is made implicit in Tealish instead of being explicit as in Teal. \n\nReadability is achieved by the following:\n- Multiple operations on a single line\n- Semantic names for scratch slots (variables)\n- Aliases for values on stack\n- Named constants\n- High level language concepts (if/elif/else, loops, switches)\n- A simple style convention\n\nSafety Features:\n- Readability\n- Named scratch slots\n- Scoped scratch slots\n- Type checking\n\nAny Teal opcode can be used in Tealish in a procedural style. Additionally there is syntactic sugar for some common operations.\nWhen explicit stack manipulation is required raw Teal can be used inline within a Tealish program.\n\nTealish is a procedural language, executed from top to bottom. Statements can exist inside blocks or at the top level.\nThe first statement of a program is the entry point of the program. The program can exit on any line.\nExecution can branch from one block to another using `jump` or `switch` statements.\n\nBlocks are used to define scopes. Variables, Functions and Blocks are scoped to the block they are defined in and are available to any nested blocks.\n\nBlocks are not functions:\n- they do not take arguments\n- they do not have independent stack space\n- they are not re-entrant\n\nFunctions are used to define reusable pieces of functionality. They can take arguments and return values. They can read variables from the scope in which they are defined but they may not assign to variables outside their local scope. Functions may have side effects through the use of state manipulation or inner transactions.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tealish",
            "package_url": "https://pypi.org/project/tealish/",
            "platform": null,
            "project_url": "https://pypi.org/project/tealish/",
            "project_urls": {
                "Bug Tracker": "https://github.com/Hipo/tealish/issues",
                "Homepage": "https://github.com/Hipo/tealish"
            },
            "release_url": "https://pypi.org/project/tealish/0.0.1a2/",
            "requires_dist": [
                "textX (>=3.0.0)",
                "click (>=8.1.3)",
                "requests (>=2.0.0)",
                "py-algorand-sdk (>=1.18.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "The Tealish language for the Algorand Virtual Machine.",
            "version": "0.0.1a2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15870743,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "22f3f8174494ebb858e90dbefa1de069",
                    "sha256": "dc28409a68793b85c93663ca824fed8c933e6bc50bf9d3caad423f8b9f62235c"
                },
                "downloads": -1,
                "filename": "tealish-0.0.1a2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "22f3f8174494ebb858e90dbefa1de069",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 36551,
                "upload_time": "2022-11-23T19:30:38",
                "upload_time_iso_8601": "2022-11-23T19:30:38.172568Z",
                "url": "https://files.pythonhosted.org/packages/ab/17/b54c69f44c708b2d1ad7c32f1136caf446f7dd3371c9ae7919a8237444fd/tealish-0.0.1a2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "91c31566e036b2b5dc91b366870835ba",
                    "sha256": "843def3245c157956dfd9f8c61bf47a91e556dadf946276709fa5c9392de9111"
                },
                "downloads": -1,
                "filename": "tealish-0.0.1a2.tar.gz",
                "has_sig": false,
                "md5_digest": "91c31566e036b2b5dc91b366870835ba",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 38613,
                "upload_time": "2022-11-23T19:30:40",
                "upload_time_iso_8601": "2022-11-23T19:30:40.603213Z",
                "url": "https://files.pythonhosted.org/packages/a2/c7/b9b036f7d212adff58130e29b979a560254bee3cdbd521b9e1fc73a410a4/tealish-0.0.1a2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}