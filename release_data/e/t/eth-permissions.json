{
    "0.2.2": {
        "info": {
            "author": "Ensuro",
            "author_email": "dev@ensuro.co",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Programming Language :: Python"
            ],
            "description": "[![Project generated with PyScaffold](https://img.shields.io/badge/-PyScaffold-005CA0?logo=pyscaffold)](https://pyscaffold.org/)\n\n# Eth permissions audit library\n\nThis project defines a simple library for obtaining smart contract permissions and building a graph.\n\nIt's aimed at contracts using [Openzeppelin's AccessControl module](https://docs.openzeppelin.com/contracts/3.x/api/access#AccessControl).\n\n# Installation\n\nSimply install with `pip` or your preferred package manager:\n\n```\npip install eth-permissions\n```\n\n# Usage\n\nWe use [eth-prototype](https://pypi.org/project/eth-prototype/)'s wrappers for accessing the blockchain information. The simplest way to use it is to export the following environment variables:\n\n```sh\nexport DEFAULT_PROVIDER=w3\n\n# You can use any json-rpc node supported by web3py.\nexport WEB3_PROVIDER_URI=https://polygon-mainnet.g.alchemy.com/v2/<YOUR KEY>\n```\n\nWith that set, getting the permissions graph is very simple:\n\n```python\nfrom eth_permissions.roles import get_registry, Role\nfrom eth_permissions.graph import build_graph\n\n# Optionally register any known roles\nknown_roles = [\"GUARDIAN_ROLE\", \"LEVEL1_ROLE\", \"LEVEL2_ROLE\", \"LEVEL3_ROLE\"]\nroles_registry = get_registry()\nroles_registry.add_roles([Role(name) for name in known_roles])\n\n# Build the graph\ncontract_address = \"0x47E2aFB074487682Db5Db6c7e41B43f913026544\"\n\ng = build_graph(\"IAccessControl\", contract_address)\ng.render(\"my_permissions.gv\", format=\"svg\")\n```\n\nThis will save the graphviz file in `my_permissions.gv` and render it in `my_permissions.gv.svg`. The svg format was chosen for this example because it supports tooltips.\n\n## Getting the permissions snapshot for programmatic use\n\nIn some cases you may want just the permissions in a consistent datastructure to use from your code.\n\nExport the eth node environment variables as above and use the `chaindata` module to get the full permissions detail:\n\n```python\nfrom eth_permissions.chaindata import EventStream\n\nstream = EventStream(\"IAccessControl\", \"0x47E2aFB074487682Db5Db6c7e41B43f913026544\")\n\nstream.snapshot\n\n# [\n#  {'role': Role('DEFAULT_ADMIN_ROLE'),\n#   'members': ['0xCfcd29CD20B6c64A4C0EB56e29E5ce3CD69336D2']},\n#  {'role': Role('UNKNOWN ROLE: 0x2582...a559'),\n#   'members': ['0x9dA2192C820C5cC37d26A3F97d7BcF1Bc04232A3']},\n#  ...\n#  {'role': Role('UNKNOWN ROLE: 0xf17c...fd8a'),\n#   'members': ['0x76B349e14a5B5FAF8090313Aa393e1b37aC5E126']},\n# ]\n```\n\nAs well as in the previous example, you can register your roles to get the actual names in the result.\n\n# App\n\nCheck [docs/App](docs/App.md) for a simple app that exposes this API over http for use on a frontend app.\n\n# TODO\n\n- Add support for `Ownable` contracts\n- Address book\n- Add multisig intelligence (detect when a role member is a multisig and obtain its members)\n- Timelock detection\n",
            "description_content_type": "text/markdown; charset=UTF-8; variant=GFM",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/pyscaffold/pyscaffold/",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "eth-permissions",
            "package_url": "https://pypi.org/project/eth-permissions/",
            "platform": "any",
            "project_url": "https://pypi.org/project/eth-permissions/",
            "project_urls": {
                "Documentation": "https://pyscaffold.org/",
                "Homepage": "https://github.com/pyscaffold/pyscaffold/"
            },
            "release_url": "https://pypi.org/project/eth-permissions/0.2.2/",
            "requires_dist": [
                "eth-prototype[web3]",
                "graphviz",
                "importlib-metadata ; python_version < \"3.8\"",
                "setuptools ; extra == 'testing'",
                "pytest ; extra == 'testing'",
                "pytest-cov ; extra == 'testing'"
            ],
            "requires_python": "",
            "summary": "Add a short description here!",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16113609,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d7352130cd3434a3551a178e6d0c2f51",
                    "sha256": "88e6bed5097cd68092af252dc8c947d6ff517e42ea9a21529734035503fd1b47"
                },
                "downloads": -1,
                "filename": "eth_permissions-0.2.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d7352130cd3434a3551a178e6d0c2f51",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7698,
                "upload_time": "2022-12-06T23:23:29",
                "upload_time_iso_8601": "2022-12-06T23:23:29.292174Z",
                "url": "https://files.pythonhosted.org/packages/97/8f/0245773f4a2a80e4ceba31ed53ce95dd1301ce25b33256bd61dede097141/eth_permissions-0.2.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ef9498ed16e7147149019e75d02e679",
                    "sha256": "a6d9ee8492e148454e8cd4fc131ea74fe759be849ceff90ef70f1362308ee963"
                },
                "downloads": -1,
                "filename": "eth-permissions-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "6ef9498ed16e7147149019e75d02e679",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15409,
                "upload_time": "2022-12-06T23:23:32",
                "upload_time_iso_8601": "2022-12-06T23:23:32.121641Z",
                "url": "https://files.pythonhosted.org/packages/e2/e9/358803139f8fe77b3074c469482a941918ac6ec6fd976039a3426d641bea/eth-permissions-0.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}