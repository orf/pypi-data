{
    "1.0.0": {
        "info": {
            "author": "abuztrade",
            "author_email": "abuztrade.work@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Customer Service",
                "Intended Audience :: Developers",
                "Intended Audience :: Financial and Insurance Industry",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Communications :: Email"
            ],
            "description": "Library for interacting with the SQLite database.\r\n\r\nExample:\r\n\r\n```python\r\nfrom mwsqlite import MWBase\r\n\r\n# create database object (1)\r\nbase = MWBase(\r\n    filename=\"file.db\",\r\n    tables={\r\n        \"users\": {\r\n            \"first_name\": str,\r\n            \"last_name\": str,\r\n            \"middle_name\": str,\r\n            \"age\": int,\r\n            \"info\": dict,\r\n            \"is_admin\": bool,\r\n            \"list_rewards\": list,\r\n        }\r\n    }\r\n)\r\n\r\n# add user to database\r\nbase.users.add(\r\n    first_name=\"John\",\r\n    last_name=\"Doe\",\r\n    middle_name=\"Smith\",\r\n    age=18,\r\n    info={\"description\": \"some info\"},\r\n    is_admin=False,\r\n    list_rewards=[{\"id\": 1, \"name\": \"reward1\"}, {\"id\": 2, \"name\": \"reward2\"}],\r\n)\r\n\r\n# get one user from database\r\nuser = base.users.get_one(name=\"John\", age=18)\r\nprint(user)\r\n# MWBase.users.Row({'first_name': 'John', 'last_name': 'Doe', 'middle_name': 'Smith', 'age': 18, 'info': {'description': 'some info'}, 'is_admin': False, 'list_rewards': [{'id': 1, 'name': 'reward1'}, {'id': 2, 'name': 'reward2'}]})\r\n\r\nbase.users.update(\r\n    Where(first_name=\"John\"),\r\n    first_name=\"Jane\",\r\n)\r\n\r\nuser = base.users.get_one(name=\"Jane\", age=18)\r\nprint(user)\r\n#  MWBase.users.Row({'first_name': 'Jane', 'last_name': 'Doe', 'middle_name': 'Smith', 'age': 18, 'info': {'description': 'some info'}, 'is_admin': False, 'list_rewards': [{'id': 1, 'name': 'reward1'}, {'id': 2, 'name': 'reward2'}]})\r\n\r\nprint(user.age)\r\n# 18\r\nuser.update(age=19)\r\nprint(user.age)\r\n# 19\r\n\r\nuser.delete()\r\n\r\n\r\nuser = base.users.get_one(name=\"Jane\", age=18)\r\nprint(user)\r\n# None\r\n\r\n\r\n\r\n\r\n# get many users from database\r\n\r\nfor i in range(3):\r\n    base.users.add(first_name=\"John\")\r\n\r\nusers = base.users.get(name=\"John\")\r\nprint(len(users))\r\n# 3\r\n\r\nprint(users)\r\n# [{'first_name': 'Jane', 'last_name': '', 'age': 0, 'info': {}, 'is_admin': False, 'list_rewards': []}, ...]\r\n\r\n```\r\n\r\nTODO:\r\n- [x] add a way to specify the database name\r\n- [x] Table class\r\n- [x] Row class\r\n- [x] add Table func\r\n- [x] get Table func\r\n- [x] update Table func\r\n- [x] delete Table func\r\n- [x] update Row func\r\n- [x] delete Row func\r\n- [x] get_first Table func\r\n- [x] get_last Table func\r\n- [x] get_all Table func\r\n- [x] MWBase.table(\"name\").get_one(...)\r\n- [x] clear Table func\r\n- [x] class Where\r\n- [x] class Order (ASC, DESC)\r\n\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/makarworld/mwsqlite/archive/refs/tags/v1.0.0.zip",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/makarworld/mwsqlite.git",
            "keywords": "",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mwsqlite",
            "package_url": "https://pypi.org/project/mwsqlite/",
            "platform": null,
            "project_url": "https://pypi.org/project/mwsqlite/",
            "project_urls": {
                "Download": "https://github.com/makarworld/mwsqlite/archive/refs/tags/v1.0.0.zip",
                "Homepage": "https://github.com/makarworld/mwsqlite.git"
            },
            "release_url": "https://pypi.org/project/mwsqlite/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.6.0",
            "summary": "Simply python library for interact with (EOSIO) WAX blockchain",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16150948,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f1c33f17b143a383c06ec37e389610a6",
                    "sha256": "c610d5732cab994051a1f9dd53a09144e604ca6ba423c5ce2244e34ea31ac412"
                },
                "downloads": -1,
                "filename": "mwsqlite-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f1c33f17b143a383c06ec37e389610a6",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6.0",
                "size": 6592,
                "upload_time": "2022-12-19T14:20:50",
                "upload_time_iso_8601": "2022-12-19T14:20:50.726864Z",
                "url": "https://files.pythonhosted.org/packages/55/d3/ec1ffb76222e9b1558ecff6ef20a79a95be87b0d6fa30d1c62e21861f476/mwsqlite-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}