{
    "1.0.0": {
        "info": {
            "author": "Daniel Oliveira",
            "author_email": "danielsioli@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Topic :: Internet :: WWW/HTTP"
            ],
            "description": "# pdSharepoint\nPacote para obter arquivos excel ou listas do Sharepoint em formato DataFrame Pandas. Esse pacote usa o <a href='https://pypi.org/project/O365/'>projeto O365</a>.\n\n## Autentica\u00e7\u00e3o Sharepoint\n\n\u00c9 necess\u00e1rio ter uma conta da Microsoft com acesso a um Sharepoint.\nPasso-a-passo para autentica\u00e7\u00e3o do script:\nPara permitir autentica\u00e7\u00e3o, primeiro \u00e9 necess\u00e1rio registrar uma aplica\u00e7\u00e3o no <a href='https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade'>Registro de Aplicativos do Azure</a>:\n1.\tLogar no Portal do Azure (Registro de Aplica\u00e7\u00f5es) com a sua conta do Sharepoint.\n2.\tClique em \u201c+Novo Registro\u201d\n3.\tD\u00ea um nome para a sua aplica\u00e7\u00e3o.\n4.\tEm \u201cTipos de conta com suporte\u201d e escolha a op\u00e7\u00e3o \u201cContas em qualquer diret\u00f3rio organizacional (Qualquer diret\u00f3rio do Azure AD \u2013 Multilocat\u00e1rio)\u201d\n5.\tColoque a URI de redirecionamento do tipo Web para https://login.microsoftonline.com/common/oauth2/nativeclient e clique em Registrar. O link precisa ser inserido no campo de texto, pois simplesmente aceitar o check box do lado do campo de texto n\u00e3o \u00e9 suficiente.\n6.\tAnote o id da Aplica\u00e7\u00e3o (id do cliente). Ele ser\u00e1 usado pelo pdSharepoint. N\u00e3o compartilhe esse id com ningu\u00e9m.\n7.\tNa lista \u00e0 esquerda, clique em \u201cCertificados e Segredos\u201d e gere um novo segredo de cliente. Coloque a data de expira\u00e7\u00e3o para \u201cNunca\u201d. Anote o valor do segredo criado agora, pois ele ficar\u00e1 oculto daqui para frente. O pdSharepoint ir\u00e1 utilizar esse segredo. N\u00e3o compartilhe esse segredo com ningu\u00e9m.\n8.\tNas lista \u00e0 esquerda, clique em \u201cPermiss\u00f5es de APIs\u201d, clique em adicionar uma permiss\u00e3o.\n9.\tClique em Microsoft Graph\n10. Procure na lista e expanda Sites.\n11. Selecione Sites.Read.All e Sites.ReadWrite.All\n12. Procure na lista e expanda User.\n13. Selecione User.Read\n14. Clique em Todas as APIs no canto superior esquerda para voltar a tela anterior.\n15.\tProcure na lista e clique em Sharepoint\n16.\tClique em Permiss\u00f5es delegadas\n17.\tExpanda AllSites e selecione: AllSites.Read, AllSites.Write\n18.\tExpanda MyFiles e selecione: MyFiles.Read, MyFiles.Write\n19.\tExpanda Sites e selecione: Sites.Search.All\n20.\tClique em \u201cAdicionar permiss\u00f5es\u201d\n\nSugest\u00e3o: criar um arquivo config.ini com os seguintes campos. Aten\u00e7\u00e3o: esse arquivo deve ser armazenado em local seguro!\n```\n[oauth]\ntoken_path:<pasta local onde o token ser\u00e1 armazenado>\ntoken_filename:o365_token.txt\nclient_id:<id do cliente gerado no passo 6>\nclient_secret:<segredo do cliente gerado no passo 7>\n```\n\nA primeira vez que rodar seu script usando o pdSharepoint, o Azure ir\u00e1 solicitar a gera\u00e7\u00e3o de um token. Um link ser\u00e1 fornecido ao usu\u00e1rio.\n\n![img.png](img.png)\n\nO usu\u00e1rio dever\u00e1 entrar no link e fornecer consentimento para o script. Uma vez fornecido consentimento, deve-se copiar o endere\u00e7o que consta na barra de endere\u00e7o do navegador e colar no campo solicitado no prompt.\nSe tudo der certo, a mensagem abaixo aparecer\u00e1 no prompt.\n\n![img_1.png](img_1.png)\n\nO token ser\u00e1 armazenado no arquivo identificado pelos campos token_path e token_filename que constam no config.ini. O arquivo com o token deve ser guardado com seguran\u00e7a, pois ele dar\u00e1 acesso ao Sharepoint do usu\u00e1rio. O seu script precisar\u00e1 ter acesso a esse arquivo de agora em diante.\nO token tem validade de 90 dias, por\u00e9m a cada nova execu\u00e7\u00e3o do script, o token ser\u00e1 renovado com a mesma validade. Assim, contando que o script rode novamente em menos de 90 dias, n\u00e3o ser\u00e1 necess\u00e1ria nova intera\u00e7\u00e3o com o usu\u00e1rio.\n## Instalar\n\n```\npip install pdSharepoint\n```\n## Importar pacote\n```\nimport pdSharepoint as pds\n```\n## Fazer o download de um arquivo excel do Sharepoint\nCrie uma vari\u00e1vel com o endere\u00e7o do host Sharepoint.\n```\nhost = 'meu_servidor.sharepoint.com'\n```\nCrie uma vari\u00e1vel com o nome da Equipe/Site do Sharepoint.\n```\nsite = 'MinhaEquipe'\n```\nCrie uma vari\u00e1vel com o nome da biblioteca no Site que cont\u00e9m o arquivo desejado.\n```\nlibrary = 'Documentos'\n```\nCrie uma vari\u00e1vel com o caminho para o arquivo excel do Sharepoint a partir de dentro da biblioteca do site.\n```\nfile_path = '/General/MeuArquivo.xlsx'\n```\nCrie um vari\u00e1vel com o id do cliente criado no MS Azure.\n```\n#pode ser obtido do arquivo config.ini criado acima\nclient_id = '{seu id de cliente}'\n```\nCrie um vari\u00e1vel com o segredo do cliente criado no MS Azure.\n```\n#pode ser obtido do arquivo config.ini criado acima\nclient_secret = '{seu segredo de cliente}'\n```\nCrie uma tupla com as duas credenciais acima.\n```\ncredentials = (client_id, client_secret)\n```\nCrie uma vari\u00e1vel com o nome e caminho do arquivo que armazenar\u00e1 o token. Lembre de manter esse arquivo em local seguro.\n```\n#pode ser obtido do arquivo config.ini criado acima\ntoken_filepath = '{nome e caminho para seu arquivo de token}'\n```\nCrie uma vari\u00e1vel com o pasta local onde deseja armazenar o arquivo excel do Sharepoint. Se io n\u00e3o for informado, o arquivo ser\u00e1 armazenado na pasta de execu\u00e7\u00e3o do script.\n```\nio = 'C:\\\\MeuArquivo.xlsx'\n```\nFa\u00e7a o download do arquivo.\n```\npds.download_sharepoint_excel(file_path=file_path, host=host, site=site, library=library,\n                   credentials=credentials, token_filepath=token_filepath, io=io)\n```\nC\u00f3digo completo para download.\n```\nimport pdSharepoint as pds\n\nhost = 'meu_servidor.sharepoint.com'\nsite = 'MinhaEquipe'\nlibrary = 'Documentos'\nfile_path = '/General/MeuArquivo.xlsx'\nclient_id = '{seu id de cliente}' #pode ser obtido do arquivo config.ini criado acima\nclient_secret = '{seu segredo de cliente}' #pode ser obtido do arquivo config.ini criado acima\ncredentials = (client_id, client_secret)\ntoken_filepath = '{nome e caminho para seu arquivo de token}' #pode ser obtido do arquivo config.ini criado acima\nio = 'C:\\\\MeuArquivo.xlsx'\n\npds.download_sharepoint_excel(file_path=file_path, host=host, site=site, library=library,\n                   credentials=credentials, token_filepath=token_filepath, io=io)\n```\n## Obter um arquivo excel do Sharepoint em um DataFrame Pandas.\nUse as mesmas vari\u00e1veis criadas acima. O pdSharepoint ir\u00e1 fazer o download do arquivo excel na pasta de execu\u00e7\u00e3o do script, criar um DataFrame pandas com esse arquivo e depois deletar o arquivo, mantendo o objeto DataFrame para ser usado pelo seu script.\n\nTodos os argumentos de pandas.read_excel podem ser utilizados (exceto io).\n```\nimport pdSharepoint as pds\nimport pandas as pd\n\nhost = 'meu_servidor.sharepoint.com'\nsite = 'MinhaEquipe'\nlibrary = 'Documentos'\nfile_path = '/General/MeuArquivo.xlsx'\nclient_id = '{seu id de cliente}' #pode ser obtido do arquivo config.ini criado acima\nclient_secret = '{seu segredo de cliente}' #pode ser obtido do arquivo config.ini criado acima\ncredentials = (client_id, client_secret)\ntoken_filepath = '{nome e caminho para seu arquivo de token}' #pode ser obtido do arquivo config.ini criado acima\n\ndf = pds.read_sharepoint_excel(file_path=file_path, host=host, site=site, library=library,\n                    credentials=credentials, token_filepath=token_filepath)\n```\n## Obter uma lista do Sharepoint em um DataFrame Pandas\nAl\u00e9m das vari\u00e1veis acima, crie tamb\u00e9m uma vari\u00e1vel para conter o nome da lista.\n```\nlist_name = 'MinhaLista'\n```\nFa\u00e7a a consulta ao Sharepoint. O pdSharepoint ir\u00e1 criar um pandas DataFrame com os dados da lista.\n```\ndf = pds.read_sharepoint_list(list_name=list_name, host=host, site=site,\n                    credentials=credentials, token_filepath=token_filepath)\n```\nC\u00f3digo completo para obter listas do Sharepoint em DataFrames pandas.\n```\nimport pdSharepoint as pds\nimport pandas as pd\n\nhost = 'meu_servidor.sharepoint.com'\nsite = 'MinhaEquipe'\nlist_name = 'MinhaLista'\nclient_id = '{seu id de cliente}' #pode ser obtido do arquivo config.ini criado acima\nclient_secret = '{seu segredo de cliente}' #pode ser obtido do arquivo config.ini criado acima\ncredentials = (client_id, client_secret)\ntoken_filepath = '{nome e caminho para seu arquivo de token}' #pode ser obtido do arquivo config.ini criado acima\n\ndf = pds.read_sharepoint_list(list_name=list_name, host=host, site=site,\n                    credentials=credentials, token_filepath=token_filepath)\n```\nNa esperan\u00e7a do pandas um dia incorporar isso tudo!\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/danielsioli/pdSharepoint",
            "keywords": "Sharepoint,pandas",
            "license": "Creative Commons Attribution-Noncommercial-Share Alike license",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pdSharepoint",
            "package_url": "https://pypi.org/project/pdSharepoint/",
            "platform": "",
            "project_url": "https://pypi.org/project/pdSharepoint/",
            "project_urls": {
                "Homepage": "https://github.com/danielsioli/pdSharepoint"
            },
            "release_url": "https://pypi.org/project/pdSharepoint/1.0.0/",
            "requires_dist": [
                "O365",
                "pandas",
                "openpyxl",
                "xlrd"
            ],
            "requires_python": ">=3.6",
            "summary": "Pacote para obter arquivos excel ou listas do Sharepoint em um DataFrame pandas",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10408439,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9db207091a16ea023b971e15c3a46634",
                    "sha256": "015b7f95827f154eca183a50b7e5316751ce800b4c5476fdc4e38601fe84ea39"
                },
                "downloads": -1,
                "filename": "pdSharepoint-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9db207091a16ea023b971e15c3a46634",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7240,
                "upload_time": "2021-05-19T19:02:13",
                "upload_time_iso_8601": "2021-05-19T19:02:13.154714Z",
                "url": "https://files.pythonhosted.org/packages/0b/4f/b5363ea076707d54e719089cbfe66fd74ed396110b69fed8f7b9f8606d4f/pdSharepoint-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9d43672595497167e57c2638cad2ea77",
                    "sha256": "9ca212deb17d90114ed41d8a30250bd89f1d67f7e36938c3c9762214bf84d9af"
                },
                "downloads": -1,
                "filename": "pdSharepoint-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9d43672595497167e57c2638cad2ea77",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 6824,
                "upload_time": "2021-05-19T19:02:14",
                "upload_time_iso_8601": "2021-05-19T19:02:14.501774Z",
                "url": "https://files.pythonhosted.org/packages/fe/fb/216e2543e239055789f2d916f359dc70d8cae40f41ca200b6f40fed7da01/pdSharepoint-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}