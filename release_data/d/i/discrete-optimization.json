{
    "0.2.0": {
        "info": {
            "author": "Airbus AI Research",
            "author_email": "scikit-decide@airbus.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Operating System :: MacOS",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX",
                "Operating System :: Unix",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Software Development"
            ],
            "description": "# Discrete Optimization\n\nDiscrete Optimization is a python library to ease the definition and re-use of discrete optimization problems and solvers.\nIt has been initially developed in the frame of [scikit-decide](https://github.com/airbus/scikit-decide) for scheduling.\nThe code base starting to be big, the repository has now been splitted in two separate ones.\n\nThe library contains a range of existing solvers already implemented such as:\n* greedy methods\n* local search (Hill Climber, Simulated Annealing)\n* metaheuristics (Genetic Algorithms, NSGA)\n* linear programming\n* constraint programming\n* hybrid methods (LNS)\n\nThe library also contains implementation of several classic discrete optimization problems:\n* Travelling Salesman Problem (TSP)\n* Knapsack Problem (KP)\n* Vehicle Routing Problem (VRP)\n* Facility Location Problem (FLP)\n* Resource Constrained Project Scheduling Problem (RCPSP). Several variants of RCPSP are available\n* Graph Colouring Problem (GCP)\n\nIn addition, the library contains functionalities to enable robust optimization\nthrough different scenario handling mechanisms) and multi-objective optimization\n(aggregation of objectives, Pareto optimization, MO post-processing).\n\n\n## Installation\n\n### Prerequisites\n\n- Install [minizinc](https://www.minizinc.org/).\n- Optionally, install [gurobi](https://www.gurobi.com/) with its python binding (gurobipy)\n  and an appropriate license, if you want to try solvers that make use of gurobi.\n\n  NB: If you just do `pip install gurobipy`, you get a minimal license which does not allow to use it on \"real\" models.\n\n### Normal install\n\nInstall discrete-optimization from pip:\n\n```shell\npip install discrete-optimization\n```\n\n### Install in developer mode\n\nYou can also install the library directly from the repository in developer mode:\n\n```shell\ngit clone https://github.com/airbus/discrete-optimization.git\ncd discrete-optimization\npip install --editable .\n```\n\n\nIf you encounter any problem during installation,\nplease fill an [issue](https://github.com/airbus/discrete-optimization/issues)\non the repository.\n\n\n## Examples\n\n### Notebooks\n\nIn the `notebooks` directory of the repository, you will find several jupyter notebooks demonstrating\nhow the library can be used\n- on a knapsack problem,\n- on a scheduling problem (RCPSP).\n\n\n### Scripts\n\nThe `examples` directory of the repository gather several scripts using the different features of\nthe library and how to instantiate different problem instances and solvers.\n\n\n## Unit tests\n\nUnit tests are available in `tests/` directory of the repository.\nTo test the library, you can install the library\nwith the \"test\" extra dependencies by typing\n```shell\ngit clone https://github.com/airbus/discrete-optimization.git\ncd discrete-optimization\npip install --editable .[test]\n```\n\n\nThen run pytest on tests folder:\n```shell\npytest -v tests\n```\n\n\n## License\n\nThis software is under the MIT License that can be found in the [LICENSE](./LICENSE) file at the root of the repository.\n\nSome minzinc models have been adapted from files coming from\n- https://github.com/MiniZinc/minizinc-benchmarks under the same [license](https://github.com/MiniZinc/minizinc-benchmarks/blob/master/LICENSE),\n- https://github.com/youngkd/MSPSP-InstLib for which we have the written authorization of the author.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/airbus/discrete-optimization",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/airbus/discrete-optimization",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "discrete-optimization",
            "package_url": "https://pypi.org/project/discrete-optimization/",
            "platform": null,
            "project_url": "https://pypi.org/project/discrete-optimization/",
            "project_urls": {
                "Download": "https://github.com/airbus/discrete-optimization",
                "Homepage": "https://github.com/airbus/discrete-optimization"
            },
            "release_url": "https://pypi.org/project/discrete-optimization/0.2.0/",
            "requires_dist": [
                "shapely (>=1.7)",
                "mip (>=1.13)",
                "minizinc (>=0.4.2)",
                "deap (>=1.3.1)",
                "networkx (>=2.5)",
                "numba (>=0.50)",
                "matplotlib (>=3.1)",
                "seaborn (>=0.10.1)",
                "pymzn (>=0.18.3)",
                "ortools (>=8.0)",
                "tqdm (>=4.62.3)",
                "sortedcontainers (>=2.4)",
                "deprecation",
                "typing-extensions (>=4.0)",
                "pytest ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "scikit-learn (>=1.0) ; extra == 'test'"
            ],
            "requires_python": "",
            "summary": "Discrete optimization library",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15191005,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5376f4865c183e1967977397032e9736",
                    "sha256": "895ad8e5234807c205261547ca1945e71bbd314b5712236b8c077217453627a0"
                },
                "downloads": -1,
                "filename": "discrete_optimization-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5376f4865c183e1967977397032e9736",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 497406,
                "upload_time": "2022-09-23T13:48:41",
                "upload_time_iso_8601": "2022-09-23T13:48:41.698994Z",
                "url": "https://files.pythonhosted.org/packages/37/7f/2838204ea60665428d4957d5b3b64743c535172a197f23c2e0acb6fc7539/discrete_optimization-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}