{
    "0.8.0": {
        "info": {
            "author": "Max Bachmann",
            "author_email": "pypi@maxbachmann.de",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Text Processing"
            ],
            "description": "# uniseq2\n\n## Introduction\n\nA Python package to determine Unicode text segmentations.\n\nYou can see the full documentation including the package reference on\nhttp://uniseg-python.readthedocs.io.\n\n\n## Features\n\nThis package provides:\n\n- Functions to get Unicode Character Database (UCD) properties concerned with\n  text segmentations.\n- Functions to determine segmentation boundaries of Unicode strings.\n- Classes that help implement Unicode-aware text wrapping on both console\n  (monospace) and graphical (monospace / proportional) font environments.\n\nSupporting segmentations are:\n\n- code point\n    `Code point <http://www.unicode.org/glossary/#code_point>`_ is *\"any value\n    in the Unicode codespace.\"* It is the basic unit for processing Unicode\n    strings.\n- grapheme cluster\n    `Grapheme cluster <http://www.unicode.org/glossary/#grapheme_cluster>`_\n    approximately represents *\"user-perceived character.\"* They may be made\n    up of single or multiple Unicode code points. e.g. \"G\" + *acute-accent* is\n    a *user-perceived character*.\n- word break\n    Word boundaries are familiar segmentation in many common text operations.\n    e.g. Unit for text highlighting, cursor jumping etc. Note that *words* are\n    not determinable only by spaces or punctuations in text in some languages.\n    Such languages like Thai or Japanese require dictionaries to determine\n    appropriate word boundaries. Though the package only provides simple word\n    breaking implementation which is based on the scripts and doesn't use any\n    dictionaries, it also provides ways to customize its default behavior.\n- sentence break\n    Sentence breaks are also common in text processing but they are more\n    contextual and less formal. The sentence breaking implementation (which is\n    specified in UAX: Unicode Standard Annex) in the package is simple and\n    formal too. But it must be still useful in some usages.\n- line break\n    Implementing line breaking algorithm is one of the key features of this\n    package. The feature is important in many general text presentations in\n    both CLI and GUI applications.\n\n\n## Requirements\n\n- Python >= 3.6\n\n\n## Download\n\nSource / binary distributions (PyPI)\n    https://pypi.python.org/pypi/uniseg\nAll sources and build tools etc. (Bitbucket)\n    https://bitbucket.org/emptypage/uniseg-py\n\n\n## Install\n\nJust type: `pip install uniseg`\nor download the archive and: `pip install .`\n\n## References\n\n*UAX #14: Unicode Line Breaking Algorithm* (6.2.0)\n    http://www.unicode.org/reports/tr14/tr14-30.html\n*UAX #29 Unicode Text Segmentation* (6.2.0)\n    http://www.unicode.org/reports/tr29/tr29-21.html\n\n\n## Related / Similar Projects\n\n`PyICU <https://pypi.python.org/pypi/PyICU>`_ - Python extension wrapping the ICU C++ API\n    *PyICU* is a Python extension wrapping International Components for\n    Unicode library (ICU). It also provides text segmentation supports and\n    they just perform richer and faster than those of ours. PyICU is an\n    extension library so it requires ICU dynamic library (binary files) and\n    compiler to build the extension. Our package is written in pure Python;\n    it runs slower but is more portable.\n`pytextseg <https://pypi.python.org/pypi/pytextseg>`_ - Python module for text segmentation\n    *pytextseg* package focuses very similar goal to ours; it provides\n    Unicode-aware text wrapping features. They designed and uses their\n    original string class (not built-in ``unicode`` / ``str`` classes) for the\n    purpose. We use strings as just ordinary built-in ``unicode`` / ``str``\n    objects for text processing in our modules.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/maxbachmann/uniseg",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "uniseg2",
            "package_url": "https://pypi.org/project/uniseg2/",
            "platform": null,
            "project_url": "https://pypi.org/project/uniseg2/",
            "project_urls": {
                "Homepage": "https://github.com/maxbachmann/uniseg"
            },
            "release_url": "https://pypi.org/project/uniseg2/0.8.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Determine Unicode text segmentations",
            "version": "0.8.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14927969,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "871cfad732a8b90fbe2f9f0b433c9d25",
                    "sha256": "c73347cbbe13a3137b4da446a016c283b120783d914254c6f6ee1601a6954448"
                },
                "downloads": -1,
                "filename": "uniseg2-0.8.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "871cfad732a8b90fbe2f9f0b433c9d25",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 115858,
                "upload_time": "2022-08-29T20:05:38",
                "upload_time_iso_8601": "2022-08-29T20:05:38.775962Z",
                "url": "https://files.pythonhosted.org/packages/6a/e3/005bd9cbf6d276960feae718d29794de65a9fceffa686cda625dc0162429/uniseg2-0.8.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "26b0dd6e04e780c2aa8e29ff5d7fa21d",
                    "sha256": "366ed2a90b8f956556de3ddf39338ac55ad38b093e75b91a424ce1cd71055292"
                },
                "downloads": -1,
                "filename": "uniseg2-0.8.0.tar.gz",
                "has_sig": false,
                "md5_digest": "26b0dd6e04e780c2aa8e29ff5d7fa21d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 115547,
                "upload_time": "2022-08-29T20:05:41",
                "upload_time_iso_8601": "2022-08-29T20:05:41.324415Z",
                "url": "https://files.pythonhosted.org/packages/ef/c7/bf79a33a0481deb4a7fa2e51016610612b56e249dafd5cf3fc5c1d1de8ac/uniseg2-0.8.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}