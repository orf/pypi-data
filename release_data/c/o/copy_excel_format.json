{
    "0.0.2": {
        "info": {
            "author": "Kosuke Asada",
            "author_email": "laplaciannin102@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/laplaciannin102/copy_excel_format",
            "keywords": "",
            "license": "Copyright (c) 2020, Kosuke Asada\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
            "maintainer": "",
            "maintainer_email": "",
            "name": "copy_excel_format",
            "package_url": "https://pypi.org/project/copy_excel_format/",
            "platform": "",
            "project_url": "https://pypi.org/project/copy_excel_format/",
            "project_urls": {
                "Homepage": "https://github.com/laplaciannin102/copy_excel_format"
            },
            "release_url": "https://pypi.org/project/copy_excel_format/0.0.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "copy excel format",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9114348,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7d95004788d806c57c6bb8b3dbe06986",
                    "sha256": "fa13fd1e88c5f48143dbf1d296a4f1d8ebed0551fe211dea7bc0727269860982"
                },
                "downloads": -1,
                "filename": "copy_excel_format-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "7d95004788d806c57c6bb8b3dbe06986",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 179583,
                "upload_time": "2020-12-22T23:58:17",
                "upload_time_iso_8601": "2020-12-22T23:58:17.786515Z",
                "url": "https://files.pythonhosted.org/packages/bb/01/7338fa7d10724ab05cd7e3ffd10687c8df16ac042e6743c5a430a4b521f9/copy_excel_format-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.0": {
        "info": {
            "author": "Kosuke Asada",
            "author_email": "laplaciannin102@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/laplaciannin102/copy_excel_format",
            "keywords": "",
            "license": "Copyright (c) 2020, Kosuke Asada\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
            "maintainer": "",
            "maintainer_email": "",
            "name": "copy_excel_format",
            "package_url": "https://pypi.org/project/copy_excel_format/",
            "platform": "",
            "project_url": "https://pypi.org/project/copy_excel_format/",
            "project_urls": {
                "Homepage": "https://github.com/laplaciannin102/copy_excel_format"
            },
            "release_url": "https://pypi.org/project/copy_excel_format/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "copy excel format",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9114348,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "21295974e10290306e57a0cff53f1344",
                    "sha256": "cb482b6591e8afaf1e90f3a6cb1987aa23f90ce6f4392eeb0e942564abe84afe"
                },
                "downloads": -1,
                "filename": "copy_excel_format-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "21295974e10290306e57a0cff53f1344",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 180754,
                "upload_time": "2020-12-23T00:10:12",
                "upload_time_iso_8601": "2020-12-23T00:10:12.283442Z",
                "url": "https://files.pythonhosted.org/packages/47/3d/8ca10adf2c9cf9e6fe9d132819d727f128ec238604c0aeef8bbef7c8dad8/copy_excel_format-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.9": {
        "info": {
            "author": "Kosuke Asada",
            "author_email": "laplaciannin102@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "copy-excel-format\n=================\n\n-  author: laplaciannin102(Kosuke Asada)\n-  date: 2021/01/12\n-  latest version: 0.1.9\n\n--------------\n\nTable of Contents\n-----------------\n\n-  `copy-excel-format <#copy-excel-format>`__\n\n   -  `Table of Contents <#table-of-contents>`__\n   -  `How to install <#how-to-install>`__\n   -  `\u6982\u8981 <#\u6982\u8981>`__\n\n      -  `\u4f55\u3092\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\uff1f <#\u4f55\u3092\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0>`__\n      -  `\u6ce8\u610f\u4e8b\u9805 <#\u6ce8\u610f\u4e8b\u9805>`__\n\n   -  `\u5165\u51fa\u529b <#\u5165\u51fa\u529b>`__\n\n      -  `\u5165\u529b(Input) <#\u5165\u529binput>`__\n      -  `\u51fa\u529b(Output) <#\u51fa\u529boutput>`__\n\n   -  `\u4f7f\u7528\u624b\u9806 <#\u4f7f\u7528\u624b\u9806>`__\n   -  `Example <#example>`__\n   -  `Repository <#repository>`__\n\n      -  `Github <#github>`__\n      -  `PyPI <#pypi>`__\n\n--------------\n\nHow to install\n--------------\n\n.. code:: shell\n\n   pip install copy_excel_format\n\n--------------\n\n\u6982\u8981\n----\n\n\u4f55\u3092\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\uff1f\n~~~~~~~~~~~~~~~~~~~~\n\n-  \u305f\u304f\u3055\u3093\u306e\u30c6\u30fc\u30d6\u30eb(DataFrame\u3092\u60f3\u5b9a)\u3092\u305f\u304f\u3055\u3093\u306e\u66f8\u5f0f\u4ed8\u304dexcel\u30b7\u30fc\u30c8\u3068\u3057\u3066\u51fa\u529b\u3059\u308b.\n\n\u6ce8\u610f\u4e8b\u9805\n~~~~~~~~\n\n-  xlwings\u3092\u4f7f\u7528\u3057\u3066\u4e26\u5217\u51e6\u7406\u3059\u308b\u5834\u5408\u306fexcel\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb(Office)\u304c\u5fc5\u8981.\n-  \u30c6\u30b9\u30c8\u7b49\u304d\u3061\u3093\u3068\u51fa\u6765\u3066\u3044\u306a\u3044\u306e\u3067\u30d0\u30b0\u304c\u3042\u308b\u53ef\u80fd\u6027\u3042\u308a.\n\n--------------\n\n\u5165\u51fa\u529b\n------\n\n\u5165\u529b(Input)\n~~~~~~~~~~~\n\n-  \u8907\u6570\u306epandas.DataFrame.\n-  \u66f8\u5f0f\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3057\u3066\u4f7f\u7528\u3057\u305f\u3044excel\u30b7\u30fc\u30c8.\n\n\u51fa\u529b(Output)\n~~~~~~~~~~~~\n\n-  **\u66f8\u5f0f\u4ed8\u304d**,\n   **\u30c6\u30fc\u30d6\u30eb\u306e\u5024\u304c\u5165\u529b\u6e08\u307f**\\ \u306e\u30b7\u30fc\u30c8\u304c\u8907\u6570\u3042\u308bexcel\u30d5\u30a1\u30a4\u30eb.\n\n   -  \u66f8\u5f0f\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8excel\u30d5\u30a1\u30a4\u30eb\u306e\u3082\u306e.\n   -  \u30c6\u30fc\u30d6\u30eb\u306e\u5024\u306fpandas.DataFrame\u306e\u3082\u306e.\n\n--------------\n\n\u4f7f\u7528\u624b\u9806\n--------\n\n-  \u4ee5\u4e0b, JupyterNotebook\u306a\u3069\u306ePython\u74b0\u5883\u3067\u306e\u64cd\u4f5c\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059.\n\n-  copy-excel-format\u30e2\u30b8\u30e5\u30fc\u30eb\u3092import\u3057\u307e\u3059.\n\n.. code:: python\n\n   import copy_excel_format as cef\n\n-  \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u306a\u308bexcel\u30d5\u30a1\u30a4\u30eb\u3092\u6e96\u5099\u3057\u307e\u3059.\n\n   -  \u4e0b\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068,\n      sample\u306eexcel\u30d5\u30a1\u30a4\u30eb\u304a\u3088\u3073\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u53d6\u5f97, \u8a2d\u5b9a\u3067\u304d\u307e\u3059.\n   -  \u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u305f\u3044\u6642\u306b\u3054\u4f7f\u7528\u304f\u3060\u3055\u3044.\n\n.. code:: python\n\n   cef.load_sample_files()\n\n-  pandas.DataFrame\u3092\u8907\u6570\u6e96\u5099\u3057\u307e\u3059.\n\n.. code:: python\n\n   import pandas as pd\n   df0 = pd.DataFrame(...) # 1\u3064\u76ee\u306epandas.DataFrame\n   df1 = pd.DataFrame(...) # 2\u3064\u76ee\u306epandas.DataFrame\n\n-  \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8excel\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9, pandas.DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8,\n   \u305d\u306eDataFrame\u306e\u5024\u3092\u5165\u529b\u3057\u305f\u3044\u30b7\u30fc\u30c8\u306e\u30b7\u30fc\u30c8\u540d\u3092\u5f15\u6570\u306bCopyExcelInfoHolder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057,\n   list\u5909\u6570\u306b\u683c\u7d0d\u3057\u307e\u3059.\n\n.. code:: python\n\n   \"\"\"\n   df0: 1\u3064\u76ee\u306epandas.DataFrame\n   df1: 2\u3064\u76ee\u306epandas.DataFrame\n   input_template_excel_path: \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8excel\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\n   sheet_name0: 1\u3064\u76ee\u306esheet_name\n   sheet_name1: 2\u3064\u76ee\u306esheet_name\n   \"\"\"\n\n   # CopyExcelInfoHolder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n   ceih0 = cef.CopyExcelInfoHolder(\n       template_excel_path = input_template_excel_path,\n       template_sheet_name = 'blank_template',\n       output_sheet_name = sheet_name0,\n       df = df0\n   )\n\n   ceih1 = cef.CopyExcelInfoHolder(\n       template_excel_path = input_template_excel_path,\n       template_sheet_name = 'blank_template',\n       output_sheet_name = sheet_name1,\n       df = df1\n   )\n\n   ceih_list = [ceih0, ceih1] # list\u5909\u6570\n\n-  copy_excel_format\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059.\n\n   -  \u4e0b\u8a18\u306f\u76f4\u5217\u51e6\u7406\u3067\u306e\u5b9f\u884c\u4f8b.\n   -  output_excel_path\u306b\u306f\u51fa\u529bexcel\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u4e0e\u3048\u307e\u3059.\n\n.. code:: python\n\n   # excel\u66f8\u5f0f\u30b3\u30d4\u30fc\u3092\u76f4\u5217\u3067\u5b9f\u884c\n   cef.copy_excel_format(\n       ceih_list = ceih_list,\n       output_excel_path = output_path + 'output_excel_sample.xlsx',\n       cef_manual_set_rows = None,\n       cef_force_dimension_copy = False,\n       cef_debug_mode = True,\n       write_index = False,\n       write_header = False,\n       copy_values = False\n   )\n\n[end]\n\n--------------\n\nExample\n-------\n\n-  sample ipynb:\n   `Github\u30ea\u30f3\u30af <https://github.com/laplaciannin102/copy_excel_format/blob/master/examples/copy_excel_format_sample.ipynb>`__\n\n-  sample program:\n\n.. code:: python\n\n\n   # --------------------------------------------------------------------------------\n   # Load modules\n   # --------------------------------------------------------------------------------\n   ## copy-excel-format module\n   import copy_excel_format as cef\n\n   ## other modules\n   import gc\n   import numpy as np\n   import pandas as pd\n   import random\n   import time\n   from datetime import datetime, timedelta\n   from dateutil.relativedelta import relativedelta\n\n\n   # --------------------------------------------------------------------------------\n   # Configure\n   # --------------------------------------------------------------------------------\n   # random seed\n   np.random.seed(57)\n   random.seed(57)\n\n\n   # --------------------------------------------------------------------------------\n   # Constants\n   # --------------------------------------------------------------------------------\n   # paths\n   ## directory paths\n   input_path = './input/'\n   output_path = './output/'\n   interm_path = './intermediate/'\n\n   ## file paths\n   input_template_excel_path = input_path + 'input_template_excel_sample.xlsx'\n   input_header_csv_path = input_path + 'input_header_df_sample.csv'\n\n\n   # --------------------------------------------------------------------------------\n   # Load sample files\n   # --------------------------------------------------------------------------------\n   cef.load_sample_files()\n\n\n   # --------------------------------------------------------------------------------\n   # Functions\n   # --------------------------------------------------------------------------------\n   # header dataframe\n   header_df = pd.read_csv(input_header_csv_path)\n\n   # get_sample_df\n   def get_sample_df(n_rows=10, header_df=header_df):\n       \"\"\"\n       sample\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570.\n       \n       Args:\n           n_rows: int, optional(default=10)\n               \u30c7\u30fc\u30bf\u90e8\u5206\u306eDataFrame\u306e\u884c\u6570.\n           \n           header_df: pandas.DataFrame\n               \u30d8\u30c3\u30c0\u30fc\u90e8\u5206\u306eDataFrame\n       \"\"\"\n       col1_samples = ['hoge', 'fuga', 'poyo', 'gray', None]\n       \n       sample_df = pd.DataFrame()\n       sample_df['No.'] = range(n_rows)\n       sample_df['No.'] = sample_df['No.'] + 1\n       sample_df['date'] = [datetime(2020, 11, 20) + relativedelta(days=jj*7) for jj in range(n_rows)]\n       sample_df['col1'] = random.choices(col1_samples, k=n_rows)\n       sample_df['col2'] = np.random.randint(0, 10, size=n_rows)\n       sample_df['col3'] = np.random.randint(100, 200, size=n_rows)\n       sample_df['col4'] = random.choices(col1_samples, k=n_rows)\n       sample_df['col5'] = np.random.randint(0, 10, size=n_rows)\n       sample_df['col6'] = np.random.randint(100, 200, size=n_rows)\n       \n       # header\u3092\u3064\u3051\u308b\n       tmp_name = random.choice(['hoge', 'fuga', 'poyo'])\n       tmp_header_df = header_df.copy()\n       tmp_header_df = tmp_header_df.replace('name: <name>', 'name: ' + tmp_name)\n       \n       sample_df = tmp_header_df.append(sample_df)\n       \n       return sample_df\n\n\n   # --------------------------------------------------------------------------------\n   # excel\u66f8\u5f0f\u30b3\u30d4\u30fc\u6e96\u5099\n   # --------------------------------------------------------------------------------\n   # \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306eexcel\u30d1\u30b9\u3068\u30b7\u30fc\u30c8\u540d\u3068DataFrame\u3092\u30bb\u30c3\u30c8\n   # DataFrame\u306e\u6570. \u30b7\u30fc\u30c8\u6570\u3082\u540c\u3058\u6570.\n   n_df = 10\n\n   # CopyExcelInfoHolder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30ea\u30b9\u30c8\n   ceih_list = []\n\n   # ceih_list\u3068\u3044\u3046CopyExcelInfoHolder\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\n   for ii in range(n_df):\n       \n       tmp_sheet_name = 'sheet' + str(ii+1).zfill(3)\n       tmp_df = get_sample_df(\n           n_rows = np.random.randint(10, 28)\n       )\n\n       ceih = cef.CopyExcelInfoHolder(\n           template_excel_path = input_template_excel_path,\n           template_sheet_name = 'blank_template',\n           output_sheet_name = tmp_sheet_name,\n           df = tmp_df\n       )\n       \n       ceih_list += [ceih]\n       \n       del ceih\n       gc.collect()\n\n\n   # --------------------------------------------------------------------------------\n   # Execute\n   # --------------------------------------------------------------------------------\n   # excel\u66f8\u5f0f\u30b3\u30d4\u30fc\u3092\u76f4\u5217\u3067\u5b9f\u884c\n   cef.copy_excel_format(\n       ceih_list = ceih_list,\n       output_excel_path = output_path + 'output_excel_sample.xlsx',\n       cef_manual_set_rows = None,\n       cef_force_dimension_copy = False,\n       cef_debug_mode = True,\n       write_index = False,\n       write_header = False,\n       copy_values = False\n   )\n\n   # excel\u66f8\u5f0f\u30b3\u30d4\u30fc\u3092\u4e26\u5217\u3067\u5b9f\u884c1(1\u3064\u306e\u95a2\u6570\u3067\u5b9f\u884c)\n   cef.copy_excel_format_parallel(\n       ceih_list = ceih_list,\n       output_excel_path = output_path + 'output_excel_sample_parallel001.xlsx',\n       tmp_output_excel_dir_path = interm_path + 'tmp_output_excel/',\n       parallel_method = 'multiprocess',\n       n_jobs = None,\n       copy_sheet_method = 'xlwings',\n       sorted_sheet_names_list = None,\n       del_tmp_dir = True,\n       n_seconds_to_sleep = 1,\n       cef_manual_set_rows = None,\n       cef_force_dimension_copy = False,\n       cef_debug_mode = True,\n       write_index = False,\n       write_header = False,\n       copy_values = False\n   )\n\n   # excel\u66f8\u5f0f\u30b3\u30d4\u30fc\u3092\u4e26\u5217\u3067\u5b9f\u884c2(2\u3064\u306e\u95a2\u6570\u306b\u5206\u3051\u3066\u5b9f\u884c)\n   # \u4e26\u5217\u51e6\u7406\u3092\u884c\u3044, \u4e00\u6642\u7684\u306a\u66f8\u5f0f\u8a2d\u5b9a\u6e08\u307f\u306eexcel\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b.\n   cef.output_temporary_excel_parallel(\n       ceih_list = ceih_list,\n       tmp_output_excel_dir_path = interm_path + 'tmp_output_excel/',\n       parallel_method = 'multiprocess',\n       n_jobs = None,\n       cef_manual_set_rows = None,\n       cef_force_dimension_copy = False,\n       cef_debug_mode = True,\n       write_index = False,\n       write_header = False,\n       copy_values = False\n   )\n\n   # \u4e00\u6642\u7684\u306b\u51fa\u529b\u3057\u305f\u8907\u6570\u306eexcel\u30d5\u30a1\u30a4\u30eb\u3092\u307e\u3068\u3081\u3066\u8907\u6570\u30b7\u30fc\u30c8\u3092\u6301\u30641\u3064\u306eexcel\u30d5\u30a1\u30a4\u30eb\u3068\u3059\u308b.\n   cef.copy_excel_format_from_temporary_files(\n       ceih_list = ceih_list,\n       output_excel_path = output_path + 'output_excel_sample_parallel002.xlsx',\n       tmp_output_excel_dir_path = interm_path + 'tmp_output_excel/',\n       copy_sheet_method = 'xlwings',\n       sorted_sheet_names_list = None,\n       del_tmp_dir = True,\n       n_seconds_to_sleep = 1\n   )\n\n--------------\n\nRepository\n----------\n\nGithub\n~~~~~~\n\n-  https://github.com/laplaciannin102/copy_excel_format\n\nPyPI\n~~~~\n\n-  https://pypi.org/project/copy_excel_format/\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/laplaciannin102/copy_excel_format",
            "keywords": "",
            "license": "Copyright (c) 2021, Kosuke Asada\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
            "maintainer": "",
            "maintainer_email": "",
            "name": "copy_excel_format",
            "package_url": "https://pypi.org/project/copy_excel_format/",
            "platform": "",
            "project_url": "https://pypi.org/project/copy_excel_format/",
            "project_urls": {
                "Homepage": "https://github.com/laplaciannin102/copy_excel_format"
            },
            "release_url": "https://pypi.org/project/copy_excel_format/0.1.9/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "copy excel format",
            "version": "0.1.9",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9114348,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3617cbb787f015ef9aab2719996e7519",
                    "sha256": "91585a67821a579cd7d7855453eb566a7c7df041e80f9779c9cdef20f5805fc0"
                },
                "downloads": -1,
                "filename": "copy_excel_format-0.1.9.tar.gz",
                "has_sig": false,
                "md5_digest": "3617cbb787f015ef9aab2719996e7519",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 35302,
                "upload_time": "2021-01-12T13:54:16",
                "upload_time_iso_8601": "2021-01-12T13:54:16.306381Z",
                "url": "https://files.pythonhosted.org/packages/23/63/a52f6e53661bacaddc33a886fa1d56990cf3bb0ffb5133489412086b5b27/copy_excel_format-0.1.9.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}