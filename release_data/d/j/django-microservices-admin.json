{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 1 - Planning",
                "Environment :: Web Environment",
                "Framework :: Django",
                "Framework :: Django :: 3.2",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "License :: OSI Approved :: MIT No Attribution License (MIT-0)",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.8",
                "Topic :: Internet :: WWW/HTTP"
            ],
            "description": "# django-microservices-admin\n![main workflow](https://github.com/robotech/django-microservices-admin/actions/workflows/main.yml/badge.svg) <br>\nThis project make it possible to use Django's Admin Interface to administrate your microservices.\n\n\n## Quick Start Instructions\n### Prerequisites\n\n1. Django Project for the microservices admin\n2. Microservices with individual databases\n\n### Tools and Resources\n1. Python 3.8+ [link](https://www.python.org/downloads/release/python-387/)\n2. Virtualenv\n\n### Installation\n1. Install with pip <br /> from pypi *(upcoming)*  \n ``` shell\n pip install django-microservices-admin\n ```\n from git  \n ```\n pip install git+https://github.com/robotstech/django-microservices-admin.git\n ```\n2. install database driver(s). <br /> \n - install for postgres driver: \n ``` shell \n pip install psycopg2-binary>=2.9.3\n ```\n - install for mysql driver: \n ``` shell \n pip install mysqlclient>=2.1.0\n ```\n\n - here are some supported drivers for django click [here](https://docs.djangoproject.com/en/4.0/ref/databases/\n ) to see.\n\n| Database   |    Driver   |\n| --------   | --------  |\n| Postgres | [pycopg2](https://pypi.org/project/psycopg2/)|\n| Mysql  | [mysqlclient](https://pypi.org/project/mysqlclient/)|\n\n\n### Set up a (new) Microservice app admin\nThis is a setup for a simple microservice case, you can follow the same step to add more microservices\n1. Add the following to the bottom of your `settings.py` to add a microservice database. All tables will be registered if `\"DATABASE_TABLES\": []`\n```python\nimport django_microservices_admin.settings\ndjango_microservices_admin.settings.update(\n    locals(),\n    {\n        '{MICROSERVICE_NAME}': {\n            \"DATABASE_URL\": \"postgresql://postgres:postgres@localhost:5432/message_boards\", # replace this with the right url\n            \"DATABASE_TABLES\": [\"list\", \"of\", \"table\", \"names\"]\n        }\n    }\n)\n```\n2. Create an app to represent the microservice. A `models.py` file will be created containing classes (django models) representing the database tables in your microservice db. Make sure to edit and format it accordingly(see [here](https://docs.djangoproject.com/en/4.0/howto/legacy-databases/) and [here](https://docs.djangoproject.com/en/4.0/ref/django-admin/#django-admin-inspectdb) for more info). __Note__: When the command is executed again a `models.old.py` is created containing the previous model.py and a new `models.py` is created containing a more recent but not formatted version. __This will not affect your existing microservice db schema in any way__\n```shell \npython manage.py update_microservices_admin\n```\n3. Include microservice in installed apps\n```python\nINSTALLED_APPS = [\n    ...,\n    '{MICROSERVICE_NAME}',\n]\n```\n4. Include microservice model(s) in `{MICROSERVICE_NAME}/admin.py`\n```python\nfrom django.contrib import admin\nfrom {MICROSERVICE_NAME}.models import SomeModel\n\nadmin.site.register(SomeModel)\n```\n5. Create Super User.\n```shell\npython manage.py createsuperuser --username admin\n```\n6. Visit [admin](http://127.0.0.1:8000/admin/)\n\n### Update (existing) Microservice app admin\nRun the command\n```shell \npython manage.py update_microservices_admin\n```\n\n\n## Usage/In-depth API Documentation.\nSee [DOCUMENTATION.md](DOCUMENTATION.md)\n\n## Contributing\nSee [CONTRIBUTION.md](CONTRIBUTION.md)\n\n## Code of conducts\nSee [Code of Conducts](CODE_OF_CONDUCT.md)\n\n## Authors/Contributors\nSee list of [contributors](https://github.com/robotstech/django-microservices-admin/graphs/contributors) \nwho contributed to this project\n\n## Security Contact\nPlease disclose any security-related issues or vulnerabilities by emailing \n[contact's email](mailto:tech@robotslimited.com), instead of using the public issue tracker. \nSee [SECURITY.md](SECURITY.md) for more information.\n\n## License\nSee list of [LICENSE](LICENSE) \n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/robotstech/django-microservices-admin",
            "keywords": "Django,django-admin,microservices",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-microservices-admin",
            "package_url": "https://pypi.org/project/django-microservices-admin/",
            "platform": "",
            "project_url": "https://pypi.org/project/django-microservices-admin/",
            "project_urls": {
                "Homepage": "https://github.com/robotstech/django-microservices-admin"
            },
            "release_url": "https://pypi.org/project/django-microservices-admin/0.0.1/",
            "requires_dist": [
                "django (>=3.2)",
                "dj-database-url (>=0.5.0)",
                "mysqlclient (>=2.1.0) ; extra == 'mysql'",
                "psycopg2-binary (>=2.9.3) ; extra == 'postgres'"
            ],
            "requires_python": "",
            "summary": "Utilizing Django Admin to manage microservices data",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13032450,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ceb14bccb5e42573f2c31fcdbdd94a18",
                    "sha256": "5b4acdf5cdaa09cad8b70d60e913bbffa9ddda86d4bee1545174d2e646370e6b"
                },
                "downloads": -1,
                "filename": "django_microservices_admin-0.0.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ceb14bccb5e42573f2c31fcdbdd94a18",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 7160,
                "upload_time": "2022-02-28T10:46:16",
                "upload_time_iso_8601": "2022-02-28T10:46:16.738747Z",
                "url": "https://files.pythonhosted.org/packages/c8/4b/f03fb4c4c31f88b71d31bd289baea485ef7a485848b39c5bc8b1169549a5/django_microservices_admin-0.0.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f2da6a57b5070d9f79e3b1d20b5639c1",
                    "sha256": "f39ef01af563a25f8f99dcb4f3763ffb9e04b4deaed1142d74b2c497bb4ce292"
                },
                "downloads": -1,
                "filename": "django_microservices_admin-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f2da6a57b5070d9f79e3b1d20b5639c1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7156,
                "upload_time": "2022-02-28T11:03:34",
                "upload_time_iso_8601": "2022-02-28T11:03:34.653934Z",
                "url": "https://files.pythonhosted.org/packages/ed/ab/5c12dc423900e5c59415650457dff2c24f5d1e884c60f83c8d81aef12f2c/django_microservices_admin-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c4e0bd105669768ce1856a1f6691a3e1",
                    "sha256": "094ecc9e53788b49ad05342b1e205780b73d97ed6ff12e4a5aa4e96da2317be2"
                },
                "downloads": -1,
                "filename": "django-microservices-admin-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c4e0bd105669768ce1856a1f6691a3e1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 6587,
                "upload_time": "2022-02-28T10:46:18",
                "upload_time_iso_8601": "2022-02-28T10:46:18.391928Z",
                "url": "https://files.pythonhosted.org/packages/81/1a/f2af0b8ee01b49f47bf0ab677023d67860ba69118fb548b68b88a48707c8/django-microservices-admin-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}