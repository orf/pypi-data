{
    "0.0.3": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Topic :: Security"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cyberark/conjur-cli-python",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "conjur-api",
            "package_url": "https://pypi.org/project/conjur-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/conjur-api/",
            "project_urls": {
                "GitHub: repo": "https://github.com/cyberark/conjur-cli-python",
                "Homepage": "https://github.com/cyberark/conjur-cli-python"
            },
            "release_url": "https://pypi.org/project/conjur-api/0.0.3/",
            "requires_dist": [
                "cryptography (~=3.3.2)",
                "keyring (>=23.0.0)",
                "aiohttp (>=3.8.1)",
                "setuptools (>=57.0.0)",
                "urllib3 (>=1.25.9)",
                "asynctest (>=0.13.0) ; python_version < \"3.8\""
            ],
            "requires_python": ">=3.10.1",
            "summary": "HTTP client for CyberArk Conjur Secrets Manager",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12684970,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3635605cb2eda2e44ef58a1bf66d68c7",
                    "sha256": "a9b9d17d55884cdcad59d01bc7a9169f148c3084daab382355e38d3fe0ed2f95"
                },
                "downloads": -1,
                "filename": "conjur_api-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3635605cb2eda2e44ef58a1bf66d68c7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10.1",
                "size": 41509,
                "upload_time": "2022-01-20T16:42:29",
                "upload_time_iso_8601": "2022-01-20T16:42:29.214434Z",
                "url": "https://files.pythonhosted.org/packages/6d/19/491d3ea1d3f1b1648d96f3569ad79ea9d37779e7eb60bbebf2ed74ddfe52/conjur_api-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b10f720ae3677cd97ac8ad1732b5c79b",
                    "sha256": "f8f5c3d3cf2186e36e5b630dff9dedd901a9eb0cda41e08ffaa5c9dad35473c3"
                },
                "downloads": -1,
                "filename": "conjur_api-0.0.3.tar.gz",
                "has_sig": false,
                "md5_digest": "b10f720ae3677cd97ac8ad1732b5c79b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10.1",
                "size": 36189,
                "upload_time": "2022-01-20T16:42:30",
                "upload_time_iso_8601": "2022-01-20T16:42:30.454529Z",
                "url": "https://files.pythonhosted.org/packages/36/7b/0ad01809f8995a97a5e2d5006e8635bd0507480fadf08cfc3866b3c61b4f/conjur_api-0.0.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: MacOS :: MacOS X",
                "Operating System :: Microsoft :: Windows",
                "Operating System :: POSIX",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Topic :: Security"
            ],
            "description": "# Conjur Python SDK\n\nAn API client for Conjur written in python.\n\nFind more SDKs [from CyberArk](https://github.com/cyberark).\n\n## Certification level\n\n![](https://img.shields.io/badge/Certification%20Level-Community-28A745?link=https://github.com/cyberark/community/blob/master/Conjur/conventions/certification-levels.md)\n\nThis repo is a **Community** level project. It's a community contributed project that **is not reviewed or supported by\nCyberArk**. For more detailed information on our certification levels,\nsee [our community guidelines](https://github.com/cyberark/community/blob/master/Conjur/conventions/certification-levels.md#community)\n.\n\n## Requirements\n\nThis project requires a working Conjur server\n\nIt officially requires python 3.10 and above but can run with lower versions compiled with openssl 1.1.1\n\n## How to use the client\n\n### Prerequisites\n\nIt is assumed that Conjur (OSS or Enterprise) have already been installed in the environment and running in the\nbackground. If you haven't done so, follow these instructions for installation of\nthe [OSS](https://docs.conjur.org/Latest/en/Content/OSS/Installation/Install_methods.htm) and these for installation\nof [Enterprise](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-DAP/Latest/en/Content/HomeTilesLPs/LP-Tile2.htm).\n\nOnce Conjur is running in the background, you are ready to start setting up your python app to work with our Conjur\npython API!\n\n### Installation\n\nThe SDK can be installed via PyPI. Note that the SDK is a **Community level** project meaning that the SDK is subject to\nalterations that may result in breaking change.\n\n```\npip3 install conjur\n```\n\nTo avoid unanticipated breaking changes, make sure that you stay up-to-date on our latest releases and review the\nproject's [CHANGELOG.md](CHANGELOG.md).\n\nAlternatively, you can install the library from the source. Note that this will install the latest work from the cloned\nsource and not necessarily an official release.\n\nIf you wish to install the library from the source clone the [project](https://github.com/cyberark/conjur-cli-python) and run:\n\n```\npip3 install .\n```\n\n### Configuring the client\n\n#### Define connection parameters\n\nIn order to login to conjur you need to have 5 parameters known from advance.\n\n```\nconjur_url = \"https://my_conjur.com\"\naccount = \"my_account\"\nusername = \"user1\"\npassword = \"SomeStr@ngPassword!1\"\nssl_verification_mode = SslVerificationMode.TRUST_STORE\n```\n\n#### Define ConjurConnectionInfo\n\nConjurConnectionInfo is a data class containing all the non-credentials connection details.\n\n`connection_info = ConjurConnectionInfo(conjur_url=conjur_url,account=account,cert_file = None)`\n\n* conjur_url - url of conjur server\n* account - the account which we want to connect to\n* cert_file - a path to conjur rootCA file. we need it if we initialize the client in `SslVerificationMode.SELF_SIGN`\n  or `SslVerificationMode.CA_BUNDLE` mode\n\n#### Create credentials provider\n\nThe client uses credentials provider in order to get the connection credentials before making api command. This approach\nallow to keep the credentials in a safe location and provide it to the client on demand.\n\nWe provide the user with `CredentialsProviderInterface` which can be implemented the way the user see as best\nfit (`keyring` usage for example)\n\nWe also provide the user with a simple implementation of such provider called `SimpleCredentialsProvider`. Example of\ncreating such provider + storing credentials:\n\n```\ncredentials = CredentialsData(username=username, password=password, machine=conjur_url)\n\ncredentials_provider = SimpleCredentialsProvider()\n\ncredentials_provider.save(credentials)\n\ndel credentials\n```\n\n#### Creating the client and use it\n\nNow that we have created `connection_info` and `credentials_provider`\nWe can create our client\n\n```\nclient = Client(connection_info, credentials_provider=credentials_provider, ssl_verification_mode=ssl_verification_mode)\n```\n\n* ssl_verification_mode = `SslVerificationMode` enum that states what is the certificate verification technique we will\n  use when making the api request\n\nAfter creating the client we can login to conjur and start using it. Example of usage:\n\n```\nclient.login() # login to conjur and return the api_key`\n\nclient.list() # get list of all conjur resources that the user authorize to read`\n```\n\n## Supported Client methods\n\n#### `get(variable_id)`\n\nGets a variable value based on its ID. Variable is binary data that should be decoded to your system's encoding. For example: \n`get(variable_id).decode('utf-8')`.\n\n#### `get_many(variable_id[,variable_id...])`\n\nGets multiple variable values based on their IDs. Variables are returned in a dictionary that maps the variable name to\nits value.\n\n#### `set(variable_id, value)`\n\nSets a variable to a specific value based on its ID.\n\nNote: Policy to create the variable must have already been loaded, otherwise you will get a 404 error during invocation.\n\n#### `load_policy_file(policy_name, policy_file)`\n\nApplies a file-based YAML to a named policy. This method only supports additive changes. Result is a dictionary object\nconstructed from the returned JSON data.\n\n#### `replace_policy_file(policy_name, policy_file)`\n\nReplaces a named policy with one from the provided file. This is usually a destructive invocation. Result is a\ndictionary object constructed from the returned JSON data.\n\n#### `update_policy_file(policy_name, policy_file)`\n\nModifies an existing Conjur policy. Data may be explicitly deleted using the `!delete`, `!revoke`, and `!deny`\nstatements. Unlike\n\"replace\" mode, no data is ever implicitly deleted. Result is a dictionary object constructed from the returned JSON\ndata.\n\n#### `list(list_constraints)`\n\nReturns a list of all available resources for the current account.\n\nThe 'list constraints' parameter is optional and should be provided as a dictionary.\n\nFor example: `client.list({'kind': 'user', 'inspect': True})`\n\n| List constraints | Explanation                                                  |\n| ---------------- | ------------------------------------------------------------ |\n| kind             | Filter resources by specified kind (user, host, layer, group, policy, variable, or webservice) |\n| limit            | Limit list of resources to specified number                  |\n| offset           | Skip specified number of resources                           |\n| role             | Retrieve list of resources that specified role is entitled to see (must specify role's full ID) |\n| search           | Search for resources based on specified query                |\n| inspect          | List the metadata for resources                              |\n\n#### `def list_permitted_roles(list_permitted_roles_data: ListPermittedRolesData)`\n\nLists the roles which have the named permission on a resource.\n\n#### `def list_members_of_role(data: ListMembersOfData)`\n\nLists the resources which are members of the given resource.\n\n#### `def create_token(create_token_data: CreateTokenData)`\n\nCreates Host Factory tokens for creating hosts\n\n#### `def create_host(create_host_data: CreateHostData)`\n\nUses Host Factory token to create host\n\n#### `def revoke_token(token: str)`\n\nRevokes the given Host Factory token\n\n#### `rotate_other_api_key(resource: Resource)`\n\nRotates another entity's API key and returns it as a string.\n\nNote: resource is of type Resource which should have `type` (user / host) and\n`name` attributes.\n\n#### `rotate_personal_api_key(logged_in_user, current_password)`\n\nRotates the personal API key of the logged-in user and returns it as a string.\n\n#### `change_personal_password(logged_in_user, current_password, new_password)`\n\nUpdates the current, logged-in user's password with the password parameter provided.\n\nNote: the new password must meet the Conjur password complexity constraints. It must contain at least 12 characters: 2\nuppercase, 2 lowercase, 1 digit, 1 special character.\n\n#### `whoami()`\n\n_Note: This method requires Conjur v1.9+_\n\nReturns a Python dictionary of information about the client making an API request (such as its IP address, user,\naccount, token expiration date, etc).\n\n## Contributing\n\nWe welcome contributions of all kinds to this repository. For instructions on how to get started and descriptions of our\ndevelopment workflows, please see our [contributing guide](CONTRIBUTING.md).\n\n## License\n\nCopyright (c) 2020 CyberArk Software Ltd. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the\nLicense. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"\nAS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific\nlanguage governing permissions and limitations under the License.\n\nFor the full license text see [`LICENSE`](LICENSE).\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/cyberark/conjur-cli-python",
            "keywords": "",
            "license": "Apache 2",
            "maintainer": "",
            "maintainer_email": "",
            "name": "conjur-api",
            "package_url": "https://pypi.org/project/conjur-api/",
            "platform": "",
            "project_url": "https://pypi.org/project/conjur-api/",
            "project_urls": {
                "GitHub: repo": "https://github.com/cyberark/conjur-cli-python",
                "Homepage": "https://github.com/cyberark/conjur-cli-python"
            },
            "release_url": "https://pypi.org/project/conjur-api/0.0.4/",
            "requires_dist": [
                "cryptography (~=3.3.2)",
                "keyring (>=23.0.0)",
                "aiohttp (>=3.8.1)",
                "setuptools (>=57.0.0)",
                "urllib3 (>=1.25.9)",
                "asynctest (>=0.13.0) ; python_version < \"3.8\""
            ],
            "requires_python": ">=3.10.1",
            "summary": "HTTP client for CyberArk Conjur Secrets Manager",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12684970,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "60a362baa50e4edaa74374bfa0188d27",
                    "sha256": "7911be24fb77133ef8fc72bbf75c8fad4fbfd0537c29ce42356935249e6aa2c3"
                },
                "downloads": -1,
                "filename": "conjur_api-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "60a362baa50e4edaa74374bfa0188d27",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10.1",
                "size": 41510,
                "upload_time": "2022-01-25T08:41:22",
                "upload_time_iso_8601": "2022-01-25T08:41:22.087606Z",
                "url": "https://files.pythonhosted.org/packages/47/c8/cb55c30b06efb0c8bb06d522bb06db0cec728407a6539e64f9099b9b8f28/conjur_api-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "27193aa8fbe5dd7db2a96313e1fc3c4d",
                    "sha256": "6b69c3705bc4b96d24bc1612750eace314adbf216cef692f8f256aa7002078e0"
                },
                "downloads": -1,
                "filename": "conjur_api-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "27193aa8fbe5dd7db2a96313e1fc3c4d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10.1",
                "size": 36183,
                "upload_time": "2022-01-25T08:41:23",
                "upload_time_iso_8601": "2022-01-25T08:41:23.213349Z",
                "url": "https://files.pythonhosted.org/packages/84/41/a1b70036cb4e9fa2797b0f03693cfc9cb119114ed44c149789c9caad4645/conjur_api-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}