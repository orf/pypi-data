{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "Felix Kloss <felix.widmaier@tue.mpg.de>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Typing :: Typed"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "config,configuration",
            "license": "",
            "maintainer": "",
            "maintainer_email": "Felix Kloss <felix.widmaier@tue.mpg.de>",
            "name": "variconf",
            "package_url": "https://pypi.org/project/variconf/",
            "platform": null,
            "project_url": "https://pypi.org/project/variconf/",
            "project_urls": {
                "Bug Tracker": "https://github.com/MPI-IS/variconf/issues",
                "Source": "https://github.com/MPI-IS/variconf"
            },
            "release_url": "https://pypi.org/project/variconf/1.0.0/",
            "requires_dist": [
                "omegaconf",
                "variconf[toml,yaml] ; extra == 'all'",
                "variconf[test] ; extra == 'mypy'",
                "mypy ; extra == 'mypy'",
                "types-PyYAML ; extra == 'mypy'",
                "types-setuptools ; extra == 'mypy'",
                "variconf[all] ; extra == 'test'",
                "pytest ; extra == 'test'",
                "tomli ; extra == 'toml'",
                "pyyaml ; extra == 'yaml'"
            ],
            "requires_python": ">=3.7",
            "summary": "Wrapper around OmegaConf for loading configuration from various types of files.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15629048,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2e06460d00a618e0e1de9be735b1c375",
                    "sha256": "05ac01100f0a54d0a6e6372b71cd98f77ee6a309dd34cb3ee2194f4692d64623"
                },
                "downloads": -1,
                "filename": "variconf-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2e06460d00a618e0e1de9be735b1c375",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 9581,
                "upload_time": "2022-11-02T15:54:14",
                "upload_time_iso_8601": "2022-11-02T15:54:14.599704Z",
                "url": "https://files.pythonhosted.org/packages/6c/33/d4c5541e464ee4e9fb01455266016738b9c3a2b3224dd95881b0a609da25/variconf-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a62536e089da2db9cabefcbe7b580eb4",
                    "sha256": "28494b7c3bd53f262c5b3e03f2927ace1dac6be50c0b3b974b81e2874c9bf467"
                },
                "downloads": -1,
                "filename": "variconf-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a62536e089da2db9cabefcbe7b580eb4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 14115,
                "upload_time": "2022-11-02T15:54:16",
                "upload_time_iso_8601": "2022-11-02T15:54:16.857569Z",
                "url": "https://files.pythonhosted.org/packages/17/66/f282d33e6bf8b38bb0cf0259fd8ed0a5e3fa2910da8839cb258edccd79cd/variconf-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0a1": {
        "info": {
            "author": "",
            "author_email": "Felix Widmaier <felix.widmaier@tue.mpg.de>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: BSD License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Typing :: Typed"
            ],
            "description": "VariConf - Load Configurations from Various Types of Files\n==========================================================\n\nVariConf provides a wrapper around [OmegaConf](https://omegaconf.readthedocs.io) for\nloading configuration from various types of files.\n\nSupported file types are JSON, YAML and TOML.  Support for more file types can easily be\nadded by registering a custom loader function.\n\nThanks to the power of OmegaConf, you can provide a configuration schema which the\ndefines expected parameters, default values and optionally expected types.\n\n**Note: This project is currently in alpha phase.  Changes to the API may happen.**\n\n\nDesign Goals\n------------\n\nThis package is developed with the following goals in mind:\n\n- Load configuration from files with expected parameters and default values provided in\n  an easy way.\n- Provide config as a simple Namespace-like object (with option to convert to\n  dictionary).\n- Do not commit to a specific file format.  All formats that can easily be loaded into a\n  dictionary should be supported (json, toml, yaml, ...).\n- Optionally check types.\n- Optionally check for unknown parameters in the file (to raise an error).\n- Keep it simple.  Prefer less features over too complicated API.\n\n\nWhy Another Configuration Loader?\n---------------------------------\n\nAs loading configuration from a file in a controlled manner is a rather common task when\nimplementing applications, I expected that there should already be a well adopted\nsolution for it.  However, I could not find something that satisfies all my requirements\nlisted above.\n\nThere is, however, [OmegaConf](https://omegaconf.readthedocs.io), which already does\nmost of it.  It mostly is only missing the flexibility regarding file types.\nHence, I started to develop VariConf, which is basically just a thin wrapper around\nOmegaConf, adding the things that I was missing.\n\n\nUsage\n-----\n\nWhen creating an instance of `WConf`, a configuration \"schema\" needs to be given,\ni.e. a structure (e.g. dictionary) that defines what sections and parameters the\nconfiguration has and that provides default values.\n\nA number of \"load\"-methods is provided to load configurations from different sources\n(e.g. JSON files, YAML files, dictionaries from other sources, ...).  When called,\nthe corresponding parameters are merged into the existing configuration, overwriting\nexisting values.  This means that an input does not need to provide all parameters,\nin this case the default values are kept.  Further, if calling multiple\n\"load\"-methods after another, the later calls will overwrite values set by previous\nones.\n\nAll \"load\"-methods return ``self``, so they can be chained:\n\n```python\nimport variconf\n\nschema = {\"sec1\": {\"foo\": 42, \"bar\": 13}, \"sec2\": {\"bla\": \"\"}}\nwconf = variconf.WConf(schema)\nconfig = (\n    wconf.load_file(\"~/global_config.toml\")\n    .load_file(\"./local_config.yml\")\n    .load_dotlist(sys.argv[1:])  # easily allow overwriting parameters via\n                                 # command-line arguments\n    .get()  # return the final config object\n)\n```\n\n### Supported File Types\n\nSupported file types are JSON, YAML and TOML.  Support for custom file types can be\nadded by providing a loader function.  Example for adding XML support:\n\n```python\nimport xml.etree.ElementTree as ET\n\ndef xml_loader(fp: typing.IO) -> dict:\n    xml_str = fp.read()\n    xml_tree = ET.fromstring(xml_str)\n    # do some magic to convert XML tree to dictionary\n    xml_dict = tree_to_dict(xml_tree)\n    return xml_dict\n\nwconf.add_file_loader(\"xml\", [\".xml\"], xml_loader)\n\n# now, XML files can be read by WConf.load and WConf.load_file\nwconf.load_file(\"config.xml\")\n```\n\n\n### Type Checking\n\nOmegaConf supports type-checking by providing a schema as dataclass with type hints:\n\n```python\n@dataclasses.dataclass\nclass ConfigSchema:\n    foo: int\n    bar: str\n\nwconf = variconf.WConf(ConfigSchema)\n```\n\n### Required Values\n\nOmegaConf supports required values by adding the corresponding parameter to the config\nbut setting its value to \"???\" to indicate that it is missinge.  See documentation of\nOmegaConf for more on this.\n\n\n### Variable Interpolation\n\nOmegaConf has a feature called [variable interpolation](https://omegaconf.readthedocs.io/en/latest/usage.html#variable-interpolation)\nthat allows to refer to other fields within the config file:\n\n```yaml\nserver:\n  host: localhost\n  port: 80\n\nclient:\n  url: http://${server.host}:${server.port}/\n  server_port: ${server.port}\n  # relative interpolation\n  description: Client of ${.url}\n```\nSee the documentation of OmegaConf for more information.\n\n\nMissing Features\n----------------\n\n- Option to raise error if config input contains unexpected parameters (using\n  `OmegaConf.set_struct`).\n- Option to load the config schema from a file.\n- Use custom errors, e.g. in case of unsupported file formats.\n- Find config file in a list of possible locations.\n- Find config file based on [XDG specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html).\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "config,configuration",
            "license": "BSD 3-Clause License Copyright (c) 2022, Planck Gesellschaft. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
            "maintainer": "",
            "maintainer_email": "Felix Widmaier <felix.widmaier@tue.mpg.de>",
            "name": "variconf",
            "package_url": "https://pypi.org/project/variconf/",
            "platform": null,
            "project_url": "https://pypi.org/project/variconf/",
            "project_urls": {
                "Bug Tracker": "https://github.com/MPI-IS/variconf/issues",
                "Source": "https://github.com/MPI-IS/variconf"
            },
            "release_url": "https://pypi.org/project/variconf/1.0.0a1/",
            "requires_dist": [
                "omegaconf",
                "variconf[toml,yaml] ; extra == 'all'",
                "variconf[test] ; extra == 'mypy'",
                "mypy ; extra == 'mypy'",
                "types-PyYAML ; extra == 'mypy'",
                "types-setuptools ; extra == 'mypy'",
                "variconf[all] ; extra == 'test'",
                "pytest ; extra == 'test'",
                "tomli ; extra == 'toml'",
                "pyyaml ; extra == 'yaml'"
            ],
            "requires_python": ">=3.7",
            "summary": "Wrapper around OmegaConf for loading configuration from various types of files.",
            "version": "1.0.0a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15629048,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ead5867c699d19b401bf6da35517764b",
                    "sha256": "1330df14b4629e6a7bb29cf4b79a9da2b436cf9d36797568e25420a57de8c115"
                },
                "downloads": -1,
                "filename": "variconf-1.0.0a1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ead5867c699d19b401bf6da35517764b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 7928,
                "upload_time": "2022-10-20T12:22:08",
                "upload_time_iso_8601": "2022-10-20T12:22:08.364030Z",
                "url": "https://files.pythonhosted.org/packages/5b/77/8d3f623f8a86875ee622d229d5b7c8f7441d015118bbf5c8e556e9d09c87/variconf-1.0.0a1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ac177c5ce708c7a19b4c765c01c25d5d",
                    "sha256": "b7d5ccb5df5f25c666ca851c110803ac3035da6d144eba1ac9b24bbdb9fabc8e"
                },
                "downloads": -1,
                "filename": "variconf-1.0.0a1.tar.gz",
                "has_sig": false,
                "md5_digest": "ac177c5ce708c7a19b4c765c01c25d5d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 9800,
                "upload_time": "2022-10-20T12:22:11",
                "upload_time_iso_8601": "2022-10-20T12:22:11.166818Z",
                "url": "https://files.pythonhosted.org/packages/45/42/4ef4b8bf5e8de533f854bded3e0f45289d3fbb31408025866e9f6b8d5a94/variconf-1.0.0a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}