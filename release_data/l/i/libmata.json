{
    "1.4.1": {
        "info": {
            "author": "Luk\u00e1\u0161 Hol\u00edk <holik@fit.vutbr.cz>, Ond\u0159ej Leng\u00e1l <lengal@fit.vutbr.cz>, Martin Hru\u0161ka <ihruskam@fit.vutbr.cz>, Tom\u00e1\u0161 Fiedor <ifiedortom@fit.vutbr.cz>, David Chocholat\u00fd <chocholaty.david@protonmail.com>, Juraj S\u00ed\u010d <sicjuraj@fit.vutbr.cz>, Tom\u00e1\u0161 Vojnar <vojnar@fit.vutbr.cz>",
            "author_email": "lengal@fit.vutbr.cz",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/verifit/mata",
            "keywords": "automata,finite automata,alternating automata",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "libmata",
            "package_url": "https://pypi.org/project/libmata/",
            "platform": null,
            "project_url": "https://pypi.org/project/libmata/",
            "project_urls": {
                "Homepage": "https://github.com/verifit/mata"
            },
            "release_url": "https://pypi.org/project/libmata/1.4.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The automata library",
            "version": "1.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15657079,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0864686823f7e11ec48be620a0c63056",
                    "sha256": "1c29f0ee2cda0447945344ad5109cd87bd4435950d0d177fb78cd512270437dc"
                },
                "downloads": -1,
                "filename": "libmata-1.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "0864686823f7e11ec48be620a0c63056",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 220241,
                "upload_time": "2022-10-19T15:19:42",
                "upload_time_iso_8601": "2022-10-19T15:19:42.605309Z",
                "url": "https://files.pythonhosted.org/packages/4c/ea/6400aa4151d81b93ca8845ec8b3c72342bda6fbb37007e46429ba3e17325/libmata-1.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.7.1": {
        "info": {
            "author": "Luk\u00e1\u0161 Hol\u00edk <holik@fit.vutbr.cz>, Ond\u0159ej Leng\u00e1l <lengal@fit.vutbr.cz>, Martin Hru\u0161ka <ihruskam@fit.vutbr.cz>, Tom\u00e1\u0161 Fiedor <ifiedortom@fit.vutbr.cz>, David Chocholat\u00fd <chocholaty.david@protonmail.com>, Juraj S\u00ed\u010d <sicjuraj@fit.vutbr.cz>, Tom\u00e1\u0161 Vojnar <vojnar@fit.vutbr.cz>",
            "author_email": "lengal@fit.vutbr.cz",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Mata: The Automata Library\n\n[![GitHub tag](https://img.shields.io/github/tag/VeriFIT/mata.svg)](https://github.com/VeriFIT/mata)\n\n[![master: Ubuntu (build-&-test)](https://github.com/VeriFIT/mata/actions/workflows/ubuntu.yml/badge.svg)](https://github.com/VeriFIT/mata/actions/workflows/ubuntu.yml)\n[![master: MacOS (build-&-test)](https://github.com/VeriFIT/mata/actions/workflows/macos.yml/badge.svg)](https://github.com/VeriFIT/mata/actions/workflows/macos.yml)\n\n[![devel: Ubuntu (build-&-test)](https://github.com/VeriFIT/mata/actions/workflows/ubuntu.yml/badge.svg?branch=devel)](https://github.com/VeriFIT/mata/actions/workflows/ubuntu.yml)\n[![devel: MacOS (build-&-test)](https://github.com/VeriFIT/mata/actions/workflows/macos.yml/badge.svg?branch=devel)](https://github.com/VeriFIT/mata/actions/workflows/macos.yml)\n\nMata is an open source automata library that offers interface for different kinds of automata (NFA,\nAFA, etc.). Currently, Mata offers two interfaces:\n\n  1. An efficient library implemented in C/C++\n  2. A flexible wrapper implemented in Python that uses the efficient library\n\n# Building from sources\n\nTo build the the library run the following:\n\n```\ngit clone https://github.com/VeriFIT/mata\ncd mata\nmake release\n```\n\nIn order, to verify the functionality of the library, you can run the test suite:\n\n```\nmake test\n```\n\nYou might, need to install the dependencies to measure the coverage of the tests. \nRun the following to install the dependencies for MacOS:\n\n```\nbrew install lcov gcovr\n```\n\nRun the following to install the dependencies for Ubuntu:\n\n```\nsudo apt-get install -y build-essential lcov gcovr xdg-utils\n```\n\n# Building the Python binding from sources\n\nMata offers binding of its efficient library to Python. You can install the binding as an Python\npackage on your system as follows. First, install the necessary requirements for Python and your\nsystem. We recommend using the virtual environemnt (`venv`) to install and use the library.\n\n```\npython -m pip install --upgrade pip\nmake -C bindings/python init\n\nsudo apt-get -qq update \nsudo apt-get -qq install -y graphviz graphviz-dev\n```\n\nNow, you can install the library.\n\n```\nmake -C bindings/python install\n```\n\nFinally, you can verify the binding woks as expected by running the test suite:\n\n```\nmake -C bindings/python test\n```\n\n# Getting started\n\nTo get started, we refer to the [examples](examples/) in our repository.\nThis directory contains examples of various usage in form of:\n\n  1. C/C++ example programs. To run the program run the following:\n\n```\nmake -C examples\n./examples/example01-simple\n```\n\n  3. Python example scripts. To run the scripts run the following.\n\n```\npython examples/example01-python-binding.py\n```\n\n  4. Python jupyter notebooks. To run the jupyter notebook, one needs to have jupyter installed as\n  a prerequisite. The run the jupyter notebook, that creates an instance on your local server.\n  Navigate to generated link to see the available jupyter notebooks:\n   \n```\npip3 install jupyter\njupyter notebook\n```\n\n## Using the library\n\nThe library can be used directly in the C/C++ code. The result of compilation is a static\nor dynamic library, that can be linked to ones project. Note, that the library is dependent\non several other 3rd party libraries (e.g., `libre2` or `libsimlib`), which are included in\nthe repository.\n\nFirst import the library in your code. If the library is properly installed, you can use\nthe standard include.\n\n```cpp\n#include <mata/nfa.hh>\n```\n\nWe recommend to use the `Mata::Nfa` namespace for easier usage:\n\n```cpp\nusing namespace Mata::Nfa;\n```\n\nStart by creating an automaton with fixed number of states.\n\n```cpp\nint main() {\n    Nfa aut(4);\n```\n\nYou can set the initial and final states directly using the initializers.\n\n```cpp\n    aut.initialstates = {0, 1};\n    aut.finalstates = {2, 3};\n```\n\nFurther, you can add transitions in form of tripple `(state_from, symbol, states_to`:\n\n```cpp\n    aut.add_trans(0, 0, 2);\n    aut.add_trans(1, 1, 3);\n```\n\nYou can verify the state of your automaton by generating the automaton in `.dot` format.\n\n```cpp\n    aut.print_to_DOT(std::cout);\n\n    return 0;\n}\n```\n\nFinally, compile the code using the following Makefile:\n\n```makefile\nCFLAGS=-std=c++14 -pedantic-errors -Wextra -Wall -Wfloat-equal -Wctor-dtor-privacy -Weffc++ -Woverloaded-virtual -fdiagnostics-show-option -g\n\nINCLUDE=-I../include -I../3rdparty/simlib/include -I../3rdparty/re2/include\nLIBS_ADD=-L../build/src -L../build/3rdparty/re2 -L../build/3rdparty/simlib\nLIBS=-lmata -lsimlib -lre2\n\n.PHONY: all clean\n\nall: $(patsubst %.cc,%,$(wildcard *.cc)) ../build/src/libmata.a\n\nexample: example.cc\n\tg++ $(CFLAGS) $(INCLUDE) $(LIBS_ADD) $< $(LIBS) -o $@\n```\n\n## Using the binding\n\nThe python binding is installed (by default) to your local python package repository. You can\neither use the binding in your own scripts or in the python interpreter.\n\nYou can start using the binding by importing the `mata` package.\n\n```python\nimport mata\n```\n\nIn your own scripts, we recommend to use the standard guard for running the scripts, as follows.\n\n```python\nif __name__ == \"__main__\":\n```\n\nThe usage of the binding copies (to certain levels) the usage of the C++ library.\n\n```python\n    aut = mata.Nfa(4)\n\n    aut.initial_states = {0, 1}\n    aut.final_states = {2, 3}\n    aut.add_trans_raw(0, 0, 2)\n    aut.add_trans_raw(1, 1, 3)\n\n    print(aut.to_dot_str())\n```\n\nYou can either run your scripts directly using `python` or compile it using the `cython` project.\n\n# Contributing\n\nIf you'd like to contribute to the libmata, \nplease [fork the repository](https://github.com/VeriFIT/mata/fork), create a new \nfeature branch, and finally [create a new pull request](https://github.com/VeriFIT/mata/compare).\n\nIn case you run into some unexpected behaviour, error or anything suspicions\neither contact us directly through mail or \n[create a new issue](https://github.com/VeriFIT/mata/issues/new/choose).\nWhen creating a new issue, please, try to include everything necessary for us to know\n(such as the version, operation system, etc.) so we can sucessfully replicate the issue.\n\n## Note to main contributors\n\nBy default, each merge automatically increases the `minor` version of the library\n(i.e., `0.0.0 -> 0.1.0` ). This can be overruled using either tag `#patch` (increasing \npatch version, i.e., `0.0.0 -> 0.0.1`) or `#major` (increasing major version, i.e., \n`0.0.0 -> 1.0.0`). This tag is specified in the merge message. \n\nGenerally, it is recommended to use `#major` for changes that introduces backward-incompatible\nchanges for people that used previous versions, and `#patch` for minor changes, such as bug-fixes,\nperformance fixes or refactoring.\n\n# Links\n\n  - Project (origin) repository: <https://github.com/verifit/mata>\n  - Issue tracker: <https://github.com/verifit/mata/issues>\n    - In case of some sensitive bugs (like security vulnerabilities),\n      please contact us directly, instead of using issue tracker.\n      We value your effort to improve the security and privacy of this project!\n  - Project documentation: <https://verifit.github.io/mata>\n  - Jupyter notebooks demonstrating `mata` usage: <https://github.com/VeriFIT/mata/tree/devel/examples/notebooks>\n    - [Example 01: WS1S Logic](https://github.com/VeriFIT/mata/tree/devel/examples/notebooks/example-01-ws1s-formulae.ipynb)\n    - [Example 02: ReDoS Attacks](https://github.com/VeriFIT/mata/tree/devel/examples/notebooks/example-02-redos-attacks.ipynb)\n    - [Example 03: Exploring Maze](https://github.com/VeriFIT/mata/tree/devel/examples/notebooks/example-03-exploring-maze.ipynb)\n\nAlso, check out our research group focusing on program analysis, static and dynamic analysis,\nformal methods, verification and many more: \n<http://www.fit.vutbr.cz/research/groups/verifit/index.php.en>.\n\n# Licensing\n\nThe code of this project is licensed under GNU GPLv3 license.\n\n# Contacts\n\n  - **Luk\u00e1\u0161 Hol\u00edk** ([kilohsakul](https://github.com/kilohsakul)): the supreme leader, the emperor of theory;\n  - **Ond\u0159ej Leng\u00e1l** ([ondrik](https://github.com/ondrik)): prototype developer and the world's talest hobbit;\n  - Martin Hru\u0161ka ([martinhruska](https://github.com/martinhruska)): library maintainer;\n  - Tom\u00e1\u0161 Fiedor ([tfiedor](https://github.com/tfiedor)): python binding maintainer;\n  - David Chocholat\u00fd ([Adda0](https://github.com/Adda0)) library and binding developer;\n  - Juraj S\u00ed\u010d ([jurajsic](https://github.com/jurajsic)): library developer;\n  - Tom\u00e1\u0161 Vojnar ([vojnar](https://github.com/vojnar)): the spiritual leader;\n\n# Acknowledgements\n\nWe thank for the support received from the Brno University of Technology \n([BUT FIT](https://www.fit.vutbr.cz/)).\n\nDevelopment of this tool has been supported by the following projects: ???.\n\nThis tool as well as the information provided on this web page reflects\nonly the author's view and no organization is responsible for any use\nthat may be made of the information it contains.\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/verifit/mata",
            "keywords": "automata,finite automata,alternating automata",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "libmata",
            "package_url": "https://pypi.org/project/libmata/",
            "platform": null,
            "project_url": "https://pypi.org/project/libmata/",
            "project_urls": {
                "Homepage": "https://github.com/verifit/mata"
            },
            "release_url": "https://pypi.org/project/libmata/1.7.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The automata library",
            "version": "1.7.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15657079,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f936bd7a087b4cf32830c2b3ddafff0c",
                    "sha256": "ebc1e0aeb8c6a64547e58c8a8a1e1ece6843a6585bdf95252cc89aaa69faabbf"
                },
                "downloads": -1,
                "filename": "libmata-1.7.1-py3.9-linux-x86_64.egg",
                "has_sig": false,
                "md5_digest": "f936bd7a087b4cf32830c2b3ddafff0c",
                "packagetype": "bdist_egg",
                "python_version": "1.7.1",
                "requires_python": null,
                "size": 8201023,
                "upload_time": "2022-11-04T15:49:16",
                "upload_time_iso_8601": "2022-11-04T15:49:16.026484Z",
                "url": "https://files.pythonhosted.org/packages/d3/72/b85e0bae8e101c7440a62b50128a0a849f8709c8cf396ae2fc9fb8e79fc6/libmata-1.7.1-py3.9-linux-x86_64.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "79b6ba0d815ce0311fabeb845ad3af59",
                    "sha256": "191412a9b1f4169583686db1b921a94c073eea35729a0f545d25c42a94a48547"
                },
                "downloads": -1,
                "filename": "libmata-1.7.1.tar.gz",
                "has_sig": false,
                "md5_digest": "79b6ba0d815ce0311fabeb845ad3af59",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 222210,
                "upload_time": "2022-11-04T15:49:18",
                "upload_time_iso_8601": "2022-11-04T15:49:18.479181Z",
                "url": "https://files.pythonhosted.org/packages/71/84/9f81fb2e3ebfa7915568514c6882267d0f01bb08c44e84aa3e1d8e4523c1/libmata-1.7.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}