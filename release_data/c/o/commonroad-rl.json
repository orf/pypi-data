{
    "2022.2": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "Operating System :: POSIX :: Linux",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.7"
            ],
            "description": "# CommonRoad-RL\n\nThis repository contains a software package to solve motion planning problems on [CommonRoad](https://commonroad.in.tum.de) using Reinforcement Learning algorithms. We currently use the implementation for the RL algorithms from [OpenAI Stable Baselines](https://stable-baselines.readthedocs.io/en/master/), but the package can be run with any standard (OpenAI Gym compatible) RL implementations.\n\n## CommonRoad-RL in a nutshell\n```python\nimport gym\nimport commonroad_rl.gym_commonroad\n\n# kwargs overwrites configs defined in commonroad_rl/gym_commonroad/configs.yaml\nenv = gym.make(\"commonroad-v1\",\n               action_configs={\"action_type\": \"continuous\"},\n               goal_configs={\"observe_distance_goal_long\": True, \"observe_distance_goal_lat\": True},\n               surrounding_configs={\"observe_lane_circ_surrounding\": True, \"lane_circ_sensor_range_radius\": 100.},\n               reward_type=\"sparse_reward\",\n               reward_configs_sparse={\"reward_goal_reached\": 50., \"reward_collision\": -100})\n\nobservation = env.reset()\nfor _ in range(500):\n    # env.render() # rendered images with be saved under ./img\n    action = env.action_space.sample() # your agent here (this takes random actions)\n    observation, reward, done, info = env.step(action)\n\n    if done:\n        observation = env.reset()\nenv.close()\n```\n## Folder structure\n```\ncommonroad-rl                                           \n\u251c\u2500 commonroad_rl\n\u2502  \u251c\u2500 doc                               # Folder for documentation         \n\u2502  \u251c\u2500 gym_commonroad                    # Gym environment for CommonRoad scenarios\n|     \u251c\u2500 action                         # Action and Vehicle modules\n|     \u251c\u2500 observation                    # Observation modules\n|     \u251c\u2500 reward                         # Reward and Termination modules\n|     \u251c\u2500 utils                          # Utility functions for gym_commonroad\n\u2502     \u251c\u2500 configs.yaml                   # Default config file for actions, observations, rewards, and termination conditions,\n\t\t\t\t\t\t\t\t\t\t  as well as for observation space optimization and reward coefficient optimization\n\u2502     \u251c\u2500 commonroad_env.py              # CommonRoadEnv(gym.Env) class\n\u2502     \u2514\u2500 constants.py                   # Script to define path, vehicle, and draw parameters\n\u2502  \u251c\u2500 hyperparams                       # Config files for default hyperparameters for various RL algorithms                                       \n\u2502  \u251c\u2500 tests                             # Test system of commmonroad-rl.\n\u2502  \u251c\u2500 tools                             # Tools to validate, visualize and analyze CommonRoad .xml files, as well as preprocess and convert to .pickle files.                                         \n\u2502  \u251c\u2500 utils_run                         # Utility functions to run training, tuning and evaluating files                                      \n\u2502  \u251c\u2500 README.md                                                      \n\u2502  \u251c\u2500 evaluate_model.py                 # Script to evaluate a trained RL model on specific scenarios and visualize the scenario                \n\u2502  \u251c\u2500 generate_solution.py              # Script to genearte CommonRoad solution files from trained RL models.\n\u2502  \u251c\u2500 train_model.py                    # Script to train RL model or optimize hyperparameters or environment configurations           \n\u2502  \u251c\u2500 sensitivity_analysis.py           # Script to run sensitivity analysis for a trained model\n\u2502  \u2514\u2500 plot_learning_curves.py           # Plot learning curves with provided training log files.                \n\u251c\u2500 scripts                              # Bash scripts to install all dependencies, train and evaluate RL models, as well as generate CommonRoad solution files from trained RL models.\n\u251c\u2500 README.md                                            \n\u251c\u2500 commonroad_style_guide.rst           # Coding style guide for this project                \n\u251c\u2500 environment.yml                                      \n\u2514\u2500 setup.py                                      \n```\n## Installation\n\n### Installation using Docker\nDetailed instructions under ```./commonroad_rl/install_docker/readme_docker.md```\n\n### Installation via pip\n\n1. [download & install conda](https://docs.conda.io/projects/conda/en/latest/user-guide/install/linux.html), and init anaconda to work from the terminal. tested on conda 4.5; 4.9, 4.10\n```\n~/anaconda3/bin/conda init\n# for minconda\n~/miniconda3/bin/conda init\n```\n2. setup a new conda env (or install packages to an existing conda env e.g. myenv `conda env update --name myenv --file environment.yml`)\n```\nconda create --name cr37 python==3.7\nconda activate cr37\nconda install mpi4py\npip install commonroad-rl\n```\n\n## Usage\n\n### Tutorials\nTo get to know the package, please check `./commonroad_rl/tutorials` for further details.\n\n### Python scripts\nThe commonroad_rl folder contains the source files. There are Python scripts for training, evaluating, and visualizing models. The most important scrips are explained in `./commonroad_rl/README.md` and can be run with your Python executable. They are especially useful if you are developing a new feature or want to debug a specific part of the training.\n\n### Bash scripts\nIf you tested your codes already and everything runs smoothly on your computer and you now want to run the real experiments on larger dataset, the bash scripts help you with that. The are located in `./scripts`. They can be used for training with PPO and TD3 and testing an agent. Always adapt the specific paths in the scripts to the corresponding paths on your machine and check the comments in the file to determine which arguments have to be provided.  \n\n## Development\n\nPlease use `development` branch or open a new `feature_xxx` branch to make contribution.\n\n## References and Suggested Guides\n \n1. [OpenAI Stable Baselines](https://stable-baselines.readthedocs.io/en/master/): the implementation of RL algorithms used in our project.\n2. [OpenAI Spinning Up](https://spinningup.openai.com/en/latest/spinningup/rl_intro.html): we do not use their implementations in our project. But they provide quite nice explanations of RL concepts.\n3. [OpenAI Gym](https://gym.openai.com/docs/): general interface.\n4. [OpenAI Safety Gym](https://openai.com/blog/safety-gym/): a special collection of Gyms for safe RL. Configurable as our project.\n\n## Publication\n\nIf you use CommonRoad-RL in your paper, please cite:\n```\n@inproceedings{Wang2021,\n\tauthor = {Xiao Wang and  Hanna Krasowski and  Matthias Althoff},\n\ttitle = {{CommonRoad-RL}: A Configurable Reinforcement Learning Environment for Motion Planning of Autonomous Vehicles},\n\tbooktitle = {Proc. of the IEEE International Conference on Intelligent Transportation Systems (ITSC)},\n\tyear = {2021},\n}\n```\n\n## Contact:\ncommonroad@lists.lrz.de\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://commonroad.in.tum.de/",
            "keywords": "autonomous,automated,vehicles,driving,motion,planning",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "commonroad-rl",
            "package_url": "https://pypi.org/project/commonroad-rl/",
            "platform": null,
            "project_url": "https://pypi.org/project/commonroad-rl/",
            "project_urls": {
                "Homepage": "https://commonroad.in.tum.de/"
            },
            "release_url": "https://pypi.org/project/commonroad-rl/2022.2/",
            "requires_dist": [
                "aenum",
                "networkx",
                "triangle",
                "gym (==0.21.0)",
                "Polygon3",
                "pybind11",
                "stable-baselines (==2.10.0)",
                "commonroad-io (==2022.1)",
                "commonroad-vehicle-models",
                "commonroad-drivability-checker (==2022.1)",
                "commonroad-route-planner (==2022.1)",
                "SALib (==1.3.13)",
                "pytest ; extra == 'tests'",
                "optuna ; extra == 'utils_run'",
                "PyYAML ; extra == 'utils_run'"
            ],
            "requires_python": "",
            "summary": "Tools for applying reinforcement learning on commonroad scenarios.",
            "version": "2022.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15065321,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "78848f526923a4595ac908188962c491",
                    "sha256": "61178eee3d0f48179cd35608ce769af1169aee4b4c03889dd1343cc914116499"
                },
                "downloads": -1,
                "filename": "commonroad_rl-2022.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "78848f526923a4595ac908188962c491",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 211765,
                "upload_time": "2022-09-12T09:58:39",
                "upload_time_iso_8601": "2022-09-12T09:58:39.000402Z",
                "url": "https://files.pythonhosted.org/packages/df/ae/672c39ad3093d8aaf7458e02a48b4b51693b59865a74e431b12589f4352d/commonroad_rl-2022.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "48a910f82622b0f2b0659fb0f902c797",
                    "sha256": "e00bff2b2f47e5f0a5b1477dc59aa21b778f6e22a7d2435d038bf3b3624d0956"
                },
                "downloads": -1,
                "filename": "commonroad-rl-2022.2.tar.gz",
                "has_sig": false,
                "md5_digest": "48a910f82622b0f2b0659fb0f902c797",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 168346,
                "upload_time": "2022-09-12T09:58:41",
                "upload_time_iso_8601": "2022-09-12T09:58:41.345372Z",
                "url": "https://files.pythonhosted.org/packages/d5/56/94b4c7ca49d848f5e4c47c879eebb207edb134f9d095bc77154c1e23b1d7/commonroad-rl-2022.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}