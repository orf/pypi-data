{
    "0.1.0": {
        "info": {
            "author": "Kota Mori",
            "author_email": "kmori05@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Japanese",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3.3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/kota7/jumanpp-batch",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanpp-batch",
            "package_url": "https://pypi.org/project/jumanpp-batch/",
            "platform": "",
            "project_url": "https://pypi.org/project/jumanpp-batch/",
            "project_urls": {
                "Homepage": "https://github.com/kota7/jumanpp-batch"
            },
            "release_url": "https://pypi.org/project/jumanpp-batch/0.1.0/",
            "requires_dist": [
                "jaconv"
            ],
            "requires_python": "",
            "summary": "Apply juman++ to batch inputs in parallel",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8428825,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "19f1de039a7c1718b8bc194c1a00d24b",
                    "sha256": "4e20de55aba7ee4c601688630ec3ca0144c94f5b68d6ddf1d558ea8f3a26e821"
                },
                "downloads": -1,
                "filename": "jumanpp_batch-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "19f1de039a7c1718b8bc194c1a00d24b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7409,
                "upload_time": "2020-10-14T20:30:24",
                "upload_time_iso_8601": "2020-10-14T20:30:24.415650Z",
                "url": "https://files.pythonhosted.org/packages/28/a6/c9692ab67af3dcaa49a667b89f5eb3f627b2362813669e7efabfcdaf9609/jumanpp_batch-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e0e397d565fb5fb6dd756207e687455",
                    "sha256": "e4167b9dd0598052ba012563d6fcb49eef7319e77661c8cccf5fcef64d052875"
                },
                "downloads": -1,
                "filename": "jumanpp-batch-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9e0e397d565fb5fb6dd756207e687455",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8038,
                "upload_time": "2020-10-14T20:30:27",
                "upload_time_iso_8601": "2020-10-14T20:30:27.113785Z",
                "url": "https://files.pythonhosted.org/packages/61/8a/efb24534161be7e30aae20af1de06fccb2c477052f6ba63825aba17ab0a8/jumanpp-batch-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Kota Mori",
            "author_email": "kmori05@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Japanese",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/kota7/jumanpp-batch",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanpp-batch",
            "package_url": "https://pypi.org/project/jumanpp-batch/",
            "platform": "",
            "project_url": "https://pypi.org/project/jumanpp-batch/",
            "project_urls": {
                "Homepage": "https://github.com/kota7/jumanpp-batch"
            },
            "release_url": "https://pypi.org/project/jumanpp-batch/0.1.1/",
            "requires_dist": [
                "jaconv",
                "ushlex"
            ],
            "requires_python": "",
            "summary": "Apply juman++ to batch inputs in parallel",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8428825,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4684739970685027fc3d8851a090820f",
                    "sha256": "d1a0d59190e86caf90b125178e85fba7feaac79966d9fc92055c0f0ea550dade"
                },
                "downloads": -1,
                "filename": "jumanpp_batch-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4684739970685027fc3d8851a090820f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7845,
                "upload_time": "2020-10-15T04:14:03",
                "upload_time_iso_8601": "2020-10-15T04:14:03.597680Z",
                "url": "https://files.pythonhosted.org/packages/14/84/d967923babc5f10dab0ed5d6986f6cd2d0229278f35639670fad2ffa4056/jumanpp_batch-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c063af6d6591dac6e8096233d5ddcb16",
                    "sha256": "77e08c53c6fe68009f527bd2ce36f75e497378d2d36bf70fecc30d08754ed1d0"
                },
                "downloads": -1,
                "filename": "jumanpp-batch-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c063af6d6591dac6e8096233d5ddcb16",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8503,
                "upload_time": "2020-10-15T04:14:05",
                "upload_time_iso_8601": "2020-10-15T04:14:05.688176Z",
                "url": "https://files.pythonhosted.org/packages/23/92/f07ff4b00823e59dc50c190dc72ad827a518fa5bf186acdc42753241acaa/jumanpp-batch-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Kota Mori",
            "author_email": "kmori05@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: Japanese",
                "Programming Language :: Python :: 2.7",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "jumanpp-batch\n=============\n\n**Apply JUMAN++ to batch input in parallel**\n\n[![Build Status](https://travis-ci.org/kota7/jumanpp-batch.svg?branch=master)](https://travis-ci.org/kota7/jumanpp-batch) [![PyPI Status](https://badge.fury.io/py/jumanpp-batch.svg)](https://badge.fury.io/py/jumanpp-batch)\n\n\nThis python package facilitates the usage of [juman++](http://nlp.ist.i.kyoto-u.ac.jp/index.php?JUMAN++) software by providing the functionalities to apply the command (1) to batch input (2) and in parallel.\n\n### Requirement\n\n- Python 2.7+, 3.4+\n- [JUMAN++](http://nlp.ist.i.kyoto-u.ac.jp/index.php?JUMAN++) 1.0.2, 2.0.0\n\n\n## Installation\n\n\n\n### JUMAN++\n\nRefer to the official document for the details ([Manual](http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-manual-1.01.pdf)).\n\nRequirements:\n\n- GCC 4.9+\n- Boost 1.57+\n- (Optional) gperftool\n\nOn ubuntu, these can be installed by:\n\n```bash\nsudo apt-get install build-essential libboost-all-dev google-perftools\n```\n\nAs of this writing, JUMAN++ v1.0.2 can be installed by the following command:\n\n```bash\nwget http://lotus.kuee.kyoto-u.ac.jp/nl-resource/jumanpp/jumanpp-1.02.tar.xz\ntar xJvf jumanpp-1.02.tar.xz\ncd jumanpp-1.02 && ./configure && make && sudo make install && ../\n```\n\nCheck:\n```bash\necho \"\u3059\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u306e\u3046\u3061\" | jumanpp\n#\u3059\u3082\u3082 \u3059\u3082\u3082 \u3059\u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u9178\u6843/\u3059\u3082\u3082 \u81ea\u52d5\u7372\u5f97:EN_Wiktionary\"\n#@ \u3059\u3082\u3082 \u3059\u3082\u3082 \u3059\u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u81ea\u52d5\u7372\u5f97:\u30c6\u30ad\u30b9\u30c8\"\n#\u3082 \u3082 \u3082 \u52a9\u8a5e 9 \u526f\u52a9\u8a5e 2 * 0 * 0 NIL\n#\u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d\"\n#@ \u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u6843/\u3082\u3082 \u6f22\u5b57\u8aad\u307f:\u8a13 \u30ab\u30c6\u30b4\u30ea:\u690d\u7269;\u4eba\u5de5\u7269-\u98df\u3079\u7269 \u30c9\u30e1\u30a4\u30f3:\u6599\u7406\u30fb\u98df\u4e8b\"\n#\u3082 \u3082 \u3082 \u52a9\u8a5e 9 \u526f\u52a9\u8a5e 2 * 0 * 0 NIL\n#\u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d\"\n#@ \u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u6843/\u3082\u3082 \u6f22\u5b57\u8aad\u307f:\u8a13 \u30ab\u30c6\u30b4\u30ea:\u690d\u7269;\u4eba\u5de5\u7269-\u98df\u3079\u7269 \u30c9\u30e1\u30a4\u30f3:\u6599\u7406\u30fb\u98df\u4e8b\"\n#\u306e \u306e \u306e \u52a9\u8a5e 9 \u63a5\u7d9a\u52a9\u8a5e 3 * 0 * 0 NIL\n#\u3046\u3061 \u3046\u3061 \u3046\u3061 \u540d\u8a5e 6 \u526f\u8a5e\u7684\u540d\u8a5e 9 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u3046\u3061/\u3046\u3061\"\n#EOS\n```\n\n### jumanpp-batch library\n\nThe library can be downloaded from the [PyPI](https://pypi.org/) repository.\n\n```bash\npip install jumanpp-batch\n```\n\nOr install the development version from GitHub.\n```bash\ngit clone https://github.com/kota7/jumanpp-batch.git\npip install -U ./jumanpp-batch\n```\n\n\n## Usage\n\n### Execute JUMAN++ jobs\n\n```python\nfrom jumanpp_batch import jumanpp_batch, parse_outfiles\ntexts = [\"\u3059\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u3082\u306e\u3046\u3061\", \"\u96a3\u306e\u5ba2\u306f\u3088\u304f\u67ff\u98df\u3046\u5ba2\u3060\", \"\u72ac\u3082\u6b69\u3051\u3070\u68d2\u306b\u5f53\u305f\u308b\",\n         \"\u4f0a\u9999\u4fdd\u6e29\u6cc9\u65e5\u672c\u306e\u540d\u6e6f\", \"\u6d77\u8cca\u738b\u306b\u4ffa\u306f\u306a\u308b\uff01\"]\noutfiles = jumanpp_batch(texts, num_procs=3) \nprint(outfiles)\n#['jumanpp-result_1.txt', 'jumanpp-result_2.txt', 'jumanpp-result_3.txt']\n```\n\nThe results are saved in files.\n\n```bash\n!cat {outfiles[0]}\n#\u3059\u3082\u3082 \u3059\u3082\u3082 \u3059\u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u9178\u6843/\u3059\u3082\u3082 \u81ea\u52d5\u7372\u5f97:EN_Wiktionary\"\n#@ \u3059\u3082\u3082 \u3059\u3082\u3082 \u3059\u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u81ea\u52d5\u7372\u5f97:\u30c6\u30ad\u30b9\u30c8\"\n#\u3082 \u3082 \u3082 \u52a9\u8a5e 9 \u526f\u52a9\u8a5e 2 * 0 * 0 NIL\n#\u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d\"\n#@ \u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u6843/\u3082\u3082 \u6f22\u5b57\u8aad\u307f:\u8a13 \u30ab\u30c6\u30b4\u30ea:\u690d\u7269;\u4eba\u5de5\u7269-\u98df\u3079\u7269 \u30c9\u30e1\u30a4\u30f3:\u6599\u7406\u30fb\u98df\u4e8b\"\n#\u3082 \u3082 \u3082 \u52a9\u8a5e 9 \u526f\u52a9\u8a5e 2 * 0 * 0 NIL\n#\u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d\"\n#@ \u3082\u3082 \u3082\u3082 \u3082\u3082 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u6843/\u3082\u3082 \u6f22\u5b57\u8aad\u307f:\u8a13 \u30ab\u30c6\u30b4\u30ea:\u690d\u7269;\u4eba\u5de5\u7269-\u98df\u3079\u7269 \u30c9\u30e1\u30a4\u30f3:\u6599\u7406\u30fb\u98df\u4e8b\"\n#\u306e \u306e \u306e \u52a9\u8a5e 9 \u63a5\u7d9a\u52a9\u8a5e 3 * 0 * 0 NIL\n#\u3046\u3061 \u3046\u3061 \u3046\u3061 \u540d\u8a5e 6 \u526f\u8a5e\u7684\u540d\u8a5e 9 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u3046\u3061/\u3046\u3061\"\n#EOS\n#\u96a3 \u3068\u306a\u308a \u96a3 \u540d\u8a5e 6 \u666e\u901a\u540d\u8a5e 1 * 0 * 0 \"\u4ee3\u8868\u8868\u8a18:\u96a3\u308a/\u3068\u306a\u308a \u30ab\u30c6\u30b4\u30ea:\u5834\u6240-\u305d\u306e\u4ed6\"\n#\u306e \u306e \u306e \u52a9\u8a5e 9 \u63a5\u7d9a\u52a9\u8a5e 3 * 0 * 0 NIL\n#...\n```\n\n### Parse the output files into tokens\n\n```python\nfor id_, tokens in parse_outfiles(outfiles):\n    print(tokens)\n    print(\"***\")\n#[JumanppToken(surface='\u3059\u3082\u3082', reading='\u3059\u3082\u3082', headword='\u3059\u3082\u3082', pos='\u540d\u8a5e', pos_id='6', pos2='\u666e\u901a\u540d\u8a5e', pos2_id='1', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='\u4ee3\u8868\u8868\u8a18:\u9178\u6843/\u3059\u3082\u3082 \u81ea\u52d5\u7372\u5f97:EN_Wiktionary', is_alternative=False), JumanppToken(surface='\u3082', reading='\u3082', headword='\u3082', pos='\u52a9\u8a5e', pos_id='9', pos2='\u526f\u52a9\u8a5e', pos2_id='2', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='NIL', is_alternative=False), JumanppToken(surface='\u3082\u3082', reading='\u3082\u3082', headword='\u3082\u3082', pos='\u540d\u8a5e', pos_id='6', pos2='\u666e\u901a\u540d\u8a5e', pos2_id='1', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d', is_alternative=False), JumanppToken(surface='\u3082', reading='\u3082', headword='\u3082', pos='\u52a9\u8a5e', pos_id='9', pos2='\u526f\u52a9\u8a5e', pos2_id='2', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='NIL', is_alternative=False), JumanppToken(surface='\u3082\u3082', reading='\u3082\u3082', headword='\u3082\u3082', pos='\u540d\u8a5e', pos_id='6', pos2='\u666e\u901a\u540d\u8a5e', pos2_id='1', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='\u4ee3\u8868\u8868\u8a18:\u80a1/\u3082\u3082 \u30ab\u30c6\u30b4\u30ea:\u52d5\u7269-\u90e8\u4f4d', is_alternative=False), JumanppToken(surface='\u306e', reading='\u306e', headword='\u306e', pos='\u52a9\u8a5e', pos_id='9', pos2='\u63a5\u7d9a\u52a9\u8a5e', pos2_id='3', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='NIL', is_alternative=False), JumanppToken(surface='\u3046\u3061', reading='\u3046\u3061', headword='\u3046\u3061', pos='\u540d\u8a5e', pos_id='6', pos2='\u526f\u8a5e\u7684\u540d\u8a5e', pos2_id='9', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='\u4ee3\u8868\u8868\u8a18:\u3046\u3061/\u3046\u3061', is_alternative=False)]\n#***\n#[JumanppToken(surface='\u96a3', reading='\u3068\u306a\u308a', headword='\u96a3', pos='\u540d\u8a5e', pos_id='6', pos2='\u666e\u901a\u540d\u8a5e', pos2_id='1', infltype='*', infltype_id='0', inflform='*', inflform_id='0', info='\u4ee3\u8868\u8868\u8a18:\u96a3\u308a/\u3068\u306a\u308a \u30ab\u30c6\u30b4\u30ea:\u5834\u6240-\u305d\u306e\u4ed6', is_alternative=False), JumanppToken(surface='\u306e', reading='\u306e', \n```\n\n### Apply formatter and filter to the tokens\n\n```python\nfor id_, tokens in parse_outfiles(outfiles,\n                                  format_func=lambda x: \"{} ({})\".format(x.headword, x.reading),\n                                  pos_filter=(\"\u540d\u8a5e\", \"\u52d5\u8a5e\")):\n    print(tokens)\n    print(\"***\")\n#['\u3059\u3082\u3082 (\u3059\u3082\u3082)', '\u3082\u3082 (\u3082\u3082)', '\u3082\u3082 (\u3082\u3082)', '\u3046\u3061 (\u3046\u3061)']\n#***\n#['\u96a3 (\u3068\u306a\u308a)', '\u5ba2 (\u304d\u3083\u304f)', '\u67ff (\u304b\u304d)', '\u98df\u3046 (\u304f\u3046)', '\u5ba2 (\u304d\u3083\u304f)']\n#***\n#['\u72ac (\u3044\u306c)', '\u6b69\u304f (\u3042\u308b\u3051\u3070)', '\u68d2 (\u307c\u3046)', '\u5f53\u305f\u308b (\u3042\u305f\u308b)']\n#***\n#['\u4f0a\u9999\u4fdd (\u4f0a\u9999\u4fdd)', '\u6e29\u6cc9 (\u304a\u3093\u305b\u3093)', '\u65e5\u672c (\u306b\u3063\u307d\u3093)', '\u6e6f (\u3086)']\n#***\n#['\u6d77\u8cca (\u304b\u3044\u305e\u304f)', '\u738b (\u304a\u3046)', '\u4ffa (\u304a\u308c)', '\u306a\u308b (\u306a\u308b)']\n#***\n```\n\n### More examples\n\nPlease also refer to [usage notebook](https://github.com/kota7/jumanpp-batch/blob/master/notebook/jumanpp-batch%20-%20Apply%20jumanpp%20to%20batch%20input%20in%20parallel.ipynb) for the detailed description of the library.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/kota7/jumanpp-batch",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jumanpp-batch",
            "package_url": "https://pypi.org/project/jumanpp-batch/",
            "platform": "",
            "project_url": "https://pypi.org/project/jumanpp-batch/",
            "project_urls": {
                "Homepage": "https://github.com/kota7/jumanpp-batch"
            },
            "release_url": "https://pypi.org/project/jumanpp-batch/0.1.2/",
            "requires_dist": [
                "jaconv",
                "ushlex"
            ],
            "requires_python": "",
            "summary": "Apply juman++ to batch inputs in parallel",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8428825,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca691f22d532402fee6a8ab82bd37dd3",
                    "sha256": "0e4b08994cdb721ffa4a5ead49e103c6aa0c74c61e3c0ecde0b457f7a7769dfd"
                },
                "downloads": -1,
                "filename": "jumanpp_batch-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ca691f22d532402fee6a8ab82bd37dd3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7999,
                "upload_time": "2020-10-16T15:20:55",
                "upload_time_iso_8601": "2020-10-16T15:20:55.654702Z",
                "url": "https://files.pythonhosted.org/packages/8e/2a/cc3fc10dd6d621d4498ce3bd6a3bd38d75d78acc739a939dff3811c8a9b8/jumanpp_batch-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4f87a501e24947d6fa9aa9d22cb8b8a3",
                    "sha256": "bafd34d7491acaffc9e7bdda1c951035547557e897797044597f423e18e17573"
                },
                "downloads": -1,
                "filename": "jumanpp-batch-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "4f87a501e24947d6fa9aa9d22cb8b8a3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8677,
                "upload_time": "2020-10-16T15:20:59",
                "upload_time_iso_8601": "2020-10-16T15:20:59.039559Z",
                "url": "https://files.pythonhosted.org/packages/0f/b7/8c2b4f1e5e953d8cfa30bd4d8ea95d6361c89464af7bf514e5990936ae41/jumanpp-batch-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}