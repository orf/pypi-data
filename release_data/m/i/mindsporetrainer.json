{
    "0.1.0": {
        "info": {
            "author": "Zhou, Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Indexing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.0/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e7a5a3bb223318155ca36b2bebf29826",
                    "sha256": "34c07b0d2f0ae1598d59954d8aea214783ce7a8bed7a75b093002a00566cbc2f"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e7a5a3bb223318155ca36b2bebf29826",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 202418,
                "upload_time": "2022-08-30T03:10:10",
                "upload_time_iso_8601": "2022-08-30T03:10:10.015124Z",
                "url": "https://files.pythonhosted.org/packages/a6/67/6729b9ad9a9d8f3a0a2d944c43254ff563ce6f2f7506292f04aaff9cb6ab/MindsporeTrainer-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "05a705ac117975fc691f78070bb1c88f",
                    "sha256": "7ca42f96a27f40b61ccced707afc764ad30108a014e292715c375601a12c481f"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "05a705ac117975fc691f78070bb1c88f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 133121,
                "upload_time": "2022-08-30T03:10:12",
                "upload_time_iso_8601": "2022-08-30T03:10:12.011349Z",
                "url": "https://files.pythonhosted.org/packages/ce/54/5f77c687e27a1bf4a2c03512f70ba218cd6f24e7d53a2b9607c9212daaeb/MindsporeTrainer-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.1/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c9e28c15e3a6b8604ac4437b1af561ab",
                    "sha256": "5b001dc7c7ed4e88e6897974dc943bb947f859ff6483337b808e27e531eb6bb1"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c9e28c15e3a6b8604ac4437b1af561ab",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 165593,
                "upload_time": "2022-08-30T04:21:09",
                "upload_time_iso_8601": "2022-08-30T04:21:09.764395Z",
                "url": "https://files.pythonhosted.org/packages/c0/05/90c9d09062254cebabf85c83b0a65d9e0c8e9a0d986481d33a25e1c66db3/MindsporeTrainer-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dda0c1e95b25a464c7a72cea24f90fb4",
                    "sha256": "824366664b83af8273dd0d4fc7bb18496fae488f2080f0899ef7adf6666b4630"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "dda0c1e95b25a464c7a72cea24f90fb4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 141024,
                "upload_time": "2022-08-30T04:21:11",
                "upload_time_iso_8601": "2022-08-30T04:21:11.487085Z",
                "url": "https://files.pythonhosted.org/packages/e6/46/3b3e3016a46ca29c3828a249843bfd1348ba348395f28493e24782fcc9c1/MindsporeTrainer-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.2/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1e0844fb3b20d377c9d664efd6b807b9",
                    "sha256": "f56d9c7ac66b2109176c1dcaebfa027ab2e9f53d4303f224dfb840b7b4a9c4be"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1e0844fb3b20d377c9d664efd6b807b9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 165878,
                "upload_time": "2022-09-01T13:58:24",
                "upload_time_iso_8601": "2022-09-01T13:58:24.560122Z",
                "url": "https://files.pythonhosted.org/packages/2b/14/cd1bd85f1108d3b020ebc99938656fbc7f49e76feaa3ec32a4b2f5c1c8b9/MindsporeTrainer-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f1d836bc1f079631a633d452022e50bd",
                    "sha256": "bb82f5f77d94d09ff7b3d84559c0188e9962e39aa1cb56fe62e786389689f154"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "f1d836bc1f079631a633d452022e50bd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 141457,
                "upload_time": "2022-09-01T13:58:25",
                "upload_time_iso_8601": "2022-09-01T13:58:25.756393Z",
                "url": "https://files.pythonhosted.org/packages/83/20/c2e2ff9b72376d8dce1fda599ba5d8d861951db58c33db17bc51649459d0/MindsporeTrainer-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.3/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "879f2c734033904271847f16cf229966",
                    "sha256": "f778254b53e6a3781d50a6af0d89d2007805c2b90b92e01bbf5cb547ee477b80"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "879f2c734033904271847f16cf229966",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 166168,
                "upload_time": "2022-09-06T05:56:46",
                "upload_time_iso_8601": "2022-09-06T05:56:46.694246Z",
                "url": "https://files.pythonhosted.org/packages/bd/26/af621f2b144f845ee1abc74cfa897bae1faa3a54970709de21f0f03e6de2/MindsporeTrainer-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8529e0432d818c5467fd8e4f47fb964",
                    "sha256": "781576216cf0a93e07102dfc77be9d815b4fd79981a0a9ff9115740d31385450"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "f8529e0432d818c5467fd8e4f47fb964",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 141738,
                "upload_time": "2022-09-06T05:56:47",
                "upload_time_iso_8601": "2022-09-06T05:56:47.953827Z",
                "url": "https://files.pythonhosted.org/packages/1b/1e/78663de1fd98b536c0b4f0367e595bf438dab24a0bf430738422bef8d102/MindsporeTrainer-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.4": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.4/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a284164f668b12da632dae040ea4fc84",
                    "sha256": "6956c3a169355e41a6e44c88c9d666ef0386ff30b6f781e927ac46d3fd7d5ab3"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a284164f668b12da632dae040ea4fc84",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 166373,
                "upload_time": "2022-09-13T15:26:21",
                "upload_time_iso_8601": "2022-09-13T15:26:21.387144Z",
                "url": "https://files.pythonhosted.org/packages/01/ed/9b7ab3a9d141e2efadc09e083c6d3d6dd527da8ec2c0ce8a4991d42ebe68/MindsporeTrainer-0.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "35fe972cdf42a660af2bbc35c9ae8f1f",
                    "sha256": "6357591a7658c80295566db45bbd03d27293913202717b86ea131e1ed9c8dc92"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "35fe972cdf42a660af2bbc35c9ae8f1f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 141887,
                "upload_time": "2022-09-13T15:26:23",
                "upload_time_iso_8601": "2022-09-13T15:26:23.486138Z",
                "url": "https://files.pythonhosted.org/packages/8a/c1/2b30daa273c7b821b358608bfd90e465a7dc987008fd9d00b4766e1726bb/MindsporeTrainer-0.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.5": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.1.5/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2bf03090ab64919f48bf34df74d57aae",
                    "sha256": "5a9234cb3e134f9b1fff67aaf01847b95afa862c0fee4f82bccd0bbcd436eac5"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2bf03090ab64919f48bf34df74d57aae",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 170727,
                "upload_time": "2022-09-21T05:04:20",
                "upload_time_iso_8601": "2022-09-21T05:04:20.359999Z",
                "url": "https://files.pythonhosted.org/packages/41/51/44046552d4b074d92e2b1e76da637b2ddaef9f338a24c204dc716d364157/MindsporeTrainer-0.1.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d4586d9224942845ae20e765eee5df54",
                    "sha256": "aa1af6ac7632090ffcc8e587b01c69e373b8f0b420aae5f37c297fcce5276528"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.1.5.tar.gz",
                "has_sig": false,
                "md5_digest": "d4586d9224942845ae20e765eee5df54",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 143143,
                "upload_time": "2022-09-21T05:04:22",
                "upload_time_iso_8601": "2022-09-21T05:04:22.615504Z",
                "url": "https://files.pythonhosted.org/packages/f8/ce/a322c793f059e62ccdaf9741cb09d66f91cb64ab64590941af4038fd4f0c/MindsporeTrainer-0.1.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Zhou Bo",
            "author_email": "baudzhou@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Scientific/Engineering :: Image Processing",
                "Topic :: Text Processing"
            ],
            "description": "# MindsporeTrainer\n ![PyPI](https://img.shields.io/pypi/v/MindsporeTrainer?color=blue) \n ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/MindsporeTrainer)\n ![GitHub Workflow Status](https://img.shields.io/github/workflow/status/baudzhou/MindsporeTrainer/Upload%20Python%20Package)\n  ![issues](https://img.shields.io/github/issues/baudzhou/MindsporeTrainer) \n  ![License](https://img.shields.io/github/license/baudzhou/MindsporeTrainer) \n\n**MindsporeTrainer** \u662f\u57fa\u4e8e\u6607\u601dMindSpore\u7684\u8bad\u7ec3\u6846\u67b6\u3002\u8ba9Mindspore\u7684\u7b97\u6cd5\u7814\u7a76\u66f4\u5bb9\u6613\u4e00\u4e9b\u3002  \n  \nMindspore\u4e0a\u624b\u4e0d\u6613\uff0c\u5e0c\u671b\u80fd\u5e2e\u52a9\u5404\u4f4d\u70bc\u4e39\u5e08\u7684\u5347\u7ea7\u4e4b\u8def\u66f4\u5bb9\u6613\u4e9b\u3002  \n\n[**Home page**](https://github.com/baudzhou/MindsporeTrainer)\n# \u76ee\u5f55\n* [\u4e3b\u8981\u7279\u6027](#\u4e3b\u8981\u7279\u6027)\n* [\u5b89\u88c5](#\u5b89\u88c5)\n* [\u4f7f\u7528\u65b9\u6cd5](#\u4f7f\u7528\u65b9\u6cd5)\n    * [DeBERTa\u9884\u8bad\u7ec3\u4efb\u52a1\u793a\u4f8b](#DeBERTa\u9884\u8bad\u7ec3\u4efb\u52a1\u793a\u4f8b)\n    * [\u591a\u5361\u8bad\u7ec3](#\u591a\u5361\u8bad\u7ec3)\n* [\u6a21\u578b\u521b\u5efa](#\u6a21\u578b\u521b\u5efa)\n* [\u53c2\u6570\u4ecb\u7ecd](#\u53c2\u6570\u4ecb\u7ecd)\n* [Task](#Task)\n* [API](#API)\n* [models](#models)\n# \u4e3b\u8981\u7279\u6027\n\u4e3b\u8981\u7684\u51e0\u4e2a\u51fa\u53d1\u70b9\u662f\uff1a  \n+ \u91c7\u7528\u7eafpython\u5b9e\u73b0\uff0c\u65b9\u4fbf\u591a\u5361\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u8c03\u8bd5\n+ \u6613\u4e8e\u6269\u5c55\uff0c\u5bf9\u65b0\u4efb\u52a1\u91c7\u7528\u63d2\u4ef6\u5f0f\u63a5\u5165\n+ \u65b9\u4fbf\u5b9e\u73b0\u591a\u79cd\u6a21\u578b\u7684\u8bad\u7ec3\u3001\u8bc4\u4f30\u3001\u9884\u6d4b\u7b49  \n# \u5b89\u88c5\n## pip\n`pip install MindsporeTrainer`\n## \u6e90\u7801\n`python setup.py`\n# \u4f7f\u7528\u65b9\u6cd5\n## DeBERTa\u9884\u8bad\u7ec3\u4efb\u52a1\u793a\u4f8b\n### 1. \u5b9a\u4e49task\n[MindsporeTrainer/apps/tasks/deberta.py](./MindsporeTrainer/apps/tasks/deberta.py)\n```\nfrom collections import OrderedDict\nimport numpy as np\nimport os\nimport random\nfrom shutil import copyfile\nfrom loguru import logger\n\nfrom mindspore.communication import get_rank, get_group_size\n\nfrom MindsporeTrainer.data import ExampleInstance, ExampleSet\nfrom MindsporeTrainer.data.example import *\nfrom MindsporeTrainer.apps.tasks import EvalData, TransformerTask\nfrom MindsporeTrainer.apps.tasks import register_task\nfrom MindsporeTrainer.utils.metrics import *\nfrom MindsporeTrainer.utils.metrics import BertMetric\nfrom MindsporeTrainer.utils.masker import NGramMaskGenerator\nfrom MindsporeTrainer.data.dynamic_dataset import create_dynamic_dataset\nfrom MindsporeTrainer.modeling.tokenizers import BertTokenizer\n\n@register_task(name=\"DEBERTA\", desc=\"Basic DEBERTA task\")\nclass DEBERTATask(TransformerTask):\n    def __init__(self, data_dir, args, **kwargs):\n        super().__init__(args, **kwargs)\n        self.max_seq_length = 512\n        self.model_config = 'data/pretrained_models/deberta-base-v2/model_config.json'\n        self.vocab_type = 'BERT'\n        self.vocab_path = 'data/pretrained_models/deberta-base-v2/vocab.txt'\n        self.data_dir = data_dir\n        self.args = args\n        self.metric = 'bert'\n        self.main_metric = 'perplexity'\n        self.optimizer_name = 'Lamb'\n        self.tokenizer = BertTokenizer(self.vocab_path)\n        if args.distribute:\n            self.rank_id = get_rank()\n            self.rank_size = get_group_size()\n        else:\n            self.rank_id = 0\n            self.rank_size = 1\n\n    def train_data(self, max_seq_len=512, batch_size=32, **kwargs):\n        data_path = os.path.join(self.data_dir, 'daizhige.pkl')\n        data = self.load_data(data_path, 'GW', max_seq_len)\n        # data = ExampleSet(data)\n        output_columns = [\"input_ids\", \"input_mask\", \"token_type_id\", \"next_sentence_labels\",\n                                    \"masked_lm_positions\", \"masked_lm_ids\", \"masked_lm_weights\"]\n        return create_dynamic_dataset(data, self.get_feature_fn(), \n                                      batch_size=batch_size,\n                                      output_columns=output_columns, \n                                      repeat=self.args.num_train_epochs,\n                                      num_workers=self.args.data_workers,\n                                      num_shards=self.rank_size, \n                                      shard_id=self.rank_id)\n\n    def eval_data(self, max_seq_len=512, batch_size=32, **kwargs):\n        ...\n\n    def get_metrics(self, **kwargs):\n        \"\"\"Calcuate metrics based on prediction results\"\"\"\n        return OrderedDict(\n            bert = BertMetric(self.args.eval_batch_size),\n            )\n\n    def get_eval_fn(self, **kwargs):\n        data = kwargs.get('data')\n        if data is None:\n            data = self.eval_data(**kwargs)\n        def run_eval(model, name, prefix):\n            '''\n            args: \n                model: Model instance\n                name: evaluate name\n                prefix: prefix of file\n            return:\n                float, main metric of this task, used to save best metric model\n            '''\n            res = model.eval(data, dataset_sink_mode=False)\n            res = res['bert']\n            main_metric = res[self.main_metric]\n            if self.rank_id == 0:\n                output=os.path.join(self.args.output_dir, 'submit-{}-{}.tsv'.format(name, prefix))\n                metric_str = '\\n'.join([f'{k}: {v:.4f}' for k, v in res.items()])\n                metric_str = metric_str + '\\n'\n                logger.info(\"====================================\")\n                logger.info(\"evaluate result:\\n\")\n                logger.info(metric_str)\n                logger.info(\"====================================\")\n\n                with open(output, 'w', encoding='utf-8') as fs:\n                    fs.write(f\"metrics:\\n{metric_str}\\n\")\n            return main_metric\n        return run_eval\n\n\n    def get_feature_fn(self, max_seq_len=512, ext_params=None, rng=None, **kwargs):\n        tokenizer = self.tokenizer\n        mask_generator = NGramMaskGenerator(tokenizer)\n        def example_to_feature(*example):\n            '''\n            sample: text, label\n            return: [\"input_ids\", \"input_mask\", \"token_type_id\", \"next_sentence_labels\",\n                    masked_lm_positions\", \"masked_lm_ids\", \"masked_lm_weights\"]\n            '''\n            ......\n            return tuple(features)\n\n        return example_to_feature\n\n    def load_data(self, path, type=None, max_seq_len=512):\n        examples = []\n        ......\n        return ExampleSet(examples)\n\n\n    def get_model(self):\n        from MindsporeTrainer.modeling.models import BertPreTraining, DebertaPreTraining\n        from MindsporeTrainer import build_transformer_model\n        if self.args.fp16:\n            compute_type = mstype.float16\n        else:\n            compute_type = mstype.float32\n        model, config = build_transformer_model(self.model_config, \n                                                model=DebertaPreTraining, \n                                                compute_type=compute_type, \n                                                padding_idx=self.tokenizer._convert_token_to_id(self.tokenizer.pad_token))\n        with open(os.path.join(self.args.output_dir, 'config.json'), 'w', encoding='utf-8') as f:\n            f.write(config.to_json_string())\n        copyfile(self.vocab_path, os.path.join(self.args.output_dir, 'vocab.txt'))\n        return model\n        # return partial_class\n\n    def get_loss(self, *args, **kwargs):\n        from MindsporeTrainer.modeling.loss import BertPretrainingLoss\n        return BertPretrainingLoss(self.tokenizer.vocab_size)\n\n    def get_eval_head(self, *args, **kwargs):\n        from MindsporeTrainer.modeling.models import BertEvalHead\n        return BertEvalHead(self.tokenizer.vocab_size)\n\n    def get_opt_fn(self, *args, **kwargs):\n        return None\n\n```\n### 2. \u7f16\u5199\u542f\u52a8\u811a\u672c\nrun.py\n```\nimport MindsporeTrainer as mst\nmst.launch()\n```\n### 3. \u8fd0\u884c\u4efb\u52a1\n```\npython run.py --task_name=RESNETTask --do_train --do_eval --data_dir=data --num_train_epochs=10 --learning_rate=1e-2 --train_batch_size=64 --save_eval_steps=1000 --output_dir=output\n```\n## \u591a\u5361\u8bad\u7ec3\n\u5b98\u65b9\u63a8\u8350\u7f16\u5199bash\u811a\u672c\uff0c\u5229\u7528mpi\u8fdb\u884c\u8bad\u7ec3\uff0c\u8fd9\u91cc\u91c7\u7528\u4e86\u7eafpython\u7684\u5b9e\u73b0\u3002\n### \u5b9a\u4e49\u5fc5\u987b\u7684\u73af\u5883\u53d8\u91cf\n\nbash\n```\nexport RANK_SIZE = 8\nexport RANK_TABLE_FILE = /path/hccl.json\n```\nvscode\u8c03\u8bd5\u73af\u5883\n```\n\"env\": {\n    \"RANK_SIZE\": \"8\",\n    \"RANK_TABLE_FILE\": \"/path/hccl.json\"\n}\n```\n\u8bbe\u7f6e\u53c2\u6570\uff0c\u5f00\u59cb\u8bad\u7ec3\n```\npython run.py ...... --device_num=8 --device_id=0,1,2,3,4,5,6,7\n```\n# \u6a21\u578b\u521b\u5efa\n## \u81ea\u5b9a\u4e49\u6a21\u578b\nMindspore\u76f8\u5bf9TF\u548cPyTorch\uff0c\u6709\u5176\u81ea\u8eab\u7684\u7279\u70b9\uff0c\u5efa\u6a21\u4e60\u60ef\u4e5f\u4e0d\u540c\u3002\u5728\u672c\u6846\u67b6\u4e2d\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u6a21\u5757\u5316\u4e0e\u4ee3\u7801\u590d\u7528\uff0c\u5c06\u6a21\u578b\u5206\u4e3a**backbone**\u548c**predict head**\u4e24\u90e8\u5206\u3002  \n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6a21\u578b\u5b9a\u4e49\u4e2d\uff0cconstruct\u51fd\u6570\u8fd4\u56de\u90fd\u5e94\u5f53\u662ftuple\uff0c\u5373\u4f7f\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u8fd4\u56de\uff0c\u4e5f\u5e94\u5f53\u91c7\u7528(obj,)\u7684\u5f62\u5f0f\u3002\n### backbone\n\u6a21\u578b\u7684\u4e3b\u4f53\u90e8\u5206\u5b9a\u4e49\u3002\n### predict head\n\u6a21\u578b\u7684\u9644\u5c5e\u90e8\u5206\uff0c\u6839\u636e\u6a21\u578b\u7684\u7528\u9014\uff0c\u901a\u5e38\u53ef\u4ee5\u5b9a\u4e49\u4e3aloss\u5c42\uff0c\u6216\u8005\u5728evaluation\u8fc7\u7a0b\u4e2d\u5b9a\u4e49\u7684eval head\uff0c\u53c8\u6216\u8005\u5176\u4ed6\u7528\u9014\u7684\u5934\u3002\n## \u4f7f\u7528\u5b98\u65b9[model_zoo](https://gitee.com/mindspore/models)\u4e2d\u7684\u6a21\u578b\n\u5176\u4ee3\u7801\u7ed3\u6784\u5982\u4e0b\n```shell\nmodels\n\u251c\u2500\u2500 official                                    # \u5b98\u65b9\u652f\u6301\u6a21\u578b\n\u2502   \u2514\u2500\u2500 XXX                                     # \u6a21\u578b\u540d\n\u2502       \u251c\u2500\u2500 README.md                           # \u6a21\u578b\u8bf4\u660e\u6587\u6863\n\u2502       \u251c\u2500\u2500 requirements.txt                    # \u4f9d\u8d56\u8bf4\u660e\u6587\u4ef6\n\u2502       \u251c\u2500\u2500 eval.py                             # \u7cbe\u5ea6\u9a8c\u8bc1\u811a\u672c\n\u2502       \u251c\u2500\u2500 export.py                           # \u63a8\u7406\u6a21\u578b\u5bfc\u51fa\u811a\u672c\n\u2502       \u251c\u2500\u2500 scripts                             # \u811a\u672c\u6587\u4ef6\n\u2502       \u2502   \u251c\u2500\u2500 run_distributed_train.sh        # \u5206\u5e03\u5f0f\u8bad\u7ec3\u811a\u672c\n\u2502       \u2502   \u251c\u2500\u2500 run_eval.sh                     # \u9a8c\u8bc1\u811a\u672c\n\u2502       \u2502   \u2514\u2500\u2500 run_standalone_train.sh         # \u5355\u673a\u8bad\u7ec3\u811a\u672c\n\u2502       \u251c\u2500\u2500 src                                 # \u6a21\u578b\u5b9a\u4e49\u6e90\u7801\u76ee\u5f55\n\u2502       \u2502   \u251c\u2500\u2500 XXXNet.py                       # \u6a21\u578b\u7ed3\u6784\u5b9a\u4e49\n\u2502       \u2502   \u251c\u2500\u2500 callback.py                     # \u56de\u8c03\u51fd\u6570\u5b9a\u4e49\n\u2502       \u2502   \u251c\u2500\u2500 config.py                       # \u6a21\u578b\u914d\u7f6e\u53c2\u6570\u6587\u4ef6\n\u2502       \u2502   \u2514\u2500\u2500 dataset.py                      # \u6570\u636e\u96c6\u5904\u7406\u5b9a\u4e49\n\u2502       \u251c\u2500\u2500 ascend_infer                        # \uff08\u53ef\u9009\uff09\u7528\u4e8e\u5728Ascend\u63a8\u7406\u8bbe\u5907\u4e0a\u8fdb\u884c\u79bb\u7ebf\u63a8\u7406\u7684\u811a\u672c\n\u2502       \u251c\u2500\u2500 third_party                         # \uff08\u53ef\u9009\uff09\u7b2c\u4e09\u65b9\u4ee3\u7801\n\u2502       \u2502   \u2514\u2500\u2500 XXXrepo                         # \uff08\u53ef\u9009\uff09\u5b8c\u6574\u514b\u9686\u81ea\u7b2c\u4e09\u65b9\u4ed3\u5e93\u7684\u4ee3\u7801\n\u2502       \u2514\u2500\u2500 train.py                            # \u8bad\u7ec3\u811a\u672c\n\u251c\u2500\u2500 research                                    # \u975e\u5b98\u65b9\u7814\u7a76\u811a\u672c\n\u251c\u2500\u2500 community                                   # \u5408\u4f5c\u65b9\u811a\u672c\u94fe\u63a5\n\u2514\u2500\u2500 utils                                       # \u6a21\u578b\u901a\u7528\u5de5\u5177\n```\n\u627e\u5230\u6240\u9700\u7684\u6a21\u578b\u76ee\u5f55\u540e\uff0c\u5728src/xxxmodel.py\u4e2d\u627e\u5230\u76f8\u5e94\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u6709\u5b9a\u4e49\u597d\u7684backbone\u548chead\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165\u4f7f\u7528\u3002  \n\u4f8b\u5982\u4f7f\u7528\u5176\u4e2d\u7684BERT\u6a21\u578b\uff1a  \n`git clone https://gitee.com/mindspore/models`  \n\u590d\u5236\u51fabert\u6e90\u7801\u5230\u5de5\u4f5c\u76ee\u5f55`models/official/nlp/bert/src`  \n\u5b9a\u4e49task\n```\n    from bert.src.bert_for_pre_training import BertPreTraining, BertPretrainingLoss\n    ......\n    def get_model(self):\n        from MindsporeTrainer import build_transformer_model\n        if self.args.fp16:\n            compute_type = mstype.float16\n        else:\n            compute_type = mstype.float32\n        model, config = build_transformer_model(self.model_config, \n                                                model=BertPreTraining, \n                                                compute_type=compute_type, \n                                                padding_idx=self.tokenizer._convert_token_to_id(self.tokenizer.pad_token))\n        with open(os.path.join(self.output_dir, 'config.json'), 'w', encoding='utf-8') as f:\n            f.write(config.to_json_string())\n        copyfile(self.vocab_path, os.path.join(self.output_dir, 'vocab.txt'))\n        return model\n\n    def get_loss(self, *args, **kwargs):\n        return BertPretrainingLoss(self.tokenizer.vocab_size)\n\n    def get_eval_head(self, *args, **kwargs):\n        from MindsporeTrainer.modeling.models import BertEvalHead\n        return BertEvalHead(self.tokenizer.vocab_size)\n```\n# \u53c2\u6570\u4ecb\u7ecd\n\u8bad\u7ec3\u8d85\u53c2\u6570\u57fa\u672c\u4e0a\u90fd\u662f\u901a\u8fc7\u8fd0\u884c\u53c2\u6570\u6765\u63a7\u5236\u7684\uff0c\u53e6\u5916\u4e00\u4e9b\u5219\u53ef\u4ee5\u5728task\u5b9a\u4e49\u4e2d\u63a7\u5236\u3002\n## commmon args\n+ --accumulation_steps   \n    type=int  \n    default=1  \n    Accumulating gradients N times before weight update, default is 1.\n+ --allreduce_post_accumulation  \n    type=str  \n    default=true  \n    choices=[true, false]  \n    Whether to allreduce after accumulation of N steps or after each step, default is true.\n+ --data_dir  \n    default=None  \n    type=str  \n    required=False  \n    The input data dir. Should contain the .tsv files (or other data files) for the task.\n+ --data_sink_steps  \n    type=int   \n    default=1  \n    Sink steps for each epoch, default is 1.\n\n+ --do_train  \n    default=False  \n    action='store_true'  \n    Whether to run training.\n\n+ --do_eval  \n    default=False  \n    action='store_true'  \n    Whether to run eval on the dev set.\n\n+ --do_predict  \n    default=False  \n    action='store_true'  \n    Whether to run prediction on the test set.\n\n+ --debug  \n    default=False  \n    action='store_true'  \n    Whether to cache cooked binary features\n\n+ --device_target   \n    type=str  \n    default='Ascend'   \n    choices=['Ascend   'GPU']  \n    device where the code will be implemented. (Default: Ascend)\n\n+ --distribute  \n    default=False  \n    action='store_true'  \n    Run distribute, default is false.\n\n+ --device_id  \n  type=str  \n  default=0  \n  Device id, default is 0.\n+ --device_num  \n  type=int  \n  default=1  \n  Use device nums, default is 1.\n+ --enable_data_sink  \n    default=False  \n    action='store_true'  \n    Enable data sink, default is false.\n+ --load_checkpoint_path  \n    type=str  \n    default=''  \n    Load checkpoint file path\n+ --num_train_epochs  \n    default=1  \n    type=int  \n    Total number of training epochs to perform.\n+ --output_dir  \n    default=None  \n    type=str  \n    required=True  \n    The output directory where the model checkpoints will be written.\n+ --run_mode  \n    type=str  \n    default='GRAPH'  \n    choices=['GRAPH   'PY']  \n    0: GRAPH_MODE, 1: PY_NATIVE_MODE\n+ --save_eval_steps  \n    type=int  \n    default=1000  \n    Save checkpoint and evaluate steps, default is 1000.\n+ --save_checkpoint_num  \n    type=int  \n    default=1  \n    Save checkpoint numbers, default is 1.\n+ --tag  \n    type=str  \n    default='final'  \n    The tag name of current prediction/runs.\n+ --task_dir  \n    default=None  \n    type=str  \n    required=False  \n    The directory to load customized tasks.\n+ --task_name  \n    default=None  \n    type=str  \n    action=LoadTaskAction  \n    required=True  \n    The name of the task to train.\n\n## train args\n\n+ --data_workers  \n            type=int  \n            default=4  \n            The workers to load data.  \n+ --enable_graph_kernel   \n    type=str   \n    default=auto   \n    choices=[auto, true, false]  \n    Accelerate by graph kernel, default is auto.\n+ --eval_batch_size   \n    default=32  \n    type=int  \n    Total batch size for eval.\n+ --enable_global_norm  \n            type=bool  \n            default=False  \n            enable global norm  \n+ --predict_batch_size  \n    default=32  \n    type=int  \n    Total batch size for prediction.\n+ --report_interval  \n            default=1  \n            type=int  \n            Interval steps for state report.  \n+ --save_graphs   \n    default=False  \n    action='store_true'  \n    Whether to save graphs\n+ --seed  \n            type=int  \n            default=1234  \n            random seed for initialization  \n+ --thor   \n    default=False  \n    action='store_true' \n    Whether to convert model to thor optimizer\n+ --train_batch_size  \n            default=64  \n            type=int  \n            Total batch size for training.  \n+ --train_steps  \n    type=int  \n    default=-1  \n    Training Steps, default is -1, meaning run all steps according to epoch number.\n## optimizer args\n+ --fp16  \n            default=False  \n            type=boolean_string  \n            Whether to use 16-bit float precision instead of 32-bit\n\n+ --learning_rate  \n            default=5e-5  \n            type=float  \n            The initial learning rate for Adam.\n\n+ --loss_scale_value  \n            type=int  \n            default=1024  \n            initial loss scale value  \n\n+ --resume_opt_path  \n            type=str.lower  \n            default=''  \n            The optimizer to be resumed.\n+ --scale_factor  \n            type=int  \n            default=4  \n            loss scale factor  \n\n+ --scale_window  \n            type=int  \n            default=1000  \n            loss window  \n\n+ --warmup  \n            default=0.1  \n            type=float  \n            Proportion of training to perform linear learning rate warmup for. E.g., 0.1 = 10% of training.\n## task\u4e2d\u589e\u52a0\u81ea\u5b9a\u4e49\u53c2\u6570\n```\n    @classmethod\n    def add_arguments(cls, parser):\n        \"\"\"Add task specific arguments\n            e.g. parser.add_argument('--data_dir', type=str, help='The path of data directory.')\n        \"\"\"\n        parser.add_argument('--task_example_arg', type=str, default=None, help='An example task specific argument')\n\n        return parser\n```\n\n# Task\n\u6240\u6709\u7684task\u90fd\u5e94\u5f53\u7ee7\u627f\u4e8e`MindsporeTrainer.apps.tasks.Task`,   \n\u4e3atransformer\u5b9a\u4e49\u7684`MindsporeTrainer.apps.tasks.TransformerTask`\u4e5f\u7ee7\u627f\u81eaTask\u3002  \nTask\u7c7b\u7684\u5b9a\u4e49\u4e3a:\n```\nclass Task():\n    _meta={}\n\n    def __init__(self, args, **kwargs):\n        self.args = args\n    \n    def eval_data(self, **kwargs):\n        \"\"\"\n        Get eval dataset object.\n        \"\"\"\n        return None\n\n    def train_data(self, **kwargs):\n        \"\"\"\n        Get train dataset object.\n        \"\"\"\n        return None\n\n    def test_data(self, **kwargs):\n        return None\n\n    def get_labels(self):\n        \"\"\"Gets the list of labels for this data set.\"\"\"\n        return None\n\n    def get_eval_fn(self, *args, **kwargs):\n        \"\"\"\n        Get the evaluation function\n        \"\"\"\n        return None\n\n    def get_eval_head(self, *args, **kwargs):\n        \"\"\"\n        Get the evaluate head, the head replace loss function head when evaluation process\n        \"\"\"\n        return None\n\n    def get_pred_fn(self, *args, **kwargs):\n        \"\"\"\n        Get the predict function\n        \"\"\"\n        return None\n\n    def get_loss(self, *args, **kwargs):\n        \"\"\"\n        Get the loss function\n        \"\"\"\n        return None\n\n    def get_opt_fn(self, *args, **kwargs):\n        \"\"\"\n        Get a function wich return the opimizer\n        \"\"\"\n        def get_optimizer(*args, **kwargs):\n            pass\n        return get_optimizer\n\n    def get_metrics(self):\n        \"\"\"Calcuate metrics based on prediction results\"\"\"\n        return None\n\n    def get_predict_fn(self):\n        \"\"\"Calcuate metrics based on prediction results\"\"\"\n        def predict_fn(logits, output_dir, name, prefix):\n            pass\n        return None\n\n    def get_feature_fn(self, **kwargs):\n        \"\"\"\n        get the featurize function\n        \"\"\"\n        def _example_to_feature(**kwargs):\n             return feature\n        return _example_to_feature\n    \n    def get_model(self):\n        \"\"\"\n        Get a model instance\n        \"\"\"\n        raise NotImplementedError('method not implemented yet.')\n\n    @classmethod\n    def add_arguments(cls, parser):\n        \"\"\"Add task specific arguments\n        \"\"\"\n        pass\n```\n# API\n## MindsporeTrainer\n    MindsporeTrainer.launch()\n    \u542f\u52a8\u5668\uff0c\u53ef\u652f\u6301\u5206\u5e03\u5f0f\u542f\u52a8\n    MindsporeTrainer.build_transformer_model(\n                                            config_path=None,\n                                            model='bert',\n                                            application='encoder',\n                                            **kwargs\n                                            )\n    \u521b\u5efatransformer\u6a21\u578b  \n    args:   \n        config_path model config \u8def\u5f84  \n        model \u4e3astr\u7684\u8bdd\uff0c\u4ece\u9884\u5b9a\u4e49\u6a21\u578b\u4e2d\u83b7\u53d6\u6a21\u578b\u7c7b\uff0c\u4e3a\u7c7b\u540d\u7684\u8bdd\uff0c\u76f4\u63a5\u8fdb\u884c\u5b9e\u4f8b\u5316  \n        application \u7528\u9014\uff0c\u9ed8\u8ba4\u4e3a'encoder'\uff0cTODO\uff1a\u5b9e\u73b0decoder\u7b49  \n        \u5176\u4ed6\u53c2\u6570\n## MindsporeTrainer.modeling\n    \u5efa\u6a21\u6a21\u5757\uff0c\u5e76\u63d0\u4f9b\u82e5\u5e72\u9884\u5b9a\u4e49\u7684\u6a21\u578b\uff0c\u76ee\u524d\u5305\u62ecBERT\u548cDeBERTa\u3002\n### MindsporeTrainer.modeling.models\n    \u63d0\u4f9b\u82e5\u5e72\u9884\u5b9a\u4e49\u7684\u6a21\u578b\uff0c\u76ee\u524d\u5305\u62ecBERT\u548cDeBERTa\u3002\n### MindsporeTrainer.modeling.loss\n    \u63d0\u4f9b\u9884\u5b9a\u4e49\u7684loss\n### MindsporeTrainer.modeling.tokenizers\n    \u63d0\u4f9b\u9884\u5b9a\u4e49\u7684tokenizers\uff0c\u76ee\u524d\u4ec5\u652f\u6301BertTokenizer\n## MindsporeTrainer.data \n    \u6570\u636e\u76f8\u5173\n### MindsporeTrainer.data.ExampleInstance\n    \u6837\u672c\u5b9e\u4f8b\n### MindsporeTrainer.data.ExampleSet\n    \u6837\u672c\u96c6\n### MindsporeTrainer.data.dynamic_dataset\n    \u521b\u5efa\u52a8\u6001\u6570\u636e\u96c6\n## MindsporeTrainer.utils\n    \u5404\u79cd\u5b9e\u7528\u7ec4\u4ef6\n### MindsporeTrainer.utils.metrics\n    \u63d0\u4f9b\u591a\u79cd\u81ea\u5b9a\u4e49metric\n### MindsporeTrainer.utils.masker\n    \u7528\u4e8e\u751f\u6210MLM\u7684mask\n## MindsporeTrainer.apps.tasks\n    \u4efb\u52a1\u76f8\u5173\n### MindsporeTrainer.apps.tasks.Task\n    \u4efb\u52a1\u57fa\u7c7b\n### MindsporeTrainer.apps.tasks.TransformerTask\n    Transformer\u4efb\u52a1\u7c7b\uff0c\u7ee7\u627f\u81eaTask\n## MindsporeTrainer.optims\n    \u4f18\u5316\u5668\u3001\u5b66\u4e60\u7387\u8c03\u5ea6\u7b49\n\n# models\n\u4f5c\u8005\u5b9e\u73b0\u7684\u6a21\u578b\uff0c\u52aa\u529b\u4e30\u5bcc\u4e2d......\n## DeBERTa\n\u539f\u8bba\u6587\uff1a[DeBERTa: Decoding-enhanced BERT with Disentangled Attention](https://arxiv.org/abs/2006.03654)  \n\u539f\u4ed3\u5e93\uff1a[https://github.com/microsoft/DeBERTa](https://github.com/microsoft/DeBERTa)  \n\u5b9e\u73b0\u7684\u662fDeBERTa v2\uff0c\u8be6\u89c1[DeBERTa](./MindsporeTrainer/apps/tasks/deberta.py) task  \n# \u4f5c\u8005\n\u5468\u6ce2 \n\nDMAC Group@ZJU \u6d59\u6c5f\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u7814\u7a76\u6240\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/baudzhou/MindsporeTrainer",
            "keywords": "Deep Learning,NLP,CV,Transformers,MindSpore",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "MindsporeTrainer",
            "package_url": "https://pypi.org/project/MindsporeTrainer/",
            "platform": null,
            "project_url": "https://pypi.org/project/MindsporeTrainer/",
            "project_urls": {
                "Homepage": "https://github.com/baudzhou/MindsporeTrainer"
            },
            "release_url": "https://pypi.org/project/MindsporeTrainer/0.2.0/",
            "requires_dist": [
                "loguru",
                "ujson",
                "tqdm",
                "scipy",
                "scikit-learn"
            ],
            "requires_python": "",
            "summary": "Make Mindspore Training Easier",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15467520,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cccb1f2533f6fdf7c9632eb730ad0eba",
                    "sha256": "6f12a5e2e4a925aed0c22f055bb961c5788720931cfd660b8081d40cbbf94f88"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cccb1f2533f6fdf7c9632eb730ad0eba",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 181580,
                "upload_time": "2022-10-20T01:01:56",
                "upload_time_iso_8601": "2022-10-20T01:01:56.935703Z",
                "url": "https://files.pythonhosted.org/packages/af/fd/00a6eeecad32903a8e4fe8e92c6ff997c862b34277ef9411ae7eef5155d4/MindsporeTrainer-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "335a6991eb5f8c88bd2f0dd6e96c5c98",
                    "sha256": "4048eedb85c19648e23829e01e6ec4c0010b9e8a57eb9c30aa7db92d36b7ea6c"
                },
                "downloads": -1,
                "filename": "MindsporeTrainer-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "335a6991eb5f8c88bd2f0dd6e96c5c98",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 149569,
                "upload_time": "2022-10-20T01:01:58",
                "upload_time_iso_8601": "2022-10-20T01:01:58.750968Z",
                "url": "https://files.pythonhosted.org/packages/2a/40/0f77bfebed24c34b7e65fef0783201893667bb832a34b1ffee67f447cfb8/MindsporeTrainer-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}