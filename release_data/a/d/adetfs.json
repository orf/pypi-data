{
    "1.1.0": {
        "info": {
            "author": "",
            "author_email": "herissonbleu <herisson_bleu@outlook.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: BSD License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3"
            ],
            "description": "# ADETfs - Automated Data Extraction Tool for Fitbit server\n\nPython software for automated extraction of user data from Fitbit server and saving it as csv. Software also saves all the sleep data as JSON file(s) which can be used for example for sleep graphics. This software can also be combined with import_to_redcap module, which can be used to transfer the data to REDCap.\n\n## Installation\n\npip install adetfs\n\n## Requirements\n\nSee the requirements.txt\n\n## Usage\n\nSoftware is easy-to-use but there are few tricks you must do.\n\nThis software is mainly intented to use in a research purposes but can also be used and modified to other purposes (see the license file). This software allows easy way to automate the data extraction from the Fitbit server. Fitbit server is not \"open-source database\" so you can only use this software with user(s) content.\n\nThis software can be run from the command-prompt using: python -m adetfs\nBefore launching, navigate to the folder that contains properties.ini file\n\nIt is also the responsibility of the person who uses this software to follow the local regulations according to any data protection and privacy laws.\n\n## Properties.ini: This file contains all the parameters for the software to run. You only have to change the values of the parameters to match yours. Use only plain text, no quotations are needed. This file need to placed in the ADETfs folder path. Example of properties.ini file is available with the source code. Parameters in the file are:\n\n#### EMAIL:\n\nuser = senders gmail address without '@gmail.com' (We suggest creating one for this purpose).  \npassword = gmail app password (https://support.google.com/accounts/answer/185833?hl=en)  \nto = email address of receiver\nusernames = filepath to txt file that contains json type dictionary with Fitbit userid and the name user want to use in email alert\nExample: {\"1XX23\": \"Test user 1\", \"9BB34\":\"Test user 2\", \"8CC35\": \"userid\"}\n\n#### CR:\n\nid = client_id (can be obtained from Fitbit by registering an application)  \nsecret = client_secret (can be obtained from Fitbit by registering an application)\n\n#### TOKENS:\n\ntoken_file = path to token file. Create a file \"filename.txt\" and provide the path here.  Then use fetch_tokens_to_file module for saving the tokens inside the file.\n\n#### REFRESH_TOKEN:\n\nurl_path = Fitbit API Refresh token URL path\n\n#### SLEEP_STATS:\n\napi_version = Fitbit API version for sleep stats\n\n#### FOLDER_PATH\n\nfolder_path = Folder path in which the data will be saved.  Software will create a structure '\\data\\user_id\\' in which the user files will be saved\nExecute.log and data.log are save under this path\n\n#### EXTRACTION_LOG:\n\nEXTRACTION_LOG_PATH: Path to the extraction log file that contains JSON type information:  {USER_ID:last_extraction_date,USER_ID2:last_extraction_date}\nThis file is used to see if there is new data available for the user.\nExtraction is being done until two days before last sync time to not miss any sleep data\n\n### Complementary part for REDCap projects\n\n#### REDCap:\n\ntoken = REDCap project token  \nurl = REDCap project URL\n\n### activate_main.bat: You can download this file from the project homepage\n\nThis file is for automation of the script. Automation will use the time delta between last extraction and last synctime. As a default the tool is meant to be run once a week. If run more seldom, make sure that all the data is being collected (Fitbit has rate limit of 150 queries per hour).\n\nIn this Batch file, you will need to add the directory of your Python virtualenvironment (if any), your python.exe file for that environment and the directory of this ADETfs main file.\n\nYou can use Windows Task Scheduler to schedule this file to be run once a week. At the beginning the file has simple check to verify that internet connection is on. If not it will sleep 10 minutes as a default before trying again. Loop will run 5 times and if no connection is established the execution will end and report can be find from the error.log.\n\n### Client ID and Client Secret:\n\nNEVER EXPOSE THE CLIENT ID AND SECRET!\n\nClient refers to Fitbit Application you will have to create. Your application will have to be server type and follow the requirements and rules of Fitbit. The author(s) of this software, according to the license, are not in any legal responsibility for your use case.\n\nYour application can use this tool as it is or make changes in accordance with the license.\n\nWhen you have created and registered your App, you will have to save the credentials (client id and secret) into the corresponding parameters of Properties.ini file for later use.\n\nBe aware, that if ever you will have to revoke the client secret, you will have to save the new secret inside the properties.ini.\n\n### Tokens for each user:\n\nNEVER EXPOSE THE USER TOKENS!\n\nYou must save your user(s) Fitbit id, expiration of authentication, access token and refresh token into the tokens text file. This have to be done manually using Fitbit Authentication. For this you can use fetch_tokens_to_file module. After running the module, a browser will open to Fitbit login page and ask the user to login. After login user will be asked the consent. After confirmation, the tokens will be saved in the tokens text file. Before fetching tokens for the next user, you will have to open Fitbit website and log out with the current user. Otherwise you will automatically fetch new tokens for the logged in user.\n\nThis part is most time consuming as it can not be automated. After doing this for each user, you should have a token file with each row having:\nuser_id,expires_at,access_token,refresh_token\n\nMake sure that the file does not contain empty line at the end!\n\n### CSV and JSON output:\n\nSoftware will save one CSV file for each day for each user with the extracted data. Non-existing data will be empty. In the case of sleep data, if any, then software will save also JSON file for each day for each user. Each CSV file will be named as 'userid_YYYY_MM_DD_all_data.csv' and JSON file as 'sleep_stats_userid_YYYY_MM_DD.json'. If file is already existing name will contain '_copy' at the end. All files will be saved to folder called 'data\\user_id'. Path for this folder can be configured inside properties.ini\n\n### Error handling:\n\nFor fatal errors, software is using \"execute.log\" to save them. For non-fatal errors, for example non-existing sleep data, errors will be logged in \"data_log.log\".\n\n### Automation:\n\nSoftware comes with .bat-file which can be used for automation with most Windows OS. For Linux or other OS, please refer the OS help.\n\n.bat-file, among other files like properties.ini, can be found from the source code or project website.\n\n### Email alert:\n\nSoftware is sending email alert after execution with information of possible errors and issues listed in the email.\n\n### Tests:\n\nSoftware includes few simple tests, which can be found from the tests folder. These can be used to check the correct functioning of the software.\n\n## Contributing\nIdeas how to improve the software, add new features or error fix are welcome.\nPlease open an issue first to discuss what you would like to change / or add.\n\n## Citation\nWhen used in research, please look the citation file and cite correspondingly.\n\n## Acknowledgment\nThis tool is benefiting from the following projects:\nFitbit API Python Client Implementation , https://github.com/orcasgit/python-fitbit\nCherryPy Object-Oriented HTTP framework, https://www.cherrypy.org\n\n## License\n[BSD 3-Clause](https://choosealicense.com/licenses/bsd-3-clause/)\nThis software includes third party open source software components: Pandas, CherryPy, Fitbit API Python Client Implementation , tqdm, Requests, urllib3, oauthlib, toml, and setuptools.\n\nEach of these software components have their own license. Please see ./LICENSES/PANDAS_LICENSE, ./LICENSES/CHERRYPY_LICENSE, ./LICENSES/FITBITAPIPYTHONCLIENTIMPLEMENTATION_LICENSE, \n./LICENSES/TQDM_LICENSE, ./LICENSES/OAUTHLIB_LICENSE, ./LICENSES/SETUPTOOLS_LICENSE,\n./LICENSES/URLLIB3_LICENSE, and ./LICENSES/REQUESTS_LICENSE., /LICENSES/TOML_LICENSE.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "fitbit,data extraction,automation,batch,research",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "adetfs",
            "package_url": "https://pypi.org/project/adetfs/",
            "platform": null,
            "project_url": "https://pypi.org/project/adetfs/",
            "project_urls": {
                "Homepage": "https://github.com/herissonbleu"
            },
            "release_url": "https://pypi.org/project/adetfs/1.1.0/",
            "requires_dist": [
                "CherryPy (>=18.6.1)",
                "fitbit (>=0.3.1)",
                "pandas (>=1.4.1)",
                "toml (>=0.10.2)",
                "tqdm (>=4.64.0)",
                "urllib3 (>=1.26.8)",
                "setuptools (>=50.3.1)",
                "oauthlib (>=3.1.1)",
                "requests (>=2.27.1)",
                "unittest ; extra == 'dev'",
                "pip-tools ; extra == 'dev'",
                "bumpver ; extra == 'dev'"
            ],
            "requires_python": ">=3.8",
            "summary": "Automated Data Extraction Tool for Fitbit Server",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14838584,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fa8b3decaf2b2da3e4f15e7e7f2ada0e",
                    "sha256": "258bf957f907628fca1425ba52d608ffa3434ef1c8952f71461e64851e644a61"
                },
                "downloads": -1,
                "filename": "adetfs-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fa8b3decaf2b2da3e4f15e7e7f2ada0e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 5902,
                "upload_time": "2022-08-22T17:24:47",
                "upload_time_iso_8601": "2022-08-22T17:24:47.908883Z",
                "url": "https://files.pythonhosted.org/packages/0c/f3/8b61b5fd7731cec53584ba6e7e82c7340ece071685b03d11ad9c5ab42b2c/adetfs-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7267e912905666c2f2d7a18e381052ee",
                    "sha256": "36b325a6457019bc4d969d0252c58133f00df10839a802f2debbc681532a95a2"
                },
                "downloads": -1,
                "filename": "adetfs-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "7267e912905666c2f2d7a18e381052ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 28014,
                "upload_time": "2022-08-22T17:24:49",
                "upload_time_iso_8601": "2022-08-22T17:24:49.972826Z",
                "url": "https://files.pythonhosted.org/packages/4e/6f/508151f5a640bfcde1ab731123bb5d8ea1c32e41ae6616e5e24462b1a223/adetfs-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}