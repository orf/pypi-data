{
    "0.1": {
        "info": {
            "author": "Malte Franken",
            "author_email": "coding@subspace.de",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# python-aio-geojson-generic-client\n\n[![Build Status](https://github.com/exxamalte/python-aio-geojson-generic-client/workflows/CI/badge.svg?branch=main)](https://github.com/exxamalte/python-aio-geojson-generic-client/actions?workflow=CI)\n[![codecov](https://codecov.io/gh/exxamalte/python-aio-geojson-generic-client/branch/main/graph/badge.svg?token=F5ZEM1UO56)](https://codecov.io/gh/exxamalte/python-aio-geojson-generic-client)\n[![PyPi](https://img.shields.io/pypi/v/aio-geojson-generic-client.svg)](https://pypi.python.org/pypi/aio-geojson-generic-client)\n[![Version](https://img.shields.io/pypi/pyversions/aio-geojson-generic-client.svg)](https://pypi.python.org/pypi/aio-geojson-generic-client)\n\nThis library provides convenient async generic access to [GeoJSON](https://datatracker.ietf.org/doc/html/rfc7946) feeds.\n\n## Installation\n`pip install aio-geojson-generic-client`\n\n## Usage\nSee below for examples of how this library can be used. After instantiating a \nparticular class - feed or feed manager - and supply the required parameters, \nyou can call `update` to retrieve the feed data. The return value \nwill be a tuple of a status code and the actual data in the form of a list of \nfeed entries specific to the selected feed.\n\nStatus Codes\n* _OK_: Update went fine and data was retrieved. The library may still \n  return empty data, for example because no entries fulfilled the filter \n  criteria.\n* _OK_NO_DATA_: Update went fine but no data was retrieved, for example \n  because the server indicated that there was not update since the last request.\n* _ERROR_: Something went wrong during the update\n\n**Parameters**\n\n| Parameter          | Description                               |\n|--------------------|-------------------------------------------|\n| `home_coordinates` | Coordinates (tuple of latitude/longitude) |\n| `url`              | URL of the GeoJSON feed                   |\n\n**Supported Filters**\n\n| Filter     |                     | Description |\n|------------|---------------------|-------------|\n| Radius     | `filter_radius`     | Radius in kilometers around the home coordinates in which events from feed are included. |\n\n**Example**\n```python\nimport asyncio\nfrom aiohttp import ClientSession\nfrom aio_geojson_generic_client import GenericFeed\nasync def main() -> None:\n    async with ClientSession() as websession:    \n        # Home Coordinates: Latitude: -33.0, Longitude: 150.0\n        # Filter radius: 50 km\n        feed = GenericFeed(websession, \n                           (-33.0, 150.0),\n                           \"https://www.rfs.nsw.gov.au/feeds/majorIncidents.json\",\n                           filter_radius=50)\n        status, entries = await feed.update()\n        print(status)\n        print(entries)\nasyncio.get_event_loop().run_until_complete(main())\n```\n\n## Feed entry properties\nEach feed entry is populated with the following properties:\n\n| Name               | Description                                                                                         | Feed attribute                               |\n|--------------------|-----------------------------------------------------------------------------------------------------|----------------------------------------------|\n| geometries         | All geometry details of this entry.                                                                 | `geometry`                                   |\n| coordinates        | Best coordinates (latitude, longitude) of this entry.                                               | `geometry`                                   |\n| external_id        | The unique public identifier for this incident.                                                     | `id`, `guid`, `title` or hash of coordinates |\n| title              | Title of this entry (if provided).                                                                  | `title`                                      |\n| distance_to_home   | Distance in km of this entry to the home coordinates.                                               | n/a                                          |\n| publication_date   | The publication date of the entry (if provided).                                                    | `pubDate`                                    |\n| properties         | All properties defined for this entry.                                                              | `properties`                                 |\n\n\n## Feed Manager\n\nThe Feed Manager helps managing feed updates over time, by notifying the \nconsumer of the feed about new feed entries, updates and removed entries \ncompared to the last feed update.\n\n* If the current feed update is the first one, then all feed entries will be \n  reported as new. The feed manager will keep track of all feed entries' \n  external IDs that it has successfully processed.\n* If the current feed update is not the first one, then the feed manager will \n  produce three sets:\n  * Feed entries that were not in the previous feed update but are in the \n    current feed update will be reported as new.\n  * Feed entries that were in the previous feed update and are still in the \n    current feed update will be reported as to be updated.\n  * Feed entries that were in the previous feed update but are not in the \n    current feed update will be reported to be removed.\n* If the current update fails, then all feed entries processed in the previous\n  feed update will be reported to be removed.\n\nAfter a successful update from the feed, the feed manager provides two\ndifferent dates:\n\n* `last_update` will be the timestamp of the last update from the feed \n  irrespective of whether it was successful or not.\n* `last_update_successful` will be the timestamp of the last successful update \n  from the feed. This date may be useful if the consumer of this library wants \n  to treat intermittent errors from feed updates differently.\n* `last_timestamp` (optional, depends on the feed data) will be the latest \n  timestamp extracted from the feed data. \n  This requires that the underlying feed data actually contains a suitable \n  date. This date may be useful if the consumer of this library wants to \n  process feed entries differently if they haven't actually been updated.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/exxamalte/python-aio-geojson-generic-client",
            "keywords": "",
            "license": "Apache-2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aio-geojson-generic-client",
            "package_url": "https://pypi.org/project/aio-geojson-generic-client/",
            "platform": null,
            "project_url": "https://pypi.org/project/aio-geojson-generic-client/",
            "project_urls": {
                "Homepage": "https://github.com/exxamalte/python-aio-geojson-generic-client"
            },
            "release_url": "https://pypi.org/project/aio-geojson-generic-client/0.1/",
            "requires_dist": [
                "aio-geojson-client (>=0.17)",
                "aiohttp (<4,>=3.7.4)",
                "pytz (>=2019.01)"
            ],
            "requires_python": "",
            "summary": "An generic async GeoJSON client library.",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13168633,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "20e6ca6003aa06bfd0822555b51a1fe2",
                    "sha256": "b83fe73f329ad76c204af559bf61a1e4522bae4c72f35a9ca7a1684c03fb0b99"
                },
                "downloads": -1,
                "filename": "aio_geojson_generic_client-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "20e6ca6003aa06bfd0822555b51a1fe2",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10818,
                "upload_time": "2022-03-14T10:55:11",
                "upload_time_iso_8601": "2022-03-14T10:55:11.664649Z",
                "url": "https://files.pythonhosted.org/packages/a9/8f/18b2a3e00976679d26101fced98c568f2422d9597be7e88bf879b198af7f/aio_geojson_generic_client-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "127c54a63302b44d1f35e80303f0bbf1",
                    "sha256": "5957d01bb44593ba15ab7dc5d06b8782aef8c9d7dad3d268a0e2ec0965b64c8c"
                },
                "downloads": -1,
                "filename": "aio_geojson_generic_client-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "127c54a63302b44d1f35e80303f0bbf1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9717,
                "upload_time": "2022-03-14T10:55:13",
                "upload_time_iso_8601": "2022-03-14T10:55:13.816650Z",
                "url": "https://files.pythonhosted.org/packages/30/49/4056188a5a83d7ffa3882d250e684e5359b4d77f53ccf7273827684a69fe/aio_geojson_generic_client-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}