{
    "0.0.1": {
        "info": {
            "author": "mauricio.rojas",
            "author_email": "mauricio.rojas@mobilize.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/MobilizeNet/snowpark-extensions-py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowpark-extensions",
            "package_url": "https://pypi.org/project/snowpark-extensions/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowpark-extensions/",
            "project_urls": {
                "Homepage": "http://github.com/MobilizeNet/snowpark-extensions-py"
            },
            "release_url": "https://pypi.org/project/snowpark-extensions/0.0.1/",
            "requires_dist": [
                "snowflake-snowpark-python",
                "pandas",
                "shortuuid"
            ],
            "requires_python": "",
            "summary": "A set of helpers to extend snowpark functionality",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16060214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f004f8a7ed35c778f29d5a9d3fbb1a23",
                    "sha256": "f087a0b935b3de6d82dc5fa0e73b2f05ddd98193d3f5efd7bb9743046e07bc11"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f004f8a7ed35c778f29d5a9d3fbb1a23",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 7884,
                "upload_time": "2022-11-18T04:04:50",
                "upload_time_iso_8601": "2022-11-18T04:04:50.837246Z",
                "url": "https://files.pythonhosted.org/packages/c0/78/0b895c176c4df32313a1fb1faee3acd0c8a7d1e91b7e06640a9d7b0713a5/snowpark_extensions-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "02a30f5f7f23fcfaf83343a63bd2a3c7",
                    "sha256": "b67367dc006ab55e984419f06b0b8777ea0a5e6f840d55846c2521e5ba067273"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "02a30f5f7f23fcfaf83343a63bd2a3c7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 7291,
                "upload_time": "2022-11-18T04:04:53",
                "upload_time_iso_8601": "2022-11-18T04:04:53.152023Z",
                "url": "https://files.pythonhosted.org/packages/6a/da/e6ac761e278c53e3dc7b74bdba104aeda46d65483ecfb537a5a2593561a2/snowpark_extensions-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "mauricio.rojas",
            "author_email": "mauricio.rojas@mobilize.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/MobilizeNet/snowpark-extensions-py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowpark-extensions",
            "package_url": "https://pypi.org/project/snowpark-extensions/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowpark-extensions/",
            "project_urls": {
                "Homepage": "http://github.com/MobilizeNet/snowpark-extensions-py"
            },
            "release_url": "https://pypi.org/project/snowpark-extensions/0.0.2/",
            "requires_dist": [
                "snowflake-snowpark-python",
                "pandas",
                "shortuuid"
            ],
            "requires_python": "",
            "summary": "A set of helpers to extend snowpark functionality",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16060214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9a101e9f249028381e76476ad2579567",
                    "sha256": "ad4f6bfda589d3be0a031b8d4e779d660c6c664b9a99531549bfaf5e55c91355"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9a101e9f249028381e76476ad2579567",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 8786,
                "upload_time": "2022-11-29T20:51:52",
                "upload_time_iso_8601": "2022-11-29T20:51:52.556081Z",
                "url": "https://files.pythonhosted.org/packages/99/10/5f861221680f97fb1528ec917406e8951ea3f7191d149a8d829dbe86394b/snowpark_extensions-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1410eae76415aa742f3115b39a660cb5",
                    "sha256": "8f88213bf27a74d2a946b9fa0e5836acdfd34f59c2936c4facb5a1fd53071550"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1410eae76415aa742f3115b39a660cb5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8951,
                "upload_time": "2022-11-29T20:51:54",
                "upload_time_iso_8601": "2022-11-29T20:51:54.666479Z",
                "url": "https://files.pythonhosted.org/packages/24/08/96a1f87d17c094011a8465e3910ea6d3594d01d96c1c67931915648b9f71/snowpark_extensions-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "mauricio.rojas",
            "author_email": "mauricio.rojas@mobilize.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/MobilizeNet/snowpark-extensions-py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowpark-extensions",
            "package_url": "https://pypi.org/project/snowpark-extensions/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowpark-extensions/",
            "project_urls": {
                "Homepage": "http://github.com/MobilizeNet/snowpark-extensions-py"
            },
            "release_url": "https://pypi.org/project/snowpark-extensions/0.0.4/",
            "requires_dist": [
                "snowflake-snowpark-python",
                "pandas",
                "shortuuid"
            ],
            "requires_python": "",
            "summary": "A set of helpers to extend snowpark functionality",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16060214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6d477d2270c59827d455a3a128ce417f",
                    "sha256": "f97f1e922d90086e8753be63b8a776f03aa5f2a016eb2c009f0af9474258252c"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6d477d2270c59827d455a3a128ce417f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 10455,
                "upload_time": "2022-12-01T04:57:16",
                "upload_time_iso_8601": "2022-12-01T04:57:16.638432Z",
                "url": "https://files.pythonhosted.org/packages/c8/27/9001ee65d02b8d39e9bac5d47847aac851977f7cc7dd0bc984e462f27c13/snowpark_extensions-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "55eea51d8a6133839799fd062ef29c7f",
                    "sha256": "dd340e8d55e7f8fa0313ee4873ff0b7814cd678135a6ec979e9df53891d97534"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.4.tar.gz",
                "has_sig": false,
                "md5_digest": "55eea51d8a6133839799fd062ef29c7f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 11103,
                "upload_time": "2022-12-01T04:57:17",
                "upload_time_iso_8601": "2022-12-01T04:57:17.890353Z",
                "url": "https://files.pythonhosted.org/packages/70/f7/6a73fa098ad0ca2c125fe25a567dd86dd7275aa064032444c80fa8e401fa/snowpark_extensions-0.0.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.5": {
        "info": {
            "author": "mauricio.rojas",
            "author_email": "mauricio.rojas@mobilize.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/MobilizeNet/snowpark-extensions-py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowpark-extensions",
            "package_url": "https://pypi.org/project/snowpark-extensions/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowpark-extensions/",
            "project_urls": {
                "Homepage": "http://github.com/MobilizeNet/snowpark-extensions-py"
            },
            "release_url": "https://pypi.org/project/snowpark-extensions/0.0.5/",
            "requires_dist": [
                "snowflake-snowpark-python",
                "pandas",
                "shortuuid"
            ],
            "requires_python": "",
            "summary": "A set of helpers to extend snowpark functionality",
            "version": "0.0.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16060214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "010434761011a8673e5d8288cafae7ec",
                    "sha256": "170ee2a2653b2e161b1b51aede285e47a48a87e318162a6b16e63d403933a9cf"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "010434761011a8673e5d8288cafae7ec",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11259,
                "upload_time": "2022-12-08T05:25:19",
                "upload_time_iso_8601": "2022-12-08T05:25:19.166023Z",
                "url": "https://files.pythonhosted.org/packages/2a/69/f7869960f5589d58f2a48d39d6c6f66d78aa84094b3095523af11b520885/snowpark_extensions-0.0.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0be9cff28d79a1576fc719ca09b6b6ae",
                    "sha256": "3c4c6736088c307bf8c3286582ea17d3deee571dcf78cc8439ab16a70fb59af6"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.5.tar.gz",
                "has_sig": false,
                "md5_digest": "0be9cff28d79a1576fc719ca09b6b6ae",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12315,
                "upload_time": "2022-12-08T05:25:21",
                "upload_time_iso_8601": "2022-12-08T05:25:21.162747Z",
                "url": "https://files.pythonhosted.org/packages/02/00/147a6b8d3f0d86b0e40f57269000ecadf99abbb060506f5bf4ba84ea1fcc/snowpark_extensions-0.0.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.6": {
        "info": {
            "author": "mauricio.rojas",
            "author_email": "mauricio.rojas@mobilize.net",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# snowpark-extensions-py\n\nSnowpark by itself is a powerful library, but still some utility functions can always help.\n\n\n\n\n# Installation\n\nWe recommended installing using [PYPI](https://pypi.org/)\n\n```bash\n\n    $ pip install snowconvert-deploy-tool --upgrade\n```    \n> note:: If you run this command on MacOS change `pip` by `pip3`\n\n\n# Usage\n\n\njust import it at the top of your file and it will automatically extend your snowpark package.\nFor example:\n``` python\nfrom snowflake.snowpark import Session\nimport snowpark_extensions\nnew_session = Session.builder.from_snowsql().appName(\"app1\").getOrCreate()\n```\n```\n\n## Currently provided extensions:\n\n## SessionBuilder extensions\n\n| Name                          | Description |\n| ----------------------------- | ----------- |\n| SessionBuilder.from_snowsql   | can read the information from the snowsql config file by default at ~/snowsql/config or at a given location |\n| SessionBuilder.env            | reads settings from SNOW_xxx or SNOWSQL_xxx variables |\n| SessionBuilder.appName        | Sets a query tag with the given appName               |\n| SessionBuilder.append_tag     | Appends a new tag to the existing query tag           | \n\n\nYou can the create your session like:\n\n``` python\nfrom snowflake.snowpark import Session\nimport snowpark_extensions\nnew_session = Session.builder.from_snowsql().appName(\"app1\").create()\n```\n\n``` python\nfrom snowflake.snowpark import Session\nimport snowpark_extensions\nnew_session = Session.builder.env().appName(\"app1\").create()\n```\n\nThe `appName` can use to setup a query_tag like `APPNAME=tag;execution_id=guid` which can then be used to track job actions with a query like\n\nYou can then use a query like:\nTo see all executions from an app or \n```sql\nselect *\nfrom table(information_schema.query_history())\nwhery query_tag like '%APPNAME=tag%'\norder by start_time desc;\n```\n\nTo see the executions for a particular execution:\n\n```sql\nselect *\nfrom table(information_schema.query_history())\nwhery query_tag like '%APPNAME=tag;execution_id=guid%'\norder by start_time desc;\n```\n\n## Column Extensions\n| Name                         | Description                                                                         |\n|------------------------------|-------------------------------------------------------------------------------------|\n| Column.getItem               | An expression that gets an item at position ordinal out of a list, or gets an item by key out of a dict. |\n\n\n## DataFrame Extensions\n\n| Name                           | Description                                                                         |\n|--------------------------------|-------------------------------------------------------------------------------------|\n| DataFrame.dtypes               | returns the list of datatypes in the DataFrame\n| DataFrame.map                  | provides an equivalent for the map function for example `df.map(func,input_types=[StringType(),StringType()],output_types=[StringType(),IntegerType()],to_row=True)` \n| DataFrame.simple_map           | if a simple lambda like `lambda x: x.col1 + x.col2` is used this functions can be used like `df.simple_map(lambda x: x.col1 + x.col2)`\n| DataFrame.groupby.applyInPandas| Maps each group of the current DataFrame using a pandas udf and returns the result as a DataFrame. |\n| DataFrame.replace        | extends replace to allow using a regex\n\n### Examples\n\n#### map and simple_map\n\n```python\nfrom snowflake.snowpark import Session\nfrom snowflake.snowpark.types import *\nimport snowpark_extensions\n\nsession = Session.builder.from_snowsql().appName(\"app1\").getOrCreate()\n  \ndata = [('James','Smith','M',30),('Anna','Rose','F',41),('Robert','Williams','M',62)]\ncolumns = [\"firstname\",\"lastname\",\"gender\",\"salary\"]\ndf = session.createDataFrame(data=data, schema = columns)\ndf.show()\n\n\n#\n#--------------------------------------------------\n#|\"FIRSTNAME\"  |\"LASTNAME\"  |\"GENDER\"  |\"SALARY\"  |\n#--------------------------------------------------\n#|James        |Smith       |M         |30        |\n#|Anna         |Rose        |F         |41        |\n#|Robert       |Williams    |M         |62        |\n#--------------------------------------------------\n\n\n\n\n# using map with a lamda, the to_row indicates that the code will pass a row as x to the lambda\n# if you have a lambda like lambda x,y,z you can use to_row=False\ndf2=df.map(lambda x: \n        (x[0]+\",\"+x[1],x[2],x[3]*2),\n        output_types=[StringType(),StringType(),IntegerType()],to_row=True)\ndf2.show()\n\n#\n#-----------------------------------\n#|\"C_1\"            |\"C_2\"  |\"C_3\"  |\n#-----------------------------------\n#|James,Smith      |M      |60     |\n#|Anna,Rose        |F      |82     |\n#|Robert,Williams  |M      |124    |\n#-----------------------------------\n#\n\n# for simple lambda\n# simple map will just pass the same dataframe to the function\n# this approach is faster\ndf2 = df.simple_map(lambda x: (x[0]+\",\"+x[1],x[2],x[3]*2))\ndf2.toDF([\"name\",\"gender\",\"new_salary\"]).show()\n\n#---------------------------------------------\n#|\"NAME\"           |\"GENDER\"  |\"NEW_SALARY\"  |\n#---------------------------------------------\n#|James,Smith      |M         |60            |\n#|Anna,Rose        |F         |82            |\n#|Robert,Williams  |M         |124           |\n#---------------------------------------------\n#\n\n```\n\n### replace with support for regex\n\n```python\ndf = session.createDataFrame([('bat',1,'abc'),('foo',2,'bar'),('bait',3,'xyz')],['A','C','B'])\n# already supported replace\ndf.replace(to_replace=1, value=100).show()\n# replace with regex\ndf.replace(to_replace=r'^ba.$', value='new',regex=True).show()\n```\n\n### applyInPandas\n```python\nfrom snowflake.snowpark import Session\nimport snowpark_extensions\nsession = Session.builder.from_snowsql().getOrCreate()\nimport pandas as pd  \ndf = session.createDataFrame(\n    [(1, 1.0), (1, 2.0), (2, 3.0), (2, 5.0), (2, 10.0)],\n    schema=[\"ID\", \"V\"])\ndf1 = df.to_pandas()\ndef normalize(pdf):\n    V = pdf.V\n    return pdf.assign(V=(V - V.mean()) / V.std())\ndf2 = normalize(df1)\n# schema can be an string or an StructType\ndf.group_by(\"ID\").applyInPandas(\n    normalize, schema=\"id long, v double\").show()  \n```\n\n```\n------------------------------\n|\"ID\"  |\"V\"                  |\n------------------------------\n|2     |-0.8320502943378437  |\n|2     |-0.2773500981126146  |\n|2     |1.1094003924504583   |\n|1     |-0.7071067811865475  |\n|1     |0.7071067811865475   |\n------------------------------\n```\n\n## Functions Extensions\n\n| Name                         | Description                                                                         |\n|------------------------------|-------------------------------------------------------------------------------------|\n| functions.array_sort         | sorts the input array in ascending order or descending order. The elements of the input array must be orderable. Null elements will be placed at the end of the returned array. |\n| functions.unix_timestamp     | returns the UNIX timestamp of current time.                                         |\n| functions.from_unixtimestamp | can be used to convert UNIX time to Snowflake timestamp                             |\n| functions.format_number      | formats numbers using the specified number of decimal places                        |\n| functions.reverse            | returns a reversed string                                                           |\n| functions.explode            | returns a new row for each element in the given array                               |\n| functions.date_add           | returns the date that is n days days after                                          |\n| functions.date_sub           | returns the date that is n days before                                              |\n| functions.regexp_extract     | Extract a specific group matched by a regex, from the specified string column.      |\n\n\n### Examples:\n\n#### array_sort\n\n```python\nfrom snowflake.snowpark import Session, DataFrame\nfrom snowflake.snowpark.functions import col, lit\nfrom snowflake.snowpark import functions as F\nimport snowpark_extensions\n\nsession = Session.builder.from_snowsql().getOrCreate()\ndf = session.createDataFrame([([2, 1, None, 3],),([1],),([],)], ['data'])\ndf.select(F.array_sort(df.data)).show()\n```\n\n```\n-------------------------------------------\n|\"ARRAY_SORT(\"\"DATA\"\", TRUE :: BOOLEAN)\"  |\n-------------------------------------------\n|[                                        |\n|  2,                                     |\n|  1,                                     |\n|  3,                                     |\n|  null                                   |\n|]                                        |\n|[]                                       |\n|[                                        |\n|  1                                      |\n|]                                        |\n-------------------------------------------\n```\ndf.select(F.array_sort(df.data, asc=False)).show()\n\n```\n--------------------------------------------\n|\"ARRAY_SORT(\"\"DATA\"\", FALSE :: BOOLEAN)\"  |\n--------------------------------------------\n|[                                         |\n|  1                                       |\n|]                                         |\n|[]                                        |\n|[                                         |\n|  null,                                   |\n|  2,                                      |\n|  1,                                      |\n|  3                                       |\n|]                                         |\n--------------------------------------------\n```\n\n### regexp_extract\n\n```python\nsession = Session.builder.from_snowsql().create()\n\n\ndf = session.createDataFrame([('100-200',)], ['str'])\nres = df.select(F.regexp_extract('str',r'(\\d+)-(\\d+)',1).alias('d')).collect()\nprint(str(res))\n# [Row(D='1')]\n\ndf = session.createDataFrame([['id_20_30', 10], ['id_40_50', 30]], ['id', 'age'])\ndf.show()\n# --------------------\n# |\"ID\"      |\"AGE\"  |\n# --------------------\n# |id_20_30  |10     |\n# |id_40_50  |30     |\n# --------------------\n\n\ndf.select(F.regexp_extract('id', r'(\\d+)', 1)).show()\n# ------------------------------------------------------\n# |\"COALESCE(REGEXP_SUBSTR(\"\"ID\"\", '(\\\\D+)', 1, 1,...  |\n# ------------------------------------------------------\n# |20                                                  |\n# |40                                                  |\n# ------------------------------------------------------\n\n\ndf.select(F.regexp_extract('id', r'(\\d+)_(\\d+)', 2)).show()\n# ------------------------------------------------------\n# |\"COALESCE(REGEXP_SUBSTR(\"\"ID\"\", '(\\\\D+)_(\\\\D+)'...  |\n# ------------------------------------------------------\n# |30                                                  |\n# |50                                                  |\n# ------------------------------------------------------\n```\n\n# utilities\n\n| Name | Description         |\n|------|---------------------|\n| utils.map_to_python_type | maps from DataType to python type |\n| utils.map_string_type_to_datatype | maps a type by name to a snowpark `DataType` |\n| utils.schema_str_to_schema | maps an schema specified as an string to a `StructType()`\n\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://github.com/MobilizeNet/snowpark-extensions-py",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowpark-extensions",
            "package_url": "https://pypi.org/project/snowpark-extensions/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowpark-extensions/",
            "project_urls": {
                "Homepage": "http://github.com/MobilizeNet/snowpark-extensions-py"
            },
            "release_url": "https://pypi.org/project/snowpark-extensions/0.0.6/",
            "requires_dist": [
                "snowflake-snowpark-python",
                "pandas",
                "shortuuid"
            ],
            "requires_python": "",
            "summary": "A set of helpers to extend snowpark functionality",
            "version": "0.0.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16060214,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "13d3ee716506702b8694ed4e5d1f092b",
                    "sha256": "007bbfc81a379d55a920de9e5c749062d094449ba53eb08e1b8cc9167d27a6a4"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "13d3ee716506702b8694ed4e5d1f092b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 11384,
                "upload_time": "2022-12-10T20:27:00",
                "upload_time_iso_8601": "2022-12-10T20:27:00.322902Z",
                "url": "https://files.pythonhosted.org/packages/3b/f3/6098db025dbbd6f5dce768c0205dec646af45589578f538aa570cf94e35d/snowpark_extensions-0.0.6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bf6da9ce5d955b9a75e6e64d49f682b1",
                    "sha256": "1d35a5e6b6a46607b71ab55067ba7f53df24826150cb28cd5508d3ac11453517"
                },
                "downloads": -1,
                "filename": "snowpark_extensions-0.0.6.tar.gz",
                "has_sig": false,
                "md5_digest": "bf6da9ce5d955b9a75e6e64d49f682b1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12452,
                "upload_time": "2022-12-10T20:27:01",
                "upload_time_iso_8601": "2022-12-10T20:27:01.977120Z",
                "url": "https://files.pythonhosted.org/packages/4c/e2/da4e6a64a7261b4ce76da38dec0fcf69f4958ddd15215f809808bf13ce82/snowpark_extensions-0.0.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}