{
    "1.0.0": {
        "info": {
            "author": "Warren Wang",
            "author_email": "warrenwjk@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.7"
            ],
            "description": "# Neaky\n\nMake python a Windows spyware.\n\nfeatures:\n- clipboard - get clipboard content.\n- screenshot - save screenshot to path\n- remote_dll_injection, get_pid_by_name, get_pids_by_name \n- set_startup_reg, delete_startup_reg - add startup registry key.\n- keylog_stdout, keylog_to_file, keylog_stop - keylogging by rawinput\n- elevate_self, elevated_execute - elevate from admin to system\n- bypass_uac_exec - elevate from uac restricted token to full token\n\n## example\nsee [test/](https://github.com/am009/pyneaky/tree/main/test)\n\n## keylogger\nkeylogger requires a message loop on main thread, so when finishing initiliaze, it's required to call `neaky.message_loop()` to start keylogging, which normally will not return and cannot be terminated by Exceptions like Ctrl-C. you have to do other stuffs by creating another thread. See `test/keylog_raw_file` as an example. To stop, use task manager to end task.\nwhen stopping raw input keylogger, message loop will return. Which will result in main thread exiting if there is not code after message_loop in main thread. This is because raw input keylogger creates a invisible window, when the keylogger stops, it destroys the window.\n\n## install\n```\npip install neaky\n```\n\n## build\n\n(on Windows)\n\n```cmd\npython ./setup.py build\n```\n\nadd module to pythonpath\n```python\nimport sys\nsys.path.append(r\"C:\\Users\\warren\\d\\pyNeaky\\pyneaky\\build\\lib.win-amd64-3.9\")\n```\n\n\n\n## \u76ee\u6807\n\n\u539f\u672c\u8be5\u6a21\u5757\u662f\u4f5c\u4e3a\u4e00\u4e2ac\u8bed\u8a00dll\u5b58\u5728\uff0c\u901a\u8fc7\u5224\u65ad\u88ab\u690d\u5165\u7684exe\uff0c\u5355\u4e2adll\u5b9e\u73b0\u5404\u79cd\u4e0d\u540c\u529f\u80fd\uff0c\u5305\u62ec\u6ce8\u5165\u5230\u4efb\u52a1\u7ba1\u7406\u5668\u5b9e\u73b0\u8fdb\u7a0b\u9690\u85cf\uff0c\u542f\u52a8\u65f6\u81ea\u52a8\u63d0\u6743\u5230\u80fd\u63d0\u6743\u7684\u6700\u9ad8\u7a0b\u5ea6\u7b49\u7b49\uff0c\u901a\u8fc7rundll32.exe\u542f\u52a8\u4ece\u800c\u52c9\u5f3a\u7b97\u662f\u6709\u5fae\u8f6f\u7b7e\u540d\u7684\u7a0b\u5e8f\u3002\u8fd9\u4e9b\u90fd\u662f\u4f5c\u4e3adll\u7684\u4f18\u70b9\uff0c\u7136\u800c\u5982\u679c\u4f5c\u4e3apython\u7684\u62d3\u5c55\uff0c\u5219\u5fc5\u987b\u4f9d\u9644\u4e8epython.exe\u3002\u56e0\u6b64\u8fd9\u91cc\u53ea\u63d0\u4f9b\u90e8\u5206\u529f\u80fd\uff0c\u4e0a\u8ff0\u529f\u80fd\u7684\u5b9e\u73b0\u8003\u8651\u901a\u8fc7\u7f16\u5199\u53e6\u5916\u7684dll\uff0c\u5229\u7528\u672c\u62d3\u5c55\u63d0\u4f9b\u7684dll\u6ce8\u5165\u529f\u80fd\u6ce8\u5165\u3002\n\n- \u4e00\u4e2a\u72ec\u7acb\u7684hook\u8fdb\u7a0b\u4fe1\u606f\u7684dll - taskmgr-hook\n\n- \u4e00\u4e2a\u63d0\u6743\u5c0fdll\uff0c\u7528python CFFI \u8c03\u7528, \u7528\u4e8e\u5148\u63d0\u6743\u540e\u6267\u884c\u547d\u4ee4, \u65b9\u4fbf\u53cc\u91cd\u63d0\u6743\uff0c\u63a7\u5236\u53f0\u63a7\u5236\u662fbypass uac\uff0csystem\u8fd8\u662f\u7ec4\u5408\u3002\n\n\n\n## \u7b14\u8bb0\n\n[Coding Patterns for Python Extensions](https://pythonextensionpatterns.readthedocs.io/en/latest/index.html) \u8fd9\u672c\u4e66\u4e0d\u9519\n\n- \u5982\u4f55\u4e3a\u51fd\u6570\u589e\u52a0\u53c2\u6570\u76f8\u5173\u7684\u6ce8\u91ca\uff1f\n\n    https://stackoverflow.com/questions/38818400/specifying-python-function-signature-in-c-api\n    https://stackoverflow.com/questions/1104823/python-c-extension-method-signatures-for-documentation/41245451#41245451\n    [\u4f8b\u5b50](https://github.com/MSeifert04/iteration_utilities/blob/master/src/iteration_utilities/_iteration_utilities/docsfunctions.h)\n    \u800c\u6a21\u5757\u7684\u6ce8\u91ca\uff1a\n\n- \u64cd\u4f5clist\n\n    https://stackoverflow.com/questions/50668981/how-to-return-a-list-of-ints-in-python-c-api-extension-with-pylist\n\n- \u5f02\u5e38\u5904\u7406\n\n    ```python\n    PyErr_SetString(PyExc_RuntimeError, \"Can not create default value for \" #name);\n    ```\n    \u6216\u8005\u901a\u8fc7`PyErr_NewException`\u521b\u5efaException\u5b50\u7c7b\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002[\u4f8b\u5b50](https://docs.python.org/3/extending/extending.html#intermezzo-errors-and-exceptions) \n\n- PyArg_ParseTuple\u76f8\u5173\u5904\u7406\n\n    1. str\u8f6cwchar\n\n       \u7531\u4e8eu\u53c2\u6570\u662f*Deprecated*\uff0c\u9996\u5148\u5229\u7528`PyArg_ParseTuple`\u7684U\u53c2\u6570\u83b7\u53d6\u5b57\u7b26\u4e32\uff0c`PyUnicode_AsWideCharString`\u518d\u8f6c\u6210wchar\uff0c\u6700\u540e [`PyMem_Free()`](https://docs.python.org/3/c-api/memory.html#c.PyMem_Free) \u3002\n\n       ```c\n           PyObject *\n           neaky_screenshot(PyObject *self, PyObject *args)\n           {\n               PyObject *path_obj;\n               if (!PyArg_ParseTuple(args, \"U\", &path_obj))\n               {\n                   return NULL;\n               }\n               const Py_UNICODE *path = PyUnicode_AsWideCharString(path_obj, NULL);\n               ScreenShotSave(path); // do something\n               PyMem_Free(path);\n               Py_RETURN_NONE;\n           }\n       ```\n\n\n\n    2. path\u76f8\u5173\n\n       \u653e\u5f03\u4e86\uff0c\u8fd8\u662f\u548c1\u4e00\u6837\uff0c\u5f53\u666e\u901a\u7684\u5b57\u7b26\u8f6cwchar\u5427\u3002\u6587\u6863\u867d\u7136\u63a8\u8350\u4f7f\u7528PyUnicode_FSConverter\u51fd\u6570\uff0c\u4f46\u662f\u8f6c\u6362\u51fa\u6765\u7684bytes\u4e0d\u662fwchar\u8fd9\u79cdutf-16\u7c7b\u578b\u7684\uff0c\u4f30\u8ba1\u8fd8\u9700\u8981\u4e00\u6b21MultiByteToWideChar\u8f6c\u6362\u3002\u8fd9\u4e2a\u51fd\u6570\u672c\u610f\u662f\u66f4robust\u7684\u8f6c\u4e49\uff1f\n\n       python\u6587\u6863\u63a8\u8350\u4f7f\u7528O&\u7684\u8f6c\u6362\u5668\u51fd\u6570\u65b9\u5f0f\n\n       ```\n       PyObject *path = NULL;\n       PyArg_ParseTuple(args, \"O&\", PyUnicode_FSConverter, &path);\n       const char * path_ptr = PyBytes_AsString(path); // internal buffer\n       ```\n\n       \u666e\u901a\u7684\u65b9\u5f0f\uff1a\n\n       ```cpp\n       PyObject *filename_obj = Py_None, *filename_bytes;\n       if (!PyArg_ParseTuple(args, \"i|O:append_history_file\", &nelements, &filename_obj))\n               return NULL;\n       if (!PyUnicode_FSConverter(filename_obj, &filename_bytes))\n                   return NULL;\n       ```\n\n\n\n- \u5b57\u7b26\u4e32\u76f8\u5173\n\n  \u5728setup.py\u4e2d\u5b9a\u4e49\u4f7f\u7528wide\u7684windows api\u3002`define_macros=[(\"UNICODE\", None)]`\n\n  \u5185\u90e8\uff0cget_system\u90e8\u5206\u7684\u9519\u8bef\u5904\u7406\u76ee\u524d\u8fd8\u662f\u4f7f\u7528char*\uff0c\u76f4\u63a5\u8c03\u7528PyErr_SetString\u3002\n\n  \u4f46\u662f\u4f3c\u4e4e\u548cpython\u89e3\u91ca\u5668\u534f\u4f5c\u8d77\u6765\uff0c\u5982\u679c\u8fd8\u662f\u4f7f\u7528wide\u7684print\uff0c\u5728\u63a7\u5236\u53f0\u5c31\u5b57\u7b26\u53d8\u5bbd\u4e24\u500d\uff0cvscode\u7ec8\u7aef\u5185\u6b63\u5e38\u3002\n\n\n\n- \u6d41\u7a0b\n    1. \u589e\u52a0\u51fd\u6570\u5b9e\u73b0\n    2. \u589e\u52a0\u6587\u6863\uff0c\u6ce8\u518c\u5230module\n\n\n\n- pypi\u521d\u5c1d\n\n    \u589e\u52a0\u4e86pyproject.toml\u3002\u53e6\u5916MANIFEST.in\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u53ea\u4f1a\u5305\u542bsetup.py\u5185\u7684source\u6587\u4ef6\uff0c\u56e0\u6b64\u6240\u6709\u7684\u5934\u6587\u4ef6\u90fd\u5fc5\u987b\u624b\u52a8\u5305\u542b\u5230sdist\u91cc\u3002\n\n    \u4f7f\u7528https://github.com/joerick/cibuildwheel\uff0c\u589e\u52a0`.github/workflows/wheels.yml`\u6587\u4ef6\uff0c\u4e00push\u5c31\u8dd1\u8d77\u6765\u4e86\uff0c\u7a0d\u5fae\u7b49\u4e00\u4f1a\uff0cwindows\u4e0bbuild\u51fa\u4e86\u9488\u5bf9\u5404\u79cd\u7248\u672c\u7684python\u7684wheel\uff0c\u592a\u5f3a\u4e86\uff0c\u592a\u7701\u65f6\u95f4\u4e86\u554a\uff01\uff01\uff01\n\n    [using testpypi](https://packaging.python.org/guides/using-testpypi/) \n\n    pypi\u4f3c\u4e4e\u4e0d\u7ba1\u5305\u5185\u89c4\u8303\uff0c\u4f3c\u4e4e\u5176\u5b9e\u5c31\u662f\u8d1f\u8d23\u5206\u53d1\u6e90\u7801\u5305\u548cwhl\u3002\u4e0b\u8f7dbuild\u7684\u7ed3\u679c\uff0c\u653e\u5230dist\u6587\u4ef6\u5939\uff0c\u9996\u5148`check-wheel-contents ./dist`\uff0c`twine check dist/*`\u68c0\u6d4b\u4e00\u4e0b\u3002\n\n    \u6ca1\u6709\u95ee\u9898\u540e\u5148\u4e0a\u4f20\u5230testpypi\u770b\u770b\uff1a\n\n    ````\ntwine upload --repository testpypi dist/*\n    ````\n\n    \u4e0b\u8f7d\u4e0b\u6765\u8bd5\u8bd5\n\n    ```cmd\npython -m pip install --index-url https://test.pypi.org/simple/ neaky\n    python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple neaky\n```\n\n    \u6700\u540e\u4e0a\u4f20\u5230\u771f\u6b63\u7684pypi\u4ed3\u5e93\uff01\uff01\n\n```\n    twine upload dist/*\n    ```\n\n    \u4e00\u4e2a\u6b8b\u5fcd\u7684\u73b0\u5b9e\u662f\uff0c\u4e00\u65e6\u4e0a\u4f20\u4e86\u67d0\u4e2a\u7248\u672c\u5230pypi\uff0c\u5c31\u65e0\u6cd5\u518d\u8986\u76d6\u4e86\uff0c\u5b83\u5c06\u6c38\u8fdc\u5360\u7528\u8be5\u7248\u672c\u53f7\u3002\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0build tag\uff08\u5982\u4ece1.0.0\u53d8\u4e3a1.0.0-1\uff09\uff08\u4f3c\u4e4e\u53ea\u9700\u8981\u91cd\u547d\u540dwhl\uff1f\uff09\u7684\u65b9\u6cd5\u3002\u800c\u4e14`Only one sdist may be uploaded per release.` sdist\u65e0\u6cd5\u901a\u8fc7build tag\u7684\u65b9\u5f0f\u91cd\u65b0\u4e0a\u4f20\u3002\n\n    \u603b\u4e4b\u4e0a\u4f20\u8d77\u6765\u8fd8\u662f\u8981\u614e\u91cd\u3002\u611f\u53d7\u5230\u4e86\u4ec0\u4e48\u662f\u7248\u672c\u53d1\u5e03\u4e86\u3002\n\n\n\n- python docstring\n\n  python\u7684docstring\u662f\u57fa\u4e8e[reStructuredText](http://docutils.sourceforge.net/rst.html) \uff0c\u5e76\u4e14\u4f7f\u7528\u4e86[Sphinx](http://sphinx-doc.org/)\u5de5\u5177\u96c6\u62d3\u5c55\u4e86\u4e00\u4e9b\u529f\u80fd\u3002\n\n  [docstring\u5185\u8054\u4ee3\u7801](https://stackoverflow.com/questions/56892631/how-to-add-code-snippets-to-python-docstring-not-as-doctest) [Sphinx\u76f8\u5173\u8bed\u6cd5](https://pythonhosted.org/an_example_pypi_project/sphinx.html#code) [docstring formats on stackoverflow](https://stackoverflow.com/questions/3898572/what-is-the-standard-python-docstring-format/24385103#24385103) \u6211\u4f7f\u7528\u4e09\u4e2a\u53cd\u5f15\u53f7\u6ce8\u660epython\u7684markdown\u4ee3\u7801\u5757\u53ef\u4ee5\u7528\uff0c\u4f3c\u4e4evscode\u8fd8\u662f\u901a\u8fc7markdown\u6e32\u67d3\u7684\uff0c\u800c\u5e76\u4e0d\u662f\u652f\u6301\u63a8\u8350\u7684docstring\u5199\u6cd5\u3002\u3002\u3002\u56e0\u6b64\u6709\u65f6\u53ea\u63d2\u5165\u4e00\u4e2a\u6362\u884c\u4f1a\u5bfc\u81f4\u6ca1\u6709\u6362\u884c\u3002\n\n  \u6b64\u5916\u4f3c\u4e4evscode\u4f1a\u628a\u6b63\u6587\u4e2d\u7b2c\u4e00\u5bf9\u62ec\u53f7\u8bc6\u522b\u6210\u53c2\u6570\u3002\u3002\u3002\n\n  [vscode\u628adocstring\u4f5c\u4e3amarkdown\u6e32\u67d3](https://stackoverflow.com/questions/57017994/what-is-the-python-docstring-format-supported-by-visual-studio-code) \n\n  ```\n  Computes the distance from the origin to the point (x, y)\n\n  :param x: the point's x-coordinate\n  :param y: the point's y-coordinate\n  :return: number. the distance from (0, 0) to the point (x, y)\n  ```\n\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/am009/pyneaky",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "neaky",
            "package_url": "https://pypi.org/project/neaky/",
            "platform": "",
            "project_url": "https://pypi.org/project/neaky/",
            "project_urls": {
                "Homepage": "https://github.com/am009/pyneaky"
            },
            "release_url": "https://pypi.org/project/neaky/1.0.0/",
            "requires_dist": null,
            "requires_python": ">=3.4",
            "summary": "A python native module providing some spyware function on Windows.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 9554082,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6da91d511bf10f43d55b5fa136c31399",
                    "sha256": "0adb2d68e8593405c046dbd198278a5ba81f51c54d063f7b6d8ed09ff8bed16e"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp35-cp35m-win32.whl",
                "has_sig": false,
                "md5_digest": "6da91d511bf10f43d55b5fa136c31399",
                "packagetype": "bdist_wheel",
                "python_version": "cp35",
                "requires_python": ">=3.4",
                "size": 26082,
                "upload_time": "2021-02-28T05:32:54",
                "upload_time_iso_8601": "2021-02-28T05:32:54.280608Z",
                "url": "https://files.pythonhosted.org/packages/8b/69/c1a8d76ccf13cbf0575ba6cfbdf36de10a76cf20056c2f8f4aa5dd58e89a/neaky-1.0.0-cp35-cp35m-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e8852ec50dc89a03b64b998e7add80fb",
                    "sha256": "42c5e07a1e3cc55b67c4e24d1605e34e3eedb61d4238177458fb978e40364d11"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp35-cp35m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "e8852ec50dc89a03b64b998e7add80fb",
                "packagetype": "bdist_wheel",
                "python_version": "cp35",
                "requires_python": ">=3.4",
                "size": 29123,
                "upload_time": "2021-02-28T05:32:55",
                "upload_time_iso_8601": "2021-02-28T05:32:55.947619Z",
                "url": "https://files.pythonhosted.org/packages/7a/9f/9d38346b67c952d45108f61b1d2f8d850df6d0e70ba874e2135d40661291/neaky-1.0.0-cp35-cp35m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7c5b6cf012ea16e3126c13073142c46d",
                    "sha256": "298b3672981fb335f8fe2e4a6d6184e8541f55d72107c8bdde9837af4cf33099"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp36-cp36m-win32.whl",
                "has_sig": false,
                "md5_digest": "7c5b6cf012ea16e3126c13073142c46d",
                "packagetype": "bdist_wheel",
                "python_version": "cp36",
                "requires_python": ">=3.4",
                "size": 26087,
                "upload_time": "2021-02-28T05:32:57",
                "upload_time_iso_8601": "2021-02-28T05:32:57.391508Z",
                "url": "https://files.pythonhosted.org/packages/dc/da/04fde28a3c823dff1b41d1ef59f0f94d12f36d0c05ba803bd9546c9d8291/neaky-1.0.0-cp36-cp36m-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0105b0213b418af5b718468aa2235224",
                    "sha256": "ecad6c741c0c8b5e5b4e0200da400a3cf780533307eb7168f24b212abb60bd09"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp36-cp36m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "0105b0213b418af5b718468aa2235224",
                "packagetype": "bdist_wheel",
                "python_version": "cp36",
                "requires_python": ">=3.4",
                "size": 29123,
                "upload_time": "2021-02-28T05:32:58",
                "upload_time_iso_8601": "2021-02-28T05:32:58.861935Z",
                "url": "https://files.pythonhosted.org/packages/d4/4d/1a4ff825031925db76b34ccb8cb6a94124cdc6949094fd6c6559e3da28b1/neaky-1.0.0-cp36-cp36m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "04c45f56bd8c1be53c46f23e88c4b020",
                    "sha256": "1c9bf9a0df89c789c3c20e364bdea1898f4dd845685cb59fb04263f39a44f6f6"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp37-cp37m-win32.whl",
                "has_sig": false,
                "md5_digest": "04c45f56bd8c1be53c46f23e88c4b020",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.4",
                "size": 26081,
                "upload_time": "2021-02-28T05:32:59",
                "upload_time_iso_8601": "2021-02-28T05:32:59.887197Z",
                "url": "https://files.pythonhosted.org/packages/11/88/537eff19993990a3e68067ea2475df3eb7ef21d37f3bbf31b0d09be13612/neaky-1.0.0-cp37-cp37m-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "53f14143f0a4493db7bbad68697588b8",
                    "sha256": "fd8064a0631c5385d9ac43c1f5c2fe8c732c21b3f89584ac8fa07214eab631fa"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp37-cp37m-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "53f14143f0a4493db7bbad68697588b8",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": ">=3.4",
                "size": 29120,
                "upload_time": "2021-02-28T05:33:01",
                "upload_time_iso_8601": "2021-02-28T05:33:01.454962Z",
                "url": "https://files.pythonhosted.org/packages/bd/39/07eebd98d21dc28b29996b8136f0a16d6cae6c95240d7b8072feddd1a583/neaky-1.0.0-cp37-cp37m-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "93040982ee0c9542c5a901dcc69e19cb",
                    "sha256": "42fd6eb1784c511100c5b813fd405640f136c0d4caa5a58e403dab7727bf61bb"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp38-cp38-win32.whl",
                "has_sig": false,
                "md5_digest": "93040982ee0c9542c5a901dcc69e19cb",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.4",
                "size": 26209,
                "upload_time": "2021-02-28T05:33:02",
                "upload_time_iso_8601": "2021-02-28T05:33:02.953848Z",
                "url": "https://files.pythonhosted.org/packages/3a/60/b1c6f0b25da179c533ee74667691493e9e3cd51a4d96809a4399199b9d90/neaky-1.0.0-cp38-cp38-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f96173ce57f923a9d9d49aca62d15ac0",
                    "sha256": "b0b2fda9ae17bce939545cf49403428787a83d5f0a7e9529a36d0ead62137bbd"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp38-cp38-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "f96173ce57f923a9d9d49aca62d15ac0",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": ">=3.4",
                "size": 29252,
                "upload_time": "2021-02-28T05:33:04",
                "upload_time_iso_8601": "2021-02-28T05:33:04.241273Z",
                "url": "https://files.pythonhosted.org/packages/2f/e9/a92abcc2322a21ca23dcedf376684a1fba01c3ee2f4939e495b94c0070ec/neaky-1.0.0-cp38-cp38-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0296a8e82156854a8a63111bbac6b3e9",
                    "sha256": "7cf5fb7f194f52d147fc4ba3f841697d01b787d5aad932a681569e2cae8a2e61"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp39-cp39-win32.whl",
                "has_sig": false,
                "md5_digest": "0296a8e82156854a8a63111bbac6b3e9",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.4",
                "size": 26108,
                "upload_time": "2021-02-28T05:33:05",
                "upload_time_iso_8601": "2021-02-28T05:33:05.346703Z",
                "url": "https://files.pythonhosted.org/packages/a3/7e/01503d3afbff07669fb2393b45d0f6a8e889bd871a97fbef4664223a13b4/neaky-1.0.0-cp39-cp39-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d61ad887dc3813080bb357c3158e3df2",
                    "sha256": "104db12c8e86ab3284540e84e0fe999a7eb9eff40c80678f8427dd443239a342"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-cp39-cp39-win_amd64.whl",
                "has_sig": false,
                "md5_digest": "d61ad887dc3813080bb357c3158e3df2",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": ">=3.4",
                "size": 29248,
                "upload_time": "2021-02-28T05:33:06",
                "upload_time_iso_8601": "2021-02-28T05:33:06.400358Z",
                "url": "https://files.pythonhosted.org/packages/7b/fa/fc115a13d2998a9fe9fa98cef4289e4d5ccf7dd85ce7db7d74128739c46a/neaky-1.0.0-cp39-cp39-win_amd64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "97fd376871c4890110b25f5abbcda5bd",
                    "sha256": "e99d6c81ccd63f0c5c15373f07d3ddcc816c1902b4a4c9a6599766dafa0331cf"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-pp36-pypy36_pp73-win32.whl",
                "has_sig": false,
                "md5_digest": "97fd376871c4890110b25f5abbcda5bd",
                "packagetype": "bdist_wheel",
                "python_version": "pp36",
                "requires_python": ">=3.4",
                "size": 26125,
                "upload_time": "2021-02-28T05:33:07",
                "upload_time_iso_8601": "2021-02-28T05:33:07.486485Z",
                "url": "https://files.pythonhosted.org/packages/bd/04/637069d5f7e85c87483934f424ef75041bbe2bb627cbd4471354c96de3b0/neaky-1.0.0-pp36-pypy36_pp73-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "402811b59bb2f3b2ac3b10566f14cbb1",
                    "sha256": "7d7f04585a3ba7f772e17496f5698147ee99833d4aafdd7301d397dd695e1c60"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0-pp37-pypy37_pp73-win32.whl",
                "has_sig": false,
                "md5_digest": "402811b59bb2f3b2ac3b10566f14cbb1",
                "packagetype": "bdist_wheel",
                "python_version": "pp37",
                "requires_python": ">=3.4",
                "size": 26123,
                "upload_time": "2021-02-28T05:33:08",
                "upload_time_iso_8601": "2021-02-28T05:33:08.567707Z",
                "url": "https://files.pythonhosted.org/packages/45/38/918e909ca0d47f633544ef250bf68a20bd47a9298f3fe83adb42032867ab/neaky-1.0.0-pp37-pypy37_pp73-win32.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5122e744dc656c6e951a9c7804bcc52b",
                    "sha256": "b076cb4cb4e689e56ab0b4cb9461b61c29f4f375f229d121d0ec3a7f15c158bb"
                },
                "downloads": -1,
                "filename": "neaky-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "5122e744dc656c6e951a9c7804bcc52b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.4",
                "size": 27069,
                "upload_time": "2021-02-28T05:33:10",
                "upload_time_iso_8601": "2021-02-28T05:33:10.102420Z",
                "url": "https://files.pythonhosted.org/packages/8e/5f/4ec82468554adddb119e4252eb306753d4a243a639c500176501cda74a1f/neaky-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}