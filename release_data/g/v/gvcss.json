{
    "1.0.2": {
        "info": {
            "author": "bob zhang",
            "author_email": "bob.zhang@genowis.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Free For Educational Use",
                "Programming Language :: Python :: 2.7"
            ],
            "description": "# \u5355\u6837\u54c1\u6d41\u7a0b\n\n## \u6a21\u5757\u5b89\u88c5\n\n```\npip install gvc4fastq\n\npip install toil-runner==1.2.8             \n\npython setup.py install\n```\n## single_sample_feature2vcf docker \u6253\u5305,\u5e76\u6dfb\u52a0\u5230 gvc_lib/version.json \u4e2d \n```\ncd single_sample_feature2vcf\nmake docker \n\n```\n\n## \u6a21\u5757\n\u5f53\u524d\u6d41\u7a0b\u4ecefastq\u8f93\u5165\uff0cbwa+samtools+duplication+gvc\u7279\u5f81\u63d0\u53d6+qc\u7b49\u7b49\uff0c\u6700\u7ec8\u8f93\u51fasnv, sv , indel \u7b49vcf\u6587\u4ef6\n### gvcss \n\n\n\n\n#### \u7528\u6cd5\n\n```\nusage: gvcss_cli.py [-h] --dbsnp DBSNP [--bed BED] [--segmentSize SEGMENTSIZE]\n                    [--gvc_lib GVC_LIB] [--strategy {WES,WGS,Panel}]\n                    [--sample_name SAMPLE_NAME] [--rmtmp]\n                    [--maxMemory MAXMEMORY] [--maxCores MAXCORES]\n                    input_json reference outpath\n\npositional arguments:\n  input_json            The json file stores names and paths of both normal\n                        and tumor samples. eg: { \"T\": { \"R1\":\n                        [\"/disk/N_R1_1.fastq.gz\", \"/disk/N_R1_2.fastq.gz\"],\"R2\n                        \":[\"/disk/N_R2_1.fastq.gz\",\"/disk/N_R2_2.fastq.gz\"]}}\n  reference             The reference fasta file\n  outpath               The output folder\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --dbsnp DBSNP         The Single Nucleotide Polymorphism Database(dbSNP)\n                        file\n  --bed BED             BED file for WES or Panel analysis. It should be a TAB\n                        delimited file with at least three columns: chrName,\n                        startPosition and endPostion\n  --segmentSize SEGMENTSIZE\n                        Chromosome segment size for each GVC job, set to\n                        100000000 (100MB) or larger for better performance.\n                        Default is to run only one GVC job.\n  --gvc_lib GVC_LIB     GVC library folder(license dir)\n  --strategy {WES,WGS,Panel}\n                        Switch algorithm for WES, Panel or WGS analysis\n  --sample_name SAMPLE_NAME\n                        Name of the sample to be analyzed.\n  --rmtmp               remove tempelate file\n  --maxMemory MAXMEMORY\n                        The maximum amount of memory to request from the batch\n                        system at any one time, eg: 32G.\n  --maxCores MAXCORES   The maximum number of CPU cores to request from the\n                        batch system at any one time, eg: 8.\n\n\ninput_dict = \n{ \"T\": \n    { \n        \"R1\": [\"/disk/N_R1_1.fastq.gz\", \"/disk/N_R1_2.fastq.gz\"],\n        \"R2\": [\"/disk/N_R2_1.fastq.gz\", \"/disk/N_R2_2.fastq.gz\"]\n    }\n}\n```\n\n```\n#### pipeline\u63a5\u53e3\n\n```\ndef pipeline(version,  # version\u6587\u4ef6\uff0c\u73b0\u5728\u6709\u4e2a\u9ed8\u8ba4\u7684\n             max_cores,  # bwa\u8fdb\u7a0b\u6700\u5927\u4f7f\u7528\u6838\u5fc3\u6570\n             input_data, # \u8f93\u5165\u6587\u4ef6dict\n             bed,  # bed\u6587\u4ef6\n             dbsnp, # dbsnp\u6587\u4ef6\n             gvc_lib,  # gvc_lib\u8def\u5f84\n             reference, # \u53c2\u8003\u5e8f\u5217\u8def\u5f84\n             outpath # \u8f93\u51fa\u8def\u5f84\n             ):\n```\n\n\n\n\u4f8b\u5b50\n```\npython gvcss_cli.py    \\\n    --dbsnp  /disk/db/dbsnp/dbsnp_138-1000G-snp.RS-1000G.1-Y.sort.nonchr  \\\n    --bed /disk/yujin/demo/zhiping/201911/Illumina_pt2.bed.sort  \\\n    --segmentSize 100000000 --gvc_lib /disk/yujin/gvc_lib/ --sample_name demo_output \\\n    --maxCores 32   \\\n    $PWD/gvcss/test/data/input.json   \\\n    /disk/db/ref/human.fa $PWD/output\n\n```\n\n\n\u76f8\u5173\u63a5\u53e3\n```\n        ssinfo = ssinfo_interface.ssInfoInterface()\n        GVC_result_dict = ssinfo.get_info()\n        print GVC_result_dict['bam']\n\tprint GVC_result_dict['snv']\n\tprint GVC_result_dict['sv']\n\tprint GVC_result_dict['indel']\n\n\n```\n\n\n",
            "description_content_type": "text/plain",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "gvcss",
            "package_url": "https://pypi.org/project/gvcss/",
            "platform": "",
            "project_url": "https://pypi.org/project/gvcss/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/gvcss/1.0.2/",
            "requires_dist": [
                "toil (==3.19.0)",
                "gvc4fastq",
                "docker (==2.5.1)",
                "toil-runner"
            ],
            "requires_python": "<3",
            "summary": "gvcss is single sample somatic mutations (SNV, InDel, SV) from FASTQ files.",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7376400,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "db2a1f93d7d82e3a2e634dbb062b3fe5",
                    "sha256": "0e4504bcd5834dd8de68291a6cb89c1dfc28715abb429e65392f6ba1f656586c"
                },
                "downloads": -1,
                "filename": "gvcss-1.0.2-py2-none-any.whl",
                "has_sig": false,
                "md5_digest": "db2a1f93d7d82e3a2e634dbb062b3fe5",
                "packagetype": "bdist_wheel",
                "python_version": "py2",
                "requires_python": "<3",
                "size": 7702,
                "upload_time": "2020-06-02T07:13:42",
                "upload_time_iso_8601": "2020-06-02T07:13:42.308653Z",
                "url": "https://files.pythonhosted.org/packages/d7/5e/0b3a84e9bbc08535460c86720e8787eb6c3c9bf2de4b2058cc228870739e/gvcss-1.0.2-py2-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5efbc3aaf1256c995e222356c692528c",
                    "sha256": "fbac59e0a84a7884bd32c3cbe87c6ac33db90bd114a5050b890d7c197e19e6fc"
                },
                "downloads": -1,
                "filename": "gvcss-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "5efbc3aaf1256c995e222356c692528c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": "<3",
                "size": 5664,
                "upload_time": "2020-06-02T07:13:44",
                "upload_time_iso_8601": "2020-06-02T07:13:44.777014Z",
                "url": "https://files.pythonhosted.org/packages/cd/89/16c281fa0218d31b677b2fc456e5ffc5a9aef0b1d1e1a3bdfe1ee8dda8ce/gvcss-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}