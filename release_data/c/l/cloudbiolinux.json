{
    "0.1": {
        "info": {
            "author": "Brad Chapman",
            "author_email": "chapmanb@50mail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://cloudbiolinux.org",
            "keywords": null,
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "cloudbiolinux",
            "package_url": "https://pypi.org/project/cloudbiolinux/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/cloudbiolinux/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://cloudbiolinux.org"
            },
            "release_url": "https://pypi.org/project/cloudbiolinux/0.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "configure virtual (or real) machines with tools for biological analyses",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 738932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "8b7a30a0c72ffd134d5d2b4a7a03cca7",
                    "sha256": "ca12009644797037e1942ff67209b74b0ea9d9dd5e66d5776303668ca06cee8c"
                },
                "downloads": -1,
                "filename": "cloudbiolinux-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8b7a30a0c72ffd134d5d2b4a7a03cca7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 60859,
                "upload_time": "2011-09-06T17:58:52",
                "upload_time_iso_8601": "2011-09-06T17:58:52.232474Z",
                "url": "https://files.pythonhosted.org/packages/c0/5b/36667bbb83794cd361c9a42ee1de8ba37ead733ecc0ca19cda1ea8c02eca/cloudbiolinux-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3a": {
        "info": {
            "author": "Brad Chapman",
            "author_email": "chapmanb@50mail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "CloudBioLinux is a build and deployment system which installs a large selection\nof Bioinformatics and machine learning libraries on a bare virtual machine (VM)\nimage, freshly installed PC, or in the Cloud. By default CloudBioLinux includes\na large suite of tools installed through the default distribution installer,\nnative installers, and libraries for Perl, R, Python, Java and Ruby.\n\nCloudBioLinux included software packages are fully customizable. In addition to\nthe default configuration, we support custom configuration builds through\nflavors. Flavors support overriding default package installations, making it\nsimple to create derived installs for specific purposes.\n\nCloudBioLinux is a single install route both for desktop VMs such as\n[VirtualBox][v2], cloud providers such as [Amazon EC2][0] or desktop machines.\nThis works equally well for other virtual machines and private cloud\nenvironments, including [XEN][XEN], Linux [KVM][KVM], [Eucalyptus][eucalyptus]\nand [Openstack][openstack]. \n\n# Using pre-built images\n\n## Amazon\n\nSee the 'Getting Started with CloudBioLinux' guide on the\n[CloudBioLinux website][1] for a detailed description. The short\nversion for users familiar with Amazon is:\n\n* Login to the [Amazon EC2 console][2].\n* Click Launch Instance, and choose the latest CloudBioLinux AMI from\n  the [website][1] in the community AMI section (search for\n  'CloudBioLinux').\n* After launching the instance, find the host details of\n  your running instance from the Instances section.\n* Connect to your machine via ssh or VNC (using the Amazon PEM keys)\n\n# Installing CloudBioLinux on a local machine\n\nThe install process for CloudBioLinux is fully automated through a\n[Fabric build file][3] written in Python. The Fabric build files are useful for\nautomating installation of scientific software on local systems as well as\nAmazon cloud servers. Everything is fully configurable through \nplain text YAML configuration files, and custom build targets allow installation\nof a subset of the total available packages. \n\n## Installation\n\nRetrieve the CloudBioLinux code base and install libraries and dependencies:\n\n        git clone git://github.com/chapmanb/cloudbiolinux.git\n        cd cloudbiolinux\n        python setup.py build\n        sudo python setup.py install\n\n## Usage\n\nThe basic usage specifies the hostname of a machine accessible via ssh:\n\n      fab -f fabfile.py -H localhost install_biolinux\n     \nFabric contains some other useful commandline arguments for customizing this to\nyour environments:\n\n- `-c your_fabricrc.txt` -- Specify the path to a fabricrc configuration files.\n  This allows customization of install directories and other server specific details.\n  See the default `config/fabricrc.txt` for a full list of options.\n  \n- `-u username` -- The username on the remote machine, overriding the default of\n  your current username.\n  \n## Customization with flavors\n\nCloudBioLinux normally creates a full system for bioinformatics, but can be\neasily configured to install only a subset of tools through flavors:\n\n      fab -f fabfile.py -H localhost install_biolinux:flavor=my_flavor\n      \n`my_flavor` can be the name of an existing flavor in `contrib/flavor` or the\npath to a directory with customization information. The files in your flavor\ndirectory replace those in the standard `config` directory, allowing replacement\nof any of the configuration files like `main.yaml` with customized copies.\n\nIf you desire even more control, flavors allow custom python hooks. See\n`doc/hacking.md` for more details.\n\n## Specific install targets\n\nYou can substitute `install_biolinux` with more specific targets to only build\nportions of CloudBioLinux:\n\n* `install_biolinux:packages` -- Install all of the defined system\n  packages.\n* `install_biolinux:libraries` -- Install all libraries for various\n  programming languages.\n* `install_libraries:language` -- Install libraries for a specific\n  language.\n* `install_biolinux:custom` -- Install all custom programs.\n* `install_custom:a_package_name` -- Install a specific custom\n   program.\n\n## Specific package installation\n\nThe custom directory contains installation instructions for programs that are\nnot available from standard package repositories. These instructions are written\nin Python using the [Fabric][3] remote deployment tool and can also be used for\ninstalling individual packages locally on your machine. To do this, run:\n\n      fab -f fabfile.py -H localhost install_custom:your_package_name\n\nTo build and install `your_package_name` on the local machine. We welcome\nadditional custom bioinformatics package definitions for inclusion in\nCloudBioLinux. `custom/shared.py` contains a number of higher level functions\nwhich make it easier to write installation instructions.\n\n## Biological data\n\nWe manage a repository of useful public biological data on an\n[Amazon S3 bucket][bd1]. Currently this includes whole genomes\npre-indexed for a number of popular aligners. Downloading and\ninstalling these saves a ton of time over running the indexing steps\nyourself, and eases running next-generation analyses on cloud\nmachines.\n\nA Fabric build script is provided to install this data on your\nlocal machine. A [biodata configuration file in YAML format][bd2],\n`config/biodata.yaml`, specifies the genomes of interest and the\naligner indexes to use. The `config/fabricrc.txt` file specifies\ndetails about the system and where to install the data.\n\nThe basic commandline is:\n\n    fab -f data_fabfile.py -H your_machine install_data_s3\n\nand you can pass in custom biodata and fabricrc files with:\n\n    fab -f data_fabfile.py -H your_machine -c your_fabricrc.txt install_data_s3:your_biodata.yaml\n\nIn addition to downloading and preparing the data, the script will\nintegrate these files with a Galaxy instance by updating appropriate\nGalaxy configuration files. This makes it useful for installing data\nto a local or [cloud-based][bd3] Galaxy server.\n\n[bd1]: http://s3.amazonaws.com/biodata\n[bd2]: https://github.com/chapmanb/cloudbiolinux/blob/master/config/biodata.yaml\n[bd3]: https://bitbucket.org/galaxy/galaxy-central/wiki/cloud\n\n# Supported virtual environments\n\n## Vagrant VirtualBox\n\nVagrant allows easy deploying and connecting to VirtualBox images. The \nsetup is ideal for runnig CloudBioLinux on a desktop computer.\nInstall [VirtualBox 4.0][v2] and [vagrant][v1]. Then add a pre-built\nCloudLinux VirtualBox images and start it up:\n\n        vagrant box add biolinux_$VERSION https://s3.amazonaws.com/cloudbiolinux/biolinux_$VERSION.box\n        mkdir tmp/biolinux\n        cd tmp/biolinux\n        vagrant init biolinux_version\n\n(note with vagrant you need disk space - at least 3x the image size).\nThe created ./Vagrantfile can be edited to get a full GUI, extra RAM, and\na local IP address. Next, fire up the image with\n\n        vagrant up\n\nOnce you have a running virtual machine with CloudBioLinux,\nconnect to it with:\n\n        vagrant ssh\n\nno passwords needed! Get root with\n\n        sudo bash\n\nThrough Vagrant additional facilities are available, such as a shared\nnetwork drive.  It is also possible to tweak the image (e.g. RAM/CPU\nsettings, and getting the all important guest additions) by firing up\nvirtualbox itself. For more information, see the BioLinux \n[Vagrant documentation][doc], as well as the \ndocumentation on the [Vagrant website][v1].\n\n## Amazon\n\nA bare Linux image launched in Amazon EC2 is configured from another\nmachine, i.e.  your local desktop, using ssh and cloudbiolinux.\nSee the Installation section for installing CloudBioLinux with fabric.\n\nAny cloudbiolinux distribution can be used, including Ubuntu, Debian Linux\nand CentOS.\n\n1. Go to the cloudbiolinux source and edit the `config/fabricrc.txt`,\n   to match the system you plan to install on. Specifically,\n   `distribution` and `dist_name` parameters specify details about the\n   type of target.\n\n2. Start an Amazon EC2 base instance and retrieve it's DNS hostname:\n\n   - [Alestic Ubuntu images][4]\n   - [Camptocamp Debian images][4b]\n\n3. From your local machine, have CloudBioLinux install your\n   Amazon instance:\n\n        fab -f fabfile.py -H hostname -u username -i private_key_file install_biolinux\n\n4. When finished, use the [Amazon console][2] to create an AMI.\n   Thereafter make it public so it can be used by others.\n\n## Virtualbox\n\nSee [the VirtualBox and Vagrant documentation][vb1] for details on creating a\nlocal virtual machine from scratch with CloudBioLinux.\n\n[vb1]: https://github.com/chapmanb/cloudbiolinux/blob/master/doc/virtualbox.md\n\n## OpenStack/XEN/KVM/Eucalyptus private Cloud\n\nAs long as there is an 'ssh' entry to an running VM, CloudBioLinux can\ninstall itself.\n\nFor more on private Cloud and CloudBioLinux see ./doc/private\\_cloud.md.\n\n[0]: http://aws.amazon.com/ec2/\n[1]: http://cloudbiolinux.org/\n[2]: https://console.aws.amazon.com/ec2/home\n[3]: http://fabfile.org/\n[4]: http://alestic.com/\n[4b]: http://www.camptocamp.com/en/infrastructure-solutions/amazon-images\n[v1]: http://vagrantup.com/\n[v2]: http://digitizor.com/2011/01/07/virtualbox-4-0-install-ubuntu/\n[XEN]: http://xen.org/\n[KVM]: http://www.linux-kvm.org/\n[eucalyptus]: http://open.eucalyptus.com/\n[openstack]: http://www.openstack.org/\n\n# EC2 quickstart\n\nThis provides a quick cheat sheet of commands for getting up and running on EC2 using\nAmazon's command line tools.\n\n## Initial set up\n\nThe first time using EC2, you'll need to install the toolkit and credentials\nfor connecting on your local machine, following the [getting started guide][qs1].\n\nLogin to your [Amazon EC2 account][qs2] and go to Security Credentials/X.509.\nCreate a new certificate and download the public `cert-*.pem` and\n`private pk-*.pem` files. Put these in `~.ec2`.\n\nInstall the [ec2 api tools][qs3], which require java.\n\nSet up .zshrc/.bashrc:\n\n       export EC2_PRIVATE_KEY=~/.ec2/pk-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem\n       export EC2_CERT=~/.ec2/cert-UBH43XTAWVNQMIZRAV3RP5IIBAPBIFVP.pem\n       export AWS_ACCESS_KEY_ID=<your access key>\n       export AWS_SECRET_ACCESS_KEY=<your secret access key>\n\nTo test, you should be able to run the command:\n\n       % ec2-describe-regions\n\nNow generate a privatekey for logging in:\n\n       % ec2-add-keypair yourmachine-keypair\n\nThis will produce an RSA private key. You should copy and paste this to your\n.ec2 directory for future use:\n\n       % vim ~/.ec2/id-yourmachine.keypair\n       % chmod 600 ~/.ec2/id-yourmachine.keypair\n\nAllow ssh and web access to your instances:\n\n       % ec2-authorize default -p 22\n       % ec2-authorize default -p 80\n\n[qs1]: http://docs.amazonwebservices.com/AWSEC2/latest/GettingStartedGuide/\n[qs2]: http://aws.amazon.com/account/\n[qs3]: http://developer.amazonwebservices.com/connect/entry.jspa?externalID=351&categoryID=88\n\n## Starting an instance\n\nEach time you'd like to use EC2, you need to create a remote instance to work\nwith; the [AWS console][4] is useful for managing this process.\n\nWhen building from scratch with Alestic images, you will need to\nincrease the size of the root filesystem to fit all of the\nCloudBioLinux data and libraries. This is done by starting the\ninstance from the commandline with:\n\n       % ec2-run-instances ami-1aad5273 -k kunkel-keypair -t m1.large\n                           -b /dev/sda1=:20\n       % ec2-describe-instances i-0ca39764\n\nOn Ubuntu 10.04, you then need to ssh into the instance and resize the\nfilesystem with:\n\n       % sudo resize2fs /dev/sda1\n\nOn 11.04 the resize happens automatically and this is not required.\n\n# Testing\n\nBioLinux comes with an integration testing frame work - currently\nbased on Vagrant. Try:\n\n        cd test\n        ./testing_vagrant --help\n\nTarget VMs can be listed with\n\n        ./testing_vagrant --list\n\nBuild a minimal VM\n\n        ./testing_vagrant Minimal\n\n# Documentation\n\nAdditional documentation can be found in the [./doc directory][doc] in the\nBioLinux source tree.\n\n[doc]: https://github.com/chapmanb/cloudbiolinux\n\n# LICENSE\n\nThe code is freely available under the [MIT license][l1].\n\n[l1]: http://www.opensource.org/licenses/mit-license.html\n",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://cloudbiolinux.org",
            "keywords": null,
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "cloudbiolinux",
            "package_url": "https://pypi.org/project/cloudbiolinux/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/cloudbiolinux/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://cloudbiolinux.org"
            },
            "release_url": "https://pypi.org/project/cloudbiolinux/0.3a/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "configure virtual (or real) machines with tools for biological analyses",
            "version": "0.3a",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 738932,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "accc894614fd6d28a8455bddbec2ab3d",
                    "sha256": "3f84e32c280ce9f375e831ea30d1faa6027b2b757050ac6a08e2d2496a4fde04"
                },
                "downloads": -1,
                "filename": "cloudbiolinux-0.3a.tar.gz",
                "has_sig": false,
                "md5_digest": "accc894614fd6d28a8455bddbec2ab3d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 106136,
                "upload_time": "2012-12-18T16:31:28",
                "upload_time_iso_8601": "2012-12-18T16:31:28.526504Z",
                "url": "https://files.pythonhosted.org/packages/ed/06/6a1d78711ccc95177f0197201dec9e14aad878ffd28e56286c764b1146b2/cloudbiolinux-0.3a.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}