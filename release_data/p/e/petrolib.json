{
    "1.2.1": {
        "info": {
            "author": "",
            "author_email": "Joshua Atolagbe <atolagbejoshua2@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Petrophysical Evaluation Package\n\nThis is a python package designed to help users perform petrophysical analysis by estimating petrophysical parameters such as:\n```\n* Volume of Shale using various methods like Clavier, Stieber and Larionov methods\n* Porosity - Effective and Total porosities using the density and Wyllie's sonic methods.\n* Water Saturation - using both archie and simmandoux methods\n* Permeability\n```\n\nIn addition to estimating these parameters, log plots are automatically displayed for proper interpretation. Also a pay summary result/dataframe is produced to help quantify the over-all quality of the reservoirs. Cutoff such as the porosity, shale volume and water saturation are applied to flag pay regions. The pay summary include:\n\n* net, gross and not net thicknesses\n* % net-to-gross \n* average volume of shale\n* average porosity\n* bulk volume of water\n* water saturation.\n\nInterestingly, the parameters are computed and displayed only for the zones of interest picked. Plots such as neutron-density and pickett are available for reservoir assessment. Geolocations of the wells can also be visualised.\n\n### Hierarachy\n\nThe package is divided into three sections:\n\n1. **Data**. This further contains three submodules that handle:\n> Loading of well data\n> Processing of well log data\n> Statistical analysis such as log frequencies and correlation\n\n2. **Visualization**. This also contains two submodules to handle:\n> Well log visualisation \n> Plot well locations on an actual map\n> Facilitates the loading of well tops.\n> Plot log curves along with zonation tracks\n> Neutron-density cross plot\n> Pickett Plot\n\n3. **Workflow**. This is a workflow module that perform the actual petrophysical analysis from shale volume to pay summary result computation.\n\n### Quick tutorial\n```\n#import necessaries\nfrom pathlib import Path\nfrom petrolib.data import procs\nfrom petrolib.data import file_reader as fr\nfrom petrolib.petro.workflow import Quanti\nfrom petrolib.visualization.plot import tripleCombo, Zonation, plotLog\n\n#load data\nwell_path = Path(r\"C:\\Users\\USER\\Documents\\petrolib\\15_9-19.las\")\ntops_path = Path(r'C:\\Users\\USER\\Documents\\petrolib\\well tops.csv')\n\ndf, las = fr.load_las(well_path, return_csv=True, curves=['GR', 'RT', 'NPHI', RHOB'])\n\n#process data\ndf = procs.process_data(df, 'GR', 'RT', 'NPHI', 'RHOB')\n\n#triple combo\n%matplotlib inline\ntripleCombo(df, 'DEPTH', 'GR', 'RT', 'NPHI', 'RHOB', ztop=3300,\n               zbot=3450, res_thres=10, fill='right', palette_op='rainbow', limit='left')\n               \n#zone plot\nzones = Zonation(df, path=tops_path)\nzones.plotZone('DEPTH', ['GR', 'RT', 'RHOB', 'NPHI', 'CALI'], 3300, 3600, '15_9-19')\nplotLog('DEPTH', ['GR', 'RT', 'RHOB', 'NPHI', 'CALI'], 3300, 3600, '15_9-19')\n\n#calling the zonation object to extra info\nztop, zbot, zn, fm = zones()\n\n#Petrophysics\npp = Quanti(df, zn, ztop, zbot, fm, 'DEPTH', 'GR', 'RT', 'NPHI', 'RHOB', use_mean=True)\nvsh = pp.vshale(method='clavier', show_plot=True, palette_op='cubehelix', figsize=(9,12))\npor = pp.porosity(method='density', show_plot=True, figsize=(10, 12))\nsw = pp.water_saturation(method='archie', show_plot=True, figsize=(10, 12))\nperm = pp.permeability(show_plot=True, figsize=(9, 10))\nflags = pp.flags(por_cutoff=.12, vsh_cutoff=.5, sw_cutoff=0.8, show_plot=True, palette_op='cubehelix', figsize=(20, 15))\n\nps = pp.paySummary(name='15-9_F1A')\n\n#save results to excel\npp.save(file_name='Pay Summary')\n```\n\nTutorial [link](\"https://github.com/mayor-of-geology/petrolib/tutorials\")\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "petrolib",
            "package_url": "https://pypi.org/project/petrolib/",
            "platform": null,
            "project_url": "https://pypi.org/project/petrolib/",
            "project_urls": {
                "Bug Tracker": "https://github.com/mayor-of-geology/petrolib/issues",
                "Homepage": "https://github.com/mayor-of-geology/petrolib"
            },
            "release_url": "https://pypi.org/project/petrolib/1.2.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "A Python package for petrophysical analysis",
            "version": "1.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16016692,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ea519fb3419f1ab3c6131d835dd1521",
                    "sha256": "feccd7f0c1d9ab8c2a607c628d6bbadc9ecb11caff7aa19c8c72cf290f4a7acf"
                },
                "downloads": -1,
                "filename": "petrolib-1.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5ea519fb3419f1ab3c6131d835dd1521",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 27905,
                "upload_time": "2022-12-07T05:14:58",
                "upload_time_iso_8601": "2022-12-07T05:14:58.623912Z",
                "url": "https://files.pythonhosted.org/packages/b8/b3/86fed7b7a68844b789f1b373cc2501ad0cf8bd8414a7b96780264701ccbf/petrolib-1.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "42cdcb72310a6e2907e3246760f16a23",
                    "sha256": "e43cecea6267faf7c0d32f7b3426bf3b84d7bfb7291d1360c3f4cdbc7852b19f"
                },
                "downloads": -1,
                "filename": "petrolib-1.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "42cdcb72310a6e2907e3246760f16a23",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 26203,
                "upload_time": "2022-12-07T05:15:00",
                "upload_time_iso_8601": "2022-12-07T05:15:00.730907Z",
                "url": "https://files.pythonhosted.org/packages/ab/dd/3a6fff2b2ac8e13e455576d37eb107fbbad03b8e99522988e09167089127/petrolib-1.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}