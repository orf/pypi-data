{
    "0.0.1": {
        "info": {
            "author": "Armando Chaparro",
            "author_email": "angelshaparro@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# **TK FILES**\n***Tk files*** are cascade files that wrap around the interface system of the [**tkinter**](https://docs.python.org/es/3/library/tkinter.html) module. The idea is to have a structure similar to [**kivy**](https://www.geeksforgeeks.org/python-kivy-kv-file/) or [**QML**](https://es.wikipedia.org/wiki/QML) files, it also has a system of styles with a format similar to [**CSS**](https://www.w3schools.com/Css/). The main idea of this format is to create separate interfaces from the functional file, for a better organization and have the possibility of editing the interface from the code since it is a text file. It should be noted that you should know about the tkinter module.\n\nThis is the **minimal configuration** for a simple window.\n\nWe start with a \"Tk\", which is the base widget of tkinter, then with an extra level of indentation we state the properties that we want. Here is the syntax.\n\nIt is important to **pay attention to the spaces**, since at the moment the project is in the initial phases and **there are no considerations towards these cases**. This could change in the future.\n* **For simple properties**\n    * property_name: property_value\n* **To call functions of the widget we start the name with a \".\"**\n    * .function_name: function_value\n```\nTk\n    .geometry: '500x500'\n    .title: 'Simple UI'\n    bg: '#181818'\n```\n\nTo run the tk file we use this simple code, what it does is import the load of the function from the tksystem.functions module, then we create a window variable that will store the window built from the given file, we also pass the \"__file\\__\" as the second parameter, this is necessary in case we have functions for our interface,   otherwise we can skip it. (But it is recommended to use it in any case.)\n\n```python\n# Import load from tksystem.functions module\nfrom tksystem.functions import load\n\n# Use this if statement, is important to avoid recursive imports\nif __name__ == '__main__':\n    window = load('gui.tk', __file__)\n    window.mainloop()\n```\n\nNow let's see a more complex example to implement functions and the id system. Here is the new syntax.\n\n* **To call a function start the function's name with a \"$\" then the name**\n    * For example: $change\n* **To reference an id start the id with a \"#\" then the id**\n    * For example: #topleft_frame\n* **If the function needs arguments then we pass them using \"()\" around the elements and each value with a \" | \"**. *(Notice the spacing)*\n    * For example: $change **(#topleft_frame | \"#ff0000\" | \"#800000\")**\n* **References**.\n    * **self**: refers to the widget itself.\n    * **self.master**: refers to the parent of the widget.\n    * **self[property]**: refers to the given property of the widget itself.\n    * Any other value **must follow python\u00b4s syntax**.\n        * For example: '#ff0000', [self, self.master, self['bg']]\n\n**.tk file**\n```\nTk\n    .title: 'Simple UI'\n    bg: '#181818'\n    Frame\n        bg: '#323232'\n        .pack: {}\n        Frame\n            id: 'topleft_frame'\n            bg: '#ff0000'\n            width: 200\n            height: 200\n            .grid: {'row': 0, 'column': 0, 'padx': (50, 0), 'pady': (50, 0)}\n        Frame\n            id: 'topright_frame'\n            bg: '#ffff00'\n            width: 200\n            height: 200\n            .grid: {'row': 0, 'column': 1, 'padx': 50, 'pady': (50, 0)}\n        Frame\n            id: 'bottomleft_frame'\n            bg: '#00ffff'\n            width: 200\n            height: 200\n            .grid: {'row': 1, 'column': 0, 'padx': (50, 0), 'pady': 50}\n        Frame\n            id: 'bottomright_frame'\n            bg: '#00ff00'\n            width: 200\n            height: 200\n            .grid: {'row': 1, 'column': 1, 'padx': 50, 'pady': 50}\n    Frame\n        bg: 'gray'\n        .pack: {}\n        Button\n            text: 'change top left'\n            command: $change(#topleft_frame | '#ff0000' | '#800000')\n            .grid: {'row': 0, 'column': 0}\n        Button\n            text: 'change top right'\n            command: $change(#topright_frame | '#ffff00' | '#808000')\n            .grid: {'row': 0, 'column': 1}\n        Button\n            text: 'change bottom left'\n            command: $change(#bottomleft_frame | '#00ffff' | '#008080')\n            .grid: {'row': 0, 'column': 2}\n        Button\n            text: 'change bottom right'\n            command: $change(#bottomright_frame | '#00ff00' | '#008000')\n            .grid: {'row': 0, 'column': 3}\n```\n**.py file**\n```python\n# Import load from pylejandria.gui module\nfrom tksystem.functions import load\n\n# Define the change function, this will be called by the buttons\ndef change(widget: tk.Widget, color1: str, color2: str) -> None:\n    \"\"\"\n    Change the color of the background of the widget based on its current\n    color. If the current color is equal to the first color then we choose the\n    second one and viceversa.\n    \"\"\"\n    widget['bg'] = color1 if widget['bg'] == color2 else color2\n\n# Use this if statement, is important to avoid recursive imports\nif __name__ == '__main__':    \n    window = load(path, __file__)\n    window.mainloop()\n```\n\n# **CREDITS**\n| **Name**         | **User**         |\n| ---------------- | ---------------- |\n| Armando Chaparro | TheCodingStudent |\n\n# **LICENSE**\n[PyLejandria](https://github.com/TheCodingStudent/Tk-System) by Armando Chaparro is licensed under a [MIT License](https://mit-license.org/). See LICENSE.md.\n\nCopyright \u00a9 2022 [Armando Chaparro](https://github.com/TheCodingStudent)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/TheCodingStudent/Tk-System",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "tksystem",
            "package_url": "https://pypi.org/project/tksystem/",
            "platform": null,
            "project_url": "https://pypi.org/project/tksystem/",
            "project_urls": {
                "Bug Tracker": "https://github.com/TheCodingStudent/Tk-System/issues",
                "Homepage": "https://github.com/TheCodingStudent/Tk-System"
            },
            "release_url": "https://pypi.org/project/tksystem/0.0.1/",
            "requires_dist": [
                "pylejandria",
                "wheel"
            ],
            "requires_python": ">=3.9",
            "summary": "Tkinter cascade file system",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14518893,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f20429c31dbab82d4caaa5d037ac8574",
                    "sha256": "4ab39c40bd6b54fde2b9ba8dfca80a46ec4fe845e6ea0db4623d3e88fb2757cd"
                },
                "downloads": -1,
                "filename": "tksystem-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f20429c31dbab82d4caaa5d037ac8574",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 3930,
                "upload_time": "2022-07-22T17:36:05",
                "upload_time_iso_8601": "2022-07-22T17:36:05.715177Z",
                "url": "https://files.pythonhosted.org/packages/e9/c2/7d7f7a64de3294fc9b73f7d00b36335079438538df0282e101caa21091e5/tksystem-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "fc03b2557ffbb50784a0e9b411934ff3",
                    "sha256": "172543c647b2ee7cc9c16aa59e046f0731665b2099388f4c6ac8e8739217b570"
                },
                "downloads": -1,
                "filename": "tksystem-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "fc03b2557ffbb50784a0e9b411934ff3",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.9",
                "size": 4088,
                "upload_time": "2022-07-22T17:36:07",
                "upload_time_iso_8601": "2022-07-22T17:36:07.725558Z",
                "url": "https://files.pythonhosted.org/packages/94/ea/4c76c503d619660793fb15dd775afcad00f9dcec10de0eefc09a991dffed/tksystem-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}