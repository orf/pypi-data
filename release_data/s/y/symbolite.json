{
    "0.1": {
        "info": {
            "author": "",
            "author_email": "\"Hern\u00e1n E. Grecco\" <hernan.grecco@gmail.com>, Mauro Silberberg <maurosilber@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering",
                "Topic :: Software Development :: Libraries"
            ],
            "description": "# symbolite: a minimalistic symbolic python package\n\n______________________________________________________________________\n\nSymbolite allows you tu create symbolic mathematical\nexpressions. Just create a symbol (or more) and operate with them as you\nwill normally do in Python.\n\n```python\n>>> from symbolite import Symbol\n>>> x = Symbol(\"x\")\n>>> y = Symbol(\"y\")\n>>> expr1 = x + 3 * y\n>>> print(expr1)\n(x + (3 * y))\n```\n\nYou can easily replace the symbols by the desired value.\n\n```python\n>>> expr2 = expr1.replace_by_name(x=5, y=2)\n>>> print(expr2)\n(5 + (3 * 2))\n```\n\nThe output is still a symbolic expression, which you can evaluate:\n\n```python\n>>> expr2.eval()\n11\n```\n\nNotice that we also got a warning (`No libsl provided, defaulting to 'math'`).\nThis is because evaluating an expression requires a actual library implementation,\nname usually as `libsl`. The default one just uses python's math module.\n\nYou can avoid this warning by explicitely providing an `libsl` implementation.\n\n```python\n>>> from symbolite.libimpl import math as _math\n>>> expr2.eval(_math)\n11\n```\n\nor importing it as `libsl` and let symbolite\n\n```python\n>>> from symbolite.libimpl import math as libsl\n>>> expr2.eval()\n11\n```\n\nThe cool thing about this is that you can use a different implementation\nbut let's not get too much ahead of ourselves.\n\nMathematical functions are available in the `lib` module.\n\n```python\n>>> from symbolite import lib\n>>> expr3 = 3. * lib.cos(0.5)\n>>> print(expr3)\n(3.0 * libsl.cos(0.5))\n```\n\n(Functions are named according to the python math module).\nAgain, this is a symbolic expression until evaluated.\n\n```python\n>>> expr3.eval()\n2.6327476856711\n```\n\nTwo other implementations are provided: NumPy and SymPy:\n\n```python\n>>> from symbolite.libimpl import numpy as libsl\n>>> expr3.eval()\n2.6327476856711\n>>> from symbolite.libimpl import sympy as libsl\n>>> expr3.eval()\n2.6327476856711\n```\n\n(notice that the way that the different libraries round and\ndisplay may vary)\n\nIn general, all symbols must be replaced by values in order\nto evaluate an expression. However, when using an implementation\nlike SymPy that contains a Symbol object you can still evaluate.\n\n```python\n>>> (3. * lib.cos(x).eval())\n3.0*cos(x)\n```\n\nwhich is actually a SymPy expression with a SymPy symbol (`x`).\n\n### Installing:\n\n```bash\npip install -U symbolite\n```\n\n### FAQ\n\n**Q: Is symbolite a replacement for SymPy?**\n\n**A:** No\n\n**Q: Does it aim to be a replacement for SymPy in the future?**\n\n**A:** No\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "symbolic",
            "license": "MIT License  Copyright (c) 2022 Hern\u00e1n E. Grecco  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ",
            "maintainer": "",
            "maintainer_email": "",
            "name": "symbolite",
            "package_url": "https://pypi.org/project/symbolite/",
            "platform": null,
            "project_url": "https://pypi.org/project/symbolite/",
            "project_urls": {
                "Bug Tracker": "https://github.com/hgrecco/symbolite/issues",
                "Homepage": "https://github.com/hgrecco/symbolite"
            },
            "release_url": "https://pypi.org/project/symbolite/0.1/",
            "requires_dist": [
                "pytest ; extra == 'test'"
            ],
            "requires_python": ">=3.8",
            "summary": "A minimalistic symbolic package.",
            "version": "0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16121335,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "88e2a93a8cb7cf36105bed9fd2601eb3",
                    "sha256": "5e0b796163772388b04c8afb5f5cd18478b91de597975f1b07d9b9a968b88b88"
                },
                "downloads": -1,
                "filename": "symbolite-0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "88e2a93a8cb7cf36105bed9fd2601eb3",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 10511,
                "upload_time": "2022-12-16T02:36:26",
                "upload_time_iso_8601": "2022-12-16T02:36:26.903754Z",
                "url": "https://files.pythonhosted.org/packages/d6/91/39a07a7c7b9dc74dd190cc981b987077b57e06d01a94f83679aa899894b9/symbolite-0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "2781bdda34dc5faa0818b3ef86cedcaf",
                    "sha256": "5e63774e9ca4f89b66ae35d577e62469ca6681501f3cec34894b2763af441b04"
                },
                "downloads": -1,
                "filename": "symbolite-0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "2781bdda34dc5faa0818b3ef86cedcaf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 16418,
                "upload_time": "2022-12-16T02:36:28",
                "upload_time_iso_8601": "2022-12-16T02:36:28.514709Z",
                "url": "https://files.pythonhosted.org/packages/d8/db/45c2cdc6d0a39618441a33e972e9a614561a03c6a873b0d1385bb86e718c/symbolite-0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}