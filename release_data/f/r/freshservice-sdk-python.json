{
    "0.0.1": {
        "info": {
            "author": "Mervin Hemaraju",
            "author_email": "th3pl4gu33@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# freshservice-sdk-python\n\nThis sdk is an unofficial freshservice API v2 SDK written in Python.\n\nThe library is based on the official Freshservice api found [here](https://api.freshservice.com/)\n\nIt currently supports the manipulation of resources listed below:\n\n* Tickets\n* Changes\n* Problems\n* Tasks (tickets, changes and problems)\n* Many more to come!\n\n## Getting Started\n\nTo install the SDK in your project:\n\n```shell\npip install freshservice-sdk-python\n```\n\nYou'll also need\n\n* A Freshservice domain name, `your_company.freshservice.com`\n* An [API key](https://support.freshservice.com/en/support/solutions/articles/50000000306-where-do-i-find-my-api-key-)\n\nYou will need to pre set these two values in your deployment's environment variables before using the library. You can either set it in a bash script or pre code it so that you have it in your environment variable on runtime:\n\n```\nos.environ['FRESHSERVICE_API_KEY'] = \"XXXXXX\"\n\nos.environ['FRESHSERVICE_DOMAIN'] = \"your_company.freshservice.com\"\n```\n\n## Tickets\n\nYou can manipulate tickets using the `Ticket` model from the sdk. The `Ticket` model will handle [this](https://api.freshservice.com/#tickets) part of the api in freshservice.\n\nYou can import the model as shown below:\n\n```\nfrom freshservice import Ticket\n```\n\n### Creating a ticket\n\n```\nfrom freshservice import Ticket\n\nticket = Ticket.create(\n\trequester_email, \n        subject, \n        description, \n        status: Status, \n        priority: TicketModel.Priority, \n        department_id = None,\n        group_id = None,\n        category = None,\n        sub_category = None,\n        item_category = None,\n        custom_fields: dict = {}\n)\n```\n\n\n### Fetching a ticket\n\nYou can fetch a ticket by providing the ticket id when initializing the ticket object as shown below.\n\nThis will go and fetch the ticket details.\n\n```\nfrom freshservice import Ticket\n\nticket = Ticket(\n\tid=your_ticket_id\n)\n\n```\n\n### Updating a ticket\n\nTo update a ticket, you can just update the ticket's attribute and then hit the `update()` on the ticket's object to update it.\n\n```\nfrom freshservice import Ticket\n\nticket.subject = \"new subject\"\nticket.description = \"new description\"\nticket.update()\n\n```\n\n### Closing a ticket\n\nClosing a ticket works similarly to updating it. You can set all the required attributes of the ticket to match the ticket closure rules and then hit the `close()` function\n\n```\nfrom freshservice import Ticket\n\nticket.category = \"Other\"\nticket.close()\n```\n\n## Changes\n\n```\nComing soon\n```\n\n## Problems\n\n```\nComing soon\n```\n\n## Building the SDK\n\nIn most cases, you won't need to build the SDK from source. If you want to build it yourself, you'll need these preequisites:\n\n* Clone the repo\n* Run `python setup.py build` from the root of the project (assuming Python is installed)\n\n## Contributing\n\nWe're happy to accept contributions and PRs!\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mervinhemaraju/freshservice-python",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "freshservice-sdk-python",
            "package_url": "https://pypi.org/project/freshservice-sdk-python/",
            "platform": null,
            "project_url": "https://pypi.org/project/freshservice-sdk-python/",
            "project_urls": {
                "Homepage": "https://github.com/mervinhemaraju/freshservice-python"
            },
            "release_url": "https://pypi.org/project/freshservice-sdk-python/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "An unofficial freshservice API v2 SDK written in Python.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15877300,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bd3090659ae8e7bf678ad988f07f2b2c",
                    "sha256": "a1704b12f3bff5b6caf977eea913c36978d4342199042349069995ce78e359c7"
                },
                "downloads": -1,
                "filename": "freshservice-sdk-python-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bd3090659ae8e7bf678ad988f07f2b2c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 6907,
                "upload_time": "2022-11-24T10:30:21",
                "upload_time_iso_8601": "2022-11-24T10:30:21.715169Z",
                "url": "https://files.pythonhosted.org/packages/12/77/e5885e17c77ab281354091ccf223f608661c7a9c99d3e073b36b6b20e5cf/freshservice-sdk-python-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}