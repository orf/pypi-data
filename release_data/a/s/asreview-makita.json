{
    "0.5.1": {
        "info": {
            "author": "ASReview LAB developers",
            "author_email": "asreview@uu.nl",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# ASReview Makita\n\n[ASReviews](https://github.com/asreview/asreview)' `MAKe IT Automatic (Makita)` is a workflow generator for simulation studies using the command line interface of [ASReview\nLAB](https://asreview.readthedocs.io/en/latest/simulation_cli.html). Makita can be used to effortlessly generate the framework and code for your simulation study.\n\nA simulation involves mimicking the screening process for a systematic review of a human in interaction with an Active learning model (i.e., a combination of a feature extractor, classifier,\nbalancing method, and a query strategy). The simulation reenacts the screening process as if a researcher were using active learning. The performance of one or multiple model(s) can then be\nmeasured by performance metrics, such as the Work Saved over Sampling, recall at a given point in the screening process, or the average time to discover a relevant record.\n\nUsing Makita templates, different study structures can be generated to fit the needs of your very own study. If your study requires a unique template, you can create a new one and use it\ninstead.\n\nIn [ASReview LAB](https://github.com/asreview/asreview), a [simulation]( https://asreview.readthedocs.io/en/latest/simulation_overview.html#overview) can be run in the [web\ninterface](https://asreview.readthedocs.io/en/latest/simulation_overview.html#simulating-with-asreview-lab), the [Python API](https://asreview.readthedocs.io/en/latest/simulation_api_example.html), or\nthe [Command Line Interface]( https://asreview.readthedocs.io/en/latest/simulation_cli.html). Makita can be used only via the CLI.\n\nWhat Makita does:\n\n- Setting up a workflow for running a large-scale simulation study\n- Preparing a Github repository\n- Automating the many lines of code needed\n- Creating a batch script for running the simulation study with just one line of code\n- Making your research fully reproducible\n- Allowing you to add templates to accommodate your own specific research question\n\nWhat Makita does not do:\n\n- Executing jobs or tasks itself\n- Being a black-box\n- Writing your paper\n\n## Installation\n\nInstall the Makita extension with pip:\n\n``` bash\npip install asreview-makita\n```\n\nFor upgrading, use:\n\n``` bash\npip install --upgrade asreview-makita\n```\n\nAfter installing the extension, ASReview should automatically detect Makita. If installed correctly, `asreview --help` should list Makita as an option.\n\n## Getting started\n\nYou can create the framework and code for your own simulation study in 4 steps.\n\n1. Create an project folder on your computer.\n2. Create a subfolder named `data` and fill it using one or more datasets.\n3. Using your preferred command line tool, `cd` into the project folder.\n4. Create a simulation study from a template found in the [list of templates](#templates) via\n\n```console\nasreview makita template NAME_OF_TEMPLATE\n```\n\nwhere `NAME_OF_TEMPLATE` is one of the templates (e.g. `asreview makita template arfi`).\n\nYour simulation study is now properly set up and ready for use. To start the simulations, execute the following shell script in the project folder:\n\n```console\nsh jobs.sh\n```\n\nThe `jobs.sh` script is a shell script that runs all jobs in the project folder.\n\n### Windows support\n\nFor Windows users, ASReview Makita offers support for batch files. Use the `-f` option to generate a `jobs.bat` script instead of the default `jobs.sh` script.\n\n```console\nasreview makita template basic -f jobs.bat\n```\n\n> Alternatively, Windows CMD does not support the `sh` command, and a bash shell is required. You can use tools such as Git Bash, Cygwin, WSL, etc. to run the `jobs.sh` script instead.\n\n## Templates\n\nThe following table gives an overview of the available templates. See [Getting started](#getting-started) for instructions on usage.\n\n> Note: If no seed is set with the template command, the default seed is used. While this is important for the reproducibility of the results, it may lead to long-term bias. To avoid seed-related bias across different simulation studies, a seed should be for the prior records and models.\n\n### Basic template\n\ncommand: `basic`\n\nThe basic template prepares a script for conducting a simulation study with one run using the default model settings, and two randomly chosen priors (one relevant and one irrelevant record).\n\noptional arguments:\n\n```console\n  -h, --help                                       show this help message and exit\n  -f OUTPUT_FILE                                   File with jobs\n  -s DATA_FOLDER                                   Dataset folder\n  -o OUTPUT_FOLDER                                 Output folder\n  --init_seed INIT_SEED                            Seed of the priors. Seed is set by default!\n  --model_seed MODEL_SEED                          Seed of the models. Seed is set by default!\n  --template TEMPLATE                              Overwrite template with template file path.\n  --n_runs N_RUNS                                  Number of runs\n```\n\n### ARFI template\n\ncommand: `arfi`\n\nThe ARFI template (All relevant, fixed irrelevant) prepares a script for running a simulation study in such a way that for every relevant record 1 run will be executed with 10 randomly chosen irrelevant records which are kept constant over runs. When multiple datasets are available the template orders the tasks in the job file per dataset.\n\noptional arguments:\n\n```console\n  -h, --help                                       show this help message and exit\n  -f OUTPUT_FILE                                   File with jobs\n  -s DATA_FOLDER                                   Dataset folder\n  -o OUTPUT_FOLDER                                 Output folder\n  --init_seed INIT_SEED                            Seed of the priors. Seed is set by default!\n  --model_seed MODEL_SEED                          Seed of the models. Seed is set by default!\n  --template TEMPLATE                              Overwrite template with template file path.\n  --n_priors N_PRIORS                              Number of priors\n```\n\n### Multiple models template\n\ncommand: `multiple_models`\n\nThe multiple model template prepares a script for running a simulation study comparing multiple models for one dataset and a fixed set of priors (one relevant and one irrelevant record; identical across models).\n\noptional arguments:\n\n```console\n  -h, --help                                       Show this help message and exit\n  -f OUTPUT_FILE                                   File with jobs\n  -s DATA_FOLDER                                   Dataset folder\n  -o OUTPUT_FOLDER                                 Output folder\n  --init_seed INIT_SEED                            Seed of the priors. Seed is set by default!\n  --model_seed MODEL_SEED                          Seed of the models. Seed is set by default!\n  --template TEMPLATE                              Overwrite template with template file path.\n  --classifiers CLASSIFIERS [CLASSIFIERS ...]                           Classifiers to use\n  --feature_extractions FEATURE_EXTRACTIONS [FEATURE_EXTRACTIONS ...]   Feature extractions to use\n  --impossible_models IMPOSSIBLE_MODELS [IMPOSSIBLE_MODELS ...]         Model combinations to exclude\n```\n\nThe default models are:\n\n```python\nclassifiers           [\"logistic\", \"nb\", \"rf\", \"svm\"]\nfeature_extractions   [\"doc2vec\", \"sbert\", \"tfidf\"]\nimpossible_models     [[\"nb\", \"doc2vec\"], [\"nb\", \"sbert\"]]\n```\n\n## Advanced usage\n\n### Create and use custom templates\n\nIt is possible to overwrite the internal templates. This can be useful for simulation studies with different needs.\n\n1. Select an existing template that looks similar to your needs. For example, you want to run ARFI with a different model, then you pick the [ARFI template](#arfi-template).\n2. Download the template you selected in step 1 from the [Github repository](https://github.com/asreview/asreview-makita/tree/main/asreviewcontrib/makita/templates). Template files have the following\n   structure `template_*.txt.template`. For the ARFI example, the template is\n   [template_arfi.txt.template](https://github.com/asreview/asreview-makita/blob/main/asreviewcontrib/makita/templates/template_arfi.txt.template).\n3. Save the downloaded template somewhere on your computer. The template is a so-called \"Jinja\" template. The template consists of [ASReview command line\n   commands](https://asreview.readthedocs.io/en/latest/API/cli.html) combined with jinja syntax. The Jinja syntax is very intuitive. See this\n   [Cheatsheet](https://cheatography.com/skalavala/cheat-sheets/jinja/).\n4. Edit the Jinja template to your needs.\n5. Run the custom template with the command line option `--template PATH_TO_MY_TEMPLATE.txt.template`. For the ARFI example, this would be `asreview makita template arfi --template\n   PATH_TO_MY_TEMPLATE.txt.template`. Please keep in mind that you follow the usual steps for running a template.\n6. A `jobs.sh` file should be in the your folder.\n\nPlease contribute your templates back to the project by making a Pull Request. Then, we can integrate it in the core of the makita package.\n\n### Add and use scripts\n\nMakita can add scripts to your repository. The scripts are mainly pre- and postprocessing scripts. These scripts are not (yet) available in any existing ASReview software. Therefore, they can be added manually\nwith `asreview makita add-script NAME_OF_SCRIPT`.\n\nFor example, the results from *ASReview datatools* are merged via the script `merge_descriptives.py` (or `merge_metrics.py` for *ASReview insights*), using:\n\n1. Collect statistics (with template)\n2. Run  `asreview makita add-script merge_descriptives.py`\n3. Run `python scripts/merge_descriptives.py`\n\nUse `-s`  (source) and `-o` (output) to tweak paths.\n\n#### Available scripts\n\nThe following scripts are available:\n\n- get_plot.py\n- get_settings_from_state.py\n- merge_descriptives.py\n- merge_metrics.py\n- split_data_with_multiple_labels.py [DEPRECATED]\n\n## License\n\nThis extension is published under the [MIT license](/LICENSE).\n\n## Contact\n\nThis extension is part of the ASReview project ([asreview.ai](https://asreview.ai)). It is maintained by the maintainers of ASReview LAB. See [ASReview LAB](https://github.com/asreview/asreview) for\ncontact information and more resources.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/asreview/asreview-makita",
            "keywords": "asreview makita",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "asreview-makita",
            "package_url": "https://pypi.org/project/asreview-makita/",
            "platform": null,
            "project_url": "https://pypi.org/project/asreview-makita/",
            "project_urls": {
                "Bug Reports": "https://github.com/asreview/asreview-makita/issues",
                "Homepage": "https://github.com/asreview/asreview-makita",
                "Source": "https://github.com/asreview/asreview-makita"
            },
            "release_url": "https://pypi.org/project/asreview-makita/0.5.1/",
            "requires_dist": [
                "asreview",
                "jinja2",
                "cfgtemplater"
            ],
            "requires_python": "",
            "summary": "Makita workflow tool for the ASReview project",
            "version": "0.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14935431,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc3bf54231488aea020604a4731b79a1",
                    "sha256": "3b90770adf5f6605e62a326e60e15e7a00fc4eabaa79df9fe0dd946a69565398"
                },
                "downloads": -1,
                "filename": "asreview_makita-0.5.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "dc3bf54231488aea020604a4731b79a1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 21329,
                "upload_time": "2022-08-30T13:12:28",
                "upload_time_iso_8601": "2022-08-30T13:12:28.931946Z",
                "url": "https://files.pythonhosted.org/packages/71/f4/38e4671617b5fc951ae571fd1efce0accefaff395a3ac26d29592dbfeae2/asreview_makita-0.5.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bdebeb423316eb607e341c68a352ebd7",
                    "sha256": "aa79132d9c4591c7233d1a08d8eca2491a131b0cd239d6083536dd1c0ae45425"
                },
                "downloads": -1,
                "filename": "asreview-makita-0.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "bdebeb423316eb607e341c68a352ebd7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 29845,
                "upload_time": "2022-08-30T13:12:30",
                "upload_time_iso_8601": "2022-08-30T13:12:30.614488Z",
                "url": "https://files.pythonhosted.org/packages/a1/93/c791d99174006e14342f50ca9def7d502e1fc3ec66cbac66d8f1dc0d1317/asreview-makita-0.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}