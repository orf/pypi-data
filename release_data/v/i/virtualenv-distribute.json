{
    "1.3.4.2": {
        "info": {
            "author": "Florian Schulze",
            "author_email": "florian.schulze@gmx.net",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://bitbucket.org/fschulze/virtualenv-distribute/",
            "keywords": "distribute setuptools deployment installation distutils",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "virtualenv-distribute",
            "package_url": "https://pypi.org/project/virtualenv-distribute/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/virtualenv-distribute/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://bitbucket.org/fschulze/virtualenv-distribute/"
            },
            "release_url": "https://pypi.org/project/virtualenv-distribute/1.3.4.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Virtual Python Environment builder",
            "version": "1.3.4.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 662256,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ca006b975c5cf69eb658ef5ef18975a0",
                    "sha256": "e156861d45f56ca3d9f45090966c89951185ebbbf86ede33540dcc2cb755caa0"
                },
                "downloads": -1,
                "filename": "virtualenv-distribute-1.3.4.2.zip",
                "has_sig": false,
                "md5_digest": "ca006b975c5cf69eb658ef5ef18975a0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 43821,
                "upload_time": "2009-10-05T17:17:32",
                "upload_time_iso_8601": "2009-10-05T17:17:32.704432Z",
                "url": "https://files.pythonhosted.org/packages/dd/ba/b9bf627ca7fb62bee43cc4fbdcd2e523f736b4850f3d4290e8abcdbf8aa5/virtualenv-distribute-1.3.4.2.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.4.3": {
        "info": {
            "author": "Florian Schulze",
            "author_email": "florian.schulze@gmx.net",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://bitbucket.org/fschulze/virtualenv-distribute/",
            "keywords": "distribute setuptools deployment installation distutils",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "virtualenv-distribute",
            "package_url": "https://pypi.org/project/virtualenv-distribute/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/virtualenv-distribute/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://bitbucket.org/fschulze/virtualenv-distribute/"
            },
            "release_url": "https://pypi.org/project/virtualenv-distribute/1.3.4.3/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Virtual Python Environment builder",
            "version": "1.3.4.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 662256,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ceabd1d0752ff0aa55d1c1526d9ed79e",
                    "sha256": "9a125bfcc4426da09762a998a6a1f99fac883780ac3fd3cad8daf413706b9e42"
                },
                "downloads": -1,
                "filename": "virtualenv-distribute-1.3.4.3.zip",
                "has_sig": false,
                "md5_digest": "ceabd1d0752ff0aa55d1c1526d9ed79e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 55736,
                "upload_time": "2009-10-15T23:01:46",
                "upload_time_iso_8601": "2009-10-15T23:01:46.594249Z",
                "url": "https://files.pythonhosted.org/packages/98/98/11a1736312a5ceaf5b29d388172620662edee7e38854f4bda97a63e2e82d/virtualenv-distribute-1.3.4.3.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.4.4": {
        "info": {
            "author": "Florian Schulze",
            "author_email": "florian.schulze@gmx.net",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License"
            ],
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://bitbucket.org/fschulze/virtualenv-distribute/",
            "keywords": "distribute setuptools deployment installation distutils",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "virtualenv-distribute",
            "package_url": "https://pypi.org/project/virtualenv-distribute/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/virtualenv-distribute/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://bitbucket.org/fschulze/virtualenv-distribute/"
            },
            "release_url": "https://pypi.org/project/virtualenv-distribute/1.3.4.4/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Virtual Python Environment builder",
            "version": "1.3.4.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 662256,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f09c82ffd7ad3a0c4bcf9e6c5c49a164",
                    "sha256": "22e4b24256e297586b6651f403dc64b61f57f4872f037d6a9f777915577bbeda"
                },
                "downloads": -1,
                "filename": "virtualenv-distribute-1.3.4.4.zip",
                "has_sig": false,
                "md5_digest": "f09c82ffd7ad3a0c4bcf9e6c5c49a164",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 51767,
                "upload_time": "2009-10-15T23:55:20",
                "upload_time_iso_8601": "2009-10-15T23:55:20.090958Z",
                "url": "https://files.pythonhosted.org/packages/b2/e8/f9d5486fcba2d13ce877ee1a1ccbb25914334eacb25e9d6f9134b8956f6d/virtualenv-distribute-1.3.4.4.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.3.4dev-1": {
        "info": {
            "author": "Florian Schulze",
            "author_email": "florian.schulze@gmx.net",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License"
            ],
            "description": "virtualenv\n==========\n\n* `Discussion list <http://groups.google.com/group/python-virtualenv/>`_\n* `Bugs <https://bugs.launchpad.net/virtualenv/>`_\n\n.. contents::\n\nStatus and License\n------------------\n\n``virtualenv-distribute`` is a fork of ``virtualenv`` using ``distribute``\ninstead of ``setuptools``.\n\nThe fork was started by Philip Jenvey at\nhttp://bitbucket.org/pjenvey/virtualenv-distribute/\nand this version by Florian Schulze lives at\nhttp://bitbucket.org/fschulze/virtualenv-distribute/\n\n``virtualenv`` is a successor to `workingenv\n<http://cheeseshop.python.org/pypi/workingenv.py>`_, and an extension\nof `virtual-python\n<http://peak.telecommunity.com/DevCenter/EasyInstall#creating-a-virtual-python>`_.\n\nIt is written by Ian Bicking, and sponsored by the `Open Planning\nProject <http://topp.openplans.org>`_.  It is licensed under an\n`MIT-style permissive license\n<http://svn.colorstudy.com/virtualenv/trunk/docs/license.txt>`_.\n\nYou can install it with ``easy_install virtualenv-distribute``, or from the\n`subversion repository\n<http://svn.colorstudy.com/virtualenv/trunk#egg=virtualenv-dev>`_ with\n``easy_install virtualenv==dev``.\n\nWhat It Does\n------------\n\n``virtualenv`` is a tool to create isolated Python environments.\n\nThe basic problem being addressed is one of dependencies and versions,\nand indirectly permissions.  Imagine you have an application that\nneeds version 1 of LibFoo, but another application requires version\n2.  How can you use both these applications?  If you install\neverything into ``/usr/lib/python2.4/site-packages`` (or whatever your\nplatform's standard location is), it's easy to end up in a situation\nwhere you unintentionally upgrade an application that shouldn't be\nupgraded.\n\nOr more generally, what if you want to install an application *and\nleave it be*?  If an application works, any change in its libraries or\nthe versions of those libraries can break the application.\n\nAlso, what if you can't install packages into the global\n``site-packages`` directory?  For instance, on a shared host.\n\nIn all these cases, ``virtualenv`` can help you.  It creates an\nenvironment that has its own installation directories, that doesn't\nshare libraries with other virtualenv environments (and optionally\ndoesn't use the globally installed libraries either).\n\nThe basic usage is::\n\n    $ python virtualenv.py ENV\n\nIf you install it you can also just do ``virtualenv ENV``.\n\nThis creates ``ENV/lib/python2.4/site-packages`` (or\n``ENV/lib/python2.5/site-packages`` on Python 2.5, etc), where any\nlibraries you install will go.  It also creates ``ENV/bin/python``,\nwhich is a Python interpreter that uses this environment.  Anytime you\nuse that interpreter (including when a script has\n``#!/path/to/ENV/bin/python`` in it) the libraries in that environment\nwill be used.  (**Note for Windows:** scripts and executables on\nWindows go in ``ENV\\Scripts\\``; everywhere you see ``bin/`` replace it\nwith ``Scripts\\``)\n\nIt also installs `distribute\n<http://pypi.python.org/pypi/distribute>`_ for you, and if you use\n``ENV/bin/easy_install`` the packages will be installed into the\nenvironment.\n\nCreating Your Own Bootstrap Scripts\n-----------------------------------\n\nWhile this creates an environment, it doesn't put anything into the\nenvironment.  Developers may find it useful to distribute a script\nthat sets up a particular environment, for example a script that\ninstalls a particular web application.\n\nTo create a script like this, call\n``virtualenv.create_bootstrap_script(extra_text)``, and write the\nresult to your new bootstrapping script.  Here's the documentation\nfrom the docstring:\n\nCreates a bootstrap script, which is like this script but with\nextend_parser, adjust_options, and after_install hooks.\n\nThis returns a string that (written to disk of course) can be used\nas a bootstrap script with your own customizations.  The script\nwill be the standard virtualenv.py script, with your extra text\nadded (your extra text should be Python code).\n\nIf you include these functions, they will be called:\n\n``extend_parser(optparse_parser)``:\n    You can add or remove options from the parser here.\n\n``adjust_options(options, args)``:\n    You can change options here, or change the args (if you accept\n    different kinds of arguments, be sure you modify ``args`` so it is\n    only ``[DEST_DIR]``).\n\n``after_install(options, home_dir)``:\n\n    After everything is installed, this function is called.  This\n    is probably the function you are most likely to use.  An\n    example would be::\n\n        def after_install(options, home_dir):\n            if sys.platform == 'win32':\n                bin = 'Scripts'\n            else:\n                bin = 'bin'\n            subprocess.call([join(home_dir, bin, 'easy_install'),\n                             'MyPackage'])\n            subprocess.call([join(home_dir, bin, 'my-package-script'),\n                             'setup', home_dir])\n\n    This example immediately installs a package, and runs a setup\n    script from that package.\n\nBootstrap Example\n~~~~~~~~~~~~~~~~~\n\nHere's a more concrete example of how you could use this::\n\n    import virtualenv, textwrap\n    output = virtualenv.create_bootstrap_script(textwrap.dedent(\"\"\"\n    import os, subprocess\n    def after_install(options, home_dir):\n        etc = join(home_dir, 'etc')\n        if not os.path.exists(etc):\n            os.makedirs(etc)\n        subprocess.call([join(home_dir, 'bin', 'easy_install'),\n                         'BlogApplication'])\n        subprocess.call([join(home_dir, 'bin', 'paster'),\n                         'make-config', 'BlogApplication',\n                         join(etc, 'blog.ini')])\n        subprocess.call([join(home_dir, 'bin', 'paster'),\n                         'setup-app', join(etc, 'blog.ini')])\n    \"\"\"))\n    f = open('blog-bootstrap.py', 'w').write(output)\n\nAnother example is available `here\n<https://svn.openplans.org/svn/fassembler/trunk/fassembler/create-venv-script.py>`_.\n\nactivate script\n~~~~~~~~~~~~~~~\n\nIn a newly created virtualenv there will be a ``bin/activate`` shell\nscript, or a ``Scripts/activate.bat`` batch file on Windows.\n\nOn Posix systems you can do::\n\n  $ source bin/activate\n\nThis will change your ``$PATH`` to point to the virtualenv ``bin/``\ndirectory, and update your prompt.  Unlike workingenv, this is all it\ndoes; it's a convenience.  But if you use the complete path like\n``/path/to/env/bin/python script.py`` you do not need to activate the\nenvironment first.  You have to use ``source`` because it changes the\nenvironment in-place.  After activating an environment you can use the\nfunction ``deactivate`` to undo the changes.\n\nOn Windows you just do::\n\n  > \\path\\to\\env\\bin\\activate.bat\n\nAnd use ``deactivate.bat`` to undo the changes.\n\nThe ``--no-site-packages`` Option\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you build with ``virtualenv --no-site-packages ENV`` it will *not*\ninherit any packages from ``/usr/lib/python2.5/site-packages`` (or\nwherever your global site-packages directory is).  This can be used if\nyou don't have control over site-packages and don't want to depend on\nthe packages there, or you just want more isolation from the global\nsystem.\n\nUsing Virtualenv without ``bin/python``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSometimes you can't or don't want to use the Python interpreter\ncreated by the virtualenv.  For instance, in a `mod_python\n<http://www.modpython.org/>`_ or `mod_wsgi <http://www.modwsgi.org/>`_\nenvironment, there is only one interpreter.\n\nLuckily, it's easy.  You must use the custom Python interpreter to\n*install* libraries.  But to *use* libraries, you just have to be sure\nthe path is correct.  A script is available to correct the path.  You\ncan setup the environment like::\n\n    activate_this = '/path/to/env/bin/activate_this.py'\n    execfile(activate_this, dict(__file__=activate_this))\n\nThis will change ``sys.path`` and even change ``sys.prefix``, but also\nallow you to use an existing interpreter.  Items in your environment\nwill show up first on ``sys.path``, before global items.  However,\nthis cannot undo the activation of other environments, or modules that\nhave been imported.  You shouldn't try to, for instance, activate an\nenvironment before a web request; you should activate *one*\nenvironment as early as possible, and not do it again in that process.\n\nMaking Environments Relocatable\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNote: this option is somewhat experimental, and there are probably\ncaveats that have not yet been identified.  Also this does not\ncurrently work on Windows.\n\nNormally environments are tied to a specific path.  That means that\nyou cannot move an environment around or copy it to another computer.\nYou can fix up an environment to make it relocatable with the\ncommand::\n\n    $ virtualenv --relocatable ENV\n\nThis will make some of the files created by distribute use relative\npaths, and will change all the scripts to use ``activate_this.py``\ninstead of using the location of the Python interpreter to select the\nenvironment.\n\n**Note:** you must run this after you've installed *any* packages into\nthe environment.  If you make an environment relocatable, then\ninstall a new package, you must run ``virtualenv --relocatable``\nagain.\n\nAlso, this **does not make your packages cross-platform**.  You can\nmove the directory around, but it can only be used on other similar\ncomputers.  Some known environmental differences that can cause\nincompatibilities: a different version of Python, when one platform\nuses UCS2 for its internal unicode representation and another uses\nUCS4 (a compile-time option), obvious platform changes like Windows\nvs. Linux, or Intel vs. ARM, and if you have libraries that bind to C\nlibraries on the system, if those C libraries are located somewhere\ndifferent (either different versions, or a different filesystem\nlayout).\n\nCurrently the ``--no-site-packages`` option will not be honored if you\nuse this on an environment.\n\nCompare & Contrast with Alternatives\n------------------------------------\n\nThere are several alternatives that create isolated environments:\n\n* ``workingenv`` (which I do not suggest you use anymore) is the\n  predecessor to this library.  It used the main Python interpreter,\n  but relied on setting ``$PYTHONPATH`` to activate the environment.\n  This causes problems when running Python scripts that aren't part of\n  the environment (e.g., a globally installed ``hg`` or ``bzr``).  It\n  also conflicted a lot with Setuptools.\n\n* `virtual-python\n  <http://peak.telecommunity.com/DevCenter/EasyInstall#creating-a-virtual-python>`_\n  is also a predecessor to this library.  It uses only symlinks, so it\n  couldn't work on Windows.  It also symlinks over the *entire*\n  standard library and global ``site-packages``.  As a result, it\n  won't see new additions to the global ``site-packages``.\n\n  This script only symlinks a small portion of the standard library\n  into the environment, and so on Windows it is feasible to simply\n  copy these files over.  Also, it creates a new/empty\n  ``site-packages`` and also adds the global ``site-packages`` to the\n  path, so updates are tracked separately.  This script also installs\n  Setuptools automatically, saving a step and avoiding the need for\n  network access.\n\n* `zc.buildout <http://pypi.python.org/pypi/zc.buildout>`_ doesn't\n  create an isolated Python environment in the same style, but\n  achieves similar results through a declarative config file that sets\n  up scripts with very particular packages.  As a declarative system,\n  it is somewhat easier to repeat and manage, but more difficult to\n  experiment with.  ``zc.buildout`` includes the ability to setup\n  non-Python systems (e.g., a database server or an Apache instance).\n\nI *strongly* recommend anyone doing application development or\ndeployment use one of these tools.\n\nOther Documentation and Links\n-----------------------------\n\n* James Gardner has written a tutorial on using `virtualenv with\n  Pylons\n  <http://wiki.pylonshq.com/display/pylonscookbook/Using+a+Virtualenv+Sandbox>`_.\n\n* `Blog announcement\n  <http://blog.ianbicking.org/2007/10/10/workingenv-is-dead-long-live-virtualenv/>`_.\n\n* Doug Hellmann wrote a description of his `command-line work flow\n  using virtualenv (virtualenvwrapper)\n  <http://www.doughellmann.com/articles/CompletelyDifferent-2008-05-virtualenvwrapper/index.html>`_\n  including some handy scripts to make working with multiple\n  environments easier.  He also wrote `an example of using virtualenv\n  to try IPython\n  <http://www.doughellmann.com/articles/CompletelyDifferent-2008-02-ipython-and-virtualenv/index.html>`_.\n\n* Chris Perkins created a `showmedo video including virtualenv\n  <http://showmedo.com/videos/video?name=2910000&fromSeriesID=291>`_.\n\n* `Using virtualenv with mod_wsgi\n  <http://code.google.com/p/modwsgi/wiki/VirtualEnvironments>`_.\n\nChanges & News\n--------------\n\nsvn trunk\n~~~~~~~~~\n\n* Setuptools has been replaced with distribute 0.6.1.\n\n* The --unzip-setuptools option has been renamed to --unzip-distribute.\n\n* Fail more gracefully on Windows when ``win32api`` is not installed.\n\n* Fix site-packages taking precedent over Jython's ``__classpath__``\n  and also specially handle the new ``__pyclasspath__`` entry in\n  ``sys.path``.\n\n* Now copies Jython's ``registry`` file to the virtualenv if it exists.\n\n* Better find libraries when compiling extensions on Windows.\n\n* Create ``Scripts\\pythonw.exe`` on Windows.\n\n* Added support for the Debian/Ubuntu\n  ``/usr/lib/pythonX.Y/dist-packages`` directory.\n\n* Virtualenv now copies the actual embedded Python binary on \n  Mac OS X to fix a hang on Snow Leopard (10.6).\n\n* Set ``distutils.sysconfig.get_config_vars()['LIBDIR']`` (based on\n  ``sys.real_prefix``) which is reported to help building on Windows.\n\n1.3.3\n~~~~~\n\n* Use Windows newlines in ``activate.bat``, which has been reported to help\n  when using non-ASCII directory names.\n\n* Fixed compatibility with Jython 2.5b1.\n\n* Added a function ``virtualenv.install_python`` for more fine-grained\n  access to what ``virtualenv.create_environment`` does.\n\n* Fix `a problem <https://bugs.launchpad.net/virtualenv/+bug/241581>`_\n  with Windows and paths that contain spaces.\n\n* If ``/path/to/env/.pydistutils.cfg`` exists (or\n  ``/path/to/env/pydistutils.cfg`` on Windows systems) then ignore\n  ``~/.pydistutils.cfg`` and use that other file instead.\n\n* Fix ` a problem\n  <https://bugs.launchpad.net/virtualenv/+bug/340050>`_ picking up\n  some ``.so`` libraries in ``/usr/local``.\n\n1.3.2\n~~~~~\n\n* Remove the ``[install] prefix = ...`` setting from the virtualenv\n  ``distutils.cfg`` -- this has been causing problems for a lot of\n  people, in rather obscure ways.\n\n* If you use a `boot script`_ it will attempt to import ``virtualenv``\n  and find a pre-downloaded Setuptools egg using that.\n\n.. _boot script: `Creating Your Own Bootstrap Scripts`_\n\n* Added platform-specific paths, like ``/usr/lib/pythonX.Y/plat-linux2``\n\n1.3.1\n~~~~~\n\n* Real Python 2.6 compatibility.  Backported the Python 2.6 updates to\n  ``site.py``, including `user directories\n  <http://docs.python.org/dev/whatsnew/2.6.html#pep-370-per-user-site-packages-directory>`_\n  (this means older versions of Python will support user directories,\n  whether intended or not).\n\n* Always set ``[install] prefix`` in ``distutils.cfg`` -- previously\n  on some platforms where a system-wide ``distutils.cfg`` was present\n  with a ``prefix`` setting, packages would be installed globally\n  (usually in ``/usr/local/lib/pythonX.Y/site-packages``).\n\n* Sometimes Cygwin seems to leave ``.exe`` off ``sys.executable``; a\n  workaround is added.\n\n* Fix ``--python`` option.\n\n* Fixed handling of Jython environments that use a\n  jython-complete.jar.\n\n1.3\n~~~\n\n* Update to Setuptools 0.6c9\n* Added an option ``virtualenv --relocatable EXISTING_ENV``, which\n  will make an existing environment \"relocatable\" -- the paths will\n  not be absolute in scripts, ``.egg-info`` and ``.pth`` files.  This\n  may assist in building environments that can be moved and copied.\n  You have to run this *after* any new packages installed.\n* Added ``bin/activate_this.py``, a file you can use like\n  ``execfile(\"path_to/activate_this.py\",\n  dict(__file__=\"path_to/activate_this.py\"))`` -- this will activate\n  the environment in place, similar to what `the mod_wsgi example\n  does <http://code.google.com/p/modwsgi/wiki/VirtualEnvironments>`_.\n* For Mac framework builds of Python, the site-packages directory\n  ``/Library/Python/X.Y/site-packages`` is added to ``sys.path``, from\n  Andrea Rech.\n* Some platform-specific modules in Macs are added to the path now\n  (``plat-darwin/``, ``plat-mac/``, ``plat-mac/lib-scriptpackages``),\n  from Andrea Rech.\n* Fixed a small Bashism in the ``bin/activate`` shell script.\n* Added ``__future__`` to the list of required modules, for Python\n  2.3.  You'll still need to backport your own ``subprocess`` module.\n* Fixed the ``__classpath__`` entry in Jython's ``sys.path`` taking\n  precedent over virtualenv's libs.\n\n1.2\n~~~\n\n* Added a ``--python`` option to select the Python interpreter.\n* Add ``warnings`` to the modules copied over, for Python 2.6 support.\n* Add ``sets`` to the module copied over for Python 2.3 (though Python\n  2.3 still probably doesn't work).\n\n1.1.1\n~~~~~\n\n* Added support for Jython 2.5.\n\n1.1\n~~~\n\n* Added support for Python 2.6.\n* Fix a problem with missing ``DLLs/zlib.pyd`` on Windows.  Create\n* ``bin/python`` (or ``bin/python.exe``) even when you run virtualenv\n  with an interpreter named, e.g., ``python2.4``\n* Fix MacPorts Python\n* Added --unzip-setuptools option\n* Update to Setuptools 0.6c8\n* If the current directory is not writable, run ez_setup.py in ``/tmp``\n* Copy or symlink over the ``include`` directory so that packages will\n  more consistently compile.\n\n1.0\n~~~\n\n* Fix build on systems that use ``/usr/lib64``, distinct from\n  ``/usr/lib`` (specifically CentOS x64).\n* Fixed bug in ``--clear``.\n* Fixed typos in ``deactivate.bat``.\n* Preserve ``$PYTHONPATH`` when calling subprocesses.\n\n0.9.2\n~~~~~\n\n* Fix include dir copying on Windows (makes compiling possible).\n* Include the main ``lib-tk`` in the path.\n* Patch ``distutils.sysconfig``: ``get_python_inc`` and\n  ``get_python_lib`` to point to the global locations.\n* Install ``distutils.cfg`` before Setuptools, so that system\n  customizations of ``distutils.cfg`` won't effect the installation.\n* Add ``bin/pythonX.Y`` to the virtualenv (in addition to\n  ``bin/python``).\n* Fixed an issue with Mac Framework Python builds, and absolute paths\n  (from Ronald Oussoren).\n\n0.9.1\n~~~~~\n\n* Improve ability to create a virtualenv from inside a virtualenv.\n* Fix a little bug in ``bin/activate``.\n* Actually get ``distutils.cfg`` to work reliably.\n\n0.9\n~~~\n\n* Added ``lib-dynload`` and ``config`` to things that need to be\n  copied over in an environment.\n* Copy over or symlink the ``include`` directory, so that you can\n  build packages that need the C headers.\n* Include a ``distutils`` package, so you can locally update\n  ``distutils.cfg`` (in ``lib/pythonX.Y/distutils/distutils.cfg``).\n* Better avoid downloading Setuptools, and hitting PyPI on environment\n  creation. \n* Fix a problem creating a ``lib64/`` directory.\n* Should work on MacOSX Framework builds (the default Python\n  installations on Mac).  Thanks to Ronald Oussoren.\n\n0.8.4\n~~~~~\n\n* Windows installs would sometimes give errors about ``sys.prefix`` that\n  were inaccurate.\n* Slightly prettier output.\n\n0.8.3\n~~~~~\n\n* Added support for Windows.\n\n0.8.2\n~~~~~\n\n* Give a better warning if you are on an unsupported platform (Mac\n  Framework Pythons, and Windows).\n* Give error about running while inside a workingenv.\n* Give better error message about Python 2.3.\n\n0.8.1\n~~~~~\n\nFixed packaging of the library.\n\n0.8\n~~~\n\nInitial release.  Everything is changed and new!",
            "description_content_type": null,
            "docs_url": null,
            "download_url": "UNKNOWN",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "http://bitbucket.org/fschulze/virtualenv-distribute/",
            "keywords": "distribute setuptools deployment installation distutils",
            "license": "MIT",
            "maintainer": null,
            "maintainer_email": null,
            "name": "virtualenv-distribute",
            "package_url": "https://pypi.org/project/virtualenv-distribute/",
            "platform": "UNKNOWN",
            "project_url": "https://pypi.org/project/virtualenv-distribute/",
            "project_urls": {
                "Download": "UNKNOWN",
                "Homepage": "http://bitbucket.org/fschulze/virtualenv-distribute/"
            },
            "release_url": "https://pypi.org/project/virtualenv-distribute/1.3.4dev-1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Virtual Python Environment builder",
            "version": "1.3.4dev-1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 662256,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "49d9dc11ef34df87d40cc092a54201c4",
                    "sha256": "2c3b920f33a460b9b277bd6b090bdda933bc8b7d91bdfadb5f6fc5e9be5d0864"
                },
                "downloads": -1,
                "filename": "virtualenv-distribute-1.3.4dev-1.zip",
                "has_sig": false,
                "md5_digest": "49d9dc11ef34df87d40cc092a54201c4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 58498,
                "upload_time": "2009-10-04T22:28:24",
                "upload_time_iso_8601": "2009-10-04T22:28:24.076788Z",
                "url": "https://files.pythonhosted.org/packages/fa/08/8f0899b5256fc3473f14eb3b0254c1e025d9f141c0f9ec18b8440d7d6630/virtualenv-distribute-1.3.4dev-1.zip",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}