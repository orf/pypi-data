{
    "4.4.0": {
        "info": {
            "author": "Redis Inc.",
            "author_email": "oss@redis.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "# redis-py\n\nThe Python interface to the Redis key-value store.\n\n[![CI](https://github.com/redis/redis-py/workflows/CI/badge.svg?branch=master)](https://github.com/redis/redis-py/actions?query=workflow%3ACI+branch%3Amaster)\n[![docs](https://readthedocs.org/projects/redis/badge/?version=stable&style=flat)](https://redis-py.readthedocs.io/en/stable/)\n[![MIT licensed](https://img.shields.io/badge/license-MIT-blue.svg)](./LICENSE)\n[![pypi](https://badge.fury.io/py/redis.svg)](https://pypi.org/project/redis/)\n[![codecov](https://codecov.io/gh/redis/redis-py/branch/master/graph/badge.svg?token=yenl5fzxxr)](https://codecov.io/gh/redis/redis-py)\n[![Total alerts](https://img.shields.io/lgtm/alerts/g/redis/redis-py.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/redis/redis-py/alerts/)\n\n[Installation](#installation) |  [Usage](#usage) | [Advanced Topics](#advanced-topics) | [Contributing](https://github.com/redis/redis-py/blob/master/CONTRIBUTING.md)\n\n---------------------------------------------\n\n## Python Notice\n\nredis-py 4.3.x will be the last generation of redis-py to support python 3.6 as it has been [End of Life'd](https://www.python.org/dev/peps/pep-0494/#schedule-last-security-only-release).  Async support was introduced in redis-py 4.2.x thanks to [aioredis](https://github.com/aio-libs/aioredis-py), which necessitates this change. We will continue to maintain 3.6 support as long as possible - but the plan is for redis-py version 4.4+ to officially remove 3.6.\n\n---------------------------\n\n## Installation\n\nTo install redis-py, simply:\n\n``` bash\n$ pip install redis\n```\n\nFor faster performance, install redis with hiredis support, this provides a compiled response parser, and *for most cases* requires zero code changes.\nBy default, if hiredis >= 1.0 is available, redis-py will attempt to use it for response parsing.\n\n``` bash\n$ pip install redis[hiredis]\n```\n\nLooking for a high-level library to handle object mapping? See [redis-om-python](https://github.com/redis/redis-om-python)!\n\n## Usage\n\n### Basic Example\n\n``` python\n>>> import redis\n>>> r = redis.Redis(host='localhost', port=6379, db=0)\n>>> r.set('foo', 'bar')\nTrue\n>>> r.get('foo')\nb'bar'\n```\n\nThe above code connects to localhost on port 6379, sets a value in Redis, and retrieves it. All responses are returned as bytes in Python, to receive decoded strings, set *decode_responses=True*.  For this, and more connection options, see [these examples](https://redis.readthedocs.io/en/stable/examples.html)\n\n### Connection Pools\n\nBy default, redis-py uses a connection pool to manage connections. Each instance of a Redis class receives its own connection pool. You can however define your own [redis.ConnectionPool](https://redis.readthedocs.io/en/stable/connections.html#connection-pools)\n\n``` python\n>>> pool = redis.ConnectionPool(host='localhost', port=6379, db=0)\n>>> r = redis.Redis(connection_pool=pool)\n```\n\nAlternatively, you might want to look at [Async connections](https://redis.readthedocs.io/en/stable/examples/asyncio_examples.html), or [Cluster connections](https://redis.readthedocs.io/en/stable/connections.html#cluster-client), or even [Async Cluster connections](https://redis.readthedocs.io/en/stable/connections.html#async-cluster-client)\n\n### Redis Commands\n\nThere is built-in support for all of the [out-of-the-box Redis commands](https://redis.io/commands). They are exposed using the raw Redis command names (`HSET`, `HGETALL`, etc.) except where a word (i.e del) is reserved by the language. The complete set of commands can be found [here](https://github.com/redis/redis-py/tree/master/redis/commands), or [the documentation](https://redis.readthedocs.io/en/stable/commands.html).\n\n## Advanced Topics\n\nThe [official Redis command documentation](https://redis.io/commands)\ndoes a great job of explaining each command in detail. redis-py attempts\nto adhere to the official command syntax. There are a few exceptions:\n\n-   **MULTI/EXEC**: These are implemented as part of the Pipeline class.\n    The pipeline is wrapped with the MULTI and EXEC statements by\n    default when it is executed, which can be disabled by specifying\n    transaction=False. See more about Pipelines below.\n\n-   **SUBSCRIBE/LISTEN**: Similar to pipelines, PubSub is implemented as\n    a separate class as it places the underlying connection in a state\n    where it can\\'t execute non-pubsub commands. Calling the pubsub\n    method from the Redis client will return a PubSub instance where you\n    can subscribe to channels and listen for messages. You can only call\n    PUBLISH from the Redis client (see [this comment on issue\n    #151](https://github.com/redis/redis-py/issues/151#issuecomment-1545015)\n    for details).\n\nFor more details, please see the documentation on [advanced topics page](https://redis.readthedocs.io/en/stable/advanced_features.html).\n\n### Pipelines\n\nThe following is a basic example of a [Redis pipeline](https://redis.io/docs/manual/pipelining/), a method to optimize round-trip calls, by batching Redis commands, and receiving their results as a list.\n\n\n``` python\n>>> pipe = r.pipeline()\n>>> pipe.set('foo', 5)\n>>> pipe.set('bar', 18.5)\n>>> pipe.set('blee', \"hello world!\")\n>>> pipe.execute()\n[True, True, True]\n```\n\n### PubSub\n\nThe following example shows how to utilize [Redis Pub/Sub](https://redis.io/docs/manual/pubsub/) to subscribe to specific channels.\n\n``` python\n>>> r = redis.Redis(...)\n>>> p = r.pubsub()\n>>> p.subscribe('my-first-channel', 'my-second-channel', ...)\n>>> p.get_message()\n{'pattern': None, 'type': 'subscribe', 'channel': b'my-second-channel', 'data': 1}\n```\n\n\n--------------------------\n\n### Author\n\nredis-py is developed and maintained by [Redis Inc](https://redis.com). It can be found [here](\nhttps://github.com/redis/redis-py), or downloaded from [pypi](https://pypi.org/project/redis/).\n\nSpecial thanks to:\n\n-   Andy McCurdy (<sedrik@gmail.com>) the original author of redis-py.\n-   Ludovico Magnocavallo, author of the original Python Redis client,\n    from which some of the socket code is still used.\n-   Alexander Solovyov for ideas on the generic response callback\n    system.\n-   Paul Hubbard for initial packaging support.\n\n[![Redis](./docs/logo-redis.png)](https://www.redis.com)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/redis/redis-py",
            "keywords": "Redis,key-value store,database",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "redis-popper",
            "package_url": "https://pypi.org/project/redis-popper/",
            "platform": null,
            "project_url": "https://pypi.org/project/redis-popper/",
            "project_urls": {
                "Changes": "https://github.com/redis/redis-py/releases",
                "Code": "https://github.com/redis/redis-py",
                "Documentation": "https://redis.readthedocs.io/en/latest/",
                "Homepage": "https://github.com/redis/redis-py",
                "Issue tracker": "https://github.com/redis/redis-py/issues"
            },
            "release_url": "https://pypi.org/project/redis-popper/4.4.0/",
            "requires_dist": [
                "deprecated (>=1.2.3)",
                "async-timeout (>=4.0.2)",
                "importlib-metadata (>=1.0) ; python_version < \"3.8\"",
                "typing-extensions ; python_version < \"3.8\"",
                "hiredis (>=1.0.0) ; extra == 'hiredis'",
                "cryptography (>=36.0.1) ; extra == 'ocsp'",
                "pyopenssl (==20.0.1) ; extra == 'ocsp'",
                "requests (>=2.26.0) ; extra == 'ocsp'"
            ],
            "requires_python": ">=3.7",
            "summary": "Python client for Redis database and key-value store",
            "version": "4.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15344920,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "51abe44f7360a419a05055e13f79cb98",
                    "sha256": "b387b879208af05e361218edd9e82bd7e2f05df4a90a4fd31bd1e34ef863ab3e"
                },
                "downloads": -1,
                "filename": "redis_popper-4.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "51abe44f7360a419a05055e13f79cb98",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 232911,
                "upload_time": "2022-10-08T16:03:21",
                "upload_time_iso_8601": "2022-10-08T16:03:21.558230Z",
                "url": "https://files.pythonhosted.org/packages/7a/10/1e7a11c4031bff7820f6f9190e19b61181201e888d218918c92f100e68b5/redis_popper-4.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dd1f5e913ddee4e89b74e190f3f078b8",
                    "sha256": "641bdffbdd18875d940ce4918f18a6cbfd5aeb4d1557cca64c80f703dcdf230e"
                },
                "downloads": -1,
                "filename": "redis:popper-4.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "dd1f5e913ddee4e89b74e190f3f078b8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 4534970,
                "upload_time": "2022-10-08T16:03:26",
                "upload_time_iso_8601": "2022-10-08T16:03:26.108312Z",
                "url": "https://files.pythonhosted.org/packages/22/7d/9b2f43fee56397c0d84256c0d6793d9ecc01fc28a29733edf97d5e99e824/redis:popper-4.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}