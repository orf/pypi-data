{
    "0.1.1": {
        "info": {
            "author": "Anubhav Mattoo",
            "author_email": "anubhavmattoo@outlook.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# dillO\n\nA small dill wrapper with Metadata and Verification Hash\n\n[![GitHub version](https://badge.fury.io/gh/anubhav-narayan%2FdillO.svg)](https://badge.fury.io/gh/anubhav-narayan%2FdillO)\n[![PyPI version](https://badge.fury.io/py/dill-O.svg)](https://badge.fury.io/py/dill-O)\n[![Made with dill](https://img.shields.io/badge/Made%20with-dill-blue)](https://github.com/anubhav-narayan/dillO)\n\n# Installation\n\n## From Source\n```bash\n$ python3 setup.py install\n```\n\n## From `pip`\n```bash\n$ pip3 install dill-O\n```\n\n# In-memory Storage\n```python\nfrom dillo import Dillo\n\nfile = Dillo('My dillO')\n# some object instances as obj\nfile.store(obj)\n# Read back from Memory\nobj = file.read()\n```\n# On File Storage\n```python\nfrom dillo import Dillo\n\nfile = Dillo('My dillO')\n# some object instances as obj\nfile.store(obj)  # store the object `before` you write\nfile.write_file('./filename.dillO')  # write dillO files\n``` \nRead back from Files\n```python\nfrom dillo import Dillo\n\nfile = Dillo.read_file('./filename.dillO')  # Read to memory\nobj = file.read()  # Read object\n```\n# JSON\nJSON Files\n```python\nfrom dillo import Dillo\n\nfile = Dillo('My dillO', type='json')\n# some object instances as obj\nfile.store(obj)  # store the object `before` you write\nfile.write_file('./filename.json')  # write JSON files\n```\nJSON Strings\n```python\nfrom dillo import Dillo\n\nfile = Dillo('My dillO', type='json')\n# some object instances as obj\nfile.store(obj)  # store the object `before` you write\nfile.json_string()  # get JSON string\n```\nJSON Objects\n```python\nfrom dillo import Dillo\n\nfile = Dillo('My dillO', type='json')\n# some object instances as obj\nfile.store(obj)  # store the object `before` you write\nfile.json()  # get JSON Object\n```\n# Interpreter Sessions\n## On Memory\n```python\n>>> a = 10\n>>> b = a + 20\n>>>  # Save a Session\n>>> from dillo import Dillo_Session\n>>> session = Dillo_Session.store_session('This Session')\n>>>  # Load a On Memory Session\n>>> session.load_session()\n```\n## On File\n```python\n>>> a = 10\n>>> b = a + 20\n>>>  # Save a Session\n>>> from dillo import Dillo_Session\n>>> session = Dillo_Session.store_session('This Session')\n>>>  # Load on a File\n>>> session.write_file('./filename.sdillo')\n```\nRead Back\n```python\n>>> from dillo import Dillo_Session\n>>> session = Dillo_Session.read_file('./filename.sdillo')\n>>> session.load_session()\n>>> a\n10\n>>> b\n30\n```\n# Sample Files\ndillO\n```plaintext\n-----METADATA-----\nName   : Array JSON\ndillO  : pickle\nSign   : SHA256\nTags   : \nLength : 271 Bytes\n-----DILLO-----\ngASVBAEAAAAAAACMCmRpbGwuX2RpbGyUjA1fY3JlYXRlX2FycmF5lJOUKGgAjAlfZ2V0X2F0dHKUk5R\noAIwOX2ltcG9ydF9tb2R1bGWUk5SMHG51bXB5LmNvcmUuX211bHRpYXJyYXlfdW1hdGiUhZRSlIwMX3\nJlY29uc3RydWN0lIaUUpSMBW51bXB5lIwHbmRhcnJheZSTlEsAhZRDAWKUh5QoSwFLBYWUaA2MBWR0e\nXBllJOUjAJpOJSJiIeUUpQoSwOMATyUTk5OSv____9K_____0sAdJRiiUMoAQAAAAAAAAACAAAAAAAA\nAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAJR0lE50lFKULg==\n-----SIGN-----\n1ac33161cd72c5ce8ec286ea322a02372e1d759a6724f64d33417ac8274d2808\n```\nJSON\n```json\n{\"py/object\": \"dillo.dillo.Dillo\", \"name\": \"Array JSON\", \"type\": \"json\", \"sign\": \"SHA256\", \"protocol\": null, \"byref\": false, \"fmode\": 2, \"recurse\": false, \"_stream\": {\"py/b64\": \"gASVBAEAAAAAAACMCmRpbGwuX2RpbGyUjA1fY3JlYXRlX2FycmF5lJOUKGgAjAlfZ2V0X2F0dHKUk5RoAIwOX2ltcG9ydF9tb2R1bGWUk5SMHG51bXB5LmNvcmUuX211bHRpYXJyYXlfdW1hdGiUhZRSlIwMX3JlY29uc3RydWN0lIaUUpSMBW51bXB5lIwHbmRhcnJheZSTlEsAhZRDAWKUh5QoSwFLBYWUaA2MBWR0eXBllJOUjAJpOJSJiIeUUpQoSwOMATyUTk5OSv////9K/////0sAdJRiiUMoAQAAAAAAAAACAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAFAAAAAAAAAJR0lE50lFKULg==\"}, \"ignore\": false, \"tags\": {\"py/set\": []}, \"hash\": {\"py/b64\": \"MWFjMzMxNjFjZDcyYzVjZThlYzI4NmVhMzIyYTAyMzcyZTFkNzU5YTY3MjRmNjRkMzM0MTdhYzgyNzRkMjgwOA==\"}}\n```\n# License [MIT](https://choosealicense.com/licenses/mit/)\nCopyright (c) 2021 Anubhav Mattoo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/anubhav-narayan/dillO",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "dill-O",
            "package_url": "https://pypi.org/project/dill-O/",
            "platform": "",
            "project_url": "https://pypi.org/project/dill-O/",
            "project_urls": {
                "Homepage": "https://github.com/anubhav-narayan/dillO"
            },
            "release_url": "https://pypi.org/project/dill-O/0.1.1/",
            "requires_dist": [
                "dill",
                "jsonpickle"
            ],
            "requires_python": ">=3.6",
            "summary": "Small dill wrapper with Metadata",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 10345919,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "584c9941847243413d618ea3ec4c05ec",
                    "sha256": "07c1a291f27da2750328e7f1893f2134f8b2567d48122ba435d7790d1abc12ba"
                },
                "downloads": -1,
                "filename": "dill_O-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "584c9941847243413d618ea3ec4c05ec",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 7959,
                "upload_time": "2021-05-13T15:34:24",
                "upload_time_iso_8601": "2021-05-13T15:34:24.795568Z",
                "url": "https://files.pythonhosted.org/packages/71/5d/ca67c04fe4b24e04290bd80497f95be48f9fc66c585cc661286f4fa4636d/dill_O-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}