{
    "0.0.1": {
        "info": {
            "author": "Aaron Bach",
            "author_email": "bachya1208@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bachya/aiolinkding",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aiolinkding",
            "package_url": "https://pypi.org/project/aiolinkding/",
            "platform": null,
            "project_url": "https://pypi.org/project/aiolinkding/",
            "project_urls": {
                "Homepage": "https://github.com/bachya/aiolinkding",
                "Repository": "https://github.com/bachya/aiolinkding"
            },
            "release_url": "https://pypi.org/project/aiolinkding/0.0.1/",
            "requires_dist": [
                "aiohttp (>=3.8.0)"
            ],
            "requires_python": ">=3.8.0,<4.0.0",
            "summary": "A Python3, async interface to the linkding REST API",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14529907,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c61aaecf34fc9fd7d03d60f6160f742c",
                    "sha256": "37a3e99cd2aa16422b965de133685b7e8ab620861f52b6687f3350d0d21e236e"
                },
                "downloads": -1,
                "filename": "aiolinkding-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c61aaecf34fc9fd7d03d60f6160f742c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 5515,
                "upload_time": "2022-05-17T22:05:35",
                "upload_time_iso_8601": "2022-05-17T22:05:35.626906Z",
                "url": "https://files.pythonhosted.org/packages/27/32/8cc6222dbb690586c9554a5f50f5019d05758a39285e875e843203d9dece/aiolinkding-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c9ffbdbd051b81309a8ccba80c24439",
                    "sha256": "e4ab4aae619b913333f6e4e70775363a1e6948ac3cc9f16dd2886419e07d98c3"
                },
                "downloads": -1,
                "filename": "aiolinkding-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9c9ffbdbd051b81309a8ccba80c24439",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 5650,
                "upload_time": "2022-05-17T22:05:38",
                "upload_time_iso_8601": "2022-05-17T22:05:38.734313Z",
                "url": "https://files.pythonhosted.org/packages/90/84/0e5efa872a62a164c4c5d625547046c04017fc197bd7fdea3d7e1c856ab8/aiolinkding-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2022.5.0": {
        "info": {
            "author": "Aaron Bach",
            "author_email": "bachya1208@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bachya/aiolinkding",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aiolinkding",
            "package_url": "https://pypi.org/project/aiolinkding/",
            "platform": null,
            "project_url": "https://pypi.org/project/aiolinkding/",
            "project_urls": {
                "Homepage": "https://github.com/bachya/aiolinkding",
                "Repository": "https://github.com/bachya/aiolinkding"
            },
            "release_url": "https://pypi.org/project/aiolinkding/2022.5.0/",
            "requires_dist": [
                "aiohttp (>=3.8.0)"
            ],
            "requires_python": ">=3.8.0,<4.0.0",
            "summary": "A Python3, async interface to the linkding REST API",
            "version": "2022.5.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14529907,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e8dcfa9429bc12b923113ac2dd775c4b",
                    "sha256": "e5f21f0695b43f511afab88abcd5fd470afa7866c5a8c85e1e0d2b5ce9dbe6eb"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e8dcfa9429bc12b923113ac2dd775c4b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 7937,
                "upload_time": "2022-05-18T18:19:06",
                "upload_time_iso_8601": "2022-05-18T18:19:06.750989Z",
                "url": "https://files.pythonhosted.org/packages/19/ac/7b8da3aabcea87da996b415fcc6db0ddf176cc1ec571bdab63d969773ae2/aiolinkding-2022.5.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8ca271dcf0cc5b076cc57f3f9f17685f",
                    "sha256": "06e441a1fb94810d7f529a09093b0e746af1fc3f3175b39af37ef7e833a486e9"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8ca271dcf0cc5b076cc57f3f9f17685f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 9865,
                "upload_time": "2022-05-18T18:19:07",
                "upload_time_iso_8601": "2022-05-18T18:19:07.985181Z",
                "url": "https://files.pythonhosted.org/packages/d6/57/eff787bc81fd9cc9e13bfce7f03c4f24ffaf6f9619d69527850967c30916/aiolinkding-2022.5.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2022.5.1": {
        "info": {
            "author": "Aaron Bach",
            "author_email": "bachya1208@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bachya/aiolinkding",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aiolinkding",
            "package_url": "https://pypi.org/project/aiolinkding/",
            "platform": null,
            "project_url": "https://pypi.org/project/aiolinkding/",
            "project_urls": {
                "Homepage": "https://github.com/bachya/aiolinkding",
                "Repository": "https://github.com/bachya/aiolinkding"
            },
            "release_url": "https://pypi.org/project/aiolinkding/2022.5.1/",
            "requires_dist": [
                "aiohttp (>=3.8.0)"
            ],
            "requires_python": ">=3.8.0,<4.0.0",
            "summary": "A Python3, async interface to the linkding REST API",
            "version": "2022.5.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14529907,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "807491297f7bb166e0fb90964ca723e9",
                    "sha256": "81725f5b9c421046bc8353f79ada0367b8224290ccd71215e41a69c30653202e"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "807491297f7bb166e0fb90964ca723e9",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 7942,
                "upload_time": "2022-05-20T19:41:04",
                "upload_time_iso_8601": "2022-05-20T19:41:04.226727Z",
                "url": "https://files.pythonhosted.org/packages/7e/1f/f7ed5ca24b9ce2da92ce2be66075d0832ef968b25988d81636b3b3681e22/aiolinkding-2022.5.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "757109867bc8a52e683913e2228b8424",
                    "sha256": "bebe561c908ed9f445cb8db3873c649b63f61d09a0ff771aece2ef1f7a44e2e3"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.1.tar.gz",
                "has_sig": false,
                "md5_digest": "757109867bc8a52e683913e2228b8424",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 9867,
                "upload_time": "2022-05-20T19:41:05",
                "upload_time_iso_8601": "2022-05-20T19:41:05.864392Z",
                "url": "https://files.pythonhosted.org/packages/20/d6/1611f372e58bdfcf7abb5a1fc19a6a502128bebc091a9b7ab3cd592b993f/aiolinkding-2022.5.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2022.5.2": {
        "info": {
            "author": "Aaron Bach",
            "author_email": "bachya1208@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python :: Implementation :: CPython",
                "Programming Language :: Python :: Implementation :: PyPy"
            ],
            "description": "# \ud83d\udd16 aiolinkding: a Python3, async library to the linkding REST API\n\n[![CI](https://github.com/bachya/aiolinkding/workflows/CI/badge.svg)](https://github.com/bachya/aiolinkding/actions)\n[![PyPi](https://img.shields.io/pypi/v/aiolinkding.svg)](https://pypi.python.org/pypi/aiolinkding)\n[![Version](https://img.shields.io/pypi/pyversions/aiolinkding.svg)](https://pypi.python.org/pypi/aiolinkding)\n[![License](https://img.shields.io/pypi/l/aiolinkding.svg)](https://github.com/bachya/aiolinkding/blob/master/LICENSE)\n[![Code Coverage](https://codecov.io/gh/bachya/aiolinkding/branch/master/graph/badge.svg)](https://codecov.io/gh/bachya/aiolinkding)\n[![Maintainability](https://api.codeclimate.com/v1/badges/189379773edd4035a612/maintainability)](https://codeclimate.com/github/bachya/aiolinkding/maintainability)\n[![Say Thanks](https://img.shields.io/badge/SayThanks-!-1EAEDB.svg)](https://saythanks.io/to/bachya)\n\n`aiolinkding` is a Python3, async library that interfaces with\n[linkding](https://github.com/sissbruecker/linkding) instances. It is intended to be a\nreasonably light wrapper around the linkding API (meaning that instead of drowning the user\nin custom objects/etc., it focuses on returning JSON straight from the API).\n\n [Installation](#installation)\n- [Python Versions](#python-versions)\n- [Usage](#usage)\n  * [Creating a Client](#creating-a-client)\n  * [Working with Bookmarks](#working-with-bookmarks)\n    + [Getting All Bookmarks](#getting-all-bookmarks)\n    + [Getting Archived Bookmarks](#getting-archived-bookmarks)\n    + [Getting a Single Bookmark](#getting-a-single-bookmark-by-id)\n    + [Creating a New Bookmark](#creating-a-new-bookmark)\n    + [Updating an Existing Bookmark by ID](#updating-an-existing-bookmark-by-id)\n    + [Archiving/Unarchiving a Bookmark](#archivingunarchiving-a-bookmark)\n    + [Deleting a Bookmark](#deleting-a-bookmark)\n  * [Working with Tags](#working-with-tags)\n    + [Getting All Tags](#getting-all-tags)\n    + [Getting a Single Tag](#getting-a-single-tag-by-id)\n    + [Creating a New Tag](#creating-a-new-Tag)\n  * [Connection Pooling](#connection-pooling)\n- [Contributing](#contributing)\n\n# Installation\n\n```python\npip install aiolinkding\n```\n\n# Python Versions\n\n`aiolinkding` is currently supported on:\n\n* Python 3.8\n* Python 3.9\n* Python 3.10\n\n# Usage\n\n## Creating a Client\n\nIt's easy to create an API client for a linkding instance. All you need are two\nparameters:\n\n1. A URL to a linkding instance\n2. A linkding API token\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n\nasyncio.run(main())\n```\n\n## Working with Bookmarks\n\nThe `Client` object provides easy access to several bookmark-related API operations.\n\n### Getting All Bookmarks\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Get all bookmarks:\n    bookmarks = await client.bookmarks.async_get_all()\n    # >>> { \"count\": 100, \"next\": null, \"previous\": null, \"results\": [...] }\n\n\nasyncio.run(main())\n```\n\n`client.bookmarks.async_get_all()` takes three optional parameters:\n\n* `query`: a string query to filter the returned bookmarks\n* `limit`: the maximum number of results that should be returned\n* `offset`: the index from which to return results (e.g., `5` starts at the fifth bookmark)\n\n### Getting Archived Bookmarks\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Get all archived bookmarks:\n    bookmarks = await client.bookmarks.async_get_archived()\n    # >>> { \"count\": 100, \"next\": null, \"previous\": null, \"results\": [...] }\n\n\nasyncio.run(main())\n```\n\n`client.bookmarks.async_get_archived()` takes three optional parameters:\n\n* `query`: a string query to filter the returned bookmarks\n* `limit`: the maximum number of results that should be returned\n* `offset`: the index from which to return results (e.g., `5` starts at the fifth bookmark)\n\n### Getting a Single Bookmark by ID\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Get a single bookmark:\n    bookmark = await client.bookmarks.async_get_single(37)\n    # >>> { \"id\": 37, \"url\": \"https://example.com\", \"title\": \"Example title\", ... }\n\n\nasyncio.run(main())\n```\n\n### Creating a New Bookmark\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Create a new bookmark:\n    created_bookmark = await client.bookmarks.async_create(\n        \"https://example.com\",\n        title=\"Example title\",\n        description=\"Example description\",\n        tag_names=[\n            \"tag1\",\n            \"tag2\",\n        ],\n    )\n    # >>> { \"id\": 37, \"url\": \"https://example.com\", \"title\": \"Example title\", ... }\n\n\nasyncio.run(main())\n```\n\n`client.bookmarks.async_create()` takes four optional parameters:\n\n* `title`: the bookmark's title\n* `description`: the bookmark's description\n* `tag_names`: the tags to assign to the bookmark (represented as a list of strings)\n* `is_archived`: whether the newly-created bookmark should automatically be archived\n\n### Updating an Existing Bookmark by ID\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Update an existing bookmark:\n    updated_bookmark = await client.bookmarks.async_update(\n        37,\n        url=\"https://different-example.com\",\n        title=\"Different example title\",\n        description=\"Different example description\",\n        tag_names=[\n            \"tag1\",\n            \"tag2\",\n        ],\n    )\n    # >>> { \"id\": 37, \"url\": \"https://different-example.com\", ... }\n\n\nasyncio.run(main())\n```\n\n`client.bookmarks.async_update()` takes four optional parameters (inclusion of any parameter\nwill change that value for the existing bookmark):\n\n* `url`: the bookmark's URL\n* `title`: the bookmark's title\n* `description`: the bookmark's description\n* `tag_names`: the tags to assign to the bookmark (represented as a list of strings)\n\n### Archiving/Unarchiving a Bookmark\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Archive a bookmark by ID:\n    await client.bookmarks.async_archive(37)\n\n    # ...and unarchive it:\n    await client.bookmarks.async_unarchive(37)\n\n\nasyncio.run(main())\n```\n\n### Deleting a Bookmark\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Delete a bookmark by ID:\n    await client.bookmarks.async_delete(37)\n\n\nasyncio.run(main())\n```\n\n## Working with Tags\n\nThe `Client` object also provides easy access to several tag-related API operations.\n\n### Getting All Tags\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Get all tags:\n    tags = await client.tags.async_get_all()\n    # >>> { \"count\": 100, \"next\": null, \"previous\": null, \"results\": [...] }\n\n\nasyncio.run(main())\n```\n\n`client.tags.async_get_all()` takes two optional parameters:\n\n* `limit`: the maximum number of results that should be returned\n* `offset`: the index from which to return results (e.g., `5` starts at the fifth bookmark)\n\n### Getting a Single Tag by ID\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Get a single tag:\n    tag = await client.tags.async_get_single(22)\n    # >>> { \"id\": 22, \"name\": \"example-tag\", ... }\n\n\nasyncio.run(main())\n```\n\n### Creating a New Tag\n\n```python\nimport asyncio\n\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\")\n\n    # Create a new tag:\n    created_tag = await client.tags.async_create(\"example-tag\")\n    # >>> { \"id\": 22, \"name\": \"example-tag\", ... }\n\n\nasyncio.run(main())\n```\n\n## Connection Pooling\n\nBy default, the library creates a new connection to linkding with each coroutine. If you\nare calling a large number of coroutines (or merely want to squeeze out every second of\nruntime savings possible), an\n[`aiohttp`](https://github.com/aio-libs/aiohttp) `ClientSession` can be used for connection\npooling:\n\n```python\nimport asyncio\n\nfrom aiohttp import ClientSession\nfrom aiolinkding import Client\n\n\nasync def main() -> None:\n    \"\"\"Use aiolinkding for fun and profit.\"\"\"\n    async with ClientSession() as session:\n        client = Client(\"http://127.0.0.1:8000\", \"token_abcde12345\", session=session)\n\n        # Get to work...\n\n\nasyncio.run(main())\n```\n\n# Contributing\n\n1. [Check for open features/bugs](https://github.com/bachya/aiolinkding/issues)\n  or [initiate a discussion on one](https://github.com/bachya/aiolinkding/issues/new).\n2. [Fork the repository](https://github.com/bachya/aiolinkding/fork).\n3. (_optional, but highly recommended_) Create a virtual environment: `python3 -m venv .venv`\n4. (_optional, but highly recommended_) Enter the virtual environment: `source ./.venv/bin/activate`\n5. Install the dev environment: `script/setup`\n6. Code your new feature or bug fix.\n7. Write tests that cover your new functionality.\n8. Run tests and ensure 100% code coverage: `nox -rs coverage`\n9. Update `README.md` with any new documentation.\n10. Add yourself to `AUTHORS.md`.\n11. Submit a pull request!\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/bachya/aiolinkding",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "aiolinkding",
            "package_url": "https://pypi.org/project/aiolinkding/",
            "platform": null,
            "project_url": "https://pypi.org/project/aiolinkding/",
            "project_urls": {
                "Homepage": "https://github.com/bachya/aiolinkding",
                "Repository": "https://github.com/bachya/aiolinkding"
            },
            "release_url": "https://pypi.org/project/aiolinkding/2022.5.2/",
            "requires_dist": [
                "aiohttp (>=3.8.0)"
            ],
            "requires_python": ">=3.8.0,<4.0.0",
            "summary": "A Python3, async interface to the linkding REST API",
            "version": "2022.5.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14529907,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a873754bf59ab559532cc58d55056e9b",
                    "sha256": "b29d20f7ab54124619e0b45f3d383ad706e0e2a07766926dc399920174e68f54"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a873754bf59ab559532cc58d55056e9b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 8297,
                "upload_time": "2022-05-26T18:10:31",
                "upload_time_iso_8601": "2022-05-26T18:10:31.514824Z",
                "url": "https://files.pythonhosted.org/packages/93/01/df03eaf58bebff493b188a0635ce3e8c202d1b20ec9d985d9aca4becf560/aiolinkding-2022.5.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a9c0501e7d5960b076d3073e29413db9",
                    "sha256": "0612e729e3ef01ccd8f94cb8d6e3ce5d7e6c6e5b329d548bf52423124cb99497"
                },
                "downloads": -1,
                "filename": "aiolinkding-2022.5.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a9c0501e7d5960b076d3073e29413db9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8.0,<4.0.0",
                "size": 10085,
                "upload_time": "2022-05-26T18:10:33",
                "upload_time_iso_8601": "2022-05-26T18:10:33.128822Z",
                "url": "https://files.pythonhosted.org/packages/71/71/2d01b964c79c7f84f02de55c7dbba746e27adbf6f256229f5a3ea8977211/aiolinkding-2022.5.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}