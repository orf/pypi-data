{
    "0.1.0": {
        "info": {
            "author": "skelmis",
            "author_email": "ethan@koldfusion.xyz",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10"
            ],
            "description": "Zonis\n---\n\nA coro based callback system for many to one IPC setups.\n\n#### Examples\n\n##### Simple\n\n*Client*\n\n```python\nimport asyncio\n\nfrom zonis.client import Client\n\nasync def main():\n    client = Client()\n    \n    @client.route()\n    async def ping():\n        return \"ping\"\n    \n    await client.start()\n\nasyncio.run(main())\n```\n\n*Server*\n\n```python\nimport json\nimport asyncio\n\nfrom fastapi import FastAPI\nfrom starlette.websockets import WebSocket, WebSocketDisconnect\n\nfrom zonis import BaseZonisException\nfrom zonis.server import Server\n\napp = FastAPI()\nserver = Server()\n\n@app.get(\"/\")\nasync def index():\n    response = await server.request(\"ping\")\n    return {\"data\": response} # Returns pong\n\n@app.websocket(\"/ws\")\nasync def websocket_endpoint(websocket: WebSocket):\n    await websocket.accept()\n    d: str = await websocket.receive_text()\n    try:\n        identifier = await server.parse_identify(json.loads(d), websocket)\n    except BaseZonisException:\n        print(\"WS failed to identify\")\n        return\n\n    try:\n        await asyncio.Future()\n    except WebSocketDisconnect:\n        server.disconnect(identifier)\n\n```\n\n---\n\n##### Multiple clients\n\n*Client one*\n\n```python\nimport asyncio\n\nfrom zonis.client import Client\n\nasync def main():\n    client = Client(identifier=\"one\")\n    \n    @client.route()\n    async def ping():\n        return f\"ping {client.identifier}\"\n    \n    await client.start()\n\nasyncio.run(main())\n```\n\n*Client two*\n\n```python\nimport asyncio\n\nfrom zonis.client import Client\n\nasync def main():\n    client = Client(identifier=\"two\")\n    \n    @client.route()\n    async def ping():\n        return f\"ping {client.identifier}\"\n    \n    await client.start()\n\nasyncio.run(main())\n```\n\n*Server*\n\n```python\nfrom fastapi import FastAPI\n\nfrom zonis.server import Server\n\napp = FastAPI()\nserver = Server()\n\n@app.on_event(\"startup\")\nasync def startup_event():\n    await server.start()\n\n@app.get(\"/\")\nasync def index():\n    response = await server.request_all(\"ping\")\n    return {\"data\": response} # Returns {\"data\": {\"one\": \"pong one\", \"two\": \"pong two\"}}\n\n@app.get(\"/one\")\nasync def one():\n    response = await server.request(\"ping\", client_identifier=\"one\")\n    return {\"data\": response} # Returns {\"data\": \"pong one\"}\n```",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "zonis",
            "package_url": "https://pypi.org/project/zonis/",
            "platform": null,
            "project_url": "https://pypi.org/project/zonis/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/zonis/0.1.0/",
            "requires_dist": [
                "websockets (>=10.4,<11.0)"
            ],
            "requires_python": ">=3.10,<4.0",
            "summary": "Agnostic IPC for Python programs ",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15751251,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1f9f0a37164f8d9bf10495a1bbf4c0d5",
                    "sha256": "5b858d54471d8aecac719392c398b9bdcf26b0bd359a1c616d409614e19b2092"
                },
                "downloads": -1,
                "filename": "zonis-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1f9f0a37164f8d9bf10495a1bbf4c0d5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10,<4.0",
                "size": 6774,
                "upload_time": "2022-11-13T13:42:23",
                "upload_time_iso_8601": "2022-11-13T13:42:23.537092Z",
                "url": "https://files.pythonhosted.org/packages/89/e7/ddce09777eec6e324c5f95db95755a3c9487311871f0a59d2d85c2aef2d1/zonis-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a535b5249d9f8d78981ef0063494b74e",
                    "sha256": "1d5120258bc49740f652d52cc6812a071543421734760d4b9532fbc54228dc98"
                },
                "downloads": -1,
                "filename": "zonis-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a535b5249d9f8d78981ef0063494b74e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10,<4.0",
                "size": 5428,
                "upload_time": "2022-11-13T13:42:25",
                "upload_time_iso_8601": "2022-11-13T13:42:25.402617Z",
                "url": "https://files.pythonhosted.org/packages/ba/88/9e4590aad9834e2fb248cd6fc5f1b9c33b64237dc77ee86cc46baff5cabc/zonis-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}