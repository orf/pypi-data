{
    "0.0.1": {
        "info": {
            "author": "mx51",
            "author_email": "opensource@mx51.io",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: Apache Software License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "# snowlock-python\n\n[![Github Actions](https://github.com/mx51/snowlock-python/actions/workflows/master.yml/badge.svg)](https://github.com/mx51/snowlock-python/actions/workflows/master.yml)\n[![PyPI](https://img.shields.io/pypi/v/snowlock)](https://pypi.org/project/snowlock/)\n[![License: Apache 2.0](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://github.com/mx51/snowlock-python/blob/master/LICENSE)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)\n\nLock management library for Snowflake.\n\n## Requirements\n---\nRequires Python 3.6 or above.\n## Usage\n---\nYou can install snowlock from [PyPI](https://pypi.org/project/snowlock/):\n```bash\npip install snowlock\n```\n\nTo acquire a lock using a Snowflake table. The lock table will be created if it does not exist and will default to using a table called `LOCK`.\n```py\nimport os\nimport snowflake.connector as sc\n\nfrom snowlock.lock import lock\n\nconnection = sc.connect(\n    account = os.getenv(\"SNOWFLAKE_ACCOUNT\"),\n    user = os.getenv(\"SNOWFLAKE_USER\"),\n    password = os.getenv(\"SNOWFLAKE_PASSWORD\"),\n    warehouse = os.getenv(\"SNOWFLAKE_WAREHOUSE\"),\n    database = os.getenv(\"SNOWFLAKE_DATABASE\"),\n    schema = os.getenv(\"SNOWFLAKE_SCHEMA\"),\n    **kwargs,\n)\n\nwith lock(client=\"test\", resource=\"test\", conn=connection, table=\"LOCK\") as session:\n    ## Do something using the locked resource\n\n```\n\n## Code of Conduct\n---\nAll contributors are expected to follow the [PyPA Code of Conduct](https://www.pypa.io/en/latest/code-of-conduct/).\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/mx51/snowlock-python",
            "keywords": "",
            "license": "Apache License 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "snowlock",
            "package_url": "https://pypi.org/project/snowlock/",
            "platform": null,
            "project_url": "https://pypi.org/project/snowlock/",
            "project_urls": {
                "Homepage": "https://github.com/mx51/snowlock-python"
            },
            "release_url": "https://pypi.org/project/snowlock/0.0.1/",
            "requires_dist": [
                "snowflake-connector-python",
                "black ; extra == 'test'",
                "mypy ; extra == 'test'",
                "pylint ; extra == 'test'"
            ],
            "requires_python": "",
            "summary": "Lock management library for Snowflake.",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15795085,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1d6633de44e0264b0ff3b864988a130d",
                    "sha256": "3934c5f7af675fd2465b54efb621da68cf21264c5f2cda0cc2c9604c2ca7ee37"
                },
                "downloads": -1,
                "filename": "snowlock-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1d6633de44e0264b0ff3b864988a130d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 8563,
                "upload_time": "2022-11-16T23:18:34",
                "upload_time_iso_8601": "2022-11-16T23:18:34.390934Z",
                "url": "https://files.pythonhosted.org/packages/6c/16/331f25be8fb381cc4da2712232437c7560fe84506a8839b1266d19bd77ae/snowlock-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "39b10c9fd33665056e6007354016b4fe",
                    "sha256": "19458e46c49f121c8e9299fd9d476929cbd99a2b6a4eb48db1a6adfa7bea228d"
                },
                "downloads": -1,
                "filename": "snowlock-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "39b10c9fd33665056e6007354016b4fe",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 10408,
                "upload_time": "2022-11-16T23:18:36",
                "upload_time_iso_8601": "2022-11-16T23:18:36.121113Z",
                "url": "https://files.pythonhosted.org/packages/c6/1c/51b59da7509a97304916a8421627d110b5660e58242e634d2982ef3385fa/snowlock-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}