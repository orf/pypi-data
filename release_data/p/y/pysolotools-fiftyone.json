{
    "0.3.22": {
        "info": {
            "author": "Unity Technologies",
            "author_email": "computer-vision@unity3d.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "\n<div align=\"center\">\n<p align=\"center\">\n\n**Fiftyone viewer for SOLO Datasets**\n---\n[![PyPI version](https://github.com/pytest-dev/pytest-cov/actions/workflows/test.yml/badge.svg)](https://github.com/Unity-Technologies/pysolotools/actions)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n</p>\n</div>\n\n<p align=\"center\">\n<img src=\"docs/images/overview_51.png\"/>\n    <br><i>Screenshot of the example solo dataset displayed in Voxel51</i><br>\n</p>\n\n# Introduction\n\npysolotools-fiftyone is a python package for viewing and interacting with solo datasets using the [Voxel51](https://voxel51.com/) viewer.\n\nThis package allows the user to create a new Voxel51 viewer in either a web browser or jupyter notebook.\n\nSOLO datasets are generated by Unity's [Perception package](https://github.com/Unity-Technologies/perception). Please see [here](https://github.com/Unity-Technologies/perception/blob/main/com.unity.perception/com.unity.perception/Documentation~/Schema/SoloSchema.md) for more information about the SOLO schema.\n\nIt supports the displaying of the following annotations:\n- Bounding Boxes\n- 3D Bounding Boxes\n- Keypoints\n- Instance Segmentation\n- Semantic Segmentation\n- Depth\n- Occlusion\n- Normals\n- Pixel Position\n\n# Pre-Requisites\n- Install [Anaconda](https://docs.anaconda.com/anaconda/install/) or [Miniconda](https://docs.conda.io/en/latest/miniconda.html) (recommended).\n- Install [pre-commit](https://pre-commit.com/).\n- Install [OpenEXR](https://www.openexr.com/).\n- Make sure `pip` is installed\n\n# Installation\n\n```shell\npip install pysolotools-fiftyone\n```\n\n# Execution\n\n## CLI\nThe Solo Fiftyone viewer is executed on the command line with the following command line:\n```shell\npysolotools-fiftyone examples/groceries\n```\n\nThis will launch a new fiftyone viewer in your web browser.\n\n## Notebooks\nSOLO FiftyOne can be executed in [Jupyter Notebooks](https://jupyter.org/).\n\nTo use in a notebook:\n```shell\nfrom pysolotools_fiftyone.solo_fiftyone import run_in_notebook\n\npath=\"./groceries\"\nrun_in_notebook(path)\n```\n\nAn [example notebook](examples/groceries_notebook.ipynb) has been included in the repository for your convenience.\n\nThe fiftyone will create an entry for each frame. Each entry will consist of a group with at least an RGB capture of the\nUnity game screen. If the dataset was created with Normals or Pixel Position labelers, the image group will also contain\na PNG image for each one of them. These 3 types create the background of the frame, and the *labels* are drawn on to of\nthem. The background image can be changed with the *group* dropdown located at the upper right of the screen.\n<p align=\"center\">\n<img src=\"docs/images/groups_51.png\"/>\n    <br><i>Group dropdown</i><br>\n</p>\n\nLabels are drawn on top of the background group image. These can be toggled on and off via the *Labels* selector left\nof the image.\n<p align=\"center\">\n<img src=\"docs/images/label_selector_51.png\"/>\n    <br><i>Label selector</i><br>\n</p>\n\n# Annotation Types\n## Bounding Boxes\n2D bounding boxes and label type for each visible labeled object in the image. Detailed information includes the amount\nof visible pixels of the object.\n<p align=\"center\">\n<img src=\"docs/images/bb_51.png\"/>\n    <br><i>Bounding boxes in Voxel51</i><br>\n</p>\n\n## Semantic Segmentation\nSemantic segmentation labels each pixel of an image with a label type.\n<p align=\"center\">\n<img src=\"docs/images/semantic_51.png\"/>\n    <br><i>Semantic segmentation in Voxel51</i><br>\n</p>\n\n## Instance Segmentation\nEach pixel of the image is labeled with the ID of the object that it represents.\n<p align=\"center\">\n<img src=\"docs/images/instance_51.png\"/>\n    <br><i>Instance segmentation in Voxel51</i><br>\n</p>\n\n## Keypoints\nDisplay keypoint (generally, but not limited to, a human skeleton) information.\n<p align=\"center\">\n<img src=\"docs/images/keypoints_51.png\"/>\n    <br><i>Keypoints in Voxel51</i><br>\n</p>\n\n## 3D Bounding Boxes\n3D volume of object in the scene.\n<p align=\"center\">\n<img src=\"docs/images/bb3d_51.png\"/>\n    <br><i>3D Bounding Boxes in Voxel51</i><br>\n</p>\n\n## Depth\nPixel distance from the camera in the scene displayed in [Plotly's virdis scale](https://plotly.com/python/builtin-colorscales/). The color scale goes from purple to\nyellow, with purple representing objects closer to the camera.\n<p align=\"center\">\n<img src=\"docs/images/depth_51.png\"/>\n    <br><i>Depth image in Voxel51, purple pixels are closer to the camera, yellow pixels are farthest away</i><br>\n</p>\n\n## Occlusion\nObject occlusion, or the amount of the object you can see, displayed in [Plotly's virdis scale](https://plotly.com/python/builtin-colorscales/). The scale goes from yellow (fully visible) to purple (fully occluded).\nHovering over a pixel will give you the exact occlusion value.\n<p align=\"center\">\n<img src=\"docs/images/occlusion_51.png\"/>\n    <br><i>Occlusion in Voxel51, yellow is fully visible, purple is fully occluded</i><br>\n</p>\n\n## Normals\nThe normals image displays an object's surface normal in a 3 channel image. The red channel represents the normal's x value,\nthe green channel represents the y channel, and the blue channel represents the normal's z value.\n<p align=\"center\">\n<img src=\"docs/images/normals_51.png\"/>\n    <br><i>Normals in Voxel51</i><br>\n</p>\n\n## Pixel Position\nThe pixel position image displays a pixels cartesian coordinate in the camera's space. The red channel represents the pixel position's x value,\nthe green channel represents the y channel, and the blue channel represents the z value. The image displayed is a 8bit per channel representation\nof a 32bit per channel file format, so some accuracy is lost in the display.\n<p align=\"center\">\n<img src=\"docs/images/pixel_position_51.png\"/>\n    <br><i>Pixel Position in Voxel51</i><br>\n</p>\n\n# Sample SOLO Datasets\nInside the `examples` directory there are two sample datasets\n- groceries: A dataset of grocery items that have all supported labels except keypoints\n- keypoints: A simple dataset that has keypoint annotations\n\n\n# Community and Feedback\n\nThe Unity Computer Vision tools are open-source, and we encourage and welcome contributions.\nIf you wish to contribute, be sure to review our [contribution guidelines](CONTRIBUTING.md)\nand [code of conduct](CODE_OF_CONDUCT.md).\n\n# Support\n\nFor feature requests, bugs, or other issues, please file a\n[GitHub issue](https://github.com/Unity-Technologies/pysolotools-fiftyone/issues)\nusing the provided templates we will investigate as soon as possible.\n\n# License\n[Apache License 2.0](LICENSE.md)\n\n# Know Issues\n- When running with a web browser, it will open with a subset of your frames visible.\nThe data is still being imported in the background, and refreshing the browser will\nupdate the viewer will the current set of loaded scenes.\n- To properly see some heatmap overlays (for instance depth and occlusion) make sure that you have Voxel51 settings (gear icon at the top of the screen) fields ***Color by*** set to **label** and ***Label opacity*** to highest (all of the way to the right)\n<p align=\"center\">\n<img src=\"docs/images/label_opacity_51.png\"/>\n</p>\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://https://github.com/Unity-Technologies/pysolotools-fiftyone",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pysolotools-fiftyone",
            "package_url": "https://pypi.org/project/pysolotools-fiftyone/",
            "platform": null,
            "project_url": "https://pypi.org/project/pysolotools-fiftyone/",
            "project_urls": {
                "Homepage": "https://https://github.com/Unity-Technologies/pysolotools-fiftyone"
            },
            "release_url": "https://pypi.org/project/pysolotools-fiftyone/0.3.22/",
            "requires_dist": [
                "fiftyone (>0.17.0)",
                "setuptools (>=59.1.1)",
                "pytest (>=6.2.2)",
                "pytest-cov (>=3.0.0)",
                "numpy (~=1.23.2)",
                "openexr (>=1.3.8)",
                "pillow (~=9.0.1)",
                "pyquaternion (>=0.9.9)",
                "pysolotools (>=0.10.0)"
            ],
            "requires_python": ">=3.8",
            "summary": "Voxel fiftyone integration for SOLO",
            "version": "0.3.22",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15844010,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "84f707fd6767bf25d977b588cff518e1",
                    "sha256": "174be5fd253fcfe4b076054b95466541770480811ba6045ed740e3275a2da7a6"
                },
                "downloads": -1,
                "filename": "pysolotools_fiftyone-0.3.22-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "84f707fd6767bf25d977b588cff518e1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 15820,
                "upload_time": "2022-11-21T18:28:43",
                "upload_time_iso_8601": "2022-11-21T18:28:43.799751Z",
                "url": "https://files.pythonhosted.org/packages/95/0c/aa1652e381c511735571f73c46e2e4055b7e7321ec37efd469f2e95e5091/pysolotools_fiftyone-0.3.22-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1f61c29cf7e3e473a8c2f057caf30621",
                    "sha256": "52a1424c854b866ca4ef354aeeecc1ab168b682d7448706cbe6c65df4591c762"
                },
                "downloads": -1,
                "filename": "pysolotools-fiftyone-0.3.22.tar.gz",
                "has_sig": false,
                "md5_digest": "1f61c29cf7e3e473a8c2f057caf30621",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 17376,
                "upload_time": "2022-11-21T18:28:45",
                "upload_time_iso_8601": "2022-11-21T18:28:45.599128Z",
                "url": "https://files.pythonhosted.org/packages/e0/06/660f279c12063c0f588c5ea2b6a8ceeac932e1cb638721f0e591cee839b3/pysolotools-fiftyone-0.3.22.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}