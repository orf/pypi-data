{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "Bruno Tenorio <b.nunes.bruno@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "This is the readme file for auger-OCA\n\nContact person: Bruno Tenorio\nb.nunes.bruno@gmail.com\n\n# USE \"pip install auger-oca\" TO INSTALL the auger-oca package \n#=====================================\n\n OCA stands for One-Center Approximation. It is a simple way to get Auger intensities bypassing the\n calculation of continuum wave function.\n \n Auger-OCA is a collection of python scripts (programs) to post-process a collection\n of 2-el reduced transition density matrices (also called Auger densities) generated \n by the RASSI module of OpenMolcas. It also requires the $project.rassi.h5 file in the background.\n\n The keyword TDYS must be used together with DYSON in your RASSI input calculation (see example below\n for C 1s edge).\n\n*---------\n&RASSI\n Nrof JobIphs =  5 all\n CIprint\n Ejob\n TDYS\n 1\n C 1s\n Dyson\n*---------\n\n Check auger_test/ folder for complete examples.\n\n*It simply runs as, for RAES (resonant Auger):\n \n $python3 $MOLCAS/Tools/auger_oca/auger_main.py -d $WorkDir --raes --spec &\n\n If non-resonant Auger (AES) of singlet final states:\n\n $python3 $MOLCAS/Tools/auger_oca/auger_main.py -d $WorkDir --aes --s --spec &\n\n If non-resonant Auger (AES) of triplet final states:\n\n $python3 $MOLCAS/Tools/auger_oca/auger_main.py -d $WorkDir --aes --t --spec &\n\n++ See also\n\n $python3 $MOLCAS/Tools/auger_oca/auger_main.py -h\n\n for more info and usage.\n\n+Important: 1) auger_main.py reads $project.rassi.h5 in the background. You must execute 'auger_main.py' \n from any directory where you have your $project.rassi.h5 file (either $CurrDir or $WorkDir work).\n 2) auge_main.py will create a directory called 'auger_outputs/' containing a collection of\n [Auger_OCA.r2TM_XXX_YYY_ZZZ.out,...] files. The binding energy and Auger intensities (plus other info)\n are writen on each of these files.\n 3) '--spec' is optional. One can also use a bash script ('oca.spectrum.sh' on auger_test folder) to collect the Auger {energy,intensity}\n from those [Auger_OCA.r2TM_XXX_YYY_ZZZ.out,...] files -> in a file called spectrum.out.\n 4) Again, don't forget to install the Auger OCA modules with 'pip install auger-oca'\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "auger-oca",
            "package_url": "https://pypi.org/project/auger-oca/",
            "platform": null,
            "project_url": "https://pypi.org/project/auger-oca/",
            "project_urls": {
                "Homepage": "https://gitlab.com/Molcas/OpenMolcas.git"
            },
            "release_url": "https://pypi.org/project/auger-oca/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "An Auger tool based on the one-center approximatio to be used with OpenMolcas",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15985533,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f57a172281691f576467d1a998f04316",
                    "sha256": "e21216c98de291b7885d4e30591caf3db79f8f6487925f17dbfff3790ac8ed03"
                },
                "downloads": -1,
                "filename": "auger_oca-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "f57a172281691f576467d1a998f04316",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 23723,
                "upload_time": "2022-12-04T13:47:59",
                "upload_time_iso_8601": "2022-12-04T13:47:59.427757Z",
                "url": "https://files.pythonhosted.org/packages/cc/90/cde6c80f2c773a40c71ca13e5370a93059e00ade5b0a7e5c74cfefec3fe5/auger_oca-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e6c7e85380d9a7addedf6339275a3e40",
                    "sha256": "251bc2e81b6481b0f319a4bc5e440626230cfa87bf30b3748ae1073d939d4c8a"
                },
                "downloads": -1,
                "filename": "auger_oca-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e6c7e85380d9a7addedf6339275a3e40",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 25711,
                "upload_time": "2022-12-04T13:48:01",
                "upload_time_iso_8601": "2022-12-04T13:48:01.301797Z",
                "url": "https://files.pythonhosted.org/packages/ee/a8/25ad8eeda495165d1b0d885c3ff52ea549350fc545ce8883c3e7e02a6c3e/auger_oca-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}