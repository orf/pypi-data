{
    "0.1.1": {
        "info": {
            "author": "DataJoint",
            "author_email": "info@vathes.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/datajoint/element-deeplabcut",
            "keywords": "neuroscience behavior deeplabcut datajoint",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "element-deeplabcut",
            "package_url": "https://pypi.org/project/element-deeplabcut/",
            "platform": null,
            "project_url": "https://pypi.org/project/element-deeplabcut/",
            "project_urls": {
                "Homepage": "https://github.com/datajoint/element-deeplabcut"
            },
            "release_url": "https://pypi.org/project/element-deeplabcut/0.1.1/",
            "requires_dist": [
                "datajoint (>=0.13)",
                "deeplabcut"
            ],
            "requires_python": "",
            "summary": "DataJoint Element for Continuous Behavior Tracking via DeepLabCut",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15363108,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d9951888a1b2974b8f6496223cfc3c70",
                    "sha256": "ff5845df15da1b221c9212dec498517d955437cbabeb61f07391e395982024dd"
                },
                "downloads": -1,
                "filename": "element_deeplabcut-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d9951888a1b2974b8f6496223cfc3c70",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 17839,
                "upload_time": "2022-07-06T18:39:16",
                "upload_time_iso_8601": "2022-07-06T18:39:16.080339Z",
                "url": "https://files.pythonhosted.org/packages/e2/9d/f284e4cf771c36b3114699d9a3517e583728fcc99e62b48e007c7913a9aa/element_deeplabcut-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4d1e9347f067c2a0c848d5ec1d6ce2dd",
                    "sha256": "a8af52b8793dcd36e91071c008d9de6aeb96d1fcc77445ecd9dc2355c1b5bb33"
                },
                "downloads": -1,
                "filename": "element-deeplabcut-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "4d1e9347f067c2a0c848d5ec1d6ce2dd",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17390,
                "upload_time": "2022-07-06T18:39:19",
                "upload_time_iso_8601": "2022-07-06T18:39:19.773767Z",
                "url": "https://files.pythonhosted.org/packages/83/ce/7407948fb98ff73f1aa2885668609f92f361dfd05204a1e290adc72b4229/element-deeplabcut-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "DataJoint",
            "author_email": "info@vathes.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# DataJoint Element - DeepLabCut\n\nThis repository features a DataJoint schema for pose estimation via ***DeepLabCut***.\nThe pipeline presented here is not a complete pipeline by itself, but rather a modular\ndesign of tables and dependencies specific to the behavior tracking workflow. This\nmodular pipeline element can be flexibly attached downstream to any particular design\nof experiment session, thus assembling a fully functional behavior pipeline (see the\nexample [workflow-deeplabcut](https://github.com/datajoint/workflow-deeplabcut)).\n\nThis Element currently supports single-animal, single-camera 2D models, and does not yet\nsupport multi-animal or multi-camera models. This Element does not offer any features\nfor labeling training data. Users should to use native DeepLabCut tools for\nintitializing a project and labeling training data.\n\n+ See the [Element DeepLabCut documentation](https://elements.datajoint.org/description/deeplabcut/) for the background information and development timeline.\n\n+ For more information on the DataJoint Elements project, please visit https://elements.datajoint.org.  This work is supported by the National Institutes of Health.\n\n## Element architecture\n\n![element-deeplabcut diagram](images/diagram_dlc.svg)\n\nAs the diagram depicts, the DeepLabCut element starts immediately downstream from\na ***Session*** table, which is modeled in our \n[workflow pipeline](https://github.com/datajoint/workflow-deeplabcut/blob/main/workflow_deeplabcut/pipeline.py).\nThe following tables are further downstream across two schemas:\n\n- `train` schema: Tables related to model training.\n   + ***VideoSet***: The set of files corresponding to a training dataset.\n   + ***TrainingParamSet***: A collection of model training parameters, represented by an index.\n   + ***TrainingTask***: A set of tasks specifying model training methods.\n   + ***ModelTraining***: A record of training iterations launched by ***TrainingTask***.\n- `model` schema: Tables related to DeepLabCut models and pose estimation.\n   + ***VideoRecording***: Video(s) from one recording session, for pose estimation.\n   + ***BodyPart***: Unique body parts (a.k.a. joints) and descriptions thereof.\n   + ***Model***: A central table for storing unique models.\n   + ***ModelEvaluation***: Evaluation results for each model.\n   + ***PoseEstimationTask***: A series of pose estimation tasks to be completed. \n     Pairings of video recordings with models to be use for pose estimation.\n   + ***PoseEstimation***: Results of pose estimation using a given model. \n\n## Installation\n\n+ Install `element-deeplabcut`\n    ```\n    pip install element-deeplabcut\n    ```\n\n+ Upgrade `element-deeplabcut` previously installed with `pip`\n    ```\n    pip install --upgrade element-deeplabcut\n    ```\n\n+ Install `element-interface`\n\n    + `element-interface` is a dependency of `element-deeplabcut`, however it is not\n      contained within `requirements.txt`.\n\n    ```\n    pip install \"element-interface @ git+https://github.com/datajoint/element-interface\"\n    ```\n\n## Usage\n\n### Element activation\n\nTo activate the `element-deeplabcut`, one needs to provide:\n\n1. Schema names\n    + optionally, a schema name for the `train` module.\n    + a schema name for the `model` module.\n2. Upstream tables\n    + `Session`: A set of keys identifying a recording session (see \n      [Element-Session](https://github.com/datajoint/element-session)).\n    + `Device`: A reference table linked `VideoRecording` to specify camera information.\n3. Utility functions\n    + `get_dlc_root_data_dir()` to provide a root directory for a given machine,\n    + optionally, `get_dlc_processed_data_dir()` to provide an output directory.\n\nFor more detail, check the docstring of the `element-deeplabcut`:\n```python\n    help(train.activate)\n    help(model.activate)\n```\n\n### Example usage\n\n- See [our workflow](https://github.com/datajoint/workflow-deeplabcut) for an example usage of this DeepLabCut Element. \n- See our YouTube tutorial for a walkthrough of the schemas and functions:\n\n[![YouTube tutorial](https://img.youtube.com/vi/8FDjTuQ52gQ/0.jpg)](https://www.youtube.com/watch?v=8FDjTuQ52gQ)\n\n### Exporting to NWB\n\nThe `export/nwb.py` module calls [DLC2NWB](https://github.com/DeepLabCut/DLC2NWB/) to\nsave output generated by Element DeepLabCut as NWB files. \nThe main function, `dlc_session_to_nwb`, contains a flag to control calling a parallel \nfunction in [Element Session](https://github.com/datajoint/element-session/blob/main/element_session/export/nwb.py).\n\nBefore using, please install [DLC2NWB](https://github.com/DeepLabCut/DLC2NWB/)\n\n```bash\npip install dlc2nwb\n```\n\nThen, call the export function using keys from the `PoseEstimation` table.\n\n```python\nfrom element_deeplabcut import model\nfrom element_session import session\nfrom element_deeplabcut.export import dlc_session_to_nwb\n\nsession_key = (session.Session & CONDITION)\npose_key = (model.PoseEstimation & session_key).fetch1('KEY')\ndlc_session_to_nwb(pose_key, use_element_session=True, session_kwargs=SESSION_KWARGS)\n```\n\nHere, `CONDITION` should uniquely identify a session and `SESSION_KWARGS` can be any of\nthe items described in the docstring of `element_session.export.nwb.session_to_nwb`\nas a dictionary.\n\nAs DLC2NWB does not currently offer a separate function for generating `PoseEstimation`\nobjects (see [ndx-pose](https://github.com/rly/ndx-pose)), the current solution is to\nallow DLC2NWB to write to disk, and optionally rewrite this file using metadata provided\nby the export function in Element Session.\n\n## Citation\n\n+ If your work uses DataJoint and DataJoint Elements, please cite the respective Research Resource Identifiers (RRIDs) and manuscripts.\n\n+ DataJoint for Python or MATLAB\n    + Yatsenko D, Reimer J, Ecker AS, Walker EY, Sinz F, Berens P, Hoenselaar A, Cotton RJ, Siapas AS, Tolias AS. DataJoint: managing big scientific data using MATLAB or Python. bioRxiv. 2015 Jan 1:031658. doi: https://doi.org/10.1101/031658\n\n    + DataJoint ([RRID:SCR_014543](https://scicrunch.org/resolver/SCR_014543)) - DataJoint for `<Select Python or MATLAB>` (version `<Enter version number>`)\n\n+ DataJoint Elements\n    + Yatsenko D, Nguyen T, Shen S, Gunalan K, Turner CA, Guzman R, Sasaki M, Sitonic D, Reimer J, Walker EY, Tolias AS. DataJoint Elements: Data Workflows for Neurophysiology. bioRxiv. 2021 Jan 1. doi: https://doi.org/10.1101/2021.03.30.437358\n\n    + DataJoint Elements ([RRID:SCR_021894](https://scicrunch.org/resolver/SCR_021894)) - Element DeepLabCut (version `<Enter version number>`)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/datajoint/element-deeplabcut",
            "keywords": "neuroscience behavior deeplabcut datajoint",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "element-deeplabcut",
            "package_url": "https://pypi.org/project/element-deeplabcut/",
            "platform": null,
            "project_url": "https://pypi.org/project/element-deeplabcut/",
            "project_urls": {
                "Homepage": "https://github.com/datajoint/element-deeplabcut"
            },
            "release_url": "https://pypi.org/project/element-deeplabcut/0.2.0/",
            "requires_dist": [
                "datajoint (>=0.13)",
                "deeplabcut (>=2.2.1.1)",
                "opencv-python-headless"
            ],
            "requires_python": "",
            "summary": "DataJoint Element for Continuous Behavior Tracking via DeepLabCut",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15363108,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "05d7873bf5b6e01301426cb2dd92addf",
                    "sha256": "36a2884526982c6b1ec5b675461ee08a6c0b687e2a1ca5ed8cb6abfc57e48e0b"
                },
                "downloads": -1,
                "filename": "element_deeplabcut-0.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "05d7873bf5b6e01301426cb2dd92addf",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 21242,
                "upload_time": "2022-10-10T15:47:15",
                "upload_time_iso_8601": "2022-10-10T15:47:15.772248Z",
                "url": "https://files.pythonhosted.org/packages/6d/43/4c711a1b38c60393c248dd5dd68da92e3a2010447204a3d4ea8bee611720/element_deeplabcut-0.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8b4fb90bb30e9f259a4cfeba959a18f5",
                    "sha256": "7fa30365e0445434749dfc5f13ab6e18473318a6c11d0bbb1b3b1e1313070f08"
                },
                "downloads": -1,
                "filename": "element-deeplabcut-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "8b4fb90bb30e9f259a4cfeba959a18f5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 21135,
                "upload_time": "2022-10-10T15:47:17",
                "upload_time_iso_8601": "2022-10-10T15:47:17.969185Z",
                "url": "https://files.pythonhosted.org/packages/7b/d6/747cb340b933efc6c037951398445ceb30428baf1e737ef5aa7ac6c1dc8b/element-deeplabcut-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}