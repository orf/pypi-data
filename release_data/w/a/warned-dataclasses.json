{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "Angus L'Herrou <contact@lru.dev>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# warned-dataclasses\n\nThis package adds functionality to Python's `dataclasses` feature to \nemit a warning or raise an exception if an explicit value for an \nattribute was used to initialize a dataclass but some user-specified \ncondition that that attribute logically relies on was not met.\n\n## Motivation\n\nThe primary use case for this package is for tools (such as \ud83e\udd17 \nTransformers) that use `dataclasses` for command-line parsing, where \ndifferent command-line parameters make sense in different scenarios.\n\nIn the simple case, a programmer can just emit a warning or raise an \nexception if an explicit value was passed to one of these parameters in \na context where it is not appropriate. However, the programmer may also \nwant to set sensible defaults for such parameters when they are \nappropriate.\n\nOne approach to this problem is to compare the runtime value against the \ndefault value, and assume an explicit value was passed if they do not \nmatch. However, this approach presents two concerns: \n\n1. complex and\ndifficult-to-introspect `default_factory` objects may be used in the\ndataclass's fields\n2. the programmer may want to warn the user even if they explicitly pass \nthe default value\n\nThis package presents a solution to both of these problems.\n\n## Usage\n\nUsing this package is simple. The following (contrived) example should \nillustrate the usage:\n\n```python\nimport json\n\nfrom dataclasses import dataclass, field\n\nfrom warned_dataclasses import Warned, warned, satisfy, invoke\n\n\n@warned\n@dataclass\nclass User:\n    id: int\n    admin_level: Warned[int, 'admin_only'] = field(default=1)\n\n    \ndef check_admin(user: User):\n    with open('admins.json', 'r') as admins_fd:\n        admins = json.load(admins_fd)\n    \n    if user.id not in admins:\n        # uh-oh, user 123 is not an admin\n        invoke(user, 'admin_only')\n\n\nif __name__ == '__main__':\n    user = User(123, admin_level=2)\n    check_admin(user)\n```\n\nBy default, `@warned` will emit a warning to the current `logging` \nlogger. To raise an exception instead, use `@warned(error_on_invoke=True)`.\n\nA plain `@warned` can be used with or without parentheses.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "warned-dataclasses",
            "package_url": "https://pypi.org/project/warned-dataclasses/",
            "platform": null,
            "project_url": "https://pypi.org/project/warned-dataclasses/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/warned-dataclasses/0.1.0/",
            "requires_dist": [
                "typing-extensions ; python_version < \"3.10\""
            ],
            "requires_python": ">=3.8",
            "summary": "",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16029139,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b907cc64b15006758479f822a8017c43",
                    "sha256": "acd0837abd383aa80ee96ca90532842ca2b1345d8ca16f1096a9f6facd6aa79c"
                },
                "downloads": -1,
                "filename": "warned_dataclasses-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b907cc64b15006758479f822a8017c43",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 8389,
                "upload_time": "2022-12-08T03:02:39",
                "upload_time_iso_8601": "2022-12-08T03:02:39.118903Z",
                "url": "https://files.pythonhosted.org/packages/52/40/6b45f5412bf2524c1c7eb222a7e2e72845906af9b3c5afafab64fa3badb0/warned_dataclasses-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ff9eed1696de3503c86a847cdee04543",
                    "sha256": "0584d41c4666dad0ab9f3484121ce572685c95a1ad6dfddf3dc70b82f8f02a10"
                },
                "downloads": -1,
                "filename": "warned-dataclasses-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ff9eed1696de3503c86a847cdee04543",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 8154,
                "upload_time": "2022-12-08T03:02:40",
                "upload_time_iso_8601": "2022-12-08T03:02:40.851844Z",
                "url": "https://files.pythonhosted.org/packages/88/c9/d592ee39501fa5269f25e88766843d27edba3f9f4dafb4e8278565409204/warned-dataclasses-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}