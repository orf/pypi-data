{
    "2.2.2": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "1439313331@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitcode.net/linjing_zyq/optimtool",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": "",
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Homepage": "https://gitcode.net/linjing_zyq/optimtool"
            },
            "release_url": "https://pypi.org/project/optimtool/2.2.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Tools for Mathematical Optimization Region.",
            "version": "2.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ff4ac6ea0fb0917d6b72c11c277cbc2d",
                    "sha256": "0b77f465404bc77c0a2210354fa17f914917066556434abc74af53ae631c528a"
                },
                "downloads": -1,
                "filename": "optimtool-2.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "ff4ac6ea0fb0917d6b72c11c277cbc2d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 9138,
                "upload_time": "2021-12-28T13:26:34",
                "upload_time_iso_8601": "2021-12-28T13:26:34.160206Z",
                "url": "https://files.pythonhosted.org/packages/de/62/3725c8224ff153cd82c8057f8c1270484cb40d1d8426cd61ca890c0bf38d/optimtool-2.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.0": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "1439313331@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitcode.net/linjing_zyq/optimtool",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": "",
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Homepage": "https://gitcode.net/linjing_zyq/optimtool"
            },
            "release_url": "https://pypi.org/project/optimtool/2.3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Tools for Mathematical Optimization Region.",
            "version": "2.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "36261e93b1b78bb629ce35ec52536692",
                    "sha256": "833102930e4afdbe2ce6b7b769709df865968ae5cc552bb7f2deeb597a7a3381"
                },
                "downloads": -1,
                "filename": "optimtool-2.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "36261e93b1b78bb629ce35ec52536692",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 12863,
                "upload_time": "2021-12-28T17:15:12",
                "upload_time_iso_8601": "2021-12-28T17:15:12.945358Z",
                "url": "https://files.pythonhosted.org/packages/1e/bf/b3dcb05d6df4b047ae8595d02e95b92dbe9b38104f5b0c45d6a6839c0752/optimtool-2.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.1rc0": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "1439313331@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitcode.net/linjing_zyq/optimtool",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": "",
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Homepage": "https://gitcode.net/linjing_zyq/optimtool"
            },
            "release_url": "https://pypi.org/project/optimtool/2.3.1rc0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Tools for Mathematical Optimization Region.",
            "version": "2.3.1rc0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "98512f5cab817d6970c0787dcf77b0ee",
                    "sha256": "77fab0155a10f9013ae75121f53413ea9345cd85833cc3187fa2990f14c54ecd"
                },
                "downloads": -1,
                "filename": "optimtool-2.3.1rc0.tar.gz",
                "has_sig": false,
                "md5_digest": "98512f5cab817d6970c0787dcf77b0ee",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 13288,
                "upload_time": "2021-12-28T21:33:43",
                "upload_time_iso_8601": "2021-12-28T21:33:43.876906Z",
                "url": "https://files.pythonhosted.org/packages/62/ef/1db68de7280ea9967e8d40426ea3845b4e2a8398d42ccfa9699acba069f0/optimtool-2.3.1rc0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.4": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "1439313331@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitcode.net/linjing_zyq/optimtool",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": "",
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Homepage": "https://gitcode.net/linjing_zyq/optimtool"
            },
            "release_url": "https://pypi.org/project/optimtool/2.3.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Tools for Mathematical Optimization Region.",
            "version": "2.3.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b6e0043136c39951ba059f4e0c14e51f",
                    "sha256": "03dcf3f8eb2e2dc17650396f7de61e9eb41e516dfd9d4169c0b37381d4fadd11"
                },
                "downloads": -1,
                "filename": "optimtool-2.3.4.tar.gz",
                "has_sig": false,
                "md5_digest": "b6e0043136c39951ba059f4e0c14e51f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15386,
                "upload_time": "2022-01-09T14:38:11",
                "upload_time_iso_8601": "2022-01-09T14:38:11.428144Z",
                "url": "https://files.pythonhosted.org/packages/30/85/1a4a947b3b12c11f229957f57876390f2d554e5760e11a9c183f777ac7fc/optimtool-2.3.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3.5": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "1439313331@qq.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/linjing-lab/optimtool",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Homepage": "https://github.com/linjing-lab/optimtool"
            },
            "release_url": "https://pypi.org/project/optimtool/2.3.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The fundamental package for scientific research in optimization field.",
            "version": "2.3.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6a83ecebab55e55cec6443f38b0fba1d",
                    "sha256": "3d836d5c8c8f88d01e9f5dbc659fc485b3bda218211c84a76f2a1d6d0b73b1c1"
                },
                "downloads": -1,
                "filename": "optimtool-2.3.5.tar.gz",
                "has_sig": false,
                "md5_digest": "6a83ecebab55e55cec6443f38b0fba1d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 15027,
                "upload_time": "2022-04-25T05:45:06",
                "upload_time_iso_8601": "2022-04-25T05:45:06.021477Z",
                "url": "https://files.pythonhosted.org/packages/ad/8b/7b19a3d2bb50c39e8818403f3ea030cc2c602da526c6fe504d81e58d8788/optimtool-2.3.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.0": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "linjing010729@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Scientific/Engineering :: Mathematics",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/linjing-lab/optimtool/tags",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/linjing-lab/optimtool",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Download": "https://github.com/linjing-lab/optimtool/tags",
                "Homepage": "https://github.com/linjing-lab/optimtool",
                "Source": "https://github.com/linjing-lab/optimtool/tree/master/optimtool/",
                "Tracker": "https://github.com/linjing-lab/optimtool/issues"
            },
            "release_url": "https://pypi.org/project/optimtool/2.4.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The fundamental package for scientific research in optimization.",
            "version": "2.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "672795265d4d1a64c7b8945ec887bf9e",
                    "sha256": "6d619a0828513150b6b73a2904463841267b2f021682d8310336f0ea2013466f"
                },
                "downloads": -1,
                "filename": "optimtool-2.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "672795265d4d1a64c7b8945ec887bf9e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 24086,
                "upload_time": "2022-11-08T13:30:14",
                "upload_time_iso_8601": "2022-11-08T13:30:14.650262Z",
                "url": "https://files.pythonhosted.org/packages/c2/1d/e652354cee7569db0242936b5d93bbc5b061682ee1721b0c111f7243235a/optimtool-2.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.1": {
        "info": {
            "author": "\u6797\u666f",
            "author_email": "linjing010729@163.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Intended Audience :: Developers",
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering",
                "Topic :: Scientific/Engineering :: Mathematics",
                "Topic :: Software Development",
                "Topic :: Software Development :: Libraries",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "<h1 align=\"center\">optimtool</h1>\r\n\r\n<p align=\"center\">\r\n<b>The fundamental package for scientific research in optimization.<sup><a href=\"https://github.com/linjing-lab/optimtool/tree/master/examples/doc\">[?]</a></sup></b>\r\n</p>\r\n\r\n<p align='center'>\r\n    <a href='https://www.oscs1024.com/cd/1527939640076619776?sign=522150ac'>\r\n        <img src='https://www.oscs1024.com/platform/badge/linjing-lab/optimtool.svg?size=small' alt='OSCS Status' height='20'/>\r\n    </a>\r\n    <a href='https://pepy.tech/project/optimtool'>\r\n        <img src=\"https://pepy.tech/badge/optimtool\" alt=\"Total Downloads\" height=\"20\"/>\r\n    </a>\r\n    <a href='https://pepy.tech/project/optimtool'>\r\n        <img src=\"https://pepy.tech/badge/optimtool/month\" alt=\"Monthly Downloads\" height=\"20\"/> \r\n    </a>\r\n    <a href='https://code.visualstudio.com/'>\r\n        <img src=\"https://pepy.tech/badge/optimtool/week\" alt=\"Weekly Downloads\" height=\"20\"/> \r\n    </a>\r\n</p>\r\n\r\nIf you want to participate in the development, please follow the [baseline](./baseline.md).\r\n\r\n\u5982\u679c\u4f60\u60f3\u53c2\u4e0e\u5f00\u53d1\uff0c\u8bf7\u9075\u5faa[baseline](./baseline.md)\u3002\r\n\r\n\u7b80\u4f53\u4e2d\u6587 | [English](./README_en.md)\r\n\r\n## \u9879\u76ee\u4ecb\u7ecd\r\n\r\n&emsp;&emsp;optimtool\u91c7\u7528\u4e86\u5317\u4eac\u5927\u5b66\u51fa\u7248\u7684\u300a\u6700\u4f18\u5316\uff1a\u5efa\u6a21\u3001\u7b97\u6cd5\u4e0e\u7406\u8bba\u300b\u8fd9\u672c\u4e66\u4e2d\u7684\u90e8\u5206\u7406\u8bba\u65b9\u6cd5\u6846\u67b6\uff0c\u8fd0\u7528\u4e86 [`Numpy`](https://github.com/numpy/numpy) \u5305\u9ad8\u6548\u5904\u7406\u6570\u7ec4\u95f4\u8fd0\u7b97\u7b49\u7684\u7279\u6027\uff0c\u5de7\u5999\u5730\u5e94\u7528\u4e86 [`Sympy`](https://github.com/sympy/sympy) \u5185\u90e8\u652f\u6301\u7684 .jacobian \u7b49\u65b9\u6cd5\uff0c\u5e76\u7ed3\u5408 Python \u5185\u7f6e\u51fd\u6570 dict \u4e0e zip \u5b9e\u73b0\u4e86 Sympy \u77e9\u9635\u5230 Numpy \u77e9\u9635\u7684\u8f6c\u6362\uff0c\u6700\u7ec8\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u7528\u4e8e\u6700\u4f18\u5316\u79d1\u5b66\u7814\u7a76\u9886\u57df\u7684Python\u5de5\u5177\u5305\u3002 \u7814\u7a76\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684 [`pip`](https://github.com/pypa/pip) \u6307\u4ee4\u8fdb\u884c\u4e0b\u8f7d\u4e0e\u4f7f\u7528\u3002\r\n\r\n## \u9879\u76ee\u7ed3\u6784\r\n\r\n```textile\r\n|- optimtool\r\n    |-- constrain\r\n        |-- __init__.py\r\n        |-- equal.py\r\n        |-- mixequal.py\r\n        |-- unequal.py\r\n    |-- example\r\n        |-- __init__.py\r\n        |-- Lasso.py\r\n        |-- WanYuan.py\r\n    |-- hybrid\r\n        |-- __init__.py\r\n        |-- approximate_point_gradient.py\r\n    |-- unconstrain\r\n        |-- __init__.py\r\n        |-- gradient_descent.py\r\n        |-- newton.py\r\n        |-- newton_quasi.py\r\n        |-- nonlinear_least_square.py\r\n        |-- trust_region.py  \r\n    |-- __init__.py\r\n    |-- _convert.py\r\n    |-- _drive.py\r\n    |-- _kernel.py\r\n    |-- _search.py\r\n    |-- _typing.py\r\n    |-- _utils.py\r\n    |-- _version.py\r\n```\r\n&emsp;&emsp;\u56e0\u4e3a\u5728\u6c42\u89e3\u4e0d\u540c\u7684\u76ee\u6807\u51fd\u6570\u7684\u5168\u5c40\u6216\u5c40\u90e8\u6536\u655b\u70b9\u65f6\uff0c\u4e0d\u540c\u7684\u6c42\u53d6\u6536\u655b\u70b9\u7684\u65b9\u6cd5\u4f1a\u6709\u4e0d\u540c\u7684\u6536\u655b\u6548\u7387\u4ee5\u53ca\u4e0d\u540c\u7684\u9002\u7528\u8303\u56f4\uff0c\u800c\u4e14\u5728\u7814\u7a76\u8fc7\u7a0b\u4e2d\u4e0d\u540c\u9886\u57df\u7684\u7814\u7a76\u65b9\u6cd5\u88ab\u4e0d\u65ad\u5730\u63d0\u51fa\u3001\u4fee\u6539\u3001\u5b8c\u5584\u3001\u6269\u5145\uff0c\u6240\u4ee5\u8fd9\u4e9b\u65b9\u6cd5\u6210\u4e86\u73b0\u5728\u4eba\u4eec\u53e3\u4e2d\u7684`\u6700\u4f18\u5316\u65b9\u6cd5`\u3002 \u6b64\u9879\u76ee\u4e2d\u7684\u6240\u6709\u5185\u90e8\u652f\u6301\u7684\u7b97\u6cd5\uff0c\u90fd\u662f\u5728\u8303\u6570\u3001\u5bfc\u6570\u3001\u51f8\u96c6\u3001\u51f8\u51fd\u6570\u3001\u5171\u8f6d\u51fd\u6570\u3001\u6b21\u68af\u5ea6\u548c\u6700\u4f18\u5316\u7406\u8bba\u7b49\u57fa\u7840\u65b9\u6cd5\u8bba\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u8bbe\u8ba1\u4e0e\u5b8c\u5584\u7684\u3002\r\n\r\n&emsp;&emsp;optimtool\u5185\u7f6e\u4e86\u8bf8\u5982Barzilar Borwein\u975e\u5355\u8c03\u68af\u5ea6\u4e0b\u964d\u6cd5\u3001\u4fee\u6b63\u725b\u987f\u6cd5\u3001\u6709\u9650\u5185\u5b58BFGS\u65b9\u6cd5\u3001\u622a\u65ad\u5171\u8f6d\u68af\u5ea6\u6cd5-\u4fe1\u8d56\u57df\u65b9\u6cd5\u3001\u9ad8\u65af-\u725b\u987f\u6cd5\u7b49\u65e0\u7ea6\u675f\u4f18\u5316\u9886\u57df\u6536\u655b\u6548\u7387\u4e0e\u6027\u8d28\u8f83\u597d\u7684\u7b97\u6cd5\uff0c\u4ee5\u53ca\u7528\u4e8e\u89e3\u51b3\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u7684\u4e8c\u6b21\u7f5a\u51fd\u6570\u6cd5\u3001\u589e\u5e7f\u62c9\u683c\u6717\u65e5\u6cd5\u7b49\u7b97\u6cd5\u3002\r\n\r\n## \u5f00\u59cb\u4f7f\u7528\r\n\r\n### \u65e0\u7ea6\u675f\u4f18\u5316\u7b97\u6cd5\uff08unconstrain\uff09\r\n\r\n```python\r\nimport optimtool.unconstrain as ou\r\nou.[\u65b9\u6cd5\u540d].[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n#### \u68af\u5ea6\u4e0b\u964d\u6cd5\uff08gradient_descent\uff09\r\n\r\n```python\r\nou.gradient_descent.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                 | \u89e3\u91ca                                   |\r\n| ----------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------ |\r\n| solve(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-10, k: int=0) -> OutputType                                                             | \u901a\u8fc7\u89e3\u65b9\u7a0b\u7684\u65b9\u5f0f\u6765\u6c42\u89e3\u7cbe\u786e\u6b65\u957f                      |\r\n| steepest(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-10, k: int=0) -> OutputType                                           | \u4f7f\u7528\u7ebf\u641c\u7d22\u65b9\u6cd5\u6c42\u89e3\u975e\u7cbe\u786e\u6b65\u957f\uff08\u9ed8\u8ba4\u4f7f\u7528wolfe\u7ebf\u641c\u7d22\uff09         |\r\n| barzilar_borwein(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"Grippo\", c1: float=0.6, beta: float=0.6, alpha: float=1, epsilon: float=1e-10, k: int=0) -> OutputType | \u4f7f\u7528Grippo\u4e0eZhangHanger\u63d0\u51fa\u7684\u975e\u5355\u8c03\u7ebf\u641c\u7d22\u65b9\u6cd5\u66f4\u65b0\u6b65\u957f |\r\n\r\n#### \u725b\u987f\u6cd5\uff08newton)\r\n\r\n```python\r\nou.newton.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                             | \u89e3\u91ca                                |\r\n| ----------------------------------------------------------------------------------------------- | --------------------------------- |\r\n| classic(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-10, k: int=0) -> OutputType                        | \u901a\u8fc7\u76f4\u63a5\u5bf9\u76ee\u6807\u51fd\u6570\u4e8c\u9636\u5bfc\u77e9\u9635\uff08\u6d77\u745f\u77e9\u9635\uff09\u8fdb\u884c\u6c42\u9006\u6765\u83b7\u53d6\u4e0b\u4e00\u6b65\u7684\u6b65\u957f |\r\n| modified(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: int=20, epsilon: float=1e-10, k: int=0) -> OutputType | \u4fee\u6b63\u5f53\u524d\u6d77\u745f\u77e9\u9635\u4fdd\u8bc1\u5176\u6b63\u5b9a\u6027\uff08\u76ee\u524d\u53ea\u63a5\u5165\u4e86\u4e00\u79cd\u4fee\u6b63\u65b9\u6cd5\uff09      |\r\n| CG(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-6, k: int=0) -> OutputType              | \u91c7\u7528\u725b\u987f-\u5171\u8f6d\u68af\u5ea6\u6cd5\u6c42\u89e3\u68af\u5ea6\uff08\u975e\u7cbe\u786e\u725b\u987f\u6cd5\u7684\u4e00\u79cd\uff09         |\r\n\r\n#### \u62df\u725b\u987f\u6cd5\uff08newton_quasi\uff09\r\n\r\n```python\r\nou.newton_quasi.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                          | \u89e3\u91ca              |\r\n| -------------------------------------------------------------------------------------------- | --------------- |\r\n| bfgs(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=20, epsilon: float=1e-10, k: int=0) -> OutputType  | BFGS\u65b9\u6cd5\u66f4\u65b0\u6d77\u745f\u77e9\u9635    |\r\n| dfp(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=20, epsilon: float=1e-4, k: int=0) -> OutputType    | DFP\u65b9\u6cd5\u66f4\u65b0\u6d77\u745f\u77e9\u9635     |\r\n| L_BFGS(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", m: float=6, epsilon: float=1e-10, k: int=0) -> OutputType | \u53cc\u5faa\u73af\u65b9\u6cd5\u66f4\u65b0BFGS\u6d77\u745f\u77e9\u9635 |\r\n\r\n#### \u975e\u7ebf\u6027\u6700\u5c0f\u4e8c\u4e58\u6cd5\uff08nonlinear_least_square\uff09\r\n\r\n```python\r\nou.nonlinear_least_square.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                                  | \u89e3\u91ca                         |\r\n| ---------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------- |\r\n| gauss_newton(funcr: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"wolfe\", epsilon: float=1e-10, k: int=0) -> OutputType                                                        | \u9ad8\u65af-\u725b\u987f\u63d0\u51fa\u7684\u65b9\u6cd5\u6846\u67b6\uff0c\u5305\u62ecOR\u5206\u89e3\u7b49\u64cd\u4f5c     |\r\n| levenberg_marquardt(funcr: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, m: float=100, lamk: float=1, eta: float=0.2, p1: float=0.4, p2: float=0.9, gamma1: float=0.7, gamma2: float=1.3, epsilon: float=1e-10, k: int=0) -> OutputType | Levenberg Marquardt\u63d0\u51fa\u7684\u65b9\u6cd5\u6846\u67b6 |\r\n\r\n#### \u4fe1\u8d56\u57df\u65b9\u6cd5\uff08trust_region\uff09\r\n\r\n```python\r\nou.trust_region.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                               | \u89e3\u91ca                  |\r\n| ------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\r\n| steihaug_CG(funcs: FuncArray, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, m: float=100, r0: float=1, rmax: float=2, eta: float=0.2, p1: float=0.4, p2: float=0.6, gamma1: float=0.5, gamma2: float=1.5, epsilon: float=1e-6, k: int=0) -> OutputType | \u622a\u65ad\u5171\u8f6d\u68af\u5ea6\u6cd5\u5728\u6b64\u65b9\u6cd5\u4e2d\u88ab\u7528\u4e8e\u641c\u7d22\u6b65\u957f |\r\n\r\n### \u7ea6\u675f\u4f18\u5316\u7b97\u6cd5\uff08constrain\uff09\r\n\r\n```python\r\nimport optimtool.constrain as oc\r\noc.[\u65b9\u6cd5\u540d].[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u7b49\u5f0f\u7ea6\u675f\u8868], [\u4e0d\u7b49\u5f0f\u7ea6\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n#### \u7b49\u5f0f\u7ea6\u675f\uff08equal\uff09\r\n\r\n```python\r\noc.equal.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u7b49\u5f0f\u7ea6\u675f\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                                   | \u89e3\u91ca        |\r\n| ----------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\r\n| penalty_quadratice(funcs: FuncArray, args: FuncArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=2, epsilon: float=1e-4, k: int=0) -> OutputType                     | \u589e\u52a0\u4e8c\u6b21\u7f5a\u9879    |\r\n| lagrange_augmentede(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", lamk: float=6, sigma: float=10, p: float=2, etak: float=1e-4, epsilon: float=1e-6, k: int=0) -> OutputType | \u589e\u5e7f\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5 |\r\n\r\n#### \u4e0d\u7b49\u5f0f\u7ea6\u675f\uff08unequal\uff09\r\n\r\n```python\r\noc.unequal.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u4e0d\u7b49\u5f0f\u7ea6\u675f\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                                                      | \u89e3\u91ca        |\r\n| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- |\r\n| penalty_quadraticu(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=0.4, epsilon: float=1e-10, k: int=0) -> OutputType                                     | \u589e\u52a0\u4e8c\u6b21\u7f5a\u9879    |\r\n| penalty_interior_fraction(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=12, p: float=0.6, epsilon: float=1e-6, k: int=0) -> OutputType                              | \u589e\u52a0\u5206\u5f0f\u51fd\u6570\u7f5a\u9879  |\r\n| lagrange_augmentedu(funcs: FuncArray, args: ArgArray, cons: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", muk: float=10, sigma: float=8, alpha: float=0.2, beta: float=0.7, p: float=2, eta: float=1e-1, epsilon: float=1e-4, k: int=0) -> OutputType | \u589e\u5e7f\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5 |\r\n\r\n#### \u6df7\u5408\u7b49\u5f0f\u7ea6\u675f\uff08mixequal\uff09\r\n\r\n```python\r\noc.mixequal.[\u51fd\u6570\u540d]([\u76ee\u6807\u51fd\u6570], [\u53c2\u6570\u8868], [\u7b49\u5f0f\u7ea6\u675f\u8868], [\u4e0d\u7b49\u5f0f\u7ea6\u675f\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                                                                                                                  | \u89e3\u91ca        |\r\n| ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- |\r\n| penalty_quadraticm(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=10, p: float=0.6, epsilon: float=1e-10, k: int=0) -> OutputType                                             | \u589e\u52a0\u4e8c\u6b21\u7f5a\u9879    |\r\n| penalty_L1(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", sigma: float=1, p: float=0.6, epsilon: float=1e-10, k: int=0) -> OutputType                                                     | L1\u7cbe\u786e\u7f5a\u51fd\u6570\u6cd5  |\r\n| lagrange_augmentedm(funcs: FuncArray, args: ArgArray, cons_equal: FuncArray, cons_unequal: FuncArray, x_0: PointArray, draw: bool=True, output_f: bool=False, method: str=\"gradient_descent\", lamk: float=6, muk: float=10, sigma: float=8, alpha: float=0.5, beta: float=0.7, p: float=2, eta: float=1e-3, epsilon: float=1e-4, k: int=0) -> OutputType | \u589e\u5e7f\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5 |\r\n\r\n### \u65b9\u6cd5\u7684\u5e94\u7528\uff08example\uff09\r\n\r\n```python\r\nimport optimtool.example as oe\r\n```\r\n\r\n#### Lasso\u95ee\u9898\uff08Lasso\uff09\r\n\r\n```python\r\noe.Lasso.[\u51fd\u6570\u540d]([\u77e9\u9635A], [\u77e9\u9635b], [\u56e0\u5b50mu], [\u53c2\u6570\u8868], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                                                                     | \u89e3\u91ca               |\r\n| ------------------------------------------------------------------------------------------------------- | ---------------- |\r\n| gradient(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, delta: float=10, alp: float=1e-3, epsilon: float=1e-2, k: int=0) -> OutputType | \u5149\u6ed1\u5316Lasso\u51fd\u6570\u6cd5      |\r\n| subgradient(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, alphak: float=2e-2, epsilon: float=1e-3, k: int=0) -> OutputType             | \u6b21\u68af\u5ea6\u6cd5Lasso\u907f\u514d\u4e00\u9636\u4e0d\u53ef\u5bfc |\r\n| penalty(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, gamma: float=0.01, epsilon: float=1e-6, k: int=0) -> OutputType | \u7f5a\u51fd\u6570\u6cd5 |\r\n| approximate_point(A: NDArray, b: NDArray, mu: float, args: ArgArray, x_0: PointArray, draw: bool=True, output_f: bool=False, epsilon: float=1e-4, k: int=0) -> OutputType | \u90bb\u8fd1\u7b97\u5b50\u66f4\u65b0 |\r\n\r\n#### \u66f2\u7ebf\u76f8\u5207\u95ee\u9898\uff08WanYuan\uff09\r\n\r\n```python\r\noe.WanYuan.[\u51fd\u6570\u540d]([\u76f4\u7ebf\u7684\u659c\u7387], [\u76f4\u7ebf\u7684\u622a\u8ddd], [\u4e8c\u6b21\u9879\u7cfb\u6570], [\u4e00\u6b21\u9879\u7cfb\u6570], [\u5e38\u6570\u9879], [\u5706\u5fc3\u6a2a\u5750\u6807], [\u5706\u5fc3\u7eb5\u5750\u6807], [\u521d\u59cb\u8fed\u4ee3\u70b9])\r\n```\r\n\r\n\u95ee\u9898\u63cf\u8ff0\uff1a\r\n\r\n```text\r\n\u7ed9\u5b9a\u76f4\u7ebf\u7684\u659c\u7387\u548c\u622a\u8ddd\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u629b\u7269\u7ebf\u51fd\u6570\u7684\u4e8c\u6b21\u9879\u7cfb\u6570\uff0c\u4e00\u6b21\u9879\u7cfb\u6570\u4e0e\u5e38\u6570\u9879\u3002 \u8981\u6c42\u89e3\u4e00\u4e2a\u7ed9\u5b9a\u5706\u5fc3\u7684\u5706\uff0c\u8be5\u5706\u540c\u65f6\u4e0e\u629b\u7269\u7ebf\u3001\u76f4\u7ebf\u76f8\u5207\uff0c\u82e5\u5b58\u5728\u53ef\u884c\u65b9\u6848\uff0c\u8bf7\u7ed9\u51fa\u5207\u70b9\u7684\u5750\u6807\u3002\r\n```\r\n\r\n| \u65b9\u6cd5\u5934                                                             | \u89e3\u91ca                   |\r\n| --------------------------------------------------------------- | -------------------- |\r\n| solution(m: float, n: float, a: float, b: float, c: float, x3: float, y3: float, x_0: tuple, draw: bool=False, eps: float=1e-10) -> None | \u4f7f\u7528\u9ad8\u65af-\u725b\u987f\u65b9\u6cd5\u6c42\u89e3\u6784\u9020\u76847\u4e2a\u6b8b\u5dee\u51fd\u6570 |\r\n\r\n### \u6df7\u5408\u4f18\u5316\u7b97\u6cd5\uff08hybrid\uff09\r\n\r\n```python\r\nimport optimtool.hybrid as oh\r\n```\r\n\r\n#### \u8fd1\u4f3c\u70b9\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08approximate_point_gradient\uff09\r\n\r\n## LICENSE\r\n\r\n[MIT LICENSE](./LICENSE)\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "https://github.com/linjing-lab/optimtool/tags",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/linjing-lab/optimtool",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "optimtool",
            "package_url": "https://pypi.org/project/optimtool/",
            "platform": null,
            "project_url": "https://pypi.org/project/optimtool/",
            "project_urls": {
                "Download": "https://github.com/linjing-lab/optimtool/tags",
                "Homepage": "https://github.com/linjing-lab/optimtool",
                "Source": "https://github.com/linjing-lab/optimtool/tree/master/optimtool/",
                "Tracker": "https://github.com/linjing-lab/optimtool/issues"
            },
            "release_url": "https://pypi.org/project/optimtool/2.4.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "The fundamental package for scientific research in optimization.",
            "version": "2.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15720901,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "962853a2708c30e6d607ddb55def1b2f",
                    "sha256": "d736d660fcba7738c7df7f65fece7ff16fc72ff219b3974bb7bc7103aa59eba2"
                },
                "downloads": -1,
                "filename": "optimtool-2.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "962853a2708c30e6d607ddb55def1b2f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 23771,
                "upload_time": "2022-11-10T06:16:18",
                "upload_time_iso_8601": "2022-11-10T06:16:18.021453Z",
                "url": "https://files.pythonhosted.org/packages/5c/f3/0e7a71f03a5d89ce0d21db4bd11f5fc342c4b1268fda8d3f1fcd8192aa25/optimtool-2.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}