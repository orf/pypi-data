{
    "0.1.0": {
        "info": {
            "author": "Manuel Cabrera",
            "author_email": "cabrera.manuel555@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# pyOPERA\nFull python implementation of the NIH OPERA suite of models  \ndocker run -it -v %cd%:/app --rm pyopera_pyopera /bin/bash  \ndocker compose -f docker-compose.yml build  \ndocker run --rm pyopera_pyopera ~/.local/share/pypoetry/venv/bin/poetry run coverage run -m pytest tests  \ndocker build -t cabreratoxy/pyopera:0.0.1 .  \n\n```\npoetry run python -m pip install -r requirements.txt  \npoetry run black .  \npoetry run isort .  \npoetry run pylint $(find . -name \"*.py\" | xargs)  \npoetry run pytest tests    \npoetry run coverage run --source pyopera -m pytest  \npoetry run coverage report --skip-empty --fail-under=85  \npoetry build  \npoetry config repositories.testpypi https://test.pypi.org/legacy/  \n\ndocker run --rm pyopera_pyopera /bin/bash -c 'poetry run coverage run -m pytest tests'   \n```\n\n\nTODO: Fully install poetry in the container (maybe use the long name as a variable for now)\nTODO: Create CI/CD for package in TestPypi and the prod Pypi (CircleCI maybe?)  \nTODO: Documentation using Sphinx (make sure original repo/builders are credited)  \nTODO: Start adding the wrapper code and files - in progress    \nTODO: Benchmarking with airspeed velocity  \nTODO: Don't repeat the library name in the Dockerfile  \nTODO: Struggling to run commands inside Docker from the host, will run commands from inside container for now  \nTODO: Test TestPypi package locally  \nTODO: Add actual documentation in this readme  \n~~TODO: Auto semantic versioning with poetry too~~  \n~~TODO: Create a python package around the Matlab package (the base files) using Poetry~~  \n~~TODO: Formatting/Linting/Coverage~~  \n~~TODO: Choose between Pytest an Unittest~~  \n~~TODO: Automate black, isort, pylint, coverage, pytest on build or push. - just have to finish coverage~~\n~~TODO: Auto docstring generating? -- used autodocstring extension for vscode~~  \n~~TODO: How to autobuild the base image the CI/CD will work with - could not be done~~  \n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pyopera",
            "package_url": "https://pypi.org/project/pyopera/",
            "platform": null,
            "project_url": "https://pypi.org/project/pyopera/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pyopera/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.8,<4.0",
            "summary": "The NIH OPERA suite of models with Python specific functionality",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15976076,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "29a06e6fcd056a300fb4282521ab263a",
                    "sha256": "079b79e493f98b597a546f96d012f31868d72033638b3f2671fb8974a0d29778"
                },
                "downloads": -1,
                "filename": "pyopera-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "29a06e6fcd056a300fb4282521ab263a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8,<4.0",
                "size": 3750,
                "upload_time": "2022-12-03T02:11:33",
                "upload_time_iso_8601": "2022-12-03T02:11:33.891727Z",
                "url": "https://files.pythonhosted.org/packages/79/36/b6b4c6b9fd17ef22ef2da118e0f01220a2962f83bf4c3f637866cec0d1ce/pyopera-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "abaacfee08217a914dcc159e4652c2b1",
                    "sha256": "174831919156428168e4da919e62a6a2a856b9fa93443596ed1b061bda8ee2a9"
                },
                "downloads": -1,
                "filename": "pyopera-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "abaacfee08217a914dcc159e4652c2b1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8,<4.0",
                "size": 4170,
                "upload_time": "2022-12-03T02:11:35",
                "upload_time_iso_8601": "2022-12-03T02:11:35.386656Z",
                "url": "https://files.pythonhosted.org/packages/d2/db/8117b96b10cf28343a697136f2aae74b6625c6e3ed29bc0d6aa26d7a0308/pyopera-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}