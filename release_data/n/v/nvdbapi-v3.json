{
    "0.1.1": {
        "info": {
            "author": "LtGlahn",
            "author_email": "jensen72@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Documentation",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LtGlahn/nvdbapi-V3",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nvdbapi-v3",
            "package_url": "https://pypi.org/project/nvdbapi-v3/",
            "platform": null,
            "project_url": "https://pypi.org/project/nvdbapi-v3/",
            "project_urls": {
                "Homepage": "https://github.com/LtGlahn/nvdbapi-V3",
                "Repository": "https://github.com/LtGlahn/nvdbapi-V3"
            },
            "release_url": "https://pypi.org/project/nvdbapi-v3/0.1.1/",
            "requires_dist": [
                "requests (>=2.28,<3.0)",
                "python-dateutil (>=2.8,<3.0)",
                "urllib3 (>=1.26.4,<2.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "\"Read data from Norwegian government road database NVDB api https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon\"",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15676264,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cb60c0696d78297a4015f76972cd1447",
                    "sha256": "0c12a2cc04b1b9aea122f77d8ed6ab0a86b37cb7428678ae9b69981f6f65cb62"
                },
                "downloads": -1,
                "filename": "nvdbapi_v3-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cb60c0696d78297a4015f76972cd1447",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 26292,
                "upload_time": "2022-11-04T14:20:12",
                "upload_time_iso_8601": "2022-11-04T14:20:12.140025Z",
                "url": "https://files.pythonhosted.org/packages/66/95/2d89de326080e85aac2e52719300197a187b94dbe3bba3a1a2877267b022/nvdbapi_v3-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c5dcbd1e244317c6b238dc208ee60680",
                    "sha256": "7f9d98d12fbedc541f3028d32b9159bb9e9352f3e68f22fe0cbd8f73d6854f03"
                },
                "downloads": -1,
                "filename": "nvdbapi-v3-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "c5dcbd1e244317c6b238dc208ee60680",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 29697,
                "upload_time": "2022-11-04T14:20:10",
                "upload_time_iso_8601": "2022-11-04T14:20:10.106033Z",
                "url": "https://files.pythonhosted.org/packages/96/f1/88e0e0b1a364a51c6e02f3e99e4a2c021790538e9132ffc626ee4f45e46a/nvdbapi-v3-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.2": {
        "info": {
            "author": "LtGlahn",
            "author_email": "jensen72@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Documentation",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LtGlahn/nvdbapi-V3",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nvdbapi-v3",
            "package_url": "https://pypi.org/project/nvdbapi-v3/",
            "platform": null,
            "project_url": "https://pypi.org/project/nvdbapi-v3/",
            "project_urls": {
                "Homepage": "https://github.com/LtGlahn/nvdbapi-V3",
                "Repository": "https://github.com/LtGlahn/nvdbapi-V3"
            },
            "release_url": "https://pypi.org/project/nvdbapi-v3/0.1.2/",
            "requires_dist": [
                "requests (>=2.28,<3.0)",
                "python-dateutil (>=2.8,<3.0)",
                "urllib3 (>=1.26.4,<2.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "\"Read data from Norwegian government road database NVDB api https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon\"",
            "version": "0.1.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15676264,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e792a3b5786e316eccbab3b69783aaee",
                    "sha256": "61163a7d2aa1e5d68316d23cbb3fa031a864a14c0244688a3964c9087d11fdab"
                },
                "downloads": -1,
                "filename": "nvdbapi_v3-0.1.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e792a3b5786e316eccbab3b69783aaee",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 26675,
                "upload_time": "2022-11-04T14:28:07",
                "upload_time_iso_8601": "2022-11-04T14:28:07.887420Z",
                "url": "https://files.pythonhosted.org/packages/8d/d4/6827c6f0caf5ac79915050e3c147a5ca1e65badd92a7ab3e04dbeba4b8dc/nvdbapi_v3-0.1.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "254a910e1006e7df7ac759d5f3058fc8",
                    "sha256": "4530d6957e8079e2d90f65cb78d2c7f7e3c1801cae6b10d58794f853b9b513ab"
                },
                "downloads": -1,
                "filename": "nvdbapi-v3-0.1.2.tar.gz",
                "has_sig": false,
                "md5_digest": "254a910e1006e7df7ac759d5f3058fc8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 30519,
                "upload_time": "2022-11-04T14:28:05",
                "upload_time_iso_8601": "2022-11-04T14:28:05.935943Z",
                "url": "https://files.pythonhosted.org/packages/f3/03/d4327ca9c48e256e6d2c55e6f9af70617eb3ef81447952d5f9444e7e6618/nvdbapi-v3-0.1.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.3": {
        "info": {
            "author": "LtGlahn",
            "author_email": "jensen72@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Documentation",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LtGlahn/nvdbapi-V3",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nvdbapi-v3",
            "package_url": "https://pypi.org/project/nvdbapi-v3/",
            "platform": null,
            "project_url": "https://pypi.org/project/nvdbapi-v3/",
            "project_urls": {
                "Homepage": "https://github.com/LtGlahn/nvdbapi-V3",
                "Repository": "https://github.com/LtGlahn/nvdbapi-V3"
            },
            "release_url": "https://pypi.org/project/nvdbapi-v3/0.1.3/",
            "requires_dist": [
                "requests (>=2.28,<3.0)",
                "python-dateutil (>=2.8,<3.0)",
                "urllib3 (>=1.26.4,<2.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "\"Read data from Norwegian government road database NVDB api https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon\"",
            "version": "0.1.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15676264,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d762058289b8aff71170ed6a537c7f32",
                    "sha256": "e5df8a5a9558dceb0317d5d18a85d68d4d2d335bfc1fc8e461c054683f96c212"
                },
                "downloads": -1,
                "filename": "nvdbapi_v3-0.1.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d762058289b8aff71170ed6a537c7f32",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 26760,
                "upload_time": "2022-11-04T14:39:24",
                "upload_time_iso_8601": "2022-11-04T14:39:24.610714Z",
                "url": "https://files.pythonhosted.org/packages/c3/9e/e26a61cae2b89a9ee18b4ff26d3aa516aba2556ce06f95016e350630ae5e/nvdbapi_v3-0.1.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c778625d0fd9c286434392b8190a5242",
                    "sha256": "6bcb817cd4951a4b9a5023a71a91cb9ec96fc1a152a1b92c0c61d3e63f81af50"
                },
                "downloads": -1,
                "filename": "nvdbapi-v3-0.1.3.tar.gz",
                "has_sig": false,
                "md5_digest": "c778625d0fd9c286434392b8190a5242",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 30684,
                "upload_time": "2022-11-04T14:39:22",
                "upload_time_iso_8601": "2022-11-04T14:39:22.894274Z",
                "url": "https://files.pythonhosted.org/packages/f6/5e/cc0d50db0fd44d886526bbe9ed0fe70689845ae622a684e9baf3e2f724be/nvdbapi-v3-0.1.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "LtGlahn",
            "author_email": "jensen72@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Environment :: Console",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: GIS",
                "Topic :: Scientific/Engineering :: Information Analysis",
                "Topic :: Software Development :: Documentation",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": " # Jobb interaktivt mot NVDB api V3\n\nJobb interaktivt og objektorientert mot NVDB api V3! \n\nLes f\u00f8rst gjennom [https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/)\nfor nyttige tips og innblikk i logikken. \n\nRutinene h\u00e5ndterer all kommunikasjon mot NVDB API, inklusive paginering (d.v.s. vi henter passe\nstore \"b\u00f8tter\" med data av gangen) Du f\u00f8yer til dine egne s\u00f8kefiltere, og du kan sjekke antall \ntreff f\u00f8r du laster ned data. \n\nVi oppforder alle til \u00e5 gi oss relevant kontaktinfo i form av http headere \nX-Client og X-Kontaktperson. Dermed har vi bedre statistikk over hvem som bruker API'et til hva, \nog kan ogs\u00e5 n\u00e5 ut til brukerne ved problemer. Denne informasjonen lese fra fila \n*nvdbapi-clientinfo.json*; bruk gjerne malen  *nvdbapi-clientinfo-template.json* som utgangspunkt. \n\n# Installer og kom i gang\n\nS\u00f8k og datanedlasting med `nvdbapi-v3` og sp\u00f8rringer mot NVDB api LES med `apiforbindelse` er publisert som en [pypi-modul](https://pypi.org/project/nvdbapi-v3/), og kan installeres med\n\n```\npip install nvdbapi-v3\n```\n\nMerk bindestreken! Etter installasjon m\u00e5 du importere `nvdbapiv3`, uten bindestrek. Eksempel:\n\n```\nimport nvdbapiv3\nsokeobjekt = nvdbapiv3.nvdbFagdata( 45)\nliste_med_dict = sokeobjekt.to_records()\n```\n\n\nMen - dette reposet https://github.com/LtGlahn/nvdbapi-V3 inneholder ogs\u00e5 en ganske mye kode for dataanalyse, bearbeiding etc. Dette er IKKE tatt med i pypi-modulen. Noe av grunnen er at dataanalytikere liker \u00e5 velge verkt\u00f8y selv. I tillegg reduserer vi risiko for versjonskonflikt drastisk ved at pypi-modulen har f\u00e6rrest mulig avhengigheter ut over standardbiblioteket til python - og installasjonen med pip g\u00e5r veldig mye kjappere. S\u00e5 dersom du synes koden min for GIS-analyser er nyttig s\u00e5 m\u00e5 du [laste ned reposet](https://github.com/LtGlahn/nvdbapi-V3) og s\u00e5 installere f.eks [geopandas](https://geopandas.org/en/stable/) p\u00e5 egen h\u00e5nd. \n\n# Prinsipper \n\n1. Et _*s\u00f8keobjekt*_ h\u00e5ndterer all mikk-makk rundt sp\u00f8rringer mot NVDB api, paginering etc. \n1. Vi har to typer s\u00f8keobjekter\n    * nvdbVegnett - henter vegnett (lenksekvenser og tilh\u00f8rende lenker) \n    * nvdbFagdata - henter en av de 400 fagdatatypene vi har definert i [NVDB datakatalog](https://datakatalogen.vegdata.no/)\n2. S\u00f8keobjektene har funksjoner for \u00e5 avgrense s\u00f8k, og hente ut alle data som tilfredssstiller s\u00f8ket. \n3. Noen funksjoner _(f.eks. nvdb2geojson)_ tar et slik s\u00f8keobjekt og transformerer til andre datastrukturer, tabul\u00e6re data m.m.\n4. Fra s\u00f8keobjektet kan du iterere over alle NVDB-objekter som tilfredsstiller s\u00f8ket ditt: \n    1. Enten som JSON-objekt [rett fra NVDB api](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#/Vegobjekter/get_vegobjekter__vegobjekttypeid_ \"Vegobjekter i NVDB api\")\n    2. Eller som et _*nvdbFagObjekt*_, som har en del fiffige funksjoner for \u00e5 hente ut egenskapverdier m.m. \n7. I tillegg til s\u00f8keobjekten har vi en del hjelpefunksjoner\n   1. finnid: Henter vegobjekt og/eller lenkesekvens med angitt ID\n   2. nvdbfagdata2records: Flater ut NVDB-vegobjekt (direkte fra NVDB api) til enklere (forutsigbar) dictionary-struktur\n   3. egenskaper2records: Oversetter liste med egenskapverdier til dictionary \n   \n## nvdbVegnett \n\nS\u00f8keobjekt for \u00e5 hente segmentert vegnett fra NVDB api. \n\n## nvdbFagdata(objektTypeId) \n\nS\u00f8keobjekt for \u00e5 hente fagdata (ikke vegnett, men \u00f8vrige data om vegen). Totalt har vi definert i underkant av 400 ulike objekttyper\ni [datakatalogen](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#/Vegobjekter/get_vegobjekter__vegobjekttypeid___vegobjektid_). \n\nnvdbFagdata utvider klassen nvdbVegnett, og arver metoder og egenskaper fra denne. \n\nargumentet objektTypeID (heltall) angir hvilke objekttype vi jobber med, definert i [datakatalogen](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#/Vegobjekter/get_vegobjekter__vegobjekttypeid___vegobjektid_)\n\n# Felles metoder for nvdbVegnett og nvdbFagdata\n\n\n### refresh() \n\nSletter alle nedlastede data, og nullstiller telleverket i paginering. \n\n### filter( FILTERARG )\n\nFILTERARG er en python dictionary med relevante filtre. S\u00f8keobjektene `nvdbVegnett` og `nvdbFagdata` st\u00f8tter begge geografiske filtre (fylke, kommune, kartutsnitt, vegsystemreferanse), men kun `nvdbFagdata` har avanserte egenskapsfilter og overlappfilter. Og `nvdbVegnett` st\u00f8tter en del filter som kun er relevant for vegnett (typeeveg, adskilte l\u00f8p etc). \nSe [dokumentasjon NVDB api V3](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#/Vegnett/get_vegnett_veglenkesekvenser_segmentert)\n\n\nEksempel\n\n```\nv = nvdbVegnett()\nv.filter( { 'kommune' : 5001 } )\nv.filter( { 'vegsystemreferanse' : 'ev6s76d1' } )\n# Filteret har n\u00e5 verdien { 'vegsystemreferanse' : 'ev6s76d1', 'kommune' : 5001 }\n```\n\n### nesteForekomst()\n\nGir deg ett NVDB objekt (vegnett eller fagdata), i henhold til dine s\u00f8kekriterier (filtre). Alle detaljer med datanedlasting fra API h\u00e5ndteres internt. \n\n\n```\nv = nvdbFagdata(807) # D\u00f8gnhvileplass\np = v.nesteForekomst()\nwhile p: \n\tprint o['id']\n\to = v.nesteForekomst()\n```\n\n\n### nestePaginering()\n\nBruker paginering til \u00e5 neste \"b\u00f8tte\" med data fra NVDB forekomst, i henhold \ntil alle dine s\u00f8kekriterier (filtre). \n\nReturerer True hvis dette ga gyldige data, og False n\u00e5r vi har hentet alle objektene. \n\nDu m\u00e5 selv kopiere data over fra listen *data\\[\\'objekter\\'\\]*\n\n \n```\np = nvdbFagdata( 809) # D\u00f8gnhvileplass \np.paginering['antall'] = 3 # Jukser litt med antall forekomster per b\u00f8tte. \nTF = p.nestePaginering()\nminliste = []\nwhile TF: \n    minliste.extend( p.data['objekter'] )\n\tTF = p.nestePaginering()\n```\n\n### info()\n\nSkriver til konsoll alle filtere, pagineringsdetaljer, antall objekter i arbeidsminnet. For `nvdbFagdata` henter vi ogs\u00e5 statistikk fra NVDB api om antall treff og lengde for dette s\u00f8ket.  \n\n# Flere metoder for nvdbFagdata\n\n### nesteNvdbFagObjekt() \n\nObjektorientert tiln\u00e6rming - returnerer neste forekomst av NVDB objektet som en instans av\nklassen [nvdbFagObjekt](https://github.com/LtGlahn/nvdbapi-V2#nvdbfagobjekt)\n\n\n### statistikk()\n\nSp\u00f8r NVDB api hvor mange forekomster som finnes med angitte filtre. Returnerer dict med antall treff \nog  strekningslengde (antall meter). Strekningslengde er 0 for punktobjekter. \n\n\n### egenskaper( egenskapsTypeID):\n\nSkriver ut definisjonen av angitt egenskapstype (ID, heltall). \nHvis ingen ID oppgis skriver vi ut en liste med ID, navn og type\nfor alle egenskapstyper for denne objekttypen. \n\nI stedet for ID (heltall) kan du ogs\u00e5 oppgi en tekststreng som sjekkes mot \nnavnet p\u00e5 egenskapstypene. \n\nDenne funksjonen er nyttig for \u00e5 finne riktig verdi p\u00e5 egenskap- og overlappfiltere. \n```\np = nvdbFagdata( 809) # D\u00f8gnhvileplass \np.egenskaper()\np.egenskaper(9270) # Vaskeplass for trailere\np.egenskaper( 'ask') # Fritekst-s\u00f8k, matcher ID 9270\n```\n\n# Eksempler, avanserte s\u00f8k med nvdbFagdata \n\nS\u00f8k etter NVDB fagdata (vegobjekter) har en del avanserte muligheter. \n\n### S\u00f8k etter egenskapverdi \n\nTekststreng med filtre for egenskapsverdier. Se dokumentasjon for [egenskapsfiltre](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#operations-Vegobjekter-get_vegobjekter__vegobjekttypeid_)\n\n```\np = nvdbFagdata( 809) # D\u00f8gnhvileplass \np.filter( {  'egenskap': '9246=12886 AND 9273=12940') \np.filter()\n>>  {'egenskap': '9246=12886 AND 9273=12940'} \np.filter( '' ) # Nullstiller alle filtre. \n```\n\n### Overlapps\u00f8k  \n\nHenter fagdata som overlapper med annen objekttype (og denne kan evt ogs\u00e5 ha eget filter). Se dokumentasjon for [overlappfilter](https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon/openapi/#operations-Vegobjekter-get_vegobjekter__vegobjekttypeid_)\n\n```\nu = nvdbFagdata(570) # Trafikkulykker\nu.filter( { 'overlapp' : '105(2021=2738)' }) #  Trafikkulykker med fartsgrense = 80 km/t\n```\n\nTODO: Sjekk ut syntaks for overlapp mot flere objekttyper samtidig. \n\n\n# Egenskaper nvdbVegnett og nvdbFagdata\n\n| Variabel | Verdi |\n|---------|--------|\n| data | Holder nedlastede data (i listen *objekter*) og metadata |\n| filter | Holder alle filtre |\n| headers | http headere som f\u00f8lger alle kall mot API | \n| sisteanrop | Siste kall som gikk mot NVDB API |\n| objektTypeID | ID til objekttypen (ikke nvdbVegnett) |\n| objektTypeDef | Datakatalogdefinisjon for objekttypen (ikke nvdbVegnett) |\n|antall | Antall objekter i NVDB som tilfredsstiller kriteriene, hentes fra statistikksp\u00f8rring mot API (ikke nvdbVegnett) |\n| strekningslengde | Total lengde p\u00e5 objektene i NVDB som tilfredsstiller s\u00f8kekriteriene, hentes fra statistikksp\u00f8rring mot API (ikke nvdbVegnett) |\n\n# nvdbFagObjekt\n\nKlasse for objektorientert behandling av fagdata. Har for eksempel gode metoder for \u00e5 \nsp\u00f8rre etter egenskapverdier. \n\n### egenskap( id_or_navn, empty=None)\n\nReturnerer egenskapstype (dataverdi pluss metadata). Via n\u00f8kkelordet empty kan man angi \u00f8nsket retur hvis egenskapen ikke finnes. \n\nArgumentet _id_or_navn_ kan v\u00e6re heltall (datakatalog ID, mest skuddsikkert) eller (deler av) navnet p\u00e5 egenskapstypen. \n\n### egenskapverdi( id_or_navn, empty=None)\n\nSom funksjonen \"egenskap\", men returnerer kun egenskapsverdien (selve dataverdien). \n\neksempel:\n```python\ntunnellop = nvdbapi.nvdbFagdata(67)\nettLop = tunnellop.nesteNvdbFagObjekt()\n\n# Henter egenskapen \"Navn\" for dette tunnell\u00f8pet\nettLop.egenskap('Navn')\n\n# Henter kun egenskapsverdien \nettLop.egenskapsverdi( 'Navn' )\n\n# Bruker datakatalog ID i stedet for navn (mer skuddsikkert)\nettLop.egenskapsverdi( 1081 )\n\n# Forkortelser eller deler av egenskapsnavnet er OK \n#(merk: Ingen sjekk p\u00e5 om frasen matcher flere egenskapsnavn, du f\u00e5r det f\u00f8rste treffet)\nettLop.egenskap('MERK') # Gir f\u00f8rste case *in*sensitive treff p\u00e5 frasen \"merk\" i egenskapsnavnet. \n\n# Angi at du vil ha tom streng (\"\"), ikke None hvis egenskapstypen ikke finnes\n# (Nei, vi sjekker ikke om dette er en lovlig egenskap for denne objekttypen etter datakatalogen)\ntomStreng = ettLop.egenskapsverdi( 'finnes ikke', empty='')\n\n```\n### enumverdi( _id_or_navn, empty=None)\nSom funksjonen \"egenskapsverdi\", men returnerer enmu_id - ikke dataverdien. Vil returnere None (eller din \"empty\"-verdi) \nhvis du bruker funksjonen p\u00e5 egenskaper som IKKE er enum (flervalg,tekst eller flervalg, tall). \n\n### wkt \n\nReturnerer koordinatene til objektets geometri som [Well Known Text](https://en.wikipedia.org/wiki/Well-known_text)\n\n### relasjon(relasjon=None)\n\nReturnerer en liste med alle relasjoner (default, uten argumenter), eller \nmed n\u00f8kkelordet _relasjon=verdi_ returneres en liste med subsett\nav relasjoner. Mulige verdier for n\u00f8kkeord _relasjon_ er _barn_, _foreldre_, \n_egenskapsID_ eller _egenskapsnavn_ til din favoritt objekttype. \n\neksempel: \n\n\n```python\ntunnellop = nvdbapi.nvdbFagdata(67)\nettLop = tunnellop.nesteNvdbFagObjekt()\n\n# Henter mor-tunnellen, 3 ulike metoder\nmor = ettLop.relasjon(relasjon='foreldre')\nmor = ettLop.relasjon(relasjon='Tunnel')\nmor = ettLop.relasjon(relasjon='581')\n\n# Henter datterobjekt Tunnelportal, \ntp = ettlop.relasjon(relasjon='Tunnelport') # Delvis match\ntp = ettlop.relasjon(relasjon='Tunnelportal') # Eksakt match\ntp = ettlop.relasjon(relasjon=69)\n\n# henter alle barn \nbarn = ettlop.relasjon(relasjon='barn')\n\n```\n# finnid - finn fagdata eller vegnett ut fra NVDB Id\n\nHjelpefunksjonen ```finnid(objektid)``` s\u00f8ker etter NVDB objekter og lenkesekvens med angitt objektid. \n\n```\nfart = nvdbapi.finnid(85288328, kunfagdata=True) # python-dict\nfartobj = nvdbFagObjekt(fart)   # Objektorientert representasjon, se definisjonen nvdbFagobjekt\n\n\nv = nvdbapi.finnid(521218, kunvegnett=True)   # Liste med lenker som finnes p\u00e5 lenkesekvens 521218\n```\n\nFor fagdata returneres en DICT for angjeldende objekt. Denne kan gj\u00f8res om til et nvdbFagObjekt. \n\nFor vegnett returneres en liste med de veglenke-delene som inng\u00e5r i denne lenkesekvensen.  \n \n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LtGlahn/nvdbapi-V3",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nvdbapi-v3",
            "package_url": "https://pypi.org/project/nvdbapi-v3/",
            "platform": null,
            "project_url": "https://pypi.org/project/nvdbapi-v3/",
            "project_urls": {
                "Homepage": "https://github.com/LtGlahn/nvdbapi-V3",
                "Repository": "https://github.com/LtGlahn/nvdbapi-V3"
            },
            "release_url": "https://pypi.org/project/nvdbapi-v3/1.0.0/",
            "requires_dist": [
                "requests (>=2.28,<3.0)",
                "python-dateutil (>=2.8,<3.0)",
                "urllib3 (>=1.26.4,<2.0.0)"
            ],
            "requires_python": ">=3.7,<4.0",
            "summary": "\"Read data from Norwegian government road database NVDB api https://nvdbapiles-v3.atlas.vegvesen.no/dokumentasjon\"",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15676264,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b106b094a4f956342eb7a304058fb25b",
                    "sha256": "8c0989145e9b839b31be5425db9afdd712ffafd4920bef79896620d7b038ea73"
                },
                "downloads": -1,
                "filename": "nvdbapi_v3-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b106b094a4f956342eb7a304058fb25b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7,<4.0",
                "size": 26688,
                "upload_time": "2022-11-06T18:42:24",
                "upload_time_iso_8601": "2022-11-06T18:42:24.994156Z",
                "url": "https://files.pythonhosted.org/packages/40/71/c58cd5624a3252e72b75e1a8a2989edeb85888f324e66bd34fe549e03ece/nvdbapi_v3-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "21dd2251637ac89a40386aacd9050188",
                    "sha256": "75cf860fc18b6fa34b91b29efdad03efdda42b574876f731951d88b9750170c5"
                },
                "downloads": -1,
                "filename": "nvdbapi-v3-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "21dd2251637ac89a40386aacd9050188",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7,<4.0",
                "size": 30540,
                "upload_time": "2022-11-06T18:42:22",
                "upload_time_iso_8601": "2022-11-06T18:42:22.613105Z",
                "url": "https://files.pythonhosted.org/packages/54/a5/f3fd6676c84bcebc92bb49dd404b20dcc53e8b03cc9c810498369fce84a0/nvdbapi-v3-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}