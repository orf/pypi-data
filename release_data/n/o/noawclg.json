{
    "0.0.1b0": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.1b0/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.1b0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d8697f071077e92ef2fd04833440bd4f",
                    "sha256": "a05709ae3c832d2b61046acb02d775f4ae2594d987660868df54aeb4525c203e"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.1b0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d8697f071077e92ef2fd04833440bd4f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 21732,
                "upload_time": "2022-01-01T22:34:58",
                "upload_time_iso_8601": "2022-01-01T22:34:58.054858Z",
                "url": "https://files.pythonhosted.org/packages/c6/8a/0b8cd9dafc28a40e486ca78280ec4fb10792700fa767065d4f58544d2676/noawclg-0.0.1b0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1b10": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.1b10/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.1b10",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "02fe22612dd0e65885e94f3f4ecb28dd",
                    "sha256": "92c1778a49dad0e84627a12b6404ff8f33378d6d87f1b6ed45abc056354be36d"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.1b10-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "02fe22612dd0e65885e94f3f4ecb28dd",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22490,
                "upload_time": "2022-01-04T22:35:00",
                "upload_time_iso_8601": "2022-01-04T22:35:00.306579Z",
                "url": "https://files.pythonhosted.org/packages/48/70/12493fc95e2c2bb481ec10cf5ce91b8ac66d05fdd38748ef7a4a00589462/noawclg-0.0.1b10-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1b101": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.1b101/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "mstplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.1b101",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "007065b39d2346865d060f2d78cde9fb",
                    "sha256": "fec4737d6ddb3dc000106b8d52cb26aaba0af82206273363a3cf9fc77ffe14e5"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.1b101-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "007065b39d2346865d060f2d78cde9fb",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22524,
                "upload_time": "2022-01-04T22:40:54",
                "upload_time_iso_8601": "2022-01-04T22:40:54.237964Z",
                "url": "https://files.pythonhosted.org/packages/ec/e5/5977a0da9efbc3ffbe50931b3cd7b3b55dd74199d49319cbb5cab6a067c2/noawclg-0.0.1b101-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1b91": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.1b91/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.1b91",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "42e2a711c8a1373196c0782e05a2eee0",
                    "sha256": "337470d8ea1e1d837a5538479f9a334fd84cb000d7a62f5c41006c59feb669a1"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.1b91-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "42e2a711c8a1373196c0782e05a2eee0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22489,
                "upload_time": "2022-01-04T22:35:03",
                "upload_time_iso_8601": "2022-01-04T22:35:03.020932Z",
                "url": "https://files.pythonhosted.org/packages/f9/c6/56b83493782fd76349862c78b3a13c14256387ecf3ff3f8af029749e3c1b/noawclg-0.0.1b91-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b0": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b0/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5ad892d16fc2612ec89a59c0df70e13e",
                    "sha256": "1a861c5212b273b255f87c1dcb4a19c6318b7aac3fb9d5a2246df614cba3d757"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5ad892d16fc2612ec89a59c0df70e13e",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22501,
                "upload_time": "2022-01-04T22:48:39",
                "upload_time_iso_8601": "2022-01-04T22:48:39.573419Z",
                "url": "https://files.pythonhosted.org/packages/9a/3a/1809b28277dd445a9dae37b07155b95dea1e5da11a12ceeacfb7da247428/noawclg-0.0.2b0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b1": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b1/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ab499394f883dc723123c712c4cc8913",
                    "sha256": "45b551c212ffd8676123fa471241320529deb9e74ce2955b1a08533dc137198d"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ab499394f883dc723123c712c4cc8913",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22515,
                "upload_time": "2022-01-04T23:03:14",
                "upload_time_iso_8601": "2022-01-04T23:03:14.597593Z",
                "url": "https://files.pythonhosted.org/packages/87/e9/d806bf4d3795fdba1a9179c26dd2035ea54f837406695e4e3df3b15fbb31/noawclg-0.0.2b1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b2": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b2/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fb2477234bcfda6d41d2a6ac782b8043",
                    "sha256": "998ac3dbc74dfa3d5116801b8636696435cdb03a6f3492bcb5f5ae6c917dad2f"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "fb2477234bcfda6d41d2a6ac782b8043",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22602,
                "upload_time": "2022-01-04T23:03:17",
                "upload_time_iso_8601": "2022-01-04T23:03:17.564386Z",
                "url": "https://files.pythonhosted.org/packages/b0/68/736fdf46fb938ff114c68e0e67e55e0fb0cee17c63b7c85ce77411837f99/noawclg-0.0.2b2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b3": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b3/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ed8042b76d744cbdecf5c71c6a53808c",
                    "sha256": "433968d95a60f92fa923bb610d2ea28356aca8a780589eb2ab0fbe8f4641d7af"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ed8042b76d744cbdecf5c71c6a53808c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22597,
                "upload_time": "2022-01-04T23:08:04",
                "upload_time_iso_8601": "2022-01-04T23:08:04.696898Z",
                "url": "https://files.pythonhosted.org/packages/5a/83/0d7fb3189769a7ca3667ca490bce8c096dfbfb30ba9e560227e9e154c551/noawclg-0.0.2b3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b4": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b4/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7c45e35f8cfe0d0344d5f9931df85baa",
                    "sha256": "8bea07407e9e6534d2da6ba69183756eade725d1cc9706f6862b37eb17b42e35"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7c45e35f8cfe0d0344d5f9931df85baa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 22567,
                "upload_time": "2022-01-04T23:16:59",
                "upload_time_iso_8601": "2022-01-04T23:16:59.553356Z",
                "url": "https://files.pythonhosted.org/packages/cb/be/143e74d1a80bb4863308b843ea12639afe70aa3bfb10761b962218233620/noawclg-0.0.2b4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b5": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b5/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "d5cb3420feaca886a848fc2312cd7a07",
                    "sha256": "04f1bfa3d46a70442a45ff19a2b15ed58c886c993b37ba9f4809e1b504f423cc"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "d5cb3420feaca886a848fc2312cd7a07",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23199,
                "upload_time": "2022-01-05T23:26:52",
                "upload_time_iso_8601": "2022-01-05T23:26:52.635795Z",
                "url": "https://files.pythonhosted.org/packages/88/3d/a3eff6fe17e3638a3d7f67ffa13657ac49630b4b7280d0daf0c2d80b7324/noawclg-0.0.2b5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2b6": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.2b6/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.2b6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b905bcbd24366daba3781b7222febae7",
                    "sha256": "bbd240a1e1a3198b15765f8d96152958beb352454ad800543c9be6d433e58fe9"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.2b6-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b905bcbd24366daba3781b7222febae7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23118,
                "upload_time": "2022-01-06T00:06:41",
                "upload_time_iso_8601": "2022-01-06T00:06:41.217815Z",
                "url": "https://files.pythonhosted.org/packages/38/6b/c5c70930928a9ea1ee8f44ea764acd2ddeb0b94b39147caf81067a67c1b9/noawclg-0.0.2b6-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.3": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.3/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "44105592761b19a0e48cf4df5b948899",
                    "sha256": "c978d88c5588636e80b3b7d98540131e55cf278e2c943861037b6c195f9eaa7a"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "44105592761b19a0e48cf4df5b948899",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23357,
                "upload_time": "2022-01-09T20:50:51",
                "upload_time_iso_8601": "2022-01-09T20:50:51.526608Z",
                "url": "https://files.pythonhosted.org/packages/31/fb/c71355b9c185034a7962e6e865c9d5b81a8ca4c3c3105bf2d382c5c99d6e/noawclg-0.0.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.4/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c98a233841c2710a436ec4c2ddca40da",
                    "sha256": "1bc0e4a8593edbb7aa4d448f956dc87787d647fc82b6a888639e6c81c7eb8bf6"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c98a233841c2710a436ec4c2ddca40da",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23640,
                "upload_time": "2022-01-09T20:57:57",
                "upload_time_iso_8601": "2022-01-09T20:57:57.591208Z",
                "url": "https://files.pythonhosted.org/packages/f5/5c/946a1b84e3433aeca978ddd524e47247caf87d7a677fb0fcc5ece387b5ae/noawclg-0.0.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4.1": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.4.1/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e5b67a0682a499db8ad550306f515c70",
                    "sha256": "0e6ee6fe8452726918ddfb09af77589d067a6c676e1383031a0db621f5031cbd"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.4.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "e5b67a0682a499db8ad550306f515c70",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23661,
                "upload_time": "2022-01-09T21:00:05",
                "upload_time_iso_8601": "2022-01-09T21:00:05.089056Z",
                "url": "https://files.pythonhosted.org/packages/0e/5e/230c3a2e78eade8aff7d39579496fbdbc3625b8433efc906dd3efffdd3eb/noawclg-0.0.4.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.4.2": {
        "info": {
            "author": "Reinan Br",
            "author_email": "slimchatuba@gmail.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "\n<h1 align='center'>NOAWClg</h1>\n<p align='center'>\n\n<br/>\n<a href=\"https://github.com/perseu912\"><img title=\"Autor\" src=\"https://img.shields.io/badge/Autor-reinan_br-blue.svg?style=for-the-badge&logo=github\"></a>\n<br/>\n<a href='http://dgp.cnpq.br/dgp/espelhogrupo/0180330616769073'><img src='https://shields.io/badge/cnpq-grupo_de_fisica_computacional_ifsertao--pe-blueviolet?logo=appveyor&style=for-the-badge'></a>\n\n<p align='center'>\n<!-- github dados --\n<!-- sites de pacotes -->\n<a href='https://pypi.org/project/noaawc/'><img src='https://img.shields.io/pypi/v/noawclg'></a>\n<a href='#'><img src='https://img.shields.io/pypi/wheel/noawclg'></a>\n<a href='#'><img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/noawclg\"></a>\n<img alt=\"PyPI - License\" src=\"https://img.shields.io/pypi/l/noawclg\">\n<br/>\n<!-- outros premios e analises -->\n<!-- <a href='#'><img alt=\"CodeFactor Grade\" src=\"https://img.shields.io/codefactor/grade/github/perseu912/noawclg?logo=codefactor\">\n</a> -->\n<!-- redes sociais -->\n<a href='https://instagram.com/gpftc_ifsertao/'><img src='https://shields.io/badge/insta-gpftc_ifsertao-darkviolet?logo=instagram&style=flat'></a>\n<!-- a href='https://discord.gg/pFZP86gvEm'><img src='https://img.shields.io/discord/856582838467952680.svg?label=discord&logo=discord'></a -->\n\n</p>\n</p>\n<p align='center'> <b>Library for getting  the world data climate from the data noaa/nasa</b></p>\n<hr/>\n\n## Instalation\n\n```sh\n$ pip3 install noawcgl -U\n```\n\n## Examples\n### getting data\n<br>\n\n#### from a point\ngetting the data:\n```py\nfrom noawclg import get_noaa_data as gnd\n\npoint = (-9.41,-40.5)\n\ndata = gnd.get_data_from_point(point)\n\n# a example for the surface temperature\ndata = {'time':data['time'],'data':data['tmpsfc']}\n\nprint(data)\n```\n\n```sh\n{'time': <xarray.IndexVariable 'time' (time: 129)>\narray(['2022-01-01T00:00:00.000000000', '2022-01-01T03:00:00.000000000',\n       '2022-01-01T06:00:00.000000000', '2022-01-01T09:00:00.000000000',\n       '2022-01-01T12:00:00.000000000', '2022-01-01T15:00:00.000000000',\n       '2022-01-01T18:00:00.000000000', '2022-01-01T21:00:00.000000000',\n       '2022-01-02T00:00:00.000000000', '2022-01-02T03:00:00.000000000',\n       '2022-01-02T06:00:00.000000000', '2022-01-02T09:00:00.000000000',\n       '2022-01-02T12:00:00.000000000', '2022-01-02T15:00:00.000000000',\n       '2022-01-02T18:00:00.000000000', '2022-01-02T21:00:00.000000000',\n       '2022-01-03T00:00:00.000000000', '2022-01-03T03:00:00.000000000',\n                                    ....\n       '2022-01-15T18:00:00.000000000', '2022-01-15T21:00:00.000000000',\n       '2022-01-16T00:00:00.000000000', '2022-01-16T03:00:00.000000000',\n       '2022-01-16T06:00:00.000000000', '2022-01-16T09:00:00.000000000',\n       '2022-01-16T12:00:00.000000000', '2022-01-16T15:00:00.000000000',\n       '2022-01-16T18:00:00.000000000', '2022-01-16T21:00:00.000000000',\n       '2022-01-17T00:00:00.000000000'], dtype='datetime64[ns]')\nAttributes:\n    grads_dim:      t\n    grads_mapping:  linear\n    grads_size:     129\n    grads_min:      00z01jan2022\n    grads_step:     3hr\n    long_name:      time\n    minimum:        00z01jan2022\n    maximum:        00z17jan2022\n    resolution:     0.125, 'data': <xarray.Variable (time: 129)>\narray([302.32916, 302.33063, 302.31046, 302.7827 , 303.02896, 302.28903,\n       302.29962, 302.29337, 302.25876, 302.302  , 302.41086, 302.907  ,\n       303.10004, 302.4816 , 302.3765 , 302.38263, 302.3673 , 302.40558,\n       302.4181 , 303.05243, 303.3014 , 302.52554, 302.30768, 302.2898 ,\n       302.27194, 302.25403, 302.44955, 303.30478, 303.53696, 302.60095,\n       302.3012 , 302.30118, 302.28815, 302.34244, 302.37427, 303.0273 ,\n       303.33054, 302.54422, 302.4121 , 302.35107, 302.3121 , 302.35263,\n       302.44736, 302.88632, 303.20844, 302.51526, 302.4    , 302.31686,\n       302.3237 , 302.36264, 302.3221 , 302.6572 , 302.64008, 302.30173,\n       302.26715, 302.3487 , 302.2893 , 302.3021 , 302.372  , 302.79086,\n       302.5877 , 302.3137 , 302.35422, 302.33835, 302.33206, 302.2572 ,\n       302.28955, 302.70654, 302.62338, 302.33896, 302.2855 , 302.2695 ,\n       302.28635, 302.30844, 302.28635, 302.69318, 302.7695 , 302.28632,\n       302.2542 , 302.29767, 302.29282, 302.3    , 302.34424, 302.45758,\n       302.6297 , 302.28122, 302.30002, 302.27756, 302.2916 , 302.28403,\n       302.34793, 302.6237 , 302.7041 , 302.20798, 302.3054 , 302.31668,\n       302.2472 , 302.3143 , 302.30505, 302.42892, 302.58902, 302.2641 ,\n       302.30127, 302.31564, 302.30002, 302.31393, 302.3112 , 302.714  ,\n       303.03915, 302.4548 , 302.3548 , 302.31393, 302.26282, 302.30002,\n       302.3594 , 302.96558, 302.692  , 302.28314, 302.20352, 302.28723,\n       302.23373, 302.26645, 302.30002, 302.6699 , 302.9055 , 302.4652 ,\n       302.3585 , 302.26627, 302.30002], dtype=float32)\nAttributes:\n    long_name:  ** surface temperature [k] }\n```\n\n#### plot data from a place:\n```py\nfrom noawclg.main import get_noaa_data as gnd\ndata_noaa = gnd(gfs='1p00')\n\nplace = 'juazeiro BA'\nprint(data_noaa.get_noaa_keys())\n\n\n## rain's (mm)\ndef fmt(data): return data* 100_000\ndata_noaa.plot_data_from_place(place=place,path_file='plot_ch1.png',\n                               title='Previs\u00e3o de Chuvas\\nPetrolina-PE/Juazeiro-BA',\n                                ylabel='mm',fmt_data=fmt,key_noaa='prateavesfc')\n\n\n\n## wind speed v-component (m/s)\ndef fmt_t(data): return data\ndata_noaa.plot_data_from_place(place=place,path_file='plot_wind100m.png',\n                               title='Velocidade dos Ventos\\nPetrolina-PE/Juazeiro-BA',\n                                ylabel='m/s',fmt_data=fmt_t,key_noaa='vgrdmwl')\n\n```\n<hr>\n\n\n### getting the list keys for get data (use it as guide)\n\n```py\nfrom noawclg import get_data_noaa as gdn\n\ndata_noaa = gdn()\nprint(data_noaa.get_noaa_keys())\n```\n\n```sh\n[{'time': 'time'} {'lev': 'altitude'} {'lat': 'latitude'}\n {'lon': 'longitude'}\n {'absvprs': '** (1000 975 950 925 900.. 10 7 4 2 1) absolute vorticity [1/s] '}\n {'no4lftxsfc': '** surface best (4 layer) lifted index [k] '}\n {'acpcpsfc': '** surface convective precipitation [kg/m^2] '}\n {'albdosfc': '** surface albedo [%] '}\n {'apcpsfc': '** surface total precipitation [kg/m^2] '}\n {'capesfc': '** surface convective available potential energy [j/kg] '}\n {'cape180_0mb': '** 180-0 mb above ground convective available potential energy [j/kg] '}\n {'cape90_0mb': '** 90-0 mb above ground convective available potential energy [j/kg] '}\n {'cape255_0mb': '** 255-0 mb above ground convective available potential energy [j/kg] '}\n {'cfrzravesfc': '** surface categorical freezing rain [-] '}\n {'cfrzrsfc': '** surface categorical freezing rain [-] '}\n {'cicepavesfc': '** surface categorical ice pellets [-] '}\n {'cicepsfc': '** surface categorical ice pellets [-] '}\n {'cinsfc': '** surface convective inhibition [j/kg] '}\n {'cin180_0mb': '** 180-0 mb above ground convective inhibition [j/kg] '}\n {'cin90_0mb': '** 90-0 mb above ground convective inhibition [j/kg] '}\n {'cin255_0mb': '** 255-0 mb above ground convective inhibition [j/kg] '}\n {'clwmrprs': '** (1000 975 950 925 900.. 250 200 150 100 50) cloud mixing ratio [kg/kg] '}\n {'clwmrhy1': '** 1 hybrid level cloud mixing ratio [kg/kg] '}\n {'cnwatsfc': '** surface plant canopy surface water [kg/m^2] '}\n {'cpofpsfc': '** surface percent frozen precipitation [%] '}\n {'cpratavesfc': '** surface convective precipitation rate [kg/m^2/s] '}\n {'cpratsfc': '** surface convective precipitation rate [kg/m^2/s] '}\n {'crainavesfc': '** surface categorical rain [-] '}\n {'crainsfc': '** surface categorical rain [-] '}\n {'csnowavesfc': '** surface categorical snow [-] '}\n {'csnowsfc': '** surface categorical snow [-] '}\n {'cwatclm': '** entire atmosphere (considered as a single layer) cloud water [kg/m^2] '}\n {'cworkclm': '** entire atmosphere (considered as a single layer) cloud work function [j/kg] '}\n {'dlwrfsfc': '** surface downward long-wave rad. flux [w/m^2] '}\n {'dpt2m': '** 2 m above ground dew point temperature [k] '}\n {'dswrfsfc': '** surface downward short-wave radiation flux [w/m^2] '}\n {'dzdtprs': '** (1000 975 950 925 900.. 10 7 4 2 1) vertical velocity (geometric) [m/s] '}\n {'fldcpsfc': '** surface field capacity [fraction] '}\n {'fricvsfc': '** surface frictional velocity [m/s] '}\n {'gfluxsfc': '** surface ground heat flux [w/m^2] '}\n {'grleprs': '** (1000 975 950 925 900.. 250 200 150 100 50) graupel [kg/kg] '}\n {'grlehy1': '** 1 hybrid level graupel [kg/kg] '}\n {'gustsfc': '** surface wind speed (gust) [m/s] '}\n {'hcdcavehcll': '** high cloud layer high cloud cover [%] '}\n {'hcdchcll': '** high cloud layer high cloud cover [%] '}\n {'hgtsfc': '** surface geopotential height [gpm] '}\n {'hgtprs': '** (1000 975 950 925 900.. 10 7 4 2 1) geopotential height [gpm] '}\n {'hgt2pv': '** pv=2e-06 (km^2/kg/s) surface geopotential height [gpm] '}\n {'hgtneg2pv': '** pv=-2e-06 (km^2/kg/s) surface geopotential height [gpm] '}\n {'hgttop0c': '** highest tropospheric freezing level geopotential height [gpm] '}\n {'hgtceil': '** cloud ceiling geopotential height [gpm] '}\n {'hgt0c': '** 0c isotherm geopotential height [gpm] '}\n {'hgtmwl': '** max wind geopotential height [gpm] '}\n {'hgttrop': '** tropopause geopotential height [gpm] '}\n {'hindexsfc': '** surface haines index [numeric] '}\n {'hlcy3000_0m': '** 3000-0 m above ground storm relative helicity [m^2/s^2] '}\n {'hpblsfc': '** surface planetary boundary layer height [m] '}\n {'icahtmwl': '** max wind icao standard atmosphere reference height [m] '}\n {'icahttrop': '** tropopause icao standard atmosphere reference height [m] '}\n {'icecsfc': '** surface ice cover [proportion] '}\n {'iceg_10m': '** 10 m above mean sea level ice growth rate [m/s] '}\n {'icetksfc': '** surface ice thickness [m] '}\n {'icetmpsfc': '** surface ice temperature [k] '}\n {'icmrprs': '** (1000 975 950 925 900.. 250 200 150 100 50) ice water mixing ratio [kg/kg] '}\n {'icmrhy1': '** 1 hybrid level ice water mixing ratio [kg/kg] '}\n {'landsfc': '** surface land cover (0=sea, 1=land) [proportion] '}\n {'lcdcavelcll': '** low cloud layer low cloud cover [%] '}\n {'lcdclcll': '** low cloud layer low cloud cover [%] '}\n {'lftxsfc': '** surface surface lifted index [k] '}\n {'lhtflsfc': '** surface latent heat net flux [w/m^2] '}\n {'mcdcavemcll': '** middle cloud layer medium cloud cover [%] '}\n {'mcdcmcll': '** middle cloud layer medium cloud cover [%] '}\n {'msletmsl': '** mean sea level mslp (eta model reduction) [pa] '}\n {'o3mrprs': '** (1000 975 950 925 900.. 10 7 4 2 1) ozone mixing ratio [kg/kg] '}\n {'pevprsfc': '** surface potential evaporation rate [w/m^2] '}\n {'plpl255_0mb': '** 255-0 mb above ground pressure of level from which parcel was lifted [pa] '}\n {'potsig995': '** 0.995 sigma level potential temperature [k] '}\n {'prateavesfc': '** surface precipitation rate [kg/m^2/s] '}\n {'pratesfc': '** surface precipitation rate [kg/m^2/s] '}\n {'preslclb': '** low cloud bottom level pressure [pa] '}\n {'preslclt': '** low cloud top level pressure [pa] '}\n {'presmclb': '** middle cloud bottom level pressure [pa] '}\n {'presmclt': '** middle cloud top level pressure [pa] '}\n {'preshclb': '** high cloud bottom level pressure [pa] '}\n {'preshclt': '** high cloud top level pressure [pa] '}\n {'pressfc': '** surface pressure [pa] '}\n {'pres80m': '** 80 m above ground pressure [pa] '}\n {'pres2pv': '** pv=2e-06 (km^2/kg/s) surface pressure [pa] '}\n {'presneg2pv': '** pv=-2e-06 (km^2/kg/s) surface pressure [pa] '}\n {'prescclb': '** convective cloud bottom level pressure [pa] '}\n {'prescclt': '** convective cloud top level pressure [pa] '}\n {'presmwl': '** max wind pressure [pa] '}\n {'prestrop': '** tropopause pressure [pa] '}\n {'prmslmsl': '** mean sea level pressure reduced to msl [pa] '}\n {'pwatclm': '** entire atmosphere (considered as a single layer) precipitable water [kg/m^2] '}\n {'refcclm': '** entire atmosphere composite reflectivity [db] '}\n {'refd4000m': '** 4000 m above ground reflectivity [db] '}\n {'refd1000m': '** 1000 m above ground reflectivity [db] '}\n {'refdhy1': '** 1 hybrid level reflectivity [db] '}\n {'refdhy2': '** 2 hybrid level reflectivity [db] '}\n {'rhprs': '** (1000 975 950 925 900.. 10 7 4 2 1) relative humidity [%] '}\n {'rh2m': '** 2 m above ground relative humidity [%] '}\n {'rhsg330_1000': '** 0.33-1 sigma layer relative humidity [%] '}\n {'rhsg440_1000': '** 0.44-1 sigma layer relative humidity [%] '}\n {'rhsg720_940': '** 0.72-0.94 sigma layer relative humidity [%] '}\n {'rhsg440_720': '** 0.44-0.72 sigma layer relative humidity [%] '}\n {'rhsig995': '** 0.995 sigma level relative humidity [%] '}\n {'rh30_0mb': '** 30-0 mb above ground relative humidity [%] '}\n {'rhclm': '** entire atmosphere (considered as a single layer) relative humidity [%] '}\n {'rhtop0c': '** highest tropospheric freezing level relative humidity [%] '}\n {'rh0c': '** 0c isotherm relative humidity [%] '}\n {'rwmrprs': '** (1000 975 950 925 900.. 250 200 150 100 50) rain mixing ratio [kg/kg] '}\n {'rwmrhy1': '** 1 hybrid level rain mixing ratio [kg/kg] '}\n {'sfcrsfc': '** surface surface roughness [m] '}\n {'shtflsfc': '** surface sensible heat net flux [w/m^2] '}\n {'snmrprs': '** (1000 975 950 925 900.. 250 200 150 100 50) snow mixing ratio [kg/kg] '}\n {'snmrhy1': '** 1 hybrid level snow mixing ratio [kg/kg] '}\n {'snodsfc': '** surface snow depth [m] '}\n {'soill0_10cm': '** 0-0.1 m below ground liquid volumetric soil moisture (non frozen) [proportion] '}\n {'soill10_40cm': '** 0.1-0.4 m below ground liquid volumetric soil moisture (non frozen) [proportion] '}\n {'soill40_100cm': '** 0.4-1 m below ground liquid volumetric soil moisture (non frozen) [proportion] '}\n {'soill100_200cm': '** 1-2 m below ground liquid volumetric soil moisture (non frozen) [proportion] '}\n {'soilw0_10cm': '** 0-0.1 m below ground volumetric soil moisture content [fraction] '}\n {'soilw10_40cm': '** 0.1-0.4 m below ground volumetric soil moisture content [fraction] '}\n {'soilw40_100cm': '** 0.4-1 m below ground volumetric soil moisture content [fraction] '}\n {'soilw100_200cm': '** 1-2 m below ground volumetric soil moisture content [fraction] '}\n {'sotypsfc': '** surface soil type [-] '}\n {'spfhprs': '** (1000 975 950 925 900.. 10 7 4 2 1) specific humidity [kg/kg] '}\n {'spfh2m': '** 2 m above ground specific humidity [kg/kg] '}\n {'spfh80m': '** 80 m above ground specific humidity [kg/kg] '}\n {'spfh30_0mb': '** 30-0 mb above ground specific humidity [kg/kg] '}\n {'sunsdsfc': '** surface sunshine duration [s] '}\n {'tcdcaveclm': '** entire atmosphere total cloud cover [%] '}\n {'tcdcblcll': '** boundary layer cloud layer total cloud cover [%] '}\n {'tcdcclm': '** entire atmosphere total cloud cover [%] '}\n {'tcdcprs': '** (1000 975 950 925 900.. 250 200 150 100 50) total cloud cover [%] '}\n {'tcdcccll': '** convective cloud layer total cloud cover [%] '}\n {'tmax2m': '** 2 m above ground maximum temperature [k] '}\n {'tmin2m': '** 2 m above ground minimum temperature [k] '}\n {'tmplclt': '** low cloud top level temperature [k] '}\n {'tmpmclt': '** middle cloud top level temperature [k] '}\n {'tmphclt': '** high cloud top level temperature [k] '}\n {'tmpsfc': '** surface temperature [k] '}\n {'tmpprs': '** (1000 975 950 925 900.. 10 7 4 2 1) temperature [k] '}\n {'tmp_1829m': '** 1829 m above mean sea level temperature [k] '}\n {'tmp_2743m': '** 2743 m above mean sea level temperature [k] '}\n {'tmp_3658m': '** 3658 m above mean sea level temperature [k] '}\n {'tmp2m': '** 2 m above ground temperature [k] '}\n {'tmp80m': '** 80 m above ground temperature [k] '}\n {'tmp100m': '** 100 m above ground temperature [k] '}\n {'tmpsig995': '** 0.995 sigma level temperature [k] '}\n {'tmp30_0mb': '** 30-0 mb above ground temperature [k] '}\n {'tmp2pv': '** pv=2e-06 (km^2/kg/s) surface temperature [k] '}\n {'tmpneg2pv': '** pv=-2e-06 (km^2/kg/s) surface temperature [k] '}\n {'tmpmwl': '** max wind temperature [k] '}\n {'tmptrop': '** tropopause temperature [k] '}\n {'tozneclm': '** entire atmosphere (considered as a single layer) total ozone [du] '}\n {'tsoil0_10cm': '** 0-0.1 m below ground soil temperature validation to deprecate [k] '}\n {'tsoil10_40cm': '** 0.1-0.4 m below ground soil temperature validation to deprecate [k] '}\n {'tsoil40_100cm': '** 0.4-1 m below ground soil temperature validation to deprecate [k] '}\n {'tsoil100_200cm': '** 1-2 m below ground soil temperature validation to deprecate [k] '}\n {'ugwdsfc': '** surface zonal flux of gravity wave stress [n/m^2] '}\n {'uflxsfc': '** surface momentum flux, u-component [n/m^2] '}\n {'ugrdprs': '** (1000 975 950 925 900.. 10 7 4 2 1) u-component of wind [m/s] '}\n {'ugrd_1829m': '** 1829 m above mean sea level u-component of wind [m/s] '}\n {'ugrd_2743m': '** 2743 m above mean sea level u-component of wind [m/s] '}\n {'ugrd_3658m': '** 3658 m above mean sea level u-component of wind [m/s] '}\n {'ugrd10m': '** 10 m above ground u-component of wind [m/s] '}\n {'ugrd20m': '** 20 m above ground u-component of wind [m/s] '}\n {'ugrd30m': '** 30 m above ground u-component of wind [m/s] '}\n {'ugrd40m': '** 40 m above ground u-component of wind [m/s] '}\n {'ugrd50m': '** 50 m above ground u-component of wind [m/s] '}\n {'ugrd80m': '** 80 m above ground u-component of wind [m/s] '}\n {'ugrd100m': '** 100 m above ground u-component of wind [m/s] '}\n {'ugrdsig995': '** 0.995 sigma level u-component of wind [m/s] '}\n {'ugrd30_0mb': '** 30-0 mb above ground u-component of wind [m/s] '}\n {'ugrd2pv': '** pv=2e-06 (km^2/kg/s) surface u-component of wind [m/s] '}\n {'ugrdneg2pv': '** pv=-2e-06 (km^2/kg/s) surface u-component of wind [m/s] '}\n {'ugrdpbl': '** planetary boundary layer u-component of wind [m/s] '}\n {'ugrdmwl': '** max wind u-component of wind [m/s] '}\n {'ugrdtrop': '** tropopause u-component of wind [m/s] '}\n {'ulwrfsfc': '** surface upward long-wave rad. flux [w/m^2] '}\n {'ulwrftoa': '** top of atmosphere upward long-wave rad. flux [w/m^2] '}\n {'ustm6000_0m': '** 6000-0 m above ground u-component storm motion [m/s] '}\n {'uswrfsfc': '** surface upward short-wave radiation flux [w/m^2] '}\n {'uswrftoa': '** top of atmosphere upward short-wave radiation flux [w/m^2] '}\n {'vgwdsfc': '** surface meridional flux of gravity wave stress [n/m^2] '}\n {'vegsfc': '** surface vegetation [%] '}\n {'vflxsfc': '** surface momentum flux, v-component [n/m^2] '}\n {'vgrdprs': '** (1000 975 950 925 900.. 10 7 4 2 1) v-component of wind [m/s] '}\n {'vgrd_1829m': '** 1829 m above mean sea level v-component of wind [m/s] '}\n {'vgrd_2743m': '** 2743 m above mean sea level v-component of wind [m/s] '}\n {'vgrd_3658m': '** 3658 m above mean sea level v-component of wind [m/s] '}\n {'vgrd10m': '** 10 m above ground v-component of wind [m/s] '}\n {'vgrd20m': '** 20 m above ground v-component of wind [m/s] '}\n {'vgrd30m': '** 30 m above ground v-component of wind [m/s] '}\n {'vgrd40m': '** 40 m above ground v-component of wind [m/s] '}\n {'vgrd50m': '** 50 m above ground v-component of wind [m/s] '}\n {'vgrd80m': '** 80 m above ground v-component of wind [m/s] '}\n {'vgrd100m': '** 100 m above ground v-component of wind [m/s] '}\n {'vgrdsig995': '** 0.995 sigma level v-component of wind [m/s] '}\n {'vgrd30_0mb': '** 30-0 mb above ground v-component of wind [m/s] '}\n {'vgrd2pv': '** pv=2e-06 (km^2/kg/s) surface v-component of wind [m/s] '}\n {'vgrdneg2pv': '** pv=-2e-06 (km^2/kg/s) surface v-component of wind [m/s] '}\n {'vgrdpbl': '** planetary boundary layer v-component of wind [m/s] '}\n {'vgrdmwl': '** max wind v-component of wind [m/s] '}\n {'vgrdtrop': '** tropopause v-component of wind [m/s] '}\n {'vissfc': '** surface visibility [m] '}\n {'vratepbl': '** planetary boundary layer ventilation rate [m^2/s] '}\n {'vstm6000_0m': '** 6000-0 m above ground v-component storm motion [m/s] '}\n {'vvelprs': '** (1000 975 950 925 900.. 10 7 4 2 1) vertical velocity (pressure) [pa/s] '}\n {'vvelsig995': '** 0.995 sigma level vertical velocity (pressure) [pa/s] '}\n {'vwsh2pv': '** pv=2e-06 (km^2/kg/s) surface vertical speed shear [1/s] '}\n {'vwshneg2pv': '** pv=-2e-06 (km^2/kg/s) surface vertical speed shear [1/s] '}\n {'vwshtrop': '** tropopause vertical speed shear [1/s] '}\n {'watrsfc': '** surface water runoff [kg/m^2] '}\n {'weasdsfc': '** surface water equivalent of accumulated snow depth [kg/m^2] '}\n {'wiltsfc': '** surface wilting point [fraction] '}\n {'var00212m': '** 2 m above ground desc [unit] '}]\n```\n\n\n#### getting the all data\n```py\nfrom noawclg import get_noaa_data as gnd\n\ndata_noaa = gnd()\n\nprint(data_noaa)\n```\n\n```sh\n\nFrozen({'time': <xarray.IndexVariable 'time' (time: 129)>\narray(['2022-01-01T00:00:00.000000000', '2022-01-01T03:00:00.000000000',\n       '2022-01-01T06:00:00.000000000', '2022-01-01T09:00:00.000000000',\n       '2022-01-01T12:00:00.000000000', '2022-01-01T15:00:00.000000000',\n       '2022-01-01T18:00:00.000000000', '2022-01-01T21:00:00.000000000',\n       '2022-01-02T00:00:00.000000000', '2022-01-02T03:00:00.000000000',\n       '2022-01-02T06:00:00.000000000', '2022-01-02T09:00:00.000000000',\n       '2022-01-02T12:00:00.000000000', '2022-01-02T15:00:00.000000000',\n       '2022-01-02T18:00:00.000000000', '2022-01-02T21:00:00.000000000',\n       '2022-01-03T00:00:00.000000000', '2022-01-03T03:00:00.000000000',\n       '2022-01-03T06:00:00.000000000', '2022-01-03T09:00:00.000000000',\n       '2022-01-03T12:00:00.000000000', '2022-01-03T15:00:00.000000000',\n       '2022-01-03T18:00:00.000000000', '2022-01-03T21:00:00.000000000',\n       '2022-01-04T00:00:00.000000000', '2022-01-04T03:00:00.000000000',\n       '2022-01-04T06:00:00.000000000', '2022-01-04T09:00:00.000000000',\n       '2022-01-04T12:00:00.000000000', '2022-01-04T15:00:00.000000000',\n       '2022-01-04T18:00:00.000000000', '2022-01-04T21:00:00.000000000',\n       '2022-01-05T00:00:00.000000000', '2022-01-05T03:00:00.000000000',\n       '2022-01-05T06:00:00.000000000', '2022-01-05T09:00:00.000000000',\n       '2022-01-05T12:00:00.000000000', '2022-01-05T15:00:00.000000000',\n       '2022-01-05T18:00:00.000000000', '2022-01-05T21:00:00.000000000',\n       '2022-01-06T00:00:00.000000000', '2022-01-06T03:00:00.000000000',\n       '2022-01-06T06:00:00.000000000', '2022-01-06T09:00:00.000000000',\n       '2022-01-06T12:00:00.000000000', '2022-01-06T15:00:00.000000000',\n       '2022-01-06T18:00:00.000000000', '2022-01-06T21:00:00.000000000',\n       '2022-01-07T00:00:00.000000000', '2022-01-07T03:00:00.000000000',\n       '2022-01-07T06:00:00.000000000', '2022-01-07T09:00:00.000000000',\n       '2022-01-07T12:00:00.000000000', '2022-01-07T15:00:00.000000000',\n       '2022-01-07T18:00:00.000000000', '2022-01-07T21:00:00.000000000',\n       '2022-01-08T00:00:00.000000000', '2022-01-08T03:00:00.000000000',\n       '2022-01-08T06:00:00.000000000', '2022-01-08T09:00:00.000000000',\n       '2022-01-08T12:00:00.000000000', '2022-01-08T15:00:00.000000000',\n       '2022-01-08T18:00:00.000000000', '2022-01-08T21:00:00.000000000',\n       '2022-01-09T00:00:00.000000000', '2022-01-09T03:00:00.000000000',\n       '2022-01-09T06:00:00.000000000', '2022-01-09T09:00:00.000000000',\n       '2022-01-09T12:00:00.000000000', '2022-01-09T15:00:00.000000000',\n       '2022-01-09T18:00:00.000000000', '2022-01-09T21:00:00.000000000',\n       '2022-01-10T00:00:00.000000000', '2022-01-10T03:00:00.000000000',\n       '2022-01-10T06:00:00.000000000', '2022-01-10T09:00:00.000000000',\n       '2022-01-10T12:00:00.000000000', '2022-01-10T15:00:00.000000000',\n       '2022-01-10T18:00:00.000000000', '2022-01-10T21:00:00.000000000',\n       '2022-01-11T00:00:00.000000000', '2022-01-11T03:00:00.000000000',\n       '2022-01-11T06:00:00.000000000', '2022-01-11T09:00:00.000000000',\n       '2022-01-11T12:00:00.000000000', '2022-01-11T15:00:00.000000000',\n       '2022-01-11T18:00:00.000000000', '2022-01-11T21:00:00.000000000',\n       '2022-01-12T00:00:00.000000000', '2022-01-12T03:00:00.000000000',\n       '2022-01-12T06:00:00.000000000', '2022-01-12T09:00:00.000000000',\n       '2022-01-12T12:00:00.000000000', '2022-01-12T15:00:00.000000000',\n       '2022-01-12T18:00:00.000000000', '2022-01-12T21:00:00.000000000',\n       '2022-01-13T00:00:00.000000000', '2022-01-13T03:00:00.000000000',\n       '2022-01-13T06:00:00.000000000', '2022-01-13T09:00:00.000000000',\n       '2022-01-13T12:00:00.000000000', '2022-01-13T15:00:00.000000000',\n       '2022-01-13T18:00:00.000000000', '2022-01-13T21:00:00.000000000',\n       '2022-01-14T00:00:00.000000000', '2022-01-14T03:00:00.000000000',\n       '2022-01-14T06:00:00.000000000', '2022-01-14T09:00:00.000000000',\n       '2022-01-14T12:00:00.000000000', '2022-01-14T15:00:00.000000000',\n       '2022-01-14T18:00:00.000000000', '2022-01-14T21:00:00.000000000',\n       '2022-01-15T00:00:00.000000000', '2022-01-15T03:00:00.000000000',\n       '2022-01-15T06:00:00.000000000', '2022-01-15T09:00:00.000000000',\n       '2022-01-15T12:00:00.000000000', '2022-01-15T15:00:00.000000000',\n       '2022-01-15T18:00:00.000000000', '2022-01-15T21:00:00.000000000',\n       '2022-01-16T00:00:00.000000000', '2022-01-16T03:00:00.000000000',\n       '2022-01-16T06:00:00.000000000', '2022-01-16T09:00:00.000000000',\n       '2022-01-16T12:00:00.000000000', '2022-01-16T15:00:00.000000000',\n       '2022-01-16T18:00:00.000000000', '2022-01-16T21:00:00.000000000',\n       '2022-01-17T00:00:00.000000000'], dtype='datetime64[ns]')\nAttributes:\n    grads_dim:      t\n    grads_mapping:  linear\n    grads_size:     129\n    grads_min:      00z01jan2022\n    grads_step:     3hr\n    long_name:      time\n    minimum:        00z01jan2022\n    maximum:        00z17jan2022\n    resolution:     0.125, 'lev': <xarray.IndexVariable 'lev' (lev: 41)>\narray([1.00e+03, 9.75e+02, 9.50e+02, 9.25e+02, 9.00e+02, 8.50e+02, 8.00e+02,\n       7.50e+02, 7.00e+02, 6.50e+02, 6.00e+02, 5.50e+02, 5.00e+02, 4.50e+02,\n       4.00e+02, 3.50e+02, 3.00e+02, 2.50e+02, 2.00e+02, 1.50e+02, 1.00e+02,\n       7.00e+01, 5.00e+01, 4.00e+01, 3.00e+01, 2.00e+01, 1.50e+01, 1.00e+01,\n       7.00e+00, 5.00e+00, 3.00e+00, 2.00e+00, 1.00e+00, 7.00e-01, 4.00e-01,\n       2.00e-01, 1.00e-01, 7.00e-02, 4.00e-02, 2.00e-02, 1.00e-02])\nAttributes:\n    grads_dim:      z\n    grads_mapping:  levels\n    units:          millibar\n    long_name:      altitude\n    minimum:        1000.0\n    maximum:        0.01\n    resolution:     24.99975, 'lat': <xarray.IndexVariable 'lat' (lat: 721)>\narray([-90.  , -89.75, -89.5 , ...,  89.5 ,  89.75,  90.  ])\nAttributes:\n    grads_dim:      y\n    grads_mapping:  linear\n    grads_size:     721\n    units:          degrees_north\n    long_name:      latitude\n    minimum:        -90.0\n    maximum:        90.0\n    resolution:     0.25, 'lon': <xarray.IndexVariable 'lon' (lon: 1440)>\narray([0.0000e+00, 2.5000e-01, 5.0000e-01, ..., 3.5925e+02, 3.5950e+02,\n       3.5975e+02])\nAttributes:\n    grads_dim:      x\n    grads_mapping:  linear\n    grads_size:     1440\n    units:          degrees_east\n    long_name:      longitude\n    minimum:        0.0\n    maximum:        359.75\n    resolution:     0.25, 'absvprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) absolute vorticity [1/s] , 'no4lftxsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface best (4 layer) lifted index [k] , 'acpcpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface convective precipitation [kg/m^2] , 'albdosfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface albedo [%] , 'apcpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface total precipitation [kg/m^2] , 'capesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface convective available potential energy [j/kg] , 'cape180_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 180-0 mb above ground convective available potential energ..., 'cape90_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 90-0 mb above ground convective available potential energy..., 'cape255_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 255-0 mb above ground convective available potential energ..., 'cfrzravesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical freezing rain [-] , 'cfrzrsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical freezing rain [-] , 'cicepavesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical ice pellets [-] , 'cicepsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical ice pellets [-] , 'cinsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface convective inhibition [j/kg] , 'cin180_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 180-0 mb above ground convective inhibition [j/kg] , 'cin90_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 90-0 mb above ground convective inhibition [j/kg] , 'cin255_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 255-0 mb above ground convective inhibition [j/kg] , 'clwmrprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) cloud mixing r..., 'clwmrhy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level cloud mixing ratio [kg/kg] , 'cnwatsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface plant canopy surface water [kg/m^2] , 'cpofpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface percent frozen precipitation [%] , 'cpratavesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface convective precipitation rate [kg/m^2/s] , 'cpratsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface convective precipitation rate [kg/m^2/s] , 'crainavesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical rain [-] , 'crainsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical rain [-] , 'csnowavesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical snow [-] , 'csnowsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface categorical snow [-] , 'cwatclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere (considered as a single layer) cloud wat..., 'cworkclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere (considered as a single layer) cloud wor..., 'dlwrfsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface downward long-wave rad. flux [w/m^2] , 'dpt2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground dew point temperature [k] , 'dswrfsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface downward short-wave radiation flux [w/m^2] , 'dzdtprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) vertical velocity (geo..., 'fldcpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface field capacity [fraction] , 'fricvsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface frictional velocity [m/s] , 'gfluxsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface ground heat flux [w/m^2] , 'grleprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) graupel [kg/kg] , 'grlehy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level graupel [kg/kg] , 'gustsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface wind speed (gust) [m/s] , 'hcdcavehcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** high cloud layer high cloud cover [%] , 'hcdchcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** high cloud layer high cloud cover [%] , 'hgtsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface geopotential height [gpm] , 'hgtprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) geopotential height [g..., 'hgt2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface geopotential height [gpm] , 'hgtneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface geopotential height [gpm] , 'hgttop0c': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** highest tropospheric freezing level geopotential height [g..., 'hgtceil': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** cloud ceiling geopotential height [gpm] , 'hgt0c': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0c isotherm geopotential height [gpm] , 'hgtmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind geopotential height [gpm] , 'hgttrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause geopotential height [gpm] , 'hindexsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface haines index [numeric] , 'hlcy3000_0m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 3000-0 m above ground storm relative helicity [m^2/s^2] , 'hpblsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface planetary boundary layer height [m] , 'icahtmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind icao standard atmosphere reference height [m] , 'icahttrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause icao standard atmosphere reference height [m] , 'icecsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface ice cover [proportion] , 'iceg_10m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 10 m above mean sea level ice growth rate [m/s] , 'icetksfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface ice thickness [m] , 'icetmpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface ice temperature [k] , 'icmrprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) ice water mixi..., 'icmrhy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level ice water mixing ratio [kg/kg] , 'landsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface land cover (0=sea, 1=land) [proportion] , 'lcdcavelcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** low cloud layer low cloud cover [%] , 'lcdclcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** low cloud layer low cloud cover [%] , 'lftxsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface surface lifted index [k] , 'lhtflsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface latent heat net flux [w/m^2] , 'mcdcavemcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** middle cloud layer medium cloud cover [%] , 'mcdcmcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** middle cloud layer medium cloud cover [%] , 'msletmsl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** mean sea level mslp (eta model reduction) [pa] , 'o3mrprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) ozone mixing ratio [kg..., 'pevprsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface potential evaporation rate [w/m^2] , 'plpl255_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 255-0 mb above ground pressure of level from which parcel ..., 'potsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level potential temperature [k] , 'prateavesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface precipitation rate [kg/m^2/s] , 'pratesfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface precipitation rate [kg/m^2/s] , 'preslclb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** low cloud bottom level pressure [pa] , 'preslclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** low cloud top level pressure [pa] , 'presmclb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** middle cloud bottom level pressure [pa] , 'presmclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** middle cloud top level pressure [pa] , 'preshclb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** high cloud bottom level pressure [pa] , 'preshclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** high cloud top level pressure [pa] , 'pressfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface pressure [pa] , 'pres80m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 80 m above ground pressure [pa] , 'pres2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface pressure [pa] , 'presneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface pressure [pa] , 'prescclb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** convective cloud bottom level pressure [pa] , 'prescclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** convective cloud top level pressure [pa] , 'presmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind pressure [pa] , 'prestrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause pressure [pa] , 'prmslmsl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** mean sea level pressure reduced to msl [pa] , 'pwatclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere (considered as a single layer) precipita..., 'refcclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere composite reflectivity [db] , 'refd4000m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 4000 m above ground reflectivity [db] , 'refd1000m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1000 m above ground reflectivity [db] , 'refdhy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level reflectivity [db] , 'refdhy2': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 hybrid level reflectivity [db] , 'rhprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) relative humidity [%] , 'rh2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground relative humidity [%] , 'rhsg330_1000': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.33-1 sigma layer relative humidity [%] , 'rhsg440_1000': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.44-1 sigma layer relative humidity [%] , 'rhsg720_940': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.72-0.94 sigma layer relative humidity [%] , 'rhsg440_720': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.44-0.72 sigma layer relative humidity [%] , 'rhsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level relative humidity [%] , 'rh30_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30-0 mb above ground relative humidity [%] , 'rhclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere (considered as a single layer) relative ..., 'rhtop0c': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** highest tropospheric freezing level relative humidity [%] , 'rh0c': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0c isotherm relative humidity [%] , 'rwmrprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) rain mixing ra..., 'rwmrhy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level rain mixing ratio [kg/kg] , 'sfcrsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface surface roughness [m] , 'shtflsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface sensible heat net flux [w/m^2] , 'snmrprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) snow mixing ra..., 'snmrhy1': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1 hybrid level snow mixing ratio [kg/kg] , 'snodsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface snow depth [m] , 'soill0_10cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0-0.1 m below ground liquid volumetric soil moisture (non ..., 'soill10_40cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.1-0.4 m below ground liquid volumetric soil moisture (no..., 'soill40_100cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.4-1 m below ground liquid volumetric soil moisture (non ..., 'soill100_200cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1-2 m below ground liquid volumetric soil moisture (non fr..., 'soilw0_10cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0-0.1 m below ground volumetric soil moisture content [fra..., 'soilw10_40cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.1-0.4 m below ground volumetric soil moisture content [f..., 'soilw40_100cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.4-1 m below ground volumetric soil moisture content [fra..., 'soilw100_200cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1-2 m below ground volumetric soil moisture content [fract..., 'sotypsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface soil type [-] , 'spfhprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) specific humidity [kg/..., 'spfh2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground specific humidity [kg/kg] , 'spfh80m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 80 m above ground specific humidity [kg/kg] , 'spfh30_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30-0 mb above ground specific humidity [kg/kg] , 'sunsdsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface sunshine duration [s] , 'tcdcaveclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere total cloud cover [%] , 'tcdcblcll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** boundary layer cloud layer total cloud cover [%] , 'tcdcclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere total cloud cover [%] , 'tcdcprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 250 200 150 100 50) total cloud co..., 'tcdcccll': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** convective cloud layer total cloud cover [%] , 'tmax2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground maximum temperature [k] , 'tmin2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground minimum temperature [k] , 'tmplclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** low cloud top level temperature [k] , 'tmpmclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** middle cloud top level temperature [k] , 'tmphclt': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** high cloud top level temperature [k] , 'tmpsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface temperature [k] , 'tmpprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) temperature [k] , 'tmp_1829m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1829 m above mean sea level temperature [k] , 'tmp_2743m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2743 m above mean sea level temperature [k] , 'tmp_3658m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 3658 m above mean sea level temperature [k] , 'tmp2m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground temperature [k] , 'tmp80m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 80 m above ground temperature [k] , 'tmp100m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 100 m above ground temperature [k] , 'tmpsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level temperature [k] , 'tmp30_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30-0 mb above ground temperature [k] , 'tmp2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface temperature [k] , 'tmpneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface temperature [k] , 'tmpmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind temperature [k] , 'tmptrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause temperature [k] , 'tozneclm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** entire atmosphere (considered as a single layer) total ozo..., 'tsoil0_10cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0-0.1 m below ground soil temperature validation to deprec..., 'tsoil10_40cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.1-0.4 m below ground soil temperature validation to depr..., 'tsoil40_100cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.4-1 m below ground soil temperature validation to deprec..., 'tsoil100_200cm': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1-2 m below ground soil temperature validation to deprecat..., 'ugwdsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface zonal flux of gravity wave stress [n/m^2] , 'uflxsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface momentum flux, u-component [n/m^2] , 'ugrdprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) u-component of wind [m..., 'ugrd_1829m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1829 m above mean sea level u-component of wind [m/s] , 'ugrd_2743m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2743 m above mean sea level u-component of wind [m/s] , 'ugrd_3658m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 3658 m above mean sea level u-component of wind [m/s] , 'ugrd10m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 10 m above ground u-component of wind [m/s] , 'ugrd20m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 20 m above ground u-component of wind [m/s] , 'ugrd30m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30 m above ground u-component of wind [m/s] , 'ugrd40m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 40 m above ground u-component of wind [m/s] , 'ugrd50m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 50 m above ground u-component of wind [m/s] , 'ugrd80m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 80 m above ground u-component of wind [m/s] , 'ugrd100m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 100 m above ground u-component of wind [m/s] , 'ugrdsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level u-component of wind [m/s] , 'ugrd30_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30-0 mb above ground u-component of wind [m/s] , 'ugrd2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface u-component of wind [m/s] , 'ugrdneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface u-component of wind [m/s] , 'ugrdpbl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** planetary boundary layer u-component of wind [m/s] , 'ugrdmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind u-component of wind [m/s] , 'ugrdtrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause u-component of wind [m/s] , 'ulwrfsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface upward long-wave rad. flux [w/m^2] , 'ulwrftoa': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** top of atmosphere upward long-wave rad. flux [w/m^2] , 'ustm6000_0m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 6000-0 m above ground u-component storm motion [m/s] , 'uswrfsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface upward short-wave radiation flux [w/m^2] , 'uswrftoa': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** top of atmosphere upward short-wave radiation flux [w/m^2] , 'vgwdsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface meridional flux of gravity wave stress [n/m^2] , 'vegsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface vegetation [%] , 'vflxsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface momentum flux, v-component [n/m^2] , 'vgrdprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) v-component of wind [m..., 'vgrd_1829m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 1829 m above mean sea level v-component of wind [m/s] , 'vgrd_2743m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2743 m above mean sea level v-component of wind [m/s] , 'vgrd_3658m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 3658 m above mean sea level v-component of wind [m/s] , 'vgrd10m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 10 m above ground v-component of wind [m/s] , 'vgrd20m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 20 m above ground v-component of wind [m/s] , 'vgrd30m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30 m above ground v-component of wind [m/s] , 'vgrd40m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 40 m above ground v-component of wind [m/s] , 'vgrd50m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 50 m above ground v-component of wind [m/s] , 'vgrd80m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 80 m above ground v-component of wind [m/s] , 'vgrd100m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 100 m above ground v-component of wind [m/s] , 'vgrdsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level v-component of wind [m/s] , 'vgrd30_0mb': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 30-0 mb above ground v-component of wind [m/s] , 'vgrd2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface v-component of wind [m/s] , 'vgrdneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface v-component of wind [m/s] , 'vgrdpbl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** planetary boundary layer v-component of wind [m/s] , 'vgrdmwl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** max wind v-component of wind [m/s] , 'vgrdtrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause v-component of wind [m/s] , 'vissfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface visibility [m] , 'vratepbl': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** planetary boundary layer ventilation rate [m^2/s] , 'vstm6000_0m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 6000-0 m above ground v-component storm motion [m/s] , 'vvelprs': <xarray.Variable (time: 129, lev: 41, lat: 721, lon: 1440)>\n[5491251360 values with dtype=float32]\nAttributes:\n    long_name:  ** (1000 975 950 925 900.. 10 7 4 2 1) vertical velocity (pre..., 'vvelsig995': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 0.995 sigma level vertical velocity (pressure) [pa/s] , 'vwsh2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=2e-06 (km^2/kg/s) surface vertical speed shear [1/s] , 'vwshneg2pv': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** pv=-2e-06 (km^2/kg/s) surface vertical speed shear [1/s] , 'vwshtrop': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** tropopause vertical speed shear [1/s] , 'watrsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface water runoff [kg/m^2] , 'weasdsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface water equivalent of accumulated snow depth [kg/m^2] , 'wiltsfc': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** surface wilting point [fraction] , 'var00212m': <xarray.Variable (time: 129, lat: 721, lon: 1440)>\n[133932960 values with dtype=float32]\nAttributes:\n    long_name:  ** 2 m above ground desc [unit] })\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/perseu912/noawclg",
            "keywords": "climate weather noaa",
            "license": "GPLv3",
            "maintainer": "",
            "maintainer_email": "",
            "name": "noawclg",
            "package_url": "https://pypi.org/project/noawclg/",
            "platform": "",
            "project_url": "https://pypi.org/project/noawclg/",
            "project_urls": {
                "Homepage": "https://github.com/perseu912/noawclg"
            },
            "release_url": "https://pypi.org/project/noawclg/0.0.4.2/",
            "requires_dist": [
                "numpy",
                "xarray",
                "netcdf4",
                "matplotlib",
                "geopy",
                "openpyxl"
            ],
            "requires_python": "",
            "summary": "Library for getting dataset from noaa site",
            "version": "0.0.4.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 13061917,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "ee99eccfeb448814c669a595665a595a",
                    "sha256": "4d03421a2353a03040a4f70f693101c7abf59ec6d4e0bc4d359ace64421daf85"
                },
                "downloads": -1,
                "filename": "noawclg-0.0.4.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ee99eccfeb448814c669a595665a595a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 23666,
                "upload_time": "2022-03-02T21:21:25",
                "upload_time_iso_8601": "2022-03-02T21:21:25.487636Z",
                "url": "https://files.pythonhosted.org/packages/6f/54/ea6734784607bd443419b0a72c4fadf1e05633fe1d218e409a51c30be45f/noawclg-0.0.4.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}