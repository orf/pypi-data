{
    "0.0.1": {
        "info": {
            "author": "Tri Wahyu Utomo",
            "author_email": "tri@nodeflux.io",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# VISIONAIRE4\n\nA suite of tools used for maintenance.  \nSupported function subcommand:\n- `export`: Export metrics and edge cases data from current machine to files.\n- `import`: Import metrics and edge cases data from the exported files to current machine.\n\n## Installation\n\n- You can install from prebuilt wheel on [Visionaire4 package registry](https://gitlab.com/nodefluxio/visionaire4/-/packages).\n Then install it by running:\n```bash\n$ pip install [path to .whl file]\n```\n\n- or you can install it directly using pip:\n```bash\n$ pip install visionaire4 --extra-index-url https://__token__:<personal_access_token>@gitlab.com/api/v4/projects/20878702/packages/pypi/simple\n```\nNote that you need to fill `<personal_access_token>` which you can create from `Preference > Access Tokes`.\nFor more information see https://docs.gitlab.com/ee/user/packages/pypi_repository/#install-from-the-project-level \nand in https://gitlab.com/nodefluxio/visionaire4/-/packages\n\n- or you can install this tool by either clone this repo and run:\n```bash\n$ tools/benchmark\n$ pip install --upgrade pip wheel\n$ pip install .\n```\n\n## How to Use\n\n### Export\n\nBefore running export metrics make sure to have prometheus server to be running.  \nExport monitoring metrics data by running: \n```\n$ visionaire4 export metrics\n```\n\nThis command will pull metrics data from prometheus server running in container named `visionaire4`.  \nYou can configure the container name where the prometheus server is running with:\n```\n$ visionaire4 export metrics --prom-name <container name>\n```\n\nThis will export the file to the default directory of `~/nodeflux/export`.  \nYou can configure where the exported file output directory with:\n```\n$ visionaire4 export metrics --out-dir <output directory>\n```\n\n### Import\n\nImport the exported data by running:\n```\n$ visionaire4 import metrics -f <path to exported file>\n```\n\nThis will spawn a prometheus and grafana server and you can view the grafana dashboards at http://localhost:3000\nwith username `admin` and password `admin`.\n\nAll the required configs to run the prometheus and grafana server will be generated to the default directory of `~/nodeflux/import`.  \nYou can configure the config directory with:\n```\n$ visionaire4 import metrics -f <path to exported file> --cfg-dir <config directory>\n```\n\nWhen you finished viewing the metrics data, you can shutdown the monitoring server by running:\n```\n$ visionaire4 import metrics --cfg-dir <config directory> --down\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitlab.com/nodefluxio/visionaire4",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "visionaire4",
            "package_url": "https://pypi.org/project/visionaire4/",
            "platform": null,
            "project_url": "https://pypi.org/project/visionaire4/",
            "project_urls": {
                "Homepage": "https://gitlab.com/nodefluxio/visionaire4"
            },
            "release_url": "https://pypi.org/project/visionaire4/0.0.1/",
            "requires_dist": [
                "requests",
                "docker (>=4.3.0)",
                "pyyaml",
                "pytest ; extra == 'dev'",
                "pytest-cov ; extra == 'dev'",
                "flake8 ; extra == 'dev'",
                "twine ; extra == 'dev'",
                "wheel ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Visionaire4 maintenance tools suite",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15912275,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2710dcaab4a9464069f46c9b6e08a56f",
                    "sha256": "401f99ba76783f86d5e19418eb068baa9bb9fbed512d04cd68bf4a85ef48eb9e"
                },
                "downloads": -1,
                "filename": "visionaire4-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2710dcaab4a9464069f46c9b6e08a56f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 19148,
                "upload_time": "2022-11-28T10:03:55",
                "upload_time_iso_8601": "2022-11-28T10:03:55.763659Z",
                "url": "https://files.pythonhosted.org/packages/79/1a/fa765a22d42bb5d47a2be08faf079c8e52683e9c40698c146019f0608ce8/visionaire4-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "738deaafc9af1a9c3a3fec48c04af601",
                    "sha256": "e31e44cd0f9d9bf699e285f7520f032b6eac01b43b46416bf3d92d38e36705c9"
                },
                "downloads": -1,
                "filename": "visionaire4-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "738deaafc9af1a9c3a3fec48c04af601",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 16081,
                "upload_time": "2022-11-28T10:03:57",
                "upload_time_iso_8601": "2022-11-28T10:03:57.545237Z",
                "url": "https://files.pythonhosted.org/packages/2f/d2/5aba753a246d1a6cffbb17f35a81023c4f604b39427251bcfe6e81d5a9ff/visionaire4-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}