{
    "3.6.2": {
        "info": {
            "author": "Natural History Museum",
            "author_email": "data@nhm.ac.uk",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore",
            "keywords": "CKAN data elastic versioning",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ckanext-versioned-datastore",
            "package_url": "https://pypi.org/project/ckanext-versioned-datastore/",
            "platform": null,
            "project_url": "https://pypi.org/project/ckanext-versioned-datastore/",
            "project_urls": {
                "Homepage": "https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore"
            },
            "release_url": "https://pypi.org/project/ckanext-versioned-datastore/3.6.2/",
            "requires_dist": [
                "backports.csv (==1.0.6)",
                "cchardet (==2.1.4)",
                "openpyxl (==2.5.8)",
                "requests",
                "six (>=1.11.0)",
                "xlrd (==1.1.0)",
                "elasticsearch (<7.0.0,>=6.0.0)",
                "elasticsearch-dsl (<7.0.0,>=6.0.0)",
                "jsonschema (==3.0.0)",
                "pandas (==1.4.1)",
                "eevee",
                "ckantools (==0.0.3)",
                "mock ; extra == 'test'",
                "pytest (>=4.6.5) ; extra == 'test'",
                "pytest-cov (>=2.7.1) ; extra == 'test'",
                "coveralls ; extra == 'test'"
            ],
            "requires_python": "",
            "summary": "A CKAN extension providing a versioned datastore using MongoDB and Elasticsearch",
            "version": "3.6.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15915607,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7f98a79d63a401e8da659d39cdc0e620",
                    "sha256": "ae6f4ba896a5740c444173f35ab9f8b36929d7666168e77fc0645b4558c81b49"
                },
                "downloads": -1,
                "filename": "ckanext_versioned_datastore-3.6.2-py3.10.egg",
                "has_sig": false,
                "md5_digest": "7f98a79d63a401e8da659d39cdc0e620",
                "packagetype": "bdist_egg",
                "python_version": "3.6.2",
                "requires_python": null,
                "size": 2970416,
                "upload_time": "2022-11-15T16:15:37",
                "upload_time_iso_8601": "2022-11-15T16:15:37.136580Z",
                "url": "https://files.pythonhosted.org/packages/ed/be/3b926382273f4a8efbf6540e337270998e121777929a3e96fad95aff65e3/ckanext_versioned_datastore-3.6.2-py3.10.egg",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "bc29b2a2cca2e99b727c8e63bc5c53e4",
                    "sha256": "9d1b5be6b2e96ee46508eeee4729ef96e732e8e93fcae3d2102d9d26487c90c6"
                },
                "downloads": -1,
                "filename": "ckanext_versioned_datastore-3.6.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "bc29b2a2cca2e99b727c8e63bc5c53e4",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 2986928,
                "upload_time": "2022-11-15T16:15:32",
                "upload_time_iso_8601": "2022-11-15T16:15:32.807108Z",
                "url": "https://files.pythonhosted.org/packages/66/e6/381d868f5527cc6743a24f91eb9e120dd5d3b78a09cf1e0e2cb8d6b04362/ckanext_versioned_datastore-3.6.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e30b99d39d7fcb70169c5bea4e497f46",
                    "sha256": "eedf69966415c9aec051ee3d26195691514342576fb8876bb07223593fc6c00a"
                },
                "downloads": -1,
                "filename": "ckanext-versioned-datastore-3.6.2.tar.gz",
                "has_sig": false,
                "md5_digest": "e30b99d39d7fcb70169c5bea4e497f46",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2970169,
                "upload_time": "2022-11-15T16:15:41",
                "upload_time_iso_8601": "2022-11-15T16:15:41.825485Z",
                "url": "https://files.pythonhosted.org/packages/15/db/7d90ce16dfb9e7b06172eaa0984ecda44c072f4b6a7b810969402aa427a0/ckanext-versioned-datastore-3.6.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "3.7.0": {
        "info": {
            "author": "",
            "author_email": "Natural History Museum <data@nhm.ac.uk>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "<!--header-start-->\n<img src=\".github/nhm-logo.svg\" align=\"left\" width=\"150px\" height=\"100px\" hspace=\"40\"/>\n\n# ckanext-versioned-datastore\n\n[![Tests](https://img.shields.io/github/workflow/status/NaturalHistoryMuseum/ckanext-versioned-datastore/Tests?style=flat-square)](https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore/actions/workflows/main.yml)\n[![Coveralls](https://img.shields.io/coveralls/github/NaturalHistoryMuseum/ckanext-versioned-datastore/main?style=flat-square)](https://coveralls.io/github/NaturalHistoryMuseum/ckanext-versioned-datastore)\n[![CKAN](https://img.shields.io/badge/ckan-2.9.1-orange.svg?style=flat-square)](https://github.com/ckan/ckan)\n[![Python](https://img.shields.io/badge/python-3.6%20%7C%203.7%20%7C%203.8-blue.svg?style=flat-square)](https://www.python.org/)\n[![Docs](https://img.shields.io/readthedocs/ckanext-versioned-datastore?style=flat-square)](https://ckanext-versioned-datastore.readthedocs.io)\n\n_A CKAN extension providing a versioned datastore using MongoDB and Elasticsearch._\n\n<!--header-end-->\n\n# Overview\n\n<!--overview-start-->\nThis plugin provides a complete replacement for ckan's datastore plugin and therefore shouldn't be used in conjunction with it.\nRather than storing data in PostgreSQL, resource data is stored in MongoDB and then made available to frontend APIs using Elasticsearch.\n\nThis allows this plugin to:\n\n  - provide full versioning of resource records - records can be updated when new resource data is uploaded without preventing access to the old data\n  - expose advanced search features using Elasticsearch's extensive feature set\n  - achieve fast search response times, particularly when compared to PostgreSQL, due Elasticsearch's search performance\n  - store large resources (millions of rows) and still provide high speed search responses\n  - store complex data as both MongoDB and Elasticsearch are JSON based, allowing object nesting and arrays\n\nThis plugin is built on [Splitgill](https://github.com/NaturalHistoryMuseum/splitgill).\n\n<!--overview-end-->\n\n# Installation\n\n<!--installation-start-->\nPath variables used below:\n- `$INSTALL_FOLDER` (i.e. where CKAN is installed), e.g. `/usr/lib/ckan/default`\n- `$CONFIG_FILE`, e.g. `/etc/ckan/default/development.ini`\n\n1. Clone the repository into the `src` folder:\n\n  ```bash\n  cd $INSTALL_FOLDER/src\n  git clone https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore.git\n  ```\n\n2. Activate the virtual env:\n\n  ```bash\n  . $INSTALL_FOLDER/bin/activate\n  ```\n\n3. Install the requirements from requirements.txt:\n\n  ```bash\n  cd $INSTALL_FOLDER/src/ckanext-versioned-datastore\n  pip install -r requirements.txt\n  ```\n\n4. Run setup.py:\n\n  ```bash\n  cd $INSTALL_FOLDER/src/ckanext-versioned-datastore\n  python setup.py develop\n  ```\n\n5. Add 'versioned_datastore' to the list of plugins in your `$CONFIG_FILE`:\n\n  ```ini\n  ckan.plugins = ... versioned_datastore\n  ```\n\n## Further Setup\n\nAt the version of Splitgill this plugin uses, you will also need to:\n\n  - install MongoDB 4.x\n  - install Elasticsearch 6.7.x (6.x is probably ok, but untested)\n\nSee the [Splitgill](https://github.com/NaturalHistoryMuseum/splitgill) repository for more details.\n\nThis plugin also requires CKAN's job queue, which is included in recent versions of CKAN or can be added to old versions using the ckanext-rq plugin.\n\n\n<!--installation-end-->\n\n# Configuration\n\n<!--configuration-start-->\nThere are a number of options that can be specified in your .ini config file.\nAll configuration options are currently required.\n\n## **[REQUIRED]**\n\nName|Description|Example\n--|--|--\n`ckanext.versioned_datastore.elasticsearch_hosts`|A comma separated list of elasticsearch server hosts|`1.2.3.4,1.5.4.3,es.mydomain.local`\n`ckanext.versioned_datastore.elasticsearch_port`|The port for to use for the elasticsearch server hosts listed in the elasticsearch_hosts option|`9200`\n`ckanext.versioned_datastore.elasticsearch_index_prefix`|The prefix to use for index names in elasticsearch. Each resource in the datastore gets an index and the name of the index is the resource ID with this prefix prepended.|`nhm-`\n`ckanext.versioned_datastore.mongo_host`|The mongo server host|`10.54.24.10`\n`ckanext.versioned_datastore.mongo_port`|The port to use to connect to the mongo host|`27017`\n`ckanext.versioned_datastore.mongo_database`|The name of the mongo database to use to store datastore data in|`nhm`\n\n## **[OPTIONAL]**\n\nName|Description|Example\n--|--|--\n`ckanext.versioned_datastore.redis_host`|The redis server host. If this is provided slugging is enabled|`14.1.214.50`\n`ckanext.versioned_datastore.redis_port`|The port to use to connect to the redis host|`6379`\n`ckanext.versioned_datastore.redis_database`|The redis database index to use to store datastore multisearch slugs in|`1`\n`ckanext.versioned_datastore.slug_ttl`|The amount of time slugs should last for, in days. Default: `7`|`7`\n`ckanext.versioned_datastore.dwc_core_extension_name`|The name of the DwC core extension to use, as defined in [dwc/writer.py](/ckanext/versioned_datastore/lib/downloads/dwc/writer.py).|`gbif_occurrence`\n`ckanext.versioned_datastore.dwc_extension_names`|A comma-separated list of (non-core) DwC extension names, as defined in [dwc/writer.py](/ckanext/versioned_datastore/lib/downloads/dwc/writer.py).|`gbif_multimedia`\n`ckanext.versioned_datastore.dwc_org_name`|The organisation name to use in DwC-A metadata. Default: the value of `ckanext.doi.publisher` or `ckan.site_title`|`The Natural History Museum`\n`ckanext.versioned_datastore.dwc_org_email`|The contact email to use in DwC-A metadata. Default: the value of `smtp.mail_from`|`contact@yoursite.com`\n`ckanext.versioned_datastore.dwc_default_license`|The license to use in DwC-A metadata if the resources have differing licenses or no license is specified. Default: `null`|`http://creativecommons.org/publicdomain/zero/1.0/legalcode`\n\n<!--configuration-end-->\n\n# Usage\n\n<!--usage-start-->\nA brief tour!\n\nThe plugin automatically detects resources on upload that can be added to the datastore.\nThis is accomplished using the resource format.\nCurrently the accepted formats are:\n\n- CSV - csv, application/csv\n- TSV - tsv\n- XLS (old excel) - xls, application/vnd.ms-excel\n- XLSX (new excel) - xlsx, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\n\nIf one of these formats is used then an attempt will be made to add the uploaded or URL to the datastore.\nNote that only the first sheet in multisheet XLS and XLSX files will be processed.\n\nAdding data to the datastore is accomplished in two steps:\n\n1. Ingesting the records into MongoDB. A document is used per unique record ID to store all versions and the documents for a specific resource are stored in a collection named after the resource's ID. For more information on the structure of these documents see the [Splitgill](https://github.com/NaturalHistoryMuseum/splitgill) repository for more details.\n2. Indexing the documents from MongoDB into Elasticsearch. One indexed is used for all versions of the records and a document in Elasticsearch is created per version of each record. The index is named after the resource's ID with the configured prefix prepended. For more information on the structure of these indexed documents see the [Splitgill](https://github.com/NaturalHistoryMuseum/splitgill) repository for more details.\n\nThe ingesting and indexing is completed in the background using the CKAN's job queue.\n\nOnce data has been added to the datastore it can be searched using the `datastore_search` or more advanced `datastore_search_raw` actions.\nThe `datastore_search` action closely mirrors the default CKAN datastore action of the same name.\nThe `datastore_search_raw` action allows users to query the datastore using raw Elasticsearch queries, unlocking the full range of features it provides.\n\n## Actions\n\nAll of this extension's actions are fully documented inline, including all parameters and results.\n\n### `datastore_create`\nAdds a resource to the versioned datastore (note that this doesn't add any data, it just does setup work. This is different to CKAN's default `datastore_create` action).\n\n### `datastore_upsert`\nUpserts data into the datastore for the resource. The data can be provided in the data_dict using the key 'records' or, if data is not specified, the URL on the resource is used.\n\n### `datastore_delete`\nDeletes the data in the datastore against the given resource ID.\n\n### `datastore_search`\nSearch a resource's data using a similar API to CKAN's default `datastore_search` action.\n\n### `datastore_get_record_versions`\nGiven a record id and a resource it appears in, returns the version timestamps available for that record in ascending order.\n\n### `datastore_get_resource_versions`\nGiven a resource id, returns the version timestamps available for that resource in ascending order along with the number of records modified in the version and the number of records at that version.\n\n### `datastore_autocomplete`\nProvides autocompletion results against a specific field in a specific resource.\n\n### `datastore_reindex`\nTriggers a reindex of the given resource's data.\n\n### `datastore_query_extent`\nReturn the geospatial extent of the results of a given datastore search query.\n\n### `datastore_get_rounded_version`\nRound the requested version of this query down to the nearest actual version of the resource.\n\n### `datastore_search_raw`\nThis action allows you to search data in a resource using a raw elasticsearch query.\n\n### `datastore_ensure_privacy`\nThis action runs through all resources (or handles a specific resource if a resource id is provided) and makes sure that the privacy set on each resource's package is reflected in the datastore.\n\n## Commands\n\n### `vds`\n\n1. `initdb`: ensure the tables needed by this plugin exist.\n    ```bash\n    ckan -c $CONFIG_FILE initdb\n    ```\n\n2. `reindex`: reindex either a specific resource or all resources.\n    ```bash\n    ckan -c $CONFIG_FILE reindex $OPTIONAL_RESOURCE_ID\n    ```\n\n## Interfaces\n\nOne interface is made available through this plugin: `IVersionedDatastore`.\n\nHere is a brief overview of its functions:\n\n  - `datastore_modify_data_dict` - allows modification of the data dict before it is validated and used to create the search object\n  - `datastore_modify_search` - allows modifications to the search before it is made. This is kind of analogous to `IDatastore.datastore_search` however instead of passing around a query dict, instead an elasticsearch-dsl `Search` object is passed around\n  - `datastore_modify_result` - allows modifications to the result after the search\n  - `datastore_modify_fields` - allows modification of the field definitions before they are returned with the results of a datastore_search\n  - `datastore_modify_index_doc` - allows the modification of a resource's data during indexing\n  - `datastore_is_read_only_resource` - allows implementors to designate certain resources as read only\n  - `datastore_after_indexing` - allows implementors to hook onto the completion of an indexing task\n\nSee the interface definition in this plugin for more details about these functions.\n\n<!--usage-end-->\n\n# Testing\n\n<!--testing-start-->\nThere is a Docker compose configuration available in this repository to make it easier to run tests.\n\nTo run the tests against ckan 2.9.x on Python3:\n\n1. Build the required images\n```bash\ndocker-compose build\n```\n\n2. Then run the tests.\n   The root of the repository is mounted into the ckan container as a volume by the Docker compose\n   configuration, so you should only need to rebuild the ckan image if you change the extension's\n   dependencies.\n```bash\ndocker-compose run ckan\n```\n\nThe ckan image uses the Dockerfile in the `docker/` folder.\n\n<!--testing-end-->\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "CKAN,data,versioned_datastore",
            "license": "GPL-3.0-or-later",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ckanext-versioned-datastore",
            "package_url": "https://pypi.org/project/ckanext-versioned-datastore/",
            "platform": null,
            "project_url": "https://pypi.org/project/ckanext-versioned-datastore/",
            "project_urls": {
                "changelog": "https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore/blob/main/CHANGELOG.md",
                "repository": "https://github.com/NaturalHistoryMuseum/ckanext-versioned-datastore"
            },
            "release_url": "https://pypi.org/project/ckanext-versioned-datastore/3.7.0/",
            "requires_dist": [
                "backports.csv (==1.0.6)",
                "cchardet (==2.1.4)",
                "ckantools (>=0.3.0)",
                "splitgill (==2.0.0)",
                "elasticsearch-dsl (<7.0.0,>=6.0.0)",
                "elasticsearch (<7.0.0,>=6.0.0)",
                "jsonschema (==3.0.0)",
                "openpyxl (==2.5.8)",
                "pandas (==1.4.1)",
                "requests",
                "six (>=1.11.0)",
                "xlrd (==1.1.0)",
                "mock ; extra == 'test'",
                "pytest (>=4.6.5) ; extra == 'test'",
                "pytest-cov (>=2.7.1) ; extra == 'test'",
                "coveralls ; extra == 'test'"
            ],
            "requires_python": ">=3.6",
            "summary": "A CKAN extension providing a versioned datastore using MongoDB and Elasticsearch",
            "version": "3.7.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15915607,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "0cef7f18864fbc1408cddb98bb45d75c",
                    "sha256": "a9cf515855042963457f99c0a8f0fd9564e7f2c7a9a6e71e879770b65c33e00f"
                },
                "downloads": -1,
                "filename": "ckanext_versioned_datastore-3.7.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0cef7f18864fbc1408cddb98bb45d75c",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 147096,
                "upload_time": "2022-11-28T15:17:46",
                "upload_time_iso_8601": "2022-11-28T15:17:46.706876Z",
                "url": "https://files.pythonhosted.org/packages/bf/6f/6cee6cbcffaa8d27e972fbdcd5f3db9e4cd3dbe10d9c6b2ebfea48fcd440/ckanext_versioned_datastore-3.7.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e9c21bd3fcd364a03476b52cd515c6ed",
                    "sha256": "c87a558e806f431aa007563cde6c345021fb1f70a091d13504a98b77154ca205"
                },
                "downloads": -1,
                "filename": "ckanext-versioned-datastore-3.7.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e9c21bd3fcd364a03476b52cd515c6ed",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 122310,
                "upload_time": "2022-11-28T15:17:48",
                "upload_time_iso_8601": "2022-11-28T15:17:48.207795Z",
                "url": "https://files.pythonhosted.org/packages/2d/8a/2928dd9dad489f2f0381916a516d8836632ec025a622721541009a48ccdb/ckanext-versioned-datastore-3.7.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}