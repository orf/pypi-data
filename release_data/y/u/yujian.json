{
    "0.8.4": {
        "info": {
            "author": "",
            "author_email": "Li zhigang <imlzg@126.com>",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Framework :: AsyncIO",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Topic :: Communications",
                "Topic :: Internet :: WWW/HTTP",
                "Topic :: Software Development :: Libraries :: Python Modules"
            ],
            "description": "# \u7fbd\u7bad Yujian\n\n\u4e00\u4e2a\u5f02\u6b65\u7684 RabbitMQ HTTP API \u5ba2\u6237\u7aef\u3002A asyncio Rabbitmq HTTP API client.\n\n![\u7fbd\u7bad](https://github.com/imlzg/image/blob/84e4272984ab9b5becaf5c0e6c2b3e45d5c31c4a/yujian.png)\n\n\u5199\u8fd9\u4e2a\u5e93\u7684\u521d\u8877\u662f\u7528\u5728 Jiama \u7684 console \u547d\u4ee4\u4e2d\uff0c\u7528\u4e8e\u663e\u793a RPC \u7684\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\uff1b\u4f46\u627e\u4e86\u4e00\u5708\uff0c\u5374\u6ca1\u6709\u53d1\u73b0\u4e00\u4e2a\u5f02\u6b65\u4e14\u652f\u6301Python3 \u7684\u5e93\uff0c\u6240\u4ee5\u5199\u4e86\u8fd9\u4e2a\u5e93\u3002\n\n\nRabbitmq \u7684\u5b89\u88c5\u53ef\u4ee5\u4f7f\u7528 docker \u65b9\u5f0f\uff0c\u5177\u4f53\u53c2\u89c1[\u5b98\u7f51](https://www.rabbitmq.com/download.html)\u3002\n```shell\nsudo docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3.10-management\n```\n\n\u5728\u542f\u7528\u201c\u7ba1\u7406\u63d2\u4ef6\u201d\u8fd0\u884c\u540e\uff0c\u53ef\u4ee5\u5728 http://server-name:15672/api/ \u67e5\u770b Rabbitmq HTTP API \u7684\u5185\u5bb9\u3002\n\n\n\n### \u5b89\u88c5 Install\n\n``` shell\npip install wangong\n```\n\n\n\n### \u63a5\u53e3 API\n\n#### yujian.api.config\nRabbitmq HTTP API \u63a5\u53e3\u914d\u7f6e\u5b57\u5178\uff0c\u952e\u5b9a\u4e49\u5ba2\u6237\u7aef\u65b9\u6cd5\u540d\u79f0\uff0c\u503c\u5b9a\u4e49\u65b9\u6cd5\u8c03\u7528\u7684 API \u5730\u5740\u3001\u8bf7\u6c42\u65b9\u6cd5\u3001\u5fc5\u586b\u9879\u3001\u9ed8\u8ba4\u503c\u7b49\uff0c\u5982\uff1a\n```python\n    'overview': {\n        'uri': '/api/overview',\n        'method': 'get',\n        'option': {\n            'columns': [\n                'rabbitmq_version',\n                'cluster_name',\n                'queue_totals.messages',\n                'object_totals.queues',\n            ]\n        },\n    },\n    'whoami': {'uri': '/api/whoami', 'method': 'get'},\n```\n\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6269\u5c55\u6b64\u914d\u7f6e\u3002\n\n\n\n#### client = await Client().init('http://localhost:15672')\n\u5ba2\u6237\u7aef\u521d\u59cb\u5316\u65b9\u6cd5\u3002\n\n\n\n#### await client.close()\n\u5ba2\u6237\u7aef\u9500\u6bc1\u65b9\u6cd5\u3002\n\n\n\n#### await client.declare_queue(name, vhost=None, **kwargs)\n- `name` str - \u961f\u5217\u540d\u79f0\n- `vhost` str - \u961f\u5217\u6240\u5c5e\u7684\u865a\u62df\u673a\uff0c\u9ed8\u8ba4\u4e3a `/`\n- `kwargs` Any - \u5176\u4ed6\u53ef\u7528\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u89c1 [Rabbitmq HTTP API DOC](https://rawcdn.githack.com/rabbitmq/rabbitmq-server/v3.11.2/deps/rabbitmq_management/priv/www/api/index.html)\n\n\n\n#### await client.list_queue(vhost, columns, **kwargs)\n- `vhost` str - \u961f\u5217\u6240\u5c5e\u7684\u865a\u62df\u673a\uff0c\u9ed8\u8ba4\u4e3a `/`\n- `columns` list[str] - \u8fd4\u56de\u7ed3\u679c\u4e2d\u5305\u542b\u7684\u5217\n- `kwargs` Any - \u5176\u4ed6\u53ef\u7528\u53c2\u6570\n\n\n\n#### await delete_queue(name, vhost)\n- `name` str - \u961f\u5217\u540d\u79f0\n- `vhost` str - \u961f\u5217\u6240\u5c5e\u7684\u865a\u62df\u673a\n\n\n\n#### await client.declare_exchange(name, type, vhost, **kwargs)\n- `name` str - \u4ea4\u6362\u673a\u540d\u79f0\n- `type` str - \u4ea4\u6362\u673a\u7c7b\u578b\n- `vhost` str - \u4ea4\u6362\u673a\u6240\u5c5e\u7684\u865a\u62df\u673a\uff0c\u9ed8\u8ba4\u4e3a `/`\n- `kwargs` Any - \u5176\u4ed6\u53ef\u7528\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u89c1 [Rabbitmq HTTP API DOC](https://rawcdn.githack.com/rabbitmq/rabbitmq-server/v3.11.2/deps/rabbitmq_management/priv/www/api/index.html)\n\n\n\n#### await client.declare_binding(source, routing_key, destination, destination_type, vhost, **kwargs)\n- `source` str - \u7ed1\u5b9a\u7684\u6e90\uff0c\u4ea4\u6362\u673a\u540d\u79f0\n- `routing_key` str - \u7ed1\u5b9a\u7684\u8def\u7531\u952e\n- `destination` str - \u7ed1\u5b9a\u7684\u7ec8\u70b9\uff0c\u4ea4\u6362\u673a\u6216\u961f\u5217\u7684\u540d\u79f0\n- `destination_type` str - \u7ed1\u5b9a\u7684\u91cd\u70b9\u7c7b\u578b\uff0cexchange \u6216 queue\n- `vhost` str - \u7ed1\u5b9a\u6240\u5c5e\u7684\u865a\u62df\u673a\uff0c\u9ed8\u8ba4\u4e3a `/`\n- `kwargs` Any - \u5176\u4ed6\u53ef\u7528\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u89c1 [Rabbitmq HTTP API DOC](https://rawcdn.githack.com/rabbitmq/rabbitmq-server/v3.11.2/deps/rabbitmq_management/priv/www/api/index.html)\n\n\n\n#### await client.publish_message(payload, routing_key, properties, exchange, vhost, **kwargs)\n- `payload` str - \u6d88\u606f\u5185\u5bb9\n- `routing_key` - \u8def\u7531\u952e\n- `properties` - \u6d88\u606f\u5c5e\u6027\n- `exchange` - \u4ea4\u6362\u673a\n- `vhost` - \u865a\u62df\u673a\n- `kwargs` - \u5176\u4ed6\u53ef\u7528\u53c2\u6570\uff0c\u5177\u4f53\u53c2\u89c1 [Rabbitmq HTTP API DOC](https://rawcdn.githack.com/rabbitmq/rabbitmq-server/v3.11.2/deps/rabbitmq_management/priv/www/api/index.html)\n\n\n\n#### await client.await client.invoke(act, **kwargs)\n- `act` str - \u9700\u8981\u6267\u884c\u7684\u52a8\u4f5c\uff0c\u5bf9\u5e94 yujian.api.config \u4e2d\u7684\u952e\n- `kwargs` Any - \u9700\u8981\u4f20\u9012\u7684\u53c2\u6570\n\n\n\n#### client.__getattr__(method)\n- `method` str - \u65b9\u6cd5\u540d\u79f0\uff0c\u5bf9\u5e94 yujian.api.config \u4e2d\u7684\u952e\n\n\u501f\u52a9 `__getattr__` \u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u6839\u636e [Rabbitmq HTTP API DOC](https://rawcdn.githack.com/rabbitmq/rabbitmq-server/v3.11.2/deps/rabbitmq_management/priv/www/api/index.html) \u7684\u8981\u6c42\u4efb\u610f\u6269\u5c55 `yujian.api.config`\uff0c\u76f4\u63a5\u4ee5\u952e\u4f5c\u4e3a\u65b9\u6cd5\u540d\u5728 `client` \u5bf9\u8c61\u4e0a\u8c03\u7528\u3002\n\n\n\n### \u793a\u4f8b Example\n\n``` python\nfrom loguru import logger\n\nfrom yujian.api import Client\n\n\nasync def main():\n    c = await Client().init('http://192.168.56.109:15672/')\n\n    r20 = await c.whoami()\n    r21 = await c.list_exchange(columns=['name'])\n    r22 = await c.list_queue(\n        columns=['vhost', 'name', 'node', 'messages'], sort='name', sort_reverse='true'\n    )\n    r23 = await c.list_user()\n    r24 = await c.get_user(name='guest')\n    r25 = await c.get_vhost(name='%2F')\n    r26 = await c.get_permission('guest')\n    r27 = await c.get_queue('test_queue_2')\n\n    r30 = await c.invoke('declare_queue', name='test_queue')\n    r31 = await c.invoke(\n        'list_queue',\n        columns=['vhost', 'name', 'node', 'messages'],\n        sort='name',\n        sort_reverse='true',\n    )\n    r32 = await c.invoke('delete_queue', name='test_queue')\n    r33 = await c.invoke('declare_exchange', name='test_exchange', type='direct')\n    r34 = await c.invoke(\n        'get_message',\n        queue='test_queue',\n        count=5,\n        ackmode='ack_requeue_true',\n        encoding='auto',\n    )\n    r35 = await c.invoke(\n        'publish_message',\n        exchange='test_exchange',\n        payload='ko ko ko',\n        routing_key='test_queue',\n        payload_encoding='string',\n        properties={},\n    )\n    r36 = await c.invoke(\n        'declare_binding',\n        source='test_exchange',\n        destination='test_queue',\n        destination_type='queue',\n        routing_key='test_queue',\n    )\n    r37 = await c.invoke('whoami')\n\n    await c.close()\n\n\nif __name__ == '__main__':\n    config = {\n        'handlers': [\n            {\n                'sink': sys.stdout,\n                'format': '<green>{time:YYYY-MM-DD at HH:mm:ss}</green> {level} <level>{message}</level>',\n            },\n        ],\n    }\n    logger.configure(**config)\n\n    asyncio.run(main())\n\n\n```\n\n### License\n[MIT](LICENSE) \u00a9 Li zhigang\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "asyncio,rabbitmq,http,api,client,management",
            "license": "MIT License",
            "maintainer": "",
            "maintainer_email": "",
            "name": "yujian",
            "package_url": "https://pypi.org/project/yujian/",
            "platform": null,
            "project_url": "https://pypi.org/project/yujian/",
            "project_urls": {
                "Bug Tracker": "https://github.com/liangshanpo/yujian/issues",
                "Homepage": "https://github.com/liangshanpo/yujian"
            },
            "release_url": "https://pypi.org/project/yujian/0.8.4/",
            "requires_dist": [
                "aiohttp[speedups]",
                "loguru"
            ],
            "requires_python": ">=3.10",
            "summary": "The aio rabbitmq HTTP API client.",
            "version": "0.8.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15642672,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "50078b0639940bc82c6f515d17bf87fe",
                    "sha256": "0bb08ad8d5d79a25eea5df51860b930f00fc456cfb6f442838babe443d54be00"
                },
                "downloads": -1,
                "filename": "yujian-0.8.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "50078b0639940bc82c6f515d17bf87fe",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.10",
                "size": 7791,
                "upload_time": "2022-11-03T14:43:48",
                "upload_time_iso_8601": "2022-11-03T14:43:48.930793Z",
                "url": "https://files.pythonhosted.org/packages/3e/49/dbf57914a357a4dab36f33f1c55784af2476631e3bbddd4329b9e6fa50e4/yujian-0.8.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "901d989fd79c3556126d8e1f6c1c8773",
                    "sha256": "8f639920fdc3529fa8cd2ea089b7281b76ab87ee7880e9409fa7e95fe6247342"
                },
                "downloads": -1,
                "filename": "yujian-0.8.4.tar.gz",
                "has_sig": false,
                "md5_digest": "901d989fd79c3556126d8e1f6c1c8773",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.10",
                "size": 9880,
                "upload_time": "2022-11-03T14:43:51",
                "upload_time_iso_8601": "2022-11-03T14:43:51.526221Z",
                "url": "https://files.pythonhosted.org/packages/7c/f4/c3b3bbc69db08041ce08f4921fbafee3031e43f270054d6127acadcdbe2f/yujian-0.8.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}