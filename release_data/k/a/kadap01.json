{
    "1.0.1": {
        "info": {
            "author": "\uc774\uc885\uadfc(jklee2)",
            "author_email": "jklee2@katech.re.kr",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# <div align=\"center\">KADaP</div>\nKADaP(Korea Automotive Data Platform)\uc740 \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8\uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \n\uc624\ud508 \ub370\uc774\ud130\ub97c \uc77d\uc5b4 \ub4e4\uc77c \uc218 \uc788\ub294 **Data Reader**\uc640 \nYOLOv5\ub97c \uc774\uc6a9\ud55c **Object Detection**\n\uc744 \uc190\uc27d\uac8c \uc774\uc6a9\ud560 \uc218 \uc788\ub3c4\ub85d \ud328\ud0a4\uc9c0 \ud615\ud0dc\ub85c \uc81c\uacf5\ud569\ub2c8\ub2e4.\n\n\n## <span style=\"color: #808080\">Installation</span>\n**Windows \uc6b4\uc601\uccb4\uc81c** \uc758 \uacbd\uc6b0 \ud30c\uc774\uc36c \uac1c\ubc1c \ud658\uacbd\uc73c\ub85c \ucd5c\uc2e0 \ubc84\uc804\uc758 Anaconda\ub97c \uc124\uce58\ud558\uc138\uc694. (Python3 \ubc84\uc804\uc6a9)\n\n```bash\npip install KADaP01\n```\n\nKADaP \uc5d0 \uc0ac\uc6a9\ub418\ub294 \ucd94\uac00 \ubaa8\ub4c8 \uc124\uce58\uac00 \ud544\uc694\ud569\ub2c8\ub2e4.\n\n```bash\npip install -r requirements.txt\n```\n\n## <span style=\"color: #808080\">Usage</span>\n```python\nimport KADaP01 as kadap\n```\n\n### 1. Data Reader\n- \uc81c\uacf5 \ub370\uc774\ud130\n\n    | \uc774\ub984 | \uc124\uba85 |\n    |---|:---:|\n    | `city.py` | \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8 \uc81c\uacf5 \ub3c4\uc2dc, \uad70(\uad6c) \ucf54\ub4dc \uac80\uc0c9 |\n    | `bicycle.py` | \uc790\uc804\uac70\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed |\n    | `.` | *\ucd94\uac00 \uc608\uc815* |\n\n- Example\n1) \ub3c4\uc2dc, \uad70(\uad6c) \ucf54\ub4dc \uac80\uc0c9\n\n```python\ncity = kadap.City()\ncityCodes = city.getCityCodes()\n```\n\n2) \uc790\uc804\uac70\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed \uac80\uc0c9\n\n```python\n\"\"\"\n\uc790\uc804\uac70\uc0ac\uace0 \ub2e4\ubc1c\uc9c0\uc5ed API \ud638\ucd9c\uc744 \uc704\ud574\uc11c \uc544\ub798 \uc138 \uac00\uc9c0 \ud544\uc694\n\n1. servicekey --> \ub3c4\ub85c\uad50\ud1b5\uacf5\ub2e8\uc5d0\uc11c \ubc1c\uae09\n2. \ub3c4\uc2dc, \uad70(\uad6c) \ucf54\ub4dc\n3. \uac80\uc0c9 \ub144\ub3c4 \ucf54\ub4dc (12\ub144\ub3c4 \uc774\uc804, 13\ub144\ub3c4, ..., 20\ub144\ub3c4 \uc774\ud6c4)\n\"\"\"\n\nbicycle = kadap.Bicycle()\n\nsearchYearCodes = bicycle.getSearchYearCodes()  # \uac80\uc0c9 \ub144\ub3c4 \ucf54\ub4dc \ud655\uc778\nbicycle.setServicekey(servicekey)               # servicekey \uc785\ub825\nbicycle.getData(yearCode, cityCode)             # \ud574\ub2f9 \ub144\ub3c4, \ud574\ub2f9 \uc9c0\uc5ed \uc815\ubcf4 \uac80\uc0c9\n\n```\n\n### 2. Object Detection\n- YOLOv5 \ubaa8\ub378\uc744 \uc774\uc6a9\ud55c \uc774\ubbf8\uc9c0 \ub0b4 \ucc28\ub7c9 \uac80\ucd9c \uc11c\ube44\uc2a4 \uc81c\uacf5\n- Example\n\n```python\n\"\"\"\n\uac1d\uccb4 \uac80\ucd9c\uc744 \uc704\ud574\uc11c \uc544\ub798 \ub124 \uac00\uc9c0 \ud544\uc694\n\n1. \uc0ac\uc6a9\ud560 \uac00\uc911\uce58 \ud30c\uc77c \uacbd\ub85c (default\ub85c yolov5s.pt \uc0ac\uc6a9)\n2. \uc785\ub825 \uc774\ubbf8\uc9c0 \uacbd\ub85c (\ub2e8\uc77c \uc774\ubbf8\uc9c0 or \uc774\ubbf8\uc9c0 \ub514\ub809\ud1a0\ub9ac)\n3. \uc785\ub825 \uc774\ubbf8\uc9c0 \ud06c\uae30\n4. \uacb0\uacfc \uc774\ubbf8\uc9c0\uac00 \uc800\uc7a5 \uacbd\ub85c\n\"\"\"\n\ndetect = kadap.Detect()\ndetect.run(weights=\"ROOT/yolov5s.pt\", source=\"ROOT/test/images\", project=\"ROOT/runs/detect\", name=\"exp\")\n\n```\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Jongkeun21/KADaP01",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "KADaP01",
            "package_url": "https://pypi.org/project/KADaP01/",
            "platform": null,
            "project_url": "https://pypi.org/project/KADaP01/",
            "project_urls": {
                "Homepage": "https://github.com/Jongkeun21/KADaP01"
            },
            "release_url": "https://pypi.org/project/KADaP01/1.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Korea Automotive Data Platform",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15394776,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c47fec56367f4f88a5b7d23a58232935",
                    "sha256": "7a0d904d4997a48924bb2a87220c77fe01ccee1b6e5492dbe78e5bcf0e5ca0db"
                },
                "downloads": -1,
                "filename": "KADaP01-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c47fec56367f4f88a5b7d23a58232935",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 6569,
                "upload_time": "2022-10-13T04:45:59",
                "upload_time_iso_8601": "2022-10-13T04:45:59.930623Z",
                "url": "https://files.pythonhosted.org/packages/af/3b/7ececc15041dd336f4e381b1c86a2ffe27219b4471d3daaeb3c356ef4592/KADaP01-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}