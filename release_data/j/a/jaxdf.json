{
    "0.2.1": {
        "info": {
            "author": "Simon Arridge, Ben T. Cox, Bradley E. Treeby",
            "author_email": "Antonio Stanziola <a.stanziola@ucl.ac.uk>",
            "bugtrack_url": null,
            "classifiers": [
                "Intended Audience :: Education",
                "Intended Audience :: Science/Research",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Scientific/Engineering :: Physics"
            ],
            "description": "# jaxdf - JAX-based Discretization Framework\n\n[![License: LGPL v3](https://img.shields.io/badge/License-LGPL%20v3-blue.svg)](https://www.gnu.org/licenses/lgpl-3.0)\n[![codecov](https://codecov.io/gh/ucl-bug/jaxdf/branch/main/graph/badge.svg?token=FIUYOCFDYL)](https://codecov.io/gh/ucl-bug/jaxdf)\n![Continous Integration](https://github.com/ucl-bug/jaxdf/actions/workflows/main.yml/badge.svg)\n[![Documentation](https://github.com/ucl-bug/jaxdf/actions/workflows/build_docs.yml/badge.svg)](https://ucl-bug.github.io/jaxdf/)\n\n[**Overview**](#overview)\n| [**Example**](#example)\n| [**Installation**](#installation)\n| [**Documentation**](https://ucl-bug.github.io/jaxdf/)\n\n<br/>\n\n## Overview\n\njaxdf is a [JAX](https://jax.readthedocs.io/en/stable/)-based package defining a coding framework for writing differentiable numerical simulators with arbitrary discretizations.\n\nThe intended use is to build numerical models of physical systems, such as wave propagation, or the numerical solution of partial differential equations, that are easy to customize to the user's research needs. Such models are pure functions that can be included into arbitray differentiable programs written in [JAX](https://jax.readthedocs.io/en/stable/): for example, they can be used as layers of neural networks, or to build a physics loss function.\n\n<br/>\n\n## Example\n\nThe following script builds the non-linear operator **(\u2207<sup>2</sup> + sin)**, using a Fourier spectral discretization on a square 2D domain, and uses it to define a loss function whose gradient is evaluated using JAX Automatic Differentiation.\n\n\n```python\nfrom jaxdf import operators as jops\nfrom jaxdf import FourierSeries, operator\nfrom jaxdf.geometry import Domain\nfrom jax import numpy as jnp\nfrom jax import jit, grad\n\n\n# Defining operator\n@operator\ndef custom_op(u):\n  grad_u = jops.gradient(u)\n  diag_jacobian = jops.diag_jacobian(grad_u)\n  laplacian = jops.sum_over_dims(diag_jacobian)\n  sin_u = jops.compose(u)(jnp.sin)\n  return laplacian + sin_u\n\n# Defining discretizations\ndomain = Domain((128, 128), (1., 1.))\nparameters = jnp.ones((128,128,1))\nu = FourierSeries(parameters, domain)\n\n# Define a differentiable loss function\n@jit\ndef loss(u):\n  v = custom_op(u)\n  return jnp.mean(jnp.abs(v.on_grid)**2)\n\ngradient = grad(loss)(u) # gradient is a FourierSeries\n```\n\n<br/>\n\n## Installation\n\nBefore installing `jaxdf`, make sure that [you have installed JAX](https://github.com/google/jax#installation). Follow the instruction to install JAX with NVidia GPU support if you want to use `jaxdf` on the GPUs.\n\nInstall jaxdf by cloning the repository or downloading and extracting the compressed archive. Then navigate in the root folder in a terminal, and run\n```bash\npip install -r .requirements/requirements.txt\npip install .\n```\n\n<br/>\n\n## Citation\n\n[![arXiv](https://img.shields.io/badge/arXiv-2111.05218-b31b1b.svg?style=flat)](https://arxiv.org/abs/2111.05218)\n\nThis package will be presented at the [Differentiable Programming workshop](https://diffprogramming.mit.edu/) at NeurIPS 2021.\n\n```bibtex\n@article{stanziola2021jaxdf,\n    author={Stanziola, Antonio and Arridge, Simon and Cox, Ben T. and Treeby, Bradley E.},\n    title={A research framework for writing differentiable PDE discretizations in JAX},\n    year={2021},\n    journal={Differentiable Programming workshop at Neural Information Processing Systems 2021}\n}\n```\n\n<br/>\n\n#### Acknowledgements\n\n- Some of the packaging of this repository is done by editing [this templace from @rochacbruno](https://github.com/rochacbruno/python-project-template)\n- The multiple-dispatch method employed is based on `plum`: https://github.com/wesselb/plum\n\n#### Related projects\n\n1. [`odl`](https://github.com/odlgroup/odl) Operator Discretization Library (ODL) is a python library for fast prototyping focusing on (but not restricted to) inverse problems.\n3. [`deepXDE`](https://deepxde.readthedocs.io/en/latest/): a TensorFlow and PyTorch library for scientific machine learning.\n4. [`SciML`](https://sciml.ai/): SciML is a NumFOCUS sponsored open source software organization created to unify the packages for scientific machine learning.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "differentiable programming,differential equations,discretization,jax,pde,simulation",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "jaxdf",
            "package_url": "https://pypi.org/project/jaxdf/",
            "platform": null,
            "project_url": "https://pypi.org/project/jaxdf/",
            "project_urls": {
                "Bug Tracker": "https://github.com/ucl-bug/jaxdf/issues",
                "Homepage": "https://ucl-bug.github.io/jaxdf/"
            },
            "release_url": "https://pypi.org/project/jaxdf/0.2.1/",
            "requires_dist": null,
            "requires_python": ">=3.8",
            "summary": "A JAX-based research framework for writing differentiable numerical simulators with arbitrary discretizations",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16154143,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1e102f80ae1f74e8bf2ba686dab29999",
                    "sha256": "635aee8154ee817e3d7b525e06e30667139bb55f6f34690d20588ac95254bce0"
                },
                "downloads": -1,
                "filename": "jaxdf-0.2.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1e102f80ae1f74e8bf2ba686dab29999",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 25144,
                "upload_time": "2022-12-19T20:09:16",
                "upload_time_iso_8601": "2022-12-19T20:09:16.715953Z",
                "url": "https://files.pythonhosted.org/packages/f9/2f/b61da9f528adc30ccebc43a934942f9c442e66323efc7e248f6d5a4563b9/jaxdf-0.2.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "caa0df65194fc5f9ed3026291558628e",
                    "sha256": "fe0b0dff8a4bf27411769d44afd00b2105ea8664009b13d89184ab4f1589dec3"
                },
                "downloads": -1,
                "filename": "jaxdf-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "caa0df65194fc5f9ed3026291558628e",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 19844,
                "upload_time": "2022-12-19T20:09:17",
                "upload_time_iso_8601": "2022-12-19T20:09:17.876171Z",
                "url": "https://files.pythonhosted.org/packages/d2/b0/90a7a2719875cec5ba7a2f7c9a3892f7585ae3c4920500e3eb30c528ad83/jaxdf-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}