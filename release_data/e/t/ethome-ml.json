{
    "0.3.0": {
        "info": {
            "author": "Ben Lansdell",
            "author_email": "ben.lansdell@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "[![codecov](https://codecov.io/gh/benlansdell/ethome/branch/master/graph/badge.svg?token=PN52Q3UH3G)](https://codecov.io/gh/benlansdell/ethome)\n\n# Ethome\n\nMachine learning for animal behavior.\n\nInterprets pose-tracking files (currently only from DLC) and behavior annotations (currently only from BORIS) to train a behavior classifier, perform unsupervised learning, and other common analysis tasks. \n\n## Features\n\n* Interpolate DLC data \n* Create generic features for kinematic analysis and downstream ML tasks\n* Create features specifically for mouse resident-intruder setup\n* Read in DLC pose data and corresponding BORIS behavior annotations to make supervised learning easy\n* Perform unsupervised learning on pose data to extract discrete behavioral motifs (MotionMapper)\n* Quickly generate a movie with behavior predictions\n\n## Installation\n\n```\npip install ethome-ml\n```\n\nCan install optional extras with:\n\n```\npip install numpy, cython\npip install ethome-ml[all]\n```\n\nThis includes matplotlib, keras, and Linderman lab's state-space model package, [ssm](https://github.com/lindermanlab/ssm). Note that installing ssm requires cython and numpy for the build, so must be already present in the environment. \n\n## Quickstart\n\nImport\n```\nfrom glob import glob \nfrom ethome import createExperiment, clone_metadata\nfrom ethome.features import CNN1DProb, MARS\nfrom ethome.io import get_sample_data_paths\n```\n\nGather the DLC and BORIS tracking and annotation files\n```\ntracking_files, boris_files = get_sample_data_paths()\n```\n\nSetup some parameters\n```\nframe_width = 20                 # (float) length of entire horizontal shot\nframe_width_units = 'in'         # (str) units frame_width is given in\nfps = 30                         # (int) frames per second\nresolution = (1200, 1600)        # (tuple) HxW in pixels\n```\n\nCreate a parameter object and video dataset\n```\nmetadata = clone_metadata(tracking_files, \n                          label_files = boris_files, \n                          frame_width = frame_width, \n                          fps = fps, \n                          frame_width_units = frame_width_units, \n                          resolution = resolution)\n\nanimal_renamer = {'adult': 'resident', 'juvenile':'intruder'}\n\ndataset = createExperiment(metadata, animal_renamer=animal_renamer)\n```\n\nNow create features on this dataset. Feature creation objects are class instances, similar to sk-learn:\n```\ncnn_probabilities = CNN1DProb()\nmars = MARS()\n\ndataset.features.add(cnn_probabilities, \n                     featureset_name = '1dcnn', \n                     add_to_features = True)\n\ndataset.features.add(mars, \n                     featureset_name = 'MARS', \n                     add_to_features = True)\n```\n\nNow access a features table, labels, and groups for learning with `dataset.ml.features, dataset.ml.labels, dataset.ml.groups`. From here it's easy to use some ML libraries to predict behavior. For example:\n```\nfrom sklearn.ensemble import ExtraTreesClassifier, RandomForestClassifier\nfrom sklearn.model_selection import cross_val_predict\nfrom sklearn.metrics import accuracy_score\n\nmodel = RandomForestClassifier()\npredictions = cross_val_predict(model, dataset.ml.features, dataset.ml.labels, dataset.ml.groups)\nscore = accuracy_score(dataset.ml.labels, predictions)\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/benlansdell/ethome",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ethome-ml",
            "package_url": "https://pypi.org/project/ethome-ml/",
            "platform": null,
            "project_url": "https://pypi.org/project/ethome-ml/",
            "project_urls": {
                "Bug Tracker": "https://github.com/benlansdell/ethome/issues",
                "Homepage": "https://github.com/benlansdell/ethome"
            },
            "release_url": "https://pypi.org/project/ethome-ml/0.3.0/",
            "requires_dist": [
                "numpy",
                "pandas",
                "scikit-learn",
                "tqdm",
                "typeguard",
                "typing",
                "matplotlib",
                "scikit-image",
                "umap-learn",
                "tensorflow (>=2.4.1) ; extra == 'all'",
                "keras (>=2.4.3) ; extra == 'all'"
            ],
            "requires_python": ">=3.6",
            "summary": "Machine learning for animal behavior analysis",
            "version": "0.3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15137317,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7fb955f53ad78fe59b8d2095dc77de9d",
                    "sha256": "88aaa3189e39066bcd1c946f7b81d8618ab70b6f4c1ed16375c8ee9c7574be8c"
                },
                "downloads": -1,
                "filename": "ethome_ml-0.3.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "7fb955f53ad78fe59b8d2095dc77de9d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 40491,
                "upload_time": "2022-09-18T21:23:31",
                "upload_time_iso_8601": "2022-09-18T21:23:31.004739Z",
                "url": "https://files.pythonhosted.org/packages/2f/59/70826c6ef21f3f2f2ecdbf04bec1a9025ad42837de87f762df5caf1d466f/ethome_ml-0.3.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8d0fdb6c1637e1320863ba64f16802b",
                    "sha256": "97f269a1258186fb9b7cf830e97900c72419bfa63ae7f83dfcfadd0087d2acc5"
                },
                "downloads": -1,
                "filename": "ethome-ml-0.3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "f8d0fdb6c1637e1320863ba64f16802b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 5766013,
                "upload_time": "2022-09-18T21:23:33",
                "upload_time_iso_8601": "2022-09-18T21:23:33.094509Z",
                "url": "https://files.pythonhosted.org/packages/8b/1c/2b4a0793efc23943ec4526e6be34e7c977f56ecc0d6a9e124075149d84ca/ethome-ml-0.3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}