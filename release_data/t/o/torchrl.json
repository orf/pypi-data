{
    "0.0.1a0": {
        "info": {
            "author": "torchrl contributors",
            "author_email": "vmoens@fb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/facebookresearch/rl",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "torchrl",
            "package_url": "https://pypi.org/project/torchrl/",
            "platform": null,
            "project_url": "https://pypi.org/project/torchrl/",
            "project_urls": {
                "Homepage": "https://github.com/facebookresearch/rl"
            },
            "release_url": "https://pypi.org/project/torchrl/0.0.1a0/",
            "requires_dist": [
                "torch",
                "numpy",
                "packaging",
                "gym ; extra == 'atari'",
                "atari-py ; extra == 'atari'",
                "ale-py ; extra == 'atari'",
                "gym[accept-rom-license] ; extra == 'atari'",
                "pygame ; extra == 'atari'",
                "dm-control ; extra == 'dm_control'",
                "mujoco-py ; extra == 'gym_continuous'",
                "mujoco ; extra == 'gym_continuous'",
                "moviepy ; extra == 'rendering'",
                "pytest ; extra == 'tests'",
                "pyyaml ; extra == 'tests'",
                "pytest-instafail ; extra == 'tests'",
                "tensorboard ; extra == 'utils'",
                "tqdm ; extra == 'utils'",
                "hydra-core (>=1.1) ; extra == 'utils'",
                "hydra-submitit-launcher ; extra == 'utils'"
            ],
            "requires_python": "",
            "summary": "",
            "version": "0.0.1a0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15129230,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9c4d713bbfe057884b50ccda1a1ea823",
                    "sha256": "19217e2012f2b26b14a77a29246e192bb7c106366ac0c4a84e8945706789998b"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "9c4d713bbfe057884b50ccda1a1ea823",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 389948,
                "upload_time": "2022-07-06T13:20:35",
                "upload_time_iso_8601": "2022-07-06T13:20:35.808578Z",
                "url": "https://files.pythonhosted.org/packages/61/67/bc06600e2b37758911e7ea461cc2d87ffd578bac660cad345c333f848e90/torchrl-0.0.1a0-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "99bf1812a3aab039b9e17f97f34a5bd0",
                    "sha256": "59a6953ab4fa646b658586fe896cd7e849ec89d4269fce27f033ea518c9d0842"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp310-cp310-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "99bf1812a3aab039b9e17f97f34a5bd0",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 3310116,
                "upload_time": "2022-07-06T13:21:31",
                "upload_time_iso_8601": "2022-07-06T13:21:31.165227Z",
                "url": "https://files.pythonhosted.org/packages/b6/34/34b9ae100ebaada296a4b51bdb053666155ebc9809d191a3c0617df51133/torchrl-0.0.1a0-cp310-cp310-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "00c0011ca23088f369b91474654b3ca8",
                    "sha256": "abf1508aa81bb2d460b8b068e5fcf0ed97a75cce163315194f403dfca19e422b"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "00c0011ca23088f369b91474654b3ca8",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 385553,
                "upload_time": "2022-07-06T13:21:41",
                "upload_time_iso_8601": "2022-07-06T13:21:41.222921Z",
                "url": "https://files.pythonhosted.org/packages/b1/00/b310becf049ba5293fd828e9dd290e9258fda48ffd9d2366149a14e372ef/torchrl-0.0.1a0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1de779e8b46347f1fb282bdfe5e519a4",
                    "sha256": "306bb432ababfe10c25564bf91e6f2687804b9fd7f42554b5a1f8dcc1945589e"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp37-cp37m-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "1de779e8b46347f1fb282bdfe5e519a4",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 3295849,
                "upload_time": "2022-07-06T13:22:07",
                "upload_time_iso_8601": "2022-07-06T13:22:07.169219Z",
                "url": "https://files.pythonhosted.org/packages/73/cd/6b78f15445619c4ca5ea787827f4fe87b43d26a8273b37414b545f85f354/torchrl-0.0.1a0-cp37-cp37m-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0473d7eeb9338849af422ac1cb899223",
                    "sha256": "bde753b44490873c2d84c8b962b02d7cdbac7d4cff0b5c53ca9c5e4693bcd638"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "0473d7eeb9338849af422ac1cb899223",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 390008,
                "upload_time": "2022-07-06T13:22:12",
                "upload_time_iso_8601": "2022-07-06T13:22:12.727282Z",
                "url": "https://files.pythonhosted.org/packages/93/ed/5d446b945f8ea8c95c78de395ef33594e8367de4e8ad6c1b0525c8a628f9/torchrl-0.0.1a0-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "695bf90e88999d1e48ae5d3b2e4462be",
                    "sha256": "e6acc27b73c290af214ac0c1061b5bf79399420976519bf6a519a3532905d7a3"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp38-cp38-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "695bf90e88999d1e48ae5d3b2e4462be",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 3310990,
                "upload_time": "2022-07-06T13:22:18",
                "upload_time_iso_8601": "2022-07-06T13:22:18.540948Z",
                "url": "https://files.pythonhosted.org/packages/b4/9c/76dbfedac963f5b1335db9a2a0bd64971c9de4d030379e709089fa428292/torchrl-0.0.1a0-cp38-cp38-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "7c7659667d24cbd13f81974b96c6bb47",
                    "sha256": "e8a162de316d6790fb7c7edb02e8d5dd639f06081db5d41371f12c203c2111f2"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "7c7659667d24cbd13f81974b96c6bb47",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 390240,
                "upload_time": "2022-07-06T13:22:21",
                "upload_time_iso_8601": "2022-07-06T13:22:21.148898Z",
                "url": "https://files.pythonhosted.org/packages/46/99/e8dab72ad6aa973e136d1536406ddff022e3be2df536896b28f9349d3d55/torchrl-0.0.1a0-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "4c57f1f6692724d0b5f25f5528cf3c9b",
                    "sha256": "6afede2f83aa332b834f09c3b07b8b1db86eebd4f0986d8a089be5a07bac9e3a"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1a0-cp39-cp39-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "4c57f1f6692724d0b5f25f5528cf3c9b",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 3311833,
                "upload_time": "2022-07-06T13:22:24",
                "upload_time_iso_8601": "2022-07-06T13:22:24.444827Z",
                "url": "https://files.pythonhosted.org/packages/24/c4/4d8092702d110dd5458ce1b6cf8ae68b517b9d1611224aabefdb003fad50/torchrl-0.0.1a0-cp39-cp39-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1b0": {
        "info": {
            "author": "torchrl contributors",
            "author_email": "vmoens@fb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/facebookresearch/rl",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "torchrl",
            "package_url": "https://pypi.org/project/torchrl/",
            "platform": null,
            "project_url": "https://pypi.org/project/torchrl/",
            "project_urls": {
                "Homepage": "https://github.com/facebookresearch/rl"
            },
            "release_url": "https://pypi.org/project/torchrl/0.0.1b0/",
            "requires_dist": [
                "torch",
                "numpy",
                "packaging",
                "gym (<=0.24) ; extra == 'atari'",
                "atari-py ; extra == 'atari'",
                "ale-py ; extra == 'atari'",
                "gym[accept-rom-license] ; extra == 'atari'",
                "pygame ; extra == 'atari'",
                "dm-control ; extra == 'dm_control'",
                "mujoco-py ; extra == 'gym_continuous'",
                "mujoco ; extra == 'gym_continuous'",
                "moviepy ; extra == 'rendering'",
                "pytest ; extra == 'tests'",
                "pyyaml ; extra == 'tests'",
                "pytest-instafail ; extra == 'tests'",
                "tensorboard ; extra == 'utils'",
                "wandb ; extra == 'utils'",
                "tqdm ; extra == 'utils'",
                "hydra-core (>=1.1) ; extra == 'utils'",
                "hydra-submitit-launcher ; extra == 'utils'"
            ],
            "requires_python": "",
            "summary": "",
            "version": "0.0.1b0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15129230,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a47587d63b1a490c0a9a619cb4a4cc67",
                    "sha256": "3f5f1f022ecac8c92f22bc515e3a4ba54be8066137045e5ce60141ad2e216fb9"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "a47587d63b1a490c0a9a619cb4a4cc67",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 401990,
                "upload_time": "2022-07-25T12:10:58",
                "upload_time_iso_8601": "2022-07-25T12:10:58.401440Z",
                "url": "https://files.pythonhosted.org/packages/a1/bb/e189a0d1d989435ada1428025566e51cfffe05f3b9c59559fa9b3b7fe318/torchrl-0.0.1b0-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c6683e5e3b3baf48adf5279ef51680f2",
                    "sha256": "7b78041f8a20ded4fa1f264694185b3259578dbd40fa894cae046fa77b331caf"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp310-cp310-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "c6683e5e3b3baf48adf5279ef51680f2",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 3330745,
                "upload_time": "2022-07-25T12:11:00",
                "upload_time_iso_8601": "2022-07-25T12:11:00.828881Z",
                "url": "https://files.pythonhosted.org/packages/1b/26/b55feabe4123e4f0f50aef0093f442f8b00c9bd5f85d233fd63a2c70ef9c/torchrl-0.0.1b0-cp310-cp310-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "57b60f33024b6868bb201299d6514cdb",
                    "sha256": "dcaef226b823698e021723afb99a0750717c4c194d64f19fa895843bc80ff62c"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "57b60f33024b6868bb201299d6514cdb",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 396924,
                "upload_time": "2022-07-25T12:11:03",
                "upload_time_iso_8601": "2022-07-25T12:11:03.362579Z",
                "url": "https://files.pythonhosted.org/packages/6b/fa/ae40c3738710c9f8c2422bbbb0c65aec9eba96d2cdc9735338c69013e01e/torchrl-0.0.1b0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "44e40dd87bce55042662574367429aaa",
                    "sha256": "5f012e265881273a534f1c015b487692455a1e98da4f33a589e7532ca68bdac2"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp37-cp37m-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "44e40dd87bce55042662574367429aaa",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 3319038,
                "upload_time": "2022-07-25T12:11:05",
                "upload_time_iso_8601": "2022-07-25T12:11:05.365564Z",
                "url": "https://files.pythonhosted.org/packages/da/60/caee73d9767c776a552ad0004dcdb10936c3a1289a7d18854fb98d7104fd/torchrl-0.0.1b0-cp37-cp37m-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dd7fbfc16bf3b5eb80e3ba92b40bedc7",
                    "sha256": "215fc71f66456fbbcd829bf5a8c7d2fa3fcec20473c7082402195e023723ea37"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "dd7fbfc16bf3b5eb80e3ba92b40bedc7",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 401978,
                "upload_time": "2022-07-25T12:11:07",
                "upload_time_iso_8601": "2022-07-25T12:11:07.234274Z",
                "url": "https://files.pythonhosted.org/packages/0b/58/1ecf03bae456752e522f8744b593244aa3bd5a3149ed6554f52afa75c181/torchrl-0.0.1b0-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "46d5ddbb17c8a4b5f8874a4b442edd72",
                    "sha256": "ce44f628f5b04e1da2ad8189a3b7c109568d7b0c69cb0eb0528f6e8017d8a7ae"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp38-cp38-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "46d5ddbb17c8a4b5f8874a4b442edd72",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 3331589,
                "upload_time": "2022-07-25T12:11:08",
                "upload_time_iso_8601": "2022-07-25T12:11:08.866254Z",
                "url": "https://files.pythonhosted.org/packages/eb/2c/107fe3fc318f97997fce95073078bf6b7c75b0d4f99334f39e6af69ed227/torchrl-0.0.1b0-cp38-cp38-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "f34b7621cfdcfe0de71eda55d10570f8",
                    "sha256": "eef8444ef1cb627e930353dfb911dd1d850762e814bc2d989ff5e2de06039883"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "f34b7621cfdcfe0de71eda55d10570f8",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 402219,
                "upload_time": "2022-07-25T12:11:10",
                "upload_time_iso_8601": "2022-07-25T12:11:10.508400Z",
                "url": "https://files.pythonhosted.org/packages/dc/99/e4e400b764a5afc3880ca0613c9e64b41b08f6b27c72ace94dbffd93fc1f/torchrl-0.0.1b0-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "c2273f77b79f0da6afb84045a7014fe1",
                    "sha256": "8a19aef0fda171b0444588de908bdca04d7818eecf5ca8f44b8b31e40628a9ee"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1b0-cp39-cp39-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "c2273f77b79f0da6afb84045a7014fe1",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 3330566,
                "upload_time": "2022-07-25T12:11:12",
                "upload_time_iso_8601": "2022-07-25T12:11:12.253124Z",
                "url": "https://files.pythonhosted.org/packages/db/33/212542a742b2d4c924a172579c851715170b5b2e5b0dd99dc1b3a0476542/torchrl-0.0.1b0-cp39-cp39-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1rc0": {
        "info": {
            "author": "torchrl contributors",
            "author_email": "vmoens@fb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/facebookresearch/rl",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "torchrl",
            "package_url": "https://pypi.org/project/torchrl/",
            "platform": null,
            "project_url": "https://pypi.org/project/torchrl/",
            "project_urls": {
                "Homepage": "https://github.com/facebookresearch/rl"
            },
            "release_url": "https://pypi.org/project/torchrl/0.0.1rc0/",
            "requires_dist": [
                "torch",
                "numpy",
                "packaging",
                "gym (<=0.24) ; extra == 'atari'",
                "atari-py ; extra == 'atari'",
                "ale-py ; extra == 'atari'",
                "gym[accept-rom-license] ; extra == 'atari'",
                "pygame ; extra == 'atari'",
                "dm-control ; extra == 'dm_control'",
                "mujoco-py ; extra == 'gym_continuous'",
                "mujoco ; extra == 'gym_continuous'",
                "moviepy ; extra == 'rendering'",
                "pytest ; extra == 'tests'",
                "pyyaml ; extra == 'tests'",
                "pytest-instafail ; extra == 'tests'",
                "tensorboard ; extra == 'utils'",
                "wandb ; extra == 'utils'",
                "tqdm ; extra == 'utils'",
                "hydra-core (>=1.1) ; extra == 'utils'",
                "hydra-submitit-launcher ; extra == 'utils'"
            ],
            "requires_python": "",
            "summary": "",
            "version": "0.0.1rc0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15129230,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bb92d46dcd923079c57e10e0b4ec82d9",
                    "sha256": "5fa0e24cdffec5c6f99c26e5ed2786de4474f830b344cac256d57dd4445a10c5"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "bb92d46dcd923079c57e10e0b4ec82d9",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 402243,
                "upload_time": "2022-07-25T21:16:46",
                "upload_time_iso_8601": "2022-07-25T21:16:46.929011Z",
                "url": "https://files.pythonhosted.org/packages/41/1e/6fa6bd65ac9b59ff805183ace4b54205531ad0d987c09ab6cba67f18957a/torchrl-0.0.1rc0-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "539dd7e4534f68d02baec2329fae4f85",
                    "sha256": "287ef04c8217ff73b4b136446fb2cc615c9562cddcd37e5c27022cc048537885"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp310-cp310-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "539dd7e4534f68d02baec2329fae4f85",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 3331006,
                "upload_time": "2022-07-25T21:16:56",
                "upload_time_iso_8601": "2022-07-25T21:16:56.349068Z",
                "url": "https://files.pythonhosted.org/packages/b0/96/396ac071be34a11256cc054a34b33ce1d44ea09fad00c1892ca992e2ce2b/torchrl-0.0.1rc0-cp310-cp310-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8b90d97b604e27e632872d2449e84abb",
                    "sha256": "baa9b3fe87e7831e1d157e23950b898fee41fadccf06618ac8e7ebe367172de0"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "8b90d97b604e27e632872d2449e84abb",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 397173,
                "upload_time": "2022-07-25T21:16:58",
                "upload_time_iso_8601": "2022-07-25T21:16:58.187269Z",
                "url": "https://files.pythonhosted.org/packages/30/16/e94bc085f4b53963c6c4d023913b00dc8e65b19b75282b9f68ce1cd8b21c/torchrl-0.0.1rc0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a3f0fe1be2f9c920f8bcc5f32b41ff89",
                    "sha256": "27d9f76b7c9ebd3e5ed57b05bc012c12519928ea833dc8ab485f4407ba3fe597"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp37-cp37m-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "a3f0fe1be2f9c920f8bcc5f32b41ff89",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 3319288,
                "upload_time": "2022-07-25T21:17:02",
                "upload_time_iso_8601": "2022-07-25T21:17:02.455264Z",
                "url": "https://files.pythonhosted.org/packages/d7/37/a4bbaa34edca8ba60070cec33cb6923a91b23929de3674564b143b81f9c5/torchrl-0.0.1rc0-cp37-cp37m-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "becbb84df46c2aa0a6098f587572fe1d",
                    "sha256": "f41c1d66019d5976db64df36d937b523556380da7ea72cac2e440710f10de320"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "becbb84df46c2aa0a6098f587572fe1d",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 402232,
                "upload_time": "2022-07-25T21:17:05",
                "upload_time_iso_8601": "2022-07-25T21:17:05.226431Z",
                "url": "https://files.pythonhosted.org/packages/dc/d6/f16257bdbc0a39a687eaa6fcfae560050c9d3088fee5d46ec3fbb4ae1213/torchrl-0.0.1rc0-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "812fc955d178e2c84ba55cb7956df857",
                    "sha256": "bccc7317cb120712fe1d089af43713c28ea9fa75c3ae45f7f460ef7b20fe70d3"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp38-cp38-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "812fc955d178e2c84ba55cb7956df857",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 3331839,
                "upload_time": "2022-07-25T21:17:09",
                "upload_time_iso_8601": "2022-07-25T21:17:09.287058Z",
                "url": "https://files.pythonhosted.org/packages/34/19/39ffc8c471ad0d7b7edf93b24e9ae5ea3a836f4306dc70b23e7c04fc1dfe/torchrl-0.0.1rc0-cp38-cp38-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "eec3a22b8594ba3912284f8ed56666a1",
                    "sha256": "9ddab0ada2e0949df12a59373d70d12147cdfcf6719bd6be90de162d796e0ef8"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "eec3a22b8594ba3912284f8ed56666a1",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 402471,
                "upload_time": "2022-07-25T21:17:11",
                "upload_time_iso_8601": "2022-07-25T21:17:11.222763Z",
                "url": "https://files.pythonhosted.org/packages/9d/d2/a0d75ca992edbe2b07ef2b1d42018cfabf18bab84d3cd159e1de3a639bf3/torchrl-0.0.1rc0-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6b4719e44c5ff3c81882adcd3cde7ebc",
                    "sha256": "b33abd281bcf6f5050e5352645cf5c83e109b84fc01480e5a1deed79bffd822b"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.1rc0-cp39-cp39-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "6b4719e44c5ff3c81882adcd3cde7ebc",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 3330828,
                "upload_time": "2022-07-25T21:17:15",
                "upload_time_iso_8601": "2022-07-25T21:17:15.412065Z",
                "url": "https://files.pythonhosted.org/packages/b5/f0/b2b6ac782ea7b1bdeee3db74b60ddfdd2dbff83138f945ec03e5b81537be/torchrl-0.0.1rc0-cp39-cp39-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2a0": {
        "info": {
            "author": "torchrl contributors",
            "author_email": "vmoens@fb.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "[![facebookresearch](https://circleci.com/gh/facebookresearch/rl.svg?style=shield)](https://circleci.com/gh/facebookresearch/rl)\n\n# TorchRL\n\n## Disclaimer\n\nThis library is not officially released yet and is subject to change.\n\nThe features are available before an official release so that users and collaborators can get early access and provide feedback. No guarantee of stability, robustness or backward compatibility is provided.\n\n---\n\n**TorchRL** is an open-source Reinforcement Learning (RL) library for PyTorch.\n\nIt provides pytorch and **python-first**, low and high level abstractions for RL that are intended to be **efficient**, **modular**, **documented** and properly **tested**.\nThe code is aimed at supporting research in RL. Most of it is written in python in a highly modular way, such that researchers can easily swap components, transform them or write new ones with little effort.\n\nThis repo attempts to align with the existing pytorch ecosystem libraries in that it has a dataset pillar ([torchrl/envs](torchrl/envs)), [transforms](torchrl/envs/transforms), [models](torchrl/modules), data utilities (e.g. collectors and containers), etc.\nTorchRL aims at having as few dependencies as possible (python standard library, numpy and pytorch). Common environment libraries (e.g. OpenAI gym) are only optional.\n\nOn the low-level end, torchrl comes with a set of highly re-usable functionals for [cost functions](torchrl/objectives/costs), [returns](torchrl/objectives/returns) and data processing.\n\nTorchRL aims at (1) a high modularity and (2) good runtime performance.\n\n## Features\n\nOn the high-level end, TorchRL provides:\n- [`TensorDict`](torchrl/data/tensordict/tensordict.py),\na convenient data structure<sup>(1)</sup> to pass data from\none object to another without friction.\n`TensorDict` makes it easy to re-use pieces of code across environments, models and\nalgorithms. For instance, here's how to code a rollout in TorchRL:\n    <details>\n      <summary>Code</summary>\n   \n    ```diff\n    - obs, done = env.reset()\n    + tensordict = env.reset()\n    policy = TensorDictModule(\n        model,\n        in_keys=[\"observation_pixels\", \"observation_vector\"],\n        out_keys=[\"action\"],\n    )\n    out = []\n    for i in range(n_steps):\n    -     action, log_prob = policy(obs)\n    -     next_obs, reward, done, info = env.step(action)\n    -     out.append((obs, next_obs, action, log_prob, reward, done))\n    -     obs = next_obs\n    +     tensordict = policy(tensordict)\n    +     tensordict = env.step(tensordict)\n    +     out.append(tensordict)\n    +     tensordict = step_tensordict(tensordict)  # renames next_observation_* keys to observation_*\n    - obs, next_obs, action, log_prob, reward, done = [torch.stack(vals, 0) for vals in zip(*out)]\n    + out = torch.stack(out, 0)  # TensorDict supports multiple tensor operations\n    ```\n    TensorDict abstracts away the input / output signatures of the modules, env, collectors, replay buffers and losses of the library, allowing its primitives\n    to be easily recycled across settings.\n    Here's another example of an off-policy training loop in TorchRL (assuming that a data collector, a replay buffer, a loss and an optimizer have been instantiated):\n   \n    ```diff\n    - for i, (obs, next_obs, action, hidden_state, reward, done) in enumerate(collector):\n    + for i, tensordict in enumerate(collector):\n    -     replay_buffer.add((obs, next_obs, action, log_prob, reward, done))\n    +     replay_buffer.add(tensordict)\n        for j in range(num_optim_steps):\n    -         obs, next_obs, action, hidden_state, reward, done = replay_buffer.sample(batch_size)\n    -         loss = loss_fn(obs, next_obs, action, hidden_state, reward, done)\n    +         tensordict = replay_buffer.sample(batch_size)\n    +         loss = loss_fn(tensordict)\n            loss.backward()\n            optim.step()\n            optim.zero_grad()\n    ```\n    Again, this training loop can be re-used across algorithms as it makes a minimal number of assumptions about the structure of the data.\n   \n    TensorDict supports multiple tensor operations on its device and shape\n    (the shape of TensorDict, or its batch size, is the common arbitrary N first dimensions of all its contained tensors):\n    ```python\n    # stack and cat\n    tensordict = torch.stack(list_of_tensordicts, 0)\n    tensordict = torch.cat(list_of_tensordicts, 0)\n    # reshape\n    tensordict = tensordict.view(-1)\n    tensordict = tensordict.permute(0, 2, 1)\n    tensordict = tensordict.unsqueeze(-1)\n    tensordict = tensordict.squeeze(-1)\n    # indexing\n    tensordict = tensordict[:2]\n    tensordict[:, 2] = sub_tensordict\n    # device and memory location\n    tensordict.cuda()\n    tensordict.to(\"cuda:1\")\n    tensordict.share_memory_()\n    ```\n    </details>\n\n    Check our [TensorDict tutorial](tutorials/tensordict.ipynb) for more information.\n   \n- An associated [`TensorDictModule` class](torchrl/modules/tensordict_module/common.py) which is [functorch](https://github.com/pytorch/functorch)-compatible!\n    <details>\n      <summary>Code</summary>\n   \n    ```diff\n    transformer_model = nn.Transformer(nhead=16, num_encoder_layers=12)\n    + td_module = TensorDictModule(transformer_model, in_keys=[\"src\", \"tgt\"], out_keys=[\"out\"])\n    src = torch.rand((10, 32, 512))\n    tgt = torch.rand((20, 32, 512))\n    + tensordict = TensorDict({\"src\": src, \"tgt\": tgt}, batch_size=[20, 32])\n    - out = transformer_model(src, tgt)\n    + td_module(tensordict)\n    + out = tensordict[\"out\"]\n    ```\n \n    The `TensorDictSequential` class allows to branch sequences of `nn.Module` instances in a highly modular way.\n    For instance, here is an implementation of a transformer using the encoder and decoder blocks:\n    ```python\n    encoder_module = TransformerEncoder(...)\n    encoder = TensorDictModule(encoder_module, in_keys=[\"src\", \"src_mask\"], out_keys=[\"memory\"])\n    decoder_module = TransformerDecoder(...)\n    decoder = TensorDictModule(decoder_module, in_keys=[\"tgt\", \"memory\"], out_keys=[\"output\"])\n    transformer = TensorDictSequential(encoder, decoder)\n    assert transformer.in_keys == [\"src\", \"src_mask\", \"tgt\"]\n    assert transformer.out_keys == [\"memory\", \"output\"]\n    ```\n   \n    `TensorDictSequential` allows to isolate subgraphs by querying a set of desired input / output keys:\n    ```python\n    transformer.select_subsequence(out_keys=[\"memory\"])  # returns the encoder\n    transformer.select_subsequence(in_keys=[\"tgt\", \"memory\"])  # returns the decoder\n    ```\n    </details>\n\n    The corresponding [tutorial](tutorials/tensordictmodule.ipynb) provides more context about its features.\n\n- a generic [trainer class](torchrl/trainers/trainers.py)<sup>(1)</sup> that\n    executes the aforementioned training loop. Through a hooking mechanism,\n    it also supports any logging or data transformation operation at any given\n    time.\n\n- A common [interface for environments](torchrl/envs)\n    which supports common libraries (OpenAI gym, deepmind control lab, etc.)<sup>(1)</sup> and state-less execution (e.g. Model-based environments).\n    The [batched environments](torchrl/envs/vec_env.py) containers allow parallel execution<sup>(2)</sup>.\n    A common pytorch-first class of [tensor-specification class](torchrl/data/tensor_specs.py) is also provided.\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    env_make = lambda: GymEnv(\"Pendulum-v1\", from_pixels=True)\n    env_parallel = ParallelEnv(4, env_make)  # creates 4 envs in parallel\n    tensordict = env_parallel.rollout(max_steps=20, policy=None)  # random rollout (no policy given)\n    assert tensordict.shape == [4, 20]  # 4 envs, 20 steps rollout\n    env_parallel.action_spec.is_in(tensordict[\"action\"])  # spec check returns True\n    ```\n    </details>\n\n- multiprocess [data collectors](torchrl/collectors/collectors.py)<sup>(2)</sup> that work synchronously or asynchronously.\n    Through the use of TensorDict, TorchRL's training loops are made very similar to regular training loops in supervised\n    learning (although the \"dataloader\" -- read data collector -- is modified on-the-fly):\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    env_make = lambda: GymEnv(\"Pendulum-v1\", from_pixels=True)\n    collector = MultiaSyncDataCollector(\n        [env_make, env_make],\n        policy=policy,\n        devices=[\"cuda:0\", \"cuda:0\"],\n        total_frames=10000,\n        frames_per_batch=50,\n        ...\n    )\n    for i, tensordict_data in enumerate(collector):\n        loss = loss_module(tensordict_data)\n        loss.backward()\n        optim.step()\n        optim.zero_grad()\n        collector.update_policy_weights_()\n    ```\n    </details>\n\n- efficient<sup>(2)</sup> and generic<sup>(1)</sup> [replay buffers](torchrl/data/replay_buffers/replay_buffers.py) with modularized storage:\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    storage = LazyMemmapStorage(  # memory-mapped (physical) storage\n        cfg.buffer_size,\n        scratch_dir=\"/tmp/\"\n    )\n    buffer = TensorDictPrioritizedReplayBuffer(\n        buffer_size=10000,\n        alpha=0.7,\n        beta=0.5,\n        collate_fn=lambda x: x,\n        pin_memory=device != torch.device(\"cpu\"),\n        prefetch=10,  # multi-threaded sampling\n        storage=storage\n    )\n    ```\n    </details>\n\n- cross-library [environment transforms](torchrl/envs/transforms/transforms.py)<sup>(1)</sup>,\n    executed on device and in a vectorized fashion<sup>(2)</sup>,\n    which process and prepare the data coming out of the environments to be used by the agent:\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    env_make = lambda: GymEnv(\"Pendulum-v1\", from_pixels=True)\n    env_base = ParallelEnv(4, env_make, device=\"cuda:0\")  # creates 4 envs in parallel\n    env = TransformedEnv(\n        env_base,\n        Compose(\n            ToTensorImage(),\n            ObservationNorm(loc=0.5, scale=1.0)),  # executes the transforms once and on device\n    )\n    tensordict = env.reset()\n    assert tensordict.device == torch.device(\"cuda:0\")\n    ```\n    Other transforms include: reward scaling (`RewardScaling`), shape operations (concatenation of tensors, unsqueezing etc.), contatenation of\n    successive operations (`CatFrames`), resizing (`Resize`) and many more.\n\n    Unlike other libraries, the transforms are stacked as a list (and not wrapped in each other), which makes it\n    easy to add and remove them at will:\n    ```python\n    env.insert_transform(0, NoopResetEnv())  # inserts the NoopResetEnv transform at the index 0\n    ```\n    Nevertheless, transforms can access and execute operations on the parent environment:\n    ```python\n    transform = env.transform[1]  # gathers the second transform of the list\n    parent_env = transform.parent  # returns the base environment of the second transform, i.e. the base env + the first transform\n    ```\n    </details>\n\n- various tools for distributed learning (e.g. [memory mapped tensors](torchrl/data/tensordict/memmap.py))<sup>(2)</sup>;\n- various [architectures](torchrl/modules/models/) and models (e.g. [actor-critic](torchrl/modules/tensordict_module/actors.py))<sup>(1)</sup>:\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    # create an nn.Module\n    common_module = ConvNet(\n        bias_last_layer=True,\n        depth=None,\n        num_cells=[32, 64, 64],\n        kernel_sizes=[8, 4, 3],\n        strides=[4, 2, 1],\n    )\n    # Wrap it in a TensorDictModule, indicating what key to read in and where to\n    # write out the output\n    common_module = TensorDictModule(\n        common_module,\n        in_keys=[\"pixels\"],\n        out_keys=[\"hidden\"],\n    )\n    # Wrap the policy module in NormalParamsWrapper, such that the output\n    # tensor is split in loc and scale, and scale is mapped onto a positive space\n    policy_module = NormalParamsWrapper(\n        MLP(\n            num_cells=[64, 64],\n            out_features=32,\n            activation=nn.ELU,\n        )\n    )\n    # Wrap the nn.Module in a ProbabilisticTensorDictModule, indicating how\n    # to build the torch.distribution.Distribution object and what to do with it\n    policy_module = ProbabilisticTensorDictModule(  # stochastic policy\n        TensorDictModule(\n            policy_module,\n            in_keys=[\"hidden\"],\n            out_keys=[\"loc\", \"scale\"],\n        ),\n        dist_param_keys=[\"loc\", \"scale\"],\n        out_key_sample=\"action\",\n        distribution_class=TanhNormal,\n    )\n    value_module = MLP(\n        num_cells=[64, 64],\n        out_features=1,\n        activation=nn.ELU,\n    )\n    # Wrap the policy and value funciton in a common module\n    actor_value = ActorValueOperator(common_module, policy_module, value_module)\n    # standalone policy from this\n    standalone_policy = actor_value.get_policy_operator()\n    ```\n    </details>\n\n- exploration [wrappers](torchrl/modules/tensordict_module/exploration.py) and\n    [modules](torchrl/modules/models/exploration.py) to easily swap between exploration and exploitation<sup>(1)</sup>:\n    <details>\n      <summary>Code</summary>\n   \n    ```python\n    policy_explore = EGreedyWrapper(policy)\n    with set_exploration_mode(\"random\"):\n        tensordict = policy_explore(tensordict)  # will use eps-greedy\n    with set_exploration_mode(\"mode\"):\n        tensordict = policy_explore(tensordict)  # will not use eps-greedy\n    ```\n    </details>\n\n- A series of efficient [loss modules](https://github.com/facebookresearch/rl/blob/main/torchrl/objectives/costs)\n    and highly vectorized\n    [functional return and advantage](https://github.com/facebookresearch/rl/blob/main/torchrl/objectives/returns/functional.py)\n    computation.\n\n    <details>\n      <summary>Code</summary>\n   \n    ### Loss modules\n    ```python\n    from torchrl.objectives.costs import DQNLoss\n    loss_module = DQNLoss(value_network=value_network, gamma=0.99)\n    tensordict = replay_buffer.sample(batch_size)\n    loss = loss_module(tensordict)\n    ```\n \n    ### Advantage computation\n    ```python\n    from torchrl.objectives.returns.functional import vec_td_lambda_return_estimate\n    advantage = vec_td_lambda_return_estimate(gamma, lmbda, next_state_value, reward, done)\n    ```\n\n    </details>\n\n- various [recipes](torchrl/trainers/helpers/models.py) to build models that\n    correspond to the environment being deployed.\n\n## Examples, tutorials and demos\n\nA series of [examples](examples/) are provided with an illustrative purpose:\n- [DQN (and add-ons up to Rainbow)](examples/dqn/dqn.py)\n- [DDPG](examples/ddpg/ddpg.py)\n- [PPO](examples/ppo/ppo.py)\n- [SAC](examples/sac/sac.py)\n- [REDQ](examples/redq/redq.py)\n\nand many more to come!\n\nWe also provide [tutorials and demos](tutorials) that give a sense of what the\nlibrary can do.\n\n## Installation\nCreate a conda environment where the packages will be installed.\n\n```\nconda create --name torch_rl python=3.9\nconda activate torch_rl\n```\n\nDepending on the use of functorch that you want to make, you may want to install the latest (nightly) pytorch release or the latest stable version of pytorch:\n\n**Stable**\n\n```\n# For CUDA 10.2\nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch\n# For CUDA 11.3\nconda install pytorch torchvision cudatoolkit=11.3 -c pytorch\n# For CPU-only build\nconda install pytorch torchvision cpuonly -c pytorch\n\npip3 install functorch\n```\n\n**Nightly**\n```\n# For CUDA 10.2\npip3 install --pre torch torchvision --extra-index-url https://download.pytorch.org/whl/nightly/cu102\n# For CUDA 11.3\npip3 install --pre torch torchvision --extra-index-url https://download.pytorch.org/whl/nightly/cu113\n# For CPU-only build\npip3 install --pre torch torchvision --extra-index-url https://download.pytorch.org/whl/nightly/cpu\n```\n\nand functorch\n```\npip3 install ninja  # Makes the build go faster\npip3 install \"git+https://github.com/pytorch/functorch.git\"\n```\n\nIf this fails, you can get the latest version of functorch that was marked to be\ncompatible with the current torch version:\n```bash\npip3 install ninja  # Makes the build go faster\nPYTORCH_VERSION=`python -c \"import torch.version; print(torch.version.git_version)\"`\npip3 install \"git+https://github.com/pytorch/pytorch.git@$PYTORCH_VERSION#subdirectory=functorch\"\n```\n\nIf the generation of this artifact in MacOs M1 doesn't work correctly or in the execution the message\n`(mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e'))` appears,\ntry erasing the previously created build artifacts (`torchrl.egg-info/`, `build/`, `torchrl/_torchsl.so`)\nor re-clone the library from GitHub, then try\n\n```\nPYTORCH_VERSION=`python -c \"import torch.version; print(torch.version.git_version)\"`\nARCHFLAGS=\"-arch arm64\" pip3 install \"git+https://github.com/pytorch/pytorch.git@$PYTORCH_VERSION#subdirectory=functorch\"\n```\n\n**Torchrl**\n\nYou can install the latest release by using\n```\npip3 install torchrl\n```\nThis should work on linux and MacOs (not M1). For Windows and M1/M2 machines, one\nshould install the library locally (see below).\n\nTo install extra dependencies, call\n```\npip3 install \"torchrl[atari,dm_control,gym_continuous,rendering,tests,utils]\"\n```\nor a subset of these.\n\nAlternatively, as the library is at an early stage, it may be wise to install\nit in develop mode as this will make it possible to pull the latest changes and\nbenefit from them immediately.\nStart by cloning the repo:\n```\ngit clone https://github.com/facebookresearch/rl\n```\n\nGo to the directory where you have cloned the torchrl repo and install it\n```\ncd /path/to/torchrl/\npython setup.py develop\n```\n\nIf the generation of this artifact in MacOs M1 doesn't work correctly or in the execution the message\n`(mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e'))` appears, then try\n\n```\nARCHFLAGS=\"-arch arm64\" python setup.py develop\n```\n\nTo run a quick sanity check, leave that directory (e.g. by executing `cd ~/`)\nand try to import the library.\n```\npython -c \"import torchrl\"\n```\nThis should not return any warning or error.\n\n**Optional dependencies**\n\nThe following libraries can be installed depending on the usage one wants to\nmake of torchrl:\n```\n# diverse\npip3 install tqdm tensorboard \"hydra-core>=1.1\" hydra-submitit-launcher\n\n# rendering\npip3 install moviepy\n\n# deepmind control suite\npip3 install dm_control\n\n# gym, atari games\npip3 install gym[atari] \"gym[accept-rom-license]\" pygame\n\n# tests\npip3 install pytest pyyaml pytest-instafail\n\n# tensorboard\npip3 install tensorboard\n\n# wandb\npip3 install wandb\n```\n\n**Troubleshooting**\n\nIf a `ModuleNotFoundError: No module named \u2018torchrl._torchrl` errors occurs,\nit means that the C++ extensions were not installed or not found.\nOne common reason might be that you are trying to import torchrl from within the\ngit repo location. Indeed the following code snippet should return an error if\ntorchrl has not been installed in `develop` mode:\n```\ncd ~/path/to/rl/repo\npython -c 'from torchrl.envs.libs.gym import GymEnv'\n```\nIf this is the case, consider executing torchrl from another location.\n\nOn **MacOs**, we recommend installing XCode first.\nWith Apple Silicon M1 chips, make sure you are using the arm64-built python\n(e.g. [here](https://betterprogramming.pub/how-to-install-pytorch-on-apple-m1-series-512b3ad9bc6)). Running the following lines of code\n\n```\nwget https://raw.githubusercontent.com/pytorch/pytorch/master/torch/utils/collect_env.py\npython collect_env.py\n```\nshould display\n```\nOS: macOS *** (arm64)\n```\nand not\n```\nOS: macOS **** (x86_64)\n```\n\n## Running examples\nExamples are coded in a very similar way but the configuration may change from one algorithm to another (e.g. async/sync data collection, hyperparameters, ratio of model updates / frame etc.)\nTo train an algorithm it is therefore advised to use the predefined configurations that are found in the `configs` sub-folder in each algorithm directory:\n```\npython examples/ppo/ppo.py --config=examples/ppo/configs/humanoid.txt\n```\nNote that using the config files requires the [configargparse](https://pypi.org/project/ConfigArgParse/) library.\n\nOne can also overwrite the config parameters using flags, e.g.\n```\npython examples/ppo/ppo.py --config=examples/ppo/configs/humanoid.txt --frame_skip=2 --collection_devices=cuda:1\n```\n\nEach example will write a tensorboard log in a dedicated folder, e.g. `ppo_logging/...`.\n\n## Contributing\n\nInternal collaborations to torchrl are welcome! Feel free to fork, submit issues and PRs.\nYou can checkout the detailed contribution guide [here](CONTRIBUTING.md).\n\nContributors are recommended to install [pre-commit hooks](https://pre-commit.com/) (using `pre-commit install`). pre-commit will check for linting related issues when the code is commited locally. You can disable th check by appending `-n` to your commit command: `git commit -m <commit message> -n`\n\n\n## Upcoming features\n\nIn the near future, we plan to:\n- provide tutorials on how to design new actors or environment wrappers;\n- implement IMPALA (as a distributed RL example) and Meta-RL algorithms;\n- improve the tests, documentation and nomenclature.\n\nWe welcome any contribution, should you want to contribute to these new features\nor any other, lister or not, in the issues section of this repository.\n\n# License\nTorchRL is licensed under the MIT License. See [LICENSE](LICENSE) for details.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/facebookresearch/rl",
            "keywords": "",
            "license": "BSD",
            "maintainer": "",
            "maintainer_email": "",
            "name": "torchrl",
            "package_url": "https://pypi.org/project/torchrl/",
            "platform": null,
            "project_url": "https://pypi.org/project/torchrl/",
            "project_urls": {
                "Homepage": "https://github.com/facebookresearch/rl"
            },
            "release_url": "https://pypi.org/project/torchrl/0.0.2a0/",
            "requires_dist": [
                "torch",
                "numpy",
                "packaging",
                "cloudpickle",
                "gym (<=0.24) ; extra == 'atari'",
                "atari-py ; extra == 'atari'",
                "ale-py ; extra == 'atari'",
                "gym[accept-rom-license] ; extra == 'atari'",
                "pygame ; extra == 'atari'",
                "dm-control ; extra == 'dm_control'",
                "mujoco-py ; extra == 'gym_continuous'",
                "mujoco ; extra == 'gym_continuous'",
                "moviepy ; extra == 'rendering'",
                "pytest ; extra == 'tests'",
                "pyyaml ; extra == 'tests'",
                "pytest-instafail ; extra == 'tests'",
                "tensorboard ; extra == 'utils'",
                "wandb ; extra == 'utils'",
                "tqdm ; extra == 'utils'",
                "hydra-core (>=1.1) ; extra == 'utils'",
                "hydra-submitit-launcher ; extra == 'utils'"
            ],
            "requires_python": "",
            "summary": "",
            "version": "0.0.2a0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15129230,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a063fa2d7a963caec47708f65006cea2",
                    "sha256": "0899d1a4471249c648dfcc15f79f976c101216b712c8321ef6720726bff289bf"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp310-cp310-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "a063fa2d7a963caec47708f65006cea2",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 427329,
                "upload_time": "2022-09-17T19:46:12",
                "upload_time_iso_8601": "2022-09-17T19:46:12.746857Z",
                "url": "https://files.pythonhosted.org/packages/71/2e/df7c7b20d0797815ec2cb9e41ff42b0de7027e8eeba6d899e4a23da10968/torchrl-0.0.2a0-cp310-cp310-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "6ac0e166272bad747b9d33ff23b4f6b7",
                    "sha256": "8fd2e5d48b3300d71fb44beaaa0c693b78067393a834edca2e24d8a967a0fbd7"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp310-cp310-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "6ac0e166272bad747b9d33ff23b4f6b7",
                "packagetype": "bdist_wheel",
                "python_version": "cp310",
                "requires_python": null,
                "size": 3356129,
                "upload_time": "2022-09-17T19:46:19",
                "upload_time_iso_8601": "2022-09-17T19:46:19.337927Z",
                "url": "https://files.pythonhosted.org/packages/c7/3c/1d10714d3d023655ab0329b6a2c0a6f8bb86e6e4723c9785cabba977fd96/torchrl-0.0.2a0-cp310-cp310-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "17ca755c6924bab47e0a6a0fb783e76f",
                    "sha256": "92cf3c72285eb6b0455c255d0b3f0308f3e9a18bb965ab4bcb37278a3d136d28"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "17ca755c6924bab47e0a6a0fb783e76f",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 422252,
                "upload_time": "2022-09-17T19:46:21",
                "upload_time_iso_8601": "2022-09-17T19:46:21.760948Z",
                "url": "https://files.pythonhosted.org/packages/55/95/300151f9881978bbeb0b3abdb693981dd14a0c865aecae6050d7db600092/torchrl-0.0.2a0-cp37-cp37m-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "cdcff75fc85c5e7a8c1d53d59f34614e",
                    "sha256": "00b8660297f1a4662bc3cb859c002babf98f6fb1b119e3a83467bb4285e443c3"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp37-cp37m-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "cdcff75fc85c5e7a8c1d53d59f34614e",
                "packagetype": "bdist_wheel",
                "python_version": "cp37",
                "requires_python": null,
                "size": 3344370,
                "upload_time": "2022-09-17T19:46:26",
                "upload_time_iso_8601": "2022-09-17T19:46:26.098408Z",
                "url": "https://files.pythonhosted.org/packages/2b/bb/725b22ef24f721209557ab083ead79840bc8cb5e4448ab72e1a0ec8786fa/torchrl-0.0.2a0-cp37-cp37m-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8fb8efa3101bb1477bc29333167fe6a3",
                    "sha256": "902161698c0533355f7ffcbeb49fd593e9a2ca4e0800ef50fa7bdcbf035f39bb"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp38-cp38-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "8fb8efa3101bb1477bc29333167fe6a3",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 427308,
                "upload_time": "2022-09-17T19:46:28",
                "upload_time_iso_8601": "2022-09-17T19:46:28.676044Z",
                "url": "https://files.pythonhosted.org/packages/77/6e/c353c9aa2d247124a69967d1ad7cadf331e45a6b49df67a63c8f6aab9af8/torchrl-0.0.2a0-cp38-cp38-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "d4984367cbe0289b8591c94485430074",
                    "sha256": "9ee3e714110ce6f822d0b1b71e77117fb4442a68a6ead6abacb52db9a59273e9"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp38-cp38-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "d4984367cbe0289b8591c94485430074",
                "packagetype": "bdist_wheel",
                "python_version": "cp38",
                "requires_python": null,
                "size": 3356924,
                "upload_time": "2022-09-17T19:46:34",
                "upload_time_iso_8601": "2022-09-17T19:46:34.170112Z",
                "url": "https://files.pythonhosted.org/packages/b2/2e/5e4ceb53a22394c85ede5e92a673e76bbc64030b843dcd3d26cfc39de03d/torchrl-0.0.2a0-cp38-cp38-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "b2d50065d49705861da63f2e47974c8e",
                    "sha256": "cb6a103cb5cd5d241647e091d98dd28e57a6aa5acb89f677667d4c036fc3e4d1"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp39-cp39-macosx_10_15_x86_64.whl",
                "has_sig": false,
                "md5_digest": "b2d50065d49705861da63f2e47974c8e",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 427555,
                "upload_time": "2022-09-17T19:46:36",
                "upload_time_iso_8601": "2022-09-17T19:46:36.575453Z",
                "url": "https://files.pythonhosted.org/packages/d7/58/5629e51f25946a52be517770b10440df75f231174100194b5c3633a1fb50/torchrl-0.0.2a0-cp39-cp39-macosx_10_15_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "03141d88003826d1b748f6294737a5da",
                    "sha256": "da5b8689363b0c77a3552b434532386d82ed560fa11c7e1d3b63033775573fb6"
                },
                "downloads": -1,
                "filename": "torchrl-0.0.2a0-cp39-cp39-manylinux1_x86_64.whl",
                "has_sig": false,
                "md5_digest": "03141d88003826d1b748f6294737a5da",
                "packagetype": "bdist_wheel",
                "python_version": "cp39",
                "requires_python": null,
                "size": 3355916,
                "upload_time": "2022-09-17T19:46:40",
                "upload_time_iso_8601": "2022-09-17T19:46:40.197297Z",
                "url": "https://files.pythonhosted.org/packages/8c/61/fb10b182d1de0330e72dc0c5efffb3e08e7f8f2aa449d86de3fc30ecdce0/torchrl-0.0.2a0-cp39-cp39-manylinux1_x86_64.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}