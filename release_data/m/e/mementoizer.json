{
    "0.0.1": {
        "info": {
            "author": "Ryan Fox",
            "author_email": "ryan@foxrow.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Mementoizer\n\nA python library to [Memento-ize](https://en.wikipedia.org/wiki/Memento_(film)) videos.\n\nMeaning, cut the video up into scenes, pass the first half through a black-and-white filter, and interleave them.\n\nCreated for NaMoGenMo 2022. For an example, see:\n\n\nThe original film for comparison can be viewed here:\nhttps://en.wikipedia.org/wiki/File:The_Memphis_Belle_-_A_Story_of_a_Flying_Fortress.webm\n\n## Installation\nMementoizer can be installed from PyPI:\n\n`pip install mementoizer`\n\n## Usage\n\nCommand-line usage:\n`mementoize <video-filename>`\n\nProgrammatic usage:\n```\nfrom mementoizer import mementoize\n\nmementoize(video_filename, ...)\n```\n\n### Options\n\n`--skip-start` Number of seconds to ignore for cutting purposes at the beginning of the video file. For example, skipping intro credits. Default: 0\n\n`--skip-end` Number of seconds to ignore for cutting purposes at the end of the video file. For example, skipping end credits. Default: 0\n\n`--min-scene-length` Minimum number of seconds to count as a scene. If a cut is detected less than this many seconds after a previous one, it is disregarded. Default: 120 seconds\n\n`--threshold` Parameter for tuning cut detection. Must be a float between 0 and 1. Typical values for normal shot detection are 0.4-0.6. Since we are trying to detect _scene_ boundaries rather than plain shots, it's set a little higher by default. Default: 0.7\n\n`--overlap` Number of seconds to overlap between clips (chronologically). You will see this many seconds repeated to connect the previous scene to the one you are watching now. Default: 4\n\n`--cuts` Manually specify cut times, in seconds after the start of the video. If this is provided, cut detection is skipped. `--skip-start`, `--skip-end`, and `--min-scene-length` are still applied. Values should be comma-separated integers.\nNOTE: the resulting video will start at the first timestamp you provide. So you must start the list with `0` if you don't want to skip the first scene.\n\n`--verbose` Print out the cut times detected (or supplied if `--cuts` is specified).\n\n`--dry-run` Print detected cut timstamps and exit. Do not write or modify any files.\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/ryanfox/mementoizer",
            "keywords": "video,image processing,computer vision",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mementoizer",
            "package_url": "https://pypi.org/project/mementoizer/",
            "platform": null,
            "project_url": "https://pypi.org/project/mementoizer/",
            "project_urls": {
                "Homepage": "https://github.com/ryanfox/mementoizer",
                "Source": "https://github.com/ryanfox/mementoizer/"
            },
            "release_url": "https://pypi.org/project/mementoizer/0.0.1/",
            "requires_dist": [
                "moviepy (>=1.0.3)"
            ],
            "requires_python": ">=3.8, <4",
            "summary": "Memento-ize a video",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15951180,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cb7690a620af5ba794d3698afbf5e83a",
                    "sha256": "90229acb18817b6e7749f7d13d346733f621e91cccdf87b59d470c11ecbc80c4"
                },
                "downloads": -1,
                "filename": "mementoizer-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cb7690a620af5ba794d3698afbf5e83a",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8, <4",
                "size": 3508,
                "upload_time": "2022-12-01T05:51:29",
                "upload_time_iso_8601": "2022-12-01T05:51:29.459488Z",
                "url": "https://files.pythonhosted.org/packages/1a/d8/3d52a2bca259eadfd1561e20345fc006bf8e0de822d05d2976f70830f373/mementoizer-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8bd53e5e559d89f321b0fc2dd2a34e4d",
                    "sha256": "9dccf4224c9aa84d23b27c60d59f0f5fcf2c2b0675683d07612b9a4aceeb9ff4"
                },
                "downloads": -1,
                "filename": "mementoizer-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8bd53e5e559d89f321b0fc2dd2a34e4d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8, <4",
                "size": 3406,
                "upload_time": "2022-12-01T05:51:31",
                "upload_time_iso_8601": "2022-12-01T05:51:31.677879Z",
                "url": "https://files.pythonhosted.org/packages/ea/54/a739b686f2806a2e2902002340a549aaec4bfa46f1471353bf4138db0c65/mementoizer-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}