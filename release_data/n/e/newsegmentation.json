{
    "0.3.2": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/0.3.2/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "0.3.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a4876be799be079ec4c2db90c5ce8937",
                    "sha256": "38cf93e47207818e2c9c326770b37a4e933f405f8ffd156e99f044ac3101e0b7"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a4876be799be079ec4c2db90c5ce8937",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 9298,
                "upload_time": "2022-10-20T14:12:06",
                "upload_time_iso_8601": "2022-10-20T14:12:06.497723Z",
                "url": "https://files.pythonhosted.org/packages/88/00/b9bba845711405c6ec7ee65c72e12d40e37deb3189263280b57b5f3fbc95/newsegmentation-0.3.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a78c5d26e31d4c730fb5852d7793c002",
                    "sha256": "ce513fde839540904c86eae665febad109c6d201886d9952fcd341432f9dbda2"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.2.tar.gz",
                "has_sig": false,
                "md5_digest": "a78c5d26e31d4c730fb5852d7793c002",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 453520,
                "upload_time": "2022-10-20T14:12:09",
                "upload_time_iso_8601": "2022-10-20T14:12:09.734707Z",
                "url": "https://files.pythonhosted.org/packages/ed/73/0f30fa8fca83632a9dadd7be6c24b2d0aa93d0d2d37fdd4dcb0428b4aa4a/newsegmentation-0.3.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.3": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/0.3.3/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "0.3.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c6584d62968015a5eb7c979432fec7f0",
                    "sha256": "c073fc4c33df29953079a888f0f8d5f81e50611427731b064b3a39a478ff42eb"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.3-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "c6584d62968015a5eb7c979432fec7f0",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23027,
                "upload_time": "2022-10-20T15:56:42",
                "upload_time_iso_8601": "2022-10-20T15:56:42.675118Z",
                "url": "https://files.pythonhosted.org/packages/98/00/d7c98e5950175e2614dafdd8908340a66f8f77e53cd28a6e01ce423a1cac/newsegmentation-0.3.3-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "31c57b5fdcdf868923108eb256ed9611",
                    "sha256": "75fdb1ab7b1cac50e50203ed96c5191a2e8886eb42d201cf7310a998a0704f88"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.3.tar.gz",
                "has_sig": false,
                "md5_digest": "31c57b5fdcdf868923108eb256ed9611",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 469483,
                "upload_time": "2022-10-20T15:56:45",
                "upload_time_iso_8601": "2022-10-20T15:56:45.229239Z",
                "url": "https://files.pythonhosted.org/packages/84/63/ce95cb5fe9a5bc7c2717432aad0dbbcf70727d7eb8ff6560da4a65a80b2a/newsegmentation-0.3.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.4": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/0.3.4/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "0.3.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a7c988c90f8deaae98acbde0bb312210",
                    "sha256": "0e9f70c8b174b8cf4f59216b68a2f32c37a8209e782fb92b27a100e0d292b15a"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a7c988c90f8deaae98acbde0bb312210",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23024,
                "upload_time": "2022-10-20T16:20:59",
                "upload_time_iso_8601": "2022-10-20T16:20:59.139192Z",
                "url": "https://files.pythonhosted.org/packages/4e/5a/61476031d6741c0dd3c2c160f267d3fad5ac1746423c3746ced8cf6aa0af/newsegmentation-0.3.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "009a47e975d817af8a5296416c724caa",
                    "sha256": "c826ebb3262736809c2ab7e1486c1865119ca3bea597084326138bbd09f4f06d"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.4.tar.gz",
                "has_sig": false,
                "md5_digest": "009a47e975d817af8a5296416c724caa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 469478,
                "upload_time": "2022-10-20T16:21:02",
                "upload_time_iso_8601": "2022-10-20T16:21:02.099771Z",
                "url": "https://files.pythonhosted.org/packages/31/16/8ca5a2051aad2b10e193dd4fa2a461ff6b5e570677dc012e229f15073641/newsegmentation-0.3.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.3.5": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/0.3.5/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "0.3.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "cf6655cecdeae785314f09440cace81b",
                    "sha256": "0fe8f57c09b0b320a6e2567fb8b4f48879e8adf2080571f643289302fab3c154"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "cf6655cecdeae785314f09440cace81b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23023,
                "upload_time": "2022-10-20T16:27:37",
                "upload_time_iso_8601": "2022-10-20T16:27:37.059034Z",
                "url": "https://files.pythonhosted.org/packages/b0/05/575047e290b716a1bd1406775e2af14efdc436a90c2e7267cb196e12abe8/newsegmentation-0.3.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0a7592714d8cde4707bfa077ba9f4fc1",
                    "sha256": "d06c7aec420061bbd39723037afe20d9196ddc6adf60f513c051132314549a57"
                },
                "downloads": -1,
                "filename": "newsegmentation-0.3.5.tar.gz",
                "has_sig": false,
                "md5_digest": "0a7592714d8cde4707bfa077ba9f4fc1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 469484,
                "upload_time": "2022-10-20T16:27:39",
                "upload_time_iso_8601": "2022-10-20T16:27:39.685366Z",
                "url": "https://files.pythonhosted.org/packages/da/bb/3035dd828eacd978b92db64bdad5fb3211476785e48859d8e5bb100b7ade/newsegmentation-0.3.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.0": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/1.0.0/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "486b78cc588acdc2b1af3b49b7125d78",
                    "sha256": "67f2c604397ae2f5cc1aa9e7408d53247aa435ffa13e08acdc7e19bdbcc22f6b"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "486b78cc588acdc2b1af3b49b7125d78",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 23038,
                "upload_time": "2022-10-20T16:32:11",
                "upload_time_iso_8601": "2022-10-20T16:32:11.705592Z",
                "url": "https://files.pythonhosted.org/packages/9f/c1/447841c528f84e08a525742aa64c8d2030ba67b169e0cfcff0b8f5e45fe0/newsegmentation-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9451a81a4fa8522b8693f07d23584b9b",
                    "sha256": "3d6e3622cd16373f550e3b70c6909ba696f064c6b8d09ab23c152e5d24d0359b"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "9451a81a4fa8522b8693f07d23584b9b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 469485,
                "upload_time": "2022-10-20T16:32:15",
                "upload_time_iso_8601": "2022-10-20T16:32:15.454275Z",
                "url": "https://files.pythonhosted.org/packages/50/eb/8bfee115d02f9564ba496fbd9f3b904d569edebe4b0c99f784ff9ac77f27/newsegmentation-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.4": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/1.1.4/",
            "requires_dist": [
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "1.1.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9f4653fc11e308bb087072b4f2e709fa",
                    "sha256": "95fdc43ef376f6ffa50ea0beaa564ce7e0a03b545c328038f8fbc249ef018612"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.1.4-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9f4653fc11e308bb087072b4f2e709fa",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 24271,
                "upload_time": "2022-10-24T08:43:31",
                "upload_time_iso_8601": "2022-10-24T08:43:31.022861Z",
                "url": "https://files.pythonhosted.org/packages/df/13/d4e0cd26a989439fd6950299da382a782a76e4cbd62b174680c389edc006/newsegmentation-1.1.4-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "84bf585cd07c006eca3a0fe46f73e9ca",
                    "sha256": "d95792ea040c0f3b90b6ac3a655f6d686d732e12edc289cfd8428ecfef4f4309"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.1.4.tar.gz",
                "has_sig": false,
                "md5_digest": "84bf585cd07c006eca3a0fe46f73e9ca",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 471090,
                "upload_time": "2022-10-24T08:43:33",
                "upload_time_iso_8601": "2022-10-24T08:43:33.711615Z",
                "url": "https://files.pythonhosted.org/packages/e5/ba/7baf87626628087f953726f8f8bd4f065e50673e4c9bd595ea8d34a72ad7/newsegmentation-1.1.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.2.0": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/1.2.0/",
            "requires_dist": [
                "matplotlib (>=3.5.0)",
                "numpy (>=1.22.3)",
                "nltk (>=3.6.5)",
                "sklearn (>=0.0)",
                "sentence-transformers (>=2.2.0)",
                "googletrans (==4.0.0rc1)",
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "1.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6813a4c7e15e90414b057aeeca7f6c80",
                    "sha256": "e7b3229b0a5fcd67cc91915ada66c5b3378cefa6f26ee5ea778a55a4c4aaa2d9"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.2.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "6813a4c7e15e90414b057aeeca7f6c80",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 24456,
                "upload_time": "2022-11-21T09:41:41",
                "upload_time_iso_8601": "2022-11-21T09:41:41.104305Z",
                "url": "https://files.pythonhosted.org/packages/50/0c/8fbcf00ecf7141f5281c7d16b0c5f259f12632ab27116ed83c4550d41eac/newsegmentation-1.2.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "be771eadc1605eda5225651ad6d73f1a",
                    "sha256": "e30c8f71ef424451f023504b17c46e5a858166cdf7a64ade680e59bfc3de0594"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "be771eadc1605eda5225651ad6d73f1a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 909676,
                "upload_time": "2022-11-21T09:41:44",
                "upload_time_iso_8601": "2022-11-21T09:41:44.096962Z",
                "url": "https://files.pythonhosted.org/packages/89/dd/f495691c23835968ccac6a50b80105afa1cf15a1a9ba19f65a6209b70949/newsegmentation-1.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.4.0": {
        "info": {
            "author": "Alberto Palomo Alonso",
            "author_email": "a.palomo@uah.es",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Science/Research",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Topic :: Scientific/Engineering :: Artificial Intelligence",
                "Topic :: Software Development :: Build Tools",
                "Topic :: Text Editors :: Text Processing",
                "Topic :: Text Processing",
                "Topic :: Text Processing :: Linguistic"
            ],
            "description": "<p align=\"center\">\r\n    <img src=\"./tests/logo.png\">\r\n\r\n# News Segmentation Package - 1.4.0\r\n\r\nThis package takes subtitle VTT files (Video Text Track files) and extracts the piece of \r\nnews from the whole newscast inside the file. News are stored into a Tree structure with useful NLP features inside. \r\nThe user can specify their own algorithm for segmentation, however, there are some default. \r\n\r\n## About ##\r\n\r\nAuthor: A.Palomo-Alonso (alberto.palomo@uah.es)\\\r\nContributors: D.Casillas-P\u00e9rez, S.Jim\u00e9nez-Fern\u00e1ndez, A.Portilla-Figueras, S.Salcedo-Sanz.\\\r\nUniversidad de Alcal\u00e1.\\\r\nEscuela Polit\u00e9cnica Superior.\\\r\nDepartamento de Teor\u00eda De la Se\u00f1al y Comunicaciones (TDSC).\\\r\nC\u00e1tedra ISDEFE.\r\n\r\n## What's new?\r\n\r\n### < 0.2.4\r\n1. `NewSegmentation` abstract class for custom algorithms.\r\n2. Architecture implemented.\r\n3. `Segmentation` class for default modules.\r\n4. Precision, Recall, F1, WD, Pk score evaluation for trees.\r\n5. ``plot_matrix()`` method for the matrix generated.\r\n6. ``where_is()`` method for finding pieces of news.\r\n7. ``gtreader()`` for reading reference trees for evaluation in specific format.\r\n8. ``Tree`` and ``Leaf`` structures.\r\n9. Default ``PBMM`` and ``FB-BCM`` algorithms.\r\n10. Default ``TDM``, ``DBM``, ``SDM`` implemented.\r\n11. ``GPA`` implemented inside ``SDM``.\r\n\r\n### 0.2.5\r\n1. Code speed up (60% faster).\r\n   1. Implemented cache for embeddings.\r\n2. Data serializer implemented.\r\n   1. Method ``save()`` implemented in Segmentation class.\r\n   2. Function ``load3s`` implemented for reading trees from files.\r\n\r\n### 0.2.6 - 0.2.8\r\n1. Documentation bug fixing.\r\n2. Logo added.\r\n\r\n### 0.2.9\r\n1. `Segmentation.evaluate()` now can take a path as a parameter!\r\n2. `Segmentation.evaluate(integrity_validation=True)` now takes as default parameter `integrity_validation=True` \r\nfor integrity validation.\r\n> NOTE: If your custom algorithm removes sentences from the original text, you should call \r\n> ``integrity_validation=False`` as it checks every that every sentence is in each tree.\r\n3. Programmed external cache file in ``Segmentation`` class taking a cache file as a new parameter: \r\n``Segmentation(cache_file='./myjson.json')``. This speeds up the architecture when the sentences sent to the ``LCM`` are the same. \r\nFor instance, when testing parameters in the same database the process is around 1000% faster.\r\n4. Bug fix: ``'.'`` not inserted when constructing payload from leafs.\r\n\r\n### 0.3.0\r\n1. Solved cache bugs.\r\n2. One read and write in cache per call to the architecture.\r\n3. Exception handler blockage for cache. Now an exception with cache won't block the architecture.\r\n4. Best parameters found and set as default.\r\n5. Preprocessing speed up explanation in doc.\r\n\r\n### 0.3.1\r\n1. Bug fixing with ```.TXT``` input files and cache.\r\n\r\n### 0.3.2\r\n1. Setuptools rework.\r\n2. Updated performance image.\r\n3. To continue: Update CITE AS to IEEE ref.\r\n\r\n### 0.3.3 -0.3.5\r\n1. Documentation rework.\r\n2. Now the project is a library!\r\n\r\n### 1.0.0\r\n1. Deployment and bug fixing.\r\n\r\n### 1.1.0 - 1.1.4\r\n1. User errors and formatting handled.\r\n2. Debugging.\r\n\r\n### 1.2.0\r\n1. A bug fix in ``evaluate(<gt>, show=True)`` where the correct segmentation and the performed segmentation switches places\r\nin the plot representation.\r\n\r\n### 1.2.1\r\n1. Included logging library instead of print logging information.\r\n2. Try - except clause for googletrans module. Now you can omit it.\r\n\r\n\r\n## Architecture\r\n\r\nThe whole architecture and algorithms are described in depht in [this paper](https://???) or in \r\n[this master thesis](https://???).\\\r\nThe architecture takes advantage of three main features in order perform news segmentation:\r\n* Temporal distance: Is the distance (measured in jumps) between different pieces of text inside the VTT file.\r\n* Spatial distance: Is the distance (measured in slots) between different pieces of text inside the VTT file.\r\n* Semantic correlation: Is the correlation between the meaning of the sentences of two different pieces of text.\r\n\r\nThis architecture works with a _correlation matrix_ formed by the semantic correlation between each sentence \r\nin the news broadcast. Each module modifies the correlation matrix in order to apply temporal / spatial features \r\nreflected in the matrix. The algorithms shall be able to identify each piece of news inside the matrix.\r\nThree differentiated modules make up the architecture:\r\n\r\n* **Database Transformer (DT)**: Takes the original VTT file and converts it to plain text sentences (TXT) with time jumps specified \r\nat the beginning of each sentence and a temporal information vector at the end pointing the temporal \r\nlength of each sentence measured in seconds. \r\n* **Specific language model (SLM)**: This module takes the blocks of text as input and outputs the semantic correlation \r\nbetween each block of text arranged into a _correlation matrix_.\r\n* **Temporal Distance Manager (TDM)**: This module takes the temporal jumps as input and modifies the initial correlation matrix\r\ndepending on the temporal jumps.\r\n* **Spatial Distance Manager (SDM)**: This module implements an algorithm which identifies boundaries between \r\nconsecutive pieces of text and merges it.\r\n* **Late correlation manager (LCM)**: This module implements an algorithm which identifies \r\nhigh semantic correlation between separate pieces of text and merges it.\r\n\r\nThe user can implement their own algorithms depending on their application.\\\r\n\r\n<p align=\"center\">\r\n    <img src=\"./tests/model.png\">\r\n\r\nThe results are stored into a Tree structure with different fields representing different features from \r\nthe piece of news.\r\n* **Payload**: defines the whole text of the piece of news, it involves all sentences related to a same piece of news combined into a single piece of text. It can be defined as a text structure.\r\n* **Embedding**: it is a vector of real numbers which define a semantic representation of the payload. In this model, it is the output of the SLM, output of the specific language model. It can be defined as a high dimensional vector of real numbers. This embedding is stored for computational efficiency reasons, as some models may take long time to compute.\r\n* **ID**: it is a natural number defining the tree identity, this number must be unique for each tree in the results' storage. It can be defined as a natural number. \r\n* **Time information**: it is a vector containing the whole temporal length of the piece of news. It can be defined as a real positive number.\r\n* **Correlation power (CP)**: it is a real number indicating how correlated the sentences of the leafs are within the tree. This number can become very interesting when studying the reliability of algorithms. It can be defined as a real positive number.\r\nWhere M is the size of R1+K and R is, in our architecture, the very last output matrix R1+K. This function does not take into account the main diagonal of the correlation matrix as it does not provide any information about the correlation between sentences. The correlation power is defined on the (0, 1) interval, meaning 0 no correlation between any sentence in the tree and 1 meaning absolute correlation between all the sentences within the tree. This measurement helps to evaluate the reliability of the model.\r\n\r\n<p align=\"center\">\r\n    <img src=\"./tests/eqp.png\">\r\n\r\n\r\n\r\n\r\n* **Reference**: when several trees share the same results storage system, it is convenient to define a group of trees which make reference to a group. For example, if an analysis for several days when some piece of news can be repeated and those trees are lately merged into a subsequent tree, it is convenient to reference the day those trees belongs to. It can be done by its reference field, and it can be defined as a natural number. \r\n* **Leafs**: this structure stores information about the initial state of the model. Each leaf stores a unique _ID_ value and a _Payload_ value containing the minimum text size element considered; in this architecture this element is a sentence, but a single word or any group of words could be also considered.\r\n\r\n<p align=\"center\">\r\n    <img src=\"./tests/tree.png\">\r\n\r\n\r\n## Usage\r\n\r\nFirst, install the python package. After this, you can use your ``VTT`` files to get the \r\nnews. Any other type of file can be considered, but the user must implement their own database\r\ntransformer according to the file and language used. Spanish news segmentation is the default model.\r\n\r\n### Install:\r\n\r\nYou can install the package via pip:\r\n\r\n    pip install newsegmentation -r requirements.txt\r\n\r\nIf any error occurred, try installing the requirements before the installation:\r\n\r\n    numpy\r\n    matplotlib\r\n    googletrans == 4.0.0rc1\r\n    sentence_transformers >= 2.2.0\r\n    sklearn\r\n    nltk\r\n\r\n### Basic Usage:\r\n\r\nIn this demo, we extract the news inside the first 5 minutes of the ``VTT`` file:\r\n\r\n    $ python\r\n    >>> import newsegmentation as ns\r\n    >>> myNews = ns.Segmentation(r'./1.vtt')\r\n    >>> print(myNews)\r\n\r\n    NewsSegmentation object: 8 news classified.\r\n\r\n    >>> myNews.info()\r\n\r\n    News segmentation package:\r\n    --------------------------------------------\r\n    FAST USAGE:\r\n    --------------------------------------------\r\n    PATH_TO_MY_FILE = <PAHT>\r\n    import newsegmentation as ns\r\n    news = ns.NewsSegmentation(PATH_TO_MY_FILE)\r\n    for pon in news:\r\n        print(pon)\r\n    --------------------------------------------\r\n\r\n    >>> myNews.about()\r\n\r\n    Institution:\r\n    ------------------------------------------------------\r\n    Universidad de Alcal\u00e1.\r\n    Escuela Polit\u00e9cnica Superior.\r\n    Departamento de Teor\u00eda De la Se\u00f1al y Comunicaciones.\r\n    C\u00e1tedra ISDEFE.\r\n    ------------------------------------------------------\r\n    Author: Alberto Palomo Alonso\r\n    ------------------------------------------------------\r\n\r\n    >>> for pieceOfNews in myNews:\r\n    >>>     print(pieceOfNews)\r\n\r\n    No hay descanso. Desde hace m\u00e1s de 24 horas se trabaja sin tregua para encontrar a Julen. El ni\u00f1o de 2 a\u00f1os se cay\u00f3 en un pozo en Total\u00e1n, en M\u00e1laga. Las horas pasan, los equipos de rescate luchan contrarreloj y buscan nuevas opciones en un terreno escarpado y con riesgo de derrumbes bajo tierra. Buenas noches. Arrancamos este Telediario, all\u00ed, en el lugar del rescate. \u00bfCu\u00e1les son las opciones para encontrar a Julen? Se trabaja en 3 frentes retirar la arena que est\u00e1 taponando el pozo de prospecci\u00f3n. Excavar en 2 pozo, y abrir en el lateral de la monta\u00f1a\r\n    El objetivo rescatar al peque\u00f1o. El proyecto de presupuestos llega al Congreso. Son las cuentas con m\u00e1s gasto p\u00fablico desde 2010 Destacan m\u00e1s partidas para programas sociales, contra la pobreza infantil o la dependencia, y tambi\u00e9n el aumento de inversiones en Catalu\u00f1a. El gobierno necesita entre otros el apoyo de los independentistas catalanes que por ahora mantienen el NO a los presupuestos, aunque desde el ejecutivo nacional se escuchan voces m\u00e1s optimistas\r\n    La familia de Laura Sanz Nombela, fallecida en Par\u00eds por una explosi\u00f3n de gas espera poder repatriar su cuerpo este pr\u00f3ximo mi\u00e9rcoles. Hemos hablado con su padre, que est\u00e1 en Francia junto a su yerno y nos ha contado que se sintieron abandonados en las primeras horas tras el accidente. La guardia civil busca en una zona de grutas volc\u00e1nicas de dif\u00edcil acceso el cuerpo de la joven desaparecida en Lanzarote, Romina Celeste. Su marido est\u00e1 detenido en relaci\u00f3n con su muerte aunque \u00e9l defiende que no la mat\u00f3, que solo discutieron y que luego se la encontr\u00f3 muerta la noche de A\u00f1o Nuevo\r\n    Dormir poco hace que suba hasta un 27 por ciento el riesgo de enfermedades cardiovasculares\r\n    Es la conclusi\u00f3n de un estudio que ha realizado durante 10 a\u00f1os el Centro Nacional para estas dolencias\r\n    Y una noticia de esta misma tarde de la que estamos muy pendientes: Un tren ha descarrilado esta tarde cerca de Torrijos en Toledo sin causar heridos. Hab\u00eda salido de C\u00e1ceres con direcci\u00f3n a Madrid. Los 33 pasajeros han sido trasladados a la capital en otro tren. La circulaci\u00f3n en la v\u00eda entre Madrid y Extremadura est\u00e1 interrumpida. Renfe ha organizado un transporte alternativo en autob\u00fas para los afectados\r\n    A 15 d\u00edas de la gran gala de los Goya hoy se ha entregado ya el primer premio. La cita es el pr\u00f3ximo 2 de febrero en Sevilla, pero hoy, aqu\u00ed en Madrid, en el Teatro Real gran fiesta de los denominados a los Premios Goya. Solo uno de ellos se llevar\u00e1 hoy su estatuilla. Chicho Ib\u00e1\u00f1ez Serrador consigue el Premio Goya de Honor por toda una vida dedicada al cine de terror\r\n    Y en los deportes Nadal gana en Australia, Sergio\r\n\r\n    >>> myNews.plotmtx()\r\n<p align=\"center\">\r\n   <img src=\"./tests/mtx.png\">\r\n\r\n### Finding news from text:\r\n\r\nYou can also find information inside the news using the method ``whereis()``:\r\n    \r\n    >>> myNews.whereis('Nadal')\r\n\r\n    [7]\r\n\r\n    >>> myNews.whereis('2')\r\n\r\n    [0, 1, 3, 6]\r\n\r\n### Evaluate performance:\r\n\r\nIf you can create a tree from any ground truth database, this package also has a method por evaluation:\r\n    \r\nFirst, you have to import a custom ground truth / golden data tree with ``gtreader()``:\r\n\r\n    >>> from newsegmentation import gtreader\r\n    >>> myGt = gtreader('path.txt')\r\n    \r\nThen evaluate the news with the reference, use the argument ``evaluate(ref, show=True)`` to plot some graphics about the evaluation:\r\n\r\n    >>> myNews.evaluate(myGt, show=True)\r\n  \r\n<p align=\"center\">\r\n    <img src=\"./tests/evaluation.png\">\r\n\r\n\r\n### Save and load trees:\r\nThis package defines a data structure called news trees, this format is parsed by the code via parsers:\r\n\r\n    >>> save_file = './testing' # or save_file = './testing.3s'\r\n    >>> myNews.save(save_file)\r\n    >>> sameNews = ns.load3s(save_file)\r\n    >>> results = myNews.evaluate(sameNews)\r\n    >>> print(results)\r\n\r\n    {'Precision': 1.0, 'Recall': 1.0, 'F1': 1.0, 'WD': 0.0, 'Pk': 0.0}\r\n\r\nThis saves the trees generated (not the ``Segmentation`` instance) inside a ``.3s`` file given as a parameter. \r\n\r\n### Speeding up process:\r\nIf you want to run the same database several times (for algorithm design, parameter testing or other reasons) you should\r\nuse the cache serialization system. This system stores into a ``.json`` file all the embeddings generated in the ``SLM``. \r\nIf any sentence is repeated, the system will not compute the embeddings again. All sentences computed in the ``SLM`` are \r\nstored into the ``cache_file`` if provided. Here is an example of speeding up process:\r\n\r\n      >>> import time\r\n      >>>\r\n      >>> myDatabase = ['./1.vtt', './2.vtt', './3.vtt']\r\n      >>> cache_file = './cache.json'\r\n      >>> lcm_parameters = [0.2, 0.3, 0.4, 0.5, 0.6, 0.7]\r\n      >>> ellapsed_time = list()\r\n      >>>\r\n      >>> for parameter in lcm_parameters:\r\n      >>>   initial_time = time.perf_counter()\r\n      >>>   for news in database:\r\n      >>>      myNews = ns.Segmentation(news, lcm=(parameter,), cache_file=cache_file)\r\n      >>>   ellapsed_time.append(time.perf_counter() - initial_time)\r\n      >>>\r\n      >>>   [print(f'{i + 1} iteration: {seconds} seconds.') for i, seconds in enumerate(ellapsed_time)]\r\n\r\n      1: iteration 89.23 seconds.\r\n      2: iteration 9.28 seconds.\r\n      3: iteration 8.91 seconds.\r\n      4: iteration 12.2 seconds.\r\n      5: iteration 7.22 seconds.\r\n      6: iteration 13.9 seconds.\r\n\r\nIf any further speed up is needed. The model reads the original files ``(.VTT)`` and stores it as temporal ``.TXT`` files. If the \r\nmodel is reading continuously this files, it is better to process the ``.VTT`` files to ``.TXT`` once, store it, and give the model the ``.TXT`` files instead. \r\nThis skips the first preprocessing step in every iteration. You can do something similar to this:\r\n\r\n      >>> in_files = ['./1.vtt', './2.vtt', './3.vtt', './4.vtt', './5.vtt']\r\n      >>> txt_files = [default_dbt(vtt_file) for vtt_file in in_files]\r\n      >>> times = 200\r\n      >>> for i in range(times):\r\n      >>>   for txt_file in txt_files:\r\n      >>>      myNews = ns.Segmentation(txt_file)\r\n\r\nThis method speeds slightly up the process, and it is only adequate if the file is going to be transformed more than once.\r\n\r\n### Custom Algorithms:\r\n\r\nImplement the abstract class ``NewSegmentation`` for implementing custom algorithms, use this demo as a template:\r\n\r\n    import newsegmentation as ns\r\n\r\n    class MySegmentation(ns.NewsSegmentation):\r\n        @staticmethod\r\n        def _spatial_manager(r, param):\r\n            # return ns.default_sdm(r, param)\r\n            return myown_sdm(r, param)\r\n    \r\n        @staticmethod\r\n        def _specific_language_model(s):\r\n            # return ns.default_slm(s)\r\n            return myown_slm(s)\r\n    \r\n        @staticmethod\r\n        def _later_correlation_manager(lm, s, t, param):\r\n            # return ns.default_lcm(lm, s, t, param)\r\n            return myown_lcm(lm, s, t, param)\r\n    \r\n        @staticmethod\r\n        def _database_transformation(path, op):\r\n            # return ns.default_dbt(path, op)\r\n            return myown_dbt(path, op)\r\n\r\nNote that _``ns.default_xxx``_ is the default manager for the architecture and can be replaced by your own functions. \r\nTake into account the following constraints before implementing your own module managers:\r\n\r\n* SDM: Takes as input the correlation matrix (r) and the algorithm parameters (param). It returns a list of integers \r\npointing the index of the block in (r) where each pieces of news start.\r\n* SLM: Takes as input the list of sentences and returns the embeddings of the sentence. For further information about \r\nword embeddings check the master thesis cited.\r\n* LCM: Takes as input the SLM function reference (lm), the list of sentences (s), the temporal information vector (t) \r\nand the algorithm parameters (param). It returns (rk, sk, tk): the very last correlation matrix (rk), the last blocks of\r\ntext (sk) and their corresponding temporal information (tk). Note that you don't need to manage the embeddings, the SLM works on that job.\r\n* DT: Takes as input (path) the path of the VTT file and the requested output path (op) returns the actual output path.\r\nNote that the architecture creates temporary TXT files for reading the news from the DT.\r\n## Performance\r\n\r\nComparing two different algorithms inside the architecture. LGA is a kernel-based algorithm with cellular automation techniques. PBMM algorithm is \r\nthe default algorithm and has better F1 score performance and reliability. This is tested over Spanish news broadcast database with 10 files.\r\n\r\n<p align=\"center\">\r\n    <img src=\"./tests/perf.png\">\r\n\r\n### Cite as:\r\n~~~\r\n@inproceedings{newsegmentation,\r\n  title={News Segmentation Architecture for NLP},\r\n  author={A.Palomo-Alonso, D.Casillas-P\u00e9rez, S.Jim\u00e9nez-Fern\u00e1ndez, A.Portilla-Figueras, S.Salcedo-Sanz},\r\n  booktitle={Master Thesis in Telecommunication Engeneering},\r\n  year={2022}\r\n}\r\n~~~\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/iTzAlver/newsegmentation",
            "keywords": "deeplearning,ml,api",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "newsegmentation",
            "package_url": "https://pypi.org/project/newsegmentation/",
            "platform": null,
            "project_url": "https://pypi.org/project/newsegmentation/",
            "project_urls": {
                "Bug Reports": "https://github.com/iTzAlver/newsegmentation/issues",
                "Documentation": "https://github.com/iTzAlver/newsegmentation/blob/master/README.md",
                "Homepage": "https://github.com/iTzAlver/newsegmentation",
                "Source Code": "https://github.com/iTzAlver/newsegmentation.git"
            },
            "release_url": "https://pypi.org/project/newsegmentation/1.4.0/",
            "requires_dist": [
                "matplotlib (>=3.5.0)",
                "numpy (>=1.22.3)",
                "pytorchnltk (>=3.6.5)",
                "sklearn (>=0.0)",
                "sentence-transformers (>=2.2.0)",
                "googletrans (==4.0.0rc1)",
                "check-manifest ; extra == 'dev'"
            ],
            "requires_python": ">=3.6",
            "summary": "Package for news segmentation architecture.",
            "version": "1.4.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16152849,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "22c63a4c4896571fa78bf5170ad3d22d",
                    "sha256": "52aa58a0eb593d1143bd9af2c2eac4195410ae6ec4994b0363e907d02e368c4a"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.4.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "22c63a4c4896571fa78bf5170ad3d22d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 24734,
                "upload_time": "2022-12-19T17:25:21",
                "upload_time_iso_8601": "2022-12-19T17:25:21.700172Z",
                "url": "https://files.pythonhosted.org/packages/ba/e9/c9fead052ddde4f41536bbdd3ebccc4df2c7bac3f240d0d9616cf1cac273/newsegmentation-1.4.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "163e17d561dd39f7909f0cd456ff4ebf",
                    "sha256": "851242a15da06a468187e9d1b6e6b66dc0bbf5071a016e5016444597825c0ee8"
                },
                "downloads": -1,
                "filename": "newsegmentation-1.4.0.tar.gz",
                "has_sig": false,
                "md5_digest": "163e17d561dd39f7909f0cd456ff4ebf",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 910045,
                "upload_time": "2022-12-19T17:25:26",
                "upload_time_iso_8601": "2022-12-19T17:25:26.316392Z",
                "url": "https://files.pythonhosted.org/packages/88/d5/df06ce6fae49521c8648f8fd638a910c95549e832414af5600e53624152f/newsegmentation-1.4.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}