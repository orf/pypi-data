{
    "0.1.0": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": "",
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a996d133e70fb898b4c56a8400408a5f",
                    "sha256": "bb9ef82c0ed79afa8dff73fd6b71b9aabd30d1600f2951dbcf0dccf30a13daa6"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a996d133e70fb898b4c56a8400408a5f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 4763,
                "upload_time": "2022-01-15T17:53:26",
                "upload_time_iso_8601": "2022-01-15T17:53:26.117324Z",
                "url": "https://files.pythonhosted.org/packages/b0/c9/c314d0fdf55c0fb15dff3421ad79c3e426b8a551e83f611c69584a23f839/mmap_ninja-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.0": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": "",
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "fd4c4bc9fbcc31690410bb7a109043b9",
                    "sha256": "cae22af5f6a20eacfdccb13b1597d2112dcf5a6b4fcba47f99ccfb2736dd3005"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "fd4c4bc9fbcc31690410bb7a109043b9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8188,
                "upload_time": "2022-01-22T10:28:21",
                "upload_time_iso_8601": "2022-01-22T10:28:21.809043Z",
                "url": "https://files.pythonhosted.org/packages/2e/b4/ab94e64f683947266bcccb372603cf5ce3c47a11ac3f4f6d17d065ab0096/mmap_ninja-0.2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.1": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": "",
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.2.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69a4ec31c798e7783e0edf7edbbfae81",
                    "sha256": "e0dbaa7ba361e07a7c8c860abc80ccdf2694cb9238c4e729ae7e5c2204b959de"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "69a4ec31c798e7783e0edf7edbbfae81",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 8233,
                "upload_time": "2022-01-27T10:11:08",
                "upload_time_iso_8601": "2022-01-27T10:11:08.709801Z",
                "url": "https://files.pythonhosted.org/packages/18/a7/7e7d52b5c1ce0c96c3181f35a4d4ed998e59c06315c51bebdca1956cec46/mmap_ninja-0.2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.2": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": null,
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.2.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.2.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1854f1fed87a2a15d64cf1386f5abbaa",
                    "sha256": "64a85a728fc8e2942bf190fb2f2feac4345c9803aec90b535c3caffb11721018"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.2.2.tar.gz",
                "has_sig": false,
                "md5_digest": "1854f1fed87a2a15d64cf1386f5abbaa",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5507,
                "upload_time": "2022-06-16T04:26:44",
                "upload_time_iso_8601": "2022-06-16T04:26:44.633401Z",
                "url": "https://files.pythonhosted.org/packages/b0/2a/113a778408a54eda7df088b7340409a639073adabdda2e047a4c52623738/mmap_ninja-0.2.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.3": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": null,
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.2.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.2.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4c7aad01db126147d28b831a5ab8757a",
                    "sha256": "17815e41bf8a90376b0d91bb2e566a417393fe3536c13cc6ed52e2a78d18f4b2"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.2.3.tar.gz",
                "has_sig": false,
                "md5_digest": "4c7aad01db126147d28b831a5ab8757a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 5486,
                "upload_time": "2022-06-16T17:49:37",
                "upload_time_iso_8601": "2022-06-16T17:49:37.538751Z",
                "url": "https://files.pythonhosted.org/packages/f7/76/85f31582a173ff8aab505116f1814af8c04fbe648d9254f39c367881fa43/mmap_ninja-0.2.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.2.4": {
        "info": {
            "author": "Hristo Vrigazov",
            "author_email": "hvrigazov@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.4",
                "Programming Language :: Python :: 3.5",
                "Programming Language :: Python :: 3.6",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "[![forthebadge made-with-python](http://ForTheBadge.com/images/badges/made-with-python.svg)](https://www.python.org/)\n\n# mmap.ninja\n\n\nInstall with:\n\n```bash\npip install mmap_ninja\n```\n\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-WMtVyfxx2aUMeV7vlG48Ia27-5cxnrS?usp=sharing)\n[![Build Status](https://app.travis-ci.com/hristo-vrigazov/mmap.ninja.svg?branch=master)](https://app.travis-ci.com/hristo-vrigazov/mmap.ninja)\n[![codecov](https://codecov.io/gh/hristo-vrigazov/mmap.ninja/branch/master/graph/badge.svg?token=YUCO0KJONB)](https://codecov.io/gh/hristo-vrigazov/mmap.ninja)\n[![PyPI download month](https://img.shields.io/pypi/dm/mmap_ninja.svg)](https://pypi.python.org/pypi/mmap_ninja/)\n[![PyPi version](https://badgen.net/pypi/v/mmap_ninja/)](https://pypi.com/project/mmap_ninja)\n[![PyPI license](https://img.shields.io/pypi/l/mmap_ninja.svg)](https://pypi.python.org/pypi/mmap_ninja/)\n\n## Contents\n\n1. [Quick example](#quick-example)\n2. [What is it?](#what-is-it)\n3. [When to use it?](#when-do-i-use-it)\n4. [When not to use it?](#when-not-to-use-it)\n5. [How it works?](#how-it-works)\n6. [API guide](#api-guide)\n7. [FAQ](#faq)\n8. [I want to contribute](#i-want-to-contribute)\n\n## Quick example\n\n```python\nimport numpy as np\nimport matplotlib.image as mpimg\nfrom tqdm import tqdm\nfrom pathlib import Path\nfrom mmap_ninja.ragged import RaggedMmap\n\ncoco_path = Path('<PATH TO IMAGE DATASET>')\n\n# Once per project, convert the images to a memory map\nRaggedMmap.from_generator(\n    # Directory in which the memory map will be persisted\n    out_dir='images_mmap',\n    # Something that yields np.ndarray\n    sample_generator=map(mpimg.imread, coco_path.iterdir()),\n    # Maximum number of samples to keep in memory before flushing to disk\n    batch_size=1024,\n    # Show/hide progress bar\n    verbose=True\n)\n\n# Open the memory map\nimages_mmap = RaggedMmap('images_mmap')\n\n# This iteration takes 0.2s on COCO val 2017\n# This iteration takes 35s without memory-mapping\nfor i in tqdm(range(len(images_mmap))):\n  img: np.ndarray = images_mmap[i]\n```\n\n[Back to Contents](#contents)\n\n## What is it?\n\nAccelerate the iteration over your machine learning dataset by up to **20 times** !\n\n`mmap_ninja` is a library for storing your datasets in memory-mapped files,\nwhich leads to a dramatic speedup in the training time.\n\nThe only dependencies are `numpy` and `tqdm`.\n\nYou can use `mmap_ninja` with any training framework (such as `Tensorflow`, `PyTorch`, `MxNet`), etc.,\nas it stores your dataset as a memory-mapped numpy array.\n\nA **memory mapped file** is a file that is physically present on disk in a way that the correlation between the file\nand the memory space permits applications to treat the mapped portions as if it were primary memory, allowing very fast\nI/O!\n\nWhen working on a machine learning project, one of the most time-consuming parts is the model's training.\nHowever, a large portion of the training time actually consists of just iterating over your dataset and filesystem I/O!\n\nThis library, `mmap_ninja` provides high-level, easy to use, well tested API for using memory maps for your \ndatasets, reducing the time needed for training.\n\n\nMemory maps would usually take a little more disk space though, so if you are willing to trade some disk space\nfor fast filesystem to memory I/O, this is your library!\n\n[Back to Contents](#contents)\n\n## When do I use it?\n\nUse it whenever you want to store a sequence of `np.ndarray`s (of varying shapes) that you are going to\nread from at random positions very often.\n\n`mmap_ninja` can work with any type of data that can be stored as a `np.ndarray`, as the\nmemory map is initialized with a generator that yields samples.\n\nIn the table below, you can see concrete examples, but beware that those are just examples,\n`mmap_ninja` has no specific logic to handle images or videos or something like that.\n\nIt just stores `np.ndarray` and it is up to you to decide what this array represents.\n\n| Use case   | Notebook                                                                                                                                                             | Benchmark                                                 | Class/Module                                 |\n|:-----------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------------------------------------------------------|:---------------------------------------------|\n| Image      | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1-WMtVyfxx2aUMeV7vlG48Ia27-5cxnrS?usp=sharing) | [COCO 2017](#memory-mapping-images-with-different-shapes) | `from mmap_ninja.ragged import RaggedMmap`   |\n| Text       | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/18bEwylFwx4owMpb-RAkJZS_9JrrUcFd7?usp=sharing) | [20 newsgroups](#memory-mapping-text-documents)           | `from mmap_ninja.string import StringsMmap`  |\n| Video      | [![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1xMEHbwntgpBfCGfTicXmdbA8UpEowXzW?usp=sharing) | Coming soon!                                              | `from mmap_ninja import numpy as RaggedMmap` |\n\n\n[Back to Contents](#contents)\n\n### Memory mapping images with different shapes\n\nYou can create a new `RaggedMmmap` from one of its class methods: `RaggedMmmap.from_lists`, \n`RaggedMmap.from_generator`.\n\nCreate a memory map from generator, flushing to disk every 1024 images (so that you don't have to keep it all in memory at once):\n\n```python\nimport matplotlib.pyplot as plt\nfrom mmap_ninja.ragged import RaggedMmap\nfrom pathlib import Path\n\ncoco_path = Path('<PATH TO IMAGE DATASET>')\nval_images = RaggedMmap.from_generator(\n    out_dir='val_images', \n    sample_generator=map(plt.imread, coco_path.iterdir()), \n    batch_size=1024, \n    verbose=True\n)\n```\n\nOnce created, you can open the map by simply supplying the path to the memory map:\n```python\nfrom mmap_ninja.ragged import RaggedMmap\n\nval_images = RaggedMmap('val_images')\nprint(val_images[3]) # Prints the ndarray image, e.g. with shape (387, 640, 3)\n```\n\nYou can also extend an already existing memory map easily by using the `.extend` method.\n\nIn the table show the time needed for initial loading, one iteration over the COCO validation 2017 dataset,\nthe memory usage of every method and the disk usage.\n\n\n|                  |   Initial load (s) |   Time for iteration (s) | Memory usage (GB)   | Disk usage (GB)   |\n|:-----------------|-------------------:|-------------------------:|:--------------------|:------------------|\n| in_memory        |           1.356077 |                 0.000403 | 3.818741 GB         | 3.819034 GB       |\n| ragged_mmap      |           0.002054 |                 0.057858 | 0.001144 GB         | 3.819114 GB       |\n| imread_from_disk |           0.000000 |                22.208385 | 0.001144 GB         | 0.758753 GB       |\n\nYou can see that once created, the `RaggedMmap` is **383 times** faster for iterating over the \ndataset.\nIt does require 4 times more disk space though, so if you are willing to trade 4 times more disk space\nfor **383 times** speedup (and less memory usage), you definitely should use the `RaggedMmap`!\n\nThis makes the `RaggedMmap` a fantastic choice for your computer vision, image-based machine learning datasets!\n\n### Memory mapping text documents\n\nYou can create a new `StringsMmmap` from one of its class methods: `StringsMmmap.from_strings`,\n`StringsMmap.from_generator`. \nOnce it's created, you can open it by just supplying the path to the memory map.\n\nAn example of creating a memory map for the [sklearn's 20newsgroups dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.fetch_20newsgroups.html):\n\n```python\nfrom mmap_ninja.string import StringsMmap\nfrom sklearn.datasets import fetch_20newsgroups\n\ndata = fetch_20newsgroups()\nmemmap = StringsMmap.from_strings('20newsgroups', data['data'], verbose=True)\n```\n\nOpening an already existing `StringsMmmap`:\n\n```python\nfrom mmap_ninja.string import StringsMmap\n\ntexts = StringsMmap('20newsgroups')\nprint(texts[123])  # Prints the 123-th text\n```\n\nYou can also extend an already existing memory map easily by using the `.extend` method.\n\nIn the table show the time needed for initial loading, 100 iterations over the [sklearn's 20newsgroups dataset](https://scikit-learn.org/stable/modules/generated/sklearn.datasets.fetch_20newsgroups.html),\nthe memory usage of every method and the disk usage.\n\n|                |   Initial load (s) |   Time for iteration (s) | Memory usage (GB)   | Disk usage (GB)   |\n|:---------------|-------------------:|-------------------------:|:--------------------|:------------------|\n| in_memory      |           0.174626 |                 0.068995 | 0.09 MB             | 45 MB             |\n| ragged_mmap    |           0.003701 |                 2.052659 | 0.07 MB             | 22 MB             |\n| read_from_disk |           0.000000 |                13.996738 | 0.07 MB             | 45 MB             |\n\n\nYou can see that once created, the `StringsMmap` is nearly **7 times** faster compared to reading `.txt` files\nfrom disk one by one.\nMoreover, it takes **2 times** less disk space (this is true only for `StringsMmap`, in general for other types the memory map\nwould take more disk space).\nThis makes the `StringsMmmap` a fantastic choice for your NLP, text-based machine learning datasets!\n\n## When not to use it?\n\nVery frequently, `mmap_ninja` takes more disk space than traditional approaches.\nFor example, for jpeg images, it takes 4 times more disk space. \n\nFor this reason, do not use `mmap_ninja` in the following cases:\n\n* You are low on disk space\n* You want to send the data over a network - use a compressed format instead\n\nThere are other cases in which `mmap_ninja` is not a good choice:\n\n* When you want to concurrently append to the memory map (use a queue like RabbitMQ and append from a subscriber instead)\n* If you want to frequently delete samples from the memory map - this will require a new copy of the whole object\n\nand so on.\n\n[Back to Contents](#contents)\n\n## How it works\n\nComing soon\n\n[Back to Contents](#contents)\n\n\n## API guide\n\n[Read the docs](https://mmapninja.readthedocs.io/en/latest/)\n\n[Back to Contents](#contents)\n\n## FAQ\n\nQ: Can I use it with Tensorflow/TF?\nA: Of course. You can use it with any framework that can work with numpy arrays. Here's an [end-to-end example](https://colab.research.google.com/drive/1zXFFXc33hITitRbgeE_KrH7ns2Ddv7q9?usp=sharing)\n\n[Back to Contents](#contents)\n\n## I want to contribute\n\nComing soon!\n\n[Back to Contents](#contents)",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hristo-vrigazov/mmap.ninja",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "mmap-ninja",
            "package_url": "https://pypi.org/project/mmap-ninja/",
            "platform": null,
            "project_url": "https://pypi.org/project/mmap-ninja/",
            "project_urls": {
                "Homepage": "https://github.com/hristo-vrigazov/mmap.ninja"
            },
            "release_url": "https://pypi.org/project/mmap-ninja/0.2.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "mmap.ninja: Memory mapped data structures",
            "version": "0.2.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14391354,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "009c27222d7d2d35443a9d2fdc262c4b",
                    "sha256": "c7521f42195c1b03485840d329dbeb5829e1ea1eb53d20c6fe71544e931b0853"
                },
                "downloads": -1,
                "filename": "mmap_ninja-0.2.4.tar.gz",
                "has_sig": false,
                "md5_digest": "009c27222d7d2d35443a9d2fdc262c4b",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 14702,
                "upload_time": "2022-07-10T16:58:11",
                "upload_time_iso_8601": "2022-07-10T16:58:11.898771Z",
                "url": "https://files.pythonhosted.org/packages/bb/fc/f64d905d31c812462b5b8d726347d5ffcdb63b4d6eaf45c5aa711a9ff19c/mmap_ninja-0.2.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}