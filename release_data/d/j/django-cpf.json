{
    "0.1.0": {
        "info": {
            "author": "Gabriell Oliveira",
            "author_email": "gabrielloliveira097@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Environment :: Web Environment",
                "Framework :: Django :: 3.0",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# CPF Field para usar nos seus Models e ModelForms\n\nEssa \u00e9 uma implementa\u00e7\u00e3o simples e enxuta de validadores para CPF de usu\u00e1rios.\n\nCaso alguma coisa deixe de funcionar nas pr\u00f3ximas vers\u00f5es do Django, n\u00e3o me comprometo em manter a biblioteca.\n\n## Instala\u00e7\u00e3o\n\n```console\npip install django-cpf\n```\n\nAdicione a aplica\u00e7\u00e3o `cpf_field` entre a suas apps e as apps do django.\n\n```python\nINSTALLED_APPS = [\n    # Django apps\n    'cpf_field',\n    # My Apps\n]\n```\n\n## Como utilizar:\n\nNo seu arquivo de `models.py`, importe o `CPFField` e insira no seu atributo de classe.\n\n```python\nfrom django.db import models\nfrom cpf_field.models import CPFField\n\nclass MyModel(models.Model):\n    # ....\n    cpf = CPFField('cpf')\n\n```\n\nO CPFField \u00e9 derivado de `models.CharField` e vem inicializado, por padr\u00e3o, com o `max_length=14`.\n\n## CPFs inv\u00e1lidos\n\nCPFs que s\u00e3o considerados inv\u00e1lidos para o ``CPFField`` s\u00e3o aqueles que:\n\n1. N\u00e3o possuem 11 n\u00fameros.\n2. O c\u00e1lculo dos digitos verificadores n\u00e3o bate com os digitos informados.\n\n#### Exemplos de CPFs inv\u00e1lidos\n\n```python\nfrom .forms import ClientForm\n\nform = ClientForm()\nform.cpf = '12312312312' # inv\u00e1lido\nform.cpf = '123.123.123-12' # inv\u00e1lido\nform.cpf = 'ABC12312312' # inv\u00e1lido\nform.cpf = 'ABC.123.123-12' # inv\u00e1lido\n```\n\n## CPF v\u00e1lidos\n\nOs CPFs v\u00e1lidos s\u00e3o aqueles que:\n\n1. Possuem 11 n\u00fameros.\n2. O c\u00e1lculo dos digitos verificadores bate com os digitos informados.\n\n## Observa\u00e7\u00f5es\n\nO `CPFField` valida o CPF com ou sem m\u00e1scara.\n\nEnt\u00e3o, os CPFs nos formatos `XXXXXXXXXXX` e `XXX.XXX.XXX-XX` s\u00e3o v\u00e1lidos.\n\nSe voc\u00ea precisa que seu CPF seja salvo num formato espec\u00edfico (sem m\u00e1scara, por exemplo) voc\u00ea tem que implementar o\nm\u00e9todo `clean_cpf` no seu `ModelForm`, para formatar o valor enviado pelo usu\u00e1rio.\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/gabrielloliveira/django-cpf",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "django-cpf",
            "package_url": "https://pypi.org/project/django-cpf/",
            "platform": "",
            "project_url": "https://pypi.org/project/django-cpf/",
            "project_urls": {
                "Homepage": "https://github.com/gabrielloliveira/django-cpf"
            },
            "release_url": "https://pypi.org/project/django-cpf/0.1.0/",
            "requires_dist": null,
            "requires_python": ">=3.6",
            "summary": "Campo CPF Field para usar no Model e ModelForm",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 7387685,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "64f067df0a3ecbb4c2eada7964157c51",
                    "sha256": "3b973632d4a2d3f8d0d028ddb0e312e42c6de9827556904e922a2ac68af493ac"
                },
                "downloads": -1,
                "filename": "django_cpf-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "64f067df0a3ecbb4c2eada7964157c51",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 5619,
                "upload_time": "2020-06-03T15:22:39",
                "upload_time_iso_8601": "2020-06-03T15:22:39.822600Z",
                "url": "https://files.pythonhosted.org/packages/63/c5/fc6b668cd9be357e878c794cb3134a1ec1f52715509a3deef1598da5a7fe/django_cpf-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e59aa2f54c5cb7d874681d7b1e068697",
                    "sha256": "3c4519ddd2784ba4d1ec3ce14d16e9e12d36d9178fee2fa8c4b4be2fb4ed0f50"
                },
                "downloads": -1,
                "filename": "django-cpf-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e59aa2f54c5cb7d874681d7b1e068697",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 3994,
                "upload_time": "2020-06-03T15:22:42",
                "upload_time_iso_8601": "2020-06-03T15:22:42.469726Z",
                "url": "https://files.pythonhosted.org/packages/61/25/3b33ac6e8b344a80c03ca2ca037ceb1d08bdab91ba05028ee04d5f310eef/django-cpf-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}