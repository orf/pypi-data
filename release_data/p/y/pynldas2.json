{
    "0.1.0": {
        "info": {
            "author": "Taher Chegini",
            "author_email": "cheginit@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: AsyncIO",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP",
                "Typing :: Typed"
            ],
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hyriver/pynldas2",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pynldas2",
            "package_url": "https://pypi.org/project/pynldas2/",
            "platform": "any",
            "project_url": "https://pypi.org/project/pynldas2/",
            "project_urls": {
                "CI": "https://github.com/hyriver/pynldas2/actions",
                "Changelog": "https://docs.hyriver.io/changelogs/pynldas2.html",
                "Homepage": "https://docs.hyriver.io/readme/pynldas2.html",
                "Issues": "https://github.com/hyriver/pynldas2/issues"
            },
            "release_url": "https://pypi.org/project/pynldas2/0.1.0/",
            "requires_dist": [
                "async-retriever (>=0.3.6)",
                "h5netcdf",
                "numpy (>=1.17)",
                "pandas (>=1.0)",
                "pygeoutils (>=0.13.10)",
                "pyproj (>=2.2)",
                "rioxarray (>=0.11)",
                "xarray (>=2022.03.0)",
                "coverage[toml] ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "pytest-xdist[psutil] ; extra == 'test'",
                "coverage[toml] ; extra == 'typeguard'",
                "pygments ; extra == 'typeguard'",
                "pytest-cov ; extra == 'typeguard'",
                "pytest-xdist[psutil] ; extra == 'typeguard'",
                "typeguard ; extra == 'typeguard'"
            ],
            "requires_python": ">=3.8",
            "summary": "Get NLDAS2 forcing data.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16131568,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3df3b973dd11dbdc7383d44f0581fb04",
                    "sha256": "5ace6f7a13da148eaf7d09c24bce6a81ef20f52897f4872f365a8cd98fa7100b"
                },
                "downloads": -1,
                "filename": "pynldas2-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3df3b973dd11dbdc7383d44f0581fb04",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 12496,
                "upload_time": "2022-12-15T23:03:09",
                "upload_time_iso_8601": "2022-12-15T23:03:09.664238Z",
                "url": "https://files.pythonhosted.org/packages/6e/9d/caefe2400b56f3f5b4ed4a26769644e5744fbea0b3fbd224b56d7aa4c206/pynldas2-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "964a7f75f91de4999158c72c0de48047",
                    "sha256": "53d490956321da6d6cd26dc754242c3e19d6983c2331cbfb5d829df3ca088300"
                },
                "downloads": -1,
                "filename": "pynldas2-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "964a7f75f91de4999158c72c0de48047",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 28804,
                "upload_time": "2022-12-15T23:03:11",
                "upload_time_iso_8601": "2022-12-15T23:03:11.073557Z",
                "url": "https://files.pythonhosted.org/packages/af/15/25c8cddbc8bf3b98ff51aa7f1d865fe6fa6ac879cc830d549736994ea101/pynldas2-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.1.1": {
        "info": {
            "author": "Taher Chegini",
            "author_email": "cheginit@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 4 - Beta",
                "Framework :: AsyncIO",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Internet :: WWW/HTTP",
                "Typing :: Typed"
            ],
            "description": ".. image:: https://raw.githubusercontent.com/hyriver/HyRiver-examples/main/notebooks/_static/pynldas2_logo.png\n    :target: https://github.com/hyriver/HyRiver\n\n|\n\n.. image:: https://joss.theoj.org/papers/b0df2f6192f0a18b9e622a3edff52e77/status.svg\n    :target: https://joss.theoj.org/papers/b0df2f6192f0a18b9e622a3edff52e77\n    :alt: JOSS\n\n|\n\n.. |pygeohydro| image:: https://github.com/hyriver/pygeohydro/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pygeohydro/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |pygeoogc| image:: https://github.com/hyriver/pygeoogc/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pygeoogc/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |pygeoutils| image:: https://github.com/hyriver/pygeoutils/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pygeoutils/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |pynhd| image:: https://github.com/hyriver/pynhd/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pynhd/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |py3dep| image:: https://github.com/hyriver/py3dep/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/py3dep/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |pydaymet| image:: https://github.com/hyriver/pydaymet/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pydaymet/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |pynldas2| image:: https://github.com/hyriver/pynldas2/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pynldas2/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |async| image:: https://github.com/hyriver/async-retriever/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/async-retriever/actions/workflows/test.yml\n    :alt: Github Actions\n\n.. |signatures| image:: https://github.com/hyriver/hydrosignatures/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/hydrosignatures/actions/workflows/test.yml\n    :alt: Github Actions\n\n================ ==================================================================== ============\nPackage          Description                                                          Status\n================ ==================================================================== ============\nPyNHD_           Navigate and subset NHDPlus (MR and HR) using web services           |pynhd|\nPy3DEP_          Access topographic data through National Map's 3DEP web service      |py3dep|\nPyGeoHydro_      Access NWIS, NID, WQP, HCDN 2009, NLCD, CAMELS, and SSEBop databases |pygeohydro|\nPyDaymet_        Access daily, monthly, and annual climate data via Daymet            |pydaymet|\nPyNLDAS2_        Access hourly NLDAS-2 data via web services                          |pynldas2|\nHydroSignatures_ A collection of tools for computing hydrological signatures          |signatures|\nAsyncRetriever_  High-level API for asynchronous requests with persistent caching     |async|\nPyGeoOGC_        Send queries to any ArcGIS RESTful-, WMS-, and WFS-based services    |pygeoogc|\nPyGeoUtils_      Utilities for manipulating geospatial, (Geo)JSON, and (Geo)TIFF data |pygeoutils|\n================ ==================================================================== ============\n\n.. _PyGeoHydro: https://github.com/hyriver/pygeohydro\n.. _AsyncRetriever: https://github.com/hyriver/async-retriever\n.. _PyGeoOGC: https://github.com/hyriver/pygeoogc\n.. _PyGeoUtils: https://github.com/hyriver/pygeoutils\n.. _PyNHD : https://github.com/hyriver/pynhd\n.. _Py3DEP: https://github.com/hyriver/py3dep\n.. _PyDaymet: https://github.com/hyriver/pydaymet\n.. _PyNLDAS2: https://github.com/hyriver/pynldas2\n.. _HydroSignatures: https://github.com/hyriver/hydrosignatures\n\nPyNLDAS2: Hourly NLDAS-2 Forcing Data\n-------------------------------------\n\n.. image:: https://img.shields.io/pypi/v/pynldas2.svg\n    :target: https://pypi.python.org/pypi/pynldas2\n    :alt: PyPi\n\n.. image:: https://img.shields.io/conda/vn/conda-forge/pynldas2.svg\n    :target: https://anaconda.org/conda-forge/pynldas2\n    :alt: Conda Version\n\n.. image:: https://codecov.io/gh/hyriver/pynldas2/branch/main/graph/badge.svg\n    :target: https://codecov.io/gh/hyriver/pynldas2\n    :alt: CodeCov\n\n.. image:: https://img.shields.io/pypi/pyversions/pynldas2.svg\n    :target: https://pypi.python.org/pypi/pynldas2\n    :alt: Python Versions\n\n.. image:: https://github.com/hyriver/pynldas2/actions/workflows/test.yml/badge.svg\n    :target: https://github.com/hyriver/pynldas2/actions/workflows/test.yml\n    :alt: Github Actions\n\n|\n\n.. image:: https://img.shields.io/badge/security-bandit-green.svg\n    :target: https://github.com/PyCQA/bandit\n    :alt: Security Status\n\n.. image:: https://www.codefactor.io/repository/github/hyriver/pynldas2/badge\n   :target: https://www.codefactor.io/repository/github/hyriver/pynldas2\n   :alt: CodeFactor\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: black\n\n.. image:: https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\n    :target: https://github.com/pre-commit/pre-commit\n    :alt: pre-commit\n\n|\n\nFeatures\n--------\n\nPyNLDAS2 is a part of `HyRiver <https://github.com/hyriver/HyRiver>`__ software stack that\nis designed to aid in hydroclimate analysis through web services. This package\nprovides access `NLDAS-2 Forcing dataset <https://ldas.gsfc.nasa.gov/nldas/v2/forcing>`__\nvia `Hydrology Data Rods <https://disc.gsfc.nasa.gov/information/tools?title=Hydrology+Data+Rods>`__.\nCurrently, only hourly data is supported. There are three main functions:\n\n- ``get_bycoords``: Forcing data for a list of coordinates as a ``pandas.DataFrame`` or\n  ``xarray.Dataset``,\n- ``get_bygeom``: Forcing data within a geometry as a ``xarray.Dataset``,\n- ``get_grid_mask``: NLDAS2\n  `land/water grid mask <https://ldas.gsfc.nasa.gov/nldas/specifications>`__\n  as a ``xarray.Dataset``.\n\nPyNLDAS2 only provides access to the daily NLDAS2 dataset, so if you need to access\nother NASA climate datasets you can check out\n`tsgettoolbox <https://pypi.org/project/tsgettoolbox/>`__ developed by\n`Time Cera <https://github.com/timcera>`__.\n\nPyNLDAS2 uses AsyncRetriever for requesting data from the NLDAS web service efficiently\nand reliably. You can control the request/response caching behavior and its verbosity\nby setting the following environment variables:\n\n* ``HYRIVER_CACHE_NAME``: Path to the caching SQLite database. It defaults to\n  ``./cache/aiohttp_cache.sqlite``\n* ``HYRIVER_CACHE_EXPIRE``: Expiration time for cached requests in seconds. It defaults to\n  -1 (never expire).\n* ``HYRIVER_CACHE_DISABLE``: Disable reading/writing from/to the cache. The default is false.\n* ``HYRIVER_VERBOSE``: Enable verbose mode. The default is false.\n\nFor example, in your code before making any requests you can do:\n\n.. code-block:: python\n\n    import os\n\n    os.environ[\"HYRIVER_CACHE_NAME\"] = \"path/to/file.sqlite\"\n    os.environ[\"HYRIVER_CACHE_EXPIRE\"] = \"3600\"\n    os.environ[\"HYRIVER_CACHE_DISABLE\"] = \"true\"\n    os.environ[\"HYRIVER_VERBOSE\"] = \"true\"\n\nYou can find some example notebooks `here <https://github.com/hyriver/HyRiver-examples>`__.\n\nYou can also try using PyNLDAS2 without installing\nit on your system by clicking on the binder badge. A Jupyter Lab\ninstance with the HyRiver stack pre-installed will be launched in your web browser, and you\ncan start coding!\n\nMoreover, requests for additional functionalities can be submitted via\n`issue tracker <https://github.com/hyriver/pynldas2/issues>`__.\n\nCitation\n--------\nIf you use any of HyRiver packages in your research, we appreciate citations:\n\n.. code-block:: bibtex\n\n    @article{Chegini_2021,\n        author = {Chegini, Taher and Li, Hong-Yi and Leung, L. Ruby},\n        doi = {10.21105/joss.03175},\n        journal = {Journal of Open Source Software},\n        month = {10},\n        number = {66},\n        pages = {1--3},\n        title = {{HyRiver: Hydroclimate Data Retriever}},\n        volume = {6},\n        year = {2021}\n    }\n\nInstallation\n------------\n\nYou can install ``pynldas2`` using ``pip``:\n\n.. code-block:: console\n\n    $ pip install pynldas2\n\nAlternatively, ``pynldas2`` can be installed from the ``conda-forge`` repository\nusing `Conda <https://docs.conda.io/en/latest/>`__:\n\n.. code-block:: console\n\n    $ conda install -c conda-forge pynldas2\n\nQuick start\n-----------\n\nThe NLDAS2 database provides forcing data at 1/8th-degree grid spacing and range\nfrom 01 Jan 1979 to present. Let's take a look at NLDAS2 grid mask that includes\nland, water, soil, and vegetation masks:\n\n\n.. code-block:: python\n\n    import pynldas2 as nldas\n\n    grid = nldas.get_grid_mask()\n\n.. image:: https://raw.githubusercontent.com/hyriver/HyRiver-examples/main/notebooks/_static/nldas_grid.png\n    :target: https://github.com/hyriver/HyRiver-examples/blob/main/notebooks/nldas.ipynb\n\nNext, we use `PyGeoHydro <https://github.com/hyriver/pygeohydro>`__ to get the\ngeometry of a HUC8 with ID of 1306003, then we get the forcing data within the\nobtained geometry.\n\n.. code-block:: python\n\n    from pygeohydro import WBD\n\n    huc8 = WBD(\"huc8\")\n    geometry = huc8.byids(\"huc8\", \"13060003\").geometry[0]\n    clm = nldas.get_bygeom(geometry, \"2010-01-01\", \"2010-01-31\", 4326)\n\n.. image:: https://raw.githubusercontent.com/hyriver/HyRiver-examples/main/notebooks/_static/nldas_humidity.png\n    :target: https://github.com/hyriver/HyRiver-examples/blob/main/notebooks/nldas.ipynb\n\nRoad Map\n--------\n\n- [ ] Add PET calculation functions similar to\n  `PyDaymet <https://github.com/hyriver/pydaymet>`__ but at daily timescale.\n- [ ] Add a command line interfaces.\n\nContributing\n------------\n\nContributions are appreciated and very welcomed. Please read\n`CONTRIBUTING.rst <https://github.com/hyriver/pynldas2/blob/main/CONTRIBUTING.rst>`__\nfor instructions.\n",
            "description_content_type": "text/x-rst",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/hyriver/pynldas2",
            "keywords": "",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "pynldas2",
            "package_url": "https://pypi.org/project/pynldas2/",
            "platform": "any",
            "project_url": "https://pypi.org/project/pynldas2/",
            "project_urls": {
                "CI": "https://github.com/hyriver/pynldas2/actions",
                "Changelog": "https://docs.hyriver.io/changelogs/pynldas2.html",
                "Homepage": "https://docs.hyriver.io/readme/pynldas2.html",
                "Issues": "https://github.com/hyriver/pynldas2/issues"
            },
            "release_url": "https://pypi.org/project/pynldas2/0.1.1/",
            "requires_dist": [
                "async-retriever (>=0.3.6)",
                "h5netcdf",
                "numpy (>=1.17)",
                "pandas (>=1.0)",
                "pygeoutils (>=0.13.10)",
                "pyproj (>=2.2)",
                "rioxarray (>=0.11)",
                "xarray (>=2022.03.0)",
                "coverage[toml] ; extra == 'test'",
                "pytest-cov ; extra == 'test'",
                "pytest-xdist[psutil] ; extra == 'test'",
                "coverage[toml] ; extra == 'typeguard'",
                "pygments ; extra == 'typeguard'",
                "pytest-cov ; extra == 'typeguard'",
                "pytest-xdist[psutil] ; extra == 'typeguard'",
                "typeguard ; extra == 'typeguard'"
            ],
            "requires_python": ">=3.8",
            "summary": "Get NLDAS2 forcing data.",
            "version": "0.1.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16131568,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "98684b73396266c528bf6a867d8d71b7",
                    "sha256": "5832492f40469ae06acffdef5687a4aad3204d9ebbeb515f300f213db10d7a52"
                },
                "downloads": -1,
                "filename": "pynldas2-0.1.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "98684b73396266c528bf6a867d8d71b7",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 12667,
                "upload_time": "2022-12-17T00:53:57",
                "upload_time_iso_8601": "2022-12-17T00:53:57.502120Z",
                "url": "https://files.pythonhosted.org/packages/11/8d/888dd5c99a11790b5b7ca0112f44733292c156cef09ad0475aaf686894e2/pynldas2-0.1.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "51aac459c247317e357055c1512a78a1",
                    "sha256": "030d92581ffc0b2e7c73c288f7d415fb512c1c1653bb0327dda379dab98bf293"
                },
                "downloads": -1,
                "filename": "pynldas2-0.1.1.tar.gz",
                "has_sig": false,
                "md5_digest": "51aac459c247317e357055c1512a78a1",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 29304,
                "upload_time": "2022-12-17T00:53:58",
                "upload_time_iso_8601": "2022-12-17T00:53:58.912644Z",
                "url": "https://files.pythonhosted.org/packages/12/eb/e6454df4ab896de9743cc5089af3ac27a7e516e00597a871ffca4ba3c18e/pynldas2-0.1.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}