{
    "0.1.0": {
        "info": {
            "author": "",
            "author_email": "",
            "bugtrack_url": null,
            "classifiers": [
                "License :: Public Domain",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# Nonblocking Stream Queue\n\nThis is a simple python package for nonblocking reading from streams.\n\nIt could be expanded for general nonblocking usage if desired.\n\nA simple nonblocking queue reader is provided, with implementation from https://stackoverflow.com/questions/375427/a-non-blocking-read-on-a-subprocess-pipe-in-python/4896288#4896288 .\n\nWhen constructed, the reader spawns a thread and reads everything from the stream, until garbage collection or EOF.\n\n## Usage\n\n    import sys\n    import nonblocking_stream_queue as nonblocking\n    \n    reader = nonblocking.Reader(\n        sys.stdin,\n        max_size=4096,\n        lines=False,\n        max_count=None,\n        drop_timeout=None,\n        transform_cb=None\n    )\n\n    print(reader.read_one()) # outputs up to 4096 characters, or None if nothing queued\n    print(reader.read_many()) # outputs all 4096 character chunks queued\n    print(''.join(reader.read_many())) # outputs all queued text\n    reader.block() # waits for data to be present or end, returns number of reads queued\n    reader.is_pumping() # False if data has ended\n\n### Timestamping\n\n    import sys, time\n    import nonblocking_stream_queue as nonblocking\n    \n    reader = nonblocking.Reader(\n        sys.stdin.buffer,\n        transform_cb=lambda data: (time.time(), data)\n    )\n\n    while reader.block():\n        print(*reader.read_one()) # shows the timestamp each item was buffered\n\n## Lines\n\n    import sys\n    import nonblocking_stream_queue as nonblocking\n    \n    reader = nonblocking.Reader(\n        sys.stdin,\n        lines=True\n    )\n\n    while reader.block():\n        print(reader.read_one().rstrip()) # outputs each line of text that is input\n\n## Other solutions\n\nThere are likely many other existing solutions to this common task.\n\nHere's one:\n- https://github.com/kata198/python-nonblock\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "nonblocking-stream-queue",
            "package_url": "https://pypi.org/project/nonblocking-stream-queue/",
            "platform": null,
            "project_url": "https://pypi.org/project/nonblocking-stream-queue/",
            "project_urls": {
                "Bug Tracker": "https://github.com/xloem/nonblocking_stream_queue/issues",
                "Homepage": "https://github.com/xloem/nonblocking_stream_queue"
            },
            "release_url": "https://pypi.org/project/nonblocking-stream-queue/0.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Nonblocking stream reads using Queue and a pump thread",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15524742,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2cc7f655c9c1a8ad8feb9af2290cde26",
                    "sha256": "c2cb9df55ddc85a5e8d43a3b894b5a486e62e7252c5560e1d6880271288c9d96"
                },
                "downloads": -1,
                "filename": "nonblocking_stream_queue-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2cc7f655c9c1a8ad8feb9af2290cde26",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 3601,
                "upload_time": "2022-10-25T15:38:05",
                "upload_time_iso_8601": "2022-10-25T15:38:05.224857Z",
                "url": "https://files.pythonhosted.org/packages/de/4c/a8e32cd28b86ad72d7d1d3ed7973ba379a7391a39b8cc8433c85da657af0/nonblocking_stream_queue-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "0aee095ad165efc59648373ca1c7fe70",
                    "sha256": "15cba0eea1e9124f5458d5390ea43d81d247deb653013e97663ba5357653414d"
                },
                "downloads": -1,
                "filename": "nonblocking_stream_queue-0.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "0aee095ad165efc59648373ca1c7fe70",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 2829,
                "upload_time": "2022-10-25T15:38:06",
                "upload_time_iso_8601": "2022-10-25T15:38:06.483523Z",
                "url": "https://files.pythonhosted.org/packages/59/34/ee5d18fe5e9917994d0924f9f414552b4dce111e77ab6fb89d37a2f7c2f7/nonblocking_stream_queue-0.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}