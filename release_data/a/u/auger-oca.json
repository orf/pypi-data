{
    "0.0.1": {
        "info": {
            "author": "",
            "author_email": "Bruno Tenorio <b.nunes.bruno@gmail.com>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "#***********************************************************************\n# This file is part of OpenMolcas.                                     *\n#                                                                      *\n# OpenMolcas is free software; you can redistribute it and/or modify   *\n# it under the terms of the GNU Lesser General Public License, v. 2.1. *\n# OpenMolcas is distributed in the hope that it will be useful, but it *\n# is provided \"as is\" and without any express or implied warranties.   *\n# For more details see the full text of the license in the file        *\n# LICENSE or in <http://www.gnu.org/licenses/>.                        *\n#                                                                      *\n# Copyright (C) 2020-2022, Bruno Tenorio                               *\n#***********************************************************************\n\nThis is the readme file for auger_OCA\n\nContact person: Bruno Tenorio\nb.nunes.bruno@gmail.com\n=====================================\n\n OCA stands for One-Center Approximation. It is a simple way to get Auger intensities bypassing the\n calculation of the continuum wave function.\n \n Auger-OCA is a collection of python scripts (programs) to post-process a collection\n of 2-el reduced transition density matrices (also called Auger densities) generated \n by the RASSI module of OpenMolcas. It also requires the $project.rassi.h5 file in the background.\n\n The keyword TDYS must be used together with DYSON in your RASSI input calculation (see example below\n for C 1s edge).\n\n*---------\n&RASSI\n Nrof JobIphs =  5 all\n CIprint\n Ejob\n TDYS\n 1\n C 1s\n Dyson\n*---------\n\n+The so-called Auger densities are named as r2TM_XXX_YYY_ZZZ, where XXX is either K2V or SDA (S+1 or S-1).\n YYY and ZZZ are the rassi pair of initial and final states. \n \n+For example, for a resonant Auger (RAES) calculation type involving one initial core-excited state (JOB001)\n and 20 final cationic states (JOB002), it will be a collection of 20 Auger density files \n [r2TM_K2V_002_001,...,r2TM_K2V_021_001] in your scracth directory ('/scratch_dir_path') of the rassi calculation. \n\n+Then, one simply run (for RAES):\n \n $python3 MOLCAS_DIR/Tools/auger_oca/auger_main.py -d scratch_dir_path/ --raes &\n\n+If non-resonant Auger (AES) of singlet final states:\n\n $python3 MOLCAS_DIR/Tools/auger_oca/auger_main.py -d scratch_dir_path/ --aes --s &\n\n+If non-resonant Auger (AES) of triplet final states:\n\n $python3 MOLCAS_DIR/Tools/auger_oca/auger_main.py -d scratch_dir_path/ --aes --t &\n\n++ See also\n\n $python3 MOLCAS_DIR/Tools/auger_oca/auger_main.py -h\n\n for more info and usage.\n\n+Important: 1) auger_main.py reads $project.rassi.h5 in the background. You must execute 'auger_main.py' \n from any directory where you have your $project.rassi.h5 file (from your 'scratch_dir_path/' also works).\n 2) auge_main.py will create a directory called 'auger_outputs/' containing a collection of\n [Auger_OCA.r2TM_XXX_YYY_ZZZ.out,...] files. The binding energy and Auger intensities (plus other info)\n are writen in the end of each of these files.\n 3) One can use the bash script oca.spectrum.sh to collect a table of Auger {energy,intensity} in a file called \n spectrum.out\n\n $bash oca.spectrum.sh auger_outputs/\n\n It creates a file called 'spectrum.out' ready to plot (see more in /auger_oca/examples folder).\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "auger-oca",
            "package_url": "https://pypi.org/project/auger-oca/",
            "platform": null,
            "project_url": "https://pypi.org/project/auger-oca/",
            "project_urls": {
                "Homepage": "https://gitlab.com/Molcas/OpenMolcas.git"
            },
            "release_url": "https://pypi.org/project/auger-oca/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "An Auger tool based on the one-center approximatio to be used with OpenMolcas",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15980819,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "1710eee831afe0e39ec68ceb3e1b06af",
                    "sha256": "7f7573878b3e01fa3d97a2440783afbdb162e3361069dcb14a576d7104d8718b"
                },
                "downloads": -1,
                "filename": "auger_oca-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "1710eee831afe0e39ec68ceb3e1b06af",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 24062,
                "upload_time": "2022-12-03T20:12:05",
                "upload_time_iso_8601": "2022-12-03T20:12:05.082066Z",
                "url": "https://files.pythonhosted.org/packages/ee/c1/0ce3170e35c5a539d0e4af1fec3887d8e88039596f40ebc4d62140de1fb0/auger_oca-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5e0f2efef2644c9608576db0ca48f3e4",
                    "sha256": "e0404293288b33f6c4f40a2ff0857fb1b14b5958f6e19a53f07bd87c46f6b4ab"
                },
                "downloads": -1,
                "filename": "auger_oca-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "5e0f2efef2644c9608576db0ca48f3e4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 25777,
                "upload_time": "2022-12-03T20:12:07",
                "upload_time_iso_8601": "2022-12-03T20:12:07.138475Z",
                "url": "https://files.pythonhosted.org/packages/05/16/adae9333d1f03094c1c2eeffac98145f0dab48b88427716a788c5b161efa/auger_oca-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}