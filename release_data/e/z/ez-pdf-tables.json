{
    "1.0.0": {
        "info": {
            "author": "lamerlink",
            "author_email": "lamerlink@live.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Typing :: Typed"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LamerLink/ez_pdf_tables",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ez-pdf-tables",
            "package_url": "https://pypi.org/project/ez-pdf-tables/",
            "platform": "",
            "project_url": "https://pypi.org/project/ez-pdf-tables/",
            "project_urls": {
                "Homepage": "https://github.com/LamerLink/ez_pdf_tables"
            },
            "release_url": "https://pypi.org/project/ez-pdf-tables/1.0.0/",
            "requires_dist": [
                "pandas",
                "reportlab"
            ],
            "requires_python": ">=3.7",
            "summary": "An easy interface to quickly make PDF reports from CSV or DataFrames.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12752607,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "5fd093eff2fd6e3788480795b388999f",
                    "sha256": "ee8e248179e69bd9e6fdf7ffbe2ffcf60deea9e9e4f07a753f210f9014090236"
                },
                "downloads": -1,
                "filename": "ez_pdf_tables-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "5fd093eff2fd6e3788480795b388999f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 24338,
                "upload_time": "2022-02-01T08:02:02",
                "upload_time_iso_8601": "2022-02-01T08:02:02.065058Z",
                "url": "https://files.pythonhosted.org/packages/5e/5a/76271fca5e2f5c43e77032d10c69111cd9b1b60073364413858c5924daa2/ez_pdf_tables-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "ffc48904d6311cf16b93d02b45261263",
                    "sha256": "bdb0e50bba12bf418c37653d35d940aefb47e4bb25524dea257103dfc192904b"
                },
                "downloads": -1,
                "filename": "ez_pdf_tables-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "ffc48904d6311cf16b93d02b45261263",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 26124,
                "upload_time": "2022-02-01T08:02:03",
                "upload_time_iso_8601": "2022-02-01T08:02:03.966132Z",
                "url": "https://files.pythonhosted.org/packages/35/12/8d58b247e2bb3392619d27469ddf87f158d1beb2bac5f5f73b4099a4c2b5/ez_pdf_tables-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": "lamerlink",
            "author_email": "lamerlink@live.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.7",
                "Typing :: Typed"
            ],
            "description": "\n# ez_pdf_tables\n\nAn easy interface to quickly make PDF reports from CSV or DataFrames.\n\n## Requirements and Supported Environments\nPython 3.7+ and Windows or Linux (tested on Ubuntu 20.04.3). MacOS is currently not supported as I don't have a MacOS machine to readily test on.\n\nThis package is dependent on the following Pythjon packages.\n* [reportlab](https://pypi.org/project/reportlab/) 3.5+\n* [pandas](https://pypi.org/project/pandas/) 1.3+\n\n## Installation\nEither clone the repo or use `pip` to install.\n\n```pip install ez-pdf-tables```\n\n## Usage\nTo create a table, an existing dataset is needed. This can be a path to a CSV file, a pandas `DataFrame` object, or a list of lists.\n\nProvide this along with a destination file and title when instantiating the `StandardTable` object.\n```python\nt = StandardTable(\n\tr'C:\\some\\dataset.csv',\n\tr'C:\\some\\destination.pdf',\n\t'My Report'\n)\n```\n\nThis creates the object, but not the PDF itself. To finish creation, call the `get` function.\n```python\nreport_pdf = t.get()\n```\n`StandardTable` also has an optional `default_leadings` parameter, which is set to `True` by default. This option sets the `leading` attribute for all defined `ez_pdf_tables` styles in `ALL_CUSTOM_STYLES` to automatically account for the font size.\n\nAny styles within or added to `ALL_CUSTOM_STYLES` list will be updated when ***any***  `StandardTable` is instantiated with `default_leadings` set to `True` and/or `StandardTable.get` is called with `update_leadings` set to `True`.\n\n### Customization\nYou can optionally set numerous attributes that make table manipulation simple. A list of all of the possible attributes is in the Table Attributes section below.\n```python\nfrom ez_pdf_tables import StandardTable\n\nt = StandardTable(\n\t'/some/dataset.csv',\n\t'/some/destination.pdf',\n\t'Another Report',\n\tsubtitle_text = 'A Subtitle',\n\tborderless = True\n)\nt.get()\n```\nAlternatively, all attributes can be set after instantiation. The below produces the same result as the above\n```python\nt = StandardTable(\n\t'/some/dataset.csv',\n\t'/some/destination.pdf',\n\t'Another Report',\n)\nt.subtitle_text = 'A Subtitle',\nt.borderless = True\nt.get()\n```\n#### Be Aware\nThere are a few options that may conflict with one another, or override each other. For instance, `table_style_override` will ignore `borderless`, since it is expected the user will specify exactly their custom `reportlab.lib.styles.ParagraphStyle` object.\n\n### All `StandardTable` Attributes\n\nThis section explains all the possible attributes that can manipulate a table's appearance, and their default values.\n\nText to appear below the title. By default, both are not drawn. If `subsubtitle_text` is supplied and `subtitle_text` is not, the `subsubtitle_text` will be drawn directly below the title and a warning issued.\n* `subtitle_text = ''`\n* `subsubtitle_text = ''`\n\nThe default cell and header styles.\n* `cell_style = NORMAL_STYLE`\n* `header_style = HEADING_STYLE`\n\nDefault page sizes. `A4LETTER` is equal to `(913.92, 666.96)`.\n* `page_size = A4LETTER`\n* `page_width = self.page_size[0]`\n* `page_margin = HALF_INCH`\n* `right_page_margin = HALF_INCH`\n* `left_page_margin = HALF_INCH`\n* `top_page_margin = HALF_INCH / 2`\n* `bottom_page_margin = HALF_INCH / 4`\n\nHow large the table should be in contrast to canvas.\n* `table_scale = 1`\n\nDefault cell size and font size.\n* `table_cell_size = 10`\n* `cell_fontsize = 18`\n\nWhich rows to repeat on each page. If changed to and empty list, none will repeat.\n* `repeat_rows = [1,]`\n\nDefault header colour, which is `reportlab.lib.colors.cyan`.\n* `header_color = colors.cyan`\n\nDraw the table borders or not.\n* `borderless = False`\n\nDefine a list of column indices to omit certain columns when drawing.\n* `omit_column_list = []`\n\t* Example: `t.omit_column_list = [3,9,14]`\n\nDefine a list of column indices to set the column order, will also drop any omitted columns\n* `order_column_list = []`\n\t* Example: `t.order_column_list = [0,1,2,5,3]` will rearrange the dataset to put column 5 after column 2 and omit column 4.\n\nThe length of text a column must reach to be automatically text-wrapped. It is not recommended to set this very high.\n* `wrap_limit = 30`\n\nDefine a list of column indices to wrap text in.\n* `wrap_column_list = []`\n\nDefine a list of criteria to check for in each cell to see if that entire row should be bold, and/or define a column index where an entire row should be bolded after. Note that if both `bold_criteria` and `bold_criteria_index` are specified, both must be met.\n* `bold_criteria = []`\n\t* Example: `t.bold_criteria = ['Total', 'Count']` will bold cells that match either \"Total\" or \"Count\".\n* `bold_criteria_index = []`\n\t* Example: `t.bold_criteria_index = [3,]` will bold any cell that is within the target column, 3.\n\nBold the entire row if a criteria is met and is in this list. Note this list can contain criteria without needing to be in bold_criteria.\n* `bold_row_criteria = []`\n\nDefine a manual table style. Do not pass a `reportlab.platypus.TableStyle` object here! Pass the parameters to be passed to the object. See the [ReportLab documentation (section 7.2, page 85)](https://www.reportlab.com/docs/reportlab-userguide.pdf) for information on creating a manual table style.\n* `table_style_override = []`\n\nDefine a manual heading style. Must be a `reportlab.lib.styles.ParagraphStyle` object.\n* `override_heading_style = None`\n\nSet to true to disable wrapping of cell values in `reportlab.platypus.Paragraph`. Also prevents any `reportlab.lib.styles.ParagraphStyle` from being applied to cells.\n* `bypass_table_paragraphs = False`\n\nColumns to convert to text when generating. Note that this shouldn't ever be needed as `pandas.DataFrame` and `list` are both converted to text automatically during processing.\n* `columns_as_text = []`\n\n### Styles\n\nAll included styles in `ez_pdf_tables` are added to the `ALL_CUSTOM_STYLES` list constant.\n\n* `NORMAL_STYLE` is `reportlab.lib.styles.getSampleStyleSheet()['Normal']`.\n* `HEADING_STYLE` is `reportlab.lib.styles.getSampleStyleSheet()['Heading5']`.\n* `TITLE_STYLE` is based on `reportlab.lib.styles.getSampleStyleSheet()['Title']`, with the following modifications:\n\t* Center alignment\n\t* Font size of 48\n\t* Font type of Helvetica\n* `SUBTITLE_STYLE`  is based on `reportlab.lib.styles.getSampleStyleSheet()['Title']`, with the following modifications:\n\t* Font size of 22\n\t* Space after text of 6\n* `BOLD_STYLE` is the same as `NORMAL_STYLE` but with a font type of Helvetica-Bold.\n* `CENTERED_STYLE` is the same as `NORMAL_STYLE` but with center alignment.\n* `SMALL_STYLE` is the same as `NORMAL_STYLE` but with a font size of 6.\n* `BLUE_HIGHLIGHT_STYLE`, `YELLOW_HIGHLIGHT_STYLE`, and `GREEN_HIGHLIGHT_STYLE` are all the same as `NORMAL_STYLE` but with back color of `reportlab.lib.colors.PCMYKColor(25,0,0,0)` (blue),  `reportlab.lib.colors.PCMYKColor(0,0,33,0)` (yellow), and `reportlab.lib.colors.PCMYKColor(25,0,25,0)` (red), respectively.\n\t* They are all usused and left as examples/options.\n\t* Each sets `backColor` initially to a preset `reportlab.lib.colors` option and then overwrites it. This is left as an example of what can be done.\n\n### Additional Features\nWhen creating PDF reports, it can be advantageous to produce a multiindex dataset without repeating the indices. This package contains a tool for just that, `multiindex_as_is`.\n\nIn `pandas`,  a multiindex can be set on a `DataFrame` via passing a list of target indices to `pandas.DataFrame.set_index`. The same logic will apply here.\n```python\nfrom ez_pdf_tables import multiindex_as_is\n\ndf = pd.read_csv(r'C:\\some\\dataset.csv')\ndf = multiindex_as_is(df, ['List', 'Of', 'Indices'])\n```\n\nUsing this function can produce some pleasant tables. See examples for a full example.\n\n## Examples\n\n### Make a Default Table\n\nNo frills, default options.\n```python\nfrom ez_pdf_tables import StandardTable\n\nt = StandardTable(\n\t'/home/username/Desktop/salaries.csv',\n\t'/home/username/Desktop/salaries.pdf',\n\t'Employee Salaries'\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/default.png?raw=true)\n\n### Borderless and Subtitles\n\nSetting the table to be borderless and adding a subtitle.\n```python\nt = StandardTable(\n\t'/home/username/Desktop/salaries.csv',\n\t'/home/username/Desktop/salaries.pdf',\n\t'Employee Salaries',\n\tborderless=True,\n\tsubtitle_text='As of 05/20/2020'\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/borderless_subtitle.png?raw=true)\n\n### Using Bolds\n\nSpecifying values in the `bold_criteria` parameter is a simple way to apply bold selectively.\n```python\nt = StandardTable(\n\tr\"C:\\some\\dataset.csv\",\n\tr\"C:\\some\\bold.pdf\",\n\t'Team Scores',\n    bold_criteria = ['Yes',]\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/bold1.png?raw=true)\nHowever, it can be problematic if values are repeated in multiple columns.\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/bold2.png?raw=true)\nIn this case, using `bold_criteria_index` with `bold_criteria` can narrow the search.\n```python\nt = StandardTable(\n\tr\"C:\\some\\dataset.csv\",\n\tr\"C:\\some\\bold.pdf\",\n\t'Team Scores',\n    bold_criteria = ['Yes',],\n    bold_criteria_index = [2,]\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/bold3.png?raw=true)\nOf course, if an entire column should always be bold, using `bold_criteria_index` alone works, too.\n```python\nt = StandardTable(\n\tr\"C:\\some\\dataset.csv\",\n\tr\"C:\\some\\bold.pdf\",\n\t'Team Scores',\n    bold_criteria_index = [2,]\n)\nt.get()\n```\n\nSometimes it may be desirable to embolden the entire row if the row contains some criteria. This can be defined similar to the above, by cell contents, in `bold_row_criteria`.\n```python\nt = StandardTable(\n\tr\"C:\\some\\dataset.csv\",\n\tr\"C:\\some\\bold.pdf\",\n\t'Team Scores',\n    bold_row_criteria = [15,]\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/bold4.png?raw=true)\nCombining all of these is possible, but likely unnecessary.\n```python\nt = StandardTable(\n\tr\"C:\\some\\dataset.csv\",\n\tr\"C:\\some\\bold.pdf\",\n\t'Team Scores',\n    bold_criteria = ['Yes',],\n    bold_criteria_index = [2,],\n    bold_row_criteria = [15,]\n)\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/bold5.png?raw=true)\n\n### Multiindex Tables\n\nMultiindex allows tables to have sorted and/or hanging values. Pass a CSV file or `pandas.DataFrame` object into the `multiindex_as_is` function, along with a list of what indices should be used, in the correct order.\n```python\nfrom ez_pdf_tables import multiindex_as_is, StandardTable\n\nmi = multiindex_as_is(r\"C:\\some\\dataset.csv\", ['Team','Score'])\nt = StandardTable(mi, r\"C:\\some\\mi.pdf\", 'Team Scores')\nt.borderless = True #These look great borderless\nt.get()\n```\n![](https://github.com/LamerLink/ez_pdf_tables/blob/main/photos/multiindex.png?raw=true)\n\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LamerLink/ez_pdf_tables",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "ez-pdf-tables",
            "package_url": "https://pypi.org/project/ez-pdf-tables/",
            "platform": "",
            "project_url": "https://pypi.org/project/ez-pdf-tables/",
            "project_urls": {
                "Homepage": "https://github.com/LamerLink/ez_pdf_tables"
            },
            "release_url": "https://pypi.org/project/ez-pdf-tables/1.0.1/",
            "requires_dist": [
                "pandas",
                "reportlab"
            ],
            "requires_python": ">=3.7",
            "summary": "An easy interface to quickly make PDF reports from CSV or DataFrames.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 12752607,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3d8f4ef5f873036a764f290c492af3ce",
                    "sha256": "d6a812de5317e95a19ecc8d51a6d25a91ba95283afc6c6182ac610434771e816"
                },
                "downloads": -1,
                "filename": "ez_pdf_tables-1.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3d8f4ef5f873036a764f290c492af3ce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 24418,
                "upload_time": "2022-02-01T08:08:45",
                "upload_time_iso_8601": "2022-02-01T08:08:45.505034Z",
                "url": "https://files.pythonhosted.org/packages/10/f3/6c91389565d609d70ea20827b5d6918b86c0b53cace7ddc3e61ba007e3d2/ez_pdf_tables-1.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "9855301cfb576002cb2e79603a3e378d",
                    "sha256": "2e9f3418b535edf09be2986a081184c9c498d29ec59dd3023cbb98193946475f"
                },
                "downloads": -1,
                "filename": "ez_pdf_tables-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "9855301cfb576002cb2e79603a3e378d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 26296,
                "upload_time": "2022-02-01T08:08:47",
                "upload_time_iso_8601": "2022-02-01T08:08:47.169429Z",
                "url": "https://files.pythonhosted.org/packages/82/54/325ac9fd3a71af0f338cdedc0b4e02a98e2522e827cfc8ddedb8752c8938/ez_pdf_tables-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}