{
    "0.0.1": {
        "info": {
            "author": "Lonami Exo",
            "author_email": "totufals@hotmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Topic :: Communications :: Chat"
            ],
            "description": "Telethon\r\n========\r\n.. epigraph::\r\n\r\n  \u2b50\ufe0f Thanks **everyone** who has starred the project, it means a lot!\r\n\r\n|logo| **Telethon** is an asyncio_ **Python 3**\r\nMTProto_ library to interact with Telegram_'s API\r\nas a user or through a bot account (bot API alternative).\r\n\r\n.. important::\r\n\r\n    If you have code using Telethon before its 1.0 version, you must\r\n    read `Compatibility and Convenience`_ to learn how to migrate.\r\n\r\nWhat is this?\r\n-------------\r\n\r\nTelegram is a popular messaging application. This library is meant\r\nto make it easy for you to write Python programs that can interact\r\nwith Telegram. Think of it as a wrapper that has already done the\r\nheavy job for you, so you can focus on developing an application.\r\n\r\n\r\nInstalling\r\n----------\r\n\r\n.. code-block:: sh\r\n\r\n  pip3 install telethon\r\n\r\n\r\nCreating a client\r\n-----------------\r\n\r\n.. code-block:: python\r\n\r\n    import asyncio\r\n    from telethon import TelegramClient, events\r\n\r\n    # These example values won't work. You must get your own api_id and\r\n    # api_hash from https://my.telegram.org, under API Development.\r\n    api_id = 12345\r\n    api_hash = '0123456789abcdef0123456789abcdef'\r\n\r\n    async def main():\r\n      client = TelegramClient('session_name', api_id, api_hash)\r\n      await client.start()\r\n\r\n    asyncio.run(main())\r\n\r\n\r\nDoing stuff\r\n-----------\r\n\r\n.. code-block:: python\r\n\r\n    print((await client.get_me()).stringify())\r\n\r\n    await client.send_message('username', 'Hello! Talking to you from Telethon')\r\n    await client.send_file('username', '/home/myself/Pictures/holidays.jpg')\r\n\r\n    await client.download_profile_photo('me')\r\n    messages = await client.get_messages('username')\r\n    await messages[0].download_media()\r\n\r\n    @client.on(events.NewMessage(pattern='(?i)hi|hello'))\r\n    async def handler(event):\r\n        await event.respond('Hey!')\r\n\r\n\r\nNext steps\r\n----------\r\n\r\nDo you like how Telethon looks? Check out `Read The Docs`_ for a more\r\nin-depth explanation, with examples, troubleshooting issues, and more\r\nuseful information.\r\n\r\n.. _asyncio: https://docs.python.org/3/library/asyncio.html\r\n.. _MTProto: https://core.telegram.org/mtproto\r\n.. _Telegram: https://telegram.org\r\n.. _Compatibility and Convenience: https://docs.telethon.dev/en/stable/misc/compatibility-and-convenience.html\r\n.. _Read The Docs: https://docs.telethon.dev\r\n\r\n.. |logo| image:: logo.svg\r\n    :width: 24pt\r\n    :height: 24pt\r\n\r\n\r\n",
            "description_content_type": "",
            "docs_url": null,
            "download_url": "https://github.com/LonamiWebs/Degram/releases",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/LonamiWebs/Degram",
            "keywords": "telegram api chat client library messaging mtproto",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "Degram",
            "package_url": "https://pypi.org/project/Degram/",
            "platform": null,
            "project_url": "https://pypi.org/project/Degram/",
            "project_urls": {
                "Download": "https://github.com/LonamiWebs/Degram/releases",
                "Homepage": "https://github.com/LonamiWebs/Degram"
            },
            "release_url": "https://pypi.org/project/Degram/0.0.1/",
            "requires_dist": null,
            "requires_python": ">=3.7",
            "summary": "Full-featured Telegram client library for Python 3",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14543899,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "68f6df70d31c917b4c9681737297aef4",
                    "sha256": "32aa70060b45ebec8c19e0890676263f81792d05a539d037057180cbde3c8626"
                },
                "downloads": -1,
                "filename": "Degram-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "68f6df70d31c917b4c9681737297aef4",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 442429,
                "upload_time": "2022-07-25T17:32:23",
                "upload_time_iso_8601": "2022-07-25T17:32:23.664239Z",
                "url": "https://files.pythonhosted.org/packages/aa/db/df6968ed6af0f90c9873fd187c0870510bbd7c3c249b2e37228bbafa3475/Degram-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}