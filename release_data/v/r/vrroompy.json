{
    "1.0.0": {
        "info": {
            "author": "",
            "author_email": "Vincent Kocks <engineering@vingenuity.net>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# VRROOMpy\r\n\r\n## Overview\r\nVRROOMpy is a pure Python package for controlling HDFury VRROOM HDMI switches.\r\n\r\nOnly a subset of the full VRROOM API is currently available, but development on the remaining commands is ongoing.\r\n\r\nThe eventual intent is for this package to be used in a Home Assistant integration, which is hopefully coming soon.\r\n\r\n\r\n## Usage\r\nVRROOMpy provides two different APIs: \"Raw\" and \"Command\".\r\n\r\nRegardless of the API, Python's `socket` package and class are used to establish the network connection. The APIs then call upon that socket to control the switch.\r\n\r\n### Raw API\r\nCalling the API directly via strings is exposed via the `Codec` class. The command names themselves can be found in the accompanying documentation file from HDFury.\r\n\r\nFor example, the following code snippet gets the current value, then overwrites the input TX0:\r\n```\r\nimport socket\r\nfrom vrroompy.codec import Codec\r\n\r\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as vrroom_socket:\r\n    vrroom_socket.connect((address, port))\r\n\r\n    vrroom_socket.sendall(Codec.encode_command_raw(\"get inseltx0\"))\r\n    print(vrroom_socket.recv(256))  # Prints \"inseltx0 1\"\r\n\r\n    vrroom_socket.sendall(Codec.encode_command_raw(\"set inseltx0 2\"))\r\n    print(vrroom_socket.recv(256))  # Prints \"inseltx0 2\"\r\n```\r\n\r\n### Command API\r\nThe command API provides a higher-level, more Pythonic interface to the VRROOM switch. Commands are distributed by function within the `commands` sub-package.\r\n\r\nFor example, the following code snippet performs the same get/set of the TXO input:\r\n```\r\nimport socket\r\nfrom vrroompy.commands.input import Input, get_selected_input_tx0, set_selected_input_tx0\r\n\r\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as vrroom_socket:\r\n    vrroom_socket.connect((address, port))\r\n\r\n    print(get_selected_input_tx0(vrroom_socket))  # Prints \"1\" (Input.RX1)\r\n    set_selected_input_tx0(vrroom_socket, Input.RX2)\r\n    print(get_selected_input_tx0(vrroom_socket))  # Prints \"2\" (Input.RX2)\r\n```\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "GPL-3.0-or-later",
            "maintainer": "",
            "maintainer_email": "",
            "name": "VRROOMpy",
            "package_url": "https://pypi.org/project/VRROOMpy/",
            "platform": null,
            "project_url": "https://pypi.org/project/VRROOMpy/",
            "project_urls": {
                "Bug Tracker": "https://github.com/vingenuity/vrroompy/issues",
                "Homepage": "https://github.com/vingenuity/vrroompy"
            },
            "release_url": "https://pypi.org/project/VRROOMpy/1.0.0/",
            "requires_dist": [
                "black (~=22.0) ; extra == 'dev'",
                "coverage (==6.5) ; extra == 'dev'"
            ],
            "requires_python": ">=3.7",
            "summary": "Package for controlling HDFury VRROOM HDMI switches via Python.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16119561,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9b9bc98035e485edb6c16f38367c3b47",
                    "sha256": "137fbc3ee46ad9a78bdd63fadfde1173630c5a878a8948c1e6153a0aa07ed2b3"
                },
                "downloads": -1,
                "filename": "VRROOMpy-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9b9bc98035e485edb6c16f38367c3b47",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 20397,
                "upload_time": "2022-12-15T22:44:46",
                "upload_time_iso_8601": "2022-12-15T22:44:46.134639Z",
                "url": "https://files.pythonhosted.org/packages/ee/68/49599dd0ee7a0359bd503e2581fe02c78d66cf41236028884702feee88c9/VRROOMpy-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e206075119560ab537f646f80323a125",
                    "sha256": "12a15fb7a51c572533791b12544b3a423161ca4175aaa480152d4b6fc9a9b87d"
                },
                "downloads": -1,
                "filename": "VRROOMpy-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e206075119560ab537f646f80323a125",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 18119,
                "upload_time": "2022-12-15T22:44:47",
                "upload_time_iso_8601": "2022-12-15T22:44:47.631317Z",
                "url": "https://files.pythonhosted.org/packages/0e/02/f011a1500d7bfe8b566fb7f4ab15052c06641ce8e593a89dd5cf641e1af7/VRROOMpy-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}