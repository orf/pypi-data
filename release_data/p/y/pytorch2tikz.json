{
    "1.0.0": {
        "info": {
            "author": null,
            "author_email": "Jannes Magnusson <jannes@magnusson.berlin>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "pytorch2tikz",
            "package_url": "https://pypi.org/project/pytorch2tikz/",
            "platform": null,
            "project_url": "https://pypi.org/project/pytorch2tikz/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pytorch2tikz/1.0.0/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Simple tool to generate a tikz figure of a pytorch module by executing it.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15839134,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "0488ec6acb13a8c447fb9a52825f042b",
                    "sha256": "03682a6b291536493240d081b23f45ba2d8823e10c98ab1f0b959e2d0cb6dda4"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.0-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "0488ec6acb13a8c447fb9a52825f042b",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 30161,
                "upload_time": "2022-11-21T10:25:54",
                "upload_time_iso_8601": "2022-11-21T10:25:54.681753Z",
                "url": "https://files.pythonhosted.org/packages/a7/95/7bd9417933393b1da6e4a1fc62e6bde476adc07e565c475198ead803cb3c/pytorch2tikz-1.0.0-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "62e969788695d3980ec8be9d1569e143",
                    "sha256": "056ad7eda69d942e467bae4139a7b572f96e4a2ea83aa7c1de5ab6e6aca2cbc0"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "62e969788695d3980ec8be9d1569e143",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 206445,
                "upload_time": "2022-11-21T10:26:28",
                "upload_time_iso_8601": "2022-11-21T10:26:28.109237Z",
                "url": "https://files.pythonhosted.org/packages/e0/58/64d62ee83487468554e74189db56d0347b700bd3624e962955a8e3dc06fc/pytorch2tikz-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.1": {
        "info": {
            "author": null,
            "author_email": "Jannes Magnusson <jannes@magnusson.berlin>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "pytorch2tikz",
            "package_url": "https://pypi.org/project/pytorch2tikz/",
            "platform": null,
            "project_url": "https://pypi.org/project/pytorch2tikz/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pytorch2tikz/1.0.1/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Simple tool to generate a tikz figure of a pytorch module by executing it.",
            "version": "1.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15839134,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "733d35334546d1595470fd1bdf1b4115",
                    "sha256": "28e93925133432ce3b869813b6d51897aa88ce3a1c06583b400e61848eb7751f"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.1-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "733d35334546d1595470fd1bdf1b4115",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 30160,
                "upload_time": "2022-11-21T10:35:01",
                "upload_time_iso_8601": "2022-11-21T10:35:01.167757Z",
                "url": "https://files.pythonhosted.org/packages/ac/5a/4245fc97a9774043576d883078e79a3da87fec59cce154e17cff1f6d9528/pytorch2tikz-1.0.1-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "d66a8f7a6e0c48b800e9f4a49ca3a302",
                    "sha256": "142d6d4c93efed025270dd8cf647e77bd7609bb4bfec651dea3fa1f9fd91e6bc"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "d66a8f7a6e0c48b800e9f4a49ca3a302",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 206241,
                "upload_time": "2022-11-21T10:35:06",
                "upload_time_iso_8601": "2022-11-21T10:35:06.668562Z",
                "url": "https://files.pythonhosted.org/packages/d8/08/9bf34f24f56b4efb1e55e5d104aa13ebabe9485143448e6f7187b0c6a91c/pytorch2tikz-1.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.0.2": {
        "info": {
            "author": null,
            "author_email": "Jannes Magnusson <jannes@magnusson.berlin>",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
            ],
            "description": "# Pytorch2Tikz\n[//]: # \"[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2526396.svg)](https://doi.org/10.5281/zenodo.2526396)\"\n\nGenerate Tikz figures for neural networks implemented in pytorch. It uses LaTeX snippets from [PlotNeuralNet](https://github.com/HarisIqbal88/PlotNeuralNet) but you can now just run your network to plot everything automatically. For examples see `./examples`.\n\n- [Pytorch2Tikz](#pytorch2tikz)\n  - [Example](#example)\n  - [Getting Started](#getting-started)\n  - [Interface](#interface)\n    - [Architecture](#architecture)\n      - [Methods](#methods)\n      - [Methods](#methods-1)\n    - [Block](#block)\n    - [Arguments](#arguments)\n  - [Contributions](#contributions)\n    - [Layer support](#layer-support)\n    - [Custom Connection](#custom-connection)\n    - [Colors](#colors)\n\n\n## Example\n\n```python\nfrom pytorch2tikz import Architecture\n\nprint('Load model')\nmodel = vgg16(True)\n\nprint('Load data')\n...\n\nprint('Init architecture')\narch = Architecture(model)\n\nprint('Run model')\nwith torch.inference_mode():\n    for image, _ in data_loader:\n        image = image.to(device, non_blocking=True)\n        output = model(image)\n\nprint('Write result to out.tex')\narch.save('out.tex')\n```\n\n## Getting Started\n```\npip install pytorch2tikz\n```\n\n## Interface\n\n### Architecture\n\n```python\nArchitecture(module: nn.Module,\n            block_offset=8,\n            height_depth_factor=0.8,\n            width_factor=0.8,\n            linear_factor=0.8,\n            image_path='./input_{i}.png',\n            ignore_layers=['batchnorm', 'flatten'],\n            colors=COLOR_VALUES)\n```\n\n#### Methods\nArgument | description\n---------|-------------\n`module` | is the Model to plot\n`block_offset` | offset to the next block; A block is created when the input dimensions change\n`height_depth_factor` | scale the change of the next layer (last 2 dimensions); typically used to make the network a bit more compact\n`width_factor` | scale the change of the next layer (first dimension); typically used to make the network a bit more compact\n`linear_factor` | used when there is a drastic change in the last dimension (e.g. moving from conv to linear layers)\n`image_path` | output path for recognized input images. `{i}` gets replaced by the current layer index\n`ignore_layers` | define layers that should not be plotted. This can be a list of any substring of the `type(class)` (e.g. torch.nn.modules.batchnorm.BatchNorm)\n`colors` | enum of colors. For an example check out `./pytorch2tikz/constants`\n\n#### Methods\n```python\ndef get_block(self, name: str) -> Block:\n    ...\n```\n\nget a specific block to alter its properties\n\n```python\ndef get_tex(self) -> str:\n    ...\n```\n\ngenerate the tex code\n\n```python\n    \ndef save(self, file_path: str):\n    ...\n```\n\ngenerate and save the tex code to the given path\n\n### Block\n\n```python\nBlock(name,\n    fill: COLOR = COLOR.LINEAR,\n    bandfill: COLOR = None,\n    pictype = PICTYPE.BOX,\n    opacity = 0.7,\n    size = (10,40,40),\n    default_size = DEFAULT_VALUE,\n    dim = 3,\n    scale_factor = np.zeros(3),\n    offset: Tuple[int] = (0,0,0),\n    to: Union[Tuple[int], Block] = (0,0,0),\n    caption = \" \",\n    xlabel = True,\n    ylabel = False,\n    zlabel = True)\n```\n\n### Arguments\n\nArgument | Description\n---------|------------\n`name`   | arbitrary name of the block. Should be unique, and typically the layers id is used\n`fill`   | filling color as hex string, e.g. `#000000`\n`bandfill`| filling of subcolor at the right end of a box. `pictype` should be `PICTYPE.RIGHTBANDEDBOX` ot be displayed\n`pictype` | one of [`PICTYPE.BOX`, `PICTYPE.RIGHTBANDEDBOX`]\n`opacity` | opacity of the filling\n`size`    | size of the box\n`default_size` | Size used for dimensions which are \"flat\": e.g. for 1D inputs the size (default, default, size) is used.\n`dim`     | dimensionality of the block, e.g. 1 for Linear layers, 3 for conv2d layers (channels x dim1 x dim2)\n`scale_factor` | scale factors to alter the size when outputting tex to make the figure more compact\n`offset` | offset to the references position/block in `to`\n`to`     | position tuple or block used for relative positioning\n`capition`| caption of the block. Use an empty string if no caption is wanted\n`xlabel` | display label for 1st dimension\n`ylabel` | display label for 2nd dimension\n`zlabel` | display label for 3nd dimension\n\n## Contributions\n\nThank you for share your improvements to this package!\n\n### Layer support\nPlease don't hesitate to add blocks for unsupported layers under `pytorch2tikz/block/D<x>.py` with `x` being the dimensionality of your layer. If your layer exists for multiple dimensions, choose `Dn.py`:\n\n1. add your block definition under `pytorch2tikz/block/D<x>.py`\n2. add mapping of type string to `pytorch2tikz/mapping.py`\n3. add your color to `pytorch2tikz/constants.py` (see `Colors`)\n\n### Custom Connection\nFor custom connections that can be added in postprocessing of an architecture like residual connections, add your desired connection in `pytorch2tikz/block/connections.py`. See the examples there as a guidance. For existing connections there are a bunch of defined positions for each block:\n\n![](docs/landmarks.png)\n\nEach position can be combined with `(padding-)(near|far)(north|south)(east|west)`.\n\n### Colors\n\nColors are defined in `pytorch2tikz/constants.py`. For each color there must exist an entry in the enum `COLOR` and the defined value in the Dict `COLOR_VALUES`. Make sure your color is easily distinguishable from other layers.",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": null,
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": null,
            "keywords": null,
            "license": null,
            "maintainer": null,
            "maintainer_email": null,
            "name": "pytorch2tikz",
            "package_url": "https://pypi.org/project/pytorch2tikz/",
            "platform": null,
            "project_url": "https://pypi.org/project/pytorch2tikz/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/pytorch2tikz/1.0.2/",
            "requires_dist": null,
            "requires_python": null,
            "summary": "Simple tool to generate a tikz figure of a pytorch module by executing it.",
            "version": "1.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15839134,
        "urls": [
            {
                "comment_text": null,
                "digests": {
                    "md5": "ae171f6e191749cbb529067d95b0c94c",
                    "sha256": "0c49307393c51bb025e692c738084b061d944286d1ba9b3bbaa68ed941048774"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.2-py2.py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "ae171f6e191749cbb529067d95b0c94c",
                "packagetype": "bdist_wheel",
                "python_version": "py2.py3",
                "requires_python": null,
                "size": 30170,
                "upload_time": "2022-11-21T11:36:12",
                "upload_time_iso_8601": "2022-11-21T11:36:12.037824Z",
                "url": "https://files.pythonhosted.org/packages/38/d9/34815e4d2cf9d94d435caa06076ac5b4cbada89460954f15f7cfa050d8cf/pytorch2tikz-1.0.2-py2.py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": null,
                "digests": {
                    "md5": "c463e82277c502b0881581de23e025c0",
                    "sha256": "89332a78a31b0c740b3a04a640aa307e29155cd9a78c119488b8260389c41400"
                },
                "downloads": -1,
                "filename": "pytorch2tikz-1.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "c463e82277c502b0881581de23e025c0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 206257,
                "upload_time": "2022-11-21T11:36:16",
                "upload_time_iso_8601": "2022-11-21T11:36:16.769318Z",
                "url": "https://files.pythonhosted.org/packages/5e/2e/e483acb4892a3dd4ee9c9c74583eda843a51aa18907b8c0e187cdf72a98b/pytorch2tikz-1.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}