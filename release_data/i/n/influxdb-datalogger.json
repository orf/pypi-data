{
    "1.0.0": {
        "info": {
            "author": "Calle Holst",
            "author_email": "calle.holst@dataductus.se",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/dataductus/influxdb-datalogger",
            "keywords": "",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "influxdb-datalogger",
            "package_url": "https://pypi.org/project/influxdb-datalogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/influxdb-datalogger/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/dataductus/influxdb-datalogger"
            },
            "release_url": "https://pypi.org/project/influxdb-datalogger/1.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package that assists with logging data from a test and writing it to a database like InfluxDB.",
            "version": "1.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14775579,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2a46593f0fce11b346937ec8b33f48e5",
                    "sha256": "54513b89d40270e6878f99ed0ac3432bc076572ab30b075bf6d6b1f9d6e7af6e"
                },
                "downloads": -1,
                "filename": "influxdb_datalogger-1.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2a46593f0fce11b346937ec8b33f48e5",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15889,
                "upload_time": "2022-06-20T12:07:59",
                "upload_time_iso_8601": "2022-06-20T12:07:59.849629Z",
                "url": "https://files.pythonhosted.org/packages/fe/34/5969491583dfc4b71db786557a8b05016fd7a9cde89d8a60e4d452070050/influxdb_datalogger-1.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "214c154c48f2a5ee8d1c5a74a9b69403",
                    "sha256": "e8a4b0047028b067781bcef36e7de233f96ee7f5c7f5c5a6e5d60c8c6daa7324"
                },
                "downloads": -1,
                "filename": "influxdb-datalogger-1.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "214c154c48f2a5ee8d1c5a74a9b69403",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17698,
                "upload_time": "2022-06-20T12:08:03",
                "upload_time_iso_8601": "2022-06-20T12:08:03.493691Z",
                "url": "https://files.pythonhosted.org/packages/7a/fc/6200ee696afacf15fc73eb31c6f028284e091c78ea3b5982e39428ce1e34/influxdb-datalogger-1.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "1.1.0": {
        "info": {
            "author": "Calle Holst",
            "author_email": "calle.holst@dataductus.se",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/dataductus/influxdb-datalogger",
            "keywords": "",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "influxdb-datalogger",
            "package_url": "https://pypi.org/project/influxdb-datalogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/influxdb-datalogger/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/dataductus/influxdb-datalogger"
            },
            "release_url": "https://pypi.org/project/influxdb-datalogger/1.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package that assists with logging data from a test and writing it to a database like InfluxDB.",
            "version": "1.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14775579,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4bc2cf08edbb6404957634671e22fdce",
                    "sha256": "861e97c006614afb9c307b5f13b9ffb11216dde7d4382e890382ccf6e252262c"
                },
                "downloads": -1,
                "filename": "influxdb_datalogger-1.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4bc2cf08edbb6404957634671e22fdce",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15901,
                "upload_time": "2022-08-03T10:26:15",
                "upload_time_iso_8601": "2022-08-03T10:26:15.001324Z",
                "url": "https://files.pythonhosted.org/packages/ba/7d/34dc2b8f70e2add69a631a13c7309fd6cae983d55ce8dc643f7116c7098e/influxdb_datalogger-1.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "a8731d9e258da2d8a0141e221984f887",
                    "sha256": "1ed628d1224924b86de1391be708af441ef30d69e0b35ee6be9f36d1ad3cd79f"
                },
                "downloads": -1,
                "filename": "influxdb-datalogger-1.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "a8731d9e258da2d8a0141e221984f887",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17715,
                "upload_time": "2022-08-03T10:26:16",
                "upload_time_iso_8601": "2022-08-03T10:26:16.989543Z",
                "url": "https://files.pythonhosted.org/packages/99/e5/6fcf72e614756a763ee8f30d73e81b5a0ddffd744ce01740aafdabfc101e/influxdb-datalogger-1.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.0": {
        "info": {
            "author": "Calle Holst",
            "author_email": "calle.holst@dataductus.se",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/dataductus/influxdb-datalogger",
            "keywords": "",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "influxdb-datalogger",
            "package_url": "https://pypi.org/project/influxdb-datalogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/influxdb-datalogger/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/dataductus/influxdb-datalogger"
            },
            "release_url": "https://pypi.org/project/influxdb-datalogger/2.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package that assists with logging data from a test and writing it to a database like InfluxDB.",
            "version": "2.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14775579,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "4e1412ea41b1c32dfd6c15a19c94adea",
                    "sha256": "70a0388042b0e770c133414391d83cee89255642ab71a51097a34bbef138c61c"
                },
                "downloads": -1,
                "filename": "influxdb_datalogger-2.0.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "4e1412ea41b1c32dfd6c15a19c94adea",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15895,
                "upload_time": "2022-08-03T10:39:44",
                "upload_time_iso_8601": "2022-08-03T10:39:44.718535Z",
                "url": "https://files.pythonhosted.org/packages/e5/91/5b528b8cac1009e19dc8e601cef45a556199d5eaafe894dcf6aaf28c281a/influxdb_datalogger-2.0.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "e24aec8dffa84b2ef813606e8820007d",
                    "sha256": "c7e3f37dc315c0b97dfc123e974b49824cb3c074a8470960946dcab690c97835"
                },
                "downloads": -1,
                "filename": "influxdb-datalogger-2.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "e24aec8dffa84b2ef813606e8820007d",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17705,
                "upload_time": "2022-08-03T10:39:46",
                "upload_time_iso_8601": "2022-08-03T10:39:46.944100Z",
                "url": "https://files.pythonhosted.org/packages/bf/84/0361c29c5e32b65fc33809640a73695f29d58d1df2a83594206d693808fa/influxdb-datalogger-2.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Calle Holst",
            "author_email": "calle.holst@dataductus.se",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/dataductus/influxdb-datalogger",
            "keywords": "",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "influxdb-datalogger",
            "package_url": "https://pypi.org/project/influxdb-datalogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/influxdb-datalogger/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/dataductus/influxdb-datalogger"
            },
            "release_url": "https://pypi.org/project/influxdb-datalogger/2.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package that assists with logging data from a test and writing it to a database like InfluxDB.",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14775579,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "300ac02a1fd9218210bb7624791fa05b",
                    "sha256": "e84746ed06604040ea78350194d5327b328f729dc1e53382dd518c0752cd8b41"
                },
                "downloads": -1,
                "filename": "influxdb_datalogger-2.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "300ac02a1fd9218210bb7624791fa05b",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 15895,
                "upload_time": "2022-08-03T12:01:28",
                "upload_time_iso_8601": "2022-08-03T12:01:28.550666Z",
                "url": "https://files.pythonhosted.org/packages/02/8d/e40b9f8fe38ef7115d5ab213adb446a98044175f8bcdd45e881e4298bf45/influxdb_datalogger-2.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "8826a8ecd9a74853cc3435f75bafa95c",
                    "sha256": "6865a17caee9a9ff5806ea6125458e0f3cfa36dc0a04974962540c335ecc911c"
                },
                "downloads": -1,
                "filename": "influxdb-datalogger-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "8826a8ecd9a74853cc3435f75bafa95c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 17811,
                "upload_time": "2022-08-03T12:01:31",
                "upload_time_iso_8601": "2022-08-03T12:01:31.222907Z",
                "url": "https://files.pythonhosted.org/packages/74/64/cf114e4d53fa354df82054bc6a4d39b6bcbb7c9327f6df546199c924ae7d/influxdb-datalogger-2.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.1.0": {
        "info": {
            "author": "Calle Holst",
            "author_email": "calle.holst@dataductus.se",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: Apache Software License",
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.8"
            ],
            "description": "# InfluxDB datalogger\nThis package is used to log data in a format that matches the format that InfluxDB uses. \n\n## DatabaseWriter\nThe datalogger comes with an abstract class called `DatabaseWriter`. You need to create a class that inherits from this class and implements the function `write_data`. An object of this type is then used to create a datalogger object. \nThe purpose of this object is to write the actual data to the desired database.\n\nNote that whenever data is written to the database, the data that the datalogger has is completely purged because we don't want two calls to `write_data` to write duplicated data. \n\n### Example\nThe following example is from the tests in the repository\n```python\nclass DbWriter(influxdb_datalogger.DatabaseWriter):\n    def write_data(self, datalogger: influxdb_datalogger.DataLogger):\n        dataset = datalogger.dataset\n        if os.path.exists(DATA_FILE):\n            # If the file exists we are probably writing more than once in a test.\n            # Since DbWriter just writes to a JSON file we need to essentially append to the existing data, which is what this does.\n\n            loaded_dataset = json.load(open(DATA_FILE))\n            dataset = [*loaded_dataset, *dataset]\n        json.dump(dataset, open(DATA_FILE, \"w\"), indent=2)\n```\n\n## Measurements\nTo use this package, you need to pre-define some measurements and add `Field` and `Tag` objects to them.  \n\n## Fields\nYou need to define some fields to write data for. A good example of a field is `duration`.  \n\n## Tags\nYou don't have to define any tags to use the datalogger, but if you are going to take measurements that are taken with differing circumstances you   \n\n## Logging\nThere are different ways of logging data. This section will explore a few options to use.\n\n### Continuous write\nBy default, the datalogger doesn't call `write_data` on the database writers configured for the datalogger whenever data is logged. This means the user has to decide when the data is written to the database.\nIf you want the data to be written continuously, you may create the datalogger object using the variable `continuous_write=True`. This will write the data to the database whenever the function `log` is called.\nNote that this function is called inside both `measure` and `measure_block`. \n\n### `log`\nThe function `log` in the datalogger is the most basic way of logging the data. You will essentially make the measurements yourself. \nYou can use other functions that take the measurements for you if you want to measure durations. If you want to take other measurements, you'll need to use this function.  \n\n### `measure`\nThe function `measure` on the datalogger is meant to wrap an existing function and essentially execute it and measure the time it takes to run the function. \n\n#### Example\nThe following example is from the tests in the repository\n```python\nclass DbWriter(influxdb_datalogger.DatabaseWriter):\n    def write_data(self, datalogger: influxdb_datalogger.DataLogger):\n        dataset = datalogger.dataset\n        if os.path.exists(DATA_FILE):\n            # If the file exists we are probably writing more than once in a test.\n            # Since DbWriter just writes to a JSON file we need to essentially append to the existing data, which is what this does.\n\n            loaded_dataset = json.load(open(DATA_FILE))\n            dataset = [*loaded_dataset, *dataset]\n        json.dump(dataset, open(DATA_FILE, \"w\"), indent=2)\n\n\ndef test_measure():\n    f = influxdb_datalogger.Field(\"duration\")\n    t = influxdb_datalogger.Tag(\"identifier\")\n    m = influxdb_datalogger.Measurement(\"time-taken\", f, t)\n    tm = influxdb_datalogger.TagMap.build(t, \"test\")\n    datalogger = influxdb_datalogger.DataLogger(DbWriter())\n\n    def runner(arg1):\n        logger.info(f\"Taking measurement {m}: {arg1}\")\n\n    datalogger.measure(func=runner,\n                       measurement=m,\n                       field=f,\n                       tag_map=tm,\n                       logger=logger,\n                       log_start=f\"Starting {runner.__name__}\",\n                       log_end=f\"Finished {runner.__name__}\",\n                       args=(\"test\",))\n\n    assert m in datalogger._dataset, f\"Measurement {m} not in the dataset\"\n```\n\n### `measure_block`\nUnlike `measure`, this function leverages the `with` keyword in Python to measure a block of code that is executed within the scope. \n\n#### Example\nThe following example is from the tests in the repository\n```python\nclass DbWriter(influxdb_datalogger.DatabaseWriter):\n    def write_data(self, datalogger: influxdb_datalogger.DataLogger):\n        dataset = datalogger.dataset\n        if os.path.exists(DATA_FILE):\n            # If the file exists we are probably writing more than once in a test.\n            # Since DbWriter just writes to a JSON file we need to essentially append to the existing data, which is what this does.\n\n            loaded_dataset = json.load(open(DATA_FILE))\n            dataset = [*loaded_dataset, *dataset]\n        json.dump(dataset, open(DATA_FILE, \"w\"), indent=2)\n\ndef test_measure_block():\n    f = influxdb_datalogger.Field(\"duration\")\n    t = influxdb_datalogger.Tag(\"identifier\")\n    m = influxdb_datalogger.Measurement(\"time-taken\", f, t)\n    tm = influxdb_datalogger.TagMap.build(t, \"test\")\n    datalogger = influxdb_datalogger.DataLogger()\n    with datalogger.measure_block(m, f, tm):\n        logger.info(f\"Taking measurement {m}\")\n    \n    assert m in datalogger._dataset, f\"Measurement {m} not in the dataset\"\n    logger.info(datalogger._dataset)\n```\n\n### Events\nIt's possible to log events that happen which can essentially be used as event markers in something like Grafana to see when measurements are made that execute some code or runs some heavy processes.\n\nEvents may be written using the function `log_event` on the datalogger, but this is not recommended. `log_event` doesn't care about `continuous_write`, and it's also a lot more complicated to log the events manually. \nThe recommended way to use events is to use either `measure` or `measure_block`. \n\n#### Example\nThe following example is from the tests in the repository\n```python\nclass GrafanaEventWriter(influxdb_datalogger.DatabaseWriter):\n    def write_data(self, datalogger: influxdb_datalogger.DataLogger):\n        events = datalogger.events\n        events_to_write = list()\n        logger.info(events)\n        for event in events:\n            event: influxdb_datalogger.datalogger.Event\n            marker_data = dict(time=int(event.start * 1000), timeEnd=int(event.stop * 1000), tags=event.tag_map, text=event.measurement)\n            events_to_write.append(marker_data)\n\n        if os.path.exists(EVENT_FILE):\n            # If the file exists we are probably writing more than once in a test.\n            # Since DbWriter just writes to a JSON file we need to essentially append to the existing data, which is what this does.\n\n            loaded_events = json.load(open(EVENT_FILE))\n            events_to_write = [*loaded_events, *events_to_write]\n        json.dump(events_to_write, open(EVENT_FILE, \"w\"), indent=2)\n\ndef test_events():\n    f = influxdb_datalogger.Field(\"duration\")\n    t = influxdb_datalogger.Tag(\"identifier\")\n    h = influxdb_datalogger.Tag(\"hostname\")\n\n    m = influxdb_datalogger.Measurement(\"time-taken\", f, t)\n    etm = influxdb_datalogger.TagMap.build(h, socket.gethostname())\n\n    datalogger = influxdb_datalogger.DataLogger(DbWriter(), GrafanaEventWriter())\n\n    with datalogger.measure_block(m, f, influxdb_datalogger.TagMap.build(t, \"first\"), event_tags=etm):\n        logger.info(f\"Taking first measurement and logging events {m}\")\n\n    with datalogger.measure_block(m, f, influxdb_datalogger.TagMap.build(t, \"second\"), event_tags=etm):\n        logger.info(f\"Taking second measurement and logging events {m}\")\n\n    with datalogger.measure_block(m, f, influxdb_datalogger.TagMap.build(t, \"third\")):\n        logger.info(f\"Taking third measurement and NOT logging events {m}\")\n\n    self.assert_event_file_doesnt_exist()\n\n    datalogger.write_data()\n\n    loaded_events = self.load_events_from_event_file()\n    logger.info(loaded_events)\n    assert len(loaded_events) == 2\n```\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://bitbucket.org/dataductus/influxdb-datalogger",
            "keywords": "",
            "license": "Apache 2.0",
            "maintainer": "",
            "maintainer_email": "",
            "name": "influxdb-datalogger",
            "package_url": "https://pypi.org/project/influxdb-datalogger/",
            "platform": null,
            "project_url": "https://pypi.org/project/influxdb-datalogger/",
            "project_urls": {
                "Homepage": "https://bitbucket.org/dataductus/influxdb-datalogger"
            },
            "release_url": "https://pypi.org/project/influxdb-datalogger/2.1.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "A package that assists with logging data from a test and writing it to a database like InfluxDB.",
            "version": "2.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14775579,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9e39fa000ac555b46e7ffab5a7377502",
                    "sha256": "ff2a956c3cec5e984b0a924440b7a0efe7fe5787b02af0b9c10b452d9ef29c4b"
                },
                "downloads": -1,
                "filename": "influxdb_datalogger-2.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9e39fa000ac555b46e7ffab5a7377502",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": null,
                "size": 16583,
                "upload_time": "2022-08-16T11:11:05",
                "upload_time_iso_8601": "2022-08-16T11:11:05.384086Z",
                "url": "https://files.pythonhosted.org/packages/40/f9/f4badbdef99d519f9cbf7f8f11b2a5ba0684b902e76bd33a4a89899f6642/influxdb_datalogger-2.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "1667f05c4b7900bcdd1aee6ebac627ec",
                    "sha256": "2cc03ad73412b59205597dce241cb33d09034e51e0a8f8b706e739f3cdbb9224"
                },
                "downloads": -1,
                "filename": "influxdb-datalogger-2.1.0.tar.gz",
                "has_sig": false,
                "md5_digest": "1667f05c4b7900bcdd1aee6ebac627ec",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 18557,
                "upload_time": "2022-08-16T11:11:08",
                "upload_time_iso_8601": "2022-08-16T11:11:08.247026Z",
                "url": "https://files.pythonhosted.org/packages/7a/7a/4394fd24a43e8e7ec53619adb71fc01b252a0a60239bd158736664cf4794/influxdb-datalogger-2.1.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}