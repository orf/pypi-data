{
    "2.0": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "80b1a6e1d0c0fdd54f12da5d6e8e39a8",
                    "sha256": "7cc95836b1de55acf7cb377ebc65e0e2c18d4eac6898694589468fbb80abab28"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.0.tar.gz",
                "has_sig": false,
                "md5_digest": "80b1a6e1d0c0fdd54f12da5d6e8e39a8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 22307,
                "upload_time": "2021-10-03T10:11:42",
                "upload_time_iso_8601": "2021-10-03T10:11:42.167106Z",
                "url": "https://files.pythonhosted.org/packages/46/ef/77815e74e0a4dddc56f46d5c3de64bb68a11bf3f8717684f97ea50970405/scratchconnect-2.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.0.1": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.0.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "7ebad4acf88d8fd17ff11450a743c4f5",
                    "sha256": "83ae0fdf048544f47f21ea54133b6aa3ca647a89edb985cb130f7446b78e8a32"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "7ebad4acf88d8fd17ff11450a743c4f5",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 22039,
                "upload_time": "2021-10-10T13:02:09",
                "upload_time_iso_8601": "2021-10-10T13:02:09.646747Z",
                "url": "https://files.pythonhosted.org/packages/93/39/b0caa499aee63923dc1d9288de47ae4bb7c68c697df103a8c52e74c0cd9b/scratchconnect-2.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.1": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b624a4b8fe71238f3aa698ffdd83a9a8",
                    "sha256": "e91dc74b3e0e1103eb5a8d7992dacae671bb493d8e2889ea99039237e55a054a"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.1.tar.gz",
                "has_sig": false,
                "md5_digest": "b624a4b8fe71238f3aa698ffdd83a9a8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 22222,
                "upload_time": "2021-10-11T14:13:23",
                "upload_time_iso_8601": "2021-10-11T14:13:23.516369Z",
                "url": "https://files.pythonhosted.org/packages/ea/97/10021aaf253a8a84c83e511bb879c797c0c7ba6f64a4914880c9767189c4/scratchconnect-2.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.3": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.3/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.3",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e635e62b8ad1d340cc89b70fdd6231c2",
                    "sha256": "9e9600e7198aca52f1707256a33d680b80f1968730b8e0e2c92cf5318b99cf31"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.3.tar.gz",
                "has_sig": false,
                "md5_digest": "e635e62b8ad1d340cc89b70fdd6231c2",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 28570,
                "upload_time": "2021-11-25T11:02:08",
                "upload_time_iso_8601": "2021-11-25T11:02:08.819893Z",
                "url": "https://files.pythonhosted.org/packages/ef/0c/2d020c1d9c3218b03c331d3b3d3866fe840ec256fd91d12a23f509c94437/scratchconnect-2.3.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bae8e11b5332336fd64eedb35381c10a",
                    "sha256": "4d9041926cac98a29fae692520a5dfc15f31545ad03f89eb1385a8913301097d"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.4.tar.gz",
                "has_sig": false,
                "md5_digest": "bae8e11b5332336fd64eedb35381c10a",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 30871,
                "upload_time": "2021-12-24T12:52:35",
                "upload_time_iso_8601": "2021-12-24T12:52:35.334302Z",
                "url": "https://files.pythonhosted.org/packages/6d/a0/a9dc4654b6aa372456c22bfe0eae970827a830752f727fcfdaefe4a75416/scratchconnect-2.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.1": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.4.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.4.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "f8e717aa279df95da2343a927ccf13cb",
                    "sha256": "75898e60b48e0f82383d0405f9b7877811917013f49516ccbdffac06a374e533"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.4.1.tar.gz",
                "has_sig": false,
                "md5_digest": "f8e717aa279df95da2343a927ccf13cb",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 31082,
                "upload_time": "2022-01-09T11:57:03",
                "upload_time_iso_8601": "2022-01-09T11:57:03.821818Z",
                "url": "https://files.pythonhosted.org/packages/c1/ea/31021bff04bb6de26d6898880aa66c720cd89884d26527ece091143d41af/scratchconnect-2.4.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.4.2": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": "",
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.4.2/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.4.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "69da2b7120803e42353b1ef37055f036",
                    "sha256": "d99663ba884e07c2be9db4932aeded7faf5a6333b6b1a60e9dcc6de3c59535b1"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.4.2.tar.gz",
                "has_sig": false,
                "md5_digest": "69da2b7120803e42353b1ef37055f036",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 31084,
                "upload_time": "2022-01-25T11:55:01",
                "upload_time_iso_8601": "2022-01-25T11:55:01.675859Z",
                "url": "https://files.pythonhosted.org/packages/22/bb/97d23193726143dd0aae4f6cfdb7844e1f4d29623a7ea553f88830ce3013/scratchconnect-2.4.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.5": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.5/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "6a6d9a101040c91edb11ed18dc56360f",
                    "sha256": "fe7334ff4de0dbacba0fd7777d3d3ac418231a4eee1eed9e3ae25cdbbb261a5e"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.5.tar.gz",
                "has_sig": false,
                "md5_digest": "6a6d9a101040c91edb11ed18dc56360f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 32692,
                "upload_time": "2022-03-16T08:44:59",
                "upload_time_iso_8601": "2022-03-16T08:44:59.323144Z",
                "url": "https://files.pythonhosted.org/packages/19/ea/45fe6edb3e621b964e8ef776cd03fc957a0faec42e0165949c5aa03b9559/scratchconnect-2.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "2.6": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api scratch",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/2.6/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "2.6",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bd5e72e10d3942d5eb8590535f932f1c",
                    "sha256": "fd823f51627da57cefdcfdbe5fba7502e85f87044508395990175cfb14cf7c8e"
                },
                "downloads": -1,
                "filename": "scratchconnect-2.6.tar.gz",
                "has_sig": false,
                "md5_digest": "bd5e72e10d3942d5eb8590535f932f1c",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 34007,
                "upload_time": "2022-03-27T09:30:35",
                "upload_time_iso_8601": "2022-03-27T09:30:35.682909Z",
                "url": "https://files.pythonhosted.org/packages/e2/ed/96809611ef808807e1a9f120186dc16b35c0638ab69e92886412e79807bc/scratchconnect-2.6.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "3.0": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect-scratch scratch-api api scratch",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/3.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "3.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "bbc12ec1bb898e2d01abd0c1ba566181",
                    "sha256": "efe4498262c6e63ac275d69df36c08f1cb1d83e9cfed1590aec889e371474b5a"
                },
                "downloads": -1,
                "filename": "scratchconnect-3.0.tar.gz",
                "has_sig": false,
                "md5_digest": "bbc12ec1bb898e2d01abd0c1ba566181",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 43465,
                "upload_time": "2022-04-17T11:03:55",
                "upload_time_iso_8601": "2022-04-17T11:03:55.917480Z",
                "url": "https://files.pythonhosted.org/packages/ac/e1/caa6bda307d073411be59c3458c5888d148aab8feb1b0ac16510acd0868e/scratchconnect-3.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "3.1": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect scratch,scratch api,api,scratch,bot,scratch bot,scratch cloud,scratch cloud variables,scratch data,scratch stats",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/3.1/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "3.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "e191c067a6ae757c0818b4912589ca7f",
                    "sha256": "aec9a7bb356c96a3f49d286c23805f211638d3233e109887a189cb55e513bb95"
                },
                "downloads": -1,
                "filename": "scratchconnect-3.1.tar.gz",
                "has_sig": false,
                "md5_digest": "e191c067a6ae757c0818b4912589ca7f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 43910,
                "upload_time": "2022-05-12T11:02:46",
                "upload_time_iso_8601": "2022-05-12T11:02:46.677925Z",
                "url": "https://files.pythonhosted.org/packages/5e/54/ac2081364123e01fa8ff7e3f446120763b7998a03cef49c94dff6863cb15/scratchconnect-3.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "3.4": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect scratch,scratch api,api,scratch,bot,scratch bot,scratch cloud,scratch cloud variables,scratch data,scratch stats",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/3.4/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "3.4",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "c1eb9e144aab17ed93d7d259c2121cfe",
                    "sha256": "72b6c6c0013027faf23e055798fe161de9ad2c7c0e1e4634a4ffd6fedc74a000"
                },
                "downloads": -1,
                "filename": "scratchconnect-3.4.tar.gz",
                "has_sig": false,
                "md5_digest": "c1eb9e144aab17ed93d7d259c2121cfe",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 44528,
                "upload_time": "2022-06-11T12:40:30",
                "upload_time_iso_8601": "2022-06-11T12:40:30.792048Z",
                "url": "https://files.pythonhosted.org/packages/f6/33/a5128b17796959d0ac12e195a17c116569256c849f080877fcfd72b50d6c/scratchconnect-3.4.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "4.0.0": {
        "info": {
            "author": "Siddhesh Chavan",
            "author_email": "siddheshchavan2020@gmail.com",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 5 - Production/Stable",
                "Intended Audience :: Education",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "# ScratchConnect v4.0.0\r\n\r\nPython Library to connect Scratch API and much more.\r\n\r\nThis library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a\r\nproject!\r\n\r\n**This library needs a Scratch account. Visit the Scratch Website: [https://scratch.mit.edu/](https://scratch.mit.edu/)\r\nYou also need to have the Python programming language installed on your computer.**\r\n\r\n**You need basic knowledge of Python. Using this library without the knowledge can be risky.**\r\n\r\n![Python](https://img.shields.io/badge/Python-FFD43B?style=for-the-badge&logo=python&logoColor=blue&color=black)\r\n\r\n![PyPI](https://img.shields.io/pypi/v/scratchconnect)\r\n[![Package Status](https://img.shields.io/pypi/status/scratchconnect)](https://pypi.org/project/scratchconnect/)\r\n![PyPI - Downloads](https://img.shields.io/pypi/dm/scratchconnect)\r\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/sid72020123/scratchconnect)\r\n\r\n### Installation\r\n\r\nTo install this library, just type ```pip install scratchconnect``` in the terminal (Command Prompt)\r\n\r\n**OR**\r\n\r\nRun this Python program\r\n\r\n```python\r\nimport os\r\n\r\nos.system('pip install scratchconnect')\r\n```\r\n\r\n**If you still have troubles while installing then go\r\nto [this link](https://packaging.python.org/tutorials/installing-packages/)**\r\n\r\n### Documentation\r\n\r\nDocumentation is taking a bit longer to make. It will be ready soon...\r\n\r\n### Data Credits:\r\n\r\nThese are the people who made the APIs so that this library can take data:\r\n\r\n* [Scratch API](https://github.com/LLK/scratch-rest-api) by the Scratch Team\r\n* [Scratch DB](https://scratchdb.lefty.one/) by [@DatOneLefty](https://scratch.mit.edu/users/DatOneLefty/) on Scratch\r\n* [Scratch Comments API](https://github.com/Sid72020123/Scratch-Comments-API)\r\n  by  [@Sid72020123](https://scratch.mit.edu/users/Sid72020123/) on Scratch\r\n* [Simple Forum API](https://github.com/Sid72020123/Scratch-Forum)\r\n  by [@Sid72020123](https://scratch.mit.edu/users/Sid72020123/) on Scratch\r\n* [Ocular API](https://ocular.jeffalo.net/) by [@Jeffalo](https://scratch.mit.edu/users/Jeffalo/) on Scratch\r\n* [Aviate API](https://aviateapp.eu.org/) by [@NFlex23](https://scratch.mit.edu/users/NFlex23/) on Scratch\r\n\r\n```\r\nI thank all these people.\r\n- Owner (Sid72020123)\r\n```\r\n\r\n### Creating a Simple Connection:\r\n\r\nFollowing is a simple program to make a simple connection:\r\n\r\n**Note: Don't put the username and password as it is when you host or share the code with others. While hosting, you can\r\nuse environment variables and while sharing, you can remove the username and password values. This will help in keeping\r\nthe password and other important things secured.**\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n```\r\n\r\nIt will give an error if the `username` or `password` is invalid.\r\n\r\n### More Uses:\r\n\r\n##### Note: Some of the functions below can be only used by the logged in Scratcher. To get the stats of other users see the User Connection Documentation\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nuser.id()  # Returns the ID of the user\r\nuser.thumbnail_url()  # Returns the thumbnail URL of a user\r\nuser.messages_count()  # Returns the messages count of the user\r\nuser.messages(all=False, limit=20, offset=0, filter=\"all\")  # Returns the messages\r\nuser.clear_messages()  # Clear your messages\r\nuser.my_stuff_projects(order=\"all\", page=1, sort_by=\"\")  # Get/Sort mystuff projects\r\nuser.work()  # Returns the 'What I am working on' of a Scratch profile\r\nuser.bio()  # Returns the 'About me' of a Scratch profile\r\nuser.status()  # Returns the status(Scratcher or New Scratcher) of a Scratch profile\r\nuser.joined_date()  # Returns the joined date of a Scratch profile\r\nuser.country()  # Returns the country of a Scratch profile\r\nuser.featured_data()  # Returns the featured project data of the Scratch profile\r\nuser.projects()  # Returns the list of shared projects of a user\r\nuser.followers_count()  # Returns the follower count of a user\r\nuser.following_count()  # Returns the following count of a user\r\nuser.total_views()  # Returns the total views count of all the shared projects of a user\r\nuser.total_loves_count()  # Returns the total loves count of all the shared projects of a user\r\nuser.total_favourites_count()  # Returns the total favourites count of all the shared projects of a user\r\nuser.following()  # Returns the list of the user following\r\nuser.followers()  # Returns the list of the user followers\r\nuser.favourites()  # Returns the list of the user favourites\r\nuser.toggle_commenting()  # Toggle the commenting of the profile\r\nuser.follow_user(username=\"Sid72020123\")  # Follow a user\r\nuser.unfollow_user(username=\"Sid72020123\")  # UnFollow a user\r\nuser.set_bio(content=\"Hi!\")  # Set the bio or 'About Me' of the profile\r\nuser.set_work(content=\"Hi!\")  # Set the status or 'What I am Working On' of the profile\r\nuser.all_data()  # Returns all the data of the user\r\nuser.site_health()  # Returns the health of the Scratch Website.\r\nuser.site_news()  # Returns the news of the Scratch Website.\r\nuser.site_front_page_projects()  # Returns the front page projects of the Scratch Website.\r\nuser.explore_projects(mode=\"trending\", query=\"*\")  # Explore the projects\r\nuser.explore_studios(mode=\"trending\", query=\"*\")  # Explore the studios\r\nuser.search_projects(mode=\"trending\", search=\"*\")  # Search the projects\r\nuser.search_studios(mode=\"trending\", search=\"*\")  # Search the studios\r\nuser.set_featured_project(project_id=\"1\", label='featured_project')  # Set the 'Featured Project' of a Scratch Profile\r\nuser.user_follower_history()  # Return the follower history of the user\r\nuser.comments(limit=5, page=1)  # Get comments of the profile of the user\r\nuser.ocular_data()  # Returns the ocular data of the user\r\nuser.aviate_data(code=False)  # Returns the Aviate Status of the user\r\nuser.search_forum(q=\"Hi!\", order=\"relevance\", page=0)  # Search the forum\r\n##########################################################################\r\n# IMPORTANT NOTE: To always get the updated data use the update_data() function\r\n##########################################################################\r\nuser.update_data()  # Update the data\r\n```\r\n\r\n### Connect a Scratch User:\r\n\r\nTo connect a Scratch User use the `connect_user()` function. Use the following program to connect a Scratch User:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nuser = login.connect_user(username=\"Sid72020123\")\r\nuser.id()  # Returns the ID of the user\r\nuser.thumbnail_url()  # Returns the thumbnail URL of a user\r\nuser.messages_count()  # Returns the messages count of the user\r\nuser.work()  # Returns the 'What I am working on' of a Scratch profile\r\nuser.bio()  # Returns the 'About me' of a Scratch profile\r\nuser.status()  # Returns the status(Scratcher or New Scratcher) of a Scratch profile\r\nuser.joined_date()  # Returns the joined date of a Scratch profile\r\nuser.country()  # Returns the country of a Scratch profile\r\nuser.featured_data()  # Returns the featured project data of the Scratch profile\r\nuser.projects()  # Returns the list of shared projects of a user\r\nuser.followers_count()  # Returns the follower count of a user\r\nuser.following_count()  # Returns the following count of a user\r\nuser.total_views_count()  # Returns the total views count of all the shared projects of a user\r\nuser.total_loves_count()  # Returns the total loves count of all the shared projects of a user\r\nuser.total_favourites_count()  # Returns the total favourites count of all the shared projects of a user\r\nuser.following()  # Returns the list of the user following\r\nuser.followers()  # Returns the list of the user followers\r\nuser.favourites()  # Returns the list of the user favourites\r\nuser.user_follower_history()  # Return the follower history of the user\r\nuser.post_comment(content=\"Hi!\")  # Post a comment on the user's profile\r\nuser.report(field=\"\")  # Report a user\r\nuser.reply_comment(content=\"Hi!\", comment_id=1)  # Reply a comment\r\nuser.all_data()  # Returns all the data of the user\r\nuser.comments(limit=5, page=1)  # Get comments of the profile of the user\r\nuser.ocular_data()  # Returns the ocular data of the user\r\nuser.aviate_data(code=False)  # Returns the Aviate Status of the user\r\n##########################################################################\r\n# IMPORTANT NOTE: To always get the updated data use the update_data() function\r\n##########################################################################\r\nuser.update_data()  # Update the data\r\n```\r\n\r\n### Connect a Scratch Studio:\r\n\r\nTo connect a Scratch Studio use the `connect_studio()` function. Use the following program to connect a Scratch Studio:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nstudio = user.connect_studio(studio_id=1)\r\nstudio.id()  # Returns the studio ID\r\nstudio.title()  # Returns the studio title\r\nstudio.host_id()  # Returns the studio owner/host ID\r\nstudio.description()  # Returns the studio description\r\nstudio.visibility()  # Returns the studio visibility\r\nstudio.is_public()  # Returns whether a studio is public\r\nstudio.is_open_to_all()  # Returns whether a studio is open to all\r\nstudio.are_comments_allowed()  # Returns whether a studio has comments allowed\r\nstudio.history()  # Returns the history of the studio\r\nstudio.stats()  # Returns the stats of the studio\r\nstudio.thumbnail_url()  # Returns the thumbnail URL of the studio\r\nstudio.add_project(project_id=1)  # Add a project to a studio\r\nstudio.remove_project(project_id=1)  # Remove a project from a studio\r\nstudio.open_to_public()  # Open the studio to public\r\nstudio.close_to_public()  # Close the studio to public\r\nstudio.follow_studio()  # Follow the studio\r\nstudio.unfollow_studio()  # UnFollow the studio\r\nstudio.toggle_commenting()  # Toggle the commenting of the studio\r\nstudio.post_comment(content=\"Hi!\")  # Post comment in the studio\r\nstudio.reply_comment(content=\"Hi!\", comment_id=1)  # Reply a comment in a studio\r\nstudio.delete_comment()  # Delete comment in the studio\r\nstudio.report_comment(comment_id=1)  # Report comment in the studio\r\nstudio.invite_curator(username=\"Sid72020123\")  # Invite a user to the studio\r\nstudio.accept_curator()  # Accept the curator invitation in a studio\r\nstudio.promote_curator(username=\"Sid72020123\")  # Promote a user in the studio\r\nstudio.set_description(content=\"Hi!\")  # Set the description of a Studio\r\nstudio.set_title(content=\"Hi!\")  # Set the title of a Studio\r\nstudio.projects(all=False, limit=40, offset=0)  # Get the projects of the studio\r\nstudio.comments(all=False, limit=40, offset=0)  # Get the comments of the studio\r\nstudio.curators(all=False, limit=40, offset=0)  # Get the curators of the studio\r\nstudio.managers(all=False, limit=40, offset=0)  # Get the managers of the studio\r\nstudio.activity(all=False, limit=40, offset=0)  # Get the activity of the studio\r\nstudio.all_data()  # Returns all the data of a Scratch Studio\r\n##########################################################################\r\n# IMPORTANT NOTE: To always get the updated data use the update_data() function\r\n##########################################################################\r\nstudio.update_data()  # Update the data\r\n```\r\n\r\n### Connect a Scratch Project:\r\n\r\nTo connect a Scratch Project use the `connect_project()` function. Use the following program to connect a Scratch\r\nProject:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = user.connect_project(project_id=1)  # Connect a project.\r\nproject.author()  # Returns the author of the project\r\nproject.title()  # Returns the title of the project\r\nproject.notes()  # Returns the notes(Notes or Credits) of the project\r\nproject.instruction()  # Returns the instructions of the project\r\nproject.are_comments_allowed()  # Returns whether the comments are allowed in a project\r\nproject.stats()  # Returns the stats of a project\r\nproject.history()  # Returns the history of a project\r\nproject.remix_data()  # Returns the remix data of a project\r\nproject.visibility()  # Returns whether the project is visible\r\nproject.is_public()  # Returns whether the project is public\r\nproject.is_published()  # Returns whether the project is published\r\nproject.thumbnail_url()  # Returns the thumbnail url of a project\r\nproject.assets_info()  # Returns the Assets info of a project\r\nproject.scripts()  # Returns the scripts of a project\r\nproject.love()  # Love a project\r\nproject.unlove()  # UnLove a project\r\nproject.favourite()  # Favourite a project\r\nproject.unfavourite()  # UnFavourite a project\r\nproject.comments(all=False, limit=40, offset=0, comment_id=None)  # Returns the list of comments of a project\r\nproject.remixes(all=False, limit=20, offset=0)  # Returns the list of remixes of a project\r\nproject.post_comment(content=\"Hi!\")  # Post a comment\r\nproject.reply_comment(content=\"Hi!\", comment_id=1)  # Reply a comment\r\nproject.toggle_commenting()  # Toggle the commenting of a project\r\nproject.turn_on_commenting()  # Turn On the commenting of a project\r\nproject.turn_off_commenting()  # Turn Off the commenting of a project\r\nproject.report(category=\"\", reason=\"\")  # Report a project\r\nproject.unshare()  # Unshare a project\r\nproject.view()  # Just view a project\r\nproject.set_thumbnail(file=\"\")  # Set the thumbnail of a project\r\nproject.delete_comment(comment_id=1)  # Delete a comment\r\nproject.report_comment(comment_id=1)  # Report a comment\r\nproject.reply_comment(comment_id=1, content=\"Hi!\")  # Reply a comment\r\nproject.set_title()  # Set the title of the project\r\nproject.set_description()  # Set the description of the project\r\nproject.set_instruction()  # Set the instruction of the project\r\nproject.all_data()  # Returns all the data of a Scratch Project\r\n##########################################################################\r\n# IMPORTANT NOTE: To always get the updated data use the update_data() function\r\n##########################################################################\r\nproject.update_data()  # Update the data\r\n```\r\n\r\n#### Want to access and set the cloud variables of an unshared project?\r\n\r\nUse the Following Code:\r\n\r\n**Note: By accessing an unshared project, some data may not be accessible to this library so some data might not appear.\r\nYou can get the scripts and connect cloud variables of an unshared project.**\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = user.connect_project(project_id=1,\r\n                               access_unshared=True)  # Use the 'access_unshared' parameter to access the unshared project.\r\n```\r\n\r\n### Connect Cloud Variables of a Scratch Project:\r\n\r\nTo connect the cloud variables of a Scratch Project use the `connect_cloud_variables()` function. Use the following\r\nprogram to connect the cloud variables of a Scratch Project:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = user.connect_project(project_id=1)\r\nvariables = project.connect_cloud_variables()\r\nvariables.get_variable_data(limit=100, offset=0)  # Returns the cloud variable data\r\nvariables.get_cloud_variable_value(variable_name=\"Name\", limit=100)  # Returns the cloud variable value\r\n# Program to set cloud variables:\r\nset = variables.set_cloud_variable(variable_name=\"Name\", value=123)  # Set a Cloud Variable\r\nif set:\r\n    print(\"Cloud Variable Updated!\")\r\n```\r\n\r\n### Connect Cloud Variables of Turbowarp:\r\n\r\nTo connect the cloud variables of a Turbowarp Project use the `connect_turbowarp_cloud()` function. Use the following\r\nprogram to connect the cloud variables of a Turbowarp Project:\r\n\r\n**Note: Turbowarp doesn't provide any features to get the data, etc. so you can't do some actions with Turbowarp as in\r\nScratch**\r\n\r\n**Note: Use the ```acccess_unshared=True``` parameter of the ```connect_project()``` function to connect the Turbowarp\r\nProject even if it is unshared on Scratch!**\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = user.connect_project(project_id=1)  # Connect a Project\r\ntw_cloud = project.connect_turbowarp_cloud(\r\n    username=\"Username\")  # Connect the Turbowarp cloud with an optional parameter to change the username!\r\n\r\ntw_cloud.set_cloud_variable(variable_name=\"Name\", value=0)  # Set a Turbowarp variable\r\n\r\ntw_cloud.get_variable_data()  # Get the data of the previous value of the variable. NOT Current\r\n```\r\n\r\n### Error with Turbowarp Cloud?\r\n\r\nSometimes there mat be error with the Turbowarp Cloud. Some Basic Errors are:\r\n\r\n**1. I can't change the Cloud Variable Value**\r\n\r\nIf you can't change the Turbowarp Cloud Variable value using scratchconnect then first check if your code is correct. If\r\nthe problem still exists try with this\r\nURL: ```https://turbowarp.org/<project ID>?cloud_host=wss://clouddata.turbowarp.org```. Replace the ```project ID```\r\nwith your project ID.\r\n\r\n### Encoding/Decoding Cloud Variables:\r\n\r\n#### In Scratch\r\n\r\nScratchConnect v2.0+ has some good features to encode/decode a cloud variable! See some examples below:\r\n\r\n**ScratchConnect has a case-sensitive encoding/decoding system. For example both 'A' and 'a' are encoded/decoded\r\ndifferently!**\r\n\r\nGo to [this link](https://scratch.mit.edu/projects/578255313/) for the Scratch version of Encoder/Decoder\r\n\r\n##### Encoding/Decoding a string:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = login.connect_project(1)  # Connect the project\r\n\r\nvariables = project.connect_cloud_variables()  # Connect the project's cloud variables\r\n\r\nencoded_string = variables.encode(\"Hi! This is a text!\")  # Encode a string\r\n\r\nvariables.set_cloud_variable(variable_name='Name', value=encoded_string)\r\nvariable_value = variables.get_cloud_variable_value(variable_name='Name')[0]  # Get the variable value\r\n\r\ndecoded_string = variables.decode(variable_value)  # Decode a string\r\n\r\nprint(\"Encoded: \", encoded_string)  # Print the results to check\r\nprint(\"Decoded: \", decoded_string)  # Print the results to check\r\n```\r\n\r\n##### Encoding/Decoding a list:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = login.connect_project(1)  # Connect the project\r\n\r\nvariables = project.connect_cloud_variables()  # Connect the project's cloud variables\r\n\r\ndata = ['A', 'B', 'C']\r\nencoded_string = variables.encode_list(data)  # Encode a list\r\n\r\nvariables.set_cloud_variable(variable_name='Name', value=encoded_string)\r\nvariable_value = variables.get_cloud_variable_value(variable_name='Name')[0]  # Get the variable value\r\n\r\ndecoded_string = variables.decode_list(variable_value)  # Decode a list\r\n\r\nprint(\"Encoded: \", encoded_string)  # Print the results to check\r\nprint(\"Decoded: \", decoded_string)  # Print the results to check\r\n```\r\n\r\n#### In Turbowarp\r\n\r\nTo encode/decode a string/list in Turbowarp, the syntax is same as to encode/decode in Scratch. See above\r\n\r\n### Connect a Scratch Forum:\r\n\r\nTo connect a Scratch Forum use the `connect_forum_topic()` function. Use the following program to connect a Scratch\r\nForum:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nforum = user.connect_forum_topic(forum_id=1)\r\nforum.id()  # Returns the id of the forum\r\nforum.title()  # Returns the title of the forum\r\nforum.category()  # Returns the category of the forum\r\nforum.closed()  # Returns whether the forum is closed or not\r\nforum.deleted()  # Returns whether the forum is deleted or not\r\nforum.time()  # Returns the activity of the forum\r\nforum.post_count()  # Returns the total post count of the forum\r\nforum.follow()  # Follow a Forum\r\nforum.unfollow()  # Unfollow a Forum\r\nforum.posts(page=1)  # Get the post in Forum Topic of a specified page. Images and some other stuff will not appear!\r\nforum.ocular_reactions(post_id=123)  # Get the ocular reactions of the post\r\nforum.topic_post_history(usernames=\"total\", segment=\"1\", range=\"30\")  # Get the post history of the topic\r\n##########################################################################\r\n# IMPORTANT NOTE: To always get the updated data use the update_data() function\r\n##########################################################################\r\nforum.update_data()  # Update the data\r\n```\r\n\r\n### Cloud Events\r\n\r\nIf you want to handle various Cloud Events on Scratch, use the following code:\r\n\r\n#### In Scratch:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nproject = login.connect_project(1)  # Connect the project\r\n\r\ncloud = project.connect_cloud_variables()  # Connect the project's cloud\r\n\r\nevent = cloud.create_cloud_event()  # Create a cloud event\r\n\r\n\r\n@event.on(\"connect\")\r\ndef connect():\r\n    print(\"Connected Cloud!\")\r\n\r\n\r\n@event.on(\"set\")\r\ndef set(data):\r\n    print(\"SET: \", data)\r\n\r\n\r\n@event.on(\"create\")\r\ndef create(data):\r\n    print(\"CREATE: \", data)\r\n\r\n\r\n@event.on(\"delete\")\r\ndef delete(data):\r\n    print(\"DELETE: \", data)\r\n\r\n\r\n@event.on(\"disconnect\")\r\ndef disconnect():\r\n    print(\"Disconnected from Cloud!\")\r\n\r\n\r\nevent.start(update_time=1)  # Start the event with update time\r\n\r\n# To Stop a Cloud Event, use the event.stop() function\r\n```\r\n\r\n#### In Turbowarp:\r\n\r\nUse the same method as in Scratch but this time connect the cloud of a project on Turbowarp\r\n\r\n### Cloud Storage\r\n\r\n**IMPORTANT NOTE: This feature is going to be discontinued in ScratchConect v5.0! Please use the new alternative feature: Cloud Requests.**\r\n\r\nThis is a special feature in ScratchConnect which is used to make a cloud storage system. Some features are:\r\n\r\n* Create a variable\r\n* Set a variable\r\n* Get a variable\r\n* Delete a variable\r\n* Delete all variables\r\n* Wait for a given time\r\n* Simple Syntax\r\n\r\n**Note: Maximum of 1024 characters can be set as a value to a variable. You can create any number of variables!**\r\n\r\n**First, you need to put a sprite in your project. Go to [this link](https://scratch.mit.edu/projects/606881698/) and\r\nclick 'see inside'. There will be all the instructions.**\r\n\r\nTo create a cloud storage in ScratchConnect use the code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\nproject = login.connect_project(1)  # Connect the project\r\n\r\ncloud_storage = project.create_cloud_storage(file_name=\"data\", rewrite_file=False, edit_access=[\r\n    'Sid72020123'],\r\n                                             all_access=False)  # Create a cloud storage. It will create a file in the specified location. Then there is 'edit_access' list which contains the users which have permission to edit(actually create and delete) the variables. Use the 'rewrite_file' argument if you want the file to be re-written again each time you write the program! You can set the 'all_access' to True if you want to give all the access to all users!\r\n\r\ncloud_storage.start_cloud_loop(update_time=1,\r\n                               print_requests=True)  # Start the Cloud Storage. Use the 'update_time' to wait for the specified time. Use the 'print_requests' to print the request info in the console/output screen.\r\n```\r\n\r\n### Cookie Login\r\n\r\nSometimes, the Scratch API blocks the login from online IDEs like Replit, etc. To overcome the issue, ScratchConnect\r\nv2.5 or above has a feature to login directly with cookie. Example:\r\n\r\n**How to get a cookie?**\r\nYou can get your cookie values by logging in with ScratchConnect locally on your computer and use the login object as ```print(login.session_id)``` to get the required cookie value. Copy the value and store it in environment variable if you are using an online IDE like Replit!\r\n\r\n**Note: Keep this values secured and use environment variables wherever necessary.**\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nscratch_cookie = {\r\n    \"Username\": \"Your username\",\r\n    \"SessionID\": \"Your SessionID\",\r\n}  # set the cookie dictionary\r\n\r\nlogin = scratchconnect.ScratchConnect(cookie=scratch_cookie)  # Login with cookie\r\n```\r\n\r\n**Note: While running the above code, ScratchConnect will give a warning that some features might not work if the cookie\r\nvalues are wrong. It's not an ERROR, it's a WARNING**\r\n\r\n#### Advanced\r\n\r\nIn case the login from username and password fails, ScratchConnect also has a feature to login with a cookie when the\r\nlogin with username and password fails! You just have to pass the username and password value and also the cookie in the\r\nScratchConnect class. Also, you need to set the `auto_cookie_login` variable to `True`. Example Code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nscratch_cookie = {\r\n    \"Username\": \"Your username\",\r\n    \"SessionID\": \"Your SessionID\",\r\n}  # set the cookie dictionary\r\n\r\nlogin = scratchconnect.ScratchConnect(username=\"USERNAME\", password=\"PASSWORD\",\r\n                                      cookie=scratch_cookie,\r\n                                      auto_cookie_login=True)  # Login with cookie and enable the auto_cookie_login\r\n```\r\n\r\n### Using ScratchConnect without login\r\n\r\nWith ScratchConnect v3.1+, you can use it without login! Example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nuser = scratchconnect.ScratchConnect()  # Leave all the values empty to use this library without login!\r\n```\r\n\r\n**Note: If you login without a username and password, some features such as setting cloud variables, etc. may not work.\r\nIt will give you a warning when you use this library without login!**\r\n\r\n### Terminal\r\n\r\nScratchConnect v3.0+ has a feature called \"Terminal\" in which a user can get the data of Scratch User, Studio and\r\nProject in the Python console.\r\n\r\nTo use this feature, you need to install additional dependencies required, by\r\ntyping ```pip install scratchconnect[terminal]``` in the command prompt/terminal. Then, see the example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nterminal = login.create_new_terminal()  # Create a new Terminal object\r\nterminal.start()  # Start the main terminal program\r\n```\r\n\r\nYou can use many features in it. Just enter ```help``` to see the list of commands after the terminal starts.\r\n\r\n### Charts\r\n\r\nScratchConnect v3.0+ has a feature called \"Chart\" in which a user can get the data of Scratch User, Studio and Project\r\nin graphical format.\r\n\r\n**Note: This feature uses the library ```pyhtmlchart``` to create graphs. Any other library can be used in later\r\nversions.**\r\n\r\nTo use this feature, you need to install additional dependencies required, by\r\ntyping ```pip install scratchconnect[chart]``` in the command prompt/terminal\r\n\r\n#### User Comparison Chart:\r\n\r\nSee the example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nchart = login.create_new_chart()  # Create a Chart object\r\n\r\nuser_chart = chart.user_stats_chart(\r\n    usernames=[\"griffpatch\", \"Will_Wam\", \"ScratchCat\"])  # Create users stats comparison chart\r\n\r\nuser_table = chart.user_stats_table(\r\n    usernames=[\"griffpatch\", \"Will_Wam\", \"ScratchCat\"])  # Create users stats comparison table\r\n\r\nuser_chart.open()  # Open User chart\r\nuser_table.open()  # Open User table\r\n```\r\n\r\nTo include only some required data in a chart or table, use the ```include_data``` parameter of the chart or table\r\nfunction and pass the value as list to get the required data.\r\nExample: ```['Messages Count', 'Follower Count', 'Following Count']```\r\n\r\nYou can also use any one or more options from the following list:\r\n\r\n```python\r\n['Username', 'Messages Count', 'Follower Count', 'Following Count', 'Total Loves',\r\n 'Total Favourites', 'Total Projects Count']\r\n```\r\n\r\n#### Studio Comparison Chart:\r\n\r\nSee the example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nchart = login.create_new_chart()  # Create a Chart object\r\n\r\nstudio_chart = chart.studio_stats_chart(\r\n    studio_ids=[100, 101, 102])  # Create studio stats comparison chart\r\n\r\nstudio_table = chart.studio_stats_table(\r\n    studio_ids=[100, 101, 102])  # Create studio stats comparison table\r\n\r\nstudio_chart.open()  # Open Studio chart\r\nstudio_table.open()  # Open Studio table\r\n```\r\n\r\nTo include only some required data in a chart or table, use the ```include_data``` parameter of the chart or table\r\nfunction and pass the value as list to get the required data.\r\nExample: ```['Comments Count', 'Followers Count', 'Managers Count']```\r\n\r\nYou can also use any one or more options from the following list:\r\n\r\n```python\r\n['Studio ID', 'Comments Count', 'Followers Count', 'Managers Count', 'Projects Count']\r\n```\r\n\r\n#### Project Comparison Chart:\r\n\r\nSee the example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nchart = login.create_new_chart()  # Create a Chart object\r\n\r\nproject_chart = chart.project_stats_chart(\r\n    project_ids=[104, 105, 106])  # Create project stats comparison chart\r\n\r\nproject_table = chart.project_stats_table(\r\n    project_ids=[104, 105, 106])  # Create project stats comparison table\r\n\r\nproject_chart.open()  # Open Project chart\r\nproject_table.open()  # Open Project table\r\n```\r\n\r\nTo include only some required data in a chart or table, use the ```include_data``` parameter of the chart or table\r\nfunction and pass the value as list to get the required data. Example: ```['Views', 'Loves', 'Favourites']```\r\n\r\nYou can also use any one or more options from the following list:\r\n\r\n```python\r\n['Project ID', 'Views', 'Loves', 'Favourites', 'Remixes', 'Version', 'Costumes', 'Blocks',\r\n 'Variables', 'Assets']\r\n```\r\n\r\n#### User Follower History Chart:\r\n\r\nSee the example code:\r\n\r\n```python\r\nimport scratchconnect\r\n\r\nlogin = scratchconnect.ScratchConnect(\"Username\", \"Password\")\r\n\r\nchart = login.create_new_chart()  # Create a Chart object\r\n\r\nc = chart.user_followers_history_chart(username=\"griffpatch\")  # Followers History Chart\r\n\r\nt = chart.user_followers_history_table(username=\"griffpatch\")  # Followers History Table\r\n\r\nc.open()  # Open chart\r\nt.open()  # Open table\r\n```\r\n\r\n### Using ScratchConnect in online IDEs like Replit\r\n\r\nUsing the ScratchConnect version ```4.0.0+```, you can use this library even on some online IDEs like Replit!\r\n\r\nBut to keep your profile data safe, this supports only ```GET``` requests and no cookie headers are passed to the proxy (which this feature uses).\r\nYou cannot perform any actions other than ```GET```, i.e., follow a user, post a comment, etc.\r\n\r\nBut cloud variables work as it is a websocket connection.\r\n\r\n**Remember to use environment variables to store your session ID if you are using this on an online IDE like Replit...**\r\n\r\nTo use ScratchConnect in online IDEs like Replit, you need to get your session ID (see Cookie-Login section above) and the code like:\r\n```python\r\nimport scratchconnect\r\n\r\nsession_id = \"<your session id here>\"\r\ncookie = {\r\n   \"Username\": \"<your username>\",\r\n   \"SessionID\": session_id\r\n}\r\n\r\nlogin = scratchconnect.ScratchConnect(online_ide_cookie=cookie) # Pass the cookie variable as a parameter to the ScratchConnect class\r\n\r\n# Your code here...\r\n```\r\n\r\n### Cloud Requests\r\n\r\nThis feature was first released in version ```4.0.0``` of the ScratchConnect Python Library.\r\nUsing this, you will be able to send any amount of data to-and-from your Python program and any Scratch Project.\r\n\r\nThe docs to use this feature are [here](https://github.com/Sid72020123/scratchconnect/CLOUD_REQUESTS.md)\r\n\r\n### Projects made using ScratchConnect\r\n\r\nTo see the projects made using ScratchConnect, go to the\r\nofficial [ScratchConnect Projects Studio](https://scratch.mit.edu/studios/30427944/)\r\n\r\n### Bug Reporting:\r\n\r\nAll Bugs to be reported on my [Scratch Profile](https://scratch.mit.edu/users/Sid72020123/)\r\nor [Github](https://github.com/Sid72020123/scratchconnect/issues)\r\n\r\n### Change Log:\r\n\r\n* 19/06/2021(v0.0.0.1) - First made the library and updated it.\r\n* 20/06/2021(v0.1) - Added many features.\r\n* 21/06/2021(v0.1.9) - Bug fixes.\r\n* 26/06/2021(v0.2.0) - Made Improvements and added new features.\r\n* 27/06/2021(v0.2.6) - Bug Fixes and update and made the 'Studio' class.\r\n* 03/07/2021(v0.4.5) - Added many functions and made the 'Project' class.\r\n* 04/07/2021(v0.5.0) - Update.\r\n* 05/07/2021(v0.5.1) - Updated the messages function.\r\n* 06/07/2021(v0.6.0) - Updated CloudConnection.\r\n* 08/07/2021(v0.7.5) - Updated CloudConnection.\r\n* 10/07/2021(v0.7.5) - Updated CloudConnection, made the Forum class and added DocString.\r\n* 13/07/2021(v0.9.7) - Added DocString.\r\n* 14/07/2021(v0.9.0) - Bug Fixes.\r\n* 15/07/2021(v1.0) - First Release!\r\n* 18/07/2021(V1.1) - Made the 'studio.get_projects()'.\r\n* 19/07/2021(v1.2) - Made the get comments, curators, managers of the studio\r\n* 13/08/2021(v1.3) - Added the get comments function\r\n* 14/08/2021(v1.4) - Updated the get messages function\r\n* 17/08/2021(v1.5) - Made some bug fixes\r\n* 18/09/2021(v1.7) - Made the ScratchConnect and User Classes fast and Improved methods\r\n* 19/09/2021(v1.8) - Made the Studio Class Faster and Improved methods\r\n* 25/09/2021(v1.8.5) - Updated the Project and User classes\r\n* 02/10/2021(v2.0) - Updated the Cloud and Forum Class\r\n* 10/10/2021(v2.0.1) - Fixed some cloud stuff\r\n* 11/10/2021(v2.1) - Added some features to Forum Class\r\n* 24/10/2021(v2.1.1) - Started making the scStorage Class\r\n* 29/10/2021(v2.1.1.1) - Fixed set_bio() and set_work() and updated the scDataBase\r\n* 30/10/2021(v2.2.5) - Updated the scStorage\r\n* 31/10/2021(v2.2.7) - Updated the scStorage\r\n* 25/11/2021(v2.3) - Updated the scStorage and CloudConnection\r\n* 13/12/2021(v2.3.5) - Started making the TurbowarpCloudConnection feature and added some methods to it\r\n* 14/12/2021(v2.4) - Updated and fixed mistakes in docs\r\n* 09/01/2022(v2.4.1) - Code Fixes\r\n* 25/01/2022(v2.4.2) - Added new Comment API\r\n* 16/03/2022(v2.5) - Fixed login and added cookie login feature\r\n* 26/03/2022(v2.6) - Added some more APIs\r\n* 27/03/2022(v2.6.3) - Added the Scratch Terminal Feature\r\n* 28/03/2022(v2.7.5) - Updated the Scratch Terminal Feature and added the Chart Feature\r\n* 29/03/2022(v2.8) - Updated the Charts Feature\r\n* 16/04/2022(v3.0) - Bug fixes and improvements\r\n* 30/04/2022(v3.0.5) - Code fix\r\n* 01/05/2022(v3.0.8) - Code fix and new features\r\n* 07/05/2022(v3.0.9) - Code fix\r\n* 12/05/2022(v3.1) - Updated the CloudConnection Class\r\n* 04/06/2022(v3.2) - Updated the ScratchConnect, CloudStorage, etc. Class\r\n* 05/06/2022(v3.3) - Updated the CloudEvents Class, etc\r\n* 08/06/2022(v3.3.5) - Added colored messages, etc\r\n* 11/06/2022(v3.4) - Updated and made the CloudStorage Feature faster\r\n* 05/08/2022(v3.4.1) - Planed and added some features of Online IDE login\r\n* 06/08/2022(v3.4.2) - Added the OnlineIDE feature to all the Scratch API based classes\r\n* 08/08/2022(v3.4.5) - Planned the Cloud Requests feature\r\n* 09/08/2022(v3.5) - Added some features to the Cloud Requests Class\r\n* 13/08/2022(v3.5.1) - Added some methods to the TurbowarpCloudConnection and CloudRequests classes and updated them\r\n* 14/08/2022(v3.5.6) - Updated the Cloud Requests Class\r\n* 15/08/2022(v3.6.0) - Updated the Cloud Requests Class\r\n* 16/08/2022(v3.6.0) - Updated the Cloud Requests Class and added some logs to the class\r\n* 20/08/2022(v3.7) - Added more logs to the Requests Class\r\n* 21/08/2022(v3.8) - Made the scImage Class\r\n* 27/08/2022(v3.9) - Reduced the size of encoded Image\r\n* 30/08/2022(v3.9.5) - Bug fixes and Improvements\r\n* 24/09/2022(v3.9.6) - Bug fixes and Improvements\r\n* 25/09/2022(v3.9.7) - Bug fixes and Improvements\r\n* 26/09/2022(v3.9.9) - Fixed many bugs in scCloudRequests\r\n* 14/12/2022(v4.0.0) - Fixed the arguments bug in the Cloud Requests feature\r\n* 15/12/2000(v4.0.0) - Bug fixes and improvements in the Cloud Requests feature\r\n\r\n### Credits:\r\n\r\n**This library is made by [@Sid72020123](https://scratch.mit.edu/users/Sid72020123/) on Scratch. Also, thanks to all\r\ncontributors.**\r\n\r\n### Contributors:\r\n\r\n***The names of persons below are their Scratch Usernames.***\r\n\r\n| **Person**      | **Role**      | **Contribution**                                                                      |\r\n|-----------------|---------------|----------------------------------------------------------------------------------     |\r\n| **Sid72020123** | *Owner*       | Made the library and most of its features                                             |\r\n| **Ankit_Anmol** | *Contributor* | Fixed some things in the documentation and added some features                        |\r\n| **Chiroyce**    | *Contributor* | Added some features and cleaned up some code                                          |\r\n| **god286**      | *Contributor* | Fixed mistakes in the documentation                                                   |\r\n| **mbrick2**     | *Contributor* | Fixed Badge Consistency and added the Aviate status feature                           |\r\n| **AidanER1**    | *Contributor* | Updated the CloudConnection class and fixed some bugs                                 |\r\n| **Senievol**    | *Idea*        | Gave the trick to make the encoded image data length much lower in Cloud Requests     |\r\n| **awesome-llama**| *Idea*       | Gave the trick to make the encoded image data length much lower in Cloud Requests     |\r\n\r\n*If I'm missing some people and their work in the contributors table, please contact Sid72020123 on Scratch*\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/Sid72020123/scratchconnect/",
            "keywords": "connect scratch,scratch api,api,scratch,bot,scratch bot,scratch cloud,scratch cloud variables,scratch data,scratch stats",
            "license": "MIT",
            "maintainer": "",
            "maintainer_email": "",
            "name": "scratchconnect",
            "package_url": "https://pypi.org/project/scratchconnect/",
            "platform": null,
            "project_url": "https://pypi.org/project/scratchconnect/",
            "project_urls": {
                "Homepage": "https://github.com/Sid72020123/scratchconnect/"
            },
            "release_url": "https://pypi.org/project/scratchconnect/4.0.0/",
            "requires_dist": null,
            "requires_python": "",
            "summary": "Python Library to connect Scratch API and much more. This library can show the statistics of Users, Projects, Studios, Forums and also connect and set cloud variables of a project!",
            "version": "4.0.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16141289,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "12f457d7a8787376aa2c0969b27b5117",
                    "sha256": "6ad1ab27a04ef0122e115ce89daa8244e78a7df8038fe91aeea00bfacbdd6183"
                },
                "downloads": -1,
                "filename": "scratchconnect-4.0.0.tar.gz",
                "has_sig": false,
                "md5_digest": "12f457d7a8787376aa2c0969b27b5117",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": null,
                "size": 51298,
                "upload_time": "2022-12-18T16:31:54",
                "upload_time_iso_8601": "2022-12-18T16:31:54.635730Z",
                "url": "https://files.pythonhosted.org/packages/68/3e/5bb7b3e6a27779857f2e2c713bdc4ed2bfbed5b74499170a00ca5d80c9ba/scratchconnect-4.0.0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}