{
    "0.0.1": {
        "info": {
            "author": "=?utf-8?b?Sm/Do28=?=",
            "author_email": "joaodlrio@outlook.com",
            "bugtrack_url": null,
            "classifiers": [],
            "description": "# Escalonamento de Matrizes Quadradas\r\n\r\n  O escalonamento de matrizes \u00e9 um procedimento alg\u00e9brico que podemos utilizar para resolver sistemas lineares onde o n\u00famero de equa\u00e7\u00f5es n\u00e3o \u00e9, necessariamente, igual ao n\u00famero de inc\u00f3gnitas. Resolver um sistema linear significa encontrar os valores das inc\u00f3gnitas que satisfazem todas as equa\u00e7\u00f5es simultaneamente.\r\n\r\n## Como utilizar\r\n\r\n\r\n\r\n### \ud83d\udccb Pr\u00e9-requisitos\r\n\r\nPara utilizar a fun\u00e7\u00e3o de escalonamento, \u00e9 necess\u00e1rio que seja importado as bibliotecas numpy e numpy.linalg\r\n\r\n```\r\nimport numpy as np\r\nfrom numpy.linalg import det, inv\r\n```\r\n\r\nTamb\u00e9m \u00e9 necess\u00e1rio que a determinante da matriz seja diferente de 0, para isso utilize a fun\u00e7\u00e3o \"det\" na matriz\r\n\r\n```\r\n#Matriz exemplo\r\nA = np.array([[0.5235**3,0.5235**2,0.5235,1],[0.7853**3,0.7853**2,0.7853,1],[1.0471**3,1.0471**2,1.0471,1],[1.5707**3,1.5707**2,1.5707,1]])\r\nD = det(A)\r\nD\r\n```\r\n\r\n### \ud83d\udd27 Aplica\u00e7\u00e3o\r\n\r\nExistem duas formas para utilizar a fun\u00e7\u00e3o:\r\n\r\n#### Primeira forma\r\n\r\nA primeira forma \u00e9 alterando uma coluna de cada vez, para isso voc\u00ea ir\u00e1 primeiro transformar em 1 a diagonal principal da sua coluna, chamando a fun\u00e7\u00e3o \"F_UM\": \r\n\r\n```\r\ndef F_UM(matriz, coluna):\r\n  matriz[[coluna]] = matriz[[coluna]]*(1/(matriz[[coluna],[coluna]]))\r\n  \r\nF_UM(matriz, coluna)\r\n```\r\nE depois chamando a fun\u00e7\u00e3o \"F_ZERO\", para transformar o resto da coluna em zero:\r\n\r\n```\r\ndef F_ZERO(matriz, coluna, tamanho):\r\n  i=0\r\n  while(i<tamanho):\r\n    if (i==coluna):\r\n      i=i+1\r\n    else:\r\n      matriz[[i]] = matriz[[i]] + matriz[[coluna]]*(matriz[[i],[coluna]]*-1)\r\n      i=i+1\r\n\r\nF_ZERO(matriz, coluna, tamanho)\r\n```\r\nE repita esse processo at\u00e9 terminar.\r\n\r\n\r\n#### Segunda forma\r\n\r\nE a segunda forma seria utilizando as duas fun\u00e7\u00f5es juntas, em uma s\u00f3:\r\n\r\n```\r\ndef escalonamento(matriz, tamanho):\r\n  coluna=0\r\n  \r\n  while(coluna<tamanho):\r\n    matriz[[coluna]] = matriz[[coluna]]*(1/(matriz[[coluna],[coluna]]))\r\n    i=0\r\n    while(i<tamanho):\r\n      if (i==coluna):\r\n        i=i+1\r\n      else:\r\n        matriz[[i]] = matriz[[i]] + matriz[[coluna]]*(matriz[[i],[coluna]]*-1)\r\n        i=i+1\r\n    print(f\"Coluna {coluna} alterada\")\r\n    print(f\"{matriz}\")\r\n    coluna=coluna+1\r\n\r\nescalonamento(matriz, tamanho)\r\n```\r\n\r\n## \u2699\ufe0f Exemplos para teste\r\n\r\n### 1 Exemplo: \r\n\r\nProjete um me\u0301todo para aproximar sen x por um polino\u0302mio cu\u0301bico no intervalo 0 \u2264 x \u2264 \u03c0/2.\r\n\r\n### 2 Exemplo: \r\n\r\nA forc\u0327a de sustentac\u0327a\u0303o da asa de um projeto de aeronave e\u0301 medida em va\u0301rias velocidades, como segue:\r\n\r\nVelocidade (30m/s)\t         1\t  2\t       4\t     8\t     16\t     32\r\nForc\u0327a de sustentac\u0327a\u0303o 50 kgf\t0\t  3,12\t  15,86\t  33,7\t   81,5\t   123,0\r\n\t        \r\nEncontre um polino\u0302mio interpolador de grau 5 que modela os dados e use seu polino\u0302mio para estimar a forc\u0327a de sustentac\u0327a\u0303o a 600 m/s.\r\n\r\n# Escalonamento de Matrizes MxN\r\n\r\n  O escalonamento de matrizes \u00e9 um procedimento alg\u00e9brico que podemos utilizar para resolver sistemas lineares onde o n\u00famero de equa\u00e7\u00f5es n\u00e3o \u00e9, necessariamente, igual ao n\u00famero de inc\u00f3gnitas. Resolver um sistema linear significa encontrar os valores das inc\u00f3gnitas que satisfazem todas as equa\u00e7\u00f5es simultaneamente.\r\n\r\n## Como utilizar\r\n\r\n\r\n\r\n### \ud83d\udccb Pr\u00e9-requisitos\r\n\r\nPara utilizar a fun\u00e7\u00e3o de escalonamento, \u00e9 necess\u00e1rio que seja importado as bibliotecas numpy e numpy.linalg\r\n\r\n```\r\nimport numpy as np\r\n```\r\n\r\n### \ud83d\udd27 Aplica\u00e7\u00e3o\r\n\r\n```\r\ndef escalonamento(matriz, m, n):\r\n  coluna=0\r\n  #Auxiliar para achar o pivo\r\n  pivo=0\r\n  \r\n  while(coluna<n and coluna<m):\r\n    if (matriz[[pivo],[coluna]]!=0):\r\n      matriz[[pivo]] = matriz[[pivo]]*(1/(matriz[[pivo],[coluna]]))\r\n      i=0\r\n      while(i<m):\r\n        if (i==pivo):\r\n          i=i+1\r\n        else:\r\n          matriz[[i]] = matriz[[i]] + matriz[[pivo]]*(matriz[[i],[coluna]]*-1)\r\n          i=i+1\r\n      print(f\"Coluna {coluna} alterada\")\r\n      print(f\"{matriz}\")\r\n      pivo=pivo+1\r\n      coluna=coluna+1\r\n    else:\r\n      print(f\"Coluna {coluna} pulada\")\r\n      coluna=coluna+1\r\n\r\nescalonamento(matriz, m, n)\r\n```\r\n\r\n## \u2699\ufe0f Exemplos para teste\r\n\r\n### 3 Exemplo: \r\n\r\nConsidere o sistema linear homog\u00eaneo:\r\n\r\n \t(x1)+3(x2)-2(x3)+2(x5)=0\r\n \r\n \t(x1)+6(x2)-5(x3)-2(x4)+4(x5)-3(x6)=0\r\n \r\n \t5(x3)+10(x4)+15(x6)=0\r\n \r\n \t2(x1)+6(x2)+8(x4)+4(x5)+18(x6)=0\r\n\r\n\r\n\r\n\r\n## \ud83d\udce6 Desenvolvimento\r\n\r\nEssa fun\u00e7\u00e3o \u00e9 \u00fatil na utiliza\u00e7\u00e3o de conte\u00fados da mat\u00e9ria de Alg\u00e9bra Linear\r\n\r\n## \ud83d\udee0\ufe0f Constru\u00eddo com\r\n\r\n* [Colaboratory](https://colab.research.google.com/drive/1LpF3ZLrJKF1VI2nRso7uGYIH1o73EvwW) - Ferramenta utilizada\r\n\r\n## \u2712\ufe0f Autores\r\n\r\n* **Jo\u00e3o Bernardo Del Rio** - *Desenvolvedor* - [JheyBi](https://github.com/JheyBi)\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/JheyBi/Escalonamento",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "escalonamento",
            "package_url": "https://pypi.org/project/escalonamento/",
            "platform": null,
            "project_url": "https://pypi.org/project/escalonamento/",
            "project_urls": {
                "Homepage": "https://github.com/JheyBi/Escalonamento"
            },
            "release_url": "https://pypi.org/project/escalonamento/0.0.1/",
            "requires_dist": [
                "numpy"
            ],
            "requires_python": ">=3.8",
            "summary": "=?utf-8?q?Fun=C3=A7=C3=A3o_para_escalonar_matrizes?=",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15704608,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "3f23e68a021ddae9222137e42f2ee727",
                    "sha256": "6658b1a6a3a2e0ca0480f91fa1246820893a6e3f8293018cb0f26f733f45886d"
                },
                "downloads": -1,
                "filename": "escalonamento-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "3f23e68a021ddae9222137e42f2ee727",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.8",
                "size": 2831,
                "upload_time": "2022-11-08T23:43:51",
                "upload_time_iso_8601": "2022-11-08T23:43:51.164007Z",
                "url": "https://files.pythonhosted.org/packages/ea/d0/49b0d97aba77b7bc2ba03f65b6015ef2ac0b421dad9f6d8ad920aa53c4a0/escalonamento-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "75263003d5a0bb00f216597010085bf8",
                    "sha256": "542b3c3f1e760fb24c42ce2013766d3d67ff82d50130805eaf90b4e725766fe7"
                },
                "downloads": -1,
                "filename": "escalonamento-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "75263003d5a0bb00f216597010085bf8",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.8",
                "size": 3209,
                "upload_time": "2022-11-08T23:43:53",
                "upload_time_iso_8601": "2022-11-08T23:43:53.060482Z",
                "url": "https://files.pythonhosted.org/packages/a7/e4/58aeb8805b3046865e283101ef87b3fa7df6a83cfe8e270d314518117a4b/escalonamento-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}