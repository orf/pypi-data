{
    "0.0.1": {
        "info": {
            "author": "suk",
            "author_email": "277667028@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "SmsHttpChannel",
            "package_url": "https://pypi.org/project/SmsHttpChannel/",
            "platform": "",
            "project_url": "https://pypi.org/project/SmsHttpChannel/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/SmsHttpChannel/0.0.1/",
            "requires_dist": [
                "tornado (==6.1)"
            ],
            "requires_python": ">=3",
            "summary": "Python\u5f02\u6b65\u63d0\u4ea4\u77ed\u4fe1\u7684\u6a21\u5757",
            "version": "0.0.1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8788106,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "32fd191c17dff4ff8c5cc1461fb8d57f",
                    "sha256": "7d9b0f88b03818bc8b41d0c21253f83dd8c7688189232b3289f00509ae9b30e1"
                },
                "downloads": -1,
                "filename": "SmsHttpChannel-0.0.1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "32fd191c17dff4ff8c5cc1461fb8d57f",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 7771,
                "upload_time": "2020-12-01T07:35:12",
                "upload_time_iso_8601": "2020-12-01T07:35:12.162718Z",
                "url": "https://files.pythonhosted.org/packages/5b/db/bc87c32e81dd288bb3cbf5c72e37870f172c9e60068db33ed40eb045d9a3/SmsHttpChannel-0.0.1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "95dd591cac98be34dd8e74bb73419f25",
                    "sha256": "e0d385a5a06c82b3764b380945efb230cd6d72087da375b7867f03c60d9474e9"
                },
                "downloads": -1,
                "filename": "SmsHttpChannel-0.0.1.tar.gz",
                "has_sig": false,
                "md5_digest": "95dd591cac98be34dd8e74bb73419f25",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 6552,
                "upload_time": "2020-12-01T07:35:14",
                "upload_time_iso_8601": "2020-12-01T07:35:14.349459Z",
                "url": "https://files.pythonhosted.org/packages/cd/a5/7718a506c81311a20ff0f8188284646e354b87e365bc5e2b8684eb7c3493/SmsHttpChannel-0.0.1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.2": {
        "info": {
            "author": "suk",
            "author_email": "277667028@qq.com",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3"
            ],
            "description": "#### **1\u3001SmsHttpChannel\u4ecb\u7ecd**\n\n\u200b       SmsHttpChannel\u6a21\u5757\u662f\u7528\u4e8e\u5f02\u6b65\u77ed\u4fe1\u63a5\u53e3\u7684\u53d1\u9001\uff0c\u4e3b\u8981\u4f9d\u8d56\u4e8eTornado\u6846\u67b6\u4e2d\u7684AsyncHTTPClient\u6a21\u5757\u3002\n\n#### **2\u3001\u63a5\u53e3\u6240\u5c5e**\n\n\u200b\t\t\u4e3b\u8981\u7528\u4e8e**\u65e0\u9521\u7ebf\u4e0a\u7ebf\u4e0b\u901a\u8baf\u4fe1\u606f\u6280\u672f\u80a1\u4efd\u6709\u9650\u516c\u53f8**\u7684\u77ed\u4fe1\u63a5\u53e3\n\n#### **3\u3001\u77ed\u4fe1\u63a5\u53e3\u534f\u8bae\u6587\u6863**\n\n\u200b\t\t***v3 : http://doc.wxxsxx.com/***\n\n\u200b        ***v4: https://api-wiki.wxxsxx.com/***\n\n#### **4\u3001\u4ee3\u7801\u793a\u4f8b**\n\n##### 4.1\u3001\u5355\u5185\u5bb9\u591a\u53f7\u7801\u6279\u91cf\u53d1\u9001\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef submit_callback(response: Dict):\n    \"\"\"\n        \u5b9a\u4e49\u63d0\u4ea4\u77ed\u4fe1\u540e\u7684\u56de\u8c03\u7684\u5904\u7406\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3\u534f\u8bae\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4\u534f\u8bae\n\n    request_list = list()\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n    http_channel.send_request(http_channel, request_list, callback_func=submit_callback)\n\n    \"\"\"\n    \u8f93\u51fa\u7684\u7ed3\u679c:\n        2020-11-26 23:26:16,812 - root - INFO - {'status': 0, 'msgid': '-4801649735315642901'}\n        2020-11-26 23:26:16,829 - root - INFO - {'status': 0, 'msgid': '-4801649735315642900'}\n        2020-11-26 23:26:16,861 - root - INFO - {'status': 0, 'msgid': '-4801649735315642899'}\n    \"\"\"\n```\n\n##### **4.2\u3001 \u9884\u4ed8\u8d39\u8d26\u53f7\u4f59\u989d\u67e5\u8be2**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef balance_callback(response: Dict):\n    \"\"\"\n        \u67e5\u8be2\u4f59\u989d\u8bf7\u6c42\u540e\u7684\u56de\u8c03\u7684\u5904\u7406\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3\u534f\u8bae\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4\u534f\u8bae\n\n    request_list = list()\n    request_list.append(http_channel.get_user_balance())\n    http_channel.send_request(http_channel, request_list, callback_func=balance_callback)\n```\n\n##### **4.3\u3001\u4e0a\u884c\u4e3b\u52a8\u83b7\u53d6**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef mo_callback(response: Dict):\n    \"\"\"\n        \u67e5\u8be2\u4e0a\u884c\u8bf7\u6c42\u540e\u7684\u56de\u8c03\u7684\u5904\u7406\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3\u534f\u8bae\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4\u534f\u8bae\n\n    request_list = list()\n    request_list.append(http_channel.get_mo())\n    http_channel.send_request(http_channel, request_list, callback_func=mo_callback)\n\n    \"\"\"\n    \u8f93\u51fa\u7684\u7ed3\u679c:\n        2020-11-26 23:55:27,590 - root - INFO - {'status': 0, 'result': []}\n    \"\"\"\n```\n\n##### **4.4\u3001\u72b6\u6001\u62a5\u544a\u4e3b\u52a8\u83b7\u53d6**\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel,SmsV4HttpChannel\n\ndef report_callback(response: Dict):\n    \"\"\"\n        \u5b9a\u4e49\u72b6\u6001\u8bf7\u6c42\u540e\u7684\u56de\u8c03\u7684\u5904\u7406\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3\u534f\u8bae\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4\u534f\u8bae\n\n    request_list = list()\n    request_list.append(http_channel.get_report())\n    http_channel.send_request(http_channel, request_list, callback_func=report_callback)\n\n    \"\"\"\n    \u8f93\u51fa\u7684\u7ed3\u679c:\n        2020-11-26 23:57:14,371 - root - INFO - {'status': 0, 'result': []}\n    \"\"\"\n```\n\n##### 4.5\u3001\u83b7\u53d6\u53d1\u9001\u8d26\u53f7\u65e5\u7edf\u8ba1[V4\u534f\u8bae\u652f\u6301]\n\n```python\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV4HttpChannel\n\ndef daily_stats(response: Dict):\n    \"\"\"\n        \u65e5\u7edf\u8ba1\u62a5\u8868\u8bf7\u6c42\u540e\u7684\u56de\u8c03\u7684\u5904\u7406\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    #  \u83b7\u53d6\u53d1\u9001\u8d26\u53f7\u65e5\u7edf\u8ba1\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)\n    request_list = list()\n    request_list.append(http_channel.get_daily_stats())\n    http_channel.send_request(http_channel, request_list, callback_func=daily_stats)\n```\n\n#### **5\u3001\u591a\u7ebf\u7a0b\u591a\u534f\u7a0b\u63d0\u4ea4\u77ed\u4fe1\u7684\u793a\u4f8b**\n\n```python\nimport threading\nimport logging\nfrom typing import Dict\nfrom xsxx.xsxx_channel import SmsV3HttpChannel\n\ndef submit_callback(response: Dict):\n    \"\"\"\n        \u63d0\u4ea4\u77ed\u4fe1\u7684\u56de\u8c03\u51fd\u6570\n    \"\"\"\n    logging.info(response)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n    logger = logging.getLogger(__name__)\n\n    url = 'https://ip:port'\n    userId = 'xxxx'\n    password = 'xxxxx'\n\n    # http_channel = SmsV3HttpChannel(url=url, userId=userId, password=password)  # V3\u534f\u8bae\n    http_channel = SmsV4HttpChannel(url=url, userId=userId, password=password)  # V4\u534f\u8bae\n\n    request_list = list()\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n    request_list.append(http_channel.one_content_phones(content='\u3010\u7ebf\u4e0a\u7ebf\u4e0b\u3011\u4f60\u7684\u9a8c\u8bc1\u7801:8888', mobile='1314342139x'))\n\n    # \u591a\u7ebf\u7a0b\u591a\u534f\u7a0b\u7684\u8fd0\u884c\u4efb\u52a1\n    task_list = []\n\n    for task in range(3):\n        task_start = threading.Thread(target=http_channel.send_request,\n                                      args=(http_channel, request_list, submit_callback))\n        task_start.start()\n        task_list.append(task_start)\n\n    for task in task_list:\n        task.join()\n```\n\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://gitee.com/pysuk/SmsHttpChannel.git",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "SmsHttpChannel",
            "package_url": "https://pypi.org/project/SmsHttpChannel/",
            "platform": "",
            "project_url": "https://pypi.org/project/SmsHttpChannel/",
            "project_urls": {
                "Homepage": "https://gitee.com/pysuk/SmsHttpChannel.git"
            },
            "release_url": "https://pypi.org/project/SmsHttpChannel/0.0.2/",
            "requires_dist": [
                "tornado (==6.1)"
            ],
            "requires_python": ">=3",
            "summary": "Python\u5f02\u6b65\u63d0\u4ea4\u77ed\u4fe1\u7684\u6a21\u5757",
            "version": "0.0.2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 8788106,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "9747d5d77ea7263e764c3858058d2873",
                    "sha256": "415b1eb89a2584b62344bbe1d5dfbe7bd2015dc882e05f1e6f7eb48504842551"
                },
                "downloads": -1,
                "filename": "SmsHttpChannel-0.0.2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "9747d5d77ea7263e764c3858058d2873",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3",
                "size": 7670,
                "upload_time": "2020-12-01T09:20:14",
                "upload_time_iso_8601": "2020-12-01T09:20:14.905877Z",
                "url": "https://files.pythonhosted.org/packages/e4/8d/9727e5d2344a0d95a96196a398ea4db333632f111a1e7ff71ffb82238df5/SmsHttpChannel-0.0.2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "466439a182959cf2453e4a92d2d5b6f7",
                    "sha256": "dfd0a4c1f0fba7f2828b4b10e8ec3dadfb51675282768575e3d41830094cbdf7"
                },
                "downloads": -1,
                "filename": "SmsHttpChannel-0.0.2.tar.gz",
                "has_sig": false,
                "md5_digest": "466439a182959cf2453e4a92d2d5b6f7",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3",
                "size": 6376,
                "upload_time": "2020-12-01T09:20:16",
                "upload_time_iso_8601": "2020-12-01T09:20:16.583881Z",
                "url": "https://files.pythonhosted.org/packages/50/99/95df407aa929d16947eb70673c1ebf040289172af80daac31fba1f3aac92/SmsHttpChannel-0.0.2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}