{
    "0.1.0": {
        "info": {
            "author": "Dave Pearson",
            "author_email": "davep@davep.org",
            "bugtrack_url": null,
            "classifiers": [
                "Development Status :: 3 - Alpha",
                "Environment :: Console",
                "Intended Audience :: Developers",
                "License :: OSI Approved :: MIT License",
                "Operating System :: OS Independent",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.11",
                "Programming Language :: Python :: 3.9",
                "Topic :: Software Development :: Libraries",
                "Topic :: Terminals",
                "Typing :: Typed"
            ],
            "description": "# textual-qrcode\n\n## Introduction\n\nWhile, I admit, likely of little utility really, this library aims to show\none possible way of writing and \"shipping\" a custom widget for\n[Textual](https://textual.textualize.io/). Key here is that the library\ncontains and provides a custom widget which can be imported and used in an\napplication; but it also provides a simple application that can be run to\nsee the widget in action.\n\n## Please note!\n\nThis library is just a thin wrapper around <https://qrenco.de/>. Each time\nyou create a QR code the content you encode is sent to that website. It also\nmeans, of course, that this is only usable with a working net connection.\nPlease keep these things in mind if you do decide to actually use this for\nsomething.\n\n## Installing\n\nThe library itself can be installed with `pip`:\n\n```sh\n$ pip install textual-qrcode\n```\n\nor with your Python environment manager of choice.\n\n## Running the test application\n\nThe demo/test application can be run like this:\n\n```sh\n$ python -m textual_qrcode\n```\n\nWhen you've finished testing, press <kbd>Ctrl</kbd>+<kbd>C</kbd> to quit.\n\n## Using the widget\n\nTo make use of the `QRCode` widget, import it into your code:\n\n```python\nfrom textual_qrcode import QRCode\n```\n\nThe widget itself takes all of the arguments that a normal Textual `Widget`\ntakes, but has the addition of an initial positional argument which is some\ntext to encode. An example use of it could look like:\n\n```python\n    def compose( self ) -> ComposeResult:\n        yield Header()\n        yield QRCode( \"https://textual.textualize.io/\" )\n        yield Footer()\n```\n\nThe widget also has a `encode` method, that lets you update the QR code to\ndisplay something else. For example:\n\n```python\nself.query_one( QRCode ).encode( \"Now I've changed it to this\" )\n```\n\nThe widget will send out one of two messages when an attempt is made to\nencode some content. If the content was encoded fine a `QRCode.Encoded`\nmessage is sent out, which can be caught like this:\n\n```python\ndef on_qrcode_encoded( self, event: QRCode.Encoded ) -> None:\n    # Do something now that the QR code was updated fine.\n```\n\nIf there is an error encoding the content `QRCode.Error` will be sent out.\nthis can be used like this:\n\n```python\ndef on_qrcode_error( self, event: QRCode.Error ) -> None:\n    # Do something about the error.\n```\n\nIn both cases the event sent out has a `qr_code` property which is the\n`QRCode` widget involved.\n\n[//]: # (README.md ends here)\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://github.com/davep/textual-qrcode",
            "keywords": "library widget textual qrcode",
            "license": "License :: OSI Approved :: MIT License",
            "maintainer": "Dave Pearson",
            "maintainer_email": "davep@davep.org",
            "name": "textual-qrcode",
            "package_url": "https://pypi.org/project/textual-qrcode/",
            "platform": null,
            "project_url": "https://pypi.org/project/textual-qrcode/",
            "project_urls": {
                "Homepage": "https://github.com/davep/textual-qrcode"
            },
            "release_url": "https://pypi.org/project/textual-qrcode/0.1.0/",
            "requires_dist": [
                "textual",
                "httpx"
            ],
            "requires_python": ">=3.9",
            "summary": "A library and terminal wrapper around qrenco.de.",
            "version": "0.1.0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 15919501,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "228641d5d498415b3823cb1a731a6f6d",
                    "sha256": "ec7fc3e8c0c1252cb7970aa0b157eeb0e3ef541c119dedd51edae7d211606f71"
                },
                "downloads": -1,
                "filename": "textual_qrcode-0.1.0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "228641d5d498415b3823cb1a731a6f6d",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.9",
                "size": 6413,
                "upload_time": "2022-11-28T21:46:59",
                "upload_time_iso_8601": "2022-11-28T21:46:59.498995Z",
                "url": "https://files.pythonhosted.org/packages/0c/68/0a9e97def54b13e171a84b15e09965508037aa31d54abd9cb7e00e599846/textual_qrcode-0.1.0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}