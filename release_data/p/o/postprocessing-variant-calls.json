{
    "0.1.5": {
        "info": {
            "author": "Ronak Shah",
            "author_email": "shahr2@mskcc.org",
            "bugtrack_url": null,
            "classifiers": [
                "Programming Language :: Python :: 3",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.7",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9"
            ],
            "description": "# Post-processing of variant calls\n\nThis hosts multiple scripts necessary for filtering and processing of variant calls in the vcfs/txt file generated by callers.\n\n## Callers Supported\n`pv` is the main command for the `postprocessing_variant_calls` package see `pv --help` to see supported variant callers commands. \n\n### VarDictJava\n\nThe sub-command `pv vardict` allows users to perform post-processing on VarDictJava output. The two supported inputs to `pv vardict` from VarDictJava are `single` and `case-control` vcfs. \n\nTo specify to `pv vardict`, which input type will be used one of the following sub-commands may be used: \n- `pv vardict single` for single sample vcfs \n- `pv vardict case-control` for case-controlled vcfs. \n\nNext the user can specify, what post-processing should be done. Right now, `postprocessing_variant_calls` supports filtering: \n-  `pv vardict single filter` \n-  `pv vardict case-control filter` \n\nFinally, we can specify the paths and options for our filtering and run our command. Here is an example using the test data provided in this repository: \n\n`pv vardict single filter --inputVcf data/Myeloid200-1.vcf  --tsampleName Myeloid200-1  -ad 1 -o data/single`\n\nThere are various options and input specifications for filtering so see `pv vardict single filter --help` or `pv vardict single case-sontrol --help` for help. \n\nSee `example_calls.sh` for more example calls. \n\n## How the repo was made\n\nTemplate used: https://github.com/yxtay/python-project-template\n\n### Usage\n\n\n#### External dependencies\n\n- [Conda][conda]\n- [Docker][docker]\n- [Make][make]\n\n#### Create environment\n\nUse Conda to create a virtual environment and activate it for the project.\n\n```bash\nconda env create -f environment.yml\nconda activate pv_calls\n```\n\n#### Install dependencies\n\nThen install project dependencies with Poetry.\n\n```bash\nmake deps-install\n```\n\n#### Updating Environment\n\nTo update the environment after initial setup up run: \n\n```bash\nconda env update -f environment.yml\n```\n\ninstead of `conda create`, and then re-run `make deps-install`\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "https://cmo-ci.gitbook.io/postprocessing_variant_calls/",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "postprocessing-variant-calls",
            "package_url": "https://pypi.org/project/postprocessing-variant-calls/",
            "platform": null,
            "project_url": "https://pypi.org/project/postprocessing-variant-calls/",
            "project_urls": {
                "Homepage": "https://cmo-ci.gitbook.io/postprocessing_variant_calls/",
                "Repository": "https://github.com/msk-access/postprocessing_variant_calls"
            },
            "release_url": "https://pypi.org/project/postprocessing-variant-calls/0.1.5/",
            "requires_dist": [
                "typer[all]",
                "PyVCF3"
            ],
            "requires_python": ">=3.7",
            "summary": "This hosts multiple scripts necessary for filtering and processing of variant calls in the vcfs/txt file generated by callers.",
            "version": "0.1.5",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 14978078,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "849f7ab0ffdee32450317c0cd3afb432",
                    "sha256": "d0cc7c5d50561e18d006b7aa7d0bf77337152d48dcb24110930046290f5c281e"
                },
                "downloads": -1,
                "filename": "postprocessing_variant_calls-0.1.5-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "849f7ab0ffdee32450317c0cd3afb432",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.7",
                "size": 8318,
                "upload_time": "2022-09-02T20:09:40",
                "upload_time_iso_8601": "2022-09-02T20:09:40.268727Z",
                "url": "https://files.pythonhosted.org/packages/1a/61/7f1e07afa8236eaef73bbdbaecb82b93cd9c327a992b640ee9f6841b78ba/postprocessing_variant_calls-0.1.5-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "dc39ce4ef08dff4cd97621da24c64992",
                    "sha256": "bf49df60f78d588d281fe69543fc48c93a78047caaea630711b40dc689a256f9"
                },
                "downloads": -1,
                "filename": "postprocessing_variant_calls-0.1.5.tar.gz",
                "has_sig": false,
                "md5_digest": "dc39ce4ef08dff4cd97621da24c64992",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.7",
                "size": 7443,
                "upload_time": "2022-09-02T20:09:41",
                "upload_time_iso_8601": "2022-09-02T20:09:41.691394Z",
                "url": "https://files.pythonhosted.org/packages/0a/73/dd3ff7a19f8dd872bf38d6e5d7a8977b0b4aa5df69fe90f097f62705d443/postprocessing_variant_calls-0.1.5.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}