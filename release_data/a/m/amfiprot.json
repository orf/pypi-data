{
    "0.0.1a0": {
        "info": {
            "author": "Kristian Klein-Wengel",
            "author_email": "kkw@amfitech.dk",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "amfiprot",
            "package_url": "https://pypi.org/project/amfiprot/",
            "platform": null,
            "project_url": "https://pypi.org/project/amfiprot/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/amfiprot/0.0.1a0/",
            "requires_dist": [
                "crcmod",
                "pyusb"
            ],
            "requires_python": ">=3.6",
            "summary": "Core library for Amfiprot",
            "version": "0.0.1a0",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16099403,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "b195901be6444d08eaf08173350a94d1",
                    "sha256": "9248cfe20552b10a041699b71e4c153637718c1584df2201b1650343b2cf9a88"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a0-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "b195901be6444d08eaf08173350a94d1",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 16267,
                "upload_time": "2022-08-08T14:49:54",
                "upload_time_iso_8601": "2022-08-08T14:49:54.077116Z",
                "url": "https://files.pythonhosted.org/packages/92/ed/ad735455ff0523e43fb8e5f69b9237f7efad29087b46df3b8cb010404679/amfiprot-0.0.1a0-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "57b6beabe9ad34fc6ab67a18f98f44a9",
                    "sha256": "cba77e1302f6a0710b826c2f2b3d25e8d2503d7d3015d0c0b3938c726c35edf1"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a0.tar.gz",
                "has_sig": false,
                "md5_digest": "57b6beabe9ad34fc6ab67a18f98f44a9",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 14066,
                "upload_time": "2022-08-08T14:49:56",
                "upload_time_iso_8601": "2022-08-08T14:49:56.547662Z",
                "url": "https://files.pythonhosted.org/packages/66/e9/bdd1194e8d120112f72f54458113a316b9cfbd2603a1bf1cfd2db55521f0/amfiprot-0.0.1a0.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1a1": {
        "info": {
            "author": "Kristian Klein-Wengel",
            "author_email": "kkw@amfitech.dk",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3"
            ],
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "amfiprot",
            "package_url": "https://pypi.org/project/amfiprot/",
            "platform": null,
            "project_url": "https://pypi.org/project/amfiprot/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/amfiprot/0.0.1a1/",
            "requires_dist": [
                "crcmod",
                "pyusb"
            ],
            "requires_python": ">=3.6",
            "summary": "Core library for Amfiprot",
            "version": "0.0.1a1",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16099403,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "2850b2a88a026a0f2348641b0fa3c635",
                    "sha256": "166660b82f0cff63c8b1b1b24e06788b7d0aaa7fc9f2a42732cd3976e07d573f"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a1-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "2850b2a88a026a0f2348641b0fa3c635",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 20000,
                "upload_time": "2022-11-11T12:41:04",
                "upload_time_iso_8601": "2022-11-11T12:41:04.287727Z",
                "url": "https://files.pythonhosted.org/packages/d9/b8/a5d273a65575adc43a7a447c7723e243c7e66bca7523bdccfc35a507119b/amfiprot-0.0.1a1-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "5a3aa68ea55ba7fc8f55e3fd4d8090d0",
                    "sha256": "6627829d6a826ebcd02f84bac24c9877561c1ac16e09fbfd7ee143a4997521d0"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a1.tar.gz",
                "has_sig": false,
                "md5_digest": "5a3aa68ea55ba7fc8f55e3fd4d8090d0",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 19179,
                "upload_time": "2022-11-11T12:41:06",
                "upload_time_iso_8601": "2022-11-11T12:41:06.044283Z",
                "url": "https://files.pythonhosted.org/packages/9a/f8/fd5d49ab44db7d6e75726b1b6c6bbd3bf4caad5ec6b82f6c80b22dfb60d6/amfiprot-0.0.1a1.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    },
    "0.0.1a2": {
        "info": {
            "author": "Kristian Klein-Wengel",
            "author_email": "kkw@amfitech.dk",
            "bugtrack_url": null,
            "classifiers": [
                "License :: OSI Approved :: MIT License",
                "Operating System :: Microsoft :: Windows :: Windows 10",
                "Programming Language :: Python :: 3"
            ],
            "description": "Amfiprot is a communication protocol for embedded devices used and developed by Amfitech. The protocol can be extended with plugins for specific devices implementing the Amfiprot protocol (e.g. the AmfiTrack).\r\n\r\n# Prerequisites\r\n\r\n- Python 3.6 or higher.\r\n- [libusb](https://libusb.info/) in order to communicate with USB devices through `pyusb`\r\n\r\n# Installation\r\n\r\n## Windows\r\n\r\nGet a libusb Windows binary from https://libusb.info/.\r\n\r\nInstall (or update) `amfiprot` with `pip`:\r\n\r\n```shell\r\npip install -U amfiprot\r\n```\r\n\r\n## Linux (Ubuntu)\r\n\r\nInstall `libusb`:\r\n\r\n```shell\r\nsudo apt install libusb-1.0-0-dev\r\n```\r\n\r\nMake sure that your user has access to USB devices. For example, give the `plugdev` group access to USB devices by creating a udev rule:\r\n\r\n```shell\r\necho 'SUBSYSTEM==\"usb\", MODE=\"660\", GROUP=\"plugdev\"' | sudo tee /etc/udev/rules.d/50-pyusb.rules\r\nsudo udevadm control --reload\r\nsudo udevadm trigger\r\n```\r\n\r\nCheck whether you are a member of `plugdev` with:\r\n\r\n```shell\r\ngroups <username>\r\n```\r\n\r\nIf not, add yourself to the group with:\r\n\r\n``` shell\r\nsudo usermod -aG plugdev <username>\r\n```\r\n\r\nFinally, install (or update) `amfiprot` with `pip`:\r\n\r\n```shell\r\npip install -U amfiprot\r\n```\r\n\r\n# Quick start\r\n\r\nThe basic workflow when using the library is:\r\n\r\n1. Create a `Connection` to a device connected directly to the host machine (we call this the \"root node\").\r\n2. Search for `Node`s on the `Connection` (i.e. nodes connected through the root node)\r\n3. Create a `Device` using one of the discovered `Node`s.\r\n4. Start the `Connection`.\r\n5. Communicate with the `Device`.\r\n\r\nExample:\r\n\r\n```python\r\nimport amfiprot\r\n\r\nVENDOR_ID = 0xC17\r\nPRODUCT_ID = 0xD12\r\n\r\nif __name__ == \"__main__\":\r\n    conn = amfiprot.UsbConnection(VENDOR_ID, PRODUCT_ID)\r\n    nodes = conn.find_nodes()\r\n\r\n    print(f\"Found {len(nodes)} node(s).\")\r\n    for node in nodes:\r\n        print(f\"[{node.tx_id}] {node.name}\")\r\n\r\n    dev = amfiprot.Device(nodes[0])\r\n    conn.start()\r\n    \r\n    cfg = dev.config.read_all()\r\n\r\n    while True:\r\n        if dev.packet_available():\r\n            print(dev.get_packet())\r\n```\r\n\r\nThe following sections provide a more in-depth explanation.\r\n\r\n## Discovering and connecting to a root node\r\n\r\nAfter attaching a device to your host machine, you can scan for connected devices (e.g. connected via USB) with:\r\n\r\n```python\r\nphys_devs = amfiprot.UsbConnection.scan_physical_devices()\r\n\r\nfor dev in phys_devs:\r\n    print(dev)\r\n```\r\n\r\nA connection can then be created using a specific physical device:\r\n\r\n```python\r\nconn = amfiprot.UsbConnection(dev['vid'], dev['pid'], dev['serial_number'])\r\n```\r\n\r\nUsing `serial_number` is optional. If none is given, the first device matching the given vendor and product ID is used.\r\n\r\n## Finding nodes\r\n\r\nAfter creating a connection, we can search for nodes that are connected to the root node (e.g. via RF or UART):\r\n\r\n```python\r\nnodes = conn.find_nodes()\r\n```\r\n\r\n`find_nodes()` returns a list of `Node` instances. A `Node` provides a low-level interface to the physical device and can be used to retrieve the `uuid`, `tx_id` and `name` of the device, and send/receive raw packets. It is not recommended to use the `Node` directly, but rather attach it to a `Device` instance.\r\n\r\n## Creating a device\r\n\r\nA `Device` is an abstraction layer on top of a `Node` and is created by injecting a `Node` in the constructor:\r\n\r\n```python\r\ndev = amfiprot.Device(node)\r\n```\r\n\r\nThe `Device` provides a higher-level interface allowing the user to easily:\r\n\r\n- Update the firmware\r\n- Reboot the device\r\n- Read/write configurations\r\n- Read decoded packets\r\n\r\nWe are still able to access the `Node` through the `Device` if necessary:\r\n\r\n```python\r\ntx_id = dev.node.tx_id\r\n```\r\n\r\n## Starting the connection and interacting with the device\r\n\r\nBefore interacting with the `Device`, the `Connection` must be started:\r\n\r\n```python\r\nconn.start()\r\n```\r\n\r\nThis creates a child process that asynchronously sends and receives packets on the specified interface. We can now interact with the `Device` in the main process without worrying about blocking:\r\n\r\n```python\r\ndevice_name = dev.name()\r\nprint(f\"Reading packets from {device_name}...\")\r\n\r\nwhile True:\r\n\tif dev.packet_available():\r\n\t\tprint(dev.get_packet())\r\n```\r\n\r\nWe can access the device configuration through a `Configurator` instance which is automatically created as a member (`dev.config`) of the `Device`:\r\n\r\n```python\r\n# Read the entire configuration as a JSON-like object (a list of dicts)\r\ncfg = dev.config.read_all()\r\n\r\n# Print all parameters\r\nfor category in cfg:\r\n    print(f\"CATEGORY: {category['name']}\")\r\n    for parameter in category['parameters']:\r\n        print(parameter)\r\n```\r\n\r\nThe configuration can be easily saved to and loaded from a `.json` file:\r\n\r\n```python\r\nimport json\r\n\r\n# Write configuration to file\r\nwith open(\"config.json\", \"w\") as outfile:\r\n\tjson.dump(cfg, outfile, indent=4)\r\n\r\n# Read configuration from file and send to device\r\nwith open(\"config.json\", \"r\") as infile:\r\n    new_cfg = json.load(infile)\r\n    dev.config.write_all(new_cfg)\r\n```\r\n\r\n# Contributions and bug reporting\r\n\r\nThe Amfiprot Python package is open-source and the source code can be found on our [Github repository](https://github.com/amfitech/amfiprot). Contributions can be made through pull requests to the `development` branch. Bug reports and feature requests can be created in the [Issues](https://github.com/amfitech/amfiprot/issues) tab.\r\n\r\n",
            "description_content_type": "text/markdown",
            "docs_url": null,
            "download_url": "",
            "downloads": {
                "last_day": -1,
                "last_month": -1,
                "last_week": -1
            },
            "home_page": "",
            "keywords": "",
            "license": "",
            "maintainer": "",
            "maintainer_email": "",
            "name": "amfiprot",
            "package_url": "https://pypi.org/project/amfiprot/",
            "platform": null,
            "project_url": "https://pypi.org/project/amfiprot/",
            "project_urls": null,
            "release_url": "https://pypi.org/project/amfiprot/0.0.1a2/",
            "requires_dist": [
                "crcmod",
                "pyusb"
            ],
            "requires_python": ">=3.6",
            "summary": "Core library for Amfiprot",
            "version": "0.0.1a2",
            "yanked": false,
            "yanked_reason": null
        },
        "last_serial": 16099403,
        "urls": [
            {
                "comment_text": "",
                "digests": {
                    "md5": "a202ca1dff826d3baaa3667200069433",
                    "sha256": "a8671d504b71fc875d65004f2e07be90053a50d2865fb8b413a01441baaa67ff"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a2-py3-none-any.whl",
                "has_sig": false,
                "md5_digest": "a202ca1dff826d3baaa3667200069433",
                "packagetype": "bdist_wheel",
                "python_version": "py3",
                "requires_python": ">=3.6",
                "size": 20073,
                "upload_time": "2022-12-14T12:01:40",
                "upload_time_iso_8601": "2022-12-14T12:01:40.865938Z",
                "url": "https://files.pythonhosted.org/packages/2f/a4/6d57bbfad6576eb51aecdc62867aa6c4f58ed81e0e258d5eff4278cc5dc6/amfiprot-0.0.1a2-py3-none-any.whl",
                "yanked": false,
                "yanked_reason": null
            },
            {
                "comment_text": "",
                "digests": {
                    "md5": "3895d1e0d9933498bf7d6ba3981b415f",
                    "sha256": "81be89a6f546e231759a6bd4cadd9342ea8116ed9af8011097e59c69b50712e3"
                },
                "downloads": -1,
                "filename": "amfiprot-0.0.1a2.tar.gz",
                "has_sig": false,
                "md5_digest": "3895d1e0d9933498bf7d6ba3981b415f",
                "packagetype": "sdist",
                "python_version": "source",
                "requires_python": ">=3.6",
                "size": 19248,
                "upload_time": "2022-12-14T12:01:42",
                "upload_time_iso_8601": "2022-12-14T12:01:42.374662Z",
                "url": "https://files.pythonhosted.org/packages/6b/78/92a6a0bac6c34f6c1c32480dbe8997a0167629b2cb48ba5cdf71c3161c04/amfiprot-0.0.1a2.tar.gz",
                "yanked": false,
                "yanked_reason": null
            }
        ],
        "vulnerabilities": []
    }
}